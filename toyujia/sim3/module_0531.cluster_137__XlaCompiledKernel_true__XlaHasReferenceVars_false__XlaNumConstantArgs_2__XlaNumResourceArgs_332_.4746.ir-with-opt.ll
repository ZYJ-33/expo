target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"
target triple = "nvptx64-nvidia-cuda"

@buffer_for_constant_34 = local_unnamed_addr addrspace(1) constant [64 x i8] c"\00\00\00\80\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", align 128
@buffer_for_constant_32 = local_unnamed_addr addrspace(1) constant [64 x i8] zeroinitializer, align 128
@shared_cache = private unnamed_addr addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache1 = private unnamed_addr addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache2 = private unnamed_addr addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache3 = private unnamed_addr addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache4 = private unnamed_addr addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache5 = private unnamed_addr addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache6 = private unnamed_addr addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache7 = private unnamed_addr addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache8 = private unnamed_addr addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache9 = private unnamed_addr addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache10 = private unnamed_addr addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache11 = private unnamed_addr addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache12 = private unnamed_addr addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache13 = private unnamed_addr addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache14 = private unnamed_addr addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache15 = private unnamed_addr addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache16 = private unnamed_addr addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache17 = private unnamed_addr addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache18 = private unnamed_addr addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache19 = private unnamed_addr addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache20 = private unnamed_addr addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache21 = private unnamed_addr addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache22 = private unnamed_addr addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache23 = private unnamed_addr addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache24 = private unnamed_addr addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache25 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache26 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache27 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache28 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache29 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache30 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache31 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache32 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache33 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache34 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache35 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache36 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache37 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache38 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache39 = private unnamed_addr addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache40 = private unnamed_addr addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache41 = private unnamed_addr addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache42 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache43 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache44 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache45 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache46 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache47 = private unnamed_addr addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache48 = private unnamed_addr addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache49 = private unnamed_addr addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache50 = private unnamed_addr addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache51 = private unnamed_addr addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache52 = private unnamed_addr addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache53 = private unnamed_addr addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache54 = private unnamed_addr addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache55 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache56 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache57 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache58 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache59 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache60 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache61 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache62 = private unnamed_addr addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache63 = private unnamed_addr addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache64 = private unnamed_addr addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache65 = private unnamed_addr addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache66 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache67 = private unnamed_addr addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache68 = private unnamed_addr addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache69 = private unnamed_addr addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache70 = private unnamed_addr addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache71 = private unnamed_addr addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache72 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache73 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache74 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache75 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache76 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache77 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache78 = private unnamed_addr addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef

; Function Attrs: nounwind
define void @fusion_564(ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg3, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg4, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg5) local_unnamed_addr #0 {
entry:
  %arg5281 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg4279 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg3277 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg2275 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg1273 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg0271 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !193
  %trunc.not = icmp eq i32 %0, 0
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !194
  %2 = shl nuw nsw i32 %1, 1
  %3 = zext i32 %2 to i64
  br i1 %trunc.not, label %reduce-group-0-true, label %reduce-group-1-true

common.ret:                                       ; preds = %intra_warp_reduce_write-after, %reduction_write_output-true, %inter_warp_reduce-true.cont.cont.cont.cont.cont.cont, %inter_warp_reduce-true178.cont.cont.cont.cont.cont.cont, %reduction_write_output-true196, %intra_warp_reduce_write-after177
  ret void

reduce-group-0-true:                              ; preds = %entry
  %Arg_1.2 = getelementptr float, ptr addrspace(1) %arg1273, i64 %3
  %4 = load <2 x float>, ptr addrspace(1) %Arg_1.2, align 8, !invariant.load !195
  %Arg_1.23403 = extractelement <2 x float> %4, i32 0
  %Arg_1.29404 = extractelement <2 x float> %4, i32 1
  %Arg_0.1 = getelementptr float, ptr addrspace(1) %arg0271, i64 %3
  %5 = load <2 x float>, ptr addrspace(1) %Arg_0.1, align 8, !invariant.load !195
  %Arg_0.14419 = extractelement <2 x float> %5, i32 0
  %Arg_0.111420 = extractelement <2 x float> %5, i32 1
  %multiply.5 = fmul float %Arg_1.23403, %Arg_0.14419
  %subtract.8 = fsub float 1.000000e+00, %Arg_0.14419
  %multiply.9 = fmul float %multiply.5, %subtract.8
  %multiply.512 = fmul float %Arg_1.29404, %Arg_0.111420
  %subtract.816 = fsub float 1.000000e+00, %Arg_0.111420
  %multiply.917 = fmul float %multiply.512, %subtract.816
  %add.15.i230 = fadd float %multiply.9, %multiply.917
  %Arg_1.2.1288 = getelementptr inbounds float, ptr addrspace(1) %Arg_1.2, i64 1024
  %6 = load <2 x float>, ptr addrspace(1) %Arg_1.2.1288, align 8, !invariant.load !195
  %Arg_1.23.1405 = extractelement <2 x float> %6, i32 0
  %Arg_1.29.1406 = extractelement <2 x float> %6, i32 1
  %Arg_0.1.1290 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 1024
  %7 = load <2 x float>, ptr addrspace(1) %Arg_0.1.1290, align 8, !invariant.load !195
  %Arg_0.14.1421 = extractelement <2 x float> %7, i32 0
  %Arg_0.111.1422 = extractelement <2 x float> %7, i32 1
  %multiply.5.1 = fmul float %Arg_1.23.1405, %Arg_0.14.1421
  %subtract.8.1 = fsub float 1.000000e+00, %Arg_0.14.1421
  %multiply.9.1 = fmul float %multiply.5.1, %subtract.8.1
  %add.15.i229.1 = fadd float %add.15.i230, %multiply.9.1
  %multiply.512.1 = fmul float %Arg_1.29.1406, %Arg_0.111.1422
  %subtract.816.1 = fsub float 1.000000e+00, %Arg_0.111.1422
  %multiply.917.1 = fmul float %multiply.512.1, %subtract.816.1
  %add.15.i230.1 = fadd float %add.15.i229.1, %multiply.917.1
  %Arg_1.2.2296 = getelementptr inbounds float, ptr addrspace(1) %Arg_1.2, i64 2048
  %8 = load <2 x float>, ptr addrspace(1) %Arg_1.2.2296, align 8, !invariant.load !195
  %Arg_1.23.2407 = extractelement <2 x float> %8, i32 0
  %Arg_1.29.2408 = extractelement <2 x float> %8, i32 1
  %Arg_0.1.2298 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 2048
  %9 = load <2 x float>, ptr addrspace(1) %Arg_0.1.2298, align 8, !invariant.load !195
  %Arg_0.14.2423 = extractelement <2 x float> %9, i32 0
  %Arg_0.111.2424 = extractelement <2 x float> %9, i32 1
  %multiply.5.2 = fmul float %Arg_1.23.2407, %Arg_0.14.2423
  %subtract.8.2 = fsub float 1.000000e+00, %Arg_0.14.2423
  %multiply.9.2 = fmul float %multiply.5.2, %subtract.8.2
  %add.15.i229.2 = fadd float %add.15.i230.1, %multiply.9.2
  %multiply.512.2 = fmul float %Arg_1.29.2408, %Arg_0.111.2424
  %subtract.816.2 = fsub float 1.000000e+00, %Arg_0.111.2424
  %multiply.917.2 = fmul float %multiply.512.2, %subtract.816.2
  %add.15.i230.2 = fadd float %add.15.i229.2, %multiply.917.2
  %Arg_1.2.3304 = getelementptr inbounds float, ptr addrspace(1) %Arg_1.2, i64 3072
  %10 = load <2 x float>, ptr addrspace(1) %Arg_1.2.3304, align 8, !invariant.load !195
  %Arg_1.23.3409 = extractelement <2 x float> %10, i32 0
  %Arg_1.29.3410 = extractelement <2 x float> %10, i32 1
  %Arg_0.1.3306 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 3072
  %11 = load <2 x float>, ptr addrspace(1) %Arg_0.1.3306, align 8, !invariant.load !195
  %Arg_0.14.3425 = extractelement <2 x float> %11, i32 0
  %Arg_0.111.3426 = extractelement <2 x float> %11, i32 1
  %multiply.5.3 = fmul float %Arg_1.23.3409, %Arg_0.14.3425
  %subtract.8.3 = fsub float 1.000000e+00, %Arg_0.14.3425
  %multiply.9.3 = fmul float %multiply.5.3, %subtract.8.3
  %add.15.i229.3 = fadd float %add.15.i230.2, %multiply.9.3
  %multiply.512.3 = fmul float %Arg_1.29.3410, %Arg_0.111.3426
  %subtract.816.3 = fsub float 1.000000e+00, %Arg_0.111.3426
  %multiply.917.3 = fmul float %multiply.512.3, %subtract.816.3
  %add.15.i230.3 = fadd float %add.15.i229.3, %multiply.917.3
  %Arg_1.2.4312 = getelementptr inbounds float, ptr addrspace(1) %Arg_1.2, i64 4096
  %12 = load <2 x float>, ptr addrspace(1) %Arg_1.2.4312, align 8, !invariant.load !195
  %Arg_1.23.4411 = extractelement <2 x float> %12, i32 0
  %Arg_1.29.4412 = extractelement <2 x float> %12, i32 1
  %Arg_0.1.4314 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 4096
  %13 = load <2 x float>, ptr addrspace(1) %Arg_0.1.4314, align 8, !invariant.load !195
  %Arg_0.14.4427 = extractelement <2 x float> %13, i32 0
  %Arg_0.111.4428 = extractelement <2 x float> %13, i32 1
  %multiply.5.4 = fmul float %Arg_1.23.4411, %Arg_0.14.4427
  %subtract.8.4 = fsub float 1.000000e+00, %Arg_0.14.4427
  %multiply.9.4 = fmul float %multiply.5.4, %subtract.8.4
  %add.15.i229.4 = fadd float %add.15.i230.3, %multiply.9.4
  %multiply.512.4 = fmul float %Arg_1.29.4412, %Arg_0.111.4428
  %subtract.816.4 = fsub float 1.000000e+00, %Arg_0.111.4428
  %multiply.917.4 = fmul float %multiply.512.4, %subtract.816.4
  %add.15.i230.4 = fadd float %add.15.i229.4, %multiply.917.4
  %Arg_1.2.5320 = getelementptr inbounds float, ptr addrspace(1) %Arg_1.2, i64 5120
  %14 = load <2 x float>, ptr addrspace(1) %Arg_1.2.5320, align 8, !invariant.load !195
  %Arg_1.23.5413 = extractelement <2 x float> %14, i32 0
  %Arg_1.29.5414 = extractelement <2 x float> %14, i32 1
  %Arg_0.1.5322 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 5120
  %15 = load <2 x float>, ptr addrspace(1) %Arg_0.1.5322, align 8, !invariant.load !195
  %Arg_0.14.5429 = extractelement <2 x float> %15, i32 0
  %Arg_0.111.5430 = extractelement <2 x float> %15, i32 1
  %multiply.5.5 = fmul float %Arg_1.23.5413, %Arg_0.14.5429
  %subtract.8.5 = fsub float 1.000000e+00, %Arg_0.14.5429
  %multiply.9.5 = fmul float %multiply.5.5, %subtract.8.5
  %add.15.i229.5 = fadd float %add.15.i230.4, %multiply.9.5
  %multiply.512.5 = fmul float %Arg_1.29.5414, %Arg_0.111.5430
  %subtract.816.5 = fsub float 1.000000e+00, %Arg_0.111.5430
  %multiply.917.5 = fmul float %multiply.512.5, %subtract.816.5
  %add.15.i230.5 = fadd float %add.15.i229.5, %multiply.917.5
  %Arg_1.2.6328 = getelementptr inbounds float, ptr addrspace(1) %Arg_1.2, i64 6144
  %16 = load <2 x float>, ptr addrspace(1) %Arg_1.2.6328, align 8, !invariant.load !195
  %Arg_1.23.6415 = extractelement <2 x float> %16, i32 0
  %Arg_1.29.6416 = extractelement <2 x float> %16, i32 1
  %Arg_0.1.6330 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 6144
  %17 = load <2 x float>, ptr addrspace(1) %Arg_0.1.6330, align 8, !invariant.load !195
  %Arg_0.14.6431 = extractelement <2 x float> %17, i32 0
  %Arg_0.111.6432 = extractelement <2 x float> %17, i32 1
  %multiply.5.6 = fmul float %Arg_1.23.6415, %Arg_0.14.6431
  %subtract.8.6 = fsub float 1.000000e+00, %Arg_0.14.6431
  %multiply.9.6 = fmul float %multiply.5.6, %subtract.8.6
  %add.15.i229.6 = fadd float %add.15.i230.5, %multiply.9.6
  %multiply.512.6 = fmul float %Arg_1.29.6416, %Arg_0.111.6432
  %subtract.816.6 = fsub float 1.000000e+00, %Arg_0.111.6432
  %multiply.917.6 = fmul float %multiply.512.6, %subtract.816.6
  %add.15.i230.6 = fadd float %add.15.i229.6, %multiply.917.6
  %Arg_1.2.7336 = getelementptr inbounds float, ptr addrspace(1) %Arg_1.2, i64 7168
  %18 = load <2 x float>, ptr addrspace(1) %Arg_1.2.7336, align 8, !invariant.load !195
  %Arg_1.23.7417 = extractelement <2 x float> %18, i32 0
  %Arg_1.29.7418 = extractelement <2 x float> %18, i32 1
  %Arg_0.1.7338 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 7168
  %19 = load <2 x float>, ptr addrspace(1) %Arg_0.1.7338, align 8, !invariant.load !195
  %Arg_0.14.7433 = extractelement <2 x float> %19, i32 0
  %Arg_0.111.7434 = extractelement <2 x float> %19, i32 1
  %multiply.5.7 = fmul float %Arg_1.23.7417, %Arg_0.14.7433
  %subtract.8.7 = fsub float 1.000000e+00, %Arg_0.14.7433
  %multiply.9.7 = fmul float %multiply.5.7, %subtract.8.7
  %add.15.i229.7 = fadd float %add.15.i230.6, %multiply.9.7
  %multiply.512.7 = fmul float %Arg_1.29.7418, %Arg_0.111.7434
  %subtract.816.7 = fsub float 1.000000e+00, %Arg_0.111.7434
  %multiply.917.7 = fmul float %multiply.512.7, %subtract.816.7
  %add.15.i230.7 = fadd float %add.15.i229.7, %multiply.917.7
  %lane_id = and i32 %1, 31
  %20 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i230.7, i32 16, i32 31)
  %add.15.i = fadd float %add.15.i230.7, %20
  %21 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i, i32 8, i32 31)
  %add.15.i225 = fadd float %add.15.i, %21
  %22 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i225, i32 4, i32 31)
  %add.15.i226 = fadd float %add.15.i225, %22
  %23 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i226, i32 2, i32 31)
  %add.15.i227 = fadd float %add.15.i226, %23
  %24 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i227, i32 1, i32 31)
  %25 = icmp eq i32 %lane_id, 0
  %26 = lshr i32 %1, 5
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache, i64 0, i64 0, i64 0, i64 %27
  %add.15.i228 = fadd float %add.15.i227, %24
  br i1 %25, label %intra_warp_reduce_write-true, label %intra_warp_reduce_write-after

intra_warp_reduce_write-after:                    ; preds = %intra_warp_reduce_write-true, %reduce-group-0-true
  tail call void @llvm.nvvm.barrier0()
  %29 = icmp ult i32 %1, 32
  br i1 %29, label %inter_warp_reduce-true, label %common.ret

intra_warp_reduce_write-true:                     ; preds = %reduce-group-0-true
  store float %add.15.i228, ptr addrspace(3) %28, align 4
  br label %intra_warp_reduce_write-after

inter_warp_reduce-true:                           ; preds = %intra_warp_reduce_write-after
  %30 = zext i32 %lane_id to i64
  %31 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache, i64 0, i64 0, i64 0, i64 %30
  %32 = icmp ult i32 %1, 16
  br i1 %32, label %inter_warp_reduce-true.then256, label %inter_warp_reduce-true.cont255

inter_warp_reduce-true.then256:                   ; preds = %inter_warp_reduce-true
  %partial_reduction_result66.then.val = load float, ptr addrspace(3) %31, align 4
  br label %inter_warp_reduce-true.cont255

inter_warp_reduce-true.cont255:                   ; preds = %inter_warp_reduce-true, %inter_warp_reduce-true.then256
  %partial_reduction_result66 = phi float [ %partial_reduction_result66.then.val, %inter_warp_reduce-true.then256 ], [ -0.000000e+00, %inter_warp_reduce-true ]
  %33 = icmp ult i32 %1, 16
  %34 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result66, i32 16, i32 31)
  br i1 %33, label %inter_warp_reduce-true.then, label %inter_warp_reduce-true.cont

inter_warp_reduce-true.then:                      ; preds = %inter_warp_reduce-true.cont255
  %.val205.then.val = load float, ptr addrspace(3) %31, align 4
  br label %inter_warp_reduce-true.cont

inter_warp_reduce-true.cont:                      ; preds = %inter_warp_reduce-true.cont255, %inter_warp_reduce-true.then
  %.val205 = phi float [ %.val205.then.val, %inter_warp_reduce-true.then ], [ -0.000000e+00, %inter_warp_reduce-true.cont255 ]
  %35 = icmp ult i32 %1, 16
  %add.15.i231 = fadd float %34, %.val205
  br i1 %35, label %inter_warp_reduce-true.cont.then254, label %inter_warp_reduce-true.cont.cont253

inter_warp_reduce-true.cont.then254:              ; preds = %inter_warp_reduce-true.cont
  store float %add.15.i231, ptr addrspace(3) %31, align 4
  br label %inter_warp_reduce-true.cont.cont253

inter_warp_reduce-true.cont.cont253:              ; preds = %inter_warp_reduce-true.cont, %inter_warp_reduce-true.cont.then254
  %initial_value_addr.0 = phi float [ -0.000000e+00, %inter_warp_reduce-true.cont.then254 ], [ %add.15.i231, %inter_warp_reduce-true.cont ]
  %36 = icmp ult i32 %1, 16
  %37 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i231, i32 8, i32 31)
  br i1 %36, label %inter_warp_reduce-true.cont.then, label %inter_warp_reduce-true.cont.cont

inter_warp_reduce-true.cont.then:                 ; preds = %inter_warp_reduce-true.cont.cont253
  %.val204.then.val = load float, ptr addrspace(3) %31, align 4
  br label %inter_warp_reduce-true.cont.cont

inter_warp_reduce-true.cont.cont:                 ; preds = %inter_warp_reduce-true.cont.cont253, %inter_warp_reduce-true.cont.then
  %.val204 = phi float [ %.val204.then.val, %inter_warp_reduce-true.cont.then ], [ %initial_value_addr.0, %inter_warp_reduce-true.cont.cont253 ]
  %38 = icmp ult i32 %1, 16
  %add.15.i232 = fadd float %37, %.val204
  br i1 %38, label %inter_warp_reduce-true.cont.cont.then252, label %inter_warp_reduce-true.cont.cont.cont251

inter_warp_reduce-true.cont.cont.then252:         ; preds = %inter_warp_reduce-true.cont.cont
  store float %add.15.i232, ptr addrspace(3) %31, align 4
  br label %inter_warp_reduce-true.cont.cont.cont251

inter_warp_reduce-true.cont.cont.cont251:         ; preds = %inter_warp_reduce-true.cont.cont, %inter_warp_reduce-true.cont.cont.then252
  %initial_value_addr.1 = phi float [ %initial_value_addr.0, %inter_warp_reduce-true.cont.cont.then252 ], [ %add.15.i232, %inter_warp_reduce-true.cont.cont ]
  %39 = icmp ult i32 %1, 16
  %40 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i232, i32 4, i32 31)
  br i1 %39, label %inter_warp_reduce-true.cont.cont.then, label %inter_warp_reduce-true.cont.cont.cont

inter_warp_reduce-true.cont.cont.then:            ; preds = %inter_warp_reduce-true.cont.cont.cont251
  %.val203.then.val = load float, ptr addrspace(3) %31, align 4
  br label %inter_warp_reduce-true.cont.cont.cont

inter_warp_reduce-true.cont.cont.cont:            ; preds = %inter_warp_reduce-true.cont.cont.cont251, %inter_warp_reduce-true.cont.cont.then
  %.val203 = phi float [ %.val203.then.val, %inter_warp_reduce-true.cont.cont.then ], [ %initial_value_addr.1, %inter_warp_reduce-true.cont.cont.cont251 ]
  %41 = icmp ult i32 %1, 16
  %add.15.i233 = fadd float %40, %.val203
  br i1 %41, label %inter_warp_reduce-true.cont.cont.cont.then250, label %inter_warp_reduce-true.cont.cont.cont.cont249

inter_warp_reduce-true.cont.cont.cont.then250:    ; preds = %inter_warp_reduce-true.cont.cont.cont
  store float %add.15.i233, ptr addrspace(3) %31, align 4
  br label %inter_warp_reduce-true.cont.cont.cont.cont249

inter_warp_reduce-true.cont.cont.cont.cont249:    ; preds = %inter_warp_reduce-true.cont.cont.cont, %inter_warp_reduce-true.cont.cont.cont.then250
  %initial_value_addr.2 = phi float [ %initial_value_addr.1, %inter_warp_reduce-true.cont.cont.cont.then250 ], [ %add.15.i233, %inter_warp_reduce-true.cont.cont.cont ]
  %42 = icmp ult i32 %1, 16
  %43 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i233, i32 2, i32 31)
  br i1 %42, label %inter_warp_reduce-true.cont.cont.cont.then, label %inter_warp_reduce-true.cont.cont.cont.cont

inter_warp_reduce-true.cont.cont.cont.then:       ; preds = %inter_warp_reduce-true.cont.cont.cont.cont249
  %.val202.then.val = load float, ptr addrspace(3) %31, align 4
  br label %inter_warp_reduce-true.cont.cont.cont.cont

inter_warp_reduce-true.cont.cont.cont.cont:       ; preds = %inter_warp_reduce-true.cont.cont.cont.cont249, %inter_warp_reduce-true.cont.cont.cont.then
  %.val202 = phi float [ %.val202.then.val, %inter_warp_reduce-true.cont.cont.cont.then ], [ %initial_value_addr.2, %inter_warp_reduce-true.cont.cont.cont.cont249 ]
  %44 = icmp ult i32 %1, 16
  %add.15.i234 = fadd float %43, %.val202
  br i1 %44, label %inter_warp_reduce-true.cont.cont.cont.cont.then248, label %inter_warp_reduce-true.cont.cont.cont.cont.cont247

inter_warp_reduce-true.cont.cont.cont.cont.then248: ; preds = %inter_warp_reduce-true.cont.cont.cont.cont
  store float %add.15.i234, ptr addrspace(3) %31, align 4
  br label %inter_warp_reduce-true.cont.cont.cont.cont.cont247

inter_warp_reduce-true.cont.cont.cont.cont.cont247: ; preds = %inter_warp_reduce-true.cont.cont.cont.cont, %inter_warp_reduce-true.cont.cont.cont.cont.then248
  %initial_value_addr.3 = phi float [ %initial_value_addr.2, %inter_warp_reduce-true.cont.cont.cont.cont.then248 ], [ %add.15.i234, %inter_warp_reduce-true.cont.cont.cont.cont ]
  %45 = icmp ult i32 %1, 16
  %46 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i234, i32 1, i32 31)
  br i1 %45, label %inter_warp_reduce-true.cont.cont.cont.cont.then, label %inter_warp_reduce-true.cont.cont.cont.cont.cont

inter_warp_reduce-true.cont.cont.cont.cont.then:  ; preds = %inter_warp_reduce-true.cont.cont.cont.cont.cont247
  %.val.then.val = load float, ptr addrspace(3) %31, align 4
  br label %inter_warp_reduce-true.cont.cont.cont.cont.cont

inter_warp_reduce-true.cont.cont.cont.cont.cont:  ; preds = %inter_warp_reduce-true.cont.cont.cont.cont.cont247, %inter_warp_reduce-true.cont.cont.cont.cont.then
  %.val = phi float [ %.val.then.val, %inter_warp_reduce-true.cont.cont.cont.cont.then ], [ %initial_value_addr.3, %inter_warp_reduce-true.cont.cont.cont.cont.cont247 ]
  %47 = icmp ult i32 %1, 16
  %add.15.i235 = fadd float %46, %.val
  br i1 %47, label %inter_warp_reduce-true.cont.cont.cont.cont.cont.then, label %inter_warp_reduce-true.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true.cont.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true.cont.cont.cont.cont.cont
  store float %add.15.i235, ptr addrspace(3) %31, align 4
  br label %inter_warp_reduce-true.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true.cont.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true.cont.cont.cont.cont.cont, %inter_warp_reduce-true.cont.cont.cont.cont.cont.then
  %48 = icmp eq i32 %1, 0
  br i1 %48, label %reduction_write_output-true, label %common.ret

reduction_write_output-true:                      ; preds = %inter_warp_reduce-true.cont.cont.cont.cont.cont.cont
  store float %add.15.i235, ptr addrspace(1) %arg4279, align 128
  br label %common.ret

reduce-group-1-true:                              ; preds = %entry
  %Arg_3.4 = getelementptr float, ptr addrspace(1) %arg3277, i64 %3
  %49 = load <2 x float>, ptr addrspace(1) %Arg_3.4, align 8, !invariant.load !195
  %Arg_3.4108435 = extractelement <2 x float> %49, i32 0
  %Arg_3.4116436 = extractelement <2 x float> %49, i32 1
  %Arg_2.3 = getelementptr float, ptr addrspace(1) %arg2275, i64 %3
  %50 = load <2 x float>, ptr addrspace(1) %Arg_2.3, align 8, !invariant.load !195
  %Arg_2.3109451 = extractelement <2 x float> %50, i32 0
  %Arg_2.3118452 = extractelement <2 x float> %50, i32 1
  %multiply.17 = fmul float %Arg_3.4108435, %Arg_2.3109451
  %subtract.18 = fsub float 1.000000e+00, %Arg_2.3109451
  %multiply.19 = fmul float %multiply.17, %subtract.18
  %multiply.17119 = fmul float %Arg_3.4116436, %Arg_2.3118452
  %subtract.18123 = fsub float 1.000000e+00, %Arg_2.3118452
  %multiply.19124 = fmul float %multiply.17119, %subtract.18123
  %add.24.i241 = fadd float %multiply.19, %multiply.19124
  %Arg_3.4.1348 = getelementptr inbounds float, ptr addrspace(1) %Arg_3.4, i64 1024
  %51 = load <2 x float>, ptr addrspace(1) %Arg_3.4.1348, align 8, !invariant.load !195
  %Arg_3.4108.1437 = extractelement <2 x float> %51, i32 0
  %Arg_3.4116.1438 = extractelement <2 x float> %51, i32 1
  %Arg_2.3.1350 = getelementptr inbounds float, ptr addrspace(1) %Arg_2.3, i64 1024
  %52 = load <2 x float>, ptr addrspace(1) %Arg_2.3.1350, align 8, !invariant.load !195
  %Arg_2.3109.1453 = extractelement <2 x float> %52, i32 0
  %Arg_2.3118.1454 = extractelement <2 x float> %52, i32 1
  %multiply.17.1 = fmul float %Arg_3.4108.1437, %Arg_2.3109.1453
  %subtract.18.1 = fsub float 1.000000e+00, %Arg_2.3109.1453
  %multiply.19.1 = fmul float %multiply.17.1, %subtract.18.1
  %add.24.i240.1 = fadd float %add.24.i241, %multiply.19.1
  %multiply.17119.1 = fmul float %Arg_3.4116.1438, %Arg_2.3118.1454
  %subtract.18123.1 = fsub float 1.000000e+00, %Arg_2.3118.1454
  %multiply.19124.1 = fmul float %multiply.17119.1, %subtract.18123.1
  %add.24.i241.1 = fadd float %add.24.i240.1, %multiply.19124.1
  %Arg_3.4.2356 = getelementptr inbounds float, ptr addrspace(1) %Arg_3.4, i64 2048
  %53 = load <2 x float>, ptr addrspace(1) %Arg_3.4.2356, align 8, !invariant.load !195
  %Arg_3.4108.2439 = extractelement <2 x float> %53, i32 0
  %Arg_3.4116.2440 = extractelement <2 x float> %53, i32 1
  %Arg_2.3.2358 = getelementptr inbounds float, ptr addrspace(1) %Arg_2.3, i64 2048
  %54 = load <2 x float>, ptr addrspace(1) %Arg_2.3.2358, align 8, !invariant.load !195
  %Arg_2.3109.2455 = extractelement <2 x float> %54, i32 0
  %Arg_2.3118.2456 = extractelement <2 x float> %54, i32 1
  %multiply.17.2 = fmul float %Arg_3.4108.2439, %Arg_2.3109.2455
  %subtract.18.2 = fsub float 1.000000e+00, %Arg_2.3109.2455
  %multiply.19.2 = fmul float %multiply.17.2, %subtract.18.2
  %add.24.i240.2 = fadd float %add.24.i241.1, %multiply.19.2
  %multiply.17119.2 = fmul float %Arg_3.4116.2440, %Arg_2.3118.2456
  %subtract.18123.2 = fsub float 1.000000e+00, %Arg_2.3118.2456
  %multiply.19124.2 = fmul float %multiply.17119.2, %subtract.18123.2
  %add.24.i241.2 = fadd float %add.24.i240.2, %multiply.19124.2
  %Arg_3.4.3364 = getelementptr inbounds float, ptr addrspace(1) %Arg_3.4, i64 3072
  %55 = load <2 x float>, ptr addrspace(1) %Arg_3.4.3364, align 8, !invariant.load !195
  %Arg_3.4108.3441 = extractelement <2 x float> %55, i32 0
  %Arg_3.4116.3442 = extractelement <2 x float> %55, i32 1
  %Arg_2.3.3366 = getelementptr inbounds float, ptr addrspace(1) %Arg_2.3, i64 3072
  %56 = load <2 x float>, ptr addrspace(1) %Arg_2.3.3366, align 8, !invariant.load !195
  %Arg_2.3109.3457 = extractelement <2 x float> %56, i32 0
  %Arg_2.3118.3458 = extractelement <2 x float> %56, i32 1
  %multiply.17.3 = fmul float %Arg_3.4108.3441, %Arg_2.3109.3457
  %subtract.18.3 = fsub float 1.000000e+00, %Arg_2.3109.3457
  %multiply.19.3 = fmul float %multiply.17.3, %subtract.18.3
  %add.24.i240.3 = fadd float %add.24.i241.2, %multiply.19.3
  %multiply.17119.3 = fmul float %Arg_3.4116.3442, %Arg_2.3118.3458
  %subtract.18123.3 = fsub float 1.000000e+00, %Arg_2.3118.3458
  %multiply.19124.3 = fmul float %multiply.17119.3, %subtract.18123.3
  %add.24.i241.3 = fadd float %add.24.i240.3, %multiply.19124.3
  %Arg_3.4.4372 = getelementptr inbounds float, ptr addrspace(1) %Arg_3.4, i64 4096
  %57 = load <2 x float>, ptr addrspace(1) %Arg_3.4.4372, align 8, !invariant.load !195
  %Arg_3.4108.4443 = extractelement <2 x float> %57, i32 0
  %Arg_3.4116.4444 = extractelement <2 x float> %57, i32 1
  %Arg_2.3.4374 = getelementptr inbounds float, ptr addrspace(1) %Arg_2.3, i64 4096
  %58 = load <2 x float>, ptr addrspace(1) %Arg_2.3.4374, align 8, !invariant.load !195
  %Arg_2.3109.4459 = extractelement <2 x float> %58, i32 0
  %Arg_2.3118.4460 = extractelement <2 x float> %58, i32 1
  %multiply.17.4 = fmul float %Arg_3.4108.4443, %Arg_2.3109.4459
  %subtract.18.4 = fsub float 1.000000e+00, %Arg_2.3109.4459
  %multiply.19.4 = fmul float %multiply.17.4, %subtract.18.4
  %add.24.i240.4 = fadd float %add.24.i241.3, %multiply.19.4
  %multiply.17119.4 = fmul float %Arg_3.4116.4444, %Arg_2.3118.4460
  %subtract.18123.4 = fsub float 1.000000e+00, %Arg_2.3118.4460
  %multiply.19124.4 = fmul float %multiply.17119.4, %subtract.18123.4
  %add.24.i241.4 = fadd float %add.24.i240.4, %multiply.19124.4
  %Arg_3.4.5380 = getelementptr inbounds float, ptr addrspace(1) %Arg_3.4, i64 5120
  %59 = load <2 x float>, ptr addrspace(1) %Arg_3.4.5380, align 8, !invariant.load !195
  %Arg_3.4108.5445 = extractelement <2 x float> %59, i32 0
  %Arg_3.4116.5446 = extractelement <2 x float> %59, i32 1
  %Arg_2.3.5382 = getelementptr inbounds float, ptr addrspace(1) %Arg_2.3, i64 5120
  %60 = load <2 x float>, ptr addrspace(1) %Arg_2.3.5382, align 8, !invariant.load !195
  %Arg_2.3109.5461 = extractelement <2 x float> %60, i32 0
  %Arg_2.3118.5462 = extractelement <2 x float> %60, i32 1
  %multiply.17.5 = fmul float %Arg_3.4108.5445, %Arg_2.3109.5461
  %subtract.18.5 = fsub float 1.000000e+00, %Arg_2.3109.5461
  %multiply.19.5 = fmul float %multiply.17.5, %subtract.18.5
  %add.24.i240.5 = fadd float %add.24.i241.4, %multiply.19.5
  %multiply.17119.5 = fmul float %Arg_3.4116.5446, %Arg_2.3118.5462
  %subtract.18123.5 = fsub float 1.000000e+00, %Arg_2.3118.5462
  %multiply.19124.5 = fmul float %multiply.17119.5, %subtract.18123.5
  %add.24.i241.5 = fadd float %add.24.i240.5, %multiply.19124.5
  %Arg_3.4.6388 = getelementptr inbounds float, ptr addrspace(1) %Arg_3.4, i64 6144
  %61 = load <2 x float>, ptr addrspace(1) %Arg_3.4.6388, align 8, !invariant.load !195
  %Arg_3.4108.6447 = extractelement <2 x float> %61, i32 0
  %Arg_3.4116.6448 = extractelement <2 x float> %61, i32 1
  %Arg_2.3.6390 = getelementptr inbounds float, ptr addrspace(1) %Arg_2.3, i64 6144
  %62 = load <2 x float>, ptr addrspace(1) %Arg_2.3.6390, align 8, !invariant.load !195
  %Arg_2.3109.6463 = extractelement <2 x float> %62, i32 0
  %Arg_2.3118.6464 = extractelement <2 x float> %62, i32 1
  %multiply.17.6 = fmul float %Arg_3.4108.6447, %Arg_2.3109.6463
  %subtract.18.6 = fsub float 1.000000e+00, %Arg_2.3109.6463
  %multiply.19.6 = fmul float %multiply.17.6, %subtract.18.6
  %add.24.i240.6 = fadd float %add.24.i241.5, %multiply.19.6
  %multiply.17119.6 = fmul float %Arg_3.4116.6448, %Arg_2.3118.6464
  %subtract.18123.6 = fsub float 1.000000e+00, %Arg_2.3118.6464
  %multiply.19124.6 = fmul float %multiply.17119.6, %subtract.18123.6
  %add.24.i241.6 = fadd float %add.24.i240.6, %multiply.19124.6
  %Arg_3.4.7396 = getelementptr inbounds float, ptr addrspace(1) %Arg_3.4, i64 7168
  %63 = load <2 x float>, ptr addrspace(1) %Arg_3.4.7396, align 8, !invariant.load !195
  %Arg_3.4108.7449 = extractelement <2 x float> %63, i32 0
  %Arg_3.4116.7450 = extractelement <2 x float> %63, i32 1
  %Arg_2.3.7398 = getelementptr inbounds float, ptr addrspace(1) %Arg_2.3, i64 7168
  %64 = load <2 x float>, ptr addrspace(1) %Arg_2.3.7398, align 8, !invariant.load !195
  %Arg_2.3109.7465 = extractelement <2 x float> %64, i32 0
  %Arg_2.3118.7466 = extractelement <2 x float> %64, i32 1
  %multiply.17.7 = fmul float %Arg_3.4108.7449, %Arg_2.3109.7465
  %subtract.18.7 = fsub float 1.000000e+00, %Arg_2.3109.7465
  %multiply.19.7 = fmul float %multiply.17.7, %subtract.18.7
  %add.24.i240.7 = fadd float %add.24.i241.6, %multiply.19.7
  %multiply.17119.7 = fmul float %Arg_3.4116.7450, %Arg_2.3118.7466
  %subtract.18123.7 = fsub float 1.000000e+00, %Arg_2.3118.7466
  %multiply.19124.7 = fmul float %multiply.17119.7, %subtract.18123.7
  %add.24.i241.7 = fadd float %add.24.i240.7, %multiply.19124.7
  %lane_id86 = and i32 %1, 31
  %65 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.24.i241.7, i32 16, i32 31)
  %add.24.i = fadd float %add.24.i241.7, %65
  %66 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.24.i, i32 8, i32 31)
  %add.24.i236 = fadd float %add.24.i, %66
  %67 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.24.i236, i32 4, i32 31)
  %add.24.i237 = fadd float %add.24.i236, %67
  %68 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.24.i237, i32 2, i32 31)
  %add.24.i238 = fadd float %add.24.i237, %68
  %69 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.24.i238, i32 1, i32 31)
  %70 = icmp eq i32 %lane_id86, 0
  %71 = lshr i32 %1, 5
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache1, i64 0, i64 0, i64 0, i64 %72
  %add.24.i239 = fadd float %add.24.i238, %69
  br i1 %70, label %intra_warp_reduce_write-true176, label %intra_warp_reduce_write-after177

intra_warp_reduce_write-after177:                 ; preds = %intra_warp_reduce_write-true176, %reduce-group-1-true
  tail call void @llvm.nvvm.barrier0()
  %74 = icmp ult i32 %1, 32
  br i1 %74, label %inter_warp_reduce-true178, label %common.ret

intra_warp_reduce_write-true176:                  ; preds = %reduce-group-1-true
  store float %add.24.i239, ptr addrspace(3) %73, align 4
  br label %intra_warp_reduce_write-after177

inter_warp_reduce-true178:                        ; preds = %intra_warp_reduce_write-after177
  %75 = zext i32 %lane_id86 to i64
  %76 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache1, i64 0, i64 0, i64 0, i64 %75
  %77 = icmp ult i32 %1, 16
  br i1 %77, label %inter_warp_reduce-true178.then266, label %inter_warp_reduce-true178.cont265

inter_warp_reduce-true178.then266:                ; preds = %inter_warp_reduce-true178
  %partial_reduction_result182.then.val = load float, ptr addrspace(3) %76, align 4
  br label %inter_warp_reduce-true178.cont265

inter_warp_reduce-true178.cont265:                ; preds = %inter_warp_reduce-true178, %inter_warp_reduce-true178.then266
  %partial_reduction_result182 = phi float [ %partial_reduction_result182.then.val, %inter_warp_reduce-true178.then266 ], [ -0.000000e+00, %inter_warp_reduce-true178 ]
  %78 = icmp ult i32 %1, 16
  %79 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result182, i32 16, i32 31)
  br i1 %78, label %inter_warp_reduce-true178.then, label %inter_warp_reduce-true178.cont

inter_warp_reduce-true178.then:                   ; preds = %inter_warp_reduce-true178.cont265
  %.val217.then.val = load float, ptr addrspace(3) %76, align 4
  br label %inter_warp_reduce-true178.cont

inter_warp_reduce-true178.cont:                   ; preds = %inter_warp_reduce-true178.cont265, %inter_warp_reduce-true178.then
  %.val217 = phi float [ %.val217.then.val, %inter_warp_reduce-true178.then ], [ -0.000000e+00, %inter_warp_reduce-true178.cont265 ]
  %80 = icmp ult i32 %1, 16
  %add.24.i242 = fadd float %79, %.val217
  br i1 %80, label %inter_warp_reduce-true178.cont.then264, label %inter_warp_reduce-true178.cont.cont263

inter_warp_reduce-true178.cont.then264:           ; preds = %inter_warp_reduce-true178.cont
  store float %add.24.i242, ptr addrspace(3) %76, align 4
  br label %inter_warp_reduce-true178.cont.cont263

inter_warp_reduce-true178.cont.cont263:           ; preds = %inter_warp_reduce-true178.cont, %inter_warp_reduce-true178.cont.then264
  %initial_value_addr180.0 = phi float [ -0.000000e+00, %inter_warp_reduce-true178.cont.then264 ], [ %add.24.i242, %inter_warp_reduce-true178.cont ]
  %81 = icmp ult i32 %1, 16
  %82 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.24.i242, i32 8, i32 31)
  br i1 %81, label %inter_warp_reduce-true178.cont.then, label %inter_warp_reduce-true178.cont.cont

inter_warp_reduce-true178.cont.then:              ; preds = %inter_warp_reduce-true178.cont.cont263
  %.val216.then.val = load float, ptr addrspace(3) %76, align 4
  br label %inter_warp_reduce-true178.cont.cont

inter_warp_reduce-true178.cont.cont:              ; preds = %inter_warp_reduce-true178.cont.cont263, %inter_warp_reduce-true178.cont.then
  %.val216 = phi float [ %.val216.then.val, %inter_warp_reduce-true178.cont.then ], [ %initial_value_addr180.0, %inter_warp_reduce-true178.cont.cont263 ]
  %83 = icmp ult i32 %1, 16
  %add.24.i243 = fadd float %82, %.val216
  br i1 %83, label %inter_warp_reduce-true178.cont.cont.then262, label %inter_warp_reduce-true178.cont.cont.cont261

inter_warp_reduce-true178.cont.cont.then262:      ; preds = %inter_warp_reduce-true178.cont.cont
  store float %add.24.i243, ptr addrspace(3) %76, align 4
  br label %inter_warp_reduce-true178.cont.cont.cont261

inter_warp_reduce-true178.cont.cont.cont261:      ; preds = %inter_warp_reduce-true178.cont.cont, %inter_warp_reduce-true178.cont.cont.then262
  %initial_value_addr180.1 = phi float [ %initial_value_addr180.0, %inter_warp_reduce-true178.cont.cont.then262 ], [ %add.24.i243, %inter_warp_reduce-true178.cont.cont ]
  %84 = icmp ult i32 %1, 16
  %85 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.24.i243, i32 4, i32 31)
  br i1 %84, label %inter_warp_reduce-true178.cont.cont.then, label %inter_warp_reduce-true178.cont.cont.cont

inter_warp_reduce-true178.cont.cont.then:         ; preds = %inter_warp_reduce-true178.cont.cont.cont261
  %.val215.then.val = load float, ptr addrspace(3) %76, align 4
  br label %inter_warp_reduce-true178.cont.cont.cont

inter_warp_reduce-true178.cont.cont.cont:         ; preds = %inter_warp_reduce-true178.cont.cont.cont261, %inter_warp_reduce-true178.cont.cont.then
  %.val215 = phi float [ %.val215.then.val, %inter_warp_reduce-true178.cont.cont.then ], [ %initial_value_addr180.1, %inter_warp_reduce-true178.cont.cont.cont261 ]
  %86 = icmp ult i32 %1, 16
  %add.24.i244 = fadd float %85, %.val215
  br i1 %86, label %inter_warp_reduce-true178.cont.cont.cont.then260, label %inter_warp_reduce-true178.cont.cont.cont.cont259

inter_warp_reduce-true178.cont.cont.cont.then260: ; preds = %inter_warp_reduce-true178.cont.cont.cont
  store float %add.24.i244, ptr addrspace(3) %76, align 4
  br label %inter_warp_reduce-true178.cont.cont.cont.cont259

inter_warp_reduce-true178.cont.cont.cont.cont259: ; preds = %inter_warp_reduce-true178.cont.cont.cont, %inter_warp_reduce-true178.cont.cont.cont.then260
  %initial_value_addr180.2 = phi float [ %initial_value_addr180.1, %inter_warp_reduce-true178.cont.cont.cont.then260 ], [ %add.24.i244, %inter_warp_reduce-true178.cont.cont.cont ]
  %87 = icmp ult i32 %1, 16
  %88 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.24.i244, i32 2, i32 31)
  br i1 %87, label %inter_warp_reduce-true178.cont.cont.cont.then, label %inter_warp_reduce-true178.cont.cont.cont.cont

inter_warp_reduce-true178.cont.cont.cont.then:    ; preds = %inter_warp_reduce-true178.cont.cont.cont.cont259
  %.val214.then.val = load float, ptr addrspace(3) %76, align 4
  br label %inter_warp_reduce-true178.cont.cont.cont.cont

inter_warp_reduce-true178.cont.cont.cont.cont:    ; preds = %inter_warp_reduce-true178.cont.cont.cont.cont259, %inter_warp_reduce-true178.cont.cont.cont.then
  %.val214 = phi float [ %.val214.then.val, %inter_warp_reduce-true178.cont.cont.cont.then ], [ %initial_value_addr180.2, %inter_warp_reduce-true178.cont.cont.cont.cont259 ]
  %89 = icmp ult i32 %1, 16
  %add.24.i245 = fadd float %88, %.val214
  br i1 %89, label %inter_warp_reduce-true178.cont.cont.cont.cont.then258, label %inter_warp_reduce-true178.cont.cont.cont.cont.cont257

inter_warp_reduce-true178.cont.cont.cont.cont.then258: ; preds = %inter_warp_reduce-true178.cont.cont.cont.cont
  store float %add.24.i245, ptr addrspace(3) %76, align 4
  br label %inter_warp_reduce-true178.cont.cont.cont.cont.cont257

inter_warp_reduce-true178.cont.cont.cont.cont.cont257: ; preds = %inter_warp_reduce-true178.cont.cont.cont.cont, %inter_warp_reduce-true178.cont.cont.cont.cont.then258
  %initial_value_addr180.3 = phi float [ %initial_value_addr180.2, %inter_warp_reduce-true178.cont.cont.cont.cont.then258 ], [ %add.24.i245, %inter_warp_reduce-true178.cont.cont.cont.cont ]
  %90 = icmp ult i32 %1, 16
  %91 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.24.i245, i32 1, i32 31)
  br i1 %90, label %inter_warp_reduce-true178.cont.cont.cont.cont.then, label %inter_warp_reduce-true178.cont.cont.cont.cont.cont

inter_warp_reduce-true178.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true178.cont.cont.cont.cont.cont257
  %.val213.then.val = load float, ptr addrspace(3) %76, align 4
  br label %inter_warp_reduce-true178.cont.cont.cont.cont.cont

inter_warp_reduce-true178.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true178.cont.cont.cont.cont.cont257, %inter_warp_reduce-true178.cont.cont.cont.cont.then
  %.val213 = phi float [ %.val213.then.val, %inter_warp_reduce-true178.cont.cont.cont.cont.then ], [ %initial_value_addr180.3, %inter_warp_reduce-true178.cont.cont.cont.cont.cont257 ]
  %92 = icmp ult i32 %1, 16
  %add.24.i246 = fadd float %91, %.val213
  br i1 %92, label %inter_warp_reduce-true178.cont.cont.cont.cont.cont.then, label %inter_warp_reduce-true178.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true178.cont.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true178.cont.cont.cont.cont.cont
  store float %add.24.i246, ptr addrspace(3) %76, align 4
  br label %inter_warp_reduce-true178.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true178.cont.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true178.cont.cont.cont.cont.cont, %inter_warp_reduce-true178.cont.cont.cont.cont.cont.then
  %93 = icmp eq i32 %1, 0
  br i1 %93, label %reduction_write_output-true196, label %common.ret

reduction_write_output-true196:                   ; preds = %inter_warp_reduce-true178.cont.cont.cont.cont.cont.cont
  store float %add.24.i246, ptr addrspace(1) %arg5281, align 128
  br label %common.ret
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.y() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare float @llvm.nvvm.shfl.sync.down.f32(i32, float, i32, i32) #2

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_434(ptr noalias nocapture readonly align 16 dereferenceable(4) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg3, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg4, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg5, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg6) local_unnamed_addr #4 {
entry:
  %arg613 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg511 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg49 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg37 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg25 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg13 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg01 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = load float, ptr addrspace(1) %arg01, align 16, !invariant.load !195
  %1 = load float, ptr addrspace(1) %arg25, align 16, !invariant.load !195
  %2 = load float, ptr addrspace(1) %arg13, align 128, !invariant.load !195
  %multiply.8 = fmul float %1, %2
  %subtract.9 = fsub float %0, %multiply.8
  %3 = load float, ptr addrspace(1) %arg37, align 16, !invariant.load !195
  %4 = load float, ptr addrspace(1) %arg49, align 128, !invariant.load !195
  %multiply.11 = fmul float %1, %4
  %subtract.12 = fsub float %3, %multiply.11
  store float %subtract.9, ptr addrspace(1) %arg511, align 128
  store float %subtract.12, ptr addrspace(1) %arg613, align 128
  ret void
}

; Function Attrs: nounwind
define void @fusion_570(ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg3, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg5, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg6, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg7, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg8, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg9, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg10, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg11) local_unnamed_addr #0 {
entry:
  %arg11704 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg10702 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg9700 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg8698 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg7696 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg6694 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg5692 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg4690 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg3688 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg2686 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg1684 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg0682 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !196
  switch i32 %0, label %entry.unreachabledefault [
    i32 0, label %reduce-group-0-true
    i32 1, label %reduce-group-1-true
    i32 2, label %entry.reduce-group-2-true_crit_edge
    i32 3, label %entry.reduce-group-3-true_crit_edge
  ]

entry.reduce-group-2-true_crit_edge:              ; preds = %entry
  %.pre = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !194
  %.pre580 = shl nuw nsw i32 %.pre, 1
  %.pre582 = zext i32 %.pre580 to i64
  %.pre629 = and i32 %.pre, 31
  %Arg_5.6 = getelementptr float, ptr addrspace(1) %arg5692, i64 %.pre582
  %1 = load <2 x float>, ptr addrspace(1) %Arg_5.6, align 8, !invariant.load !195
  %Arg_5.62271010 = extractelement <2 x float> %1, i32 0
  %Arg_5.62351011 = extractelement <2 x float> %1, i32 1
  %Arg_4.5 = getelementptr float, ptr addrspace(1) %arg4690, i64 %.pre582
  %2 = load <2 x float>, ptr addrspace(1) %Arg_4.5, align 8, !invariant.load !195
  %Arg_4.52281026 = extractelement <2 x float> %2, i32 0
  %Arg_4.52371027 = extractelement <2 x float> %2, i32 1
  %multiply.30 = fmul float %Arg_5.62271010, %Arg_4.52281026
  %subtract.31 = fsub float 1.000000e+00, %Arg_4.52281026
  %multiply.32 = fmul float %multiply.30, %subtract.31
  %multiply.30238 = fmul float %Arg_5.62351011, %Arg_4.52371027
  %subtract.31242 = fsub float 1.000000e+00, %Arg_4.52371027
  %multiply.32243 = fmul float %multiply.30238, %subtract.31242
  %add.37.i515 = fadd float %multiply.32, %multiply.32243
  %Arg_5.6.1711 = getelementptr inbounds float, ptr addrspace(1) %Arg_5.6, i64 1024
  %3 = load <2 x float>, ptr addrspace(1) %Arg_5.6.1711, align 8, !invariant.load !195
  %Arg_5.6227.11012 = extractelement <2 x float> %3, i32 0
  %Arg_5.6235.11013 = extractelement <2 x float> %3, i32 1
  %Arg_4.5.1713 = getelementptr inbounds float, ptr addrspace(1) %Arg_4.5, i64 1024
  %4 = load <2 x float>, ptr addrspace(1) %Arg_4.5.1713, align 8, !invariant.load !195
  %Arg_4.5228.11028 = extractelement <2 x float> %4, i32 0
  %Arg_4.5237.11029 = extractelement <2 x float> %4, i32 1
  %multiply.30.1 = fmul float %Arg_5.6227.11012, %Arg_4.5228.11028
  %subtract.31.1 = fsub float 1.000000e+00, %Arg_4.5228.11028
  %multiply.32.1 = fmul float %multiply.30.1, %subtract.31.1
  %add.37.i514.1 = fadd float %add.37.i515, %multiply.32.1
  %multiply.30238.1 = fmul float %Arg_5.6235.11013, %Arg_4.5237.11029
  %subtract.31242.1 = fsub float 1.000000e+00, %Arg_4.5237.11029
  %multiply.32243.1 = fmul float %multiply.30238.1, %subtract.31242.1
  %add.37.i515.1 = fadd float %add.37.i514.1, %multiply.32243.1
  %Arg_5.6.2719 = getelementptr inbounds float, ptr addrspace(1) %Arg_5.6, i64 2048
  %5 = load <2 x float>, ptr addrspace(1) %Arg_5.6.2719, align 8, !invariant.load !195
  %Arg_5.6227.21014 = extractelement <2 x float> %5, i32 0
  %Arg_5.6235.21015 = extractelement <2 x float> %5, i32 1
  %Arg_4.5.2721 = getelementptr inbounds float, ptr addrspace(1) %Arg_4.5, i64 2048
  %6 = load <2 x float>, ptr addrspace(1) %Arg_4.5.2721, align 8, !invariant.load !195
  %Arg_4.5228.21030 = extractelement <2 x float> %6, i32 0
  %Arg_4.5237.21031 = extractelement <2 x float> %6, i32 1
  %multiply.30.2 = fmul float %Arg_5.6227.21014, %Arg_4.5228.21030
  %subtract.31.2 = fsub float 1.000000e+00, %Arg_4.5228.21030
  %multiply.32.2 = fmul float %multiply.30.2, %subtract.31.2
  %add.37.i514.2 = fadd float %add.37.i515.1, %multiply.32.2
  %multiply.30238.2 = fmul float %Arg_5.6235.21015, %Arg_4.5237.21031
  %subtract.31242.2 = fsub float 1.000000e+00, %Arg_4.5237.21031
  %multiply.32243.2 = fmul float %multiply.30238.2, %subtract.31242.2
  %add.37.i515.2 = fadd float %add.37.i514.2, %multiply.32243.2
  %Arg_5.6.3727 = getelementptr inbounds float, ptr addrspace(1) %Arg_5.6, i64 3072
  %7 = load <2 x float>, ptr addrspace(1) %Arg_5.6.3727, align 8, !invariant.load !195
  %Arg_5.6227.31016 = extractelement <2 x float> %7, i32 0
  %Arg_5.6235.31017 = extractelement <2 x float> %7, i32 1
  %Arg_4.5.3729 = getelementptr inbounds float, ptr addrspace(1) %Arg_4.5, i64 3072
  %8 = load <2 x float>, ptr addrspace(1) %Arg_4.5.3729, align 8, !invariant.load !195
  %Arg_4.5228.31032 = extractelement <2 x float> %8, i32 0
  %Arg_4.5237.31033 = extractelement <2 x float> %8, i32 1
  %multiply.30.3 = fmul float %Arg_5.6227.31016, %Arg_4.5228.31032
  %subtract.31.3 = fsub float 1.000000e+00, %Arg_4.5228.31032
  %multiply.32.3 = fmul float %multiply.30.3, %subtract.31.3
  %add.37.i514.3 = fadd float %add.37.i515.2, %multiply.32.3
  %multiply.30238.3 = fmul float %Arg_5.6235.31017, %Arg_4.5237.31033
  %subtract.31242.3 = fsub float 1.000000e+00, %Arg_4.5237.31033
  %multiply.32243.3 = fmul float %multiply.30238.3, %subtract.31242.3
  %add.37.i515.3 = fadd float %add.37.i514.3, %multiply.32243.3
  %Arg_5.6.4735 = getelementptr inbounds float, ptr addrspace(1) %Arg_5.6, i64 4096
  %9 = load <2 x float>, ptr addrspace(1) %Arg_5.6.4735, align 8, !invariant.load !195
  %Arg_5.6227.41018 = extractelement <2 x float> %9, i32 0
  %Arg_5.6235.41019 = extractelement <2 x float> %9, i32 1
  %Arg_4.5.4737 = getelementptr inbounds float, ptr addrspace(1) %Arg_4.5, i64 4096
  %10 = load <2 x float>, ptr addrspace(1) %Arg_4.5.4737, align 8, !invariant.load !195
  %Arg_4.5228.41034 = extractelement <2 x float> %10, i32 0
  %Arg_4.5237.41035 = extractelement <2 x float> %10, i32 1
  %multiply.30.4 = fmul float %Arg_5.6227.41018, %Arg_4.5228.41034
  %subtract.31.4 = fsub float 1.000000e+00, %Arg_4.5228.41034
  %multiply.32.4 = fmul float %multiply.30.4, %subtract.31.4
  %add.37.i514.4 = fadd float %add.37.i515.3, %multiply.32.4
  %multiply.30238.4 = fmul float %Arg_5.6235.41019, %Arg_4.5237.41035
  %subtract.31242.4 = fsub float 1.000000e+00, %Arg_4.5237.41035
  %multiply.32243.4 = fmul float %multiply.30238.4, %subtract.31242.4
  %add.37.i515.4 = fadd float %add.37.i514.4, %multiply.32243.4
  %Arg_5.6.5743 = getelementptr inbounds float, ptr addrspace(1) %Arg_5.6, i64 5120
  %11 = load <2 x float>, ptr addrspace(1) %Arg_5.6.5743, align 8, !invariant.load !195
  %Arg_5.6227.51020 = extractelement <2 x float> %11, i32 0
  %Arg_5.6235.51021 = extractelement <2 x float> %11, i32 1
  %Arg_4.5.5745 = getelementptr inbounds float, ptr addrspace(1) %Arg_4.5, i64 5120
  %12 = load <2 x float>, ptr addrspace(1) %Arg_4.5.5745, align 8, !invariant.load !195
  %Arg_4.5228.51036 = extractelement <2 x float> %12, i32 0
  %Arg_4.5237.51037 = extractelement <2 x float> %12, i32 1
  %multiply.30.5 = fmul float %Arg_5.6227.51020, %Arg_4.5228.51036
  %subtract.31.5 = fsub float 1.000000e+00, %Arg_4.5228.51036
  %multiply.32.5 = fmul float %multiply.30.5, %subtract.31.5
  %add.37.i514.5 = fadd float %add.37.i515.4, %multiply.32.5
  %multiply.30238.5 = fmul float %Arg_5.6235.51021, %Arg_4.5237.51037
  %subtract.31242.5 = fsub float 1.000000e+00, %Arg_4.5237.51037
  %multiply.32243.5 = fmul float %multiply.30238.5, %subtract.31242.5
  %add.37.i515.5 = fadd float %add.37.i514.5, %multiply.32243.5
  %Arg_5.6.6751 = getelementptr inbounds float, ptr addrspace(1) %Arg_5.6, i64 6144
  %13 = load <2 x float>, ptr addrspace(1) %Arg_5.6.6751, align 8, !invariant.load !195
  %Arg_5.6227.61022 = extractelement <2 x float> %13, i32 0
  %Arg_5.6235.61023 = extractelement <2 x float> %13, i32 1
  %Arg_4.5.6753 = getelementptr inbounds float, ptr addrspace(1) %Arg_4.5, i64 6144
  %14 = load <2 x float>, ptr addrspace(1) %Arg_4.5.6753, align 8, !invariant.load !195
  %Arg_4.5228.61038 = extractelement <2 x float> %14, i32 0
  %Arg_4.5237.61039 = extractelement <2 x float> %14, i32 1
  %multiply.30.6 = fmul float %Arg_5.6227.61022, %Arg_4.5228.61038
  %subtract.31.6 = fsub float 1.000000e+00, %Arg_4.5228.61038
  %multiply.32.6 = fmul float %multiply.30.6, %subtract.31.6
  %add.37.i514.6 = fadd float %add.37.i515.5, %multiply.32.6
  %multiply.30238.6 = fmul float %Arg_5.6235.61023, %Arg_4.5237.61039
  %subtract.31242.6 = fsub float 1.000000e+00, %Arg_4.5237.61039
  %multiply.32243.6 = fmul float %multiply.30238.6, %subtract.31242.6
  %add.37.i515.6 = fadd float %add.37.i514.6, %multiply.32243.6
  %Arg_5.6.7759 = getelementptr inbounds float, ptr addrspace(1) %Arg_5.6, i64 7168
  %15 = load <2 x float>, ptr addrspace(1) %Arg_5.6.7759, align 8, !invariant.load !195
  %Arg_5.6227.71024 = extractelement <2 x float> %15, i32 0
  %Arg_5.6235.71025 = extractelement <2 x float> %15, i32 1
  %Arg_4.5.7761 = getelementptr inbounds float, ptr addrspace(1) %Arg_4.5, i64 7168
  %16 = load <2 x float>, ptr addrspace(1) %Arg_4.5.7761, align 8, !invariant.load !195
  %Arg_4.5228.71040 = extractelement <2 x float> %16, i32 0
  %Arg_4.5237.71041 = extractelement <2 x float> %16, i32 1
  %multiply.30.7 = fmul float %Arg_5.6227.71024, %Arg_4.5228.71040
  %subtract.31.7 = fsub float 1.000000e+00, %Arg_4.5228.71040
  %multiply.32.7 = fmul float %multiply.30.7, %subtract.31.7
  %add.37.i514.7 = fadd float %add.37.i515.6, %multiply.32.7
  %multiply.30238.7 = fmul float %Arg_5.6235.71025, %Arg_4.5237.71041
  %subtract.31242.7 = fsub float 1.000000e+00, %Arg_4.5237.71041
  %multiply.32243.7 = fmul float %multiply.30238.7, %subtract.31242.7
  %add.37.i515.7 = fadd float %add.37.i514.7, %multiply.32243.7
  %17 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.37.i515.7, i32 16, i32 31)
  %add.37.i = fadd float %add.37.i515.7, %17
  %18 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.37.i, i32 8, i32 31)
  %add.37.i510 = fadd float %add.37.i, %18
  %19 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.37.i510, i32 4, i32 31)
  %add.37.i511 = fadd float %add.37.i510, %19
  %20 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.37.i511, i32 2, i32 31)
  %add.37.i512 = fadd float %add.37.i511, %20
  %21 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.37.i512, i32 1, i32 31)
  %22 = icmp eq i32 %.pre629, 0
  %23 = lshr i32 %.pre, 5
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache4, i64 0, i64 0, i64 0, i64 %24
  %add.37.i513 = fadd float %add.37.i512, %21
  br i1 %22, label %intra_warp_reduce_write-true295, label %intra_warp_reduce_write-after296

entry.reduce-group-3-true_crit_edge:              ; preds = %entry
  %.pre630 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !194
  %.pre632 = shl nuw nsw i32 %.pre630, 1
  %.pre634 = zext i32 %.pre632 to i64
  %.pre681 = and i32 %.pre630, 31
  %Arg_7.8 = getelementptr float, ptr addrspace(1) %arg7696, i64 %.pre634
  %26 = load <2 x float>, ptr addrspace(1) %Arg_7.8, align 8, !invariant.load !195
  %Arg_7.83461042 = extractelement <2 x float> %26, i32 0
  %Arg_7.83541043 = extractelement <2 x float> %26, i32 1
  %Arg_6.7 = getelementptr float, ptr addrspace(1) %arg6694, i64 %.pre634
  %27 = load <2 x float>, ptr addrspace(1) %Arg_6.7, align 8, !invariant.load !195
  %Arg_6.73471058 = extractelement <2 x float> %27, i32 0
  %Arg_6.73561059 = extractelement <2 x float> %27, i32 1
  %multiply.39 = fmul float %Arg_7.83461042, %Arg_6.73471058
  %subtract.40 = fsub float 1.000000e+00, %Arg_6.73471058
  %multiply.41 = fmul float %multiply.39, %subtract.40
  %multiply.39357 = fmul float %Arg_7.83541043, %Arg_6.73561059
  %subtract.40361 = fsub float 1.000000e+00, %Arg_6.73561059
  %multiply.41362 = fmul float %multiply.39357, %subtract.40361
  %add.46.i526 = fadd float %multiply.41, %multiply.41362
  %Arg_7.8.1771 = getelementptr inbounds float, ptr addrspace(1) %Arg_7.8, i64 1024
  %28 = load <2 x float>, ptr addrspace(1) %Arg_7.8.1771, align 8, !invariant.load !195
  %Arg_7.8346.11044 = extractelement <2 x float> %28, i32 0
  %Arg_7.8354.11045 = extractelement <2 x float> %28, i32 1
  %Arg_6.7.1773 = getelementptr inbounds float, ptr addrspace(1) %Arg_6.7, i64 1024
  %29 = load <2 x float>, ptr addrspace(1) %Arg_6.7.1773, align 8, !invariant.load !195
  %Arg_6.7347.11060 = extractelement <2 x float> %29, i32 0
  %Arg_6.7356.11061 = extractelement <2 x float> %29, i32 1
  %multiply.39.1 = fmul float %Arg_7.8346.11044, %Arg_6.7347.11060
  %subtract.40.1 = fsub float 1.000000e+00, %Arg_6.7347.11060
  %multiply.41.1 = fmul float %multiply.39.1, %subtract.40.1
  %add.46.i525.1 = fadd float %add.46.i526, %multiply.41.1
  %multiply.39357.1 = fmul float %Arg_7.8354.11045, %Arg_6.7356.11061
  %subtract.40361.1 = fsub float 1.000000e+00, %Arg_6.7356.11061
  %multiply.41362.1 = fmul float %multiply.39357.1, %subtract.40361.1
  %add.46.i526.1 = fadd float %add.46.i525.1, %multiply.41362.1
  %Arg_7.8.2779 = getelementptr inbounds float, ptr addrspace(1) %Arg_7.8, i64 2048
  %30 = load <2 x float>, ptr addrspace(1) %Arg_7.8.2779, align 8, !invariant.load !195
  %Arg_7.8346.21046 = extractelement <2 x float> %30, i32 0
  %Arg_7.8354.21047 = extractelement <2 x float> %30, i32 1
  %Arg_6.7.2781 = getelementptr inbounds float, ptr addrspace(1) %Arg_6.7, i64 2048
  %31 = load <2 x float>, ptr addrspace(1) %Arg_6.7.2781, align 8, !invariant.load !195
  %Arg_6.7347.21062 = extractelement <2 x float> %31, i32 0
  %Arg_6.7356.21063 = extractelement <2 x float> %31, i32 1
  %multiply.39.2 = fmul float %Arg_7.8346.21046, %Arg_6.7347.21062
  %subtract.40.2 = fsub float 1.000000e+00, %Arg_6.7347.21062
  %multiply.41.2 = fmul float %multiply.39.2, %subtract.40.2
  %add.46.i525.2 = fadd float %add.46.i526.1, %multiply.41.2
  %multiply.39357.2 = fmul float %Arg_7.8354.21047, %Arg_6.7356.21063
  %subtract.40361.2 = fsub float 1.000000e+00, %Arg_6.7356.21063
  %multiply.41362.2 = fmul float %multiply.39357.2, %subtract.40361.2
  %add.46.i526.2 = fadd float %add.46.i525.2, %multiply.41362.2
  %Arg_7.8.3787 = getelementptr inbounds float, ptr addrspace(1) %Arg_7.8, i64 3072
  %32 = load <2 x float>, ptr addrspace(1) %Arg_7.8.3787, align 8, !invariant.load !195
  %Arg_7.8346.31048 = extractelement <2 x float> %32, i32 0
  %Arg_7.8354.31049 = extractelement <2 x float> %32, i32 1
  %Arg_6.7.3789 = getelementptr inbounds float, ptr addrspace(1) %Arg_6.7, i64 3072
  %33 = load <2 x float>, ptr addrspace(1) %Arg_6.7.3789, align 8, !invariant.load !195
  %Arg_6.7347.31064 = extractelement <2 x float> %33, i32 0
  %Arg_6.7356.31065 = extractelement <2 x float> %33, i32 1
  %multiply.39.3 = fmul float %Arg_7.8346.31048, %Arg_6.7347.31064
  %subtract.40.3 = fsub float 1.000000e+00, %Arg_6.7347.31064
  %multiply.41.3 = fmul float %multiply.39.3, %subtract.40.3
  %add.46.i525.3 = fadd float %add.46.i526.2, %multiply.41.3
  %multiply.39357.3 = fmul float %Arg_7.8354.31049, %Arg_6.7356.31065
  %subtract.40361.3 = fsub float 1.000000e+00, %Arg_6.7356.31065
  %multiply.41362.3 = fmul float %multiply.39357.3, %subtract.40361.3
  %add.46.i526.3 = fadd float %add.46.i525.3, %multiply.41362.3
  %Arg_7.8.4795 = getelementptr inbounds float, ptr addrspace(1) %Arg_7.8, i64 4096
  %34 = load <2 x float>, ptr addrspace(1) %Arg_7.8.4795, align 8, !invariant.load !195
  %Arg_7.8346.41050 = extractelement <2 x float> %34, i32 0
  %Arg_7.8354.41051 = extractelement <2 x float> %34, i32 1
  %Arg_6.7.4797 = getelementptr inbounds float, ptr addrspace(1) %Arg_6.7, i64 4096
  %35 = load <2 x float>, ptr addrspace(1) %Arg_6.7.4797, align 8, !invariant.load !195
  %Arg_6.7347.41066 = extractelement <2 x float> %35, i32 0
  %Arg_6.7356.41067 = extractelement <2 x float> %35, i32 1
  %multiply.39.4 = fmul float %Arg_7.8346.41050, %Arg_6.7347.41066
  %subtract.40.4 = fsub float 1.000000e+00, %Arg_6.7347.41066
  %multiply.41.4 = fmul float %multiply.39.4, %subtract.40.4
  %add.46.i525.4 = fadd float %add.46.i526.3, %multiply.41.4
  %multiply.39357.4 = fmul float %Arg_7.8354.41051, %Arg_6.7356.41067
  %subtract.40361.4 = fsub float 1.000000e+00, %Arg_6.7356.41067
  %multiply.41362.4 = fmul float %multiply.39357.4, %subtract.40361.4
  %add.46.i526.4 = fadd float %add.46.i525.4, %multiply.41362.4
  %Arg_7.8.5803 = getelementptr inbounds float, ptr addrspace(1) %Arg_7.8, i64 5120
  %36 = load <2 x float>, ptr addrspace(1) %Arg_7.8.5803, align 8, !invariant.load !195
  %Arg_7.8346.51052 = extractelement <2 x float> %36, i32 0
  %Arg_7.8354.51053 = extractelement <2 x float> %36, i32 1
  %Arg_6.7.5805 = getelementptr inbounds float, ptr addrspace(1) %Arg_6.7, i64 5120
  %37 = load <2 x float>, ptr addrspace(1) %Arg_6.7.5805, align 8, !invariant.load !195
  %Arg_6.7347.51068 = extractelement <2 x float> %37, i32 0
  %Arg_6.7356.51069 = extractelement <2 x float> %37, i32 1
  %multiply.39.5 = fmul float %Arg_7.8346.51052, %Arg_6.7347.51068
  %subtract.40.5 = fsub float 1.000000e+00, %Arg_6.7347.51068
  %multiply.41.5 = fmul float %multiply.39.5, %subtract.40.5
  %add.46.i525.5 = fadd float %add.46.i526.4, %multiply.41.5
  %multiply.39357.5 = fmul float %Arg_7.8354.51053, %Arg_6.7356.51069
  %subtract.40361.5 = fsub float 1.000000e+00, %Arg_6.7356.51069
  %multiply.41362.5 = fmul float %multiply.39357.5, %subtract.40361.5
  %add.46.i526.5 = fadd float %add.46.i525.5, %multiply.41362.5
  %Arg_7.8.6811 = getelementptr inbounds float, ptr addrspace(1) %Arg_7.8, i64 6144
  %38 = load <2 x float>, ptr addrspace(1) %Arg_7.8.6811, align 8, !invariant.load !195
  %Arg_7.8346.61054 = extractelement <2 x float> %38, i32 0
  %Arg_7.8354.61055 = extractelement <2 x float> %38, i32 1
  %Arg_6.7.6813 = getelementptr inbounds float, ptr addrspace(1) %Arg_6.7, i64 6144
  %39 = load <2 x float>, ptr addrspace(1) %Arg_6.7.6813, align 8, !invariant.load !195
  %Arg_6.7347.61070 = extractelement <2 x float> %39, i32 0
  %Arg_6.7356.61071 = extractelement <2 x float> %39, i32 1
  %multiply.39.6 = fmul float %Arg_7.8346.61054, %Arg_6.7347.61070
  %subtract.40.6 = fsub float 1.000000e+00, %Arg_6.7347.61070
  %multiply.41.6 = fmul float %multiply.39.6, %subtract.40.6
  %add.46.i525.6 = fadd float %add.46.i526.5, %multiply.41.6
  %multiply.39357.6 = fmul float %Arg_7.8354.61055, %Arg_6.7356.61071
  %subtract.40361.6 = fsub float 1.000000e+00, %Arg_6.7356.61071
  %multiply.41362.6 = fmul float %multiply.39357.6, %subtract.40361.6
  %add.46.i526.6 = fadd float %add.46.i525.6, %multiply.41362.6
  %Arg_7.8.7819 = getelementptr inbounds float, ptr addrspace(1) %Arg_7.8, i64 7168
  %40 = load <2 x float>, ptr addrspace(1) %Arg_7.8.7819, align 8, !invariant.load !195
  %Arg_7.8346.71056 = extractelement <2 x float> %40, i32 0
  %Arg_7.8354.71057 = extractelement <2 x float> %40, i32 1
  %Arg_6.7.7821 = getelementptr inbounds float, ptr addrspace(1) %Arg_6.7, i64 7168
  %41 = load <2 x float>, ptr addrspace(1) %Arg_6.7.7821, align 8, !invariant.load !195
  %Arg_6.7347.71072 = extractelement <2 x float> %41, i32 0
  %Arg_6.7356.71073 = extractelement <2 x float> %41, i32 1
  %multiply.39.7 = fmul float %Arg_7.8346.71056, %Arg_6.7347.71072
  %subtract.40.7 = fsub float 1.000000e+00, %Arg_6.7347.71072
  %multiply.41.7 = fmul float %multiply.39.7, %subtract.40.7
  %add.46.i525.7 = fadd float %add.46.i526.6, %multiply.41.7
  %multiply.39357.7 = fmul float %Arg_7.8354.71057, %Arg_6.7356.71073
  %subtract.40361.7 = fsub float 1.000000e+00, %Arg_6.7356.71073
  %multiply.41362.7 = fmul float %multiply.39357.7, %subtract.40361.7
  %add.46.i526.7 = fadd float %add.46.i525.7, %multiply.41362.7
  %42 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.46.i526.7, i32 16, i32 31)
  %add.46.i = fadd float %add.46.i526.7, %42
  %43 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.46.i, i32 8, i32 31)
  %add.46.i521 = fadd float %add.46.i, %43
  %44 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.46.i521, i32 4, i32 31)
  %add.46.i522 = fadd float %add.46.i521, %44
  %45 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.46.i522, i32 2, i32 31)
  %add.46.i523 = fadd float %add.46.i522, %45
  %46 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.46.i523, i32 1, i32 31)
  %47 = icmp eq i32 %.pre681, 0
  %48 = lshr i32 %.pre630, 5
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache5, i64 0, i64 0, i64 0, i64 %49
  %add.46.i524 = fadd float %add.46.i523, %46
  br i1 %47, label %intra_warp_reduce_write-true414, label %intra_warp_reduce_write-after415

entry.unreachabledefault:                         ; preds = %entry
  unreachable

common.ret:                                       ; preds = %intra_warp_reduce_write-after296, %reduction_write_output-true315, %inter_warp_reduce-true297.cont.cont.cont.cont.cont.cont, %intra_warp_reduce_write-after177, %reduction_write_output-true196, %inter_warp_reduce-true178.cont.cont.cont.cont.cont.cont, %intra_warp_reduce_write-after, %reduction_write_output-true, %inter_warp_reduce-true.cont.cont.cont.cont.cont.cont, %inter_warp_reduce-true416.cont.cont.cont.cont.cont.cont, %reduction_write_output-true434, %intra_warp_reduce_write-after415
  ret void

reduce-group-0-true:                              ; preds = %entry
  %51 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !194
  %52 = shl nuw nsw i32 %51, 1
  %53 = zext i32 %52 to i64
  %Arg_1.2 = getelementptr float, ptr addrspace(1) %arg1684, i64 %53
  %54 = load <2 x float>, ptr addrspace(1) %Arg_1.2, align 8, !invariant.load !195
  %Arg_1.23946 = extractelement <2 x float> %54, i32 0
  %Arg_1.29947 = extractelement <2 x float> %54, i32 1
  %Arg_0.1 = getelementptr float, ptr addrspace(1) %arg0682, i64 %53
  %55 = load <2 x float>, ptr addrspace(1) %Arg_0.1, align 8, !invariant.load !195
  %Arg_0.14962 = extractelement <2 x float> %55, i32 0
  %Arg_0.111963 = extractelement <2 x float> %55, i32 1
  %multiply.9 = fmul float %Arg_1.23946, %Arg_0.14962
  %subtract.12 = fsub float 1.000000e+00, %Arg_0.14962
  %multiply.13 = fmul float %multiply.9, %subtract.12
  %multiply.912 = fmul float %Arg_1.29947, %Arg_0.111963
  %subtract.1216 = fsub float 1.000000e+00, %Arg_0.111963
  %multiply.1317 = fmul float %multiply.912, %subtract.1216
  %add.19.i493 = fadd float %multiply.13, %multiply.1317
  %Arg_1.2.1831 = getelementptr inbounds float, ptr addrspace(1) %Arg_1.2, i64 1024
  %56 = load <2 x float>, ptr addrspace(1) %Arg_1.2.1831, align 8, !invariant.load !195
  %Arg_1.23.1948 = extractelement <2 x float> %56, i32 0
  %Arg_1.29.1949 = extractelement <2 x float> %56, i32 1
  %Arg_0.1.1833 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 1024
  %57 = load <2 x float>, ptr addrspace(1) %Arg_0.1.1833, align 8, !invariant.load !195
  %Arg_0.14.1964 = extractelement <2 x float> %57, i32 0
  %Arg_0.111.1965 = extractelement <2 x float> %57, i32 1
  %multiply.9.1 = fmul float %Arg_1.23.1948, %Arg_0.14.1964
  %subtract.12.1 = fsub float 1.000000e+00, %Arg_0.14.1964
  %multiply.13.1 = fmul float %multiply.9.1, %subtract.12.1
  %add.19.i492.1 = fadd float %add.19.i493, %multiply.13.1
  %multiply.912.1 = fmul float %Arg_1.29.1949, %Arg_0.111.1965
  %subtract.1216.1 = fsub float 1.000000e+00, %Arg_0.111.1965
  %multiply.1317.1 = fmul float %multiply.912.1, %subtract.1216.1
  %add.19.i493.1 = fadd float %add.19.i492.1, %multiply.1317.1
  %Arg_1.2.2839 = getelementptr inbounds float, ptr addrspace(1) %Arg_1.2, i64 2048
  %58 = load <2 x float>, ptr addrspace(1) %Arg_1.2.2839, align 8, !invariant.load !195
  %Arg_1.23.2950 = extractelement <2 x float> %58, i32 0
  %Arg_1.29.2951 = extractelement <2 x float> %58, i32 1
  %Arg_0.1.2841 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 2048
  %59 = load <2 x float>, ptr addrspace(1) %Arg_0.1.2841, align 8, !invariant.load !195
  %Arg_0.14.2966 = extractelement <2 x float> %59, i32 0
  %Arg_0.111.2967 = extractelement <2 x float> %59, i32 1
  %multiply.9.2 = fmul float %Arg_1.23.2950, %Arg_0.14.2966
  %subtract.12.2 = fsub float 1.000000e+00, %Arg_0.14.2966
  %multiply.13.2 = fmul float %multiply.9.2, %subtract.12.2
  %add.19.i492.2 = fadd float %add.19.i493.1, %multiply.13.2
  %multiply.912.2 = fmul float %Arg_1.29.2951, %Arg_0.111.2967
  %subtract.1216.2 = fsub float 1.000000e+00, %Arg_0.111.2967
  %multiply.1317.2 = fmul float %multiply.912.2, %subtract.1216.2
  %add.19.i493.2 = fadd float %add.19.i492.2, %multiply.1317.2
  %Arg_1.2.3847 = getelementptr inbounds float, ptr addrspace(1) %Arg_1.2, i64 3072
  %60 = load <2 x float>, ptr addrspace(1) %Arg_1.2.3847, align 8, !invariant.load !195
  %Arg_1.23.3952 = extractelement <2 x float> %60, i32 0
  %Arg_1.29.3953 = extractelement <2 x float> %60, i32 1
  %Arg_0.1.3849 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 3072
  %61 = load <2 x float>, ptr addrspace(1) %Arg_0.1.3849, align 8, !invariant.load !195
  %Arg_0.14.3968 = extractelement <2 x float> %61, i32 0
  %Arg_0.111.3969 = extractelement <2 x float> %61, i32 1
  %multiply.9.3 = fmul float %Arg_1.23.3952, %Arg_0.14.3968
  %subtract.12.3 = fsub float 1.000000e+00, %Arg_0.14.3968
  %multiply.13.3 = fmul float %multiply.9.3, %subtract.12.3
  %add.19.i492.3 = fadd float %add.19.i493.2, %multiply.13.3
  %multiply.912.3 = fmul float %Arg_1.29.3953, %Arg_0.111.3969
  %subtract.1216.3 = fsub float 1.000000e+00, %Arg_0.111.3969
  %multiply.1317.3 = fmul float %multiply.912.3, %subtract.1216.3
  %add.19.i493.3 = fadd float %add.19.i492.3, %multiply.1317.3
  %Arg_1.2.4855 = getelementptr inbounds float, ptr addrspace(1) %Arg_1.2, i64 4096
  %62 = load <2 x float>, ptr addrspace(1) %Arg_1.2.4855, align 8, !invariant.load !195
  %Arg_1.23.4954 = extractelement <2 x float> %62, i32 0
  %Arg_1.29.4955 = extractelement <2 x float> %62, i32 1
  %Arg_0.1.4857 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 4096
  %63 = load <2 x float>, ptr addrspace(1) %Arg_0.1.4857, align 8, !invariant.load !195
  %Arg_0.14.4970 = extractelement <2 x float> %63, i32 0
  %Arg_0.111.4971 = extractelement <2 x float> %63, i32 1
  %multiply.9.4 = fmul float %Arg_1.23.4954, %Arg_0.14.4970
  %subtract.12.4 = fsub float 1.000000e+00, %Arg_0.14.4970
  %multiply.13.4 = fmul float %multiply.9.4, %subtract.12.4
  %add.19.i492.4 = fadd float %add.19.i493.3, %multiply.13.4
  %multiply.912.4 = fmul float %Arg_1.29.4955, %Arg_0.111.4971
  %subtract.1216.4 = fsub float 1.000000e+00, %Arg_0.111.4971
  %multiply.1317.4 = fmul float %multiply.912.4, %subtract.1216.4
  %add.19.i493.4 = fadd float %add.19.i492.4, %multiply.1317.4
  %Arg_1.2.5863 = getelementptr inbounds float, ptr addrspace(1) %Arg_1.2, i64 5120
  %64 = load <2 x float>, ptr addrspace(1) %Arg_1.2.5863, align 8, !invariant.load !195
  %Arg_1.23.5956 = extractelement <2 x float> %64, i32 0
  %Arg_1.29.5957 = extractelement <2 x float> %64, i32 1
  %Arg_0.1.5865 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 5120
  %65 = load <2 x float>, ptr addrspace(1) %Arg_0.1.5865, align 8, !invariant.load !195
  %Arg_0.14.5972 = extractelement <2 x float> %65, i32 0
  %Arg_0.111.5973 = extractelement <2 x float> %65, i32 1
  %multiply.9.5 = fmul float %Arg_1.23.5956, %Arg_0.14.5972
  %subtract.12.5 = fsub float 1.000000e+00, %Arg_0.14.5972
  %multiply.13.5 = fmul float %multiply.9.5, %subtract.12.5
  %add.19.i492.5 = fadd float %add.19.i493.4, %multiply.13.5
  %multiply.912.5 = fmul float %Arg_1.29.5957, %Arg_0.111.5973
  %subtract.1216.5 = fsub float 1.000000e+00, %Arg_0.111.5973
  %multiply.1317.5 = fmul float %multiply.912.5, %subtract.1216.5
  %add.19.i493.5 = fadd float %add.19.i492.5, %multiply.1317.5
  %Arg_1.2.6871 = getelementptr inbounds float, ptr addrspace(1) %Arg_1.2, i64 6144
  %66 = load <2 x float>, ptr addrspace(1) %Arg_1.2.6871, align 8, !invariant.load !195
  %Arg_1.23.6958 = extractelement <2 x float> %66, i32 0
  %Arg_1.29.6959 = extractelement <2 x float> %66, i32 1
  %Arg_0.1.6873 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 6144
  %67 = load <2 x float>, ptr addrspace(1) %Arg_0.1.6873, align 8, !invariant.load !195
  %Arg_0.14.6974 = extractelement <2 x float> %67, i32 0
  %Arg_0.111.6975 = extractelement <2 x float> %67, i32 1
  %multiply.9.6 = fmul float %Arg_1.23.6958, %Arg_0.14.6974
  %subtract.12.6 = fsub float 1.000000e+00, %Arg_0.14.6974
  %multiply.13.6 = fmul float %multiply.9.6, %subtract.12.6
  %add.19.i492.6 = fadd float %add.19.i493.5, %multiply.13.6
  %multiply.912.6 = fmul float %Arg_1.29.6959, %Arg_0.111.6975
  %subtract.1216.6 = fsub float 1.000000e+00, %Arg_0.111.6975
  %multiply.1317.6 = fmul float %multiply.912.6, %subtract.1216.6
  %add.19.i493.6 = fadd float %add.19.i492.6, %multiply.1317.6
  %Arg_1.2.7879 = getelementptr inbounds float, ptr addrspace(1) %Arg_1.2, i64 7168
  %68 = load <2 x float>, ptr addrspace(1) %Arg_1.2.7879, align 8, !invariant.load !195
  %Arg_1.23.7960 = extractelement <2 x float> %68, i32 0
  %Arg_1.29.7961 = extractelement <2 x float> %68, i32 1
  %Arg_0.1.7881 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 7168
  %69 = load <2 x float>, ptr addrspace(1) %Arg_0.1.7881, align 8, !invariant.load !195
  %Arg_0.14.7976 = extractelement <2 x float> %69, i32 0
  %Arg_0.111.7977 = extractelement <2 x float> %69, i32 1
  %multiply.9.7 = fmul float %Arg_1.23.7960, %Arg_0.14.7976
  %subtract.12.7 = fsub float 1.000000e+00, %Arg_0.14.7976
  %multiply.13.7 = fmul float %multiply.9.7, %subtract.12.7
  %add.19.i492.7 = fadd float %add.19.i493.6, %multiply.13.7
  %multiply.912.7 = fmul float %Arg_1.29.7961, %Arg_0.111.7977
  %subtract.1216.7 = fsub float 1.000000e+00, %Arg_0.111.7977
  %multiply.1317.7 = fmul float %multiply.912.7, %subtract.1216.7
  %add.19.i493.7 = fadd float %add.19.i492.7, %multiply.1317.7
  %lane_id = and i32 %51, 31
  %70 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.19.i493.7, i32 16, i32 31)
  %add.19.i = fadd float %add.19.i493.7, %70
  %71 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.19.i, i32 8, i32 31)
  %add.19.i488 = fadd float %add.19.i, %71
  %72 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.19.i488, i32 4, i32 31)
  %add.19.i489 = fadd float %add.19.i488, %72
  %73 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.19.i489, i32 2, i32 31)
  %add.19.i490 = fadd float %add.19.i489, %73
  %74 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.19.i490, i32 1, i32 31)
  %75 = icmp eq i32 %lane_id, 0
  %76 = lshr i32 %51, 5
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache2, i64 0, i64 0, i64 0, i64 %77
  %add.19.i491 = fadd float %add.19.i490, %74
  br i1 %75, label %intra_warp_reduce_write-true, label %intra_warp_reduce_write-after

intra_warp_reduce_write-after:                    ; preds = %intra_warp_reduce_write-true, %reduce-group-0-true
  tail call void @llvm.nvvm.barrier0()
  %79 = icmp ult i32 %51, 32
  br i1 %79, label %inter_warp_reduce-true, label %common.ret

intra_warp_reduce_write-true:                     ; preds = %reduce-group-0-true
  store float %add.19.i491, ptr addrspace(3) %78, align 4
  br label %intra_warp_reduce_write-after

inter_warp_reduce-true:                           ; preds = %intra_warp_reduce_write-after
  %80 = zext i32 %lane_id to i64
  %81 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache2, i64 0, i64 0, i64 0, i64 %80
  %82 = icmp ult i32 %51, 16
  br i1 %82, label %inter_warp_reduce-true.then541, label %inter_warp_reduce-true.cont540

inter_warp_reduce-true.then541:                   ; preds = %inter_warp_reduce-true
  %partial_reduction_result66.then.val = load float, ptr addrspace(3) %81, align 4
  br label %inter_warp_reduce-true.cont540

inter_warp_reduce-true.cont540:                   ; preds = %inter_warp_reduce-true, %inter_warp_reduce-true.then541
  %partial_reduction_result66 = phi float [ %partial_reduction_result66.then.val, %inter_warp_reduce-true.then541 ], [ -0.000000e+00, %inter_warp_reduce-true ]
  %83 = icmp ult i32 %51, 16
  %84 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result66, i32 16, i32 31)
  br i1 %83, label %inter_warp_reduce-true.then, label %inter_warp_reduce-true.cont

inter_warp_reduce-true.then:                      ; preds = %inter_warp_reduce-true.cont540
  %.val444.then.val = load float, ptr addrspace(3) %81, align 4
  br label %inter_warp_reduce-true.cont

inter_warp_reduce-true.cont:                      ; preds = %inter_warp_reduce-true.cont540, %inter_warp_reduce-true.then
  %.val444 = phi float [ %.val444.then.val, %inter_warp_reduce-true.then ], [ -0.000000e+00, %inter_warp_reduce-true.cont540 ]
  %85 = icmp ult i32 %51, 16
  %add.19.i494 = fadd float %84, %.val444
  br i1 %85, label %inter_warp_reduce-true.cont.then539, label %inter_warp_reduce-true.cont.cont538

inter_warp_reduce-true.cont.then539:              ; preds = %inter_warp_reduce-true.cont
  store float %add.19.i494, ptr addrspace(3) %81, align 4
  br label %inter_warp_reduce-true.cont.cont538

inter_warp_reduce-true.cont.cont538:              ; preds = %inter_warp_reduce-true.cont, %inter_warp_reduce-true.cont.then539
  %initial_value_addr.0 = phi float [ -0.000000e+00, %inter_warp_reduce-true.cont.then539 ], [ %add.19.i494, %inter_warp_reduce-true.cont ]
  %86 = icmp ult i32 %51, 16
  %87 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.19.i494, i32 8, i32 31)
  br i1 %86, label %inter_warp_reduce-true.cont.then, label %inter_warp_reduce-true.cont.cont

inter_warp_reduce-true.cont.then:                 ; preds = %inter_warp_reduce-true.cont.cont538
  %.val443.then.val = load float, ptr addrspace(3) %81, align 4
  br label %inter_warp_reduce-true.cont.cont

inter_warp_reduce-true.cont.cont:                 ; preds = %inter_warp_reduce-true.cont.cont538, %inter_warp_reduce-true.cont.then
  %.val443 = phi float [ %.val443.then.val, %inter_warp_reduce-true.cont.then ], [ %initial_value_addr.0, %inter_warp_reduce-true.cont.cont538 ]
  %88 = icmp ult i32 %51, 16
  %add.19.i495 = fadd float %87, %.val443
  br i1 %88, label %inter_warp_reduce-true.cont.cont.then537, label %inter_warp_reduce-true.cont.cont.cont536

inter_warp_reduce-true.cont.cont.then537:         ; preds = %inter_warp_reduce-true.cont.cont
  store float %add.19.i495, ptr addrspace(3) %81, align 4
  br label %inter_warp_reduce-true.cont.cont.cont536

inter_warp_reduce-true.cont.cont.cont536:         ; preds = %inter_warp_reduce-true.cont.cont, %inter_warp_reduce-true.cont.cont.then537
  %initial_value_addr.1 = phi float [ %initial_value_addr.0, %inter_warp_reduce-true.cont.cont.then537 ], [ %add.19.i495, %inter_warp_reduce-true.cont.cont ]
  %89 = icmp ult i32 %51, 16
  %90 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.19.i495, i32 4, i32 31)
  br i1 %89, label %inter_warp_reduce-true.cont.cont.then, label %inter_warp_reduce-true.cont.cont.cont

inter_warp_reduce-true.cont.cont.then:            ; preds = %inter_warp_reduce-true.cont.cont.cont536
  %.val442.then.val = load float, ptr addrspace(3) %81, align 4
  br label %inter_warp_reduce-true.cont.cont.cont

inter_warp_reduce-true.cont.cont.cont:            ; preds = %inter_warp_reduce-true.cont.cont.cont536, %inter_warp_reduce-true.cont.cont.then
  %.val442 = phi float [ %.val442.then.val, %inter_warp_reduce-true.cont.cont.then ], [ %initial_value_addr.1, %inter_warp_reduce-true.cont.cont.cont536 ]
  %91 = icmp ult i32 %51, 16
  %add.19.i496 = fadd float %90, %.val442
  br i1 %91, label %inter_warp_reduce-true.cont.cont.cont.then535, label %inter_warp_reduce-true.cont.cont.cont.cont534

inter_warp_reduce-true.cont.cont.cont.then535:    ; preds = %inter_warp_reduce-true.cont.cont.cont
  store float %add.19.i496, ptr addrspace(3) %81, align 4
  br label %inter_warp_reduce-true.cont.cont.cont.cont534

inter_warp_reduce-true.cont.cont.cont.cont534:    ; preds = %inter_warp_reduce-true.cont.cont.cont, %inter_warp_reduce-true.cont.cont.cont.then535
  %initial_value_addr.2 = phi float [ %initial_value_addr.1, %inter_warp_reduce-true.cont.cont.cont.then535 ], [ %add.19.i496, %inter_warp_reduce-true.cont.cont.cont ]
  %92 = icmp ult i32 %51, 16
  %93 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.19.i496, i32 2, i32 31)
  br i1 %92, label %inter_warp_reduce-true.cont.cont.cont.then, label %inter_warp_reduce-true.cont.cont.cont.cont

inter_warp_reduce-true.cont.cont.cont.then:       ; preds = %inter_warp_reduce-true.cont.cont.cont.cont534
  %.val441.then.val = load float, ptr addrspace(3) %81, align 4
  br label %inter_warp_reduce-true.cont.cont.cont.cont

inter_warp_reduce-true.cont.cont.cont.cont:       ; preds = %inter_warp_reduce-true.cont.cont.cont.cont534, %inter_warp_reduce-true.cont.cont.cont.then
  %.val441 = phi float [ %.val441.then.val, %inter_warp_reduce-true.cont.cont.cont.then ], [ %initial_value_addr.2, %inter_warp_reduce-true.cont.cont.cont.cont534 ]
  %94 = icmp ult i32 %51, 16
  %add.19.i497 = fadd float %93, %.val441
  br i1 %94, label %inter_warp_reduce-true.cont.cont.cont.cont.then533, label %inter_warp_reduce-true.cont.cont.cont.cont.cont532

inter_warp_reduce-true.cont.cont.cont.cont.then533: ; preds = %inter_warp_reduce-true.cont.cont.cont.cont
  store float %add.19.i497, ptr addrspace(3) %81, align 4
  br label %inter_warp_reduce-true.cont.cont.cont.cont.cont532

inter_warp_reduce-true.cont.cont.cont.cont.cont532: ; preds = %inter_warp_reduce-true.cont.cont.cont.cont, %inter_warp_reduce-true.cont.cont.cont.cont.then533
  %initial_value_addr.3 = phi float [ %initial_value_addr.2, %inter_warp_reduce-true.cont.cont.cont.cont.then533 ], [ %add.19.i497, %inter_warp_reduce-true.cont.cont.cont.cont ]
  %95 = icmp ult i32 %51, 16
  %96 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.19.i497, i32 1, i32 31)
  br i1 %95, label %inter_warp_reduce-true.cont.cont.cont.cont.then, label %inter_warp_reduce-true.cont.cont.cont.cont.cont

inter_warp_reduce-true.cont.cont.cont.cont.then:  ; preds = %inter_warp_reduce-true.cont.cont.cont.cont.cont532
  %.val.then.val = load float, ptr addrspace(3) %81, align 4
  br label %inter_warp_reduce-true.cont.cont.cont.cont.cont

inter_warp_reduce-true.cont.cont.cont.cont.cont:  ; preds = %inter_warp_reduce-true.cont.cont.cont.cont.cont532, %inter_warp_reduce-true.cont.cont.cont.cont.then
  %.val = phi float [ %.val.then.val, %inter_warp_reduce-true.cont.cont.cont.cont.then ], [ %initial_value_addr.3, %inter_warp_reduce-true.cont.cont.cont.cont.cont532 ]
  %97 = icmp ult i32 %51, 16
  %add.19.i498 = fadd float %96, %.val
  br i1 %97, label %inter_warp_reduce-true.cont.cont.cont.cont.cont.then, label %inter_warp_reduce-true.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true.cont.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true.cont.cont.cont.cont.cont
  store float %add.19.i498, ptr addrspace(3) %81, align 4
  br label %inter_warp_reduce-true.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true.cont.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true.cont.cont.cont.cont.cont, %inter_warp_reduce-true.cont.cont.cont.cont.cont.then
  %98 = icmp eq i32 %51, 0
  br i1 %98, label %reduction_write_output-true, label %common.ret

reduction_write_output-true:                      ; preds = %inter_warp_reduce-true.cont.cont.cont.cont.cont.cont
  store float %add.19.i498, ptr addrspace(1) %arg8698, align 128
  br label %common.ret

reduce-group-1-true:                              ; preds = %entry
  %99 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !194
  %100 = shl nuw nsw i32 %99, 1
  %101 = zext i32 %100 to i64
  %Arg_3.4 = getelementptr float, ptr addrspace(1) %arg3688, i64 %101
  %102 = load <2 x float>, ptr addrspace(1) %Arg_3.4, align 8, !invariant.load !195
  %Arg_3.4108978 = extractelement <2 x float> %102, i32 0
  %Arg_3.4116979 = extractelement <2 x float> %102, i32 1
  %Arg_2.3 = getelementptr float, ptr addrspace(1) %arg2686, i64 %101
  %103 = load <2 x float>, ptr addrspace(1) %Arg_2.3, align 8, !invariant.load !195
  %Arg_2.3109994 = extractelement <2 x float> %103, i32 0
  %Arg_2.3118995 = extractelement <2 x float> %103, i32 1
  %multiply.21 = fmul float %Arg_3.4108978, %Arg_2.3109994
  %subtract.22 = fsub float 1.000000e+00, %Arg_2.3109994
  %multiply.23 = fmul float %multiply.21, %subtract.22
  %multiply.21119 = fmul float %Arg_3.4116979, %Arg_2.3118995
  %subtract.22123 = fsub float 1.000000e+00, %Arg_2.3118995
  %multiply.23124 = fmul float %multiply.21119, %subtract.22123
  %add.28.i504 = fadd float %multiply.23, %multiply.23124
  %Arg_3.4.1891 = getelementptr inbounds float, ptr addrspace(1) %Arg_3.4, i64 1024
  %104 = load <2 x float>, ptr addrspace(1) %Arg_3.4.1891, align 8, !invariant.load !195
  %Arg_3.4108.1980 = extractelement <2 x float> %104, i32 0
  %Arg_3.4116.1981 = extractelement <2 x float> %104, i32 1
  %Arg_2.3.1893 = getelementptr inbounds float, ptr addrspace(1) %Arg_2.3, i64 1024
  %105 = load <2 x float>, ptr addrspace(1) %Arg_2.3.1893, align 8, !invariant.load !195
  %Arg_2.3109.1996 = extractelement <2 x float> %105, i32 0
  %Arg_2.3118.1997 = extractelement <2 x float> %105, i32 1
  %multiply.21.1 = fmul float %Arg_3.4108.1980, %Arg_2.3109.1996
  %subtract.22.1 = fsub float 1.000000e+00, %Arg_2.3109.1996
  %multiply.23.1 = fmul float %multiply.21.1, %subtract.22.1
  %add.28.i503.1 = fadd float %add.28.i504, %multiply.23.1
  %multiply.21119.1 = fmul float %Arg_3.4116.1981, %Arg_2.3118.1997
  %subtract.22123.1 = fsub float 1.000000e+00, %Arg_2.3118.1997
  %multiply.23124.1 = fmul float %multiply.21119.1, %subtract.22123.1
  %add.28.i504.1 = fadd float %add.28.i503.1, %multiply.23124.1
  %Arg_3.4.2899 = getelementptr inbounds float, ptr addrspace(1) %Arg_3.4, i64 2048
  %106 = load <2 x float>, ptr addrspace(1) %Arg_3.4.2899, align 8, !invariant.load !195
  %Arg_3.4108.2982 = extractelement <2 x float> %106, i32 0
  %Arg_3.4116.2983 = extractelement <2 x float> %106, i32 1
  %Arg_2.3.2901 = getelementptr inbounds float, ptr addrspace(1) %Arg_2.3, i64 2048
  %107 = load <2 x float>, ptr addrspace(1) %Arg_2.3.2901, align 8, !invariant.load !195
  %Arg_2.3109.2998 = extractelement <2 x float> %107, i32 0
  %Arg_2.3118.2999 = extractelement <2 x float> %107, i32 1
  %multiply.21.2 = fmul float %Arg_3.4108.2982, %Arg_2.3109.2998
  %subtract.22.2 = fsub float 1.000000e+00, %Arg_2.3109.2998
  %multiply.23.2 = fmul float %multiply.21.2, %subtract.22.2
  %add.28.i503.2 = fadd float %add.28.i504.1, %multiply.23.2
  %multiply.21119.2 = fmul float %Arg_3.4116.2983, %Arg_2.3118.2999
  %subtract.22123.2 = fsub float 1.000000e+00, %Arg_2.3118.2999
  %multiply.23124.2 = fmul float %multiply.21119.2, %subtract.22123.2
  %add.28.i504.2 = fadd float %add.28.i503.2, %multiply.23124.2
  %Arg_3.4.3907 = getelementptr inbounds float, ptr addrspace(1) %Arg_3.4, i64 3072
  %108 = load <2 x float>, ptr addrspace(1) %Arg_3.4.3907, align 8, !invariant.load !195
  %Arg_3.4108.3984 = extractelement <2 x float> %108, i32 0
  %Arg_3.4116.3985 = extractelement <2 x float> %108, i32 1
  %Arg_2.3.3909 = getelementptr inbounds float, ptr addrspace(1) %Arg_2.3, i64 3072
  %109 = load <2 x float>, ptr addrspace(1) %Arg_2.3.3909, align 8, !invariant.load !195
  %Arg_2.3109.31000 = extractelement <2 x float> %109, i32 0
  %Arg_2.3118.31001 = extractelement <2 x float> %109, i32 1
  %multiply.21.3 = fmul float %Arg_3.4108.3984, %Arg_2.3109.31000
  %subtract.22.3 = fsub float 1.000000e+00, %Arg_2.3109.31000
  %multiply.23.3 = fmul float %multiply.21.3, %subtract.22.3
  %add.28.i503.3 = fadd float %add.28.i504.2, %multiply.23.3
  %multiply.21119.3 = fmul float %Arg_3.4116.3985, %Arg_2.3118.31001
  %subtract.22123.3 = fsub float 1.000000e+00, %Arg_2.3118.31001
  %multiply.23124.3 = fmul float %multiply.21119.3, %subtract.22123.3
  %add.28.i504.3 = fadd float %add.28.i503.3, %multiply.23124.3
  %Arg_3.4.4915 = getelementptr inbounds float, ptr addrspace(1) %Arg_3.4, i64 4096
  %110 = load <2 x float>, ptr addrspace(1) %Arg_3.4.4915, align 8, !invariant.load !195
  %Arg_3.4108.4986 = extractelement <2 x float> %110, i32 0
  %Arg_3.4116.4987 = extractelement <2 x float> %110, i32 1
  %Arg_2.3.4917 = getelementptr inbounds float, ptr addrspace(1) %Arg_2.3, i64 4096
  %111 = load <2 x float>, ptr addrspace(1) %Arg_2.3.4917, align 8, !invariant.load !195
  %Arg_2.3109.41002 = extractelement <2 x float> %111, i32 0
  %Arg_2.3118.41003 = extractelement <2 x float> %111, i32 1
  %multiply.21.4 = fmul float %Arg_3.4108.4986, %Arg_2.3109.41002
  %subtract.22.4 = fsub float 1.000000e+00, %Arg_2.3109.41002
  %multiply.23.4 = fmul float %multiply.21.4, %subtract.22.4
  %add.28.i503.4 = fadd float %add.28.i504.3, %multiply.23.4
  %multiply.21119.4 = fmul float %Arg_3.4116.4987, %Arg_2.3118.41003
  %subtract.22123.4 = fsub float 1.000000e+00, %Arg_2.3118.41003
  %multiply.23124.4 = fmul float %multiply.21119.4, %subtract.22123.4
  %add.28.i504.4 = fadd float %add.28.i503.4, %multiply.23124.4
  %Arg_3.4.5923 = getelementptr inbounds float, ptr addrspace(1) %Arg_3.4, i64 5120
  %112 = load <2 x float>, ptr addrspace(1) %Arg_3.4.5923, align 8, !invariant.load !195
  %Arg_3.4108.5988 = extractelement <2 x float> %112, i32 0
  %Arg_3.4116.5989 = extractelement <2 x float> %112, i32 1
  %Arg_2.3.5925 = getelementptr inbounds float, ptr addrspace(1) %Arg_2.3, i64 5120
  %113 = load <2 x float>, ptr addrspace(1) %Arg_2.3.5925, align 8, !invariant.load !195
  %Arg_2.3109.51004 = extractelement <2 x float> %113, i32 0
  %Arg_2.3118.51005 = extractelement <2 x float> %113, i32 1
  %multiply.21.5 = fmul float %Arg_3.4108.5988, %Arg_2.3109.51004
  %subtract.22.5 = fsub float 1.000000e+00, %Arg_2.3109.51004
  %multiply.23.5 = fmul float %multiply.21.5, %subtract.22.5
  %add.28.i503.5 = fadd float %add.28.i504.4, %multiply.23.5
  %multiply.21119.5 = fmul float %Arg_3.4116.5989, %Arg_2.3118.51005
  %subtract.22123.5 = fsub float 1.000000e+00, %Arg_2.3118.51005
  %multiply.23124.5 = fmul float %multiply.21119.5, %subtract.22123.5
  %add.28.i504.5 = fadd float %add.28.i503.5, %multiply.23124.5
  %Arg_3.4.6931 = getelementptr inbounds float, ptr addrspace(1) %Arg_3.4, i64 6144
  %114 = load <2 x float>, ptr addrspace(1) %Arg_3.4.6931, align 8, !invariant.load !195
  %Arg_3.4108.6990 = extractelement <2 x float> %114, i32 0
  %Arg_3.4116.6991 = extractelement <2 x float> %114, i32 1
  %Arg_2.3.6933 = getelementptr inbounds float, ptr addrspace(1) %Arg_2.3, i64 6144
  %115 = load <2 x float>, ptr addrspace(1) %Arg_2.3.6933, align 8, !invariant.load !195
  %Arg_2.3109.61006 = extractelement <2 x float> %115, i32 0
  %Arg_2.3118.61007 = extractelement <2 x float> %115, i32 1
  %multiply.21.6 = fmul float %Arg_3.4108.6990, %Arg_2.3109.61006
  %subtract.22.6 = fsub float 1.000000e+00, %Arg_2.3109.61006
  %multiply.23.6 = fmul float %multiply.21.6, %subtract.22.6
  %add.28.i503.6 = fadd float %add.28.i504.5, %multiply.23.6
  %multiply.21119.6 = fmul float %Arg_3.4116.6991, %Arg_2.3118.61007
  %subtract.22123.6 = fsub float 1.000000e+00, %Arg_2.3118.61007
  %multiply.23124.6 = fmul float %multiply.21119.6, %subtract.22123.6
  %add.28.i504.6 = fadd float %add.28.i503.6, %multiply.23124.6
  %Arg_3.4.7939 = getelementptr inbounds float, ptr addrspace(1) %Arg_3.4, i64 7168
  %116 = load <2 x float>, ptr addrspace(1) %Arg_3.4.7939, align 8, !invariant.load !195
  %Arg_3.4108.7992 = extractelement <2 x float> %116, i32 0
  %Arg_3.4116.7993 = extractelement <2 x float> %116, i32 1
  %Arg_2.3.7941 = getelementptr inbounds float, ptr addrspace(1) %Arg_2.3, i64 7168
  %117 = load <2 x float>, ptr addrspace(1) %Arg_2.3.7941, align 8, !invariant.load !195
  %Arg_2.3109.71008 = extractelement <2 x float> %117, i32 0
  %Arg_2.3118.71009 = extractelement <2 x float> %117, i32 1
  %multiply.21.7 = fmul float %Arg_3.4108.7992, %Arg_2.3109.71008
  %subtract.22.7 = fsub float 1.000000e+00, %Arg_2.3109.71008
  %multiply.23.7 = fmul float %multiply.21.7, %subtract.22.7
  %add.28.i503.7 = fadd float %add.28.i504.6, %multiply.23.7
  %multiply.21119.7 = fmul float %Arg_3.4116.7993, %Arg_2.3118.71009
  %subtract.22123.7 = fsub float 1.000000e+00, %Arg_2.3118.71009
  %multiply.23124.7 = fmul float %multiply.21119.7, %subtract.22123.7
  %add.28.i504.7 = fadd float %add.28.i503.7, %multiply.23124.7
  %lane_id86 = and i32 %99, 31
  %118 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.28.i504.7, i32 16, i32 31)
  %add.28.i = fadd float %add.28.i504.7, %118
  %119 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.28.i, i32 8, i32 31)
  %add.28.i499 = fadd float %add.28.i, %119
  %120 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.28.i499, i32 4, i32 31)
  %add.28.i500 = fadd float %add.28.i499, %120
  %121 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.28.i500, i32 2, i32 31)
  %add.28.i501 = fadd float %add.28.i500, %121
  %122 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.28.i501, i32 1, i32 31)
  %123 = icmp eq i32 %lane_id86, 0
  %124 = lshr i32 %99, 5
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache3, i64 0, i64 0, i64 0, i64 %125
  %add.28.i502 = fadd float %add.28.i501, %122
  br i1 %123, label %intra_warp_reduce_write-true176, label %intra_warp_reduce_write-after177

intra_warp_reduce_write-after177:                 ; preds = %intra_warp_reduce_write-true176, %reduce-group-1-true
  tail call void @llvm.nvvm.barrier0()
  %127 = icmp ult i32 %99, 32
  br i1 %127, label %inter_warp_reduce-true178, label %common.ret

intra_warp_reduce_write-true176:                  ; preds = %reduce-group-1-true
  store float %add.28.i502, ptr addrspace(3) %126, align 4
  br label %intra_warp_reduce_write-after177

inter_warp_reduce-true178:                        ; preds = %intra_warp_reduce_write-after177
  %128 = zext i32 %lane_id86 to i64
  %129 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache3, i64 0, i64 0, i64 0, i64 %128
  %130 = icmp ult i32 %99, 16
  br i1 %130, label %inter_warp_reduce-true178.then551, label %inter_warp_reduce-true178.cont550

inter_warp_reduce-true178.then551:                ; preds = %inter_warp_reduce-true178
  %partial_reduction_result182.then.val = load float, ptr addrspace(3) %129, align 4
  br label %inter_warp_reduce-true178.cont550

inter_warp_reduce-true178.cont550:                ; preds = %inter_warp_reduce-true178, %inter_warp_reduce-true178.then551
  %partial_reduction_result182 = phi float [ %partial_reduction_result182.then.val, %inter_warp_reduce-true178.then551 ], [ -0.000000e+00, %inter_warp_reduce-true178 ]
  %131 = icmp ult i32 %99, 16
  %132 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result182, i32 16, i32 31)
  br i1 %131, label %inter_warp_reduce-true178.then, label %inter_warp_reduce-true178.cont

inter_warp_reduce-true178.then:                   ; preds = %inter_warp_reduce-true178.cont550
  %.val456.then.val = load float, ptr addrspace(3) %129, align 4
  br label %inter_warp_reduce-true178.cont

inter_warp_reduce-true178.cont:                   ; preds = %inter_warp_reduce-true178.cont550, %inter_warp_reduce-true178.then
  %.val456 = phi float [ %.val456.then.val, %inter_warp_reduce-true178.then ], [ -0.000000e+00, %inter_warp_reduce-true178.cont550 ]
  %133 = icmp ult i32 %99, 16
  %add.28.i505 = fadd float %132, %.val456
  br i1 %133, label %inter_warp_reduce-true178.cont.then549, label %inter_warp_reduce-true178.cont.cont548

inter_warp_reduce-true178.cont.then549:           ; preds = %inter_warp_reduce-true178.cont
  store float %add.28.i505, ptr addrspace(3) %129, align 4
  br label %inter_warp_reduce-true178.cont.cont548

inter_warp_reduce-true178.cont.cont548:           ; preds = %inter_warp_reduce-true178.cont, %inter_warp_reduce-true178.cont.then549
  %initial_value_addr180.0 = phi float [ -0.000000e+00, %inter_warp_reduce-true178.cont.then549 ], [ %add.28.i505, %inter_warp_reduce-true178.cont ]
  %134 = icmp ult i32 %99, 16
  %135 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.28.i505, i32 8, i32 31)
  br i1 %134, label %inter_warp_reduce-true178.cont.then, label %inter_warp_reduce-true178.cont.cont

inter_warp_reduce-true178.cont.then:              ; preds = %inter_warp_reduce-true178.cont.cont548
  %.val455.then.val = load float, ptr addrspace(3) %129, align 4
  br label %inter_warp_reduce-true178.cont.cont

inter_warp_reduce-true178.cont.cont:              ; preds = %inter_warp_reduce-true178.cont.cont548, %inter_warp_reduce-true178.cont.then
  %.val455 = phi float [ %.val455.then.val, %inter_warp_reduce-true178.cont.then ], [ %initial_value_addr180.0, %inter_warp_reduce-true178.cont.cont548 ]
  %136 = icmp ult i32 %99, 16
  %add.28.i506 = fadd float %135, %.val455
  br i1 %136, label %inter_warp_reduce-true178.cont.cont.then547, label %inter_warp_reduce-true178.cont.cont.cont546

inter_warp_reduce-true178.cont.cont.then547:      ; preds = %inter_warp_reduce-true178.cont.cont
  store float %add.28.i506, ptr addrspace(3) %129, align 4
  br label %inter_warp_reduce-true178.cont.cont.cont546

inter_warp_reduce-true178.cont.cont.cont546:      ; preds = %inter_warp_reduce-true178.cont.cont, %inter_warp_reduce-true178.cont.cont.then547
  %initial_value_addr180.1 = phi float [ %initial_value_addr180.0, %inter_warp_reduce-true178.cont.cont.then547 ], [ %add.28.i506, %inter_warp_reduce-true178.cont.cont ]
  %137 = icmp ult i32 %99, 16
  %138 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.28.i506, i32 4, i32 31)
  br i1 %137, label %inter_warp_reduce-true178.cont.cont.then, label %inter_warp_reduce-true178.cont.cont.cont

inter_warp_reduce-true178.cont.cont.then:         ; preds = %inter_warp_reduce-true178.cont.cont.cont546
  %.val454.then.val = load float, ptr addrspace(3) %129, align 4
  br label %inter_warp_reduce-true178.cont.cont.cont

inter_warp_reduce-true178.cont.cont.cont:         ; preds = %inter_warp_reduce-true178.cont.cont.cont546, %inter_warp_reduce-true178.cont.cont.then
  %.val454 = phi float [ %.val454.then.val, %inter_warp_reduce-true178.cont.cont.then ], [ %initial_value_addr180.1, %inter_warp_reduce-true178.cont.cont.cont546 ]
  %139 = icmp ult i32 %99, 16
  %add.28.i507 = fadd float %138, %.val454
  br i1 %139, label %inter_warp_reduce-true178.cont.cont.cont.then545, label %inter_warp_reduce-true178.cont.cont.cont.cont544

inter_warp_reduce-true178.cont.cont.cont.then545: ; preds = %inter_warp_reduce-true178.cont.cont.cont
  store float %add.28.i507, ptr addrspace(3) %129, align 4
  br label %inter_warp_reduce-true178.cont.cont.cont.cont544

inter_warp_reduce-true178.cont.cont.cont.cont544: ; preds = %inter_warp_reduce-true178.cont.cont.cont, %inter_warp_reduce-true178.cont.cont.cont.then545
  %initial_value_addr180.2 = phi float [ %initial_value_addr180.1, %inter_warp_reduce-true178.cont.cont.cont.then545 ], [ %add.28.i507, %inter_warp_reduce-true178.cont.cont.cont ]
  %140 = icmp ult i32 %99, 16
  %141 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.28.i507, i32 2, i32 31)
  br i1 %140, label %inter_warp_reduce-true178.cont.cont.cont.then, label %inter_warp_reduce-true178.cont.cont.cont.cont

inter_warp_reduce-true178.cont.cont.cont.then:    ; preds = %inter_warp_reduce-true178.cont.cont.cont.cont544
  %.val453.then.val = load float, ptr addrspace(3) %129, align 4
  br label %inter_warp_reduce-true178.cont.cont.cont.cont

inter_warp_reduce-true178.cont.cont.cont.cont:    ; preds = %inter_warp_reduce-true178.cont.cont.cont.cont544, %inter_warp_reduce-true178.cont.cont.cont.then
  %.val453 = phi float [ %.val453.then.val, %inter_warp_reduce-true178.cont.cont.cont.then ], [ %initial_value_addr180.2, %inter_warp_reduce-true178.cont.cont.cont.cont544 ]
  %142 = icmp ult i32 %99, 16
  %add.28.i508 = fadd float %141, %.val453
  br i1 %142, label %inter_warp_reduce-true178.cont.cont.cont.cont.then543, label %inter_warp_reduce-true178.cont.cont.cont.cont.cont542

inter_warp_reduce-true178.cont.cont.cont.cont.then543: ; preds = %inter_warp_reduce-true178.cont.cont.cont.cont
  store float %add.28.i508, ptr addrspace(3) %129, align 4
  br label %inter_warp_reduce-true178.cont.cont.cont.cont.cont542

inter_warp_reduce-true178.cont.cont.cont.cont.cont542: ; preds = %inter_warp_reduce-true178.cont.cont.cont.cont, %inter_warp_reduce-true178.cont.cont.cont.cont.then543
  %initial_value_addr180.3 = phi float [ %initial_value_addr180.2, %inter_warp_reduce-true178.cont.cont.cont.cont.then543 ], [ %add.28.i508, %inter_warp_reduce-true178.cont.cont.cont.cont ]
  %143 = icmp ult i32 %99, 16
  %144 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.28.i508, i32 1, i32 31)
  br i1 %143, label %inter_warp_reduce-true178.cont.cont.cont.cont.then, label %inter_warp_reduce-true178.cont.cont.cont.cont.cont

inter_warp_reduce-true178.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true178.cont.cont.cont.cont.cont542
  %.val452.then.val = load float, ptr addrspace(3) %129, align 4
  br label %inter_warp_reduce-true178.cont.cont.cont.cont.cont

inter_warp_reduce-true178.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true178.cont.cont.cont.cont.cont542, %inter_warp_reduce-true178.cont.cont.cont.cont.then
  %.val452 = phi float [ %.val452.then.val, %inter_warp_reduce-true178.cont.cont.cont.cont.then ], [ %initial_value_addr180.3, %inter_warp_reduce-true178.cont.cont.cont.cont.cont542 ]
  %145 = icmp ult i32 %99, 16
  %add.28.i509 = fadd float %144, %.val452
  br i1 %145, label %inter_warp_reduce-true178.cont.cont.cont.cont.cont.then, label %inter_warp_reduce-true178.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true178.cont.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true178.cont.cont.cont.cont.cont
  store float %add.28.i509, ptr addrspace(3) %129, align 4
  br label %inter_warp_reduce-true178.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true178.cont.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true178.cont.cont.cont.cont.cont, %inter_warp_reduce-true178.cont.cont.cont.cont.cont.then
  %146 = icmp eq i32 %99, 0
  br i1 %146, label %reduction_write_output-true196, label %common.ret

reduction_write_output-true196:                   ; preds = %inter_warp_reduce-true178.cont.cont.cont.cont.cont.cont
  store float %add.28.i509, ptr addrspace(1) %arg9700, align 128
  br label %common.ret

intra_warp_reduce_write-after296:                 ; preds = %intra_warp_reduce_write-true295, %entry.reduce-group-2-true_crit_edge
  tail call void @llvm.nvvm.barrier0()
  %147 = icmp ult i32 %.pre, 32
  br i1 %147, label %inter_warp_reduce-true297, label %common.ret

intra_warp_reduce_write-true295:                  ; preds = %entry.reduce-group-2-true_crit_edge
  store float %add.37.i513, ptr addrspace(3) %25, align 4
  br label %intra_warp_reduce_write-after296

inter_warp_reduce-true297:                        ; preds = %intra_warp_reduce_write-after296
  %148 = zext i32 %.pre629 to i64
  %149 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache4, i64 0, i64 0, i64 0, i64 %148
  %150 = icmp ult i32 %.pre, 16
  br i1 %150, label %inter_warp_reduce-true297.then561, label %inter_warp_reduce-true297.cont560

inter_warp_reduce-true297.then561:                ; preds = %inter_warp_reduce-true297
  %partial_reduction_result301.then.val = load float, ptr addrspace(3) %149, align 4
  br label %inter_warp_reduce-true297.cont560

inter_warp_reduce-true297.cont560:                ; preds = %inter_warp_reduce-true297, %inter_warp_reduce-true297.then561
  %partial_reduction_result301 = phi float [ %partial_reduction_result301.then.val, %inter_warp_reduce-true297.then561 ], [ -0.000000e+00, %inter_warp_reduce-true297 ]
  %151 = icmp ult i32 %.pre, 16
  %152 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result301, i32 16, i32 31)
  br i1 %151, label %inter_warp_reduce-true297.then, label %inter_warp_reduce-true297.cont

inter_warp_reduce-true297.then:                   ; preds = %inter_warp_reduce-true297.cont560
  %.val468.then.val = load float, ptr addrspace(3) %149, align 4
  br label %inter_warp_reduce-true297.cont

inter_warp_reduce-true297.cont:                   ; preds = %inter_warp_reduce-true297.cont560, %inter_warp_reduce-true297.then
  %.val468 = phi float [ %.val468.then.val, %inter_warp_reduce-true297.then ], [ -0.000000e+00, %inter_warp_reduce-true297.cont560 ]
  %153 = icmp ult i32 %.pre, 16
  %add.37.i516 = fadd float %152, %.val468
  br i1 %153, label %inter_warp_reduce-true297.cont.then559, label %inter_warp_reduce-true297.cont.cont558

inter_warp_reduce-true297.cont.then559:           ; preds = %inter_warp_reduce-true297.cont
  store float %add.37.i516, ptr addrspace(3) %149, align 4
  br label %inter_warp_reduce-true297.cont.cont558

inter_warp_reduce-true297.cont.cont558:           ; preds = %inter_warp_reduce-true297.cont, %inter_warp_reduce-true297.cont.then559
  %initial_value_addr299.0 = phi float [ -0.000000e+00, %inter_warp_reduce-true297.cont.then559 ], [ %add.37.i516, %inter_warp_reduce-true297.cont ]
  %154 = icmp ult i32 %.pre, 16
  %155 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.37.i516, i32 8, i32 31)
  br i1 %154, label %inter_warp_reduce-true297.cont.then, label %inter_warp_reduce-true297.cont.cont

inter_warp_reduce-true297.cont.then:              ; preds = %inter_warp_reduce-true297.cont.cont558
  %.val467.then.val = load float, ptr addrspace(3) %149, align 4
  br label %inter_warp_reduce-true297.cont.cont

inter_warp_reduce-true297.cont.cont:              ; preds = %inter_warp_reduce-true297.cont.cont558, %inter_warp_reduce-true297.cont.then
  %.val467 = phi float [ %.val467.then.val, %inter_warp_reduce-true297.cont.then ], [ %initial_value_addr299.0, %inter_warp_reduce-true297.cont.cont558 ]
  %156 = icmp ult i32 %.pre, 16
  %add.37.i517 = fadd float %155, %.val467
  br i1 %156, label %inter_warp_reduce-true297.cont.cont.then557, label %inter_warp_reduce-true297.cont.cont.cont556

inter_warp_reduce-true297.cont.cont.then557:      ; preds = %inter_warp_reduce-true297.cont.cont
  store float %add.37.i517, ptr addrspace(3) %149, align 4
  br label %inter_warp_reduce-true297.cont.cont.cont556

inter_warp_reduce-true297.cont.cont.cont556:      ; preds = %inter_warp_reduce-true297.cont.cont, %inter_warp_reduce-true297.cont.cont.then557
  %initial_value_addr299.1 = phi float [ %initial_value_addr299.0, %inter_warp_reduce-true297.cont.cont.then557 ], [ %add.37.i517, %inter_warp_reduce-true297.cont.cont ]
  %157 = icmp ult i32 %.pre, 16
  %158 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.37.i517, i32 4, i32 31)
  br i1 %157, label %inter_warp_reduce-true297.cont.cont.then, label %inter_warp_reduce-true297.cont.cont.cont

inter_warp_reduce-true297.cont.cont.then:         ; preds = %inter_warp_reduce-true297.cont.cont.cont556
  %.val466.then.val = load float, ptr addrspace(3) %149, align 4
  br label %inter_warp_reduce-true297.cont.cont.cont

inter_warp_reduce-true297.cont.cont.cont:         ; preds = %inter_warp_reduce-true297.cont.cont.cont556, %inter_warp_reduce-true297.cont.cont.then
  %.val466 = phi float [ %.val466.then.val, %inter_warp_reduce-true297.cont.cont.then ], [ %initial_value_addr299.1, %inter_warp_reduce-true297.cont.cont.cont556 ]
  %159 = icmp ult i32 %.pre, 16
  %add.37.i518 = fadd float %158, %.val466
  br i1 %159, label %inter_warp_reduce-true297.cont.cont.cont.then555, label %inter_warp_reduce-true297.cont.cont.cont.cont554

inter_warp_reduce-true297.cont.cont.cont.then555: ; preds = %inter_warp_reduce-true297.cont.cont.cont
  store float %add.37.i518, ptr addrspace(3) %149, align 4
  br label %inter_warp_reduce-true297.cont.cont.cont.cont554

inter_warp_reduce-true297.cont.cont.cont.cont554: ; preds = %inter_warp_reduce-true297.cont.cont.cont, %inter_warp_reduce-true297.cont.cont.cont.then555
  %initial_value_addr299.2 = phi float [ %initial_value_addr299.1, %inter_warp_reduce-true297.cont.cont.cont.then555 ], [ %add.37.i518, %inter_warp_reduce-true297.cont.cont.cont ]
  %160 = icmp ult i32 %.pre, 16
  %161 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.37.i518, i32 2, i32 31)
  br i1 %160, label %inter_warp_reduce-true297.cont.cont.cont.then, label %inter_warp_reduce-true297.cont.cont.cont.cont

inter_warp_reduce-true297.cont.cont.cont.then:    ; preds = %inter_warp_reduce-true297.cont.cont.cont.cont554
  %.val465.then.val = load float, ptr addrspace(3) %149, align 4
  br label %inter_warp_reduce-true297.cont.cont.cont.cont

inter_warp_reduce-true297.cont.cont.cont.cont:    ; preds = %inter_warp_reduce-true297.cont.cont.cont.cont554, %inter_warp_reduce-true297.cont.cont.cont.then
  %.val465 = phi float [ %.val465.then.val, %inter_warp_reduce-true297.cont.cont.cont.then ], [ %initial_value_addr299.2, %inter_warp_reduce-true297.cont.cont.cont.cont554 ]
  %162 = icmp ult i32 %.pre, 16
  %add.37.i519 = fadd float %161, %.val465
  br i1 %162, label %inter_warp_reduce-true297.cont.cont.cont.cont.then553, label %inter_warp_reduce-true297.cont.cont.cont.cont.cont552

inter_warp_reduce-true297.cont.cont.cont.cont.then553: ; preds = %inter_warp_reduce-true297.cont.cont.cont.cont
  store float %add.37.i519, ptr addrspace(3) %149, align 4
  br label %inter_warp_reduce-true297.cont.cont.cont.cont.cont552

inter_warp_reduce-true297.cont.cont.cont.cont.cont552: ; preds = %inter_warp_reduce-true297.cont.cont.cont.cont, %inter_warp_reduce-true297.cont.cont.cont.cont.then553
  %initial_value_addr299.3 = phi float [ %initial_value_addr299.2, %inter_warp_reduce-true297.cont.cont.cont.cont.then553 ], [ %add.37.i519, %inter_warp_reduce-true297.cont.cont.cont.cont ]
  %163 = icmp ult i32 %.pre, 16
  %164 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.37.i519, i32 1, i32 31)
  br i1 %163, label %inter_warp_reduce-true297.cont.cont.cont.cont.then, label %inter_warp_reduce-true297.cont.cont.cont.cont.cont

inter_warp_reduce-true297.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true297.cont.cont.cont.cont.cont552
  %.val464.then.val = load float, ptr addrspace(3) %149, align 4
  br label %inter_warp_reduce-true297.cont.cont.cont.cont.cont

inter_warp_reduce-true297.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true297.cont.cont.cont.cont.cont552, %inter_warp_reduce-true297.cont.cont.cont.cont.then
  %.val464 = phi float [ %.val464.then.val, %inter_warp_reduce-true297.cont.cont.cont.cont.then ], [ %initial_value_addr299.3, %inter_warp_reduce-true297.cont.cont.cont.cont.cont552 ]
  %165 = icmp ult i32 %.pre, 16
  %add.37.i520 = fadd float %164, %.val464
  br i1 %165, label %inter_warp_reduce-true297.cont.cont.cont.cont.cont.then, label %inter_warp_reduce-true297.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true297.cont.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true297.cont.cont.cont.cont.cont
  store float %add.37.i520, ptr addrspace(3) %149, align 4
  br label %inter_warp_reduce-true297.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true297.cont.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true297.cont.cont.cont.cont.cont, %inter_warp_reduce-true297.cont.cont.cont.cont.cont.then
  %166 = icmp eq i32 %.pre, 0
  br i1 %166, label %reduction_write_output-true315, label %common.ret

reduction_write_output-true315:                   ; preds = %inter_warp_reduce-true297.cont.cont.cont.cont.cont.cont
  store float %add.37.i520, ptr addrspace(1) %arg10702, align 128
  br label %common.ret

intra_warp_reduce_write-after415:                 ; preds = %intra_warp_reduce_write-true414, %entry.reduce-group-3-true_crit_edge
  tail call void @llvm.nvvm.barrier0()
  %167 = icmp ult i32 %.pre630, 32
  br i1 %167, label %inter_warp_reduce-true416, label %common.ret

intra_warp_reduce_write-true414:                  ; preds = %entry.reduce-group-3-true_crit_edge
  store float %add.46.i524, ptr addrspace(3) %50, align 4
  br label %intra_warp_reduce_write-after415

inter_warp_reduce-true416:                        ; preds = %intra_warp_reduce_write-after415
  %168 = zext i32 %.pre681 to i64
  %169 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache5, i64 0, i64 0, i64 0, i64 %168
  %170 = icmp ult i32 %.pre630, 16
  br i1 %170, label %inter_warp_reduce-true416.then571, label %inter_warp_reduce-true416.cont570

inter_warp_reduce-true416.then571:                ; preds = %inter_warp_reduce-true416
  %partial_reduction_result420.then.val = load float, ptr addrspace(3) %169, align 4
  br label %inter_warp_reduce-true416.cont570

inter_warp_reduce-true416.cont570:                ; preds = %inter_warp_reduce-true416, %inter_warp_reduce-true416.then571
  %partial_reduction_result420 = phi float [ %partial_reduction_result420.then.val, %inter_warp_reduce-true416.then571 ], [ -0.000000e+00, %inter_warp_reduce-true416 ]
  %171 = icmp ult i32 %.pre630, 16
  %172 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result420, i32 16, i32 31)
  br i1 %171, label %inter_warp_reduce-true416.then, label %inter_warp_reduce-true416.cont

inter_warp_reduce-true416.then:                   ; preds = %inter_warp_reduce-true416.cont570
  %.val480.then.val = load float, ptr addrspace(3) %169, align 4
  br label %inter_warp_reduce-true416.cont

inter_warp_reduce-true416.cont:                   ; preds = %inter_warp_reduce-true416.cont570, %inter_warp_reduce-true416.then
  %.val480 = phi float [ %.val480.then.val, %inter_warp_reduce-true416.then ], [ -0.000000e+00, %inter_warp_reduce-true416.cont570 ]
  %173 = icmp ult i32 %.pre630, 16
  %add.46.i527 = fadd float %172, %.val480
  br i1 %173, label %inter_warp_reduce-true416.cont.then569, label %inter_warp_reduce-true416.cont.cont568

inter_warp_reduce-true416.cont.then569:           ; preds = %inter_warp_reduce-true416.cont
  store float %add.46.i527, ptr addrspace(3) %169, align 4
  br label %inter_warp_reduce-true416.cont.cont568

inter_warp_reduce-true416.cont.cont568:           ; preds = %inter_warp_reduce-true416.cont, %inter_warp_reduce-true416.cont.then569
  %initial_value_addr418.0 = phi float [ -0.000000e+00, %inter_warp_reduce-true416.cont.then569 ], [ %add.46.i527, %inter_warp_reduce-true416.cont ]
  %174 = icmp ult i32 %.pre630, 16
  %175 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.46.i527, i32 8, i32 31)
  br i1 %174, label %inter_warp_reduce-true416.cont.then, label %inter_warp_reduce-true416.cont.cont

inter_warp_reduce-true416.cont.then:              ; preds = %inter_warp_reduce-true416.cont.cont568
  %.val479.then.val = load float, ptr addrspace(3) %169, align 4
  br label %inter_warp_reduce-true416.cont.cont

inter_warp_reduce-true416.cont.cont:              ; preds = %inter_warp_reduce-true416.cont.cont568, %inter_warp_reduce-true416.cont.then
  %.val479 = phi float [ %.val479.then.val, %inter_warp_reduce-true416.cont.then ], [ %initial_value_addr418.0, %inter_warp_reduce-true416.cont.cont568 ]
  %176 = icmp ult i32 %.pre630, 16
  %add.46.i528 = fadd float %175, %.val479
  br i1 %176, label %inter_warp_reduce-true416.cont.cont.then567, label %inter_warp_reduce-true416.cont.cont.cont566

inter_warp_reduce-true416.cont.cont.then567:      ; preds = %inter_warp_reduce-true416.cont.cont
  store float %add.46.i528, ptr addrspace(3) %169, align 4
  br label %inter_warp_reduce-true416.cont.cont.cont566

inter_warp_reduce-true416.cont.cont.cont566:      ; preds = %inter_warp_reduce-true416.cont.cont, %inter_warp_reduce-true416.cont.cont.then567
  %initial_value_addr418.1 = phi float [ %initial_value_addr418.0, %inter_warp_reduce-true416.cont.cont.then567 ], [ %add.46.i528, %inter_warp_reduce-true416.cont.cont ]
  %177 = icmp ult i32 %.pre630, 16
  %178 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.46.i528, i32 4, i32 31)
  br i1 %177, label %inter_warp_reduce-true416.cont.cont.then, label %inter_warp_reduce-true416.cont.cont.cont

inter_warp_reduce-true416.cont.cont.then:         ; preds = %inter_warp_reduce-true416.cont.cont.cont566
  %.val478.then.val = load float, ptr addrspace(3) %169, align 4
  br label %inter_warp_reduce-true416.cont.cont.cont

inter_warp_reduce-true416.cont.cont.cont:         ; preds = %inter_warp_reduce-true416.cont.cont.cont566, %inter_warp_reduce-true416.cont.cont.then
  %.val478 = phi float [ %.val478.then.val, %inter_warp_reduce-true416.cont.cont.then ], [ %initial_value_addr418.1, %inter_warp_reduce-true416.cont.cont.cont566 ]
  %179 = icmp ult i32 %.pre630, 16
  %add.46.i529 = fadd float %178, %.val478
  br i1 %179, label %inter_warp_reduce-true416.cont.cont.cont.then565, label %inter_warp_reduce-true416.cont.cont.cont.cont564

inter_warp_reduce-true416.cont.cont.cont.then565: ; preds = %inter_warp_reduce-true416.cont.cont.cont
  store float %add.46.i529, ptr addrspace(3) %169, align 4
  br label %inter_warp_reduce-true416.cont.cont.cont.cont564

inter_warp_reduce-true416.cont.cont.cont.cont564: ; preds = %inter_warp_reduce-true416.cont.cont.cont, %inter_warp_reduce-true416.cont.cont.cont.then565
  %initial_value_addr418.2 = phi float [ %initial_value_addr418.1, %inter_warp_reduce-true416.cont.cont.cont.then565 ], [ %add.46.i529, %inter_warp_reduce-true416.cont.cont.cont ]
  %180 = icmp ult i32 %.pre630, 16
  %181 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.46.i529, i32 2, i32 31)
  br i1 %180, label %inter_warp_reduce-true416.cont.cont.cont.then, label %inter_warp_reduce-true416.cont.cont.cont.cont

inter_warp_reduce-true416.cont.cont.cont.then:    ; preds = %inter_warp_reduce-true416.cont.cont.cont.cont564
  %.val477.then.val = load float, ptr addrspace(3) %169, align 4
  br label %inter_warp_reduce-true416.cont.cont.cont.cont

inter_warp_reduce-true416.cont.cont.cont.cont:    ; preds = %inter_warp_reduce-true416.cont.cont.cont.cont564, %inter_warp_reduce-true416.cont.cont.cont.then
  %.val477 = phi float [ %.val477.then.val, %inter_warp_reduce-true416.cont.cont.cont.then ], [ %initial_value_addr418.2, %inter_warp_reduce-true416.cont.cont.cont.cont564 ]
  %182 = icmp ult i32 %.pre630, 16
  %add.46.i530 = fadd float %181, %.val477
  br i1 %182, label %inter_warp_reduce-true416.cont.cont.cont.cont.then563, label %inter_warp_reduce-true416.cont.cont.cont.cont.cont562

inter_warp_reduce-true416.cont.cont.cont.cont.then563: ; preds = %inter_warp_reduce-true416.cont.cont.cont.cont
  store float %add.46.i530, ptr addrspace(3) %169, align 4
  br label %inter_warp_reduce-true416.cont.cont.cont.cont.cont562

inter_warp_reduce-true416.cont.cont.cont.cont.cont562: ; preds = %inter_warp_reduce-true416.cont.cont.cont.cont, %inter_warp_reduce-true416.cont.cont.cont.cont.then563
  %initial_value_addr418.3 = phi float [ %initial_value_addr418.2, %inter_warp_reduce-true416.cont.cont.cont.cont.then563 ], [ %add.46.i530, %inter_warp_reduce-true416.cont.cont.cont.cont ]
  %183 = icmp ult i32 %.pre630, 16
  %184 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.46.i530, i32 1, i32 31)
  br i1 %183, label %inter_warp_reduce-true416.cont.cont.cont.cont.then, label %inter_warp_reduce-true416.cont.cont.cont.cont.cont

inter_warp_reduce-true416.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true416.cont.cont.cont.cont.cont562
  %.val476.then.val = load float, ptr addrspace(3) %169, align 4
  br label %inter_warp_reduce-true416.cont.cont.cont.cont.cont

inter_warp_reduce-true416.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true416.cont.cont.cont.cont.cont562, %inter_warp_reduce-true416.cont.cont.cont.cont.then
  %.val476 = phi float [ %.val476.then.val, %inter_warp_reduce-true416.cont.cont.cont.cont.then ], [ %initial_value_addr418.3, %inter_warp_reduce-true416.cont.cont.cont.cont.cont562 ]
  %185 = icmp ult i32 %.pre630, 16
  %add.46.i531 = fadd float %184, %.val476
  br i1 %185, label %inter_warp_reduce-true416.cont.cont.cont.cont.cont.then, label %inter_warp_reduce-true416.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true416.cont.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true416.cont.cont.cont.cont.cont
  store float %add.46.i531, ptr addrspace(3) %169, align 4
  br label %inter_warp_reduce-true416.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true416.cont.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true416.cont.cont.cont.cont.cont, %inter_warp_reduce-true416.cont.cont.cont.cont.cont.then
  %186 = icmp eq i32 %.pre630, 0
  br i1 %186, label %reduction_write_output-true434, label %common.ret

reduction_write_output-true434:                   ; preds = %inter_warp_reduce-true416.cont.cont.cont.cont.cont.cont
  store float %add.46.i531, ptr addrspace(1) %arg11704, align 128
  br label %common.ret
}

; Function Attrs: nounwind
define void @fusion_547(ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg3, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg5, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg6, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg7, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg8, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg9, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg10, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg11, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg12, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg13, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg14, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg15, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg16, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg17, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg18, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg19, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg20, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg21, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg22, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg23) local_unnamed_addr #0 {
entry:
  %arg231520 = addrspacecast ptr %arg23 to ptr addrspace(1)
  %arg221518 = addrspacecast ptr %arg22 to ptr addrspace(1)
  %arg211516 = addrspacecast ptr %arg21 to ptr addrspace(1)
  %arg201514 = addrspacecast ptr %arg20 to ptr addrspace(1)
  %arg191512 = addrspacecast ptr %arg19 to ptr addrspace(1)
  %arg181510 = addrspacecast ptr %arg18 to ptr addrspace(1)
  %arg171508 = addrspacecast ptr %arg17 to ptr addrspace(1)
  %arg161506 = addrspacecast ptr %arg16 to ptr addrspace(1)
  %arg151504 = addrspacecast ptr %arg15 to ptr addrspace(1)
  %arg141502 = addrspacecast ptr %arg14 to ptr addrspace(1)
  %arg131500 = addrspacecast ptr %arg13 to ptr addrspace(1)
  %arg121498 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg111496 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg101494 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg91492 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg81490 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg71488 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg61486 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg51484 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg41482 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg31480 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg21478 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg11476 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg01474 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !197
  switch i32 %0, label %entry.unreachabledefault [
    i32 0, label %reduce-group-0-true
    i32 1, label %reduce-group-1-true
    i32 2, label %entry.reduce-group-2-true_crit_edge
    i32 3, label %entry.reduce-group-3-true_crit_edge
    i32 4, label %entry.reduce-group-4-true_crit_edge
    i32 5, label %entry.reduce-group-5-true_crit_edge
    i32 6, label %entry.reduce-group-6-true_crit_edge
    i32 7, label %entry.reduce-group-7-true_crit_edge
  ]

entry.reduce-group-2-true_crit_edge:              ; preds = %entry
  %.pre = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !194
  %.pre1164 = shl nuw nsw i32 %.pre, 1
  %.pre1166 = zext i32 %.pre1164 to i64
  %.pre1213 = and i32 %.pre, 31
  %Arg_5.6 = getelementptr float, ptr addrspace(1) %arg51484, i64 %.pre1166
  %1 = load <2 x float>, ptr addrspace(1) %Arg_5.6, align 8, !invariant.load !195
  %Arg_5.61922066 = extractelement <2 x float> %1, i32 0
  %Arg_5.61992067 = extractelement <2 x float> %1, i32 1
  %Arg_4.5 = getelementptr float, ptr addrspace(1) %arg41482, i64 %.pre1166
  %2 = load <2 x float>, ptr addrspace(1) %Arg_4.5, align 8, !invariant.load !195
  %Arg_4.51932082 = extractelement <2 x float> %2, i32 0
  %Arg_4.52012083 = extractelement <2 x float> %2, i32 1
  %multiply.32 = fmul float %Arg_5.61922066, %Arg_4.51932082
  %subtract.35 = fsub float 1.000000e+00, %Arg_4.51932082
  %multiply.36 = fmul float %multiply.32, %subtract.35
  %multiply.32202 = fmul float %Arg_5.61992067, %Arg_4.52012083
  %subtract.35206 = fsub float 1.000000e+00, %Arg_4.52012083
  %multiply.36207 = fmul float %multiply.32202, %subtract.35206
  %add.41.i1007 = fadd float %multiply.36, %multiply.36207
  %Arg_5.6.11527 = getelementptr inbounds float, ptr addrspace(1) %Arg_5.6, i64 1024
  %3 = load <2 x float>, ptr addrspace(1) %Arg_5.6.11527, align 8, !invariant.load !195
  %Arg_5.6192.12068 = extractelement <2 x float> %3, i32 0
  %Arg_5.6199.12069 = extractelement <2 x float> %3, i32 1
  %Arg_4.5.11529 = getelementptr inbounds float, ptr addrspace(1) %Arg_4.5, i64 1024
  %4 = load <2 x float>, ptr addrspace(1) %Arg_4.5.11529, align 8, !invariant.load !195
  %Arg_4.5193.12084 = extractelement <2 x float> %4, i32 0
  %Arg_4.5201.12085 = extractelement <2 x float> %4, i32 1
  %multiply.32.1 = fmul float %Arg_5.6192.12068, %Arg_4.5193.12084
  %subtract.35.1 = fsub float 1.000000e+00, %Arg_4.5193.12084
  %multiply.36.1 = fmul float %multiply.32.1, %subtract.35.1
  %add.41.i1006.1 = fadd float %add.41.i1007, %multiply.36.1
  %multiply.32202.1 = fmul float %Arg_5.6199.12069, %Arg_4.5201.12085
  %subtract.35206.1 = fsub float 1.000000e+00, %Arg_4.5201.12085
  %multiply.36207.1 = fmul float %multiply.32202.1, %subtract.35206.1
  %add.41.i1007.1 = fadd float %add.41.i1006.1, %multiply.36207.1
  %Arg_5.6.21535 = getelementptr inbounds float, ptr addrspace(1) %Arg_5.6, i64 2048
  %5 = load <2 x float>, ptr addrspace(1) %Arg_5.6.21535, align 8, !invariant.load !195
  %Arg_5.6192.22070 = extractelement <2 x float> %5, i32 0
  %Arg_5.6199.22071 = extractelement <2 x float> %5, i32 1
  %Arg_4.5.21537 = getelementptr inbounds float, ptr addrspace(1) %Arg_4.5, i64 2048
  %6 = load <2 x float>, ptr addrspace(1) %Arg_4.5.21537, align 8, !invariant.load !195
  %Arg_4.5193.22086 = extractelement <2 x float> %6, i32 0
  %Arg_4.5201.22087 = extractelement <2 x float> %6, i32 1
  %multiply.32.2 = fmul float %Arg_5.6192.22070, %Arg_4.5193.22086
  %subtract.35.2 = fsub float 1.000000e+00, %Arg_4.5193.22086
  %multiply.36.2 = fmul float %multiply.32.2, %subtract.35.2
  %add.41.i1006.2 = fadd float %add.41.i1007.1, %multiply.36.2
  %multiply.32202.2 = fmul float %Arg_5.6199.22071, %Arg_4.5201.22087
  %subtract.35206.2 = fsub float 1.000000e+00, %Arg_4.5201.22087
  %multiply.36207.2 = fmul float %multiply.32202.2, %subtract.35206.2
  %add.41.i1007.2 = fadd float %add.41.i1006.2, %multiply.36207.2
  %Arg_5.6.31543 = getelementptr inbounds float, ptr addrspace(1) %Arg_5.6, i64 3072
  %7 = load <2 x float>, ptr addrspace(1) %Arg_5.6.31543, align 8, !invariant.load !195
  %Arg_5.6192.32072 = extractelement <2 x float> %7, i32 0
  %Arg_5.6199.32073 = extractelement <2 x float> %7, i32 1
  %Arg_4.5.31545 = getelementptr inbounds float, ptr addrspace(1) %Arg_4.5, i64 3072
  %8 = load <2 x float>, ptr addrspace(1) %Arg_4.5.31545, align 8, !invariant.load !195
  %Arg_4.5193.32088 = extractelement <2 x float> %8, i32 0
  %Arg_4.5201.32089 = extractelement <2 x float> %8, i32 1
  %multiply.32.3 = fmul float %Arg_5.6192.32072, %Arg_4.5193.32088
  %subtract.35.3 = fsub float 1.000000e+00, %Arg_4.5193.32088
  %multiply.36.3 = fmul float %multiply.32.3, %subtract.35.3
  %add.41.i1006.3 = fadd float %add.41.i1007.2, %multiply.36.3
  %multiply.32202.3 = fmul float %Arg_5.6199.32073, %Arg_4.5201.32089
  %subtract.35206.3 = fsub float 1.000000e+00, %Arg_4.5201.32089
  %multiply.36207.3 = fmul float %multiply.32202.3, %subtract.35206.3
  %add.41.i1007.3 = fadd float %add.41.i1006.3, %multiply.36207.3
  %Arg_5.6.41551 = getelementptr inbounds float, ptr addrspace(1) %Arg_5.6, i64 4096
  %9 = load <2 x float>, ptr addrspace(1) %Arg_5.6.41551, align 8, !invariant.load !195
  %Arg_5.6192.42074 = extractelement <2 x float> %9, i32 0
  %Arg_5.6199.42075 = extractelement <2 x float> %9, i32 1
  %Arg_4.5.41553 = getelementptr inbounds float, ptr addrspace(1) %Arg_4.5, i64 4096
  %10 = load <2 x float>, ptr addrspace(1) %Arg_4.5.41553, align 8, !invariant.load !195
  %Arg_4.5193.42090 = extractelement <2 x float> %10, i32 0
  %Arg_4.5201.42091 = extractelement <2 x float> %10, i32 1
  %multiply.32.4 = fmul float %Arg_5.6192.42074, %Arg_4.5193.42090
  %subtract.35.4 = fsub float 1.000000e+00, %Arg_4.5193.42090
  %multiply.36.4 = fmul float %multiply.32.4, %subtract.35.4
  %add.41.i1006.4 = fadd float %add.41.i1007.3, %multiply.36.4
  %multiply.32202.4 = fmul float %Arg_5.6199.42075, %Arg_4.5201.42091
  %subtract.35206.4 = fsub float 1.000000e+00, %Arg_4.5201.42091
  %multiply.36207.4 = fmul float %multiply.32202.4, %subtract.35206.4
  %add.41.i1007.4 = fadd float %add.41.i1006.4, %multiply.36207.4
  %Arg_5.6.51559 = getelementptr inbounds float, ptr addrspace(1) %Arg_5.6, i64 5120
  %11 = load <2 x float>, ptr addrspace(1) %Arg_5.6.51559, align 8, !invariant.load !195
  %Arg_5.6192.52076 = extractelement <2 x float> %11, i32 0
  %Arg_5.6199.52077 = extractelement <2 x float> %11, i32 1
  %Arg_4.5.51561 = getelementptr inbounds float, ptr addrspace(1) %Arg_4.5, i64 5120
  %12 = load <2 x float>, ptr addrspace(1) %Arg_4.5.51561, align 8, !invariant.load !195
  %Arg_4.5193.52092 = extractelement <2 x float> %12, i32 0
  %Arg_4.5201.52093 = extractelement <2 x float> %12, i32 1
  %multiply.32.5 = fmul float %Arg_5.6192.52076, %Arg_4.5193.52092
  %subtract.35.5 = fsub float 1.000000e+00, %Arg_4.5193.52092
  %multiply.36.5 = fmul float %multiply.32.5, %subtract.35.5
  %add.41.i1006.5 = fadd float %add.41.i1007.4, %multiply.36.5
  %multiply.32202.5 = fmul float %Arg_5.6199.52077, %Arg_4.5201.52093
  %subtract.35206.5 = fsub float 1.000000e+00, %Arg_4.5201.52093
  %multiply.36207.5 = fmul float %multiply.32202.5, %subtract.35206.5
  %add.41.i1007.5 = fadd float %add.41.i1006.5, %multiply.36207.5
  %Arg_5.6.61567 = getelementptr inbounds float, ptr addrspace(1) %Arg_5.6, i64 6144
  %13 = load <2 x float>, ptr addrspace(1) %Arg_5.6.61567, align 8, !invariant.load !195
  %Arg_5.6192.62078 = extractelement <2 x float> %13, i32 0
  %Arg_5.6199.62079 = extractelement <2 x float> %13, i32 1
  %Arg_4.5.61569 = getelementptr inbounds float, ptr addrspace(1) %Arg_4.5, i64 6144
  %14 = load <2 x float>, ptr addrspace(1) %Arg_4.5.61569, align 8, !invariant.load !195
  %Arg_4.5193.62094 = extractelement <2 x float> %14, i32 0
  %Arg_4.5201.62095 = extractelement <2 x float> %14, i32 1
  %multiply.32.6 = fmul float %Arg_5.6192.62078, %Arg_4.5193.62094
  %subtract.35.6 = fsub float 1.000000e+00, %Arg_4.5193.62094
  %multiply.36.6 = fmul float %multiply.32.6, %subtract.35.6
  %add.41.i1006.6 = fadd float %add.41.i1007.5, %multiply.36.6
  %multiply.32202.6 = fmul float %Arg_5.6199.62079, %Arg_4.5201.62095
  %subtract.35206.6 = fsub float 1.000000e+00, %Arg_4.5201.62095
  %multiply.36207.6 = fmul float %multiply.32202.6, %subtract.35206.6
  %add.41.i1007.6 = fadd float %add.41.i1006.6, %multiply.36207.6
  %Arg_5.6.71575 = getelementptr inbounds float, ptr addrspace(1) %Arg_5.6, i64 7168
  %15 = load <2 x float>, ptr addrspace(1) %Arg_5.6.71575, align 8, !invariant.load !195
  %Arg_5.6192.72080 = extractelement <2 x float> %15, i32 0
  %Arg_5.6199.72081 = extractelement <2 x float> %15, i32 1
  %Arg_4.5.71577 = getelementptr inbounds float, ptr addrspace(1) %Arg_4.5, i64 7168
  %16 = load <2 x float>, ptr addrspace(1) %Arg_4.5.71577, align 8, !invariant.load !195
  %Arg_4.5193.72096 = extractelement <2 x float> %16, i32 0
  %Arg_4.5201.72097 = extractelement <2 x float> %16, i32 1
  %multiply.32.7 = fmul float %Arg_5.6192.72080, %Arg_4.5193.72096
  %subtract.35.7 = fsub float 1.000000e+00, %Arg_4.5193.72096
  %multiply.36.7 = fmul float %multiply.32.7, %subtract.35.7
  %add.41.i1006.7 = fadd float %add.41.i1007.6, %multiply.36.7
  %multiply.32202.7 = fmul float %Arg_5.6199.72081, %Arg_4.5201.72097
  %subtract.35206.7 = fsub float 1.000000e+00, %Arg_4.5201.72097
  %multiply.36207.7 = fmul float %multiply.32202.7, %subtract.35206.7
  %add.41.i1007.7 = fadd float %add.41.i1006.7, %multiply.36207.7
  %17 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.41.i1007.7, i32 16, i32 31)
  %add.41.i = fadd float %add.41.i1007.7, %17
  %18 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.41.i, i32 8, i32 31)
  %add.41.i1002 = fadd float %add.41.i, %18
  %19 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.41.i1002, i32 4, i32 31)
  %add.41.i1003 = fadd float %add.41.i1002, %19
  %20 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.41.i1003, i32 2, i32 31)
  %add.41.i1004 = fadd float %add.41.i1003, %20
  %21 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.41.i1004, i32 1, i32 31)
  %22 = icmp eq i32 %.pre1213, 0
  %23 = lshr i32 %.pre, 5
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache8, i64 0, i64 0, i64 0, i64 %24
  %add.41.i1005 = fadd float %add.41.i1004, %21
  br i1 %22, label %intra_warp_reduce_write-true259, label %intra_warp_reduce_write-after260

entry.reduce-group-3-true_crit_edge:              ; preds = %entry
  %.pre1214 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !194
  %.pre1216 = shl nuw nsw i32 %.pre1214, 1
  %.pre1218 = zext i32 %.pre1216 to i64
  %.pre1265 = and i32 %.pre1214, 31
  %Arg_7.8 = getelementptr float, ptr addrspace(1) %arg71488, i64 %.pre1218
  %26 = load <2 x float>, ptr addrspace(1) %Arg_7.8, align 8, !invariant.load !195
  %Arg_7.83102098 = extractelement <2 x float> %26, i32 0
  %Arg_7.83182099 = extractelement <2 x float> %26, i32 1
  %Arg_6.7 = getelementptr float, ptr addrspace(1) %arg61486, i64 %.pre1218
  %27 = load <2 x float>, ptr addrspace(1) %Arg_6.7, align 8, !invariant.load !195
  %Arg_6.73112114 = extractelement <2 x float> %27, i32 0
  %Arg_6.73202115 = extractelement <2 x float> %27, i32 1
  %multiply.43 = fmul float %Arg_7.83102098, %Arg_6.73112114
  %subtract.44 = fsub float 1.000000e+00, %Arg_6.73112114
  %multiply.45 = fmul float %multiply.43, %subtract.44
  %multiply.43321 = fmul float %Arg_7.83182099, %Arg_6.73202115
  %subtract.44325 = fsub float 1.000000e+00, %Arg_6.73202115
  %multiply.45326 = fmul float %multiply.43321, %subtract.44325
  %add.50.i1018 = fadd float %multiply.45, %multiply.45326
  %Arg_7.8.11587 = getelementptr inbounds float, ptr addrspace(1) %Arg_7.8, i64 1024
  %28 = load <2 x float>, ptr addrspace(1) %Arg_7.8.11587, align 8, !invariant.load !195
  %Arg_7.8310.12100 = extractelement <2 x float> %28, i32 0
  %Arg_7.8318.12101 = extractelement <2 x float> %28, i32 1
  %Arg_6.7.11589 = getelementptr inbounds float, ptr addrspace(1) %Arg_6.7, i64 1024
  %29 = load <2 x float>, ptr addrspace(1) %Arg_6.7.11589, align 8, !invariant.load !195
  %Arg_6.7311.12116 = extractelement <2 x float> %29, i32 0
  %Arg_6.7320.12117 = extractelement <2 x float> %29, i32 1
  %multiply.43.1 = fmul float %Arg_7.8310.12100, %Arg_6.7311.12116
  %subtract.44.1 = fsub float 1.000000e+00, %Arg_6.7311.12116
  %multiply.45.1 = fmul float %multiply.43.1, %subtract.44.1
  %add.50.i1017.1 = fadd float %add.50.i1018, %multiply.45.1
  %multiply.43321.1 = fmul float %Arg_7.8318.12101, %Arg_6.7320.12117
  %subtract.44325.1 = fsub float 1.000000e+00, %Arg_6.7320.12117
  %multiply.45326.1 = fmul float %multiply.43321.1, %subtract.44325.1
  %add.50.i1018.1 = fadd float %add.50.i1017.1, %multiply.45326.1
  %Arg_7.8.21595 = getelementptr inbounds float, ptr addrspace(1) %Arg_7.8, i64 2048
  %30 = load <2 x float>, ptr addrspace(1) %Arg_7.8.21595, align 8, !invariant.load !195
  %Arg_7.8310.22102 = extractelement <2 x float> %30, i32 0
  %Arg_7.8318.22103 = extractelement <2 x float> %30, i32 1
  %Arg_6.7.21597 = getelementptr inbounds float, ptr addrspace(1) %Arg_6.7, i64 2048
  %31 = load <2 x float>, ptr addrspace(1) %Arg_6.7.21597, align 8, !invariant.load !195
  %Arg_6.7311.22118 = extractelement <2 x float> %31, i32 0
  %Arg_6.7320.22119 = extractelement <2 x float> %31, i32 1
  %multiply.43.2 = fmul float %Arg_7.8310.22102, %Arg_6.7311.22118
  %subtract.44.2 = fsub float 1.000000e+00, %Arg_6.7311.22118
  %multiply.45.2 = fmul float %multiply.43.2, %subtract.44.2
  %add.50.i1017.2 = fadd float %add.50.i1018.1, %multiply.45.2
  %multiply.43321.2 = fmul float %Arg_7.8318.22103, %Arg_6.7320.22119
  %subtract.44325.2 = fsub float 1.000000e+00, %Arg_6.7320.22119
  %multiply.45326.2 = fmul float %multiply.43321.2, %subtract.44325.2
  %add.50.i1018.2 = fadd float %add.50.i1017.2, %multiply.45326.2
  %Arg_7.8.31603 = getelementptr inbounds float, ptr addrspace(1) %Arg_7.8, i64 3072
  %32 = load <2 x float>, ptr addrspace(1) %Arg_7.8.31603, align 8, !invariant.load !195
  %Arg_7.8310.32104 = extractelement <2 x float> %32, i32 0
  %Arg_7.8318.32105 = extractelement <2 x float> %32, i32 1
  %Arg_6.7.31605 = getelementptr inbounds float, ptr addrspace(1) %Arg_6.7, i64 3072
  %33 = load <2 x float>, ptr addrspace(1) %Arg_6.7.31605, align 8, !invariant.load !195
  %Arg_6.7311.32120 = extractelement <2 x float> %33, i32 0
  %Arg_6.7320.32121 = extractelement <2 x float> %33, i32 1
  %multiply.43.3 = fmul float %Arg_7.8310.32104, %Arg_6.7311.32120
  %subtract.44.3 = fsub float 1.000000e+00, %Arg_6.7311.32120
  %multiply.45.3 = fmul float %multiply.43.3, %subtract.44.3
  %add.50.i1017.3 = fadd float %add.50.i1018.2, %multiply.45.3
  %multiply.43321.3 = fmul float %Arg_7.8318.32105, %Arg_6.7320.32121
  %subtract.44325.3 = fsub float 1.000000e+00, %Arg_6.7320.32121
  %multiply.45326.3 = fmul float %multiply.43321.3, %subtract.44325.3
  %add.50.i1018.3 = fadd float %add.50.i1017.3, %multiply.45326.3
  %Arg_7.8.41611 = getelementptr inbounds float, ptr addrspace(1) %Arg_7.8, i64 4096
  %34 = load <2 x float>, ptr addrspace(1) %Arg_7.8.41611, align 8, !invariant.load !195
  %Arg_7.8310.42106 = extractelement <2 x float> %34, i32 0
  %Arg_7.8318.42107 = extractelement <2 x float> %34, i32 1
  %Arg_6.7.41613 = getelementptr inbounds float, ptr addrspace(1) %Arg_6.7, i64 4096
  %35 = load <2 x float>, ptr addrspace(1) %Arg_6.7.41613, align 8, !invariant.load !195
  %Arg_6.7311.42122 = extractelement <2 x float> %35, i32 0
  %Arg_6.7320.42123 = extractelement <2 x float> %35, i32 1
  %multiply.43.4 = fmul float %Arg_7.8310.42106, %Arg_6.7311.42122
  %subtract.44.4 = fsub float 1.000000e+00, %Arg_6.7311.42122
  %multiply.45.4 = fmul float %multiply.43.4, %subtract.44.4
  %add.50.i1017.4 = fadd float %add.50.i1018.3, %multiply.45.4
  %multiply.43321.4 = fmul float %Arg_7.8318.42107, %Arg_6.7320.42123
  %subtract.44325.4 = fsub float 1.000000e+00, %Arg_6.7320.42123
  %multiply.45326.4 = fmul float %multiply.43321.4, %subtract.44325.4
  %add.50.i1018.4 = fadd float %add.50.i1017.4, %multiply.45326.4
  %Arg_7.8.51619 = getelementptr inbounds float, ptr addrspace(1) %Arg_7.8, i64 5120
  %36 = load <2 x float>, ptr addrspace(1) %Arg_7.8.51619, align 8, !invariant.load !195
  %Arg_7.8310.52108 = extractelement <2 x float> %36, i32 0
  %Arg_7.8318.52109 = extractelement <2 x float> %36, i32 1
  %Arg_6.7.51621 = getelementptr inbounds float, ptr addrspace(1) %Arg_6.7, i64 5120
  %37 = load <2 x float>, ptr addrspace(1) %Arg_6.7.51621, align 8, !invariant.load !195
  %Arg_6.7311.52124 = extractelement <2 x float> %37, i32 0
  %Arg_6.7320.52125 = extractelement <2 x float> %37, i32 1
  %multiply.43.5 = fmul float %Arg_7.8310.52108, %Arg_6.7311.52124
  %subtract.44.5 = fsub float 1.000000e+00, %Arg_6.7311.52124
  %multiply.45.5 = fmul float %multiply.43.5, %subtract.44.5
  %add.50.i1017.5 = fadd float %add.50.i1018.4, %multiply.45.5
  %multiply.43321.5 = fmul float %Arg_7.8318.52109, %Arg_6.7320.52125
  %subtract.44325.5 = fsub float 1.000000e+00, %Arg_6.7320.52125
  %multiply.45326.5 = fmul float %multiply.43321.5, %subtract.44325.5
  %add.50.i1018.5 = fadd float %add.50.i1017.5, %multiply.45326.5
  %Arg_7.8.61627 = getelementptr inbounds float, ptr addrspace(1) %Arg_7.8, i64 6144
  %38 = load <2 x float>, ptr addrspace(1) %Arg_7.8.61627, align 8, !invariant.load !195
  %Arg_7.8310.62110 = extractelement <2 x float> %38, i32 0
  %Arg_7.8318.62111 = extractelement <2 x float> %38, i32 1
  %Arg_6.7.61629 = getelementptr inbounds float, ptr addrspace(1) %Arg_6.7, i64 6144
  %39 = load <2 x float>, ptr addrspace(1) %Arg_6.7.61629, align 8, !invariant.load !195
  %Arg_6.7311.62126 = extractelement <2 x float> %39, i32 0
  %Arg_6.7320.62127 = extractelement <2 x float> %39, i32 1
  %multiply.43.6 = fmul float %Arg_7.8310.62110, %Arg_6.7311.62126
  %subtract.44.6 = fsub float 1.000000e+00, %Arg_6.7311.62126
  %multiply.45.6 = fmul float %multiply.43.6, %subtract.44.6
  %add.50.i1017.6 = fadd float %add.50.i1018.5, %multiply.45.6
  %multiply.43321.6 = fmul float %Arg_7.8318.62111, %Arg_6.7320.62127
  %subtract.44325.6 = fsub float 1.000000e+00, %Arg_6.7320.62127
  %multiply.45326.6 = fmul float %multiply.43321.6, %subtract.44325.6
  %add.50.i1018.6 = fadd float %add.50.i1017.6, %multiply.45326.6
  %Arg_7.8.71635 = getelementptr inbounds float, ptr addrspace(1) %Arg_7.8, i64 7168
  %40 = load <2 x float>, ptr addrspace(1) %Arg_7.8.71635, align 8, !invariant.load !195
  %Arg_7.8310.72112 = extractelement <2 x float> %40, i32 0
  %Arg_7.8318.72113 = extractelement <2 x float> %40, i32 1
  %Arg_6.7.71637 = getelementptr inbounds float, ptr addrspace(1) %Arg_6.7, i64 7168
  %41 = load <2 x float>, ptr addrspace(1) %Arg_6.7.71637, align 8, !invariant.load !195
  %Arg_6.7311.72128 = extractelement <2 x float> %41, i32 0
  %Arg_6.7320.72129 = extractelement <2 x float> %41, i32 1
  %multiply.43.7 = fmul float %Arg_7.8310.72112, %Arg_6.7311.72128
  %subtract.44.7 = fsub float 1.000000e+00, %Arg_6.7311.72128
  %multiply.45.7 = fmul float %multiply.43.7, %subtract.44.7
  %add.50.i1017.7 = fadd float %add.50.i1018.6, %multiply.45.7
  %multiply.43321.7 = fmul float %Arg_7.8318.72113, %Arg_6.7320.72129
  %subtract.44325.7 = fsub float 1.000000e+00, %Arg_6.7320.72129
  %multiply.45326.7 = fmul float %multiply.43321.7, %subtract.44325.7
  %add.50.i1018.7 = fadd float %add.50.i1017.7, %multiply.45326.7
  %42 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.50.i1018.7, i32 16, i32 31)
  %add.50.i = fadd float %add.50.i1018.7, %42
  %43 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.50.i, i32 8, i32 31)
  %add.50.i1013 = fadd float %add.50.i, %43
  %44 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.50.i1013, i32 4, i32 31)
  %add.50.i1014 = fadd float %add.50.i1013, %44
  %45 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.50.i1014, i32 2, i32 31)
  %add.50.i1015 = fadd float %add.50.i1014, %45
  %46 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.50.i1015, i32 1, i32 31)
  %47 = icmp eq i32 %.pre1265, 0
  %48 = lshr i32 %.pre1214, 5
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache9, i64 0, i64 0, i64 0, i64 %49
  %add.50.i1016 = fadd float %add.50.i1015, %46
  br i1 %47, label %intra_warp_reduce_write-true378, label %intra_warp_reduce_write-after379

entry.reduce-group-4-true_crit_edge:              ; preds = %entry
  %.pre1266 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !194
  %.pre1268 = shl nuw nsw i32 %.pre1266, 1
  %.pre1270 = zext i32 %.pre1268 to i64
  %.pre1317 = and i32 %.pre1266, 31
  %Arg_9.10 = getelementptr float, ptr addrspace(1) %arg91492, i64 %.pre1270
  %51 = load <2 x float>, ptr addrspace(1) %Arg_9.10, align 8, !invariant.load !195
  %Arg_9.104292130 = extractelement <2 x float> %51, i32 0
  %Arg_9.104372131 = extractelement <2 x float> %51, i32 1
  %Arg_8.9 = getelementptr float, ptr addrspace(1) %arg81490, i64 %.pre1270
  %52 = load <2 x float>, ptr addrspace(1) %Arg_8.9, align 8, !invariant.load !195
  %Arg_8.94302146 = extractelement <2 x float> %52, i32 0
  %Arg_8.94392147 = extractelement <2 x float> %52, i32 1
  %multiply.52 = fmul float %Arg_9.104292130, %Arg_8.94302146
  %subtract.53 = fsub float 1.000000e+00, %Arg_8.94302146
  %multiply.54 = fmul float %multiply.52, %subtract.53
  %multiply.52440 = fmul float %Arg_9.104372131, %Arg_8.94392147
  %subtract.53444 = fsub float 1.000000e+00, %Arg_8.94392147
  %multiply.54445 = fmul float %multiply.52440, %subtract.53444
  %add.59.i1029 = fadd float %multiply.54, %multiply.54445
  %Arg_9.10.11647 = getelementptr inbounds float, ptr addrspace(1) %Arg_9.10, i64 1024
  %53 = load <2 x float>, ptr addrspace(1) %Arg_9.10.11647, align 8, !invariant.load !195
  %Arg_9.10429.12132 = extractelement <2 x float> %53, i32 0
  %Arg_9.10437.12133 = extractelement <2 x float> %53, i32 1
  %Arg_8.9.11649 = getelementptr inbounds float, ptr addrspace(1) %Arg_8.9, i64 1024
  %54 = load <2 x float>, ptr addrspace(1) %Arg_8.9.11649, align 8, !invariant.load !195
  %Arg_8.9430.12148 = extractelement <2 x float> %54, i32 0
  %Arg_8.9439.12149 = extractelement <2 x float> %54, i32 1
  %multiply.52.1 = fmul float %Arg_9.10429.12132, %Arg_8.9430.12148
  %subtract.53.1 = fsub float 1.000000e+00, %Arg_8.9430.12148
  %multiply.54.1 = fmul float %multiply.52.1, %subtract.53.1
  %add.59.i1028.1 = fadd float %add.59.i1029, %multiply.54.1
  %multiply.52440.1 = fmul float %Arg_9.10437.12133, %Arg_8.9439.12149
  %subtract.53444.1 = fsub float 1.000000e+00, %Arg_8.9439.12149
  %multiply.54445.1 = fmul float %multiply.52440.1, %subtract.53444.1
  %add.59.i1029.1 = fadd float %add.59.i1028.1, %multiply.54445.1
  %Arg_9.10.21655 = getelementptr inbounds float, ptr addrspace(1) %Arg_9.10, i64 2048
  %55 = load <2 x float>, ptr addrspace(1) %Arg_9.10.21655, align 8, !invariant.load !195
  %Arg_9.10429.22134 = extractelement <2 x float> %55, i32 0
  %Arg_9.10437.22135 = extractelement <2 x float> %55, i32 1
  %Arg_8.9.21657 = getelementptr inbounds float, ptr addrspace(1) %Arg_8.9, i64 2048
  %56 = load <2 x float>, ptr addrspace(1) %Arg_8.9.21657, align 8, !invariant.load !195
  %Arg_8.9430.22150 = extractelement <2 x float> %56, i32 0
  %Arg_8.9439.22151 = extractelement <2 x float> %56, i32 1
  %multiply.52.2 = fmul float %Arg_9.10429.22134, %Arg_8.9430.22150
  %subtract.53.2 = fsub float 1.000000e+00, %Arg_8.9430.22150
  %multiply.54.2 = fmul float %multiply.52.2, %subtract.53.2
  %add.59.i1028.2 = fadd float %add.59.i1029.1, %multiply.54.2
  %multiply.52440.2 = fmul float %Arg_9.10437.22135, %Arg_8.9439.22151
  %subtract.53444.2 = fsub float 1.000000e+00, %Arg_8.9439.22151
  %multiply.54445.2 = fmul float %multiply.52440.2, %subtract.53444.2
  %add.59.i1029.2 = fadd float %add.59.i1028.2, %multiply.54445.2
  %Arg_9.10.31663 = getelementptr inbounds float, ptr addrspace(1) %Arg_9.10, i64 3072
  %57 = load <2 x float>, ptr addrspace(1) %Arg_9.10.31663, align 8, !invariant.load !195
  %Arg_9.10429.32136 = extractelement <2 x float> %57, i32 0
  %Arg_9.10437.32137 = extractelement <2 x float> %57, i32 1
  %Arg_8.9.31665 = getelementptr inbounds float, ptr addrspace(1) %Arg_8.9, i64 3072
  %58 = load <2 x float>, ptr addrspace(1) %Arg_8.9.31665, align 8, !invariant.load !195
  %Arg_8.9430.32152 = extractelement <2 x float> %58, i32 0
  %Arg_8.9439.32153 = extractelement <2 x float> %58, i32 1
  %multiply.52.3 = fmul float %Arg_9.10429.32136, %Arg_8.9430.32152
  %subtract.53.3 = fsub float 1.000000e+00, %Arg_8.9430.32152
  %multiply.54.3 = fmul float %multiply.52.3, %subtract.53.3
  %add.59.i1028.3 = fadd float %add.59.i1029.2, %multiply.54.3
  %multiply.52440.3 = fmul float %Arg_9.10437.32137, %Arg_8.9439.32153
  %subtract.53444.3 = fsub float 1.000000e+00, %Arg_8.9439.32153
  %multiply.54445.3 = fmul float %multiply.52440.3, %subtract.53444.3
  %add.59.i1029.3 = fadd float %add.59.i1028.3, %multiply.54445.3
  %Arg_9.10.41671 = getelementptr inbounds float, ptr addrspace(1) %Arg_9.10, i64 4096
  %59 = load <2 x float>, ptr addrspace(1) %Arg_9.10.41671, align 8, !invariant.load !195
  %Arg_9.10429.42138 = extractelement <2 x float> %59, i32 0
  %Arg_9.10437.42139 = extractelement <2 x float> %59, i32 1
  %Arg_8.9.41673 = getelementptr inbounds float, ptr addrspace(1) %Arg_8.9, i64 4096
  %60 = load <2 x float>, ptr addrspace(1) %Arg_8.9.41673, align 8, !invariant.load !195
  %Arg_8.9430.42154 = extractelement <2 x float> %60, i32 0
  %Arg_8.9439.42155 = extractelement <2 x float> %60, i32 1
  %multiply.52.4 = fmul float %Arg_9.10429.42138, %Arg_8.9430.42154
  %subtract.53.4 = fsub float 1.000000e+00, %Arg_8.9430.42154
  %multiply.54.4 = fmul float %multiply.52.4, %subtract.53.4
  %add.59.i1028.4 = fadd float %add.59.i1029.3, %multiply.54.4
  %multiply.52440.4 = fmul float %Arg_9.10437.42139, %Arg_8.9439.42155
  %subtract.53444.4 = fsub float 1.000000e+00, %Arg_8.9439.42155
  %multiply.54445.4 = fmul float %multiply.52440.4, %subtract.53444.4
  %add.59.i1029.4 = fadd float %add.59.i1028.4, %multiply.54445.4
  %Arg_9.10.51679 = getelementptr inbounds float, ptr addrspace(1) %Arg_9.10, i64 5120
  %61 = load <2 x float>, ptr addrspace(1) %Arg_9.10.51679, align 8, !invariant.load !195
  %Arg_9.10429.52140 = extractelement <2 x float> %61, i32 0
  %Arg_9.10437.52141 = extractelement <2 x float> %61, i32 1
  %Arg_8.9.51681 = getelementptr inbounds float, ptr addrspace(1) %Arg_8.9, i64 5120
  %62 = load <2 x float>, ptr addrspace(1) %Arg_8.9.51681, align 8, !invariant.load !195
  %Arg_8.9430.52156 = extractelement <2 x float> %62, i32 0
  %Arg_8.9439.52157 = extractelement <2 x float> %62, i32 1
  %multiply.52.5 = fmul float %Arg_9.10429.52140, %Arg_8.9430.52156
  %subtract.53.5 = fsub float 1.000000e+00, %Arg_8.9430.52156
  %multiply.54.5 = fmul float %multiply.52.5, %subtract.53.5
  %add.59.i1028.5 = fadd float %add.59.i1029.4, %multiply.54.5
  %multiply.52440.5 = fmul float %Arg_9.10437.52141, %Arg_8.9439.52157
  %subtract.53444.5 = fsub float 1.000000e+00, %Arg_8.9439.52157
  %multiply.54445.5 = fmul float %multiply.52440.5, %subtract.53444.5
  %add.59.i1029.5 = fadd float %add.59.i1028.5, %multiply.54445.5
  %Arg_9.10.61687 = getelementptr inbounds float, ptr addrspace(1) %Arg_9.10, i64 6144
  %63 = load <2 x float>, ptr addrspace(1) %Arg_9.10.61687, align 8, !invariant.load !195
  %Arg_9.10429.62142 = extractelement <2 x float> %63, i32 0
  %Arg_9.10437.62143 = extractelement <2 x float> %63, i32 1
  %Arg_8.9.61689 = getelementptr inbounds float, ptr addrspace(1) %Arg_8.9, i64 6144
  %64 = load <2 x float>, ptr addrspace(1) %Arg_8.9.61689, align 8, !invariant.load !195
  %Arg_8.9430.62158 = extractelement <2 x float> %64, i32 0
  %Arg_8.9439.62159 = extractelement <2 x float> %64, i32 1
  %multiply.52.6 = fmul float %Arg_9.10429.62142, %Arg_8.9430.62158
  %subtract.53.6 = fsub float 1.000000e+00, %Arg_8.9430.62158
  %multiply.54.6 = fmul float %multiply.52.6, %subtract.53.6
  %add.59.i1028.6 = fadd float %add.59.i1029.5, %multiply.54.6
  %multiply.52440.6 = fmul float %Arg_9.10437.62143, %Arg_8.9439.62159
  %subtract.53444.6 = fsub float 1.000000e+00, %Arg_8.9439.62159
  %multiply.54445.6 = fmul float %multiply.52440.6, %subtract.53444.6
  %add.59.i1029.6 = fadd float %add.59.i1028.6, %multiply.54445.6
  %Arg_9.10.71695 = getelementptr inbounds float, ptr addrspace(1) %Arg_9.10, i64 7168
  %65 = load <2 x float>, ptr addrspace(1) %Arg_9.10.71695, align 8, !invariant.load !195
  %Arg_9.10429.72144 = extractelement <2 x float> %65, i32 0
  %Arg_9.10437.72145 = extractelement <2 x float> %65, i32 1
  %Arg_8.9.71697 = getelementptr inbounds float, ptr addrspace(1) %Arg_8.9, i64 7168
  %66 = load <2 x float>, ptr addrspace(1) %Arg_8.9.71697, align 8, !invariant.load !195
  %Arg_8.9430.72160 = extractelement <2 x float> %66, i32 0
  %Arg_8.9439.72161 = extractelement <2 x float> %66, i32 1
  %multiply.52.7 = fmul float %Arg_9.10429.72144, %Arg_8.9430.72160
  %subtract.53.7 = fsub float 1.000000e+00, %Arg_8.9430.72160
  %multiply.54.7 = fmul float %multiply.52.7, %subtract.53.7
  %add.59.i1028.7 = fadd float %add.59.i1029.6, %multiply.54.7
  %multiply.52440.7 = fmul float %Arg_9.10437.72145, %Arg_8.9439.72161
  %subtract.53444.7 = fsub float 1.000000e+00, %Arg_8.9439.72161
  %multiply.54445.7 = fmul float %multiply.52440.7, %subtract.53444.7
  %add.59.i1029.7 = fadd float %add.59.i1028.7, %multiply.54445.7
  %67 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.59.i1029.7, i32 16, i32 31)
  %add.59.i = fadd float %add.59.i1029.7, %67
  %68 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.59.i, i32 8, i32 31)
  %add.59.i1024 = fadd float %add.59.i, %68
  %69 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.59.i1024, i32 4, i32 31)
  %add.59.i1025 = fadd float %add.59.i1024, %69
  %70 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.59.i1025, i32 2, i32 31)
  %add.59.i1026 = fadd float %add.59.i1025, %70
  %71 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.59.i1026, i32 1, i32 31)
  %72 = icmp eq i32 %.pre1317, 0
  %73 = lshr i32 %.pre1266, 5
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache10, i64 0, i64 0, i64 0, i64 %74
  %add.59.i1027 = fadd float %add.59.i1026, %71
  br i1 %72, label %intra_warp_reduce_write-true497, label %intra_warp_reduce_write-after498

entry.reduce-group-5-true_crit_edge:              ; preds = %entry
  %.pre1318 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !194
  %.pre1320 = shl nuw nsw i32 %.pre1318, 1
  %.pre1322 = zext i32 %.pre1320 to i64
  %.pre1369 = and i32 %.pre1318, 31
  %Arg_11.12 = getelementptr float, ptr addrspace(1) %arg111496, i64 %.pre1322
  %76 = load <2 x float>, ptr addrspace(1) %Arg_11.12, align 8, !invariant.load !195
  %Arg_11.125482162 = extractelement <2 x float> %76, i32 0
  %Arg_11.125562163 = extractelement <2 x float> %76, i32 1
  %Arg_10.11 = getelementptr float, ptr addrspace(1) %arg101494, i64 %.pre1322
  %77 = load <2 x float>, ptr addrspace(1) %Arg_10.11, align 8, !invariant.load !195
  %Arg_10.115492178 = extractelement <2 x float> %77, i32 0
  %Arg_10.115582179 = extractelement <2 x float> %77, i32 1
  %multiply.61 = fmul float %Arg_11.125482162, %Arg_10.115492178
  %subtract.62 = fsub float 1.000000e+00, %Arg_10.115492178
  %multiply.63 = fmul float %multiply.61, %subtract.62
  %multiply.61559 = fmul float %Arg_11.125562163, %Arg_10.115582179
  %subtract.62563 = fsub float 1.000000e+00, %Arg_10.115582179
  %multiply.63564 = fmul float %multiply.61559, %subtract.62563
  %add.68.i1040 = fadd float %multiply.63, %multiply.63564
  %Arg_11.12.11707 = getelementptr inbounds float, ptr addrspace(1) %Arg_11.12, i64 1024
  %78 = load <2 x float>, ptr addrspace(1) %Arg_11.12.11707, align 8, !invariant.load !195
  %Arg_11.12548.12164 = extractelement <2 x float> %78, i32 0
  %Arg_11.12556.12165 = extractelement <2 x float> %78, i32 1
  %Arg_10.11.11709 = getelementptr inbounds float, ptr addrspace(1) %Arg_10.11, i64 1024
  %79 = load <2 x float>, ptr addrspace(1) %Arg_10.11.11709, align 8, !invariant.load !195
  %Arg_10.11549.12180 = extractelement <2 x float> %79, i32 0
  %Arg_10.11558.12181 = extractelement <2 x float> %79, i32 1
  %multiply.61.1 = fmul float %Arg_11.12548.12164, %Arg_10.11549.12180
  %subtract.62.1 = fsub float 1.000000e+00, %Arg_10.11549.12180
  %multiply.63.1 = fmul float %multiply.61.1, %subtract.62.1
  %add.68.i1039.1 = fadd float %add.68.i1040, %multiply.63.1
  %multiply.61559.1 = fmul float %Arg_11.12556.12165, %Arg_10.11558.12181
  %subtract.62563.1 = fsub float 1.000000e+00, %Arg_10.11558.12181
  %multiply.63564.1 = fmul float %multiply.61559.1, %subtract.62563.1
  %add.68.i1040.1 = fadd float %add.68.i1039.1, %multiply.63564.1
  %Arg_11.12.21715 = getelementptr inbounds float, ptr addrspace(1) %Arg_11.12, i64 2048
  %80 = load <2 x float>, ptr addrspace(1) %Arg_11.12.21715, align 8, !invariant.load !195
  %Arg_11.12548.22166 = extractelement <2 x float> %80, i32 0
  %Arg_11.12556.22167 = extractelement <2 x float> %80, i32 1
  %Arg_10.11.21717 = getelementptr inbounds float, ptr addrspace(1) %Arg_10.11, i64 2048
  %81 = load <2 x float>, ptr addrspace(1) %Arg_10.11.21717, align 8, !invariant.load !195
  %Arg_10.11549.22182 = extractelement <2 x float> %81, i32 0
  %Arg_10.11558.22183 = extractelement <2 x float> %81, i32 1
  %multiply.61.2 = fmul float %Arg_11.12548.22166, %Arg_10.11549.22182
  %subtract.62.2 = fsub float 1.000000e+00, %Arg_10.11549.22182
  %multiply.63.2 = fmul float %multiply.61.2, %subtract.62.2
  %add.68.i1039.2 = fadd float %add.68.i1040.1, %multiply.63.2
  %multiply.61559.2 = fmul float %Arg_11.12556.22167, %Arg_10.11558.22183
  %subtract.62563.2 = fsub float 1.000000e+00, %Arg_10.11558.22183
  %multiply.63564.2 = fmul float %multiply.61559.2, %subtract.62563.2
  %add.68.i1040.2 = fadd float %add.68.i1039.2, %multiply.63564.2
  %Arg_11.12.31723 = getelementptr inbounds float, ptr addrspace(1) %Arg_11.12, i64 3072
  %82 = load <2 x float>, ptr addrspace(1) %Arg_11.12.31723, align 8, !invariant.load !195
  %Arg_11.12548.32168 = extractelement <2 x float> %82, i32 0
  %Arg_11.12556.32169 = extractelement <2 x float> %82, i32 1
  %Arg_10.11.31725 = getelementptr inbounds float, ptr addrspace(1) %Arg_10.11, i64 3072
  %83 = load <2 x float>, ptr addrspace(1) %Arg_10.11.31725, align 8, !invariant.load !195
  %Arg_10.11549.32184 = extractelement <2 x float> %83, i32 0
  %Arg_10.11558.32185 = extractelement <2 x float> %83, i32 1
  %multiply.61.3 = fmul float %Arg_11.12548.32168, %Arg_10.11549.32184
  %subtract.62.3 = fsub float 1.000000e+00, %Arg_10.11549.32184
  %multiply.63.3 = fmul float %multiply.61.3, %subtract.62.3
  %add.68.i1039.3 = fadd float %add.68.i1040.2, %multiply.63.3
  %multiply.61559.3 = fmul float %Arg_11.12556.32169, %Arg_10.11558.32185
  %subtract.62563.3 = fsub float 1.000000e+00, %Arg_10.11558.32185
  %multiply.63564.3 = fmul float %multiply.61559.3, %subtract.62563.3
  %add.68.i1040.3 = fadd float %add.68.i1039.3, %multiply.63564.3
  %Arg_11.12.41731 = getelementptr inbounds float, ptr addrspace(1) %Arg_11.12, i64 4096
  %84 = load <2 x float>, ptr addrspace(1) %Arg_11.12.41731, align 8, !invariant.load !195
  %Arg_11.12548.42170 = extractelement <2 x float> %84, i32 0
  %Arg_11.12556.42171 = extractelement <2 x float> %84, i32 1
  %Arg_10.11.41733 = getelementptr inbounds float, ptr addrspace(1) %Arg_10.11, i64 4096
  %85 = load <2 x float>, ptr addrspace(1) %Arg_10.11.41733, align 8, !invariant.load !195
  %Arg_10.11549.42186 = extractelement <2 x float> %85, i32 0
  %Arg_10.11558.42187 = extractelement <2 x float> %85, i32 1
  %multiply.61.4 = fmul float %Arg_11.12548.42170, %Arg_10.11549.42186
  %subtract.62.4 = fsub float 1.000000e+00, %Arg_10.11549.42186
  %multiply.63.4 = fmul float %multiply.61.4, %subtract.62.4
  %add.68.i1039.4 = fadd float %add.68.i1040.3, %multiply.63.4
  %multiply.61559.4 = fmul float %Arg_11.12556.42171, %Arg_10.11558.42187
  %subtract.62563.4 = fsub float 1.000000e+00, %Arg_10.11558.42187
  %multiply.63564.4 = fmul float %multiply.61559.4, %subtract.62563.4
  %add.68.i1040.4 = fadd float %add.68.i1039.4, %multiply.63564.4
  %Arg_11.12.51739 = getelementptr inbounds float, ptr addrspace(1) %Arg_11.12, i64 5120
  %86 = load <2 x float>, ptr addrspace(1) %Arg_11.12.51739, align 8, !invariant.load !195
  %Arg_11.12548.52172 = extractelement <2 x float> %86, i32 0
  %Arg_11.12556.52173 = extractelement <2 x float> %86, i32 1
  %Arg_10.11.51741 = getelementptr inbounds float, ptr addrspace(1) %Arg_10.11, i64 5120
  %87 = load <2 x float>, ptr addrspace(1) %Arg_10.11.51741, align 8, !invariant.load !195
  %Arg_10.11549.52188 = extractelement <2 x float> %87, i32 0
  %Arg_10.11558.52189 = extractelement <2 x float> %87, i32 1
  %multiply.61.5 = fmul float %Arg_11.12548.52172, %Arg_10.11549.52188
  %subtract.62.5 = fsub float 1.000000e+00, %Arg_10.11549.52188
  %multiply.63.5 = fmul float %multiply.61.5, %subtract.62.5
  %add.68.i1039.5 = fadd float %add.68.i1040.4, %multiply.63.5
  %multiply.61559.5 = fmul float %Arg_11.12556.52173, %Arg_10.11558.52189
  %subtract.62563.5 = fsub float 1.000000e+00, %Arg_10.11558.52189
  %multiply.63564.5 = fmul float %multiply.61559.5, %subtract.62563.5
  %add.68.i1040.5 = fadd float %add.68.i1039.5, %multiply.63564.5
  %Arg_11.12.61747 = getelementptr inbounds float, ptr addrspace(1) %Arg_11.12, i64 6144
  %88 = load <2 x float>, ptr addrspace(1) %Arg_11.12.61747, align 8, !invariant.load !195
  %Arg_11.12548.62174 = extractelement <2 x float> %88, i32 0
  %Arg_11.12556.62175 = extractelement <2 x float> %88, i32 1
  %Arg_10.11.61749 = getelementptr inbounds float, ptr addrspace(1) %Arg_10.11, i64 6144
  %89 = load <2 x float>, ptr addrspace(1) %Arg_10.11.61749, align 8, !invariant.load !195
  %Arg_10.11549.62190 = extractelement <2 x float> %89, i32 0
  %Arg_10.11558.62191 = extractelement <2 x float> %89, i32 1
  %multiply.61.6 = fmul float %Arg_11.12548.62174, %Arg_10.11549.62190
  %subtract.62.6 = fsub float 1.000000e+00, %Arg_10.11549.62190
  %multiply.63.6 = fmul float %multiply.61.6, %subtract.62.6
  %add.68.i1039.6 = fadd float %add.68.i1040.5, %multiply.63.6
  %multiply.61559.6 = fmul float %Arg_11.12556.62175, %Arg_10.11558.62191
  %subtract.62563.6 = fsub float 1.000000e+00, %Arg_10.11558.62191
  %multiply.63564.6 = fmul float %multiply.61559.6, %subtract.62563.6
  %add.68.i1040.6 = fadd float %add.68.i1039.6, %multiply.63564.6
  %Arg_11.12.71755 = getelementptr inbounds float, ptr addrspace(1) %Arg_11.12, i64 7168
  %90 = load <2 x float>, ptr addrspace(1) %Arg_11.12.71755, align 8, !invariant.load !195
  %Arg_11.12548.72176 = extractelement <2 x float> %90, i32 0
  %Arg_11.12556.72177 = extractelement <2 x float> %90, i32 1
  %Arg_10.11.71757 = getelementptr inbounds float, ptr addrspace(1) %Arg_10.11, i64 7168
  %91 = load <2 x float>, ptr addrspace(1) %Arg_10.11.71757, align 8, !invariant.load !195
  %Arg_10.11549.72192 = extractelement <2 x float> %91, i32 0
  %Arg_10.11558.72193 = extractelement <2 x float> %91, i32 1
  %multiply.61.7 = fmul float %Arg_11.12548.72176, %Arg_10.11549.72192
  %subtract.62.7 = fsub float 1.000000e+00, %Arg_10.11549.72192
  %multiply.63.7 = fmul float %multiply.61.7, %subtract.62.7
  %add.68.i1039.7 = fadd float %add.68.i1040.6, %multiply.63.7
  %multiply.61559.7 = fmul float %Arg_11.12556.72177, %Arg_10.11558.72193
  %subtract.62563.7 = fsub float 1.000000e+00, %Arg_10.11558.72193
  %multiply.63564.7 = fmul float %multiply.61559.7, %subtract.62563.7
  %add.68.i1040.7 = fadd float %add.68.i1039.7, %multiply.63564.7
  %92 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.68.i1040.7, i32 16, i32 31)
  %add.68.i = fadd float %add.68.i1040.7, %92
  %93 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.68.i, i32 8, i32 31)
  %add.68.i1035 = fadd float %add.68.i, %93
  %94 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.68.i1035, i32 4, i32 31)
  %add.68.i1036 = fadd float %add.68.i1035, %94
  %95 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.68.i1036, i32 2, i32 31)
  %add.68.i1037 = fadd float %add.68.i1036, %95
  %96 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.68.i1037, i32 1, i32 31)
  %97 = icmp eq i32 %.pre1369, 0
  %98 = lshr i32 %.pre1318, 5
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache11, i64 0, i64 0, i64 0, i64 %99
  %add.68.i1038 = fadd float %add.68.i1037, %96
  br i1 %97, label %intra_warp_reduce_write-true616, label %intra_warp_reduce_write-after617

entry.reduce-group-6-true_crit_edge:              ; preds = %entry
  %.pre1370 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !194
  %.pre1372 = shl nuw nsw i32 %.pre1370, 1
  %.pre1374 = zext i32 %.pre1372 to i64
  %.pre1421 = and i32 %.pre1370, 31
  %Arg_13.14 = getelementptr float, ptr addrspace(1) %arg131500, i64 %.pre1374
  %101 = load <2 x float>, ptr addrspace(1) %Arg_13.14, align 8, !invariant.load !195
  %Arg_13.146672194 = extractelement <2 x float> %101, i32 0
  %Arg_13.146752195 = extractelement <2 x float> %101, i32 1
  %Arg_12.13 = getelementptr float, ptr addrspace(1) %arg121498, i64 %.pre1374
  %102 = load <2 x float>, ptr addrspace(1) %Arg_12.13, align 8, !invariant.load !195
  %Arg_12.136682210 = extractelement <2 x float> %102, i32 0
  %Arg_12.136772211 = extractelement <2 x float> %102, i32 1
  %multiply.70 = fmul float %Arg_13.146672194, %Arg_12.136682210
  %subtract.71 = fsub float 1.000000e+00, %Arg_12.136682210
  %multiply.72 = fmul float %multiply.70, %subtract.71
  %multiply.70678 = fmul float %Arg_13.146752195, %Arg_12.136772211
  %subtract.71682 = fsub float 1.000000e+00, %Arg_12.136772211
  %multiply.72683 = fmul float %multiply.70678, %subtract.71682
  %add.77.i1051 = fadd float %multiply.72, %multiply.72683
  %Arg_13.14.11767 = getelementptr inbounds float, ptr addrspace(1) %Arg_13.14, i64 1024
  %103 = load <2 x float>, ptr addrspace(1) %Arg_13.14.11767, align 8, !invariant.load !195
  %Arg_13.14667.12196 = extractelement <2 x float> %103, i32 0
  %Arg_13.14675.12197 = extractelement <2 x float> %103, i32 1
  %Arg_12.13.11769 = getelementptr inbounds float, ptr addrspace(1) %Arg_12.13, i64 1024
  %104 = load <2 x float>, ptr addrspace(1) %Arg_12.13.11769, align 8, !invariant.load !195
  %Arg_12.13668.12212 = extractelement <2 x float> %104, i32 0
  %Arg_12.13677.12213 = extractelement <2 x float> %104, i32 1
  %multiply.70.1 = fmul float %Arg_13.14667.12196, %Arg_12.13668.12212
  %subtract.71.1 = fsub float 1.000000e+00, %Arg_12.13668.12212
  %multiply.72.1 = fmul float %multiply.70.1, %subtract.71.1
  %add.77.i1050.1 = fadd float %add.77.i1051, %multiply.72.1
  %multiply.70678.1 = fmul float %Arg_13.14675.12197, %Arg_12.13677.12213
  %subtract.71682.1 = fsub float 1.000000e+00, %Arg_12.13677.12213
  %multiply.72683.1 = fmul float %multiply.70678.1, %subtract.71682.1
  %add.77.i1051.1 = fadd float %add.77.i1050.1, %multiply.72683.1
  %Arg_13.14.21775 = getelementptr inbounds float, ptr addrspace(1) %Arg_13.14, i64 2048
  %105 = load <2 x float>, ptr addrspace(1) %Arg_13.14.21775, align 8, !invariant.load !195
  %Arg_13.14667.22198 = extractelement <2 x float> %105, i32 0
  %Arg_13.14675.22199 = extractelement <2 x float> %105, i32 1
  %Arg_12.13.21777 = getelementptr inbounds float, ptr addrspace(1) %Arg_12.13, i64 2048
  %106 = load <2 x float>, ptr addrspace(1) %Arg_12.13.21777, align 8, !invariant.load !195
  %Arg_12.13668.22214 = extractelement <2 x float> %106, i32 0
  %Arg_12.13677.22215 = extractelement <2 x float> %106, i32 1
  %multiply.70.2 = fmul float %Arg_13.14667.22198, %Arg_12.13668.22214
  %subtract.71.2 = fsub float 1.000000e+00, %Arg_12.13668.22214
  %multiply.72.2 = fmul float %multiply.70.2, %subtract.71.2
  %add.77.i1050.2 = fadd float %add.77.i1051.1, %multiply.72.2
  %multiply.70678.2 = fmul float %Arg_13.14675.22199, %Arg_12.13677.22215
  %subtract.71682.2 = fsub float 1.000000e+00, %Arg_12.13677.22215
  %multiply.72683.2 = fmul float %multiply.70678.2, %subtract.71682.2
  %add.77.i1051.2 = fadd float %add.77.i1050.2, %multiply.72683.2
  %Arg_13.14.31783 = getelementptr inbounds float, ptr addrspace(1) %Arg_13.14, i64 3072
  %107 = load <2 x float>, ptr addrspace(1) %Arg_13.14.31783, align 8, !invariant.load !195
  %Arg_13.14667.32200 = extractelement <2 x float> %107, i32 0
  %Arg_13.14675.32201 = extractelement <2 x float> %107, i32 1
  %Arg_12.13.31785 = getelementptr inbounds float, ptr addrspace(1) %Arg_12.13, i64 3072
  %108 = load <2 x float>, ptr addrspace(1) %Arg_12.13.31785, align 8, !invariant.load !195
  %Arg_12.13668.32216 = extractelement <2 x float> %108, i32 0
  %Arg_12.13677.32217 = extractelement <2 x float> %108, i32 1
  %multiply.70.3 = fmul float %Arg_13.14667.32200, %Arg_12.13668.32216
  %subtract.71.3 = fsub float 1.000000e+00, %Arg_12.13668.32216
  %multiply.72.3 = fmul float %multiply.70.3, %subtract.71.3
  %add.77.i1050.3 = fadd float %add.77.i1051.2, %multiply.72.3
  %multiply.70678.3 = fmul float %Arg_13.14675.32201, %Arg_12.13677.32217
  %subtract.71682.3 = fsub float 1.000000e+00, %Arg_12.13677.32217
  %multiply.72683.3 = fmul float %multiply.70678.3, %subtract.71682.3
  %add.77.i1051.3 = fadd float %add.77.i1050.3, %multiply.72683.3
  %Arg_13.14.41791 = getelementptr inbounds float, ptr addrspace(1) %Arg_13.14, i64 4096
  %109 = load <2 x float>, ptr addrspace(1) %Arg_13.14.41791, align 8, !invariant.load !195
  %Arg_13.14667.42202 = extractelement <2 x float> %109, i32 0
  %Arg_13.14675.42203 = extractelement <2 x float> %109, i32 1
  %Arg_12.13.41793 = getelementptr inbounds float, ptr addrspace(1) %Arg_12.13, i64 4096
  %110 = load <2 x float>, ptr addrspace(1) %Arg_12.13.41793, align 8, !invariant.load !195
  %Arg_12.13668.42218 = extractelement <2 x float> %110, i32 0
  %Arg_12.13677.42219 = extractelement <2 x float> %110, i32 1
  %multiply.70.4 = fmul float %Arg_13.14667.42202, %Arg_12.13668.42218
  %subtract.71.4 = fsub float 1.000000e+00, %Arg_12.13668.42218
  %multiply.72.4 = fmul float %multiply.70.4, %subtract.71.4
  %add.77.i1050.4 = fadd float %add.77.i1051.3, %multiply.72.4
  %multiply.70678.4 = fmul float %Arg_13.14675.42203, %Arg_12.13677.42219
  %subtract.71682.4 = fsub float 1.000000e+00, %Arg_12.13677.42219
  %multiply.72683.4 = fmul float %multiply.70678.4, %subtract.71682.4
  %add.77.i1051.4 = fadd float %add.77.i1050.4, %multiply.72683.4
  %Arg_13.14.51799 = getelementptr inbounds float, ptr addrspace(1) %Arg_13.14, i64 5120
  %111 = load <2 x float>, ptr addrspace(1) %Arg_13.14.51799, align 8, !invariant.load !195
  %Arg_13.14667.52204 = extractelement <2 x float> %111, i32 0
  %Arg_13.14675.52205 = extractelement <2 x float> %111, i32 1
  %Arg_12.13.51801 = getelementptr inbounds float, ptr addrspace(1) %Arg_12.13, i64 5120
  %112 = load <2 x float>, ptr addrspace(1) %Arg_12.13.51801, align 8, !invariant.load !195
  %Arg_12.13668.52220 = extractelement <2 x float> %112, i32 0
  %Arg_12.13677.52221 = extractelement <2 x float> %112, i32 1
  %multiply.70.5 = fmul float %Arg_13.14667.52204, %Arg_12.13668.52220
  %subtract.71.5 = fsub float 1.000000e+00, %Arg_12.13668.52220
  %multiply.72.5 = fmul float %multiply.70.5, %subtract.71.5
  %add.77.i1050.5 = fadd float %add.77.i1051.4, %multiply.72.5
  %multiply.70678.5 = fmul float %Arg_13.14675.52205, %Arg_12.13677.52221
  %subtract.71682.5 = fsub float 1.000000e+00, %Arg_12.13677.52221
  %multiply.72683.5 = fmul float %multiply.70678.5, %subtract.71682.5
  %add.77.i1051.5 = fadd float %add.77.i1050.5, %multiply.72683.5
  %Arg_13.14.61807 = getelementptr inbounds float, ptr addrspace(1) %Arg_13.14, i64 6144
  %113 = load <2 x float>, ptr addrspace(1) %Arg_13.14.61807, align 8, !invariant.load !195
  %Arg_13.14667.62206 = extractelement <2 x float> %113, i32 0
  %Arg_13.14675.62207 = extractelement <2 x float> %113, i32 1
  %Arg_12.13.61809 = getelementptr inbounds float, ptr addrspace(1) %Arg_12.13, i64 6144
  %114 = load <2 x float>, ptr addrspace(1) %Arg_12.13.61809, align 8, !invariant.load !195
  %Arg_12.13668.62222 = extractelement <2 x float> %114, i32 0
  %Arg_12.13677.62223 = extractelement <2 x float> %114, i32 1
  %multiply.70.6 = fmul float %Arg_13.14667.62206, %Arg_12.13668.62222
  %subtract.71.6 = fsub float 1.000000e+00, %Arg_12.13668.62222
  %multiply.72.6 = fmul float %multiply.70.6, %subtract.71.6
  %add.77.i1050.6 = fadd float %add.77.i1051.5, %multiply.72.6
  %multiply.70678.6 = fmul float %Arg_13.14675.62207, %Arg_12.13677.62223
  %subtract.71682.6 = fsub float 1.000000e+00, %Arg_12.13677.62223
  %multiply.72683.6 = fmul float %multiply.70678.6, %subtract.71682.6
  %add.77.i1051.6 = fadd float %add.77.i1050.6, %multiply.72683.6
  %Arg_13.14.71815 = getelementptr inbounds float, ptr addrspace(1) %Arg_13.14, i64 7168
  %115 = load <2 x float>, ptr addrspace(1) %Arg_13.14.71815, align 8, !invariant.load !195
  %Arg_13.14667.72208 = extractelement <2 x float> %115, i32 0
  %Arg_13.14675.72209 = extractelement <2 x float> %115, i32 1
  %Arg_12.13.71817 = getelementptr inbounds float, ptr addrspace(1) %Arg_12.13, i64 7168
  %116 = load <2 x float>, ptr addrspace(1) %Arg_12.13.71817, align 8, !invariant.load !195
  %Arg_12.13668.72224 = extractelement <2 x float> %116, i32 0
  %Arg_12.13677.72225 = extractelement <2 x float> %116, i32 1
  %multiply.70.7 = fmul float %Arg_13.14667.72208, %Arg_12.13668.72224
  %subtract.71.7 = fsub float 1.000000e+00, %Arg_12.13668.72224
  %multiply.72.7 = fmul float %multiply.70.7, %subtract.71.7
  %add.77.i1050.7 = fadd float %add.77.i1051.6, %multiply.72.7
  %multiply.70678.7 = fmul float %Arg_13.14675.72209, %Arg_12.13677.72225
  %subtract.71682.7 = fsub float 1.000000e+00, %Arg_12.13677.72225
  %multiply.72683.7 = fmul float %multiply.70678.7, %subtract.71682.7
  %add.77.i1051.7 = fadd float %add.77.i1050.7, %multiply.72683.7
  %117 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.77.i1051.7, i32 16, i32 31)
  %add.77.i = fadd float %add.77.i1051.7, %117
  %118 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.77.i, i32 8, i32 31)
  %add.77.i1046 = fadd float %add.77.i, %118
  %119 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.77.i1046, i32 4, i32 31)
  %add.77.i1047 = fadd float %add.77.i1046, %119
  %120 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.77.i1047, i32 2, i32 31)
  %add.77.i1048 = fadd float %add.77.i1047, %120
  %121 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.77.i1048, i32 1, i32 31)
  %122 = icmp eq i32 %.pre1421, 0
  %123 = lshr i32 %.pre1370, 5
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache12, i64 0, i64 0, i64 0, i64 %124
  %add.77.i1049 = fadd float %add.77.i1048, %121
  br i1 %122, label %intra_warp_reduce_write-true735, label %intra_warp_reduce_write-after736

entry.reduce-group-7-true_crit_edge:              ; preds = %entry
  %.pre1422 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !194
  %.pre1424 = shl nuw nsw i32 %.pre1422, 1
  %.pre1426 = zext i32 %.pre1424 to i64
  %.pre1473 = and i32 %.pre1422, 31
  %Arg_15.16 = getelementptr float, ptr addrspace(1) %arg151504, i64 %.pre1426
  %126 = load <2 x float>, ptr addrspace(1) %Arg_15.16, align 8, !invariant.load !195
  %Arg_15.167862226 = extractelement <2 x float> %126, i32 0
  %Arg_15.167942227 = extractelement <2 x float> %126, i32 1
  %Arg_14.15 = getelementptr float, ptr addrspace(1) %arg141502, i64 %.pre1426
  %127 = load <2 x float>, ptr addrspace(1) %Arg_14.15, align 8, !invariant.load !195
  %Arg_14.157872242 = extractelement <2 x float> %127, i32 0
  %Arg_14.157962243 = extractelement <2 x float> %127, i32 1
  %multiply.79 = fmul float %Arg_15.167862226, %Arg_14.157872242
  %subtract.80 = fsub float 1.000000e+00, %Arg_14.157872242
  %multiply.81 = fmul float %multiply.79, %subtract.80
  %multiply.79797 = fmul float %Arg_15.167942227, %Arg_14.157962243
  %subtract.80801 = fsub float 1.000000e+00, %Arg_14.157962243
  %multiply.81802 = fmul float %multiply.79797, %subtract.80801
  %add.86.i1062 = fadd float %multiply.81, %multiply.81802
  %Arg_15.16.11827 = getelementptr inbounds float, ptr addrspace(1) %Arg_15.16, i64 1024
  %128 = load <2 x float>, ptr addrspace(1) %Arg_15.16.11827, align 8, !invariant.load !195
  %Arg_15.16786.12228 = extractelement <2 x float> %128, i32 0
  %Arg_15.16794.12229 = extractelement <2 x float> %128, i32 1
  %Arg_14.15.11829 = getelementptr inbounds float, ptr addrspace(1) %Arg_14.15, i64 1024
  %129 = load <2 x float>, ptr addrspace(1) %Arg_14.15.11829, align 8, !invariant.load !195
  %Arg_14.15787.12244 = extractelement <2 x float> %129, i32 0
  %Arg_14.15796.12245 = extractelement <2 x float> %129, i32 1
  %multiply.79.1 = fmul float %Arg_15.16786.12228, %Arg_14.15787.12244
  %subtract.80.1 = fsub float 1.000000e+00, %Arg_14.15787.12244
  %multiply.81.1 = fmul float %multiply.79.1, %subtract.80.1
  %add.86.i1061.1 = fadd float %add.86.i1062, %multiply.81.1
  %multiply.79797.1 = fmul float %Arg_15.16794.12229, %Arg_14.15796.12245
  %subtract.80801.1 = fsub float 1.000000e+00, %Arg_14.15796.12245
  %multiply.81802.1 = fmul float %multiply.79797.1, %subtract.80801.1
  %add.86.i1062.1 = fadd float %add.86.i1061.1, %multiply.81802.1
  %Arg_15.16.21835 = getelementptr inbounds float, ptr addrspace(1) %Arg_15.16, i64 2048
  %130 = load <2 x float>, ptr addrspace(1) %Arg_15.16.21835, align 8, !invariant.load !195
  %Arg_15.16786.22230 = extractelement <2 x float> %130, i32 0
  %Arg_15.16794.22231 = extractelement <2 x float> %130, i32 1
  %Arg_14.15.21837 = getelementptr inbounds float, ptr addrspace(1) %Arg_14.15, i64 2048
  %131 = load <2 x float>, ptr addrspace(1) %Arg_14.15.21837, align 8, !invariant.load !195
  %Arg_14.15787.22246 = extractelement <2 x float> %131, i32 0
  %Arg_14.15796.22247 = extractelement <2 x float> %131, i32 1
  %multiply.79.2 = fmul float %Arg_15.16786.22230, %Arg_14.15787.22246
  %subtract.80.2 = fsub float 1.000000e+00, %Arg_14.15787.22246
  %multiply.81.2 = fmul float %multiply.79.2, %subtract.80.2
  %add.86.i1061.2 = fadd float %add.86.i1062.1, %multiply.81.2
  %multiply.79797.2 = fmul float %Arg_15.16794.22231, %Arg_14.15796.22247
  %subtract.80801.2 = fsub float 1.000000e+00, %Arg_14.15796.22247
  %multiply.81802.2 = fmul float %multiply.79797.2, %subtract.80801.2
  %add.86.i1062.2 = fadd float %add.86.i1061.2, %multiply.81802.2
  %Arg_15.16.31843 = getelementptr inbounds float, ptr addrspace(1) %Arg_15.16, i64 3072
  %132 = load <2 x float>, ptr addrspace(1) %Arg_15.16.31843, align 8, !invariant.load !195
  %Arg_15.16786.32232 = extractelement <2 x float> %132, i32 0
  %Arg_15.16794.32233 = extractelement <2 x float> %132, i32 1
  %Arg_14.15.31845 = getelementptr inbounds float, ptr addrspace(1) %Arg_14.15, i64 3072
  %133 = load <2 x float>, ptr addrspace(1) %Arg_14.15.31845, align 8, !invariant.load !195
  %Arg_14.15787.32248 = extractelement <2 x float> %133, i32 0
  %Arg_14.15796.32249 = extractelement <2 x float> %133, i32 1
  %multiply.79.3 = fmul float %Arg_15.16786.32232, %Arg_14.15787.32248
  %subtract.80.3 = fsub float 1.000000e+00, %Arg_14.15787.32248
  %multiply.81.3 = fmul float %multiply.79.3, %subtract.80.3
  %add.86.i1061.3 = fadd float %add.86.i1062.2, %multiply.81.3
  %multiply.79797.3 = fmul float %Arg_15.16794.32233, %Arg_14.15796.32249
  %subtract.80801.3 = fsub float 1.000000e+00, %Arg_14.15796.32249
  %multiply.81802.3 = fmul float %multiply.79797.3, %subtract.80801.3
  %add.86.i1062.3 = fadd float %add.86.i1061.3, %multiply.81802.3
  %Arg_15.16.41851 = getelementptr inbounds float, ptr addrspace(1) %Arg_15.16, i64 4096
  %134 = load <2 x float>, ptr addrspace(1) %Arg_15.16.41851, align 8, !invariant.load !195
  %Arg_15.16786.42234 = extractelement <2 x float> %134, i32 0
  %Arg_15.16794.42235 = extractelement <2 x float> %134, i32 1
  %Arg_14.15.41853 = getelementptr inbounds float, ptr addrspace(1) %Arg_14.15, i64 4096
  %135 = load <2 x float>, ptr addrspace(1) %Arg_14.15.41853, align 8, !invariant.load !195
  %Arg_14.15787.42250 = extractelement <2 x float> %135, i32 0
  %Arg_14.15796.42251 = extractelement <2 x float> %135, i32 1
  %multiply.79.4 = fmul float %Arg_15.16786.42234, %Arg_14.15787.42250
  %subtract.80.4 = fsub float 1.000000e+00, %Arg_14.15787.42250
  %multiply.81.4 = fmul float %multiply.79.4, %subtract.80.4
  %add.86.i1061.4 = fadd float %add.86.i1062.3, %multiply.81.4
  %multiply.79797.4 = fmul float %Arg_15.16794.42235, %Arg_14.15796.42251
  %subtract.80801.4 = fsub float 1.000000e+00, %Arg_14.15796.42251
  %multiply.81802.4 = fmul float %multiply.79797.4, %subtract.80801.4
  %add.86.i1062.4 = fadd float %add.86.i1061.4, %multiply.81802.4
  %Arg_15.16.51859 = getelementptr inbounds float, ptr addrspace(1) %Arg_15.16, i64 5120
  %136 = load <2 x float>, ptr addrspace(1) %Arg_15.16.51859, align 8, !invariant.load !195
  %Arg_15.16786.52236 = extractelement <2 x float> %136, i32 0
  %Arg_15.16794.52237 = extractelement <2 x float> %136, i32 1
  %Arg_14.15.51861 = getelementptr inbounds float, ptr addrspace(1) %Arg_14.15, i64 5120
  %137 = load <2 x float>, ptr addrspace(1) %Arg_14.15.51861, align 8, !invariant.load !195
  %Arg_14.15787.52252 = extractelement <2 x float> %137, i32 0
  %Arg_14.15796.52253 = extractelement <2 x float> %137, i32 1
  %multiply.79.5 = fmul float %Arg_15.16786.52236, %Arg_14.15787.52252
  %subtract.80.5 = fsub float 1.000000e+00, %Arg_14.15787.52252
  %multiply.81.5 = fmul float %multiply.79.5, %subtract.80.5
  %add.86.i1061.5 = fadd float %add.86.i1062.4, %multiply.81.5
  %multiply.79797.5 = fmul float %Arg_15.16794.52237, %Arg_14.15796.52253
  %subtract.80801.5 = fsub float 1.000000e+00, %Arg_14.15796.52253
  %multiply.81802.5 = fmul float %multiply.79797.5, %subtract.80801.5
  %add.86.i1062.5 = fadd float %add.86.i1061.5, %multiply.81802.5
  %Arg_15.16.61867 = getelementptr inbounds float, ptr addrspace(1) %Arg_15.16, i64 6144
  %138 = load <2 x float>, ptr addrspace(1) %Arg_15.16.61867, align 8, !invariant.load !195
  %Arg_15.16786.62238 = extractelement <2 x float> %138, i32 0
  %Arg_15.16794.62239 = extractelement <2 x float> %138, i32 1
  %Arg_14.15.61869 = getelementptr inbounds float, ptr addrspace(1) %Arg_14.15, i64 6144
  %139 = load <2 x float>, ptr addrspace(1) %Arg_14.15.61869, align 8, !invariant.load !195
  %Arg_14.15787.62254 = extractelement <2 x float> %139, i32 0
  %Arg_14.15796.62255 = extractelement <2 x float> %139, i32 1
  %multiply.79.6 = fmul float %Arg_15.16786.62238, %Arg_14.15787.62254
  %subtract.80.6 = fsub float 1.000000e+00, %Arg_14.15787.62254
  %multiply.81.6 = fmul float %multiply.79.6, %subtract.80.6
  %add.86.i1061.6 = fadd float %add.86.i1062.5, %multiply.81.6
  %multiply.79797.6 = fmul float %Arg_15.16794.62239, %Arg_14.15796.62255
  %subtract.80801.6 = fsub float 1.000000e+00, %Arg_14.15796.62255
  %multiply.81802.6 = fmul float %multiply.79797.6, %subtract.80801.6
  %add.86.i1062.6 = fadd float %add.86.i1061.6, %multiply.81802.6
  %Arg_15.16.71875 = getelementptr inbounds float, ptr addrspace(1) %Arg_15.16, i64 7168
  %140 = load <2 x float>, ptr addrspace(1) %Arg_15.16.71875, align 8, !invariant.load !195
  %Arg_15.16786.72240 = extractelement <2 x float> %140, i32 0
  %Arg_15.16794.72241 = extractelement <2 x float> %140, i32 1
  %Arg_14.15.71877 = getelementptr inbounds float, ptr addrspace(1) %Arg_14.15, i64 7168
  %141 = load <2 x float>, ptr addrspace(1) %Arg_14.15.71877, align 8, !invariant.load !195
  %Arg_14.15787.72256 = extractelement <2 x float> %141, i32 0
  %Arg_14.15796.72257 = extractelement <2 x float> %141, i32 1
  %multiply.79.7 = fmul float %Arg_15.16786.72240, %Arg_14.15787.72256
  %subtract.80.7 = fsub float 1.000000e+00, %Arg_14.15787.72256
  %multiply.81.7 = fmul float %multiply.79.7, %subtract.80.7
  %add.86.i1061.7 = fadd float %add.86.i1062.6, %multiply.81.7
  %multiply.79797.7 = fmul float %Arg_15.16794.72241, %Arg_14.15796.72257
  %subtract.80801.7 = fsub float 1.000000e+00, %Arg_14.15796.72257
  %multiply.81802.7 = fmul float %multiply.79797.7, %subtract.80801.7
  %add.86.i1062.7 = fadd float %add.86.i1061.7, %multiply.81802.7
  %142 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.86.i1062.7, i32 16, i32 31)
  %add.86.i = fadd float %add.86.i1062.7, %142
  %143 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.86.i, i32 8, i32 31)
  %add.86.i1057 = fadd float %add.86.i, %143
  %144 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.86.i1057, i32 4, i32 31)
  %add.86.i1058 = fadd float %add.86.i1057, %144
  %145 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.86.i1058, i32 2, i32 31)
  %add.86.i1059 = fadd float %add.86.i1058, %145
  %146 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.86.i1059, i32 1, i32 31)
  %147 = icmp eq i32 %.pre1473, 0
  %148 = lshr i32 %.pre1422, 5
  %149 = zext i32 %148 to i64
  %150 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache13, i64 0, i64 0, i64 0, i64 %149
  %add.86.i1060 = fadd float %add.86.i1059, %146
  br i1 %147, label %intra_warp_reduce_write-true854, label %intra_warp_reduce_write-after855

entry.unreachabledefault:                         ; preds = %entry
  unreachable

common.ret:                                       ; preds = %intra_warp_reduce_write-after736, %reduction_write_output-true755, %inter_warp_reduce-true737.cont.cont.cont.cont.cont.cont, %intra_warp_reduce_write-after617, %reduction_write_output-true636, %inter_warp_reduce-true618.cont.cont.cont.cont.cont.cont, %intra_warp_reduce_write-after498, %reduction_write_output-true517, %inter_warp_reduce-true499.cont.cont.cont.cont.cont.cont, %intra_warp_reduce_write-after379, %reduction_write_output-true398, %inter_warp_reduce-true380.cont.cont.cont.cont.cont.cont, %intra_warp_reduce_write-after260, %reduction_write_output-true279, %inter_warp_reduce-true261.cont.cont.cont.cont.cont.cont, %intra_warp_reduce_write-after142, %reduction_write_output-true161, %inter_warp_reduce-true143.cont.cont.cont.cont.cont.cont, %intra_warp_reduce_write-after, %reduction_write_output-true, %inter_warp_reduce-true.cont.cont.cont.cont.cont.cont, %inter_warp_reduce-true856.cont.cont.cont.cont.cont.cont, %reduction_write_output-true874, %intra_warp_reduce_write-after855
  ret void

reduce-group-0-true:                              ; preds = %entry
  %151 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !194
  %152 = shl nuw nsw i32 %151, 1
  %153 = zext i32 %152 to i64
  %Arg_0.1 = getelementptr float, ptr addrspace(1) %arg01474, i64 %153
  %154 = load <2 x float>, ptr addrspace(1) %Arg_0.1, align 8, !invariant.load !195
  %Arg_0.132002 = extractelement <2 x float> %154, i32 0
  %Arg_0.172003 = extractelement <2 x float> %154, i32 1
  %Arg_1.2 = getelementptr float, ptr addrspace(1) %arg11476, i64 %153
  %155 = load <2 x float>, ptr addrspace(1) %Arg_1.2, align 8, !invariant.load !195
  %Arg_1.242018 = extractelement <2 x float> %155, i32 0
  %Arg_1.292019 = extractelement <2 x float> %155, i32 1
  %add.17 = fadd float %Arg_0.132002, %Arg_1.242018
  %add.1710 = fadd float %Arg_0.172003, %Arg_1.292019
  %add.23.i985 = fadd float %add.17, %add.1710
  %Arg_0.1.11887 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 1024
  %156 = load <2 x float>, ptr addrspace(1) %Arg_0.1.11887, align 8, !invariant.load !195
  %Arg_0.13.12004 = extractelement <2 x float> %156, i32 0
  %Arg_0.17.12005 = extractelement <2 x float> %156, i32 1
  %Arg_1.2.11889 = getelementptr inbounds float, ptr addrspace(1) %Arg_1.2, i64 1024
  %157 = load <2 x float>, ptr addrspace(1) %Arg_1.2.11889, align 8, !invariant.load !195
  %Arg_1.24.12020 = extractelement <2 x float> %157, i32 0
  %Arg_1.29.12021 = extractelement <2 x float> %157, i32 1
  %add.17.1 = fadd float %Arg_0.13.12004, %Arg_1.24.12020
  %add.23.i984.1 = fadd float %add.23.i985, %add.17.1
  %add.1710.1 = fadd float %Arg_0.17.12005, %Arg_1.29.12021
  %add.23.i985.1 = fadd float %add.23.i984.1, %add.1710.1
  %Arg_0.1.21895 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 2048
  %158 = load <2 x float>, ptr addrspace(1) %Arg_0.1.21895, align 8, !invariant.load !195
  %Arg_0.13.22006 = extractelement <2 x float> %158, i32 0
  %Arg_0.17.22007 = extractelement <2 x float> %158, i32 1
  %Arg_1.2.21897 = getelementptr inbounds float, ptr addrspace(1) %Arg_1.2, i64 2048
  %159 = load <2 x float>, ptr addrspace(1) %Arg_1.2.21897, align 8, !invariant.load !195
  %Arg_1.24.22022 = extractelement <2 x float> %159, i32 0
  %Arg_1.29.22023 = extractelement <2 x float> %159, i32 1
  %add.17.2 = fadd float %Arg_0.13.22006, %Arg_1.24.22022
  %add.23.i984.2 = fadd float %add.23.i985.1, %add.17.2
  %add.1710.2 = fadd float %Arg_0.17.22007, %Arg_1.29.22023
  %add.23.i985.2 = fadd float %add.23.i984.2, %add.1710.2
  %Arg_0.1.31903 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 3072
  %160 = load <2 x float>, ptr addrspace(1) %Arg_0.1.31903, align 8, !invariant.load !195
  %Arg_0.13.32008 = extractelement <2 x float> %160, i32 0
  %Arg_0.17.32009 = extractelement <2 x float> %160, i32 1
  %Arg_1.2.31905 = getelementptr inbounds float, ptr addrspace(1) %Arg_1.2, i64 3072
  %161 = load <2 x float>, ptr addrspace(1) %Arg_1.2.31905, align 8, !invariant.load !195
  %Arg_1.24.32024 = extractelement <2 x float> %161, i32 0
  %Arg_1.29.32025 = extractelement <2 x float> %161, i32 1
  %add.17.3 = fadd float %Arg_0.13.32008, %Arg_1.24.32024
  %add.23.i984.3 = fadd float %add.23.i985.2, %add.17.3
  %add.1710.3 = fadd float %Arg_0.17.32009, %Arg_1.29.32025
  %add.23.i985.3 = fadd float %add.23.i984.3, %add.1710.3
  %Arg_0.1.41911 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 4096
  %162 = load <2 x float>, ptr addrspace(1) %Arg_0.1.41911, align 8, !invariant.load !195
  %Arg_0.13.42010 = extractelement <2 x float> %162, i32 0
  %Arg_0.17.42011 = extractelement <2 x float> %162, i32 1
  %Arg_1.2.41913 = getelementptr inbounds float, ptr addrspace(1) %Arg_1.2, i64 4096
  %163 = load <2 x float>, ptr addrspace(1) %Arg_1.2.41913, align 8, !invariant.load !195
  %Arg_1.24.42026 = extractelement <2 x float> %163, i32 0
  %Arg_1.29.42027 = extractelement <2 x float> %163, i32 1
  %add.17.4 = fadd float %Arg_0.13.42010, %Arg_1.24.42026
  %add.23.i984.4 = fadd float %add.23.i985.3, %add.17.4
  %add.1710.4 = fadd float %Arg_0.17.42011, %Arg_1.29.42027
  %add.23.i985.4 = fadd float %add.23.i984.4, %add.1710.4
  %Arg_0.1.51919 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 5120
  %164 = load <2 x float>, ptr addrspace(1) %Arg_0.1.51919, align 8, !invariant.load !195
  %Arg_0.13.52012 = extractelement <2 x float> %164, i32 0
  %Arg_0.17.52013 = extractelement <2 x float> %164, i32 1
  %Arg_1.2.51921 = getelementptr inbounds float, ptr addrspace(1) %Arg_1.2, i64 5120
  %165 = load <2 x float>, ptr addrspace(1) %Arg_1.2.51921, align 8, !invariant.load !195
  %Arg_1.24.52028 = extractelement <2 x float> %165, i32 0
  %Arg_1.29.52029 = extractelement <2 x float> %165, i32 1
  %add.17.5 = fadd float %Arg_0.13.52012, %Arg_1.24.52028
  %add.23.i984.5 = fadd float %add.23.i985.4, %add.17.5
  %add.1710.5 = fadd float %Arg_0.17.52013, %Arg_1.29.52029
  %add.23.i985.5 = fadd float %add.23.i984.5, %add.1710.5
  %Arg_0.1.61927 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 6144
  %166 = load <2 x float>, ptr addrspace(1) %Arg_0.1.61927, align 8, !invariant.load !195
  %Arg_0.13.62014 = extractelement <2 x float> %166, i32 0
  %Arg_0.17.62015 = extractelement <2 x float> %166, i32 1
  %Arg_1.2.61929 = getelementptr inbounds float, ptr addrspace(1) %Arg_1.2, i64 6144
  %167 = load <2 x float>, ptr addrspace(1) %Arg_1.2.61929, align 8, !invariant.load !195
  %Arg_1.24.62030 = extractelement <2 x float> %167, i32 0
  %Arg_1.29.62031 = extractelement <2 x float> %167, i32 1
  %add.17.6 = fadd float %Arg_0.13.62014, %Arg_1.24.62030
  %add.23.i984.6 = fadd float %add.23.i985.5, %add.17.6
  %add.1710.6 = fadd float %Arg_0.17.62015, %Arg_1.29.62031
  %add.23.i985.6 = fadd float %add.23.i984.6, %add.1710.6
  %Arg_0.1.71935 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 7168
  %168 = load <2 x float>, ptr addrspace(1) %Arg_0.1.71935, align 8, !invariant.load !195
  %Arg_0.13.72016 = extractelement <2 x float> %168, i32 0
  %Arg_0.17.72017 = extractelement <2 x float> %168, i32 1
  %Arg_1.2.71937 = getelementptr inbounds float, ptr addrspace(1) %Arg_1.2, i64 7168
  %169 = load <2 x float>, ptr addrspace(1) %Arg_1.2.71937, align 8, !invariant.load !195
  %Arg_1.24.72032 = extractelement <2 x float> %169, i32 0
  %Arg_1.29.72033 = extractelement <2 x float> %169, i32 1
  %add.17.7 = fadd float %Arg_0.13.72016, %Arg_1.24.72032
  %add.23.i984.7 = fadd float %add.23.i985.6, %add.17.7
  %add.1710.7 = fadd float %Arg_0.17.72017, %Arg_1.29.72033
  %add.23.i985.7 = fadd float %add.23.i984.7, %add.1710.7
  %lane_id = and i32 %151, 31
  %170 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.23.i985.7, i32 16, i32 31)
  %add.23.i = fadd float %add.23.i985.7, %170
  %171 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.23.i, i32 8, i32 31)
  %add.23.i980 = fadd float %add.23.i, %171
  %172 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.23.i980, i32 4, i32 31)
  %add.23.i981 = fadd float %add.23.i980, %172
  %173 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.23.i981, i32 2, i32 31)
  %add.23.i982 = fadd float %add.23.i981, %173
  %174 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.23.i982, i32 1, i32 31)
  %175 = icmp eq i32 %lane_id, 0
  %176 = lshr i32 %151, 5
  %177 = zext i32 %176 to i64
  %178 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache6, i64 0, i64 0, i64 0, i64 %177
  %add.23.i983 = fadd float %add.23.i982, %174
  br i1 %175, label %intra_warp_reduce_write-true, label %intra_warp_reduce_write-after

intra_warp_reduce_write-after:                    ; preds = %intra_warp_reduce_write-true, %reduce-group-0-true
  tail call void @llvm.nvvm.barrier0()
  %179 = icmp ult i32 %151, 32
  br i1 %179, label %inter_warp_reduce-true, label %common.ret

intra_warp_reduce_write-true:                     ; preds = %reduce-group-0-true
  store float %add.23.i983, ptr addrspace(3) %178, align 4
  br label %intra_warp_reduce_write-after

inter_warp_reduce-true:                           ; preds = %intra_warp_reduce_write-after
  %180 = zext i32 %lane_id to i64
  %181 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache6, i64 0, i64 0, i64 0, i64 %180
  %182 = icmp ult i32 %151, 16
  br i1 %182, label %inter_warp_reduce-true.then1077, label %inter_warp_reduce-true.cont1076

inter_warp_reduce-true.then1077:                  ; preds = %inter_warp_reduce-true
  %partial_reduction_result49.then.val = load float, ptr addrspace(3) %181, align 4
  br label %inter_warp_reduce-true.cont1076

inter_warp_reduce-true.cont1076:                  ; preds = %inter_warp_reduce-true, %inter_warp_reduce-true.then1077
  %partial_reduction_result49 = phi float [ %partial_reduction_result49.then.val, %inter_warp_reduce-true.then1077 ], [ -0.000000e+00, %inter_warp_reduce-true ]
  %183 = icmp ult i32 %151, 16
  %184 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result49, i32 16, i32 31)
  br i1 %183, label %inter_warp_reduce-true.then, label %inter_warp_reduce-true.cont

inter_warp_reduce-true.then:                      ; preds = %inter_warp_reduce-true.cont1076
  %.val888.then.val = load float, ptr addrspace(3) %181, align 4
  br label %inter_warp_reduce-true.cont

inter_warp_reduce-true.cont:                      ; preds = %inter_warp_reduce-true.cont1076, %inter_warp_reduce-true.then
  %.val888 = phi float [ %.val888.then.val, %inter_warp_reduce-true.then ], [ -0.000000e+00, %inter_warp_reduce-true.cont1076 ]
  %185 = icmp ult i32 %151, 16
  %add.23.i986 = fadd float %184, %.val888
  br i1 %185, label %inter_warp_reduce-true.cont.then1075, label %inter_warp_reduce-true.cont.cont1074

inter_warp_reduce-true.cont.then1075:             ; preds = %inter_warp_reduce-true.cont
  store float %add.23.i986, ptr addrspace(3) %181, align 4
  br label %inter_warp_reduce-true.cont.cont1074

inter_warp_reduce-true.cont.cont1074:             ; preds = %inter_warp_reduce-true.cont, %inter_warp_reduce-true.cont.then1075
  %initial_value_addr.0 = phi float [ -0.000000e+00, %inter_warp_reduce-true.cont.then1075 ], [ %add.23.i986, %inter_warp_reduce-true.cont ]
  %186 = icmp ult i32 %151, 16
  %187 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.23.i986, i32 8, i32 31)
  br i1 %186, label %inter_warp_reduce-true.cont.then, label %inter_warp_reduce-true.cont.cont

inter_warp_reduce-true.cont.then:                 ; preds = %inter_warp_reduce-true.cont.cont1074
  %.val887.then.val = load float, ptr addrspace(3) %181, align 4
  br label %inter_warp_reduce-true.cont.cont

inter_warp_reduce-true.cont.cont:                 ; preds = %inter_warp_reduce-true.cont.cont1074, %inter_warp_reduce-true.cont.then
  %.val887 = phi float [ %.val887.then.val, %inter_warp_reduce-true.cont.then ], [ %initial_value_addr.0, %inter_warp_reduce-true.cont.cont1074 ]
  %188 = icmp ult i32 %151, 16
  %add.23.i987 = fadd float %187, %.val887
  br i1 %188, label %inter_warp_reduce-true.cont.cont.then1073, label %inter_warp_reduce-true.cont.cont.cont1072

inter_warp_reduce-true.cont.cont.then1073:        ; preds = %inter_warp_reduce-true.cont.cont
  store float %add.23.i987, ptr addrspace(3) %181, align 4
  br label %inter_warp_reduce-true.cont.cont.cont1072

inter_warp_reduce-true.cont.cont.cont1072:        ; preds = %inter_warp_reduce-true.cont.cont, %inter_warp_reduce-true.cont.cont.then1073
  %initial_value_addr.1 = phi float [ %initial_value_addr.0, %inter_warp_reduce-true.cont.cont.then1073 ], [ %add.23.i987, %inter_warp_reduce-true.cont.cont ]
  %189 = icmp ult i32 %151, 16
  %190 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.23.i987, i32 4, i32 31)
  br i1 %189, label %inter_warp_reduce-true.cont.cont.then, label %inter_warp_reduce-true.cont.cont.cont

inter_warp_reduce-true.cont.cont.then:            ; preds = %inter_warp_reduce-true.cont.cont.cont1072
  %.val886.then.val = load float, ptr addrspace(3) %181, align 4
  br label %inter_warp_reduce-true.cont.cont.cont

inter_warp_reduce-true.cont.cont.cont:            ; preds = %inter_warp_reduce-true.cont.cont.cont1072, %inter_warp_reduce-true.cont.cont.then
  %.val886 = phi float [ %.val886.then.val, %inter_warp_reduce-true.cont.cont.then ], [ %initial_value_addr.1, %inter_warp_reduce-true.cont.cont.cont1072 ]
  %191 = icmp ult i32 %151, 16
  %add.23.i988 = fadd float %190, %.val886
  br i1 %191, label %inter_warp_reduce-true.cont.cont.cont.then1071, label %inter_warp_reduce-true.cont.cont.cont.cont1070

inter_warp_reduce-true.cont.cont.cont.then1071:   ; preds = %inter_warp_reduce-true.cont.cont.cont
  store float %add.23.i988, ptr addrspace(3) %181, align 4
  br label %inter_warp_reduce-true.cont.cont.cont.cont1070

inter_warp_reduce-true.cont.cont.cont.cont1070:   ; preds = %inter_warp_reduce-true.cont.cont.cont, %inter_warp_reduce-true.cont.cont.cont.then1071
  %initial_value_addr.2 = phi float [ %initial_value_addr.1, %inter_warp_reduce-true.cont.cont.cont.then1071 ], [ %add.23.i988, %inter_warp_reduce-true.cont.cont.cont ]
  %192 = icmp ult i32 %151, 16
  %193 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.23.i988, i32 2, i32 31)
  br i1 %192, label %inter_warp_reduce-true.cont.cont.cont.then, label %inter_warp_reduce-true.cont.cont.cont.cont

inter_warp_reduce-true.cont.cont.cont.then:       ; preds = %inter_warp_reduce-true.cont.cont.cont.cont1070
  %.val885.then.val = load float, ptr addrspace(3) %181, align 4
  br label %inter_warp_reduce-true.cont.cont.cont.cont

inter_warp_reduce-true.cont.cont.cont.cont:       ; preds = %inter_warp_reduce-true.cont.cont.cont.cont1070, %inter_warp_reduce-true.cont.cont.cont.then
  %.val885 = phi float [ %.val885.then.val, %inter_warp_reduce-true.cont.cont.cont.then ], [ %initial_value_addr.2, %inter_warp_reduce-true.cont.cont.cont.cont1070 ]
  %194 = icmp ult i32 %151, 16
  %add.23.i989 = fadd float %193, %.val885
  br i1 %194, label %inter_warp_reduce-true.cont.cont.cont.cont.then1069, label %inter_warp_reduce-true.cont.cont.cont.cont.cont1068

inter_warp_reduce-true.cont.cont.cont.cont.then1069: ; preds = %inter_warp_reduce-true.cont.cont.cont.cont
  store float %add.23.i989, ptr addrspace(3) %181, align 4
  br label %inter_warp_reduce-true.cont.cont.cont.cont.cont1068

inter_warp_reduce-true.cont.cont.cont.cont.cont1068: ; preds = %inter_warp_reduce-true.cont.cont.cont.cont, %inter_warp_reduce-true.cont.cont.cont.cont.then1069
  %initial_value_addr.3 = phi float [ %initial_value_addr.2, %inter_warp_reduce-true.cont.cont.cont.cont.then1069 ], [ %add.23.i989, %inter_warp_reduce-true.cont.cont.cont.cont ]
  %195 = icmp ult i32 %151, 16
  %196 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.23.i989, i32 1, i32 31)
  br i1 %195, label %inter_warp_reduce-true.cont.cont.cont.cont.then, label %inter_warp_reduce-true.cont.cont.cont.cont.cont

inter_warp_reduce-true.cont.cont.cont.cont.then:  ; preds = %inter_warp_reduce-true.cont.cont.cont.cont.cont1068
  %.val.then.val = load float, ptr addrspace(3) %181, align 4
  br label %inter_warp_reduce-true.cont.cont.cont.cont.cont

inter_warp_reduce-true.cont.cont.cont.cont.cont:  ; preds = %inter_warp_reduce-true.cont.cont.cont.cont.cont1068, %inter_warp_reduce-true.cont.cont.cont.cont.then
  %.val = phi float [ %.val.then.val, %inter_warp_reduce-true.cont.cont.cont.cont.then ], [ %initial_value_addr.3, %inter_warp_reduce-true.cont.cont.cont.cont.cont1068 ]
  %197 = icmp ult i32 %151, 16
  %add.23.i990 = fadd float %196, %.val
  br i1 %197, label %inter_warp_reduce-true.cont.cont.cont.cont.cont.then, label %inter_warp_reduce-true.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true.cont.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true.cont.cont.cont.cont.cont
  store float %add.23.i990, ptr addrspace(3) %181, align 4
  br label %inter_warp_reduce-true.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true.cont.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true.cont.cont.cont.cont.cont, %inter_warp_reduce-true.cont.cont.cont.cont.cont.then
  %198 = icmp eq i32 %151, 0
  br i1 %198, label %reduction_write_output-true, label %common.ret

reduction_write_output-true:                      ; preds = %inter_warp_reduce-true.cont.cont.cont.cont.cont.cont
  store float %add.23.i990, ptr addrspace(1) %arg161506, align 128
  br label %common.ret

reduce-group-1-true:                              ; preds = %entry
  %199 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !194
  %200 = shl nuw nsw i32 %199, 1
  %201 = zext i32 %200 to i64
  %Arg_2.3 = getelementptr float, ptr addrspace(1) %arg21478, i64 %201
  %202 = load <2 x float>, ptr addrspace(1) %Arg_2.3, align 8, !invariant.load !195
  %Arg_2.3912034 = extractelement <2 x float> %202, i32 0
  %Arg_2.3962035 = extractelement <2 x float> %202, i32 1
  %Arg_3.4 = getelementptr float, ptr addrspace(1) %arg31480, i64 %201
  %203 = load <2 x float>, ptr addrspace(1) %Arg_3.4, align 8, !invariant.load !195
  %Arg_3.4922050 = extractelement <2 x float> %203, i32 0
  %Arg_3.4982051 = extractelement <2 x float> %203, i32 1
  %add.25 = fadd float %Arg_2.3912034, %Arg_3.4922050
  %add.2599 = fadd float %Arg_2.3962035, %Arg_3.4982051
  %add.30.i996 = fadd float %add.25, %add.2599
  %Arg_2.3.11947 = getelementptr inbounds float, ptr addrspace(1) %Arg_2.3, i64 1024
  %204 = load <2 x float>, ptr addrspace(1) %Arg_2.3.11947, align 8, !invariant.load !195
  %Arg_2.391.12036 = extractelement <2 x float> %204, i32 0
  %Arg_2.396.12037 = extractelement <2 x float> %204, i32 1
  %Arg_3.4.11949 = getelementptr inbounds float, ptr addrspace(1) %Arg_3.4, i64 1024
  %205 = load <2 x float>, ptr addrspace(1) %Arg_3.4.11949, align 8, !invariant.load !195
  %Arg_3.492.12052 = extractelement <2 x float> %205, i32 0
  %Arg_3.498.12053 = extractelement <2 x float> %205, i32 1
  %add.25.1 = fadd float %Arg_2.391.12036, %Arg_3.492.12052
  %add.30.i995.1 = fadd float %add.30.i996, %add.25.1
  %add.2599.1 = fadd float %Arg_2.396.12037, %Arg_3.498.12053
  %add.30.i996.1 = fadd float %add.30.i995.1, %add.2599.1
  %Arg_2.3.21955 = getelementptr inbounds float, ptr addrspace(1) %Arg_2.3, i64 2048
  %206 = load <2 x float>, ptr addrspace(1) %Arg_2.3.21955, align 8, !invariant.load !195
  %Arg_2.391.22038 = extractelement <2 x float> %206, i32 0
  %Arg_2.396.22039 = extractelement <2 x float> %206, i32 1
  %Arg_3.4.21957 = getelementptr inbounds float, ptr addrspace(1) %Arg_3.4, i64 2048
  %207 = load <2 x float>, ptr addrspace(1) %Arg_3.4.21957, align 8, !invariant.load !195
  %Arg_3.492.22054 = extractelement <2 x float> %207, i32 0
  %Arg_3.498.22055 = extractelement <2 x float> %207, i32 1
  %add.25.2 = fadd float %Arg_2.391.22038, %Arg_3.492.22054
  %add.30.i995.2 = fadd float %add.30.i996.1, %add.25.2
  %add.2599.2 = fadd float %Arg_2.396.22039, %Arg_3.498.22055
  %add.30.i996.2 = fadd float %add.30.i995.2, %add.2599.2
  %Arg_2.3.31963 = getelementptr inbounds float, ptr addrspace(1) %Arg_2.3, i64 3072
  %208 = load <2 x float>, ptr addrspace(1) %Arg_2.3.31963, align 8, !invariant.load !195
  %Arg_2.391.32040 = extractelement <2 x float> %208, i32 0
  %Arg_2.396.32041 = extractelement <2 x float> %208, i32 1
  %Arg_3.4.31965 = getelementptr inbounds float, ptr addrspace(1) %Arg_3.4, i64 3072
  %209 = load <2 x float>, ptr addrspace(1) %Arg_3.4.31965, align 8, !invariant.load !195
  %Arg_3.492.32056 = extractelement <2 x float> %209, i32 0
  %Arg_3.498.32057 = extractelement <2 x float> %209, i32 1
  %add.25.3 = fadd float %Arg_2.391.32040, %Arg_3.492.32056
  %add.30.i995.3 = fadd float %add.30.i996.2, %add.25.3
  %add.2599.3 = fadd float %Arg_2.396.32041, %Arg_3.498.32057
  %add.30.i996.3 = fadd float %add.30.i995.3, %add.2599.3
  %Arg_2.3.41971 = getelementptr inbounds float, ptr addrspace(1) %Arg_2.3, i64 4096
  %210 = load <2 x float>, ptr addrspace(1) %Arg_2.3.41971, align 8, !invariant.load !195
  %Arg_2.391.42042 = extractelement <2 x float> %210, i32 0
  %Arg_2.396.42043 = extractelement <2 x float> %210, i32 1
  %Arg_3.4.41973 = getelementptr inbounds float, ptr addrspace(1) %Arg_3.4, i64 4096
  %211 = load <2 x float>, ptr addrspace(1) %Arg_3.4.41973, align 8, !invariant.load !195
  %Arg_3.492.42058 = extractelement <2 x float> %211, i32 0
  %Arg_3.498.42059 = extractelement <2 x float> %211, i32 1
  %add.25.4 = fadd float %Arg_2.391.42042, %Arg_3.492.42058
  %add.30.i995.4 = fadd float %add.30.i996.3, %add.25.4
  %add.2599.4 = fadd float %Arg_2.396.42043, %Arg_3.498.42059
  %add.30.i996.4 = fadd float %add.30.i995.4, %add.2599.4
  %Arg_2.3.51979 = getelementptr inbounds float, ptr addrspace(1) %Arg_2.3, i64 5120
  %212 = load <2 x float>, ptr addrspace(1) %Arg_2.3.51979, align 8, !invariant.load !195
  %Arg_2.391.52044 = extractelement <2 x float> %212, i32 0
  %Arg_2.396.52045 = extractelement <2 x float> %212, i32 1
  %Arg_3.4.51981 = getelementptr inbounds float, ptr addrspace(1) %Arg_3.4, i64 5120
  %213 = load <2 x float>, ptr addrspace(1) %Arg_3.4.51981, align 8, !invariant.load !195
  %Arg_3.492.52060 = extractelement <2 x float> %213, i32 0
  %Arg_3.498.52061 = extractelement <2 x float> %213, i32 1
  %add.25.5 = fadd float %Arg_2.391.52044, %Arg_3.492.52060
  %add.30.i995.5 = fadd float %add.30.i996.4, %add.25.5
  %add.2599.5 = fadd float %Arg_2.396.52045, %Arg_3.498.52061
  %add.30.i996.5 = fadd float %add.30.i995.5, %add.2599.5
  %Arg_2.3.61987 = getelementptr inbounds float, ptr addrspace(1) %Arg_2.3, i64 6144
  %214 = load <2 x float>, ptr addrspace(1) %Arg_2.3.61987, align 8, !invariant.load !195
  %Arg_2.391.62046 = extractelement <2 x float> %214, i32 0
  %Arg_2.396.62047 = extractelement <2 x float> %214, i32 1
  %Arg_3.4.61989 = getelementptr inbounds float, ptr addrspace(1) %Arg_3.4, i64 6144
  %215 = load <2 x float>, ptr addrspace(1) %Arg_3.4.61989, align 8, !invariant.load !195
  %Arg_3.492.62062 = extractelement <2 x float> %215, i32 0
  %Arg_3.498.62063 = extractelement <2 x float> %215, i32 1
  %add.25.6 = fadd float %Arg_2.391.62046, %Arg_3.492.62062
  %add.30.i995.6 = fadd float %add.30.i996.5, %add.25.6
  %add.2599.6 = fadd float %Arg_2.396.62047, %Arg_3.498.62063
  %add.30.i996.6 = fadd float %add.30.i995.6, %add.2599.6
  %Arg_2.3.71995 = getelementptr inbounds float, ptr addrspace(1) %Arg_2.3, i64 7168
  %216 = load <2 x float>, ptr addrspace(1) %Arg_2.3.71995, align 8, !invariant.load !195
  %Arg_2.391.72048 = extractelement <2 x float> %216, i32 0
  %Arg_2.396.72049 = extractelement <2 x float> %216, i32 1
  %Arg_3.4.71997 = getelementptr inbounds float, ptr addrspace(1) %Arg_3.4, i64 7168
  %217 = load <2 x float>, ptr addrspace(1) %Arg_3.4.71997, align 8, !invariant.load !195
  %Arg_3.492.72064 = extractelement <2 x float> %217, i32 0
  %Arg_3.498.72065 = extractelement <2 x float> %217, i32 1
  %add.25.7 = fadd float %Arg_2.391.72048, %Arg_3.492.72064
  %add.30.i995.7 = fadd float %add.30.i996.6, %add.25.7
  %add.2599.7 = fadd float %Arg_2.396.72049, %Arg_3.498.72065
  %add.30.i996.7 = fadd float %add.30.i995.7, %add.2599.7
  %lane_id69 = and i32 %199, 31
  %218 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i996.7, i32 16, i32 31)
  %add.30.i = fadd float %add.30.i996.7, %218
  %219 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i, i32 8, i32 31)
  %add.30.i991 = fadd float %add.30.i, %219
  %220 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i991, i32 4, i32 31)
  %add.30.i992 = fadd float %add.30.i991, %220
  %221 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i992, i32 2, i32 31)
  %add.30.i993 = fadd float %add.30.i992, %221
  %222 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i993, i32 1, i32 31)
  %223 = icmp eq i32 %lane_id69, 0
  %224 = lshr i32 %199, 5
  %225 = zext i32 %224 to i64
  %226 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache7, i64 0, i64 0, i64 0, i64 %225
  %add.30.i994 = fadd float %add.30.i993, %222
  br i1 %223, label %intra_warp_reduce_write-true141, label %intra_warp_reduce_write-after142

intra_warp_reduce_write-after142:                 ; preds = %intra_warp_reduce_write-true141, %reduce-group-1-true
  tail call void @llvm.nvvm.barrier0()
  %227 = icmp ult i32 %199, 32
  br i1 %227, label %inter_warp_reduce-true143, label %common.ret

intra_warp_reduce_write-true141:                  ; preds = %reduce-group-1-true
  store float %add.30.i994, ptr addrspace(3) %226, align 4
  br label %intra_warp_reduce_write-after142

inter_warp_reduce-true143:                        ; preds = %intra_warp_reduce_write-after142
  %228 = zext i32 %lane_id69 to i64
  %229 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache7, i64 0, i64 0, i64 0, i64 %228
  %230 = icmp ult i32 %199, 16
  br i1 %230, label %inter_warp_reduce-true143.then1087, label %inter_warp_reduce-true143.cont1086

inter_warp_reduce-true143.then1087:               ; preds = %inter_warp_reduce-true143
  %partial_reduction_result147.then.val = load float, ptr addrspace(3) %229, align 4
  br label %inter_warp_reduce-true143.cont1086

inter_warp_reduce-true143.cont1086:               ; preds = %inter_warp_reduce-true143, %inter_warp_reduce-true143.then1087
  %partial_reduction_result147 = phi float [ %partial_reduction_result147.then.val, %inter_warp_reduce-true143.then1087 ], [ -0.000000e+00, %inter_warp_reduce-true143 ]
  %231 = icmp ult i32 %199, 16
  %232 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result147, i32 16, i32 31)
  br i1 %231, label %inter_warp_reduce-true143.then, label %inter_warp_reduce-true143.cont

inter_warp_reduce-true143.then:                   ; preds = %inter_warp_reduce-true143.cont1086
  %.val900.then.val = load float, ptr addrspace(3) %229, align 4
  br label %inter_warp_reduce-true143.cont

inter_warp_reduce-true143.cont:                   ; preds = %inter_warp_reduce-true143.cont1086, %inter_warp_reduce-true143.then
  %.val900 = phi float [ %.val900.then.val, %inter_warp_reduce-true143.then ], [ -0.000000e+00, %inter_warp_reduce-true143.cont1086 ]
  %233 = icmp ult i32 %199, 16
  %add.30.i997 = fadd float %232, %.val900
  br i1 %233, label %inter_warp_reduce-true143.cont.then1085, label %inter_warp_reduce-true143.cont.cont1084

inter_warp_reduce-true143.cont.then1085:          ; preds = %inter_warp_reduce-true143.cont
  store float %add.30.i997, ptr addrspace(3) %229, align 4
  br label %inter_warp_reduce-true143.cont.cont1084

inter_warp_reduce-true143.cont.cont1084:          ; preds = %inter_warp_reduce-true143.cont, %inter_warp_reduce-true143.cont.then1085
  %initial_value_addr145.0 = phi float [ -0.000000e+00, %inter_warp_reduce-true143.cont.then1085 ], [ %add.30.i997, %inter_warp_reduce-true143.cont ]
  %234 = icmp ult i32 %199, 16
  %235 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i997, i32 8, i32 31)
  br i1 %234, label %inter_warp_reduce-true143.cont.then, label %inter_warp_reduce-true143.cont.cont

inter_warp_reduce-true143.cont.then:              ; preds = %inter_warp_reduce-true143.cont.cont1084
  %.val899.then.val = load float, ptr addrspace(3) %229, align 4
  br label %inter_warp_reduce-true143.cont.cont

inter_warp_reduce-true143.cont.cont:              ; preds = %inter_warp_reduce-true143.cont.cont1084, %inter_warp_reduce-true143.cont.then
  %.val899 = phi float [ %.val899.then.val, %inter_warp_reduce-true143.cont.then ], [ %initial_value_addr145.0, %inter_warp_reduce-true143.cont.cont1084 ]
  %236 = icmp ult i32 %199, 16
  %add.30.i998 = fadd float %235, %.val899
  br i1 %236, label %inter_warp_reduce-true143.cont.cont.then1083, label %inter_warp_reduce-true143.cont.cont.cont1082

inter_warp_reduce-true143.cont.cont.then1083:     ; preds = %inter_warp_reduce-true143.cont.cont
  store float %add.30.i998, ptr addrspace(3) %229, align 4
  br label %inter_warp_reduce-true143.cont.cont.cont1082

inter_warp_reduce-true143.cont.cont.cont1082:     ; preds = %inter_warp_reduce-true143.cont.cont, %inter_warp_reduce-true143.cont.cont.then1083
  %initial_value_addr145.1 = phi float [ %initial_value_addr145.0, %inter_warp_reduce-true143.cont.cont.then1083 ], [ %add.30.i998, %inter_warp_reduce-true143.cont.cont ]
  %237 = icmp ult i32 %199, 16
  %238 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i998, i32 4, i32 31)
  br i1 %237, label %inter_warp_reduce-true143.cont.cont.then, label %inter_warp_reduce-true143.cont.cont.cont

inter_warp_reduce-true143.cont.cont.then:         ; preds = %inter_warp_reduce-true143.cont.cont.cont1082
  %.val898.then.val = load float, ptr addrspace(3) %229, align 4
  br label %inter_warp_reduce-true143.cont.cont.cont

inter_warp_reduce-true143.cont.cont.cont:         ; preds = %inter_warp_reduce-true143.cont.cont.cont1082, %inter_warp_reduce-true143.cont.cont.then
  %.val898 = phi float [ %.val898.then.val, %inter_warp_reduce-true143.cont.cont.then ], [ %initial_value_addr145.1, %inter_warp_reduce-true143.cont.cont.cont1082 ]
  %239 = icmp ult i32 %199, 16
  %add.30.i999 = fadd float %238, %.val898
  br i1 %239, label %inter_warp_reduce-true143.cont.cont.cont.then1081, label %inter_warp_reduce-true143.cont.cont.cont.cont1080

inter_warp_reduce-true143.cont.cont.cont.then1081: ; preds = %inter_warp_reduce-true143.cont.cont.cont
  store float %add.30.i999, ptr addrspace(3) %229, align 4
  br label %inter_warp_reduce-true143.cont.cont.cont.cont1080

inter_warp_reduce-true143.cont.cont.cont.cont1080: ; preds = %inter_warp_reduce-true143.cont.cont.cont, %inter_warp_reduce-true143.cont.cont.cont.then1081
  %initial_value_addr145.2 = phi float [ %initial_value_addr145.1, %inter_warp_reduce-true143.cont.cont.cont.then1081 ], [ %add.30.i999, %inter_warp_reduce-true143.cont.cont.cont ]
  %240 = icmp ult i32 %199, 16
  %241 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i999, i32 2, i32 31)
  br i1 %240, label %inter_warp_reduce-true143.cont.cont.cont.then, label %inter_warp_reduce-true143.cont.cont.cont.cont

inter_warp_reduce-true143.cont.cont.cont.then:    ; preds = %inter_warp_reduce-true143.cont.cont.cont.cont1080
  %.val897.then.val = load float, ptr addrspace(3) %229, align 4
  br label %inter_warp_reduce-true143.cont.cont.cont.cont

inter_warp_reduce-true143.cont.cont.cont.cont:    ; preds = %inter_warp_reduce-true143.cont.cont.cont.cont1080, %inter_warp_reduce-true143.cont.cont.cont.then
  %.val897 = phi float [ %.val897.then.val, %inter_warp_reduce-true143.cont.cont.cont.then ], [ %initial_value_addr145.2, %inter_warp_reduce-true143.cont.cont.cont.cont1080 ]
  %242 = icmp ult i32 %199, 16
  %add.30.i1000 = fadd float %241, %.val897
  br i1 %242, label %inter_warp_reduce-true143.cont.cont.cont.cont.then1079, label %inter_warp_reduce-true143.cont.cont.cont.cont.cont1078

inter_warp_reduce-true143.cont.cont.cont.cont.then1079: ; preds = %inter_warp_reduce-true143.cont.cont.cont.cont
  store float %add.30.i1000, ptr addrspace(3) %229, align 4
  br label %inter_warp_reduce-true143.cont.cont.cont.cont.cont1078

inter_warp_reduce-true143.cont.cont.cont.cont.cont1078: ; preds = %inter_warp_reduce-true143.cont.cont.cont.cont, %inter_warp_reduce-true143.cont.cont.cont.cont.then1079
  %initial_value_addr145.3 = phi float [ %initial_value_addr145.2, %inter_warp_reduce-true143.cont.cont.cont.cont.then1079 ], [ %add.30.i1000, %inter_warp_reduce-true143.cont.cont.cont.cont ]
  %243 = icmp ult i32 %199, 16
  %244 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i1000, i32 1, i32 31)
  br i1 %243, label %inter_warp_reduce-true143.cont.cont.cont.cont.then, label %inter_warp_reduce-true143.cont.cont.cont.cont.cont

inter_warp_reduce-true143.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true143.cont.cont.cont.cont.cont1078
  %.val896.then.val = load float, ptr addrspace(3) %229, align 4
  br label %inter_warp_reduce-true143.cont.cont.cont.cont.cont

inter_warp_reduce-true143.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true143.cont.cont.cont.cont.cont1078, %inter_warp_reduce-true143.cont.cont.cont.cont.then
  %.val896 = phi float [ %.val896.then.val, %inter_warp_reduce-true143.cont.cont.cont.cont.then ], [ %initial_value_addr145.3, %inter_warp_reduce-true143.cont.cont.cont.cont.cont1078 ]
  %245 = icmp ult i32 %199, 16
  %add.30.i1001 = fadd float %244, %.val896
  br i1 %245, label %inter_warp_reduce-true143.cont.cont.cont.cont.cont.then, label %inter_warp_reduce-true143.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true143.cont.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true143.cont.cont.cont.cont.cont
  store float %add.30.i1001, ptr addrspace(3) %229, align 4
  br label %inter_warp_reduce-true143.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true143.cont.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true143.cont.cont.cont.cont.cont, %inter_warp_reduce-true143.cont.cont.cont.cont.cont.then
  %246 = icmp eq i32 %199, 0
  br i1 %246, label %reduction_write_output-true161, label %common.ret

reduction_write_output-true161:                   ; preds = %inter_warp_reduce-true143.cont.cont.cont.cont.cont.cont
  store float %add.30.i1001, ptr addrspace(1) %arg171508, align 128
  br label %common.ret

intra_warp_reduce_write-after260:                 ; preds = %intra_warp_reduce_write-true259, %entry.reduce-group-2-true_crit_edge
  tail call void @llvm.nvvm.barrier0()
  %247 = icmp ult i32 %.pre, 32
  br i1 %247, label %inter_warp_reduce-true261, label %common.ret

intra_warp_reduce_write-true259:                  ; preds = %entry.reduce-group-2-true_crit_edge
  store float %add.41.i1005, ptr addrspace(3) %25, align 4
  br label %intra_warp_reduce_write-after260

inter_warp_reduce-true261:                        ; preds = %intra_warp_reduce_write-after260
  %248 = zext i32 %.pre1213 to i64
  %249 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache8, i64 0, i64 0, i64 0, i64 %248
  %250 = icmp ult i32 %.pre, 16
  br i1 %250, label %inter_warp_reduce-true261.then1097, label %inter_warp_reduce-true261.cont1096

inter_warp_reduce-true261.then1097:               ; preds = %inter_warp_reduce-true261
  %partial_reduction_result265.then.val = load float, ptr addrspace(3) %249, align 4
  br label %inter_warp_reduce-true261.cont1096

inter_warp_reduce-true261.cont1096:               ; preds = %inter_warp_reduce-true261, %inter_warp_reduce-true261.then1097
  %partial_reduction_result265 = phi float [ %partial_reduction_result265.then.val, %inter_warp_reduce-true261.then1097 ], [ -0.000000e+00, %inter_warp_reduce-true261 ]
  %251 = icmp ult i32 %.pre, 16
  %252 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result265, i32 16, i32 31)
  br i1 %251, label %inter_warp_reduce-true261.then, label %inter_warp_reduce-true261.cont

inter_warp_reduce-true261.then:                   ; preds = %inter_warp_reduce-true261.cont1096
  %.val912.then.val = load float, ptr addrspace(3) %249, align 4
  br label %inter_warp_reduce-true261.cont

inter_warp_reduce-true261.cont:                   ; preds = %inter_warp_reduce-true261.cont1096, %inter_warp_reduce-true261.then
  %.val912 = phi float [ %.val912.then.val, %inter_warp_reduce-true261.then ], [ -0.000000e+00, %inter_warp_reduce-true261.cont1096 ]
  %253 = icmp ult i32 %.pre, 16
  %add.41.i1008 = fadd float %252, %.val912
  br i1 %253, label %inter_warp_reduce-true261.cont.then1095, label %inter_warp_reduce-true261.cont.cont1094

inter_warp_reduce-true261.cont.then1095:          ; preds = %inter_warp_reduce-true261.cont
  store float %add.41.i1008, ptr addrspace(3) %249, align 4
  br label %inter_warp_reduce-true261.cont.cont1094

inter_warp_reduce-true261.cont.cont1094:          ; preds = %inter_warp_reduce-true261.cont, %inter_warp_reduce-true261.cont.then1095
  %initial_value_addr263.0 = phi float [ -0.000000e+00, %inter_warp_reduce-true261.cont.then1095 ], [ %add.41.i1008, %inter_warp_reduce-true261.cont ]
  %254 = icmp ult i32 %.pre, 16
  %255 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.41.i1008, i32 8, i32 31)
  br i1 %254, label %inter_warp_reduce-true261.cont.then, label %inter_warp_reduce-true261.cont.cont

inter_warp_reduce-true261.cont.then:              ; preds = %inter_warp_reduce-true261.cont.cont1094
  %.val911.then.val = load float, ptr addrspace(3) %249, align 4
  br label %inter_warp_reduce-true261.cont.cont

inter_warp_reduce-true261.cont.cont:              ; preds = %inter_warp_reduce-true261.cont.cont1094, %inter_warp_reduce-true261.cont.then
  %.val911 = phi float [ %.val911.then.val, %inter_warp_reduce-true261.cont.then ], [ %initial_value_addr263.0, %inter_warp_reduce-true261.cont.cont1094 ]
  %256 = icmp ult i32 %.pre, 16
  %add.41.i1009 = fadd float %255, %.val911
  br i1 %256, label %inter_warp_reduce-true261.cont.cont.then1093, label %inter_warp_reduce-true261.cont.cont.cont1092

inter_warp_reduce-true261.cont.cont.then1093:     ; preds = %inter_warp_reduce-true261.cont.cont
  store float %add.41.i1009, ptr addrspace(3) %249, align 4
  br label %inter_warp_reduce-true261.cont.cont.cont1092

inter_warp_reduce-true261.cont.cont.cont1092:     ; preds = %inter_warp_reduce-true261.cont.cont, %inter_warp_reduce-true261.cont.cont.then1093
  %initial_value_addr263.1 = phi float [ %initial_value_addr263.0, %inter_warp_reduce-true261.cont.cont.then1093 ], [ %add.41.i1009, %inter_warp_reduce-true261.cont.cont ]
  %257 = icmp ult i32 %.pre, 16
  %258 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.41.i1009, i32 4, i32 31)
  br i1 %257, label %inter_warp_reduce-true261.cont.cont.then, label %inter_warp_reduce-true261.cont.cont.cont

inter_warp_reduce-true261.cont.cont.then:         ; preds = %inter_warp_reduce-true261.cont.cont.cont1092
  %.val910.then.val = load float, ptr addrspace(3) %249, align 4
  br label %inter_warp_reduce-true261.cont.cont.cont

inter_warp_reduce-true261.cont.cont.cont:         ; preds = %inter_warp_reduce-true261.cont.cont.cont1092, %inter_warp_reduce-true261.cont.cont.then
  %.val910 = phi float [ %.val910.then.val, %inter_warp_reduce-true261.cont.cont.then ], [ %initial_value_addr263.1, %inter_warp_reduce-true261.cont.cont.cont1092 ]
  %259 = icmp ult i32 %.pre, 16
  %add.41.i1010 = fadd float %258, %.val910
  br i1 %259, label %inter_warp_reduce-true261.cont.cont.cont.then1091, label %inter_warp_reduce-true261.cont.cont.cont.cont1090

inter_warp_reduce-true261.cont.cont.cont.then1091: ; preds = %inter_warp_reduce-true261.cont.cont.cont
  store float %add.41.i1010, ptr addrspace(3) %249, align 4
  br label %inter_warp_reduce-true261.cont.cont.cont.cont1090

inter_warp_reduce-true261.cont.cont.cont.cont1090: ; preds = %inter_warp_reduce-true261.cont.cont.cont, %inter_warp_reduce-true261.cont.cont.cont.then1091
  %initial_value_addr263.2 = phi float [ %initial_value_addr263.1, %inter_warp_reduce-true261.cont.cont.cont.then1091 ], [ %add.41.i1010, %inter_warp_reduce-true261.cont.cont.cont ]
  %260 = icmp ult i32 %.pre, 16
  %261 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.41.i1010, i32 2, i32 31)
  br i1 %260, label %inter_warp_reduce-true261.cont.cont.cont.then, label %inter_warp_reduce-true261.cont.cont.cont.cont

inter_warp_reduce-true261.cont.cont.cont.then:    ; preds = %inter_warp_reduce-true261.cont.cont.cont.cont1090
  %.val909.then.val = load float, ptr addrspace(3) %249, align 4
  br label %inter_warp_reduce-true261.cont.cont.cont.cont

inter_warp_reduce-true261.cont.cont.cont.cont:    ; preds = %inter_warp_reduce-true261.cont.cont.cont.cont1090, %inter_warp_reduce-true261.cont.cont.cont.then
  %.val909 = phi float [ %.val909.then.val, %inter_warp_reduce-true261.cont.cont.cont.then ], [ %initial_value_addr263.2, %inter_warp_reduce-true261.cont.cont.cont.cont1090 ]
  %262 = icmp ult i32 %.pre, 16
  %add.41.i1011 = fadd float %261, %.val909
  br i1 %262, label %inter_warp_reduce-true261.cont.cont.cont.cont.then1089, label %inter_warp_reduce-true261.cont.cont.cont.cont.cont1088

inter_warp_reduce-true261.cont.cont.cont.cont.then1089: ; preds = %inter_warp_reduce-true261.cont.cont.cont.cont
  store float %add.41.i1011, ptr addrspace(3) %249, align 4
  br label %inter_warp_reduce-true261.cont.cont.cont.cont.cont1088

inter_warp_reduce-true261.cont.cont.cont.cont.cont1088: ; preds = %inter_warp_reduce-true261.cont.cont.cont.cont, %inter_warp_reduce-true261.cont.cont.cont.cont.then1089
  %initial_value_addr263.3 = phi float [ %initial_value_addr263.2, %inter_warp_reduce-true261.cont.cont.cont.cont.then1089 ], [ %add.41.i1011, %inter_warp_reduce-true261.cont.cont.cont.cont ]
  %263 = icmp ult i32 %.pre, 16
  %264 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.41.i1011, i32 1, i32 31)
  br i1 %263, label %inter_warp_reduce-true261.cont.cont.cont.cont.then, label %inter_warp_reduce-true261.cont.cont.cont.cont.cont

inter_warp_reduce-true261.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true261.cont.cont.cont.cont.cont1088
  %.val908.then.val = load float, ptr addrspace(3) %249, align 4
  br label %inter_warp_reduce-true261.cont.cont.cont.cont.cont

inter_warp_reduce-true261.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true261.cont.cont.cont.cont.cont1088, %inter_warp_reduce-true261.cont.cont.cont.cont.then
  %.val908 = phi float [ %.val908.then.val, %inter_warp_reduce-true261.cont.cont.cont.cont.then ], [ %initial_value_addr263.3, %inter_warp_reduce-true261.cont.cont.cont.cont.cont1088 ]
  %265 = icmp ult i32 %.pre, 16
  %add.41.i1012 = fadd float %264, %.val908
  br i1 %265, label %inter_warp_reduce-true261.cont.cont.cont.cont.cont.then, label %inter_warp_reduce-true261.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true261.cont.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true261.cont.cont.cont.cont.cont
  store float %add.41.i1012, ptr addrspace(3) %249, align 4
  br label %inter_warp_reduce-true261.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true261.cont.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true261.cont.cont.cont.cont.cont, %inter_warp_reduce-true261.cont.cont.cont.cont.cont.then
  %266 = icmp eq i32 %.pre, 0
  br i1 %266, label %reduction_write_output-true279, label %common.ret

reduction_write_output-true279:                   ; preds = %inter_warp_reduce-true261.cont.cont.cont.cont.cont.cont
  store float %add.41.i1012, ptr addrspace(1) %arg181510, align 128
  br label %common.ret

intra_warp_reduce_write-after379:                 ; preds = %intra_warp_reduce_write-true378, %entry.reduce-group-3-true_crit_edge
  tail call void @llvm.nvvm.barrier0()
  %267 = icmp ult i32 %.pre1214, 32
  br i1 %267, label %inter_warp_reduce-true380, label %common.ret

intra_warp_reduce_write-true378:                  ; preds = %entry.reduce-group-3-true_crit_edge
  store float %add.50.i1016, ptr addrspace(3) %50, align 4
  br label %intra_warp_reduce_write-after379

inter_warp_reduce-true380:                        ; preds = %intra_warp_reduce_write-after379
  %268 = zext i32 %.pre1265 to i64
  %269 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache9, i64 0, i64 0, i64 0, i64 %268
  %270 = icmp ult i32 %.pre1214, 16
  br i1 %270, label %inter_warp_reduce-true380.then1107, label %inter_warp_reduce-true380.cont1106

inter_warp_reduce-true380.then1107:               ; preds = %inter_warp_reduce-true380
  %partial_reduction_result384.then.val = load float, ptr addrspace(3) %269, align 4
  br label %inter_warp_reduce-true380.cont1106

inter_warp_reduce-true380.cont1106:               ; preds = %inter_warp_reduce-true380, %inter_warp_reduce-true380.then1107
  %partial_reduction_result384 = phi float [ %partial_reduction_result384.then.val, %inter_warp_reduce-true380.then1107 ], [ -0.000000e+00, %inter_warp_reduce-true380 ]
  %271 = icmp ult i32 %.pre1214, 16
  %272 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result384, i32 16, i32 31)
  br i1 %271, label %inter_warp_reduce-true380.then, label %inter_warp_reduce-true380.cont

inter_warp_reduce-true380.then:                   ; preds = %inter_warp_reduce-true380.cont1106
  %.val924.then.val = load float, ptr addrspace(3) %269, align 4
  br label %inter_warp_reduce-true380.cont

inter_warp_reduce-true380.cont:                   ; preds = %inter_warp_reduce-true380.cont1106, %inter_warp_reduce-true380.then
  %.val924 = phi float [ %.val924.then.val, %inter_warp_reduce-true380.then ], [ -0.000000e+00, %inter_warp_reduce-true380.cont1106 ]
  %273 = icmp ult i32 %.pre1214, 16
  %add.50.i1019 = fadd float %272, %.val924
  br i1 %273, label %inter_warp_reduce-true380.cont.then1105, label %inter_warp_reduce-true380.cont.cont1104

inter_warp_reduce-true380.cont.then1105:          ; preds = %inter_warp_reduce-true380.cont
  store float %add.50.i1019, ptr addrspace(3) %269, align 4
  br label %inter_warp_reduce-true380.cont.cont1104

inter_warp_reduce-true380.cont.cont1104:          ; preds = %inter_warp_reduce-true380.cont, %inter_warp_reduce-true380.cont.then1105
  %initial_value_addr382.0 = phi float [ -0.000000e+00, %inter_warp_reduce-true380.cont.then1105 ], [ %add.50.i1019, %inter_warp_reduce-true380.cont ]
  %274 = icmp ult i32 %.pre1214, 16
  %275 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.50.i1019, i32 8, i32 31)
  br i1 %274, label %inter_warp_reduce-true380.cont.then, label %inter_warp_reduce-true380.cont.cont

inter_warp_reduce-true380.cont.then:              ; preds = %inter_warp_reduce-true380.cont.cont1104
  %.val923.then.val = load float, ptr addrspace(3) %269, align 4
  br label %inter_warp_reduce-true380.cont.cont

inter_warp_reduce-true380.cont.cont:              ; preds = %inter_warp_reduce-true380.cont.cont1104, %inter_warp_reduce-true380.cont.then
  %.val923 = phi float [ %.val923.then.val, %inter_warp_reduce-true380.cont.then ], [ %initial_value_addr382.0, %inter_warp_reduce-true380.cont.cont1104 ]
  %276 = icmp ult i32 %.pre1214, 16
  %add.50.i1020 = fadd float %275, %.val923
  br i1 %276, label %inter_warp_reduce-true380.cont.cont.then1103, label %inter_warp_reduce-true380.cont.cont.cont1102

inter_warp_reduce-true380.cont.cont.then1103:     ; preds = %inter_warp_reduce-true380.cont.cont
  store float %add.50.i1020, ptr addrspace(3) %269, align 4
  br label %inter_warp_reduce-true380.cont.cont.cont1102

inter_warp_reduce-true380.cont.cont.cont1102:     ; preds = %inter_warp_reduce-true380.cont.cont, %inter_warp_reduce-true380.cont.cont.then1103
  %initial_value_addr382.1 = phi float [ %initial_value_addr382.0, %inter_warp_reduce-true380.cont.cont.then1103 ], [ %add.50.i1020, %inter_warp_reduce-true380.cont.cont ]
  %277 = icmp ult i32 %.pre1214, 16
  %278 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.50.i1020, i32 4, i32 31)
  br i1 %277, label %inter_warp_reduce-true380.cont.cont.then, label %inter_warp_reduce-true380.cont.cont.cont

inter_warp_reduce-true380.cont.cont.then:         ; preds = %inter_warp_reduce-true380.cont.cont.cont1102
  %.val922.then.val = load float, ptr addrspace(3) %269, align 4
  br label %inter_warp_reduce-true380.cont.cont.cont

inter_warp_reduce-true380.cont.cont.cont:         ; preds = %inter_warp_reduce-true380.cont.cont.cont1102, %inter_warp_reduce-true380.cont.cont.then
  %.val922 = phi float [ %.val922.then.val, %inter_warp_reduce-true380.cont.cont.then ], [ %initial_value_addr382.1, %inter_warp_reduce-true380.cont.cont.cont1102 ]
  %279 = icmp ult i32 %.pre1214, 16
  %add.50.i1021 = fadd float %278, %.val922
  br i1 %279, label %inter_warp_reduce-true380.cont.cont.cont.then1101, label %inter_warp_reduce-true380.cont.cont.cont.cont1100

inter_warp_reduce-true380.cont.cont.cont.then1101: ; preds = %inter_warp_reduce-true380.cont.cont.cont
  store float %add.50.i1021, ptr addrspace(3) %269, align 4
  br label %inter_warp_reduce-true380.cont.cont.cont.cont1100

inter_warp_reduce-true380.cont.cont.cont.cont1100: ; preds = %inter_warp_reduce-true380.cont.cont.cont, %inter_warp_reduce-true380.cont.cont.cont.then1101
  %initial_value_addr382.2 = phi float [ %initial_value_addr382.1, %inter_warp_reduce-true380.cont.cont.cont.then1101 ], [ %add.50.i1021, %inter_warp_reduce-true380.cont.cont.cont ]
  %280 = icmp ult i32 %.pre1214, 16
  %281 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.50.i1021, i32 2, i32 31)
  br i1 %280, label %inter_warp_reduce-true380.cont.cont.cont.then, label %inter_warp_reduce-true380.cont.cont.cont.cont

inter_warp_reduce-true380.cont.cont.cont.then:    ; preds = %inter_warp_reduce-true380.cont.cont.cont.cont1100
  %.val921.then.val = load float, ptr addrspace(3) %269, align 4
  br label %inter_warp_reduce-true380.cont.cont.cont.cont

inter_warp_reduce-true380.cont.cont.cont.cont:    ; preds = %inter_warp_reduce-true380.cont.cont.cont.cont1100, %inter_warp_reduce-true380.cont.cont.cont.then
  %.val921 = phi float [ %.val921.then.val, %inter_warp_reduce-true380.cont.cont.cont.then ], [ %initial_value_addr382.2, %inter_warp_reduce-true380.cont.cont.cont.cont1100 ]
  %282 = icmp ult i32 %.pre1214, 16
  %add.50.i1022 = fadd float %281, %.val921
  br i1 %282, label %inter_warp_reduce-true380.cont.cont.cont.cont.then1099, label %inter_warp_reduce-true380.cont.cont.cont.cont.cont1098

inter_warp_reduce-true380.cont.cont.cont.cont.then1099: ; preds = %inter_warp_reduce-true380.cont.cont.cont.cont
  store float %add.50.i1022, ptr addrspace(3) %269, align 4
  br label %inter_warp_reduce-true380.cont.cont.cont.cont.cont1098

inter_warp_reduce-true380.cont.cont.cont.cont.cont1098: ; preds = %inter_warp_reduce-true380.cont.cont.cont.cont, %inter_warp_reduce-true380.cont.cont.cont.cont.then1099
  %initial_value_addr382.3 = phi float [ %initial_value_addr382.2, %inter_warp_reduce-true380.cont.cont.cont.cont.then1099 ], [ %add.50.i1022, %inter_warp_reduce-true380.cont.cont.cont.cont ]
  %283 = icmp ult i32 %.pre1214, 16
  %284 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.50.i1022, i32 1, i32 31)
  br i1 %283, label %inter_warp_reduce-true380.cont.cont.cont.cont.then, label %inter_warp_reduce-true380.cont.cont.cont.cont.cont

inter_warp_reduce-true380.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true380.cont.cont.cont.cont.cont1098
  %.val920.then.val = load float, ptr addrspace(3) %269, align 4
  br label %inter_warp_reduce-true380.cont.cont.cont.cont.cont

inter_warp_reduce-true380.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true380.cont.cont.cont.cont.cont1098, %inter_warp_reduce-true380.cont.cont.cont.cont.then
  %.val920 = phi float [ %.val920.then.val, %inter_warp_reduce-true380.cont.cont.cont.cont.then ], [ %initial_value_addr382.3, %inter_warp_reduce-true380.cont.cont.cont.cont.cont1098 ]
  %285 = icmp ult i32 %.pre1214, 16
  %add.50.i1023 = fadd float %284, %.val920
  br i1 %285, label %inter_warp_reduce-true380.cont.cont.cont.cont.cont.then, label %inter_warp_reduce-true380.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true380.cont.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true380.cont.cont.cont.cont.cont
  store float %add.50.i1023, ptr addrspace(3) %269, align 4
  br label %inter_warp_reduce-true380.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true380.cont.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true380.cont.cont.cont.cont.cont, %inter_warp_reduce-true380.cont.cont.cont.cont.cont.then
  %286 = icmp eq i32 %.pre1214, 0
  br i1 %286, label %reduction_write_output-true398, label %common.ret

reduction_write_output-true398:                   ; preds = %inter_warp_reduce-true380.cont.cont.cont.cont.cont.cont
  store float %add.50.i1023, ptr addrspace(1) %arg191512, align 128
  br label %common.ret

intra_warp_reduce_write-after498:                 ; preds = %intra_warp_reduce_write-true497, %entry.reduce-group-4-true_crit_edge
  tail call void @llvm.nvvm.barrier0()
  %287 = icmp ult i32 %.pre1266, 32
  br i1 %287, label %inter_warp_reduce-true499, label %common.ret

intra_warp_reduce_write-true497:                  ; preds = %entry.reduce-group-4-true_crit_edge
  store float %add.59.i1027, ptr addrspace(3) %75, align 4
  br label %intra_warp_reduce_write-after498

inter_warp_reduce-true499:                        ; preds = %intra_warp_reduce_write-after498
  %288 = zext i32 %.pre1317 to i64
  %289 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache10, i64 0, i64 0, i64 0, i64 %288
  %290 = icmp ult i32 %.pre1266, 16
  br i1 %290, label %inter_warp_reduce-true499.then1117, label %inter_warp_reduce-true499.cont1116

inter_warp_reduce-true499.then1117:               ; preds = %inter_warp_reduce-true499
  %partial_reduction_result503.then.val = load float, ptr addrspace(3) %289, align 4
  br label %inter_warp_reduce-true499.cont1116

inter_warp_reduce-true499.cont1116:               ; preds = %inter_warp_reduce-true499, %inter_warp_reduce-true499.then1117
  %partial_reduction_result503 = phi float [ %partial_reduction_result503.then.val, %inter_warp_reduce-true499.then1117 ], [ -0.000000e+00, %inter_warp_reduce-true499 ]
  %291 = icmp ult i32 %.pre1266, 16
  %292 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result503, i32 16, i32 31)
  br i1 %291, label %inter_warp_reduce-true499.then, label %inter_warp_reduce-true499.cont

inter_warp_reduce-true499.then:                   ; preds = %inter_warp_reduce-true499.cont1116
  %.val936.then.val = load float, ptr addrspace(3) %289, align 4
  br label %inter_warp_reduce-true499.cont

inter_warp_reduce-true499.cont:                   ; preds = %inter_warp_reduce-true499.cont1116, %inter_warp_reduce-true499.then
  %.val936 = phi float [ %.val936.then.val, %inter_warp_reduce-true499.then ], [ -0.000000e+00, %inter_warp_reduce-true499.cont1116 ]
  %293 = icmp ult i32 %.pre1266, 16
  %add.59.i1030 = fadd float %292, %.val936
  br i1 %293, label %inter_warp_reduce-true499.cont.then1115, label %inter_warp_reduce-true499.cont.cont1114

inter_warp_reduce-true499.cont.then1115:          ; preds = %inter_warp_reduce-true499.cont
  store float %add.59.i1030, ptr addrspace(3) %289, align 4
  br label %inter_warp_reduce-true499.cont.cont1114

inter_warp_reduce-true499.cont.cont1114:          ; preds = %inter_warp_reduce-true499.cont, %inter_warp_reduce-true499.cont.then1115
  %initial_value_addr501.0 = phi float [ -0.000000e+00, %inter_warp_reduce-true499.cont.then1115 ], [ %add.59.i1030, %inter_warp_reduce-true499.cont ]
  %294 = icmp ult i32 %.pre1266, 16
  %295 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.59.i1030, i32 8, i32 31)
  br i1 %294, label %inter_warp_reduce-true499.cont.then, label %inter_warp_reduce-true499.cont.cont

inter_warp_reduce-true499.cont.then:              ; preds = %inter_warp_reduce-true499.cont.cont1114
  %.val935.then.val = load float, ptr addrspace(3) %289, align 4
  br label %inter_warp_reduce-true499.cont.cont

inter_warp_reduce-true499.cont.cont:              ; preds = %inter_warp_reduce-true499.cont.cont1114, %inter_warp_reduce-true499.cont.then
  %.val935 = phi float [ %.val935.then.val, %inter_warp_reduce-true499.cont.then ], [ %initial_value_addr501.0, %inter_warp_reduce-true499.cont.cont1114 ]
  %296 = icmp ult i32 %.pre1266, 16
  %add.59.i1031 = fadd float %295, %.val935
  br i1 %296, label %inter_warp_reduce-true499.cont.cont.then1113, label %inter_warp_reduce-true499.cont.cont.cont1112

inter_warp_reduce-true499.cont.cont.then1113:     ; preds = %inter_warp_reduce-true499.cont.cont
  store float %add.59.i1031, ptr addrspace(3) %289, align 4
  br label %inter_warp_reduce-true499.cont.cont.cont1112

inter_warp_reduce-true499.cont.cont.cont1112:     ; preds = %inter_warp_reduce-true499.cont.cont, %inter_warp_reduce-true499.cont.cont.then1113
  %initial_value_addr501.1 = phi float [ %initial_value_addr501.0, %inter_warp_reduce-true499.cont.cont.then1113 ], [ %add.59.i1031, %inter_warp_reduce-true499.cont.cont ]
  %297 = icmp ult i32 %.pre1266, 16
  %298 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.59.i1031, i32 4, i32 31)
  br i1 %297, label %inter_warp_reduce-true499.cont.cont.then, label %inter_warp_reduce-true499.cont.cont.cont

inter_warp_reduce-true499.cont.cont.then:         ; preds = %inter_warp_reduce-true499.cont.cont.cont1112
  %.val934.then.val = load float, ptr addrspace(3) %289, align 4
  br label %inter_warp_reduce-true499.cont.cont.cont

inter_warp_reduce-true499.cont.cont.cont:         ; preds = %inter_warp_reduce-true499.cont.cont.cont1112, %inter_warp_reduce-true499.cont.cont.then
  %.val934 = phi float [ %.val934.then.val, %inter_warp_reduce-true499.cont.cont.then ], [ %initial_value_addr501.1, %inter_warp_reduce-true499.cont.cont.cont1112 ]
  %299 = icmp ult i32 %.pre1266, 16
  %add.59.i1032 = fadd float %298, %.val934
  br i1 %299, label %inter_warp_reduce-true499.cont.cont.cont.then1111, label %inter_warp_reduce-true499.cont.cont.cont.cont1110

inter_warp_reduce-true499.cont.cont.cont.then1111: ; preds = %inter_warp_reduce-true499.cont.cont.cont
  store float %add.59.i1032, ptr addrspace(3) %289, align 4
  br label %inter_warp_reduce-true499.cont.cont.cont.cont1110

inter_warp_reduce-true499.cont.cont.cont.cont1110: ; preds = %inter_warp_reduce-true499.cont.cont.cont, %inter_warp_reduce-true499.cont.cont.cont.then1111
  %initial_value_addr501.2 = phi float [ %initial_value_addr501.1, %inter_warp_reduce-true499.cont.cont.cont.then1111 ], [ %add.59.i1032, %inter_warp_reduce-true499.cont.cont.cont ]
  %300 = icmp ult i32 %.pre1266, 16
  %301 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.59.i1032, i32 2, i32 31)
  br i1 %300, label %inter_warp_reduce-true499.cont.cont.cont.then, label %inter_warp_reduce-true499.cont.cont.cont.cont

inter_warp_reduce-true499.cont.cont.cont.then:    ; preds = %inter_warp_reduce-true499.cont.cont.cont.cont1110
  %.val933.then.val = load float, ptr addrspace(3) %289, align 4
  br label %inter_warp_reduce-true499.cont.cont.cont.cont

inter_warp_reduce-true499.cont.cont.cont.cont:    ; preds = %inter_warp_reduce-true499.cont.cont.cont.cont1110, %inter_warp_reduce-true499.cont.cont.cont.then
  %.val933 = phi float [ %.val933.then.val, %inter_warp_reduce-true499.cont.cont.cont.then ], [ %initial_value_addr501.2, %inter_warp_reduce-true499.cont.cont.cont.cont1110 ]
  %302 = icmp ult i32 %.pre1266, 16
  %add.59.i1033 = fadd float %301, %.val933
  br i1 %302, label %inter_warp_reduce-true499.cont.cont.cont.cont.then1109, label %inter_warp_reduce-true499.cont.cont.cont.cont.cont1108

inter_warp_reduce-true499.cont.cont.cont.cont.then1109: ; preds = %inter_warp_reduce-true499.cont.cont.cont.cont
  store float %add.59.i1033, ptr addrspace(3) %289, align 4
  br label %inter_warp_reduce-true499.cont.cont.cont.cont.cont1108

inter_warp_reduce-true499.cont.cont.cont.cont.cont1108: ; preds = %inter_warp_reduce-true499.cont.cont.cont.cont, %inter_warp_reduce-true499.cont.cont.cont.cont.then1109
  %initial_value_addr501.3 = phi float [ %initial_value_addr501.2, %inter_warp_reduce-true499.cont.cont.cont.cont.then1109 ], [ %add.59.i1033, %inter_warp_reduce-true499.cont.cont.cont.cont ]
  %303 = icmp ult i32 %.pre1266, 16
  %304 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.59.i1033, i32 1, i32 31)
  br i1 %303, label %inter_warp_reduce-true499.cont.cont.cont.cont.then, label %inter_warp_reduce-true499.cont.cont.cont.cont.cont

inter_warp_reduce-true499.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true499.cont.cont.cont.cont.cont1108
  %.val932.then.val = load float, ptr addrspace(3) %289, align 4
  br label %inter_warp_reduce-true499.cont.cont.cont.cont.cont

inter_warp_reduce-true499.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true499.cont.cont.cont.cont.cont1108, %inter_warp_reduce-true499.cont.cont.cont.cont.then
  %.val932 = phi float [ %.val932.then.val, %inter_warp_reduce-true499.cont.cont.cont.cont.then ], [ %initial_value_addr501.3, %inter_warp_reduce-true499.cont.cont.cont.cont.cont1108 ]
  %305 = icmp ult i32 %.pre1266, 16
  %add.59.i1034 = fadd float %304, %.val932
  br i1 %305, label %inter_warp_reduce-true499.cont.cont.cont.cont.cont.then, label %inter_warp_reduce-true499.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true499.cont.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true499.cont.cont.cont.cont.cont
  store float %add.59.i1034, ptr addrspace(3) %289, align 4
  br label %inter_warp_reduce-true499.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true499.cont.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true499.cont.cont.cont.cont.cont, %inter_warp_reduce-true499.cont.cont.cont.cont.cont.then
  %306 = icmp eq i32 %.pre1266, 0
  br i1 %306, label %reduction_write_output-true517, label %common.ret

reduction_write_output-true517:                   ; preds = %inter_warp_reduce-true499.cont.cont.cont.cont.cont.cont
  store float %add.59.i1034, ptr addrspace(1) %arg201514, align 128
  br label %common.ret

intra_warp_reduce_write-after617:                 ; preds = %intra_warp_reduce_write-true616, %entry.reduce-group-5-true_crit_edge
  tail call void @llvm.nvvm.barrier0()
  %307 = icmp ult i32 %.pre1318, 32
  br i1 %307, label %inter_warp_reduce-true618, label %common.ret

intra_warp_reduce_write-true616:                  ; preds = %entry.reduce-group-5-true_crit_edge
  store float %add.68.i1038, ptr addrspace(3) %100, align 4
  br label %intra_warp_reduce_write-after617

inter_warp_reduce-true618:                        ; preds = %intra_warp_reduce_write-after617
  %308 = zext i32 %.pre1369 to i64
  %309 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache11, i64 0, i64 0, i64 0, i64 %308
  %310 = icmp ult i32 %.pre1318, 16
  br i1 %310, label %inter_warp_reduce-true618.then1127, label %inter_warp_reduce-true618.cont1126

inter_warp_reduce-true618.then1127:               ; preds = %inter_warp_reduce-true618
  %partial_reduction_result622.then.val = load float, ptr addrspace(3) %309, align 4
  br label %inter_warp_reduce-true618.cont1126

inter_warp_reduce-true618.cont1126:               ; preds = %inter_warp_reduce-true618, %inter_warp_reduce-true618.then1127
  %partial_reduction_result622 = phi float [ %partial_reduction_result622.then.val, %inter_warp_reduce-true618.then1127 ], [ -0.000000e+00, %inter_warp_reduce-true618 ]
  %311 = icmp ult i32 %.pre1318, 16
  %312 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result622, i32 16, i32 31)
  br i1 %311, label %inter_warp_reduce-true618.then, label %inter_warp_reduce-true618.cont

inter_warp_reduce-true618.then:                   ; preds = %inter_warp_reduce-true618.cont1126
  %.val948.then.val = load float, ptr addrspace(3) %309, align 4
  br label %inter_warp_reduce-true618.cont

inter_warp_reduce-true618.cont:                   ; preds = %inter_warp_reduce-true618.cont1126, %inter_warp_reduce-true618.then
  %.val948 = phi float [ %.val948.then.val, %inter_warp_reduce-true618.then ], [ -0.000000e+00, %inter_warp_reduce-true618.cont1126 ]
  %313 = icmp ult i32 %.pre1318, 16
  %add.68.i1041 = fadd float %312, %.val948
  br i1 %313, label %inter_warp_reduce-true618.cont.then1125, label %inter_warp_reduce-true618.cont.cont1124

inter_warp_reduce-true618.cont.then1125:          ; preds = %inter_warp_reduce-true618.cont
  store float %add.68.i1041, ptr addrspace(3) %309, align 4
  br label %inter_warp_reduce-true618.cont.cont1124

inter_warp_reduce-true618.cont.cont1124:          ; preds = %inter_warp_reduce-true618.cont, %inter_warp_reduce-true618.cont.then1125
  %initial_value_addr620.0 = phi float [ -0.000000e+00, %inter_warp_reduce-true618.cont.then1125 ], [ %add.68.i1041, %inter_warp_reduce-true618.cont ]
  %314 = icmp ult i32 %.pre1318, 16
  %315 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.68.i1041, i32 8, i32 31)
  br i1 %314, label %inter_warp_reduce-true618.cont.then, label %inter_warp_reduce-true618.cont.cont

inter_warp_reduce-true618.cont.then:              ; preds = %inter_warp_reduce-true618.cont.cont1124
  %.val947.then.val = load float, ptr addrspace(3) %309, align 4
  br label %inter_warp_reduce-true618.cont.cont

inter_warp_reduce-true618.cont.cont:              ; preds = %inter_warp_reduce-true618.cont.cont1124, %inter_warp_reduce-true618.cont.then
  %.val947 = phi float [ %.val947.then.val, %inter_warp_reduce-true618.cont.then ], [ %initial_value_addr620.0, %inter_warp_reduce-true618.cont.cont1124 ]
  %316 = icmp ult i32 %.pre1318, 16
  %add.68.i1042 = fadd float %315, %.val947
  br i1 %316, label %inter_warp_reduce-true618.cont.cont.then1123, label %inter_warp_reduce-true618.cont.cont.cont1122

inter_warp_reduce-true618.cont.cont.then1123:     ; preds = %inter_warp_reduce-true618.cont.cont
  store float %add.68.i1042, ptr addrspace(3) %309, align 4
  br label %inter_warp_reduce-true618.cont.cont.cont1122

inter_warp_reduce-true618.cont.cont.cont1122:     ; preds = %inter_warp_reduce-true618.cont.cont, %inter_warp_reduce-true618.cont.cont.then1123
  %initial_value_addr620.1 = phi float [ %initial_value_addr620.0, %inter_warp_reduce-true618.cont.cont.then1123 ], [ %add.68.i1042, %inter_warp_reduce-true618.cont.cont ]
  %317 = icmp ult i32 %.pre1318, 16
  %318 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.68.i1042, i32 4, i32 31)
  br i1 %317, label %inter_warp_reduce-true618.cont.cont.then, label %inter_warp_reduce-true618.cont.cont.cont

inter_warp_reduce-true618.cont.cont.then:         ; preds = %inter_warp_reduce-true618.cont.cont.cont1122
  %.val946.then.val = load float, ptr addrspace(3) %309, align 4
  br label %inter_warp_reduce-true618.cont.cont.cont

inter_warp_reduce-true618.cont.cont.cont:         ; preds = %inter_warp_reduce-true618.cont.cont.cont1122, %inter_warp_reduce-true618.cont.cont.then
  %.val946 = phi float [ %.val946.then.val, %inter_warp_reduce-true618.cont.cont.then ], [ %initial_value_addr620.1, %inter_warp_reduce-true618.cont.cont.cont1122 ]
  %319 = icmp ult i32 %.pre1318, 16
  %add.68.i1043 = fadd float %318, %.val946
  br i1 %319, label %inter_warp_reduce-true618.cont.cont.cont.then1121, label %inter_warp_reduce-true618.cont.cont.cont.cont1120

inter_warp_reduce-true618.cont.cont.cont.then1121: ; preds = %inter_warp_reduce-true618.cont.cont.cont
  store float %add.68.i1043, ptr addrspace(3) %309, align 4
  br label %inter_warp_reduce-true618.cont.cont.cont.cont1120

inter_warp_reduce-true618.cont.cont.cont.cont1120: ; preds = %inter_warp_reduce-true618.cont.cont.cont, %inter_warp_reduce-true618.cont.cont.cont.then1121
  %initial_value_addr620.2 = phi float [ %initial_value_addr620.1, %inter_warp_reduce-true618.cont.cont.cont.then1121 ], [ %add.68.i1043, %inter_warp_reduce-true618.cont.cont.cont ]
  %320 = icmp ult i32 %.pre1318, 16
  %321 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.68.i1043, i32 2, i32 31)
  br i1 %320, label %inter_warp_reduce-true618.cont.cont.cont.then, label %inter_warp_reduce-true618.cont.cont.cont.cont

inter_warp_reduce-true618.cont.cont.cont.then:    ; preds = %inter_warp_reduce-true618.cont.cont.cont.cont1120
  %.val945.then.val = load float, ptr addrspace(3) %309, align 4
  br label %inter_warp_reduce-true618.cont.cont.cont.cont

inter_warp_reduce-true618.cont.cont.cont.cont:    ; preds = %inter_warp_reduce-true618.cont.cont.cont.cont1120, %inter_warp_reduce-true618.cont.cont.cont.then
  %.val945 = phi float [ %.val945.then.val, %inter_warp_reduce-true618.cont.cont.cont.then ], [ %initial_value_addr620.2, %inter_warp_reduce-true618.cont.cont.cont.cont1120 ]
  %322 = icmp ult i32 %.pre1318, 16
  %add.68.i1044 = fadd float %321, %.val945
  br i1 %322, label %inter_warp_reduce-true618.cont.cont.cont.cont.then1119, label %inter_warp_reduce-true618.cont.cont.cont.cont.cont1118

inter_warp_reduce-true618.cont.cont.cont.cont.then1119: ; preds = %inter_warp_reduce-true618.cont.cont.cont.cont
  store float %add.68.i1044, ptr addrspace(3) %309, align 4
  br label %inter_warp_reduce-true618.cont.cont.cont.cont.cont1118

inter_warp_reduce-true618.cont.cont.cont.cont.cont1118: ; preds = %inter_warp_reduce-true618.cont.cont.cont.cont, %inter_warp_reduce-true618.cont.cont.cont.cont.then1119
  %initial_value_addr620.3 = phi float [ %initial_value_addr620.2, %inter_warp_reduce-true618.cont.cont.cont.cont.then1119 ], [ %add.68.i1044, %inter_warp_reduce-true618.cont.cont.cont.cont ]
  %323 = icmp ult i32 %.pre1318, 16
  %324 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.68.i1044, i32 1, i32 31)
  br i1 %323, label %inter_warp_reduce-true618.cont.cont.cont.cont.then, label %inter_warp_reduce-true618.cont.cont.cont.cont.cont

inter_warp_reduce-true618.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true618.cont.cont.cont.cont.cont1118
  %.val944.then.val = load float, ptr addrspace(3) %309, align 4
  br label %inter_warp_reduce-true618.cont.cont.cont.cont.cont

inter_warp_reduce-true618.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true618.cont.cont.cont.cont.cont1118, %inter_warp_reduce-true618.cont.cont.cont.cont.then
  %.val944 = phi float [ %.val944.then.val, %inter_warp_reduce-true618.cont.cont.cont.cont.then ], [ %initial_value_addr620.3, %inter_warp_reduce-true618.cont.cont.cont.cont.cont1118 ]
  %325 = icmp ult i32 %.pre1318, 16
  %add.68.i1045 = fadd float %324, %.val944
  br i1 %325, label %inter_warp_reduce-true618.cont.cont.cont.cont.cont.then, label %inter_warp_reduce-true618.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true618.cont.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true618.cont.cont.cont.cont.cont
  store float %add.68.i1045, ptr addrspace(3) %309, align 4
  br label %inter_warp_reduce-true618.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true618.cont.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true618.cont.cont.cont.cont.cont, %inter_warp_reduce-true618.cont.cont.cont.cont.cont.then
  %326 = icmp eq i32 %.pre1318, 0
  br i1 %326, label %reduction_write_output-true636, label %common.ret

reduction_write_output-true636:                   ; preds = %inter_warp_reduce-true618.cont.cont.cont.cont.cont.cont
  store float %add.68.i1045, ptr addrspace(1) %arg211516, align 128
  br label %common.ret

intra_warp_reduce_write-after736:                 ; preds = %intra_warp_reduce_write-true735, %entry.reduce-group-6-true_crit_edge
  tail call void @llvm.nvvm.barrier0()
  %327 = icmp ult i32 %.pre1370, 32
  br i1 %327, label %inter_warp_reduce-true737, label %common.ret

intra_warp_reduce_write-true735:                  ; preds = %entry.reduce-group-6-true_crit_edge
  store float %add.77.i1049, ptr addrspace(3) %125, align 4
  br label %intra_warp_reduce_write-after736

inter_warp_reduce-true737:                        ; preds = %intra_warp_reduce_write-after736
  %328 = zext i32 %.pre1421 to i64
  %329 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache12, i64 0, i64 0, i64 0, i64 %328
  %330 = icmp ult i32 %.pre1370, 16
  br i1 %330, label %inter_warp_reduce-true737.then1137, label %inter_warp_reduce-true737.cont1136

inter_warp_reduce-true737.then1137:               ; preds = %inter_warp_reduce-true737
  %partial_reduction_result741.then.val = load float, ptr addrspace(3) %329, align 4
  br label %inter_warp_reduce-true737.cont1136

inter_warp_reduce-true737.cont1136:               ; preds = %inter_warp_reduce-true737, %inter_warp_reduce-true737.then1137
  %partial_reduction_result741 = phi float [ %partial_reduction_result741.then.val, %inter_warp_reduce-true737.then1137 ], [ -0.000000e+00, %inter_warp_reduce-true737 ]
  %331 = icmp ult i32 %.pre1370, 16
  %332 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result741, i32 16, i32 31)
  br i1 %331, label %inter_warp_reduce-true737.then, label %inter_warp_reduce-true737.cont

inter_warp_reduce-true737.then:                   ; preds = %inter_warp_reduce-true737.cont1136
  %.val960.then.val = load float, ptr addrspace(3) %329, align 4
  br label %inter_warp_reduce-true737.cont

inter_warp_reduce-true737.cont:                   ; preds = %inter_warp_reduce-true737.cont1136, %inter_warp_reduce-true737.then
  %.val960 = phi float [ %.val960.then.val, %inter_warp_reduce-true737.then ], [ -0.000000e+00, %inter_warp_reduce-true737.cont1136 ]
  %333 = icmp ult i32 %.pre1370, 16
  %add.77.i1052 = fadd float %332, %.val960
  br i1 %333, label %inter_warp_reduce-true737.cont.then1135, label %inter_warp_reduce-true737.cont.cont1134

inter_warp_reduce-true737.cont.then1135:          ; preds = %inter_warp_reduce-true737.cont
  store float %add.77.i1052, ptr addrspace(3) %329, align 4
  br label %inter_warp_reduce-true737.cont.cont1134

inter_warp_reduce-true737.cont.cont1134:          ; preds = %inter_warp_reduce-true737.cont, %inter_warp_reduce-true737.cont.then1135
  %initial_value_addr739.0 = phi float [ -0.000000e+00, %inter_warp_reduce-true737.cont.then1135 ], [ %add.77.i1052, %inter_warp_reduce-true737.cont ]
  %334 = icmp ult i32 %.pre1370, 16
  %335 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.77.i1052, i32 8, i32 31)
  br i1 %334, label %inter_warp_reduce-true737.cont.then, label %inter_warp_reduce-true737.cont.cont

inter_warp_reduce-true737.cont.then:              ; preds = %inter_warp_reduce-true737.cont.cont1134
  %.val959.then.val = load float, ptr addrspace(3) %329, align 4
  br label %inter_warp_reduce-true737.cont.cont

inter_warp_reduce-true737.cont.cont:              ; preds = %inter_warp_reduce-true737.cont.cont1134, %inter_warp_reduce-true737.cont.then
  %.val959 = phi float [ %.val959.then.val, %inter_warp_reduce-true737.cont.then ], [ %initial_value_addr739.0, %inter_warp_reduce-true737.cont.cont1134 ]
  %336 = icmp ult i32 %.pre1370, 16
  %add.77.i1053 = fadd float %335, %.val959
  br i1 %336, label %inter_warp_reduce-true737.cont.cont.then1133, label %inter_warp_reduce-true737.cont.cont.cont1132

inter_warp_reduce-true737.cont.cont.then1133:     ; preds = %inter_warp_reduce-true737.cont.cont
  store float %add.77.i1053, ptr addrspace(3) %329, align 4
  br label %inter_warp_reduce-true737.cont.cont.cont1132

inter_warp_reduce-true737.cont.cont.cont1132:     ; preds = %inter_warp_reduce-true737.cont.cont, %inter_warp_reduce-true737.cont.cont.then1133
  %initial_value_addr739.1 = phi float [ %initial_value_addr739.0, %inter_warp_reduce-true737.cont.cont.then1133 ], [ %add.77.i1053, %inter_warp_reduce-true737.cont.cont ]
  %337 = icmp ult i32 %.pre1370, 16
  %338 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.77.i1053, i32 4, i32 31)
  br i1 %337, label %inter_warp_reduce-true737.cont.cont.then, label %inter_warp_reduce-true737.cont.cont.cont

inter_warp_reduce-true737.cont.cont.then:         ; preds = %inter_warp_reduce-true737.cont.cont.cont1132
  %.val958.then.val = load float, ptr addrspace(3) %329, align 4
  br label %inter_warp_reduce-true737.cont.cont.cont

inter_warp_reduce-true737.cont.cont.cont:         ; preds = %inter_warp_reduce-true737.cont.cont.cont1132, %inter_warp_reduce-true737.cont.cont.then
  %.val958 = phi float [ %.val958.then.val, %inter_warp_reduce-true737.cont.cont.then ], [ %initial_value_addr739.1, %inter_warp_reduce-true737.cont.cont.cont1132 ]
  %339 = icmp ult i32 %.pre1370, 16
  %add.77.i1054 = fadd float %338, %.val958
  br i1 %339, label %inter_warp_reduce-true737.cont.cont.cont.then1131, label %inter_warp_reduce-true737.cont.cont.cont.cont1130

inter_warp_reduce-true737.cont.cont.cont.then1131: ; preds = %inter_warp_reduce-true737.cont.cont.cont
  store float %add.77.i1054, ptr addrspace(3) %329, align 4
  br label %inter_warp_reduce-true737.cont.cont.cont.cont1130

inter_warp_reduce-true737.cont.cont.cont.cont1130: ; preds = %inter_warp_reduce-true737.cont.cont.cont, %inter_warp_reduce-true737.cont.cont.cont.then1131
  %initial_value_addr739.2 = phi float [ %initial_value_addr739.1, %inter_warp_reduce-true737.cont.cont.cont.then1131 ], [ %add.77.i1054, %inter_warp_reduce-true737.cont.cont.cont ]
  %340 = icmp ult i32 %.pre1370, 16
  %341 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.77.i1054, i32 2, i32 31)
  br i1 %340, label %inter_warp_reduce-true737.cont.cont.cont.then, label %inter_warp_reduce-true737.cont.cont.cont.cont

inter_warp_reduce-true737.cont.cont.cont.then:    ; preds = %inter_warp_reduce-true737.cont.cont.cont.cont1130
  %.val957.then.val = load float, ptr addrspace(3) %329, align 4
  br label %inter_warp_reduce-true737.cont.cont.cont.cont

inter_warp_reduce-true737.cont.cont.cont.cont:    ; preds = %inter_warp_reduce-true737.cont.cont.cont.cont1130, %inter_warp_reduce-true737.cont.cont.cont.then
  %.val957 = phi float [ %.val957.then.val, %inter_warp_reduce-true737.cont.cont.cont.then ], [ %initial_value_addr739.2, %inter_warp_reduce-true737.cont.cont.cont.cont1130 ]
  %342 = icmp ult i32 %.pre1370, 16
  %add.77.i1055 = fadd float %341, %.val957
  br i1 %342, label %inter_warp_reduce-true737.cont.cont.cont.cont.then1129, label %inter_warp_reduce-true737.cont.cont.cont.cont.cont1128

inter_warp_reduce-true737.cont.cont.cont.cont.then1129: ; preds = %inter_warp_reduce-true737.cont.cont.cont.cont
  store float %add.77.i1055, ptr addrspace(3) %329, align 4
  br label %inter_warp_reduce-true737.cont.cont.cont.cont.cont1128

inter_warp_reduce-true737.cont.cont.cont.cont.cont1128: ; preds = %inter_warp_reduce-true737.cont.cont.cont.cont, %inter_warp_reduce-true737.cont.cont.cont.cont.then1129
  %initial_value_addr739.3 = phi float [ %initial_value_addr739.2, %inter_warp_reduce-true737.cont.cont.cont.cont.then1129 ], [ %add.77.i1055, %inter_warp_reduce-true737.cont.cont.cont.cont ]
  %343 = icmp ult i32 %.pre1370, 16
  %344 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.77.i1055, i32 1, i32 31)
  br i1 %343, label %inter_warp_reduce-true737.cont.cont.cont.cont.then, label %inter_warp_reduce-true737.cont.cont.cont.cont.cont

inter_warp_reduce-true737.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true737.cont.cont.cont.cont.cont1128
  %.val956.then.val = load float, ptr addrspace(3) %329, align 4
  br label %inter_warp_reduce-true737.cont.cont.cont.cont.cont

inter_warp_reduce-true737.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true737.cont.cont.cont.cont.cont1128, %inter_warp_reduce-true737.cont.cont.cont.cont.then
  %.val956 = phi float [ %.val956.then.val, %inter_warp_reduce-true737.cont.cont.cont.cont.then ], [ %initial_value_addr739.3, %inter_warp_reduce-true737.cont.cont.cont.cont.cont1128 ]
  %345 = icmp ult i32 %.pre1370, 16
  %add.77.i1056 = fadd float %344, %.val956
  br i1 %345, label %inter_warp_reduce-true737.cont.cont.cont.cont.cont.then, label %inter_warp_reduce-true737.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true737.cont.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true737.cont.cont.cont.cont.cont
  store float %add.77.i1056, ptr addrspace(3) %329, align 4
  br label %inter_warp_reduce-true737.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true737.cont.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true737.cont.cont.cont.cont.cont, %inter_warp_reduce-true737.cont.cont.cont.cont.cont.then
  %346 = icmp eq i32 %.pre1370, 0
  br i1 %346, label %reduction_write_output-true755, label %common.ret

reduction_write_output-true755:                   ; preds = %inter_warp_reduce-true737.cont.cont.cont.cont.cont.cont
  store float %add.77.i1056, ptr addrspace(1) %arg221518, align 128
  br label %common.ret

intra_warp_reduce_write-after855:                 ; preds = %intra_warp_reduce_write-true854, %entry.reduce-group-7-true_crit_edge
  tail call void @llvm.nvvm.barrier0()
  %347 = icmp ult i32 %.pre1422, 32
  br i1 %347, label %inter_warp_reduce-true856, label %common.ret

intra_warp_reduce_write-true854:                  ; preds = %entry.reduce-group-7-true_crit_edge
  store float %add.86.i1060, ptr addrspace(3) %150, align 4
  br label %intra_warp_reduce_write-after855

inter_warp_reduce-true856:                        ; preds = %intra_warp_reduce_write-after855
  %348 = zext i32 %.pre1473 to i64
  %349 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache13, i64 0, i64 0, i64 0, i64 %348
  %350 = icmp ult i32 %.pre1422, 16
  br i1 %350, label %inter_warp_reduce-true856.then1147, label %inter_warp_reduce-true856.cont1146

inter_warp_reduce-true856.then1147:               ; preds = %inter_warp_reduce-true856
  %partial_reduction_result860.then.val = load float, ptr addrspace(3) %349, align 4
  br label %inter_warp_reduce-true856.cont1146

inter_warp_reduce-true856.cont1146:               ; preds = %inter_warp_reduce-true856, %inter_warp_reduce-true856.then1147
  %partial_reduction_result860 = phi float [ %partial_reduction_result860.then.val, %inter_warp_reduce-true856.then1147 ], [ -0.000000e+00, %inter_warp_reduce-true856 ]
  %351 = icmp ult i32 %.pre1422, 16
  %352 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result860, i32 16, i32 31)
  br i1 %351, label %inter_warp_reduce-true856.then, label %inter_warp_reduce-true856.cont

inter_warp_reduce-true856.then:                   ; preds = %inter_warp_reduce-true856.cont1146
  %.val972.then.val = load float, ptr addrspace(3) %349, align 4
  br label %inter_warp_reduce-true856.cont

inter_warp_reduce-true856.cont:                   ; preds = %inter_warp_reduce-true856.cont1146, %inter_warp_reduce-true856.then
  %.val972 = phi float [ %.val972.then.val, %inter_warp_reduce-true856.then ], [ -0.000000e+00, %inter_warp_reduce-true856.cont1146 ]
  %353 = icmp ult i32 %.pre1422, 16
  %add.86.i1063 = fadd float %352, %.val972
  br i1 %353, label %inter_warp_reduce-true856.cont.then1145, label %inter_warp_reduce-true856.cont.cont1144

inter_warp_reduce-true856.cont.then1145:          ; preds = %inter_warp_reduce-true856.cont
  store float %add.86.i1063, ptr addrspace(3) %349, align 4
  br label %inter_warp_reduce-true856.cont.cont1144

inter_warp_reduce-true856.cont.cont1144:          ; preds = %inter_warp_reduce-true856.cont, %inter_warp_reduce-true856.cont.then1145
  %initial_value_addr858.0 = phi float [ -0.000000e+00, %inter_warp_reduce-true856.cont.then1145 ], [ %add.86.i1063, %inter_warp_reduce-true856.cont ]
  %354 = icmp ult i32 %.pre1422, 16
  %355 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.86.i1063, i32 8, i32 31)
  br i1 %354, label %inter_warp_reduce-true856.cont.then, label %inter_warp_reduce-true856.cont.cont

inter_warp_reduce-true856.cont.then:              ; preds = %inter_warp_reduce-true856.cont.cont1144
  %.val971.then.val = load float, ptr addrspace(3) %349, align 4
  br label %inter_warp_reduce-true856.cont.cont

inter_warp_reduce-true856.cont.cont:              ; preds = %inter_warp_reduce-true856.cont.cont1144, %inter_warp_reduce-true856.cont.then
  %.val971 = phi float [ %.val971.then.val, %inter_warp_reduce-true856.cont.then ], [ %initial_value_addr858.0, %inter_warp_reduce-true856.cont.cont1144 ]
  %356 = icmp ult i32 %.pre1422, 16
  %add.86.i1064 = fadd float %355, %.val971
  br i1 %356, label %inter_warp_reduce-true856.cont.cont.then1143, label %inter_warp_reduce-true856.cont.cont.cont1142

inter_warp_reduce-true856.cont.cont.then1143:     ; preds = %inter_warp_reduce-true856.cont.cont
  store float %add.86.i1064, ptr addrspace(3) %349, align 4
  br label %inter_warp_reduce-true856.cont.cont.cont1142

inter_warp_reduce-true856.cont.cont.cont1142:     ; preds = %inter_warp_reduce-true856.cont.cont, %inter_warp_reduce-true856.cont.cont.then1143
  %initial_value_addr858.1 = phi float [ %initial_value_addr858.0, %inter_warp_reduce-true856.cont.cont.then1143 ], [ %add.86.i1064, %inter_warp_reduce-true856.cont.cont ]
  %357 = icmp ult i32 %.pre1422, 16
  %358 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.86.i1064, i32 4, i32 31)
  br i1 %357, label %inter_warp_reduce-true856.cont.cont.then, label %inter_warp_reduce-true856.cont.cont.cont

inter_warp_reduce-true856.cont.cont.then:         ; preds = %inter_warp_reduce-true856.cont.cont.cont1142
  %.val970.then.val = load float, ptr addrspace(3) %349, align 4
  br label %inter_warp_reduce-true856.cont.cont.cont

inter_warp_reduce-true856.cont.cont.cont:         ; preds = %inter_warp_reduce-true856.cont.cont.cont1142, %inter_warp_reduce-true856.cont.cont.then
  %.val970 = phi float [ %.val970.then.val, %inter_warp_reduce-true856.cont.cont.then ], [ %initial_value_addr858.1, %inter_warp_reduce-true856.cont.cont.cont1142 ]
  %359 = icmp ult i32 %.pre1422, 16
  %add.86.i1065 = fadd float %358, %.val970
  br i1 %359, label %inter_warp_reduce-true856.cont.cont.cont.then1141, label %inter_warp_reduce-true856.cont.cont.cont.cont1140

inter_warp_reduce-true856.cont.cont.cont.then1141: ; preds = %inter_warp_reduce-true856.cont.cont.cont
  store float %add.86.i1065, ptr addrspace(3) %349, align 4
  br label %inter_warp_reduce-true856.cont.cont.cont.cont1140

inter_warp_reduce-true856.cont.cont.cont.cont1140: ; preds = %inter_warp_reduce-true856.cont.cont.cont, %inter_warp_reduce-true856.cont.cont.cont.then1141
  %initial_value_addr858.2 = phi float [ %initial_value_addr858.1, %inter_warp_reduce-true856.cont.cont.cont.then1141 ], [ %add.86.i1065, %inter_warp_reduce-true856.cont.cont.cont ]
  %360 = icmp ult i32 %.pre1422, 16
  %361 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.86.i1065, i32 2, i32 31)
  br i1 %360, label %inter_warp_reduce-true856.cont.cont.cont.then, label %inter_warp_reduce-true856.cont.cont.cont.cont

inter_warp_reduce-true856.cont.cont.cont.then:    ; preds = %inter_warp_reduce-true856.cont.cont.cont.cont1140
  %.val969.then.val = load float, ptr addrspace(3) %349, align 4
  br label %inter_warp_reduce-true856.cont.cont.cont.cont

inter_warp_reduce-true856.cont.cont.cont.cont:    ; preds = %inter_warp_reduce-true856.cont.cont.cont.cont1140, %inter_warp_reduce-true856.cont.cont.cont.then
  %.val969 = phi float [ %.val969.then.val, %inter_warp_reduce-true856.cont.cont.cont.then ], [ %initial_value_addr858.2, %inter_warp_reduce-true856.cont.cont.cont.cont1140 ]
  %362 = icmp ult i32 %.pre1422, 16
  %add.86.i1066 = fadd float %361, %.val969
  br i1 %362, label %inter_warp_reduce-true856.cont.cont.cont.cont.then1139, label %inter_warp_reduce-true856.cont.cont.cont.cont.cont1138

inter_warp_reduce-true856.cont.cont.cont.cont.then1139: ; preds = %inter_warp_reduce-true856.cont.cont.cont.cont
  store float %add.86.i1066, ptr addrspace(3) %349, align 4
  br label %inter_warp_reduce-true856.cont.cont.cont.cont.cont1138

inter_warp_reduce-true856.cont.cont.cont.cont.cont1138: ; preds = %inter_warp_reduce-true856.cont.cont.cont.cont, %inter_warp_reduce-true856.cont.cont.cont.cont.then1139
  %initial_value_addr858.3 = phi float [ %initial_value_addr858.2, %inter_warp_reduce-true856.cont.cont.cont.cont.then1139 ], [ %add.86.i1066, %inter_warp_reduce-true856.cont.cont.cont.cont ]
  %363 = icmp ult i32 %.pre1422, 16
  %364 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.86.i1066, i32 1, i32 31)
  br i1 %363, label %inter_warp_reduce-true856.cont.cont.cont.cont.then, label %inter_warp_reduce-true856.cont.cont.cont.cont.cont

inter_warp_reduce-true856.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true856.cont.cont.cont.cont.cont1138
  %.val968.then.val = load float, ptr addrspace(3) %349, align 4
  br label %inter_warp_reduce-true856.cont.cont.cont.cont.cont

inter_warp_reduce-true856.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true856.cont.cont.cont.cont.cont1138, %inter_warp_reduce-true856.cont.cont.cont.cont.then
  %.val968 = phi float [ %.val968.then.val, %inter_warp_reduce-true856.cont.cont.cont.cont.then ], [ %initial_value_addr858.3, %inter_warp_reduce-true856.cont.cont.cont.cont.cont1138 ]
  %365 = icmp ult i32 %.pre1422, 16
  %add.86.i1067 = fadd float %364, %.val968
  br i1 %365, label %inter_warp_reduce-true856.cont.cont.cont.cont.cont.then, label %inter_warp_reduce-true856.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true856.cont.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true856.cont.cont.cont.cont.cont
  store float %add.86.i1067, ptr addrspace(3) %349, align 4
  br label %inter_warp_reduce-true856.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true856.cont.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true856.cont.cont.cont.cont.cont, %inter_warp_reduce-true856.cont.cont.cont.cont.cont.then
  %366 = icmp eq i32 %.pre1422, 0
  br i1 %366, label %reduction_write_output-true874, label %common.ret

reduction_write_output-true874:                   ; preds = %inter_warp_reduce-true856.cont.cont.cont.cont.cont.cont
  store float %add.86.i1067, ptr addrspace(1) %arg231520, align 128
  br label %common.ret
}

; Function Attrs: nounwind
define void @fusion_563(ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg3, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg5, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg6, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg7, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg8, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg9, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg10, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg11, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg12, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg13, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg14, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg15, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg16, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg17, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg18, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg19, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg20, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg21, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg22, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg23) local_unnamed_addr #0 {
entry:
  %arg231413 = addrspacecast ptr %arg23 to ptr addrspace(1)
  %arg221411 = addrspacecast ptr %arg22 to ptr addrspace(1)
  %arg211409 = addrspacecast ptr %arg21 to ptr addrspace(1)
  %arg201407 = addrspacecast ptr %arg20 to ptr addrspace(1)
  %arg191405 = addrspacecast ptr %arg19 to ptr addrspace(1)
  %arg181403 = addrspacecast ptr %arg18 to ptr addrspace(1)
  %arg171401 = addrspacecast ptr %arg17 to ptr addrspace(1)
  %arg161399 = addrspacecast ptr %arg16 to ptr addrspace(1)
  %arg151397 = addrspacecast ptr %arg15 to ptr addrspace(1)
  %arg141395 = addrspacecast ptr %arg14 to ptr addrspace(1)
  %arg131393 = addrspacecast ptr %arg13 to ptr addrspace(1)
  %arg121391 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg111389 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg101387 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg91385 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg81383 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg71381 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg61379 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg51377 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg41375 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg31373 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg21371 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg11369 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg01367 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !197
  switch i32 %0, label %entry.unreachabledefault [
    i32 0, label %reduce-group-0-true
    i32 1, label %reduce-group-1-true
    i32 2, label %entry.reduce-group-2-true_crit_edge
    i32 3, label %entry.reduce-group-3-true_crit_edge
    i32 4, label %entry.reduce-group-4-true_crit_edge
    i32 5, label %entry.reduce-group-5-true_crit_edge
    i32 6, label %entry.reduce-group-6-true_crit_edge
    i32 7, label %entry.reduce-group-7-true_crit_edge
  ]

entry.reduce-group-2-true_crit_edge:              ; preds = %entry
  %.pre = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !194
  %.pre1057 = shl nuw nsw i32 %.pre, 1
  %.pre1059 = zext i32 %.pre1057 to i64
  %.pre1106 = and i32 %.pre, 31
  %Arg_4.5 = getelementptr float, ptr addrspace(1) %arg41375, i64 %.pre1059
  %1 = load <2 x float>, ptr addrspace(1) %Arg_4.5, align 8, !invariant.load !195
  %Arg_4.51921959 = extractelement <2 x float> %1, i32 0
  %Arg_4.51971960 = extractelement <2 x float> %1, i32 1
  %Arg_5.6 = getelementptr float, ptr addrspace(1) %arg51377, i64 %.pre1059
  %2 = load <2 x float>, ptr addrspace(1) %Arg_5.6, align 8, !invariant.load !195
  %Arg_5.61931975 = extractelement <2 x float> %2, i32 0
  %Arg_5.61991976 = extractelement <2 x float> %2, i32 1
  %add.32 = fadd float %Arg_4.51921959, %Arg_5.61931975
  %add.32200 = fadd float %Arg_4.51971960, %Arg_5.61991976
  %add.37.i900 = fadd float %add.32, %add.32200
  %Arg_4.5.11420 = getelementptr inbounds float, ptr addrspace(1) %Arg_4.5, i64 1024
  %3 = load <2 x float>, ptr addrspace(1) %Arg_4.5.11420, align 8, !invariant.load !195
  %Arg_4.5192.11961 = extractelement <2 x float> %3, i32 0
  %Arg_4.5197.11962 = extractelement <2 x float> %3, i32 1
  %Arg_5.6.11422 = getelementptr inbounds float, ptr addrspace(1) %Arg_5.6, i64 1024
  %4 = load <2 x float>, ptr addrspace(1) %Arg_5.6.11422, align 8, !invariant.load !195
  %Arg_5.6193.11977 = extractelement <2 x float> %4, i32 0
  %Arg_5.6199.11978 = extractelement <2 x float> %4, i32 1
  %add.32.1 = fadd float %Arg_4.5192.11961, %Arg_5.6193.11977
  %add.37.i899.1 = fadd float %add.37.i900, %add.32.1
  %add.32200.1 = fadd float %Arg_4.5197.11962, %Arg_5.6199.11978
  %add.37.i900.1 = fadd float %add.37.i899.1, %add.32200.1
  %Arg_4.5.21428 = getelementptr inbounds float, ptr addrspace(1) %Arg_4.5, i64 2048
  %5 = load <2 x float>, ptr addrspace(1) %Arg_4.5.21428, align 8, !invariant.load !195
  %Arg_4.5192.21963 = extractelement <2 x float> %5, i32 0
  %Arg_4.5197.21964 = extractelement <2 x float> %5, i32 1
  %Arg_5.6.21430 = getelementptr inbounds float, ptr addrspace(1) %Arg_5.6, i64 2048
  %6 = load <2 x float>, ptr addrspace(1) %Arg_5.6.21430, align 8, !invariant.load !195
  %Arg_5.6193.21979 = extractelement <2 x float> %6, i32 0
  %Arg_5.6199.21980 = extractelement <2 x float> %6, i32 1
  %add.32.2 = fadd float %Arg_4.5192.21963, %Arg_5.6193.21979
  %add.37.i899.2 = fadd float %add.37.i900.1, %add.32.2
  %add.32200.2 = fadd float %Arg_4.5197.21964, %Arg_5.6199.21980
  %add.37.i900.2 = fadd float %add.37.i899.2, %add.32200.2
  %Arg_4.5.31436 = getelementptr inbounds float, ptr addrspace(1) %Arg_4.5, i64 3072
  %7 = load <2 x float>, ptr addrspace(1) %Arg_4.5.31436, align 8, !invariant.load !195
  %Arg_4.5192.31965 = extractelement <2 x float> %7, i32 0
  %Arg_4.5197.31966 = extractelement <2 x float> %7, i32 1
  %Arg_5.6.31438 = getelementptr inbounds float, ptr addrspace(1) %Arg_5.6, i64 3072
  %8 = load <2 x float>, ptr addrspace(1) %Arg_5.6.31438, align 8, !invariant.load !195
  %Arg_5.6193.31981 = extractelement <2 x float> %8, i32 0
  %Arg_5.6199.31982 = extractelement <2 x float> %8, i32 1
  %add.32.3 = fadd float %Arg_4.5192.31965, %Arg_5.6193.31981
  %add.37.i899.3 = fadd float %add.37.i900.2, %add.32.3
  %add.32200.3 = fadd float %Arg_4.5197.31966, %Arg_5.6199.31982
  %add.37.i900.3 = fadd float %add.37.i899.3, %add.32200.3
  %Arg_4.5.41444 = getelementptr inbounds float, ptr addrspace(1) %Arg_4.5, i64 4096
  %9 = load <2 x float>, ptr addrspace(1) %Arg_4.5.41444, align 8, !invariant.load !195
  %Arg_4.5192.41967 = extractelement <2 x float> %9, i32 0
  %Arg_4.5197.41968 = extractelement <2 x float> %9, i32 1
  %Arg_5.6.41446 = getelementptr inbounds float, ptr addrspace(1) %Arg_5.6, i64 4096
  %10 = load <2 x float>, ptr addrspace(1) %Arg_5.6.41446, align 8, !invariant.load !195
  %Arg_5.6193.41983 = extractelement <2 x float> %10, i32 0
  %Arg_5.6199.41984 = extractelement <2 x float> %10, i32 1
  %add.32.4 = fadd float %Arg_4.5192.41967, %Arg_5.6193.41983
  %add.37.i899.4 = fadd float %add.37.i900.3, %add.32.4
  %add.32200.4 = fadd float %Arg_4.5197.41968, %Arg_5.6199.41984
  %add.37.i900.4 = fadd float %add.37.i899.4, %add.32200.4
  %Arg_4.5.51452 = getelementptr inbounds float, ptr addrspace(1) %Arg_4.5, i64 5120
  %11 = load <2 x float>, ptr addrspace(1) %Arg_4.5.51452, align 8, !invariant.load !195
  %Arg_4.5192.51969 = extractelement <2 x float> %11, i32 0
  %Arg_4.5197.51970 = extractelement <2 x float> %11, i32 1
  %Arg_5.6.51454 = getelementptr inbounds float, ptr addrspace(1) %Arg_5.6, i64 5120
  %12 = load <2 x float>, ptr addrspace(1) %Arg_5.6.51454, align 8, !invariant.load !195
  %Arg_5.6193.51985 = extractelement <2 x float> %12, i32 0
  %Arg_5.6199.51986 = extractelement <2 x float> %12, i32 1
  %add.32.5 = fadd float %Arg_4.5192.51969, %Arg_5.6193.51985
  %add.37.i899.5 = fadd float %add.37.i900.4, %add.32.5
  %add.32200.5 = fadd float %Arg_4.5197.51970, %Arg_5.6199.51986
  %add.37.i900.5 = fadd float %add.37.i899.5, %add.32200.5
  %Arg_4.5.61460 = getelementptr inbounds float, ptr addrspace(1) %Arg_4.5, i64 6144
  %13 = load <2 x float>, ptr addrspace(1) %Arg_4.5.61460, align 8, !invariant.load !195
  %Arg_4.5192.61971 = extractelement <2 x float> %13, i32 0
  %Arg_4.5197.61972 = extractelement <2 x float> %13, i32 1
  %Arg_5.6.61462 = getelementptr inbounds float, ptr addrspace(1) %Arg_5.6, i64 6144
  %14 = load <2 x float>, ptr addrspace(1) %Arg_5.6.61462, align 8, !invariant.load !195
  %Arg_5.6193.61987 = extractelement <2 x float> %14, i32 0
  %Arg_5.6199.61988 = extractelement <2 x float> %14, i32 1
  %add.32.6 = fadd float %Arg_4.5192.61971, %Arg_5.6193.61987
  %add.37.i899.6 = fadd float %add.37.i900.5, %add.32.6
  %add.32200.6 = fadd float %Arg_4.5197.61972, %Arg_5.6199.61988
  %add.37.i900.6 = fadd float %add.37.i899.6, %add.32200.6
  %Arg_4.5.71468 = getelementptr inbounds float, ptr addrspace(1) %Arg_4.5, i64 7168
  %15 = load <2 x float>, ptr addrspace(1) %Arg_4.5.71468, align 8, !invariant.load !195
  %Arg_4.5192.71973 = extractelement <2 x float> %15, i32 0
  %Arg_4.5197.71974 = extractelement <2 x float> %15, i32 1
  %Arg_5.6.71470 = getelementptr inbounds float, ptr addrspace(1) %Arg_5.6, i64 7168
  %16 = load <2 x float>, ptr addrspace(1) %Arg_5.6.71470, align 8, !invariant.load !195
  %Arg_5.6193.71989 = extractelement <2 x float> %16, i32 0
  %Arg_5.6199.71990 = extractelement <2 x float> %16, i32 1
  %add.32.7 = fadd float %Arg_4.5192.71973, %Arg_5.6193.71989
  %add.37.i899.7 = fadd float %add.37.i900.6, %add.32.7
  %add.32200.7 = fadd float %Arg_4.5197.71974, %Arg_5.6199.71990
  %add.37.i900.7 = fadd float %add.37.i899.7, %add.32200.7
  %17 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.37.i900.7, i32 16, i32 31)
  %add.37.i = fadd float %add.37.i900.7, %17
  %18 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.37.i, i32 8, i32 31)
  %add.37.i895 = fadd float %add.37.i, %18
  %19 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.37.i895, i32 4, i32 31)
  %add.37.i896 = fadd float %add.37.i895, %19
  %20 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.37.i896, i32 2, i32 31)
  %add.37.i897 = fadd float %add.37.i896, %20
  %21 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.37.i897, i32 1, i32 31)
  %22 = icmp eq i32 %.pre1106, 0
  %23 = lshr i32 %.pre, 5
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache16, i64 0, i64 0, i64 0, i64 %24
  %add.37.i898 = fadd float %add.37.i897, %21
  br i1 %22, label %intra_warp_reduce_write-true242, label %intra_warp_reduce_write-after243

entry.reduce-group-3-true_crit_edge:              ; preds = %entry
  %.pre1107 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !194
  %.pre1109 = shl nuw nsw i32 %.pre1107, 1
  %.pre1111 = zext i32 %.pre1109 to i64
  %.pre1158 = and i32 %.pre1107, 31
  %Arg_6.7 = getelementptr float, ptr addrspace(1) %arg61379, i64 %.pre1111
  %26 = load <2 x float>, ptr addrspace(1) %Arg_6.7, align 8, !invariant.load !195
  %Arg_6.72931991 = extractelement <2 x float> %26, i32 0
  %Arg_6.72981992 = extractelement <2 x float> %26, i32 1
  %Arg_7.8 = getelementptr float, ptr addrspace(1) %arg71381, i64 %.pre1111
  %27 = load <2 x float>, ptr addrspace(1) %Arg_7.8, align 8, !invariant.load !195
  %Arg_7.82942007 = extractelement <2 x float> %27, i32 0
  %Arg_7.83002008 = extractelement <2 x float> %27, i32 1
  %add.39 = fadd float %Arg_6.72931991, %Arg_7.82942007
  %add.39301 = fadd float %Arg_6.72981992, %Arg_7.83002008
  %add.44.i911 = fadd float %add.39, %add.39301
  %Arg_6.7.11480 = getelementptr inbounds float, ptr addrspace(1) %Arg_6.7, i64 1024
  %28 = load <2 x float>, ptr addrspace(1) %Arg_6.7.11480, align 8, !invariant.load !195
  %Arg_6.7293.11993 = extractelement <2 x float> %28, i32 0
  %Arg_6.7298.11994 = extractelement <2 x float> %28, i32 1
  %Arg_7.8.11482 = getelementptr inbounds float, ptr addrspace(1) %Arg_7.8, i64 1024
  %29 = load <2 x float>, ptr addrspace(1) %Arg_7.8.11482, align 8, !invariant.load !195
  %Arg_7.8294.12009 = extractelement <2 x float> %29, i32 0
  %Arg_7.8300.12010 = extractelement <2 x float> %29, i32 1
  %add.39.1 = fadd float %Arg_6.7293.11993, %Arg_7.8294.12009
  %add.44.i910.1 = fadd float %add.44.i911, %add.39.1
  %add.39301.1 = fadd float %Arg_6.7298.11994, %Arg_7.8300.12010
  %add.44.i911.1 = fadd float %add.44.i910.1, %add.39301.1
  %Arg_6.7.21488 = getelementptr inbounds float, ptr addrspace(1) %Arg_6.7, i64 2048
  %30 = load <2 x float>, ptr addrspace(1) %Arg_6.7.21488, align 8, !invariant.load !195
  %Arg_6.7293.21995 = extractelement <2 x float> %30, i32 0
  %Arg_6.7298.21996 = extractelement <2 x float> %30, i32 1
  %Arg_7.8.21490 = getelementptr inbounds float, ptr addrspace(1) %Arg_7.8, i64 2048
  %31 = load <2 x float>, ptr addrspace(1) %Arg_7.8.21490, align 8, !invariant.load !195
  %Arg_7.8294.22011 = extractelement <2 x float> %31, i32 0
  %Arg_7.8300.22012 = extractelement <2 x float> %31, i32 1
  %add.39.2 = fadd float %Arg_6.7293.21995, %Arg_7.8294.22011
  %add.44.i910.2 = fadd float %add.44.i911.1, %add.39.2
  %add.39301.2 = fadd float %Arg_6.7298.21996, %Arg_7.8300.22012
  %add.44.i911.2 = fadd float %add.44.i910.2, %add.39301.2
  %Arg_6.7.31496 = getelementptr inbounds float, ptr addrspace(1) %Arg_6.7, i64 3072
  %32 = load <2 x float>, ptr addrspace(1) %Arg_6.7.31496, align 8, !invariant.load !195
  %Arg_6.7293.31997 = extractelement <2 x float> %32, i32 0
  %Arg_6.7298.31998 = extractelement <2 x float> %32, i32 1
  %Arg_7.8.31498 = getelementptr inbounds float, ptr addrspace(1) %Arg_7.8, i64 3072
  %33 = load <2 x float>, ptr addrspace(1) %Arg_7.8.31498, align 8, !invariant.load !195
  %Arg_7.8294.32013 = extractelement <2 x float> %33, i32 0
  %Arg_7.8300.32014 = extractelement <2 x float> %33, i32 1
  %add.39.3 = fadd float %Arg_6.7293.31997, %Arg_7.8294.32013
  %add.44.i910.3 = fadd float %add.44.i911.2, %add.39.3
  %add.39301.3 = fadd float %Arg_6.7298.31998, %Arg_7.8300.32014
  %add.44.i911.3 = fadd float %add.44.i910.3, %add.39301.3
  %Arg_6.7.41504 = getelementptr inbounds float, ptr addrspace(1) %Arg_6.7, i64 4096
  %34 = load <2 x float>, ptr addrspace(1) %Arg_6.7.41504, align 8, !invariant.load !195
  %Arg_6.7293.41999 = extractelement <2 x float> %34, i32 0
  %Arg_6.7298.42000 = extractelement <2 x float> %34, i32 1
  %Arg_7.8.41506 = getelementptr inbounds float, ptr addrspace(1) %Arg_7.8, i64 4096
  %35 = load <2 x float>, ptr addrspace(1) %Arg_7.8.41506, align 8, !invariant.load !195
  %Arg_7.8294.42015 = extractelement <2 x float> %35, i32 0
  %Arg_7.8300.42016 = extractelement <2 x float> %35, i32 1
  %add.39.4 = fadd float %Arg_6.7293.41999, %Arg_7.8294.42015
  %add.44.i910.4 = fadd float %add.44.i911.3, %add.39.4
  %add.39301.4 = fadd float %Arg_6.7298.42000, %Arg_7.8300.42016
  %add.44.i911.4 = fadd float %add.44.i910.4, %add.39301.4
  %Arg_6.7.51512 = getelementptr inbounds float, ptr addrspace(1) %Arg_6.7, i64 5120
  %36 = load <2 x float>, ptr addrspace(1) %Arg_6.7.51512, align 8, !invariant.load !195
  %Arg_6.7293.52001 = extractelement <2 x float> %36, i32 0
  %Arg_6.7298.52002 = extractelement <2 x float> %36, i32 1
  %Arg_7.8.51514 = getelementptr inbounds float, ptr addrspace(1) %Arg_7.8, i64 5120
  %37 = load <2 x float>, ptr addrspace(1) %Arg_7.8.51514, align 8, !invariant.load !195
  %Arg_7.8294.52017 = extractelement <2 x float> %37, i32 0
  %Arg_7.8300.52018 = extractelement <2 x float> %37, i32 1
  %add.39.5 = fadd float %Arg_6.7293.52001, %Arg_7.8294.52017
  %add.44.i910.5 = fadd float %add.44.i911.4, %add.39.5
  %add.39301.5 = fadd float %Arg_6.7298.52002, %Arg_7.8300.52018
  %add.44.i911.5 = fadd float %add.44.i910.5, %add.39301.5
  %Arg_6.7.61520 = getelementptr inbounds float, ptr addrspace(1) %Arg_6.7, i64 6144
  %38 = load <2 x float>, ptr addrspace(1) %Arg_6.7.61520, align 8, !invariant.load !195
  %Arg_6.7293.62003 = extractelement <2 x float> %38, i32 0
  %Arg_6.7298.62004 = extractelement <2 x float> %38, i32 1
  %Arg_7.8.61522 = getelementptr inbounds float, ptr addrspace(1) %Arg_7.8, i64 6144
  %39 = load <2 x float>, ptr addrspace(1) %Arg_7.8.61522, align 8, !invariant.load !195
  %Arg_7.8294.62019 = extractelement <2 x float> %39, i32 0
  %Arg_7.8300.62020 = extractelement <2 x float> %39, i32 1
  %add.39.6 = fadd float %Arg_6.7293.62003, %Arg_7.8294.62019
  %add.44.i910.6 = fadd float %add.44.i911.5, %add.39.6
  %add.39301.6 = fadd float %Arg_6.7298.62004, %Arg_7.8300.62020
  %add.44.i911.6 = fadd float %add.44.i910.6, %add.39301.6
  %Arg_6.7.71528 = getelementptr inbounds float, ptr addrspace(1) %Arg_6.7, i64 7168
  %40 = load <2 x float>, ptr addrspace(1) %Arg_6.7.71528, align 8, !invariant.load !195
  %Arg_6.7293.72005 = extractelement <2 x float> %40, i32 0
  %Arg_6.7298.72006 = extractelement <2 x float> %40, i32 1
  %Arg_7.8.71530 = getelementptr inbounds float, ptr addrspace(1) %Arg_7.8, i64 7168
  %41 = load <2 x float>, ptr addrspace(1) %Arg_7.8.71530, align 8, !invariant.load !195
  %Arg_7.8294.72021 = extractelement <2 x float> %41, i32 0
  %Arg_7.8300.72022 = extractelement <2 x float> %41, i32 1
  %add.39.7 = fadd float %Arg_6.7293.72005, %Arg_7.8294.72021
  %add.44.i910.7 = fadd float %add.44.i911.6, %add.39.7
  %add.39301.7 = fadd float %Arg_6.7298.72006, %Arg_7.8300.72022
  %add.44.i911.7 = fadd float %add.44.i910.7, %add.39301.7
  %42 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.44.i911.7, i32 16, i32 31)
  %add.44.i = fadd float %add.44.i911.7, %42
  %43 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.44.i, i32 8, i32 31)
  %add.44.i906 = fadd float %add.44.i, %43
  %44 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.44.i906, i32 4, i32 31)
  %add.44.i907 = fadd float %add.44.i906, %44
  %45 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.44.i907, i32 2, i32 31)
  %add.44.i908 = fadd float %add.44.i907, %45
  %46 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.44.i908, i32 1, i32 31)
  %47 = icmp eq i32 %.pre1158, 0
  %48 = lshr i32 %.pre1107, 5
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache17, i64 0, i64 0, i64 0, i64 %49
  %add.44.i909 = fadd float %add.44.i908, %46
  br i1 %47, label %intra_warp_reduce_write-true343, label %intra_warp_reduce_write-after344

entry.reduce-group-4-true_crit_edge:              ; preds = %entry
  %.pre1159 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !194
  %.pre1161 = shl nuw nsw i32 %.pre1159, 1
  %.pre1163 = zext i32 %.pre1161 to i64
  %.pre1210 = and i32 %.pre1159, 31
  %Arg_8.9 = getelementptr float, ptr addrspace(1) %arg81383, i64 %.pre1163
  %51 = load <2 x float>, ptr addrspace(1) %Arg_8.9, align 8, !invariant.load !195
  %Arg_8.93942023 = extractelement <2 x float> %51, i32 0
  %Arg_8.93992024 = extractelement <2 x float> %51, i32 1
  %Arg_9.10 = getelementptr float, ptr addrspace(1) %arg91385, i64 %.pre1163
  %52 = load <2 x float>, ptr addrspace(1) %Arg_9.10, align 8, !invariant.load !195
  %Arg_9.103952039 = extractelement <2 x float> %52, i32 0
  %Arg_9.104012040 = extractelement <2 x float> %52, i32 1
  %add.46 = fadd float %Arg_8.93942023, %Arg_9.103952039
  %add.46402 = fadd float %Arg_8.93992024, %Arg_9.104012040
  %add.51.i922 = fadd float %add.46, %add.46402
  %Arg_8.9.11540 = getelementptr inbounds float, ptr addrspace(1) %Arg_8.9, i64 1024
  %53 = load <2 x float>, ptr addrspace(1) %Arg_8.9.11540, align 8, !invariant.load !195
  %Arg_8.9394.12025 = extractelement <2 x float> %53, i32 0
  %Arg_8.9399.12026 = extractelement <2 x float> %53, i32 1
  %Arg_9.10.11542 = getelementptr inbounds float, ptr addrspace(1) %Arg_9.10, i64 1024
  %54 = load <2 x float>, ptr addrspace(1) %Arg_9.10.11542, align 8, !invariant.load !195
  %Arg_9.10395.12041 = extractelement <2 x float> %54, i32 0
  %Arg_9.10401.12042 = extractelement <2 x float> %54, i32 1
  %add.46.1 = fadd float %Arg_8.9394.12025, %Arg_9.10395.12041
  %add.51.i921.1 = fadd float %add.51.i922, %add.46.1
  %add.46402.1 = fadd float %Arg_8.9399.12026, %Arg_9.10401.12042
  %add.51.i922.1 = fadd float %add.51.i921.1, %add.46402.1
  %Arg_8.9.21548 = getelementptr inbounds float, ptr addrspace(1) %Arg_8.9, i64 2048
  %55 = load <2 x float>, ptr addrspace(1) %Arg_8.9.21548, align 8, !invariant.load !195
  %Arg_8.9394.22027 = extractelement <2 x float> %55, i32 0
  %Arg_8.9399.22028 = extractelement <2 x float> %55, i32 1
  %Arg_9.10.21550 = getelementptr inbounds float, ptr addrspace(1) %Arg_9.10, i64 2048
  %56 = load <2 x float>, ptr addrspace(1) %Arg_9.10.21550, align 8, !invariant.load !195
  %Arg_9.10395.22043 = extractelement <2 x float> %56, i32 0
  %Arg_9.10401.22044 = extractelement <2 x float> %56, i32 1
  %add.46.2 = fadd float %Arg_8.9394.22027, %Arg_9.10395.22043
  %add.51.i921.2 = fadd float %add.51.i922.1, %add.46.2
  %add.46402.2 = fadd float %Arg_8.9399.22028, %Arg_9.10401.22044
  %add.51.i922.2 = fadd float %add.51.i921.2, %add.46402.2
  %Arg_8.9.31556 = getelementptr inbounds float, ptr addrspace(1) %Arg_8.9, i64 3072
  %57 = load <2 x float>, ptr addrspace(1) %Arg_8.9.31556, align 8, !invariant.load !195
  %Arg_8.9394.32029 = extractelement <2 x float> %57, i32 0
  %Arg_8.9399.32030 = extractelement <2 x float> %57, i32 1
  %Arg_9.10.31558 = getelementptr inbounds float, ptr addrspace(1) %Arg_9.10, i64 3072
  %58 = load <2 x float>, ptr addrspace(1) %Arg_9.10.31558, align 8, !invariant.load !195
  %Arg_9.10395.32045 = extractelement <2 x float> %58, i32 0
  %Arg_9.10401.32046 = extractelement <2 x float> %58, i32 1
  %add.46.3 = fadd float %Arg_8.9394.32029, %Arg_9.10395.32045
  %add.51.i921.3 = fadd float %add.51.i922.2, %add.46.3
  %add.46402.3 = fadd float %Arg_8.9399.32030, %Arg_9.10401.32046
  %add.51.i922.3 = fadd float %add.51.i921.3, %add.46402.3
  %Arg_8.9.41564 = getelementptr inbounds float, ptr addrspace(1) %Arg_8.9, i64 4096
  %59 = load <2 x float>, ptr addrspace(1) %Arg_8.9.41564, align 8, !invariant.load !195
  %Arg_8.9394.42031 = extractelement <2 x float> %59, i32 0
  %Arg_8.9399.42032 = extractelement <2 x float> %59, i32 1
  %Arg_9.10.41566 = getelementptr inbounds float, ptr addrspace(1) %Arg_9.10, i64 4096
  %60 = load <2 x float>, ptr addrspace(1) %Arg_9.10.41566, align 8, !invariant.load !195
  %Arg_9.10395.42047 = extractelement <2 x float> %60, i32 0
  %Arg_9.10401.42048 = extractelement <2 x float> %60, i32 1
  %add.46.4 = fadd float %Arg_8.9394.42031, %Arg_9.10395.42047
  %add.51.i921.4 = fadd float %add.51.i922.3, %add.46.4
  %add.46402.4 = fadd float %Arg_8.9399.42032, %Arg_9.10401.42048
  %add.51.i922.4 = fadd float %add.51.i921.4, %add.46402.4
  %Arg_8.9.51572 = getelementptr inbounds float, ptr addrspace(1) %Arg_8.9, i64 5120
  %61 = load <2 x float>, ptr addrspace(1) %Arg_8.9.51572, align 8, !invariant.load !195
  %Arg_8.9394.52033 = extractelement <2 x float> %61, i32 0
  %Arg_8.9399.52034 = extractelement <2 x float> %61, i32 1
  %Arg_9.10.51574 = getelementptr inbounds float, ptr addrspace(1) %Arg_9.10, i64 5120
  %62 = load <2 x float>, ptr addrspace(1) %Arg_9.10.51574, align 8, !invariant.load !195
  %Arg_9.10395.52049 = extractelement <2 x float> %62, i32 0
  %Arg_9.10401.52050 = extractelement <2 x float> %62, i32 1
  %add.46.5 = fadd float %Arg_8.9394.52033, %Arg_9.10395.52049
  %add.51.i921.5 = fadd float %add.51.i922.4, %add.46.5
  %add.46402.5 = fadd float %Arg_8.9399.52034, %Arg_9.10401.52050
  %add.51.i922.5 = fadd float %add.51.i921.5, %add.46402.5
  %Arg_8.9.61580 = getelementptr inbounds float, ptr addrspace(1) %Arg_8.9, i64 6144
  %63 = load <2 x float>, ptr addrspace(1) %Arg_8.9.61580, align 8, !invariant.load !195
  %Arg_8.9394.62035 = extractelement <2 x float> %63, i32 0
  %Arg_8.9399.62036 = extractelement <2 x float> %63, i32 1
  %Arg_9.10.61582 = getelementptr inbounds float, ptr addrspace(1) %Arg_9.10, i64 6144
  %64 = load <2 x float>, ptr addrspace(1) %Arg_9.10.61582, align 8, !invariant.load !195
  %Arg_9.10395.62051 = extractelement <2 x float> %64, i32 0
  %Arg_9.10401.62052 = extractelement <2 x float> %64, i32 1
  %add.46.6 = fadd float %Arg_8.9394.62035, %Arg_9.10395.62051
  %add.51.i921.6 = fadd float %add.51.i922.5, %add.46.6
  %add.46402.6 = fadd float %Arg_8.9399.62036, %Arg_9.10401.62052
  %add.51.i922.6 = fadd float %add.51.i921.6, %add.46402.6
  %Arg_8.9.71588 = getelementptr inbounds float, ptr addrspace(1) %Arg_8.9, i64 7168
  %65 = load <2 x float>, ptr addrspace(1) %Arg_8.9.71588, align 8, !invariant.load !195
  %Arg_8.9394.72037 = extractelement <2 x float> %65, i32 0
  %Arg_8.9399.72038 = extractelement <2 x float> %65, i32 1
  %Arg_9.10.71590 = getelementptr inbounds float, ptr addrspace(1) %Arg_9.10, i64 7168
  %66 = load <2 x float>, ptr addrspace(1) %Arg_9.10.71590, align 8, !invariant.load !195
  %Arg_9.10395.72053 = extractelement <2 x float> %66, i32 0
  %Arg_9.10401.72054 = extractelement <2 x float> %66, i32 1
  %add.46.7 = fadd float %Arg_8.9394.72037, %Arg_9.10395.72053
  %add.51.i921.7 = fadd float %add.51.i922.6, %add.46.7
  %add.46402.7 = fadd float %Arg_8.9399.72038, %Arg_9.10401.72054
  %add.51.i922.7 = fadd float %add.51.i921.7, %add.46402.7
  %67 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.51.i922.7, i32 16, i32 31)
  %add.51.i = fadd float %add.51.i922.7, %67
  %68 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.51.i, i32 8, i32 31)
  %add.51.i917 = fadd float %add.51.i, %68
  %69 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.51.i917, i32 4, i32 31)
  %add.51.i918 = fadd float %add.51.i917, %69
  %70 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.51.i918, i32 2, i32 31)
  %add.51.i919 = fadd float %add.51.i918, %70
  %71 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.51.i919, i32 1, i32 31)
  %72 = icmp eq i32 %.pre1210, 0
  %73 = lshr i32 %.pre1159, 5
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache18, i64 0, i64 0, i64 0, i64 %74
  %add.51.i920 = fadd float %add.51.i919, %71
  br i1 %72, label %intra_warp_reduce_write-true444, label %intra_warp_reduce_write-after445

entry.reduce-group-5-true_crit_edge:              ; preds = %entry
  %.pre1211 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !194
  %.pre1213 = shl nuw nsw i32 %.pre1211, 1
  %.pre1215 = zext i32 %.pre1213 to i64
  %.pre1262 = and i32 %.pre1211, 31
  %Arg_10.11 = getelementptr float, ptr addrspace(1) %arg101387, i64 %.pre1215
  %76 = load <2 x float>, ptr addrspace(1) %Arg_10.11, align 8, !invariant.load !195
  %Arg_10.114952055 = extractelement <2 x float> %76, i32 0
  %Arg_10.115002056 = extractelement <2 x float> %76, i32 1
  %Arg_11.12 = getelementptr float, ptr addrspace(1) %arg111389, i64 %.pre1215
  %77 = load <2 x float>, ptr addrspace(1) %Arg_11.12, align 8, !invariant.load !195
  %Arg_11.124962071 = extractelement <2 x float> %77, i32 0
  %Arg_11.125022072 = extractelement <2 x float> %77, i32 1
  %add.53 = fadd float %Arg_10.114952055, %Arg_11.124962071
  %add.53503 = fadd float %Arg_10.115002056, %Arg_11.125022072
  %add.58.i933 = fadd float %add.53, %add.53503
  %Arg_10.11.11600 = getelementptr inbounds float, ptr addrspace(1) %Arg_10.11, i64 1024
  %78 = load <2 x float>, ptr addrspace(1) %Arg_10.11.11600, align 8, !invariant.load !195
  %Arg_10.11495.12057 = extractelement <2 x float> %78, i32 0
  %Arg_10.11500.12058 = extractelement <2 x float> %78, i32 1
  %Arg_11.12.11602 = getelementptr inbounds float, ptr addrspace(1) %Arg_11.12, i64 1024
  %79 = load <2 x float>, ptr addrspace(1) %Arg_11.12.11602, align 8, !invariant.load !195
  %Arg_11.12496.12073 = extractelement <2 x float> %79, i32 0
  %Arg_11.12502.12074 = extractelement <2 x float> %79, i32 1
  %add.53.1 = fadd float %Arg_10.11495.12057, %Arg_11.12496.12073
  %add.58.i932.1 = fadd float %add.58.i933, %add.53.1
  %add.53503.1 = fadd float %Arg_10.11500.12058, %Arg_11.12502.12074
  %add.58.i933.1 = fadd float %add.58.i932.1, %add.53503.1
  %Arg_10.11.21608 = getelementptr inbounds float, ptr addrspace(1) %Arg_10.11, i64 2048
  %80 = load <2 x float>, ptr addrspace(1) %Arg_10.11.21608, align 8, !invariant.load !195
  %Arg_10.11495.22059 = extractelement <2 x float> %80, i32 0
  %Arg_10.11500.22060 = extractelement <2 x float> %80, i32 1
  %Arg_11.12.21610 = getelementptr inbounds float, ptr addrspace(1) %Arg_11.12, i64 2048
  %81 = load <2 x float>, ptr addrspace(1) %Arg_11.12.21610, align 8, !invariant.load !195
  %Arg_11.12496.22075 = extractelement <2 x float> %81, i32 0
  %Arg_11.12502.22076 = extractelement <2 x float> %81, i32 1
  %add.53.2 = fadd float %Arg_10.11495.22059, %Arg_11.12496.22075
  %add.58.i932.2 = fadd float %add.58.i933.1, %add.53.2
  %add.53503.2 = fadd float %Arg_10.11500.22060, %Arg_11.12502.22076
  %add.58.i933.2 = fadd float %add.58.i932.2, %add.53503.2
  %Arg_10.11.31616 = getelementptr inbounds float, ptr addrspace(1) %Arg_10.11, i64 3072
  %82 = load <2 x float>, ptr addrspace(1) %Arg_10.11.31616, align 8, !invariant.load !195
  %Arg_10.11495.32061 = extractelement <2 x float> %82, i32 0
  %Arg_10.11500.32062 = extractelement <2 x float> %82, i32 1
  %Arg_11.12.31618 = getelementptr inbounds float, ptr addrspace(1) %Arg_11.12, i64 3072
  %83 = load <2 x float>, ptr addrspace(1) %Arg_11.12.31618, align 8, !invariant.load !195
  %Arg_11.12496.32077 = extractelement <2 x float> %83, i32 0
  %Arg_11.12502.32078 = extractelement <2 x float> %83, i32 1
  %add.53.3 = fadd float %Arg_10.11495.32061, %Arg_11.12496.32077
  %add.58.i932.3 = fadd float %add.58.i933.2, %add.53.3
  %add.53503.3 = fadd float %Arg_10.11500.32062, %Arg_11.12502.32078
  %add.58.i933.3 = fadd float %add.58.i932.3, %add.53503.3
  %Arg_10.11.41624 = getelementptr inbounds float, ptr addrspace(1) %Arg_10.11, i64 4096
  %84 = load <2 x float>, ptr addrspace(1) %Arg_10.11.41624, align 8, !invariant.load !195
  %Arg_10.11495.42063 = extractelement <2 x float> %84, i32 0
  %Arg_10.11500.42064 = extractelement <2 x float> %84, i32 1
  %Arg_11.12.41626 = getelementptr inbounds float, ptr addrspace(1) %Arg_11.12, i64 4096
  %85 = load <2 x float>, ptr addrspace(1) %Arg_11.12.41626, align 8, !invariant.load !195
  %Arg_11.12496.42079 = extractelement <2 x float> %85, i32 0
  %Arg_11.12502.42080 = extractelement <2 x float> %85, i32 1
  %add.53.4 = fadd float %Arg_10.11495.42063, %Arg_11.12496.42079
  %add.58.i932.4 = fadd float %add.58.i933.3, %add.53.4
  %add.53503.4 = fadd float %Arg_10.11500.42064, %Arg_11.12502.42080
  %add.58.i933.4 = fadd float %add.58.i932.4, %add.53503.4
  %Arg_10.11.51632 = getelementptr inbounds float, ptr addrspace(1) %Arg_10.11, i64 5120
  %86 = load <2 x float>, ptr addrspace(1) %Arg_10.11.51632, align 8, !invariant.load !195
  %Arg_10.11495.52065 = extractelement <2 x float> %86, i32 0
  %Arg_10.11500.52066 = extractelement <2 x float> %86, i32 1
  %Arg_11.12.51634 = getelementptr inbounds float, ptr addrspace(1) %Arg_11.12, i64 5120
  %87 = load <2 x float>, ptr addrspace(1) %Arg_11.12.51634, align 8, !invariant.load !195
  %Arg_11.12496.52081 = extractelement <2 x float> %87, i32 0
  %Arg_11.12502.52082 = extractelement <2 x float> %87, i32 1
  %add.53.5 = fadd float %Arg_10.11495.52065, %Arg_11.12496.52081
  %add.58.i932.5 = fadd float %add.58.i933.4, %add.53.5
  %add.53503.5 = fadd float %Arg_10.11500.52066, %Arg_11.12502.52082
  %add.58.i933.5 = fadd float %add.58.i932.5, %add.53503.5
  %Arg_10.11.61640 = getelementptr inbounds float, ptr addrspace(1) %Arg_10.11, i64 6144
  %88 = load <2 x float>, ptr addrspace(1) %Arg_10.11.61640, align 8, !invariant.load !195
  %Arg_10.11495.62067 = extractelement <2 x float> %88, i32 0
  %Arg_10.11500.62068 = extractelement <2 x float> %88, i32 1
  %Arg_11.12.61642 = getelementptr inbounds float, ptr addrspace(1) %Arg_11.12, i64 6144
  %89 = load <2 x float>, ptr addrspace(1) %Arg_11.12.61642, align 8, !invariant.load !195
  %Arg_11.12496.62083 = extractelement <2 x float> %89, i32 0
  %Arg_11.12502.62084 = extractelement <2 x float> %89, i32 1
  %add.53.6 = fadd float %Arg_10.11495.62067, %Arg_11.12496.62083
  %add.58.i932.6 = fadd float %add.58.i933.5, %add.53.6
  %add.53503.6 = fadd float %Arg_10.11500.62068, %Arg_11.12502.62084
  %add.58.i933.6 = fadd float %add.58.i932.6, %add.53503.6
  %Arg_10.11.71648 = getelementptr inbounds float, ptr addrspace(1) %Arg_10.11, i64 7168
  %90 = load <2 x float>, ptr addrspace(1) %Arg_10.11.71648, align 8, !invariant.load !195
  %Arg_10.11495.72069 = extractelement <2 x float> %90, i32 0
  %Arg_10.11500.72070 = extractelement <2 x float> %90, i32 1
  %Arg_11.12.71650 = getelementptr inbounds float, ptr addrspace(1) %Arg_11.12, i64 7168
  %91 = load <2 x float>, ptr addrspace(1) %Arg_11.12.71650, align 8, !invariant.load !195
  %Arg_11.12496.72085 = extractelement <2 x float> %91, i32 0
  %Arg_11.12502.72086 = extractelement <2 x float> %91, i32 1
  %add.53.7 = fadd float %Arg_10.11495.72069, %Arg_11.12496.72085
  %add.58.i932.7 = fadd float %add.58.i933.6, %add.53.7
  %add.53503.7 = fadd float %Arg_10.11500.72070, %Arg_11.12502.72086
  %add.58.i933.7 = fadd float %add.58.i932.7, %add.53503.7
  %92 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.58.i933.7, i32 16, i32 31)
  %add.58.i = fadd float %add.58.i933.7, %92
  %93 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.58.i, i32 8, i32 31)
  %add.58.i928 = fadd float %add.58.i, %93
  %94 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.58.i928, i32 4, i32 31)
  %add.58.i929 = fadd float %add.58.i928, %94
  %95 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.58.i929, i32 2, i32 31)
  %add.58.i930 = fadd float %add.58.i929, %95
  %96 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.58.i930, i32 1, i32 31)
  %97 = icmp eq i32 %.pre1262, 0
  %98 = lshr i32 %.pre1211, 5
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache19, i64 0, i64 0, i64 0, i64 %99
  %add.58.i931 = fadd float %add.58.i930, %96
  br i1 %97, label %intra_warp_reduce_write-true545, label %intra_warp_reduce_write-after546

entry.reduce-group-6-true_crit_edge:              ; preds = %entry
  %.pre1263 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !194
  %.pre1265 = shl nuw nsw i32 %.pre1263, 1
  %.pre1267 = zext i32 %.pre1265 to i64
  %.pre1314 = and i32 %.pre1263, 31
  %Arg_12.13 = getelementptr float, ptr addrspace(1) %arg121391, i64 %.pre1267
  %101 = load <2 x float>, ptr addrspace(1) %Arg_12.13, align 8, !invariant.load !195
  %Arg_12.135962087 = extractelement <2 x float> %101, i32 0
  %Arg_12.136012088 = extractelement <2 x float> %101, i32 1
  %Arg_13.14 = getelementptr float, ptr addrspace(1) %arg131393, i64 %.pre1267
  %102 = load <2 x float>, ptr addrspace(1) %Arg_13.14, align 8, !invariant.load !195
  %Arg_13.145972103 = extractelement <2 x float> %102, i32 0
  %Arg_13.146032104 = extractelement <2 x float> %102, i32 1
  %add.60 = fadd float %Arg_12.135962087, %Arg_13.145972103
  %add.60604 = fadd float %Arg_12.136012088, %Arg_13.146032104
  %add.65.i944 = fadd float %add.60, %add.60604
  %Arg_12.13.11660 = getelementptr inbounds float, ptr addrspace(1) %Arg_12.13, i64 1024
  %103 = load <2 x float>, ptr addrspace(1) %Arg_12.13.11660, align 8, !invariant.load !195
  %Arg_12.13596.12089 = extractelement <2 x float> %103, i32 0
  %Arg_12.13601.12090 = extractelement <2 x float> %103, i32 1
  %Arg_13.14.11662 = getelementptr inbounds float, ptr addrspace(1) %Arg_13.14, i64 1024
  %104 = load <2 x float>, ptr addrspace(1) %Arg_13.14.11662, align 8, !invariant.load !195
  %Arg_13.14597.12105 = extractelement <2 x float> %104, i32 0
  %Arg_13.14603.12106 = extractelement <2 x float> %104, i32 1
  %add.60.1 = fadd float %Arg_12.13596.12089, %Arg_13.14597.12105
  %add.65.i943.1 = fadd float %add.65.i944, %add.60.1
  %add.60604.1 = fadd float %Arg_12.13601.12090, %Arg_13.14603.12106
  %add.65.i944.1 = fadd float %add.65.i943.1, %add.60604.1
  %Arg_12.13.21668 = getelementptr inbounds float, ptr addrspace(1) %Arg_12.13, i64 2048
  %105 = load <2 x float>, ptr addrspace(1) %Arg_12.13.21668, align 8, !invariant.load !195
  %Arg_12.13596.22091 = extractelement <2 x float> %105, i32 0
  %Arg_12.13601.22092 = extractelement <2 x float> %105, i32 1
  %Arg_13.14.21670 = getelementptr inbounds float, ptr addrspace(1) %Arg_13.14, i64 2048
  %106 = load <2 x float>, ptr addrspace(1) %Arg_13.14.21670, align 8, !invariant.load !195
  %Arg_13.14597.22107 = extractelement <2 x float> %106, i32 0
  %Arg_13.14603.22108 = extractelement <2 x float> %106, i32 1
  %add.60.2 = fadd float %Arg_12.13596.22091, %Arg_13.14597.22107
  %add.65.i943.2 = fadd float %add.65.i944.1, %add.60.2
  %add.60604.2 = fadd float %Arg_12.13601.22092, %Arg_13.14603.22108
  %add.65.i944.2 = fadd float %add.65.i943.2, %add.60604.2
  %Arg_12.13.31676 = getelementptr inbounds float, ptr addrspace(1) %Arg_12.13, i64 3072
  %107 = load <2 x float>, ptr addrspace(1) %Arg_12.13.31676, align 8, !invariant.load !195
  %Arg_12.13596.32093 = extractelement <2 x float> %107, i32 0
  %Arg_12.13601.32094 = extractelement <2 x float> %107, i32 1
  %Arg_13.14.31678 = getelementptr inbounds float, ptr addrspace(1) %Arg_13.14, i64 3072
  %108 = load <2 x float>, ptr addrspace(1) %Arg_13.14.31678, align 8, !invariant.load !195
  %Arg_13.14597.32109 = extractelement <2 x float> %108, i32 0
  %Arg_13.14603.32110 = extractelement <2 x float> %108, i32 1
  %add.60.3 = fadd float %Arg_12.13596.32093, %Arg_13.14597.32109
  %add.65.i943.3 = fadd float %add.65.i944.2, %add.60.3
  %add.60604.3 = fadd float %Arg_12.13601.32094, %Arg_13.14603.32110
  %add.65.i944.3 = fadd float %add.65.i943.3, %add.60604.3
  %Arg_12.13.41684 = getelementptr inbounds float, ptr addrspace(1) %Arg_12.13, i64 4096
  %109 = load <2 x float>, ptr addrspace(1) %Arg_12.13.41684, align 8, !invariant.load !195
  %Arg_12.13596.42095 = extractelement <2 x float> %109, i32 0
  %Arg_12.13601.42096 = extractelement <2 x float> %109, i32 1
  %Arg_13.14.41686 = getelementptr inbounds float, ptr addrspace(1) %Arg_13.14, i64 4096
  %110 = load <2 x float>, ptr addrspace(1) %Arg_13.14.41686, align 8, !invariant.load !195
  %Arg_13.14597.42111 = extractelement <2 x float> %110, i32 0
  %Arg_13.14603.42112 = extractelement <2 x float> %110, i32 1
  %add.60.4 = fadd float %Arg_12.13596.42095, %Arg_13.14597.42111
  %add.65.i943.4 = fadd float %add.65.i944.3, %add.60.4
  %add.60604.4 = fadd float %Arg_12.13601.42096, %Arg_13.14603.42112
  %add.65.i944.4 = fadd float %add.65.i943.4, %add.60604.4
  %Arg_12.13.51692 = getelementptr inbounds float, ptr addrspace(1) %Arg_12.13, i64 5120
  %111 = load <2 x float>, ptr addrspace(1) %Arg_12.13.51692, align 8, !invariant.load !195
  %Arg_12.13596.52097 = extractelement <2 x float> %111, i32 0
  %Arg_12.13601.52098 = extractelement <2 x float> %111, i32 1
  %Arg_13.14.51694 = getelementptr inbounds float, ptr addrspace(1) %Arg_13.14, i64 5120
  %112 = load <2 x float>, ptr addrspace(1) %Arg_13.14.51694, align 8, !invariant.load !195
  %Arg_13.14597.52113 = extractelement <2 x float> %112, i32 0
  %Arg_13.14603.52114 = extractelement <2 x float> %112, i32 1
  %add.60.5 = fadd float %Arg_12.13596.52097, %Arg_13.14597.52113
  %add.65.i943.5 = fadd float %add.65.i944.4, %add.60.5
  %add.60604.5 = fadd float %Arg_12.13601.52098, %Arg_13.14603.52114
  %add.65.i944.5 = fadd float %add.65.i943.5, %add.60604.5
  %Arg_12.13.61700 = getelementptr inbounds float, ptr addrspace(1) %Arg_12.13, i64 6144
  %113 = load <2 x float>, ptr addrspace(1) %Arg_12.13.61700, align 8, !invariant.load !195
  %Arg_12.13596.62099 = extractelement <2 x float> %113, i32 0
  %Arg_12.13601.62100 = extractelement <2 x float> %113, i32 1
  %Arg_13.14.61702 = getelementptr inbounds float, ptr addrspace(1) %Arg_13.14, i64 6144
  %114 = load <2 x float>, ptr addrspace(1) %Arg_13.14.61702, align 8, !invariant.load !195
  %Arg_13.14597.62115 = extractelement <2 x float> %114, i32 0
  %Arg_13.14603.62116 = extractelement <2 x float> %114, i32 1
  %add.60.6 = fadd float %Arg_12.13596.62099, %Arg_13.14597.62115
  %add.65.i943.6 = fadd float %add.65.i944.5, %add.60.6
  %add.60604.6 = fadd float %Arg_12.13601.62100, %Arg_13.14603.62116
  %add.65.i944.6 = fadd float %add.65.i943.6, %add.60604.6
  %Arg_12.13.71708 = getelementptr inbounds float, ptr addrspace(1) %Arg_12.13, i64 7168
  %115 = load <2 x float>, ptr addrspace(1) %Arg_12.13.71708, align 8, !invariant.load !195
  %Arg_12.13596.72101 = extractelement <2 x float> %115, i32 0
  %Arg_12.13601.72102 = extractelement <2 x float> %115, i32 1
  %Arg_13.14.71710 = getelementptr inbounds float, ptr addrspace(1) %Arg_13.14, i64 7168
  %116 = load <2 x float>, ptr addrspace(1) %Arg_13.14.71710, align 8, !invariant.load !195
  %Arg_13.14597.72117 = extractelement <2 x float> %116, i32 0
  %Arg_13.14603.72118 = extractelement <2 x float> %116, i32 1
  %add.60.7 = fadd float %Arg_12.13596.72101, %Arg_13.14597.72117
  %add.65.i943.7 = fadd float %add.65.i944.6, %add.60.7
  %add.60604.7 = fadd float %Arg_12.13601.72102, %Arg_13.14603.72118
  %add.65.i944.7 = fadd float %add.65.i943.7, %add.60604.7
  %117 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.65.i944.7, i32 16, i32 31)
  %add.65.i = fadd float %add.65.i944.7, %117
  %118 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.65.i, i32 8, i32 31)
  %add.65.i939 = fadd float %add.65.i, %118
  %119 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.65.i939, i32 4, i32 31)
  %add.65.i940 = fadd float %add.65.i939, %119
  %120 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.65.i940, i32 2, i32 31)
  %add.65.i941 = fadd float %add.65.i940, %120
  %121 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.65.i941, i32 1, i32 31)
  %122 = icmp eq i32 %.pre1314, 0
  %123 = lshr i32 %.pre1263, 5
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache20, i64 0, i64 0, i64 0, i64 %124
  %add.65.i942 = fadd float %add.65.i941, %121
  br i1 %122, label %intra_warp_reduce_write-true646, label %intra_warp_reduce_write-after647

entry.reduce-group-7-true_crit_edge:              ; preds = %entry
  %.pre1315 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !194
  %.pre1317 = shl nuw nsw i32 %.pre1315, 1
  %.pre1319 = zext i32 %.pre1317 to i64
  %.pre1366 = and i32 %.pre1315, 31
  %Arg_14.15 = getelementptr float, ptr addrspace(1) %arg141395, i64 %.pre1319
  %126 = load <2 x float>, ptr addrspace(1) %Arg_14.15, align 8, !invariant.load !195
  %Arg_14.156972119 = extractelement <2 x float> %126, i32 0
  %Arg_14.157022120 = extractelement <2 x float> %126, i32 1
  %Arg_15.16 = getelementptr float, ptr addrspace(1) %arg151397, i64 %.pre1319
  %127 = load <2 x float>, ptr addrspace(1) %Arg_15.16, align 8, !invariant.load !195
  %Arg_15.166982135 = extractelement <2 x float> %127, i32 0
  %Arg_15.167042136 = extractelement <2 x float> %127, i32 1
  %add.67 = fadd float %Arg_14.156972119, %Arg_15.166982135
  %add.67705 = fadd float %Arg_14.157022120, %Arg_15.167042136
  %add.72.i955 = fadd float %add.67, %add.67705
  %Arg_14.15.11720 = getelementptr inbounds float, ptr addrspace(1) %Arg_14.15, i64 1024
  %128 = load <2 x float>, ptr addrspace(1) %Arg_14.15.11720, align 8, !invariant.load !195
  %Arg_14.15697.12121 = extractelement <2 x float> %128, i32 0
  %Arg_14.15702.12122 = extractelement <2 x float> %128, i32 1
  %Arg_15.16.11722 = getelementptr inbounds float, ptr addrspace(1) %Arg_15.16, i64 1024
  %129 = load <2 x float>, ptr addrspace(1) %Arg_15.16.11722, align 8, !invariant.load !195
  %Arg_15.16698.12137 = extractelement <2 x float> %129, i32 0
  %Arg_15.16704.12138 = extractelement <2 x float> %129, i32 1
  %add.67.1 = fadd float %Arg_14.15697.12121, %Arg_15.16698.12137
  %add.72.i954.1 = fadd float %add.72.i955, %add.67.1
  %add.67705.1 = fadd float %Arg_14.15702.12122, %Arg_15.16704.12138
  %add.72.i955.1 = fadd float %add.72.i954.1, %add.67705.1
  %Arg_14.15.21728 = getelementptr inbounds float, ptr addrspace(1) %Arg_14.15, i64 2048
  %130 = load <2 x float>, ptr addrspace(1) %Arg_14.15.21728, align 8, !invariant.load !195
  %Arg_14.15697.22123 = extractelement <2 x float> %130, i32 0
  %Arg_14.15702.22124 = extractelement <2 x float> %130, i32 1
  %Arg_15.16.21730 = getelementptr inbounds float, ptr addrspace(1) %Arg_15.16, i64 2048
  %131 = load <2 x float>, ptr addrspace(1) %Arg_15.16.21730, align 8, !invariant.load !195
  %Arg_15.16698.22139 = extractelement <2 x float> %131, i32 0
  %Arg_15.16704.22140 = extractelement <2 x float> %131, i32 1
  %add.67.2 = fadd float %Arg_14.15697.22123, %Arg_15.16698.22139
  %add.72.i954.2 = fadd float %add.72.i955.1, %add.67.2
  %add.67705.2 = fadd float %Arg_14.15702.22124, %Arg_15.16704.22140
  %add.72.i955.2 = fadd float %add.72.i954.2, %add.67705.2
  %Arg_14.15.31736 = getelementptr inbounds float, ptr addrspace(1) %Arg_14.15, i64 3072
  %132 = load <2 x float>, ptr addrspace(1) %Arg_14.15.31736, align 8, !invariant.load !195
  %Arg_14.15697.32125 = extractelement <2 x float> %132, i32 0
  %Arg_14.15702.32126 = extractelement <2 x float> %132, i32 1
  %Arg_15.16.31738 = getelementptr inbounds float, ptr addrspace(1) %Arg_15.16, i64 3072
  %133 = load <2 x float>, ptr addrspace(1) %Arg_15.16.31738, align 8, !invariant.load !195
  %Arg_15.16698.32141 = extractelement <2 x float> %133, i32 0
  %Arg_15.16704.32142 = extractelement <2 x float> %133, i32 1
  %add.67.3 = fadd float %Arg_14.15697.32125, %Arg_15.16698.32141
  %add.72.i954.3 = fadd float %add.72.i955.2, %add.67.3
  %add.67705.3 = fadd float %Arg_14.15702.32126, %Arg_15.16704.32142
  %add.72.i955.3 = fadd float %add.72.i954.3, %add.67705.3
  %Arg_14.15.41744 = getelementptr inbounds float, ptr addrspace(1) %Arg_14.15, i64 4096
  %134 = load <2 x float>, ptr addrspace(1) %Arg_14.15.41744, align 8, !invariant.load !195
  %Arg_14.15697.42127 = extractelement <2 x float> %134, i32 0
  %Arg_14.15702.42128 = extractelement <2 x float> %134, i32 1
  %Arg_15.16.41746 = getelementptr inbounds float, ptr addrspace(1) %Arg_15.16, i64 4096
  %135 = load <2 x float>, ptr addrspace(1) %Arg_15.16.41746, align 8, !invariant.load !195
  %Arg_15.16698.42143 = extractelement <2 x float> %135, i32 0
  %Arg_15.16704.42144 = extractelement <2 x float> %135, i32 1
  %add.67.4 = fadd float %Arg_14.15697.42127, %Arg_15.16698.42143
  %add.72.i954.4 = fadd float %add.72.i955.3, %add.67.4
  %add.67705.4 = fadd float %Arg_14.15702.42128, %Arg_15.16704.42144
  %add.72.i955.4 = fadd float %add.72.i954.4, %add.67705.4
  %Arg_14.15.51752 = getelementptr inbounds float, ptr addrspace(1) %Arg_14.15, i64 5120
  %136 = load <2 x float>, ptr addrspace(1) %Arg_14.15.51752, align 8, !invariant.load !195
  %Arg_14.15697.52129 = extractelement <2 x float> %136, i32 0
  %Arg_14.15702.52130 = extractelement <2 x float> %136, i32 1
  %Arg_15.16.51754 = getelementptr inbounds float, ptr addrspace(1) %Arg_15.16, i64 5120
  %137 = load <2 x float>, ptr addrspace(1) %Arg_15.16.51754, align 8, !invariant.load !195
  %Arg_15.16698.52145 = extractelement <2 x float> %137, i32 0
  %Arg_15.16704.52146 = extractelement <2 x float> %137, i32 1
  %add.67.5 = fadd float %Arg_14.15697.52129, %Arg_15.16698.52145
  %add.72.i954.5 = fadd float %add.72.i955.4, %add.67.5
  %add.67705.5 = fadd float %Arg_14.15702.52130, %Arg_15.16704.52146
  %add.72.i955.5 = fadd float %add.72.i954.5, %add.67705.5
  %Arg_14.15.61760 = getelementptr inbounds float, ptr addrspace(1) %Arg_14.15, i64 6144
  %138 = load <2 x float>, ptr addrspace(1) %Arg_14.15.61760, align 8, !invariant.load !195
  %Arg_14.15697.62131 = extractelement <2 x float> %138, i32 0
  %Arg_14.15702.62132 = extractelement <2 x float> %138, i32 1
  %Arg_15.16.61762 = getelementptr inbounds float, ptr addrspace(1) %Arg_15.16, i64 6144
  %139 = load <2 x float>, ptr addrspace(1) %Arg_15.16.61762, align 8, !invariant.load !195
  %Arg_15.16698.62147 = extractelement <2 x float> %139, i32 0
  %Arg_15.16704.62148 = extractelement <2 x float> %139, i32 1
  %add.67.6 = fadd float %Arg_14.15697.62131, %Arg_15.16698.62147
  %add.72.i954.6 = fadd float %add.72.i955.5, %add.67.6
  %add.67705.6 = fadd float %Arg_14.15702.62132, %Arg_15.16704.62148
  %add.72.i955.6 = fadd float %add.72.i954.6, %add.67705.6
  %Arg_14.15.71768 = getelementptr inbounds float, ptr addrspace(1) %Arg_14.15, i64 7168
  %140 = load <2 x float>, ptr addrspace(1) %Arg_14.15.71768, align 8, !invariant.load !195
  %Arg_14.15697.72133 = extractelement <2 x float> %140, i32 0
  %Arg_14.15702.72134 = extractelement <2 x float> %140, i32 1
  %Arg_15.16.71770 = getelementptr inbounds float, ptr addrspace(1) %Arg_15.16, i64 7168
  %141 = load <2 x float>, ptr addrspace(1) %Arg_15.16.71770, align 8, !invariant.load !195
  %Arg_15.16698.72149 = extractelement <2 x float> %141, i32 0
  %Arg_15.16704.72150 = extractelement <2 x float> %141, i32 1
  %add.67.7 = fadd float %Arg_14.15697.72133, %Arg_15.16698.72149
  %add.72.i954.7 = fadd float %add.72.i955.6, %add.67.7
  %add.67705.7 = fadd float %Arg_14.15702.72134, %Arg_15.16704.72150
  %add.72.i955.7 = fadd float %add.72.i954.7, %add.67705.7
  %142 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.72.i955.7, i32 16, i32 31)
  %add.72.i = fadd float %add.72.i955.7, %142
  %143 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.72.i, i32 8, i32 31)
  %add.72.i950 = fadd float %add.72.i, %143
  %144 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.72.i950, i32 4, i32 31)
  %add.72.i951 = fadd float %add.72.i950, %144
  %145 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.72.i951, i32 2, i32 31)
  %add.72.i952 = fadd float %add.72.i951, %145
  %146 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.72.i952, i32 1, i32 31)
  %147 = icmp eq i32 %.pre1366, 0
  %148 = lshr i32 %.pre1315, 5
  %149 = zext i32 %148 to i64
  %150 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache21, i64 0, i64 0, i64 0, i64 %149
  %add.72.i953 = fadd float %add.72.i952, %146
  br i1 %147, label %intra_warp_reduce_write-true747, label %intra_warp_reduce_write-after748

entry.unreachabledefault:                         ; preds = %entry
  unreachable

common.ret:                                       ; preds = %intra_warp_reduce_write-after647, %reduction_write_output-true666, %inter_warp_reduce-true648.cont.cont.cont.cont.cont.cont, %intra_warp_reduce_write-after546, %reduction_write_output-true565, %inter_warp_reduce-true547.cont.cont.cont.cont.cont.cont, %intra_warp_reduce_write-after445, %reduction_write_output-true464, %inter_warp_reduce-true446.cont.cont.cont.cont.cont.cont, %intra_warp_reduce_write-after344, %reduction_write_output-true363, %inter_warp_reduce-true345.cont.cont.cont.cont.cont.cont, %intra_warp_reduce_write-after243, %reduction_write_output-true262, %inter_warp_reduce-true244.cont.cont.cont.cont.cont.cont, %intra_warp_reduce_write-after142, %reduction_write_output-true161, %inter_warp_reduce-true143.cont.cont.cont.cont.cont.cont, %intra_warp_reduce_write-after, %reduction_write_output-true, %inter_warp_reduce-true.cont.cont.cont.cont.cont.cont, %inter_warp_reduce-true749.cont.cont.cont.cont.cont.cont, %reduction_write_output-true767, %intra_warp_reduce_write-after748
  ret void

reduce-group-0-true:                              ; preds = %entry
  %151 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !194
  %152 = shl nuw nsw i32 %151, 1
  %153 = zext i32 %152 to i64
  %Arg_0.1 = getelementptr float, ptr addrspace(1) %arg01367, i64 %153
  %154 = load <2 x float>, ptr addrspace(1) %Arg_0.1, align 8, !invariant.load !195
  %Arg_0.131895 = extractelement <2 x float> %154, i32 0
  %Arg_0.171896 = extractelement <2 x float> %154, i32 1
  %Arg_1.2 = getelementptr float, ptr addrspace(1) %arg11369, i64 %153
  %155 = load <2 x float>, ptr addrspace(1) %Arg_1.2, align 8, !invariant.load !195
  %Arg_1.241911 = extractelement <2 x float> %155, i32 0
  %Arg_1.291912 = extractelement <2 x float> %155, i32 1
  %add.17 = fadd float %Arg_0.131895, %Arg_1.241911
  %add.1710 = fadd float %Arg_0.171896, %Arg_1.291912
  %add.23.i878 = fadd float %add.17, %add.1710
  %Arg_0.1.11780 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 1024
  %156 = load <2 x float>, ptr addrspace(1) %Arg_0.1.11780, align 8, !invariant.load !195
  %Arg_0.13.11897 = extractelement <2 x float> %156, i32 0
  %Arg_0.17.11898 = extractelement <2 x float> %156, i32 1
  %Arg_1.2.11782 = getelementptr inbounds float, ptr addrspace(1) %Arg_1.2, i64 1024
  %157 = load <2 x float>, ptr addrspace(1) %Arg_1.2.11782, align 8, !invariant.load !195
  %Arg_1.24.11913 = extractelement <2 x float> %157, i32 0
  %Arg_1.29.11914 = extractelement <2 x float> %157, i32 1
  %add.17.1 = fadd float %Arg_0.13.11897, %Arg_1.24.11913
  %add.23.i877.1 = fadd float %add.23.i878, %add.17.1
  %add.1710.1 = fadd float %Arg_0.17.11898, %Arg_1.29.11914
  %add.23.i878.1 = fadd float %add.23.i877.1, %add.1710.1
  %Arg_0.1.21788 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 2048
  %158 = load <2 x float>, ptr addrspace(1) %Arg_0.1.21788, align 8, !invariant.load !195
  %Arg_0.13.21899 = extractelement <2 x float> %158, i32 0
  %Arg_0.17.21900 = extractelement <2 x float> %158, i32 1
  %Arg_1.2.21790 = getelementptr inbounds float, ptr addrspace(1) %Arg_1.2, i64 2048
  %159 = load <2 x float>, ptr addrspace(1) %Arg_1.2.21790, align 8, !invariant.load !195
  %Arg_1.24.21915 = extractelement <2 x float> %159, i32 0
  %Arg_1.29.21916 = extractelement <2 x float> %159, i32 1
  %add.17.2 = fadd float %Arg_0.13.21899, %Arg_1.24.21915
  %add.23.i877.2 = fadd float %add.23.i878.1, %add.17.2
  %add.1710.2 = fadd float %Arg_0.17.21900, %Arg_1.29.21916
  %add.23.i878.2 = fadd float %add.23.i877.2, %add.1710.2
  %Arg_0.1.31796 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 3072
  %160 = load <2 x float>, ptr addrspace(1) %Arg_0.1.31796, align 8, !invariant.load !195
  %Arg_0.13.31901 = extractelement <2 x float> %160, i32 0
  %Arg_0.17.31902 = extractelement <2 x float> %160, i32 1
  %Arg_1.2.31798 = getelementptr inbounds float, ptr addrspace(1) %Arg_1.2, i64 3072
  %161 = load <2 x float>, ptr addrspace(1) %Arg_1.2.31798, align 8, !invariant.load !195
  %Arg_1.24.31917 = extractelement <2 x float> %161, i32 0
  %Arg_1.29.31918 = extractelement <2 x float> %161, i32 1
  %add.17.3 = fadd float %Arg_0.13.31901, %Arg_1.24.31917
  %add.23.i877.3 = fadd float %add.23.i878.2, %add.17.3
  %add.1710.3 = fadd float %Arg_0.17.31902, %Arg_1.29.31918
  %add.23.i878.3 = fadd float %add.23.i877.3, %add.1710.3
  %Arg_0.1.41804 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 4096
  %162 = load <2 x float>, ptr addrspace(1) %Arg_0.1.41804, align 8, !invariant.load !195
  %Arg_0.13.41903 = extractelement <2 x float> %162, i32 0
  %Arg_0.17.41904 = extractelement <2 x float> %162, i32 1
  %Arg_1.2.41806 = getelementptr inbounds float, ptr addrspace(1) %Arg_1.2, i64 4096
  %163 = load <2 x float>, ptr addrspace(1) %Arg_1.2.41806, align 8, !invariant.load !195
  %Arg_1.24.41919 = extractelement <2 x float> %163, i32 0
  %Arg_1.29.41920 = extractelement <2 x float> %163, i32 1
  %add.17.4 = fadd float %Arg_0.13.41903, %Arg_1.24.41919
  %add.23.i877.4 = fadd float %add.23.i878.3, %add.17.4
  %add.1710.4 = fadd float %Arg_0.17.41904, %Arg_1.29.41920
  %add.23.i878.4 = fadd float %add.23.i877.4, %add.1710.4
  %Arg_0.1.51812 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 5120
  %164 = load <2 x float>, ptr addrspace(1) %Arg_0.1.51812, align 8, !invariant.load !195
  %Arg_0.13.51905 = extractelement <2 x float> %164, i32 0
  %Arg_0.17.51906 = extractelement <2 x float> %164, i32 1
  %Arg_1.2.51814 = getelementptr inbounds float, ptr addrspace(1) %Arg_1.2, i64 5120
  %165 = load <2 x float>, ptr addrspace(1) %Arg_1.2.51814, align 8, !invariant.load !195
  %Arg_1.24.51921 = extractelement <2 x float> %165, i32 0
  %Arg_1.29.51922 = extractelement <2 x float> %165, i32 1
  %add.17.5 = fadd float %Arg_0.13.51905, %Arg_1.24.51921
  %add.23.i877.5 = fadd float %add.23.i878.4, %add.17.5
  %add.1710.5 = fadd float %Arg_0.17.51906, %Arg_1.29.51922
  %add.23.i878.5 = fadd float %add.23.i877.5, %add.1710.5
  %Arg_0.1.61820 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 6144
  %166 = load <2 x float>, ptr addrspace(1) %Arg_0.1.61820, align 8, !invariant.load !195
  %Arg_0.13.61907 = extractelement <2 x float> %166, i32 0
  %Arg_0.17.61908 = extractelement <2 x float> %166, i32 1
  %Arg_1.2.61822 = getelementptr inbounds float, ptr addrspace(1) %Arg_1.2, i64 6144
  %167 = load <2 x float>, ptr addrspace(1) %Arg_1.2.61822, align 8, !invariant.load !195
  %Arg_1.24.61923 = extractelement <2 x float> %167, i32 0
  %Arg_1.29.61924 = extractelement <2 x float> %167, i32 1
  %add.17.6 = fadd float %Arg_0.13.61907, %Arg_1.24.61923
  %add.23.i877.6 = fadd float %add.23.i878.5, %add.17.6
  %add.1710.6 = fadd float %Arg_0.17.61908, %Arg_1.29.61924
  %add.23.i878.6 = fadd float %add.23.i877.6, %add.1710.6
  %Arg_0.1.71828 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 7168
  %168 = load <2 x float>, ptr addrspace(1) %Arg_0.1.71828, align 8, !invariant.load !195
  %Arg_0.13.71909 = extractelement <2 x float> %168, i32 0
  %Arg_0.17.71910 = extractelement <2 x float> %168, i32 1
  %Arg_1.2.71830 = getelementptr inbounds float, ptr addrspace(1) %Arg_1.2, i64 7168
  %169 = load <2 x float>, ptr addrspace(1) %Arg_1.2.71830, align 8, !invariant.load !195
  %Arg_1.24.71925 = extractelement <2 x float> %169, i32 0
  %Arg_1.29.71926 = extractelement <2 x float> %169, i32 1
  %add.17.7 = fadd float %Arg_0.13.71909, %Arg_1.24.71925
  %add.23.i877.7 = fadd float %add.23.i878.6, %add.17.7
  %add.1710.7 = fadd float %Arg_0.17.71910, %Arg_1.29.71926
  %add.23.i878.7 = fadd float %add.23.i877.7, %add.1710.7
  %lane_id = and i32 %151, 31
  %170 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.23.i878.7, i32 16, i32 31)
  %add.23.i = fadd float %add.23.i878.7, %170
  %171 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.23.i, i32 8, i32 31)
  %add.23.i873 = fadd float %add.23.i, %171
  %172 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.23.i873, i32 4, i32 31)
  %add.23.i874 = fadd float %add.23.i873, %172
  %173 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.23.i874, i32 2, i32 31)
  %add.23.i875 = fadd float %add.23.i874, %173
  %174 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.23.i875, i32 1, i32 31)
  %175 = icmp eq i32 %lane_id, 0
  %176 = lshr i32 %151, 5
  %177 = zext i32 %176 to i64
  %178 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache14, i64 0, i64 0, i64 0, i64 %177
  %add.23.i876 = fadd float %add.23.i875, %174
  br i1 %175, label %intra_warp_reduce_write-true, label %intra_warp_reduce_write-after

intra_warp_reduce_write-after:                    ; preds = %intra_warp_reduce_write-true, %reduce-group-0-true
  tail call void @llvm.nvvm.barrier0()
  %179 = icmp ult i32 %151, 32
  br i1 %179, label %inter_warp_reduce-true, label %common.ret

intra_warp_reduce_write-true:                     ; preds = %reduce-group-0-true
  store float %add.23.i876, ptr addrspace(3) %178, align 4
  br label %intra_warp_reduce_write-after

inter_warp_reduce-true:                           ; preds = %intra_warp_reduce_write-after
  %180 = zext i32 %lane_id to i64
  %181 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache14, i64 0, i64 0, i64 0, i64 %180
  %182 = icmp ult i32 %151, 16
  br i1 %182, label %inter_warp_reduce-true.then970, label %inter_warp_reduce-true.cont969

inter_warp_reduce-true.then970:                   ; preds = %inter_warp_reduce-true
  %partial_reduction_result49.then.val = load float, ptr addrspace(3) %181, align 4
  br label %inter_warp_reduce-true.cont969

inter_warp_reduce-true.cont969:                   ; preds = %inter_warp_reduce-true, %inter_warp_reduce-true.then970
  %partial_reduction_result49 = phi float [ %partial_reduction_result49.then.val, %inter_warp_reduce-true.then970 ], [ -0.000000e+00, %inter_warp_reduce-true ]
  %183 = icmp ult i32 %151, 16
  %184 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result49, i32 16, i32 31)
  br i1 %183, label %inter_warp_reduce-true.then, label %inter_warp_reduce-true.cont

inter_warp_reduce-true.then:                      ; preds = %inter_warp_reduce-true.cont969
  %.val781.then.val = load float, ptr addrspace(3) %181, align 4
  br label %inter_warp_reduce-true.cont

inter_warp_reduce-true.cont:                      ; preds = %inter_warp_reduce-true.cont969, %inter_warp_reduce-true.then
  %.val781 = phi float [ %.val781.then.val, %inter_warp_reduce-true.then ], [ -0.000000e+00, %inter_warp_reduce-true.cont969 ]
  %185 = icmp ult i32 %151, 16
  %add.23.i879 = fadd float %184, %.val781
  br i1 %185, label %inter_warp_reduce-true.cont.then968, label %inter_warp_reduce-true.cont.cont967

inter_warp_reduce-true.cont.then968:              ; preds = %inter_warp_reduce-true.cont
  store float %add.23.i879, ptr addrspace(3) %181, align 4
  br label %inter_warp_reduce-true.cont.cont967

inter_warp_reduce-true.cont.cont967:              ; preds = %inter_warp_reduce-true.cont, %inter_warp_reduce-true.cont.then968
  %initial_value_addr.0 = phi float [ -0.000000e+00, %inter_warp_reduce-true.cont.then968 ], [ %add.23.i879, %inter_warp_reduce-true.cont ]
  %186 = icmp ult i32 %151, 16
  %187 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.23.i879, i32 8, i32 31)
  br i1 %186, label %inter_warp_reduce-true.cont.then, label %inter_warp_reduce-true.cont.cont

inter_warp_reduce-true.cont.then:                 ; preds = %inter_warp_reduce-true.cont.cont967
  %.val780.then.val = load float, ptr addrspace(3) %181, align 4
  br label %inter_warp_reduce-true.cont.cont

inter_warp_reduce-true.cont.cont:                 ; preds = %inter_warp_reduce-true.cont.cont967, %inter_warp_reduce-true.cont.then
  %.val780 = phi float [ %.val780.then.val, %inter_warp_reduce-true.cont.then ], [ %initial_value_addr.0, %inter_warp_reduce-true.cont.cont967 ]
  %188 = icmp ult i32 %151, 16
  %add.23.i880 = fadd float %187, %.val780
  br i1 %188, label %inter_warp_reduce-true.cont.cont.then966, label %inter_warp_reduce-true.cont.cont.cont965

inter_warp_reduce-true.cont.cont.then966:         ; preds = %inter_warp_reduce-true.cont.cont
  store float %add.23.i880, ptr addrspace(3) %181, align 4
  br label %inter_warp_reduce-true.cont.cont.cont965

inter_warp_reduce-true.cont.cont.cont965:         ; preds = %inter_warp_reduce-true.cont.cont, %inter_warp_reduce-true.cont.cont.then966
  %initial_value_addr.1 = phi float [ %initial_value_addr.0, %inter_warp_reduce-true.cont.cont.then966 ], [ %add.23.i880, %inter_warp_reduce-true.cont.cont ]
  %189 = icmp ult i32 %151, 16
  %190 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.23.i880, i32 4, i32 31)
  br i1 %189, label %inter_warp_reduce-true.cont.cont.then, label %inter_warp_reduce-true.cont.cont.cont

inter_warp_reduce-true.cont.cont.then:            ; preds = %inter_warp_reduce-true.cont.cont.cont965
  %.val779.then.val = load float, ptr addrspace(3) %181, align 4
  br label %inter_warp_reduce-true.cont.cont.cont

inter_warp_reduce-true.cont.cont.cont:            ; preds = %inter_warp_reduce-true.cont.cont.cont965, %inter_warp_reduce-true.cont.cont.then
  %.val779 = phi float [ %.val779.then.val, %inter_warp_reduce-true.cont.cont.then ], [ %initial_value_addr.1, %inter_warp_reduce-true.cont.cont.cont965 ]
  %191 = icmp ult i32 %151, 16
  %add.23.i881 = fadd float %190, %.val779
  br i1 %191, label %inter_warp_reduce-true.cont.cont.cont.then964, label %inter_warp_reduce-true.cont.cont.cont.cont963

inter_warp_reduce-true.cont.cont.cont.then964:    ; preds = %inter_warp_reduce-true.cont.cont.cont
  store float %add.23.i881, ptr addrspace(3) %181, align 4
  br label %inter_warp_reduce-true.cont.cont.cont.cont963

inter_warp_reduce-true.cont.cont.cont.cont963:    ; preds = %inter_warp_reduce-true.cont.cont.cont, %inter_warp_reduce-true.cont.cont.cont.then964
  %initial_value_addr.2 = phi float [ %initial_value_addr.1, %inter_warp_reduce-true.cont.cont.cont.then964 ], [ %add.23.i881, %inter_warp_reduce-true.cont.cont.cont ]
  %192 = icmp ult i32 %151, 16
  %193 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.23.i881, i32 2, i32 31)
  br i1 %192, label %inter_warp_reduce-true.cont.cont.cont.then, label %inter_warp_reduce-true.cont.cont.cont.cont

inter_warp_reduce-true.cont.cont.cont.then:       ; preds = %inter_warp_reduce-true.cont.cont.cont.cont963
  %.val778.then.val = load float, ptr addrspace(3) %181, align 4
  br label %inter_warp_reduce-true.cont.cont.cont.cont

inter_warp_reduce-true.cont.cont.cont.cont:       ; preds = %inter_warp_reduce-true.cont.cont.cont.cont963, %inter_warp_reduce-true.cont.cont.cont.then
  %.val778 = phi float [ %.val778.then.val, %inter_warp_reduce-true.cont.cont.cont.then ], [ %initial_value_addr.2, %inter_warp_reduce-true.cont.cont.cont.cont963 ]
  %194 = icmp ult i32 %151, 16
  %add.23.i882 = fadd float %193, %.val778
  br i1 %194, label %inter_warp_reduce-true.cont.cont.cont.cont.then962, label %inter_warp_reduce-true.cont.cont.cont.cont.cont961

inter_warp_reduce-true.cont.cont.cont.cont.then962: ; preds = %inter_warp_reduce-true.cont.cont.cont.cont
  store float %add.23.i882, ptr addrspace(3) %181, align 4
  br label %inter_warp_reduce-true.cont.cont.cont.cont.cont961

inter_warp_reduce-true.cont.cont.cont.cont.cont961: ; preds = %inter_warp_reduce-true.cont.cont.cont.cont, %inter_warp_reduce-true.cont.cont.cont.cont.then962
  %initial_value_addr.3 = phi float [ %initial_value_addr.2, %inter_warp_reduce-true.cont.cont.cont.cont.then962 ], [ %add.23.i882, %inter_warp_reduce-true.cont.cont.cont.cont ]
  %195 = icmp ult i32 %151, 16
  %196 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.23.i882, i32 1, i32 31)
  br i1 %195, label %inter_warp_reduce-true.cont.cont.cont.cont.then, label %inter_warp_reduce-true.cont.cont.cont.cont.cont

inter_warp_reduce-true.cont.cont.cont.cont.then:  ; preds = %inter_warp_reduce-true.cont.cont.cont.cont.cont961
  %.val.then.val = load float, ptr addrspace(3) %181, align 4
  br label %inter_warp_reduce-true.cont.cont.cont.cont.cont

inter_warp_reduce-true.cont.cont.cont.cont.cont:  ; preds = %inter_warp_reduce-true.cont.cont.cont.cont.cont961, %inter_warp_reduce-true.cont.cont.cont.cont.then
  %.val = phi float [ %.val.then.val, %inter_warp_reduce-true.cont.cont.cont.cont.then ], [ %initial_value_addr.3, %inter_warp_reduce-true.cont.cont.cont.cont.cont961 ]
  %197 = icmp ult i32 %151, 16
  %add.23.i883 = fadd float %196, %.val
  br i1 %197, label %inter_warp_reduce-true.cont.cont.cont.cont.cont.then, label %inter_warp_reduce-true.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true.cont.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true.cont.cont.cont.cont.cont
  store float %add.23.i883, ptr addrspace(3) %181, align 4
  br label %inter_warp_reduce-true.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true.cont.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true.cont.cont.cont.cont.cont, %inter_warp_reduce-true.cont.cont.cont.cont.cont.then
  %198 = icmp eq i32 %151, 0
  br i1 %198, label %reduction_write_output-true, label %common.ret

reduction_write_output-true:                      ; preds = %inter_warp_reduce-true.cont.cont.cont.cont.cont.cont
  store float %add.23.i883, ptr addrspace(1) %arg161399, align 128
  br label %common.ret

reduce-group-1-true:                              ; preds = %entry
  %199 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !194
  %200 = shl nuw nsw i32 %199, 1
  %201 = zext i32 %200 to i64
  %Arg_2.3 = getelementptr float, ptr addrspace(1) %arg21371, i64 %201
  %202 = load <2 x float>, ptr addrspace(1) %Arg_2.3, align 8, !invariant.load !195
  %Arg_2.3911927 = extractelement <2 x float> %202, i32 0
  %Arg_2.3961928 = extractelement <2 x float> %202, i32 1
  %Arg_3.4 = getelementptr float, ptr addrspace(1) %arg31373, i64 %201
  %203 = load <2 x float>, ptr addrspace(1) %Arg_3.4, align 8, !invariant.load !195
  %Arg_3.4921943 = extractelement <2 x float> %203, i32 0
  %Arg_3.4981944 = extractelement <2 x float> %203, i32 1
  %add.25 = fadd float %Arg_2.3911927, %Arg_3.4921943
  %add.2599 = fadd float %Arg_2.3961928, %Arg_3.4981944
  %add.30.i889 = fadd float %add.25, %add.2599
  %Arg_2.3.11840 = getelementptr inbounds float, ptr addrspace(1) %Arg_2.3, i64 1024
  %204 = load <2 x float>, ptr addrspace(1) %Arg_2.3.11840, align 8, !invariant.load !195
  %Arg_2.391.11929 = extractelement <2 x float> %204, i32 0
  %Arg_2.396.11930 = extractelement <2 x float> %204, i32 1
  %Arg_3.4.11842 = getelementptr inbounds float, ptr addrspace(1) %Arg_3.4, i64 1024
  %205 = load <2 x float>, ptr addrspace(1) %Arg_3.4.11842, align 8, !invariant.load !195
  %Arg_3.492.11945 = extractelement <2 x float> %205, i32 0
  %Arg_3.498.11946 = extractelement <2 x float> %205, i32 1
  %add.25.1 = fadd float %Arg_2.391.11929, %Arg_3.492.11945
  %add.30.i888.1 = fadd float %add.30.i889, %add.25.1
  %add.2599.1 = fadd float %Arg_2.396.11930, %Arg_3.498.11946
  %add.30.i889.1 = fadd float %add.30.i888.1, %add.2599.1
  %Arg_2.3.21848 = getelementptr inbounds float, ptr addrspace(1) %Arg_2.3, i64 2048
  %206 = load <2 x float>, ptr addrspace(1) %Arg_2.3.21848, align 8, !invariant.load !195
  %Arg_2.391.21931 = extractelement <2 x float> %206, i32 0
  %Arg_2.396.21932 = extractelement <2 x float> %206, i32 1
  %Arg_3.4.21850 = getelementptr inbounds float, ptr addrspace(1) %Arg_3.4, i64 2048
  %207 = load <2 x float>, ptr addrspace(1) %Arg_3.4.21850, align 8, !invariant.load !195
  %Arg_3.492.21947 = extractelement <2 x float> %207, i32 0
  %Arg_3.498.21948 = extractelement <2 x float> %207, i32 1
  %add.25.2 = fadd float %Arg_2.391.21931, %Arg_3.492.21947
  %add.30.i888.2 = fadd float %add.30.i889.1, %add.25.2
  %add.2599.2 = fadd float %Arg_2.396.21932, %Arg_3.498.21948
  %add.30.i889.2 = fadd float %add.30.i888.2, %add.2599.2
  %Arg_2.3.31856 = getelementptr inbounds float, ptr addrspace(1) %Arg_2.3, i64 3072
  %208 = load <2 x float>, ptr addrspace(1) %Arg_2.3.31856, align 8, !invariant.load !195
  %Arg_2.391.31933 = extractelement <2 x float> %208, i32 0
  %Arg_2.396.31934 = extractelement <2 x float> %208, i32 1
  %Arg_3.4.31858 = getelementptr inbounds float, ptr addrspace(1) %Arg_3.4, i64 3072
  %209 = load <2 x float>, ptr addrspace(1) %Arg_3.4.31858, align 8, !invariant.load !195
  %Arg_3.492.31949 = extractelement <2 x float> %209, i32 0
  %Arg_3.498.31950 = extractelement <2 x float> %209, i32 1
  %add.25.3 = fadd float %Arg_2.391.31933, %Arg_3.492.31949
  %add.30.i888.3 = fadd float %add.30.i889.2, %add.25.3
  %add.2599.3 = fadd float %Arg_2.396.31934, %Arg_3.498.31950
  %add.30.i889.3 = fadd float %add.30.i888.3, %add.2599.3
  %Arg_2.3.41864 = getelementptr inbounds float, ptr addrspace(1) %Arg_2.3, i64 4096
  %210 = load <2 x float>, ptr addrspace(1) %Arg_2.3.41864, align 8, !invariant.load !195
  %Arg_2.391.41935 = extractelement <2 x float> %210, i32 0
  %Arg_2.396.41936 = extractelement <2 x float> %210, i32 1
  %Arg_3.4.41866 = getelementptr inbounds float, ptr addrspace(1) %Arg_3.4, i64 4096
  %211 = load <2 x float>, ptr addrspace(1) %Arg_3.4.41866, align 8, !invariant.load !195
  %Arg_3.492.41951 = extractelement <2 x float> %211, i32 0
  %Arg_3.498.41952 = extractelement <2 x float> %211, i32 1
  %add.25.4 = fadd float %Arg_2.391.41935, %Arg_3.492.41951
  %add.30.i888.4 = fadd float %add.30.i889.3, %add.25.4
  %add.2599.4 = fadd float %Arg_2.396.41936, %Arg_3.498.41952
  %add.30.i889.4 = fadd float %add.30.i888.4, %add.2599.4
  %Arg_2.3.51872 = getelementptr inbounds float, ptr addrspace(1) %Arg_2.3, i64 5120
  %212 = load <2 x float>, ptr addrspace(1) %Arg_2.3.51872, align 8, !invariant.load !195
  %Arg_2.391.51937 = extractelement <2 x float> %212, i32 0
  %Arg_2.396.51938 = extractelement <2 x float> %212, i32 1
  %Arg_3.4.51874 = getelementptr inbounds float, ptr addrspace(1) %Arg_3.4, i64 5120
  %213 = load <2 x float>, ptr addrspace(1) %Arg_3.4.51874, align 8, !invariant.load !195
  %Arg_3.492.51953 = extractelement <2 x float> %213, i32 0
  %Arg_3.498.51954 = extractelement <2 x float> %213, i32 1
  %add.25.5 = fadd float %Arg_2.391.51937, %Arg_3.492.51953
  %add.30.i888.5 = fadd float %add.30.i889.4, %add.25.5
  %add.2599.5 = fadd float %Arg_2.396.51938, %Arg_3.498.51954
  %add.30.i889.5 = fadd float %add.30.i888.5, %add.2599.5
  %Arg_2.3.61880 = getelementptr inbounds float, ptr addrspace(1) %Arg_2.3, i64 6144
  %214 = load <2 x float>, ptr addrspace(1) %Arg_2.3.61880, align 8, !invariant.load !195
  %Arg_2.391.61939 = extractelement <2 x float> %214, i32 0
  %Arg_2.396.61940 = extractelement <2 x float> %214, i32 1
  %Arg_3.4.61882 = getelementptr inbounds float, ptr addrspace(1) %Arg_3.4, i64 6144
  %215 = load <2 x float>, ptr addrspace(1) %Arg_3.4.61882, align 8, !invariant.load !195
  %Arg_3.492.61955 = extractelement <2 x float> %215, i32 0
  %Arg_3.498.61956 = extractelement <2 x float> %215, i32 1
  %add.25.6 = fadd float %Arg_2.391.61939, %Arg_3.492.61955
  %add.30.i888.6 = fadd float %add.30.i889.5, %add.25.6
  %add.2599.6 = fadd float %Arg_2.396.61940, %Arg_3.498.61956
  %add.30.i889.6 = fadd float %add.30.i888.6, %add.2599.6
  %Arg_2.3.71888 = getelementptr inbounds float, ptr addrspace(1) %Arg_2.3, i64 7168
  %216 = load <2 x float>, ptr addrspace(1) %Arg_2.3.71888, align 8, !invariant.load !195
  %Arg_2.391.71941 = extractelement <2 x float> %216, i32 0
  %Arg_2.396.71942 = extractelement <2 x float> %216, i32 1
  %Arg_3.4.71890 = getelementptr inbounds float, ptr addrspace(1) %Arg_3.4, i64 7168
  %217 = load <2 x float>, ptr addrspace(1) %Arg_3.4.71890, align 8, !invariant.load !195
  %Arg_3.492.71957 = extractelement <2 x float> %217, i32 0
  %Arg_3.498.71958 = extractelement <2 x float> %217, i32 1
  %add.25.7 = fadd float %Arg_2.391.71941, %Arg_3.492.71957
  %add.30.i888.7 = fadd float %add.30.i889.6, %add.25.7
  %add.2599.7 = fadd float %Arg_2.396.71942, %Arg_3.498.71958
  %add.30.i889.7 = fadd float %add.30.i888.7, %add.2599.7
  %lane_id69 = and i32 %199, 31
  %218 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i889.7, i32 16, i32 31)
  %add.30.i = fadd float %add.30.i889.7, %218
  %219 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i, i32 8, i32 31)
  %add.30.i884 = fadd float %add.30.i, %219
  %220 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i884, i32 4, i32 31)
  %add.30.i885 = fadd float %add.30.i884, %220
  %221 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i885, i32 2, i32 31)
  %add.30.i886 = fadd float %add.30.i885, %221
  %222 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i886, i32 1, i32 31)
  %223 = icmp eq i32 %lane_id69, 0
  %224 = lshr i32 %199, 5
  %225 = zext i32 %224 to i64
  %226 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache15, i64 0, i64 0, i64 0, i64 %225
  %add.30.i887 = fadd float %add.30.i886, %222
  br i1 %223, label %intra_warp_reduce_write-true141, label %intra_warp_reduce_write-after142

intra_warp_reduce_write-after142:                 ; preds = %intra_warp_reduce_write-true141, %reduce-group-1-true
  tail call void @llvm.nvvm.barrier0()
  %227 = icmp ult i32 %199, 32
  br i1 %227, label %inter_warp_reduce-true143, label %common.ret

intra_warp_reduce_write-true141:                  ; preds = %reduce-group-1-true
  store float %add.30.i887, ptr addrspace(3) %226, align 4
  br label %intra_warp_reduce_write-after142

inter_warp_reduce-true143:                        ; preds = %intra_warp_reduce_write-after142
  %228 = zext i32 %lane_id69 to i64
  %229 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache15, i64 0, i64 0, i64 0, i64 %228
  %230 = icmp ult i32 %199, 16
  br i1 %230, label %inter_warp_reduce-true143.then980, label %inter_warp_reduce-true143.cont979

inter_warp_reduce-true143.then980:                ; preds = %inter_warp_reduce-true143
  %partial_reduction_result147.then.val = load float, ptr addrspace(3) %229, align 4
  br label %inter_warp_reduce-true143.cont979

inter_warp_reduce-true143.cont979:                ; preds = %inter_warp_reduce-true143, %inter_warp_reduce-true143.then980
  %partial_reduction_result147 = phi float [ %partial_reduction_result147.then.val, %inter_warp_reduce-true143.then980 ], [ -0.000000e+00, %inter_warp_reduce-true143 ]
  %231 = icmp ult i32 %199, 16
  %232 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result147, i32 16, i32 31)
  br i1 %231, label %inter_warp_reduce-true143.then, label %inter_warp_reduce-true143.cont

inter_warp_reduce-true143.then:                   ; preds = %inter_warp_reduce-true143.cont979
  %.val793.then.val = load float, ptr addrspace(3) %229, align 4
  br label %inter_warp_reduce-true143.cont

inter_warp_reduce-true143.cont:                   ; preds = %inter_warp_reduce-true143.cont979, %inter_warp_reduce-true143.then
  %.val793 = phi float [ %.val793.then.val, %inter_warp_reduce-true143.then ], [ -0.000000e+00, %inter_warp_reduce-true143.cont979 ]
  %233 = icmp ult i32 %199, 16
  %add.30.i890 = fadd float %232, %.val793
  br i1 %233, label %inter_warp_reduce-true143.cont.then978, label %inter_warp_reduce-true143.cont.cont977

inter_warp_reduce-true143.cont.then978:           ; preds = %inter_warp_reduce-true143.cont
  store float %add.30.i890, ptr addrspace(3) %229, align 4
  br label %inter_warp_reduce-true143.cont.cont977

inter_warp_reduce-true143.cont.cont977:           ; preds = %inter_warp_reduce-true143.cont, %inter_warp_reduce-true143.cont.then978
  %initial_value_addr145.0 = phi float [ -0.000000e+00, %inter_warp_reduce-true143.cont.then978 ], [ %add.30.i890, %inter_warp_reduce-true143.cont ]
  %234 = icmp ult i32 %199, 16
  %235 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i890, i32 8, i32 31)
  br i1 %234, label %inter_warp_reduce-true143.cont.then, label %inter_warp_reduce-true143.cont.cont

inter_warp_reduce-true143.cont.then:              ; preds = %inter_warp_reduce-true143.cont.cont977
  %.val792.then.val = load float, ptr addrspace(3) %229, align 4
  br label %inter_warp_reduce-true143.cont.cont

inter_warp_reduce-true143.cont.cont:              ; preds = %inter_warp_reduce-true143.cont.cont977, %inter_warp_reduce-true143.cont.then
  %.val792 = phi float [ %.val792.then.val, %inter_warp_reduce-true143.cont.then ], [ %initial_value_addr145.0, %inter_warp_reduce-true143.cont.cont977 ]
  %236 = icmp ult i32 %199, 16
  %add.30.i891 = fadd float %235, %.val792
  br i1 %236, label %inter_warp_reduce-true143.cont.cont.then976, label %inter_warp_reduce-true143.cont.cont.cont975

inter_warp_reduce-true143.cont.cont.then976:      ; preds = %inter_warp_reduce-true143.cont.cont
  store float %add.30.i891, ptr addrspace(3) %229, align 4
  br label %inter_warp_reduce-true143.cont.cont.cont975

inter_warp_reduce-true143.cont.cont.cont975:      ; preds = %inter_warp_reduce-true143.cont.cont, %inter_warp_reduce-true143.cont.cont.then976
  %initial_value_addr145.1 = phi float [ %initial_value_addr145.0, %inter_warp_reduce-true143.cont.cont.then976 ], [ %add.30.i891, %inter_warp_reduce-true143.cont.cont ]
  %237 = icmp ult i32 %199, 16
  %238 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i891, i32 4, i32 31)
  br i1 %237, label %inter_warp_reduce-true143.cont.cont.then, label %inter_warp_reduce-true143.cont.cont.cont

inter_warp_reduce-true143.cont.cont.then:         ; preds = %inter_warp_reduce-true143.cont.cont.cont975
  %.val791.then.val = load float, ptr addrspace(3) %229, align 4
  br label %inter_warp_reduce-true143.cont.cont.cont

inter_warp_reduce-true143.cont.cont.cont:         ; preds = %inter_warp_reduce-true143.cont.cont.cont975, %inter_warp_reduce-true143.cont.cont.then
  %.val791 = phi float [ %.val791.then.val, %inter_warp_reduce-true143.cont.cont.then ], [ %initial_value_addr145.1, %inter_warp_reduce-true143.cont.cont.cont975 ]
  %239 = icmp ult i32 %199, 16
  %add.30.i892 = fadd float %238, %.val791
  br i1 %239, label %inter_warp_reduce-true143.cont.cont.cont.then974, label %inter_warp_reduce-true143.cont.cont.cont.cont973

inter_warp_reduce-true143.cont.cont.cont.then974: ; preds = %inter_warp_reduce-true143.cont.cont.cont
  store float %add.30.i892, ptr addrspace(3) %229, align 4
  br label %inter_warp_reduce-true143.cont.cont.cont.cont973

inter_warp_reduce-true143.cont.cont.cont.cont973: ; preds = %inter_warp_reduce-true143.cont.cont.cont, %inter_warp_reduce-true143.cont.cont.cont.then974
  %initial_value_addr145.2 = phi float [ %initial_value_addr145.1, %inter_warp_reduce-true143.cont.cont.cont.then974 ], [ %add.30.i892, %inter_warp_reduce-true143.cont.cont.cont ]
  %240 = icmp ult i32 %199, 16
  %241 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i892, i32 2, i32 31)
  br i1 %240, label %inter_warp_reduce-true143.cont.cont.cont.then, label %inter_warp_reduce-true143.cont.cont.cont.cont

inter_warp_reduce-true143.cont.cont.cont.then:    ; preds = %inter_warp_reduce-true143.cont.cont.cont.cont973
  %.val790.then.val = load float, ptr addrspace(3) %229, align 4
  br label %inter_warp_reduce-true143.cont.cont.cont.cont

inter_warp_reduce-true143.cont.cont.cont.cont:    ; preds = %inter_warp_reduce-true143.cont.cont.cont.cont973, %inter_warp_reduce-true143.cont.cont.cont.then
  %.val790 = phi float [ %.val790.then.val, %inter_warp_reduce-true143.cont.cont.cont.then ], [ %initial_value_addr145.2, %inter_warp_reduce-true143.cont.cont.cont.cont973 ]
  %242 = icmp ult i32 %199, 16
  %add.30.i893 = fadd float %241, %.val790
  br i1 %242, label %inter_warp_reduce-true143.cont.cont.cont.cont.then972, label %inter_warp_reduce-true143.cont.cont.cont.cont.cont971

inter_warp_reduce-true143.cont.cont.cont.cont.then972: ; preds = %inter_warp_reduce-true143.cont.cont.cont.cont
  store float %add.30.i893, ptr addrspace(3) %229, align 4
  br label %inter_warp_reduce-true143.cont.cont.cont.cont.cont971

inter_warp_reduce-true143.cont.cont.cont.cont.cont971: ; preds = %inter_warp_reduce-true143.cont.cont.cont.cont, %inter_warp_reduce-true143.cont.cont.cont.cont.then972
  %initial_value_addr145.3 = phi float [ %initial_value_addr145.2, %inter_warp_reduce-true143.cont.cont.cont.cont.then972 ], [ %add.30.i893, %inter_warp_reduce-true143.cont.cont.cont.cont ]
  %243 = icmp ult i32 %199, 16
  %244 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i893, i32 1, i32 31)
  br i1 %243, label %inter_warp_reduce-true143.cont.cont.cont.cont.then, label %inter_warp_reduce-true143.cont.cont.cont.cont.cont

inter_warp_reduce-true143.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true143.cont.cont.cont.cont.cont971
  %.val789.then.val = load float, ptr addrspace(3) %229, align 4
  br label %inter_warp_reduce-true143.cont.cont.cont.cont.cont

inter_warp_reduce-true143.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true143.cont.cont.cont.cont.cont971, %inter_warp_reduce-true143.cont.cont.cont.cont.then
  %.val789 = phi float [ %.val789.then.val, %inter_warp_reduce-true143.cont.cont.cont.cont.then ], [ %initial_value_addr145.3, %inter_warp_reduce-true143.cont.cont.cont.cont.cont971 ]
  %245 = icmp ult i32 %199, 16
  %add.30.i894 = fadd float %244, %.val789
  br i1 %245, label %inter_warp_reduce-true143.cont.cont.cont.cont.cont.then, label %inter_warp_reduce-true143.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true143.cont.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true143.cont.cont.cont.cont.cont
  store float %add.30.i894, ptr addrspace(3) %229, align 4
  br label %inter_warp_reduce-true143.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true143.cont.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true143.cont.cont.cont.cont.cont, %inter_warp_reduce-true143.cont.cont.cont.cont.cont.then
  %246 = icmp eq i32 %199, 0
  br i1 %246, label %reduction_write_output-true161, label %common.ret

reduction_write_output-true161:                   ; preds = %inter_warp_reduce-true143.cont.cont.cont.cont.cont.cont
  store float %add.30.i894, ptr addrspace(1) %arg171401, align 128
  br label %common.ret

intra_warp_reduce_write-after243:                 ; preds = %intra_warp_reduce_write-true242, %entry.reduce-group-2-true_crit_edge
  tail call void @llvm.nvvm.barrier0()
  %247 = icmp ult i32 %.pre, 32
  br i1 %247, label %inter_warp_reduce-true244, label %common.ret

intra_warp_reduce_write-true242:                  ; preds = %entry.reduce-group-2-true_crit_edge
  store float %add.37.i898, ptr addrspace(3) %25, align 4
  br label %intra_warp_reduce_write-after243

inter_warp_reduce-true244:                        ; preds = %intra_warp_reduce_write-after243
  %248 = zext i32 %.pre1106 to i64
  %249 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache16, i64 0, i64 0, i64 0, i64 %248
  %250 = icmp ult i32 %.pre, 16
  br i1 %250, label %inter_warp_reduce-true244.then990, label %inter_warp_reduce-true244.cont989

inter_warp_reduce-true244.then990:                ; preds = %inter_warp_reduce-true244
  %partial_reduction_result248.then.val = load float, ptr addrspace(3) %249, align 4
  br label %inter_warp_reduce-true244.cont989

inter_warp_reduce-true244.cont989:                ; preds = %inter_warp_reduce-true244, %inter_warp_reduce-true244.then990
  %partial_reduction_result248 = phi float [ %partial_reduction_result248.then.val, %inter_warp_reduce-true244.then990 ], [ -0.000000e+00, %inter_warp_reduce-true244 ]
  %251 = icmp ult i32 %.pre, 16
  %252 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result248, i32 16, i32 31)
  br i1 %251, label %inter_warp_reduce-true244.then, label %inter_warp_reduce-true244.cont

inter_warp_reduce-true244.then:                   ; preds = %inter_warp_reduce-true244.cont989
  %.val805.then.val = load float, ptr addrspace(3) %249, align 4
  br label %inter_warp_reduce-true244.cont

inter_warp_reduce-true244.cont:                   ; preds = %inter_warp_reduce-true244.cont989, %inter_warp_reduce-true244.then
  %.val805 = phi float [ %.val805.then.val, %inter_warp_reduce-true244.then ], [ -0.000000e+00, %inter_warp_reduce-true244.cont989 ]
  %253 = icmp ult i32 %.pre, 16
  %add.37.i901 = fadd float %252, %.val805
  br i1 %253, label %inter_warp_reduce-true244.cont.then988, label %inter_warp_reduce-true244.cont.cont987

inter_warp_reduce-true244.cont.then988:           ; preds = %inter_warp_reduce-true244.cont
  store float %add.37.i901, ptr addrspace(3) %249, align 4
  br label %inter_warp_reduce-true244.cont.cont987

inter_warp_reduce-true244.cont.cont987:           ; preds = %inter_warp_reduce-true244.cont, %inter_warp_reduce-true244.cont.then988
  %initial_value_addr246.0 = phi float [ -0.000000e+00, %inter_warp_reduce-true244.cont.then988 ], [ %add.37.i901, %inter_warp_reduce-true244.cont ]
  %254 = icmp ult i32 %.pre, 16
  %255 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.37.i901, i32 8, i32 31)
  br i1 %254, label %inter_warp_reduce-true244.cont.then, label %inter_warp_reduce-true244.cont.cont

inter_warp_reduce-true244.cont.then:              ; preds = %inter_warp_reduce-true244.cont.cont987
  %.val804.then.val = load float, ptr addrspace(3) %249, align 4
  br label %inter_warp_reduce-true244.cont.cont

inter_warp_reduce-true244.cont.cont:              ; preds = %inter_warp_reduce-true244.cont.cont987, %inter_warp_reduce-true244.cont.then
  %.val804 = phi float [ %.val804.then.val, %inter_warp_reduce-true244.cont.then ], [ %initial_value_addr246.0, %inter_warp_reduce-true244.cont.cont987 ]
  %256 = icmp ult i32 %.pre, 16
  %add.37.i902 = fadd float %255, %.val804
  br i1 %256, label %inter_warp_reduce-true244.cont.cont.then986, label %inter_warp_reduce-true244.cont.cont.cont985

inter_warp_reduce-true244.cont.cont.then986:      ; preds = %inter_warp_reduce-true244.cont.cont
  store float %add.37.i902, ptr addrspace(3) %249, align 4
  br label %inter_warp_reduce-true244.cont.cont.cont985

inter_warp_reduce-true244.cont.cont.cont985:      ; preds = %inter_warp_reduce-true244.cont.cont, %inter_warp_reduce-true244.cont.cont.then986
  %initial_value_addr246.1 = phi float [ %initial_value_addr246.0, %inter_warp_reduce-true244.cont.cont.then986 ], [ %add.37.i902, %inter_warp_reduce-true244.cont.cont ]
  %257 = icmp ult i32 %.pre, 16
  %258 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.37.i902, i32 4, i32 31)
  br i1 %257, label %inter_warp_reduce-true244.cont.cont.then, label %inter_warp_reduce-true244.cont.cont.cont

inter_warp_reduce-true244.cont.cont.then:         ; preds = %inter_warp_reduce-true244.cont.cont.cont985
  %.val803.then.val = load float, ptr addrspace(3) %249, align 4
  br label %inter_warp_reduce-true244.cont.cont.cont

inter_warp_reduce-true244.cont.cont.cont:         ; preds = %inter_warp_reduce-true244.cont.cont.cont985, %inter_warp_reduce-true244.cont.cont.then
  %.val803 = phi float [ %.val803.then.val, %inter_warp_reduce-true244.cont.cont.then ], [ %initial_value_addr246.1, %inter_warp_reduce-true244.cont.cont.cont985 ]
  %259 = icmp ult i32 %.pre, 16
  %add.37.i903 = fadd float %258, %.val803
  br i1 %259, label %inter_warp_reduce-true244.cont.cont.cont.then984, label %inter_warp_reduce-true244.cont.cont.cont.cont983

inter_warp_reduce-true244.cont.cont.cont.then984: ; preds = %inter_warp_reduce-true244.cont.cont.cont
  store float %add.37.i903, ptr addrspace(3) %249, align 4
  br label %inter_warp_reduce-true244.cont.cont.cont.cont983

inter_warp_reduce-true244.cont.cont.cont.cont983: ; preds = %inter_warp_reduce-true244.cont.cont.cont, %inter_warp_reduce-true244.cont.cont.cont.then984
  %initial_value_addr246.2 = phi float [ %initial_value_addr246.1, %inter_warp_reduce-true244.cont.cont.cont.then984 ], [ %add.37.i903, %inter_warp_reduce-true244.cont.cont.cont ]
  %260 = icmp ult i32 %.pre, 16
  %261 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.37.i903, i32 2, i32 31)
  br i1 %260, label %inter_warp_reduce-true244.cont.cont.cont.then, label %inter_warp_reduce-true244.cont.cont.cont.cont

inter_warp_reduce-true244.cont.cont.cont.then:    ; preds = %inter_warp_reduce-true244.cont.cont.cont.cont983
  %.val802.then.val = load float, ptr addrspace(3) %249, align 4
  br label %inter_warp_reduce-true244.cont.cont.cont.cont

inter_warp_reduce-true244.cont.cont.cont.cont:    ; preds = %inter_warp_reduce-true244.cont.cont.cont.cont983, %inter_warp_reduce-true244.cont.cont.cont.then
  %.val802 = phi float [ %.val802.then.val, %inter_warp_reduce-true244.cont.cont.cont.then ], [ %initial_value_addr246.2, %inter_warp_reduce-true244.cont.cont.cont.cont983 ]
  %262 = icmp ult i32 %.pre, 16
  %add.37.i904 = fadd float %261, %.val802
  br i1 %262, label %inter_warp_reduce-true244.cont.cont.cont.cont.then982, label %inter_warp_reduce-true244.cont.cont.cont.cont.cont981

inter_warp_reduce-true244.cont.cont.cont.cont.then982: ; preds = %inter_warp_reduce-true244.cont.cont.cont.cont
  store float %add.37.i904, ptr addrspace(3) %249, align 4
  br label %inter_warp_reduce-true244.cont.cont.cont.cont.cont981

inter_warp_reduce-true244.cont.cont.cont.cont.cont981: ; preds = %inter_warp_reduce-true244.cont.cont.cont.cont, %inter_warp_reduce-true244.cont.cont.cont.cont.then982
  %initial_value_addr246.3 = phi float [ %initial_value_addr246.2, %inter_warp_reduce-true244.cont.cont.cont.cont.then982 ], [ %add.37.i904, %inter_warp_reduce-true244.cont.cont.cont.cont ]
  %263 = icmp ult i32 %.pre, 16
  %264 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.37.i904, i32 1, i32 31)
  br i1 %263, label %inter_warp_reduce-true244.cont.cont.cont.cont.then, label %inter_warp_reduce-true244.cont.cont.cont.cont.cont

inter_warp_reduce-true244.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true244.cont.cont.cont.cont.cont981
  %.val801.then.val = load float, ptr addrspace(3) %249, align 4
  br label %inter_warp_reduce-true244.cont.cont.cont.cont.cont

inter_warp_reduce-true244.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true244.cont.cont.cont.cont.cont981, %inter_warp_reduce-true244.cont.cont.cont.cont.then
  %.val801 = phi float [ %.val801.then.val, %inter_warp_reduce-true244.cont.cont.cont.cont.then ], [ %initial_value_addr246.3, %inter_warp_reduce-true244.cont.cont.cont.cont.cont981 ]
  %265 = icmp ult i32 %.pre, 16
  %add.37.i905 = fadd float %264, %.val801
  br i1 %265, label %inter_warp_reduce-true244.cont.cont.cont.cont.cont.then, label %inter_warp_reduce-true244.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true244.cont.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true244.cont.cont.cont.cont.cont
  store float %add.37.i905, ptr addrspace(3) %249, align 4
  br label %inter_warp_reduce-true244.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true244.cont.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true244.cont.cont.cont.cont.cont, %inter_warp_reduce-true244.cont.cont.cont.cont.cont.then
  %266 = icmp eq i32 %.pre, 0
  br i1 %266, label %reduction_write_output-true262, label %common.ret

reduction_write_output-true262:                   ; preds = %inter_warp_reduce-true244.cont.cont.cont.cont.cont.cont
  store float %add.37.i905, ptr addrspace(1) %arg181403, align 128
  br label %common.ret

intra_warp_reduce_write-after344:                 ; preds = %intra_warp_reduce_write-true343, %entry.reduce-group-3-true_crit_edge
  tail call void @llvm.nvvm.barrier0()
  %267 = icmp ult i32 %.pre1107, 32
  br i1 %267, label %inter_warp_reduce-true345, label %common.ret

intra_warp_reduce_write-true343:                  ; preds = %entry.reduce-group-3-true_crit_edge
  store float %add.44.i909, ptr addrspace(3) %50, align 4
  br label %intra_warp_reduce_write-after344

inter_warp_reduce-true345:                        ; preds = %intra_warp_reduce_write-after344
  %268 = zext i32 %.pre1158 to i64
  %269 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache17, i64 0, i64 0, i64 0, i64 %268
  %270 = icmp ult i32 %.pre1107, 16
  br i1 %270, label %inter_warp_reduce-true345.then1000, label %inter_warp_reduce-true345.cont999

inter_warp_reduce-true345.then1000:               ; preds = %inter_warp_reduce-true345
  %partial_reduction_result349.then.val = load float, ptr addrspace(3) %269, align 4
  br label %inter_warp_reduce-true345.cont999

inter_warp_reduce-true345.cont999:                ; preds = %inter_warp_reduce-true345, %inter_warp_reduce-true345.then1000
  %partial_reduction_result349 = phi float [ %partial_reduction_result349.then.val, %inter_warp_reduce-true345.then1000 ], [ -0.000000e+00, %inter_warp_reduce-true345 ]
  %271 = icmp ult i32 %.pre1107, 16
  %272 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result349, i32 16, i32 31)
  br i1 %271, label %inter_warp_reduce-true345.then, label %inter_warp_reduce-true345.cont

inter_warp_reduce-true345.then:                   ; preds = %inter_warp_reduce-true345.cont999
  %.val817.then.val = load float, ptr addrspace(3) %269, align 4
  br label %inter_warp_reduce-true345.cont

inter_warp_reduce-true345.cont:                   ; preds = %inter_warp_reduce-true345.cont999, %inter_warp_reduce-true345.then
  %.val817 = phi float [ %.val817.then.val, %inter_warp_reduce-true345.then ], [ -0.000000e+00, %inter_warp_reduce-true345.cont999 ]
  %273 = icmp ult i32 %.pre1107, 16
  %add.44.i912 = fadd float %272, %.val817
  br i1 %273, label %inter_warp_reduce-true345.cont.then998, label %inter_warp_reduce-true345.cont.cont997

inter_warp_reduce-true345.cont.then998:           ; preds = %inter_warp_reduce-true345.cont
  store float %add.44.i912, ptr addrspace(3) %269, align 4
  br label %inter_warp_reduce-true345.cont.cont997

inter_warp_reduce-true345.cont.cont997:           ; preds = %inter_warp_reduce-true345.cont, %inter_warp_reduce-true345.cont.then998
  %initial_value_addr347.0 = phi float [ -0.000000e+00, %inter_warp_reduce-true345.cont.then998 ], [ %add.44.i912, %inter_warp_reduce-true345.cont ]
  %274 = icmp ult i32 %.pre1107, 16
  %275 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.44.i912, i32 8, i32 31)
  br i1 %274, label %inter_warp_reduce-true345.cont.then, label %inter_warp_reduce-true345.cont.cont

inter_warp_reduce-true345.cont.then:              ; preds = %inter_warp_reduce-true345.cont.cont997
  %.val816.then.val = load float, ptr addrspace(3) %269, align 4
  br label %inter_warp_reduce-true345.cont.cont

inter_warp_reduce-true345.cont.cont:              ; preds = %inter_warp_reduce-true345.cont.cont997, %inter_warp_reduce-true345.cont.then
  %.val816 = phi float [ %.val816.then.val, %inter_warp_reduce-true345.cont.then ], [ %initial_value_addr347.0, %inter_warp_reduce-true345.cont.cont997 ]
  %276 = icmp ult i32 %.pre1107, 16
  %add.44.i913 = fadd float %275, %.val816
  br i1 %276, label %inter_warp_reduce-true345.cont.cont.then996, label %inter_warp_reduce-true345.cont.cont.cont995

inter_warp_reduce-true345.cont.cont.then996:      ; preds = %inter_warp_reduce-true345.cont.cont
  store float %add.44.i913, ptr addrspace(3) %269, align 4
  br label %inter_warp_reduce-true345.cont.cont.cont995

inter_warp_reduce-true345.cont.cont.cont995:      ; preds = %inter_warp_reduce-true345.cont.cont, %inter_warp_reduce-true345.cont.cont.then996
  %initial_value_addr347.1 = phi float [ %initial_value_addr347.0, %inter_warp_reduce-true345.cont.cont.then996 ], [ %add.44.i913, %inter_warp_reduce-true345.cont.cont ]
  %277 = icmp ult i32 %.pre1107, 16
  %278 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.44.i913, i32 4, i32 31)
  br i1 %277, label %inter_warp_reduce-true345.cont.cont.then, label %inter_warp_reduce-true345.cont.cont.cont

inter_warp_reduce-true345.cont.cont.then:         ; preds = %inter_warp_reduce-true345.cont.cont.cont995
  %.val815.then.val = load float, ptr addrspace(3) %269, align 4
  br label %inter_warp_reduce-true345.cont.cont.cont

inter_warp_reduce-true345.cont.cont.cont:         ; preds = %inter_warp_reduce-true345.cont.cont.cont995, %inter_warp_reduce-true345.cont.cont.then
  %.val815 = phi float [ %.val815.then.val, %inter_warp_reduce-true345.cont.cont.then ], [ %initial_value_addr347.1, %inter_warp_reduce-true345.cont.cont.cont995 ]
  %279 = icmp ult i32 %.pre1107, 16
  %add.44.i914 = fadd float %278, %.val815
  br i1 %279, label %inter_warp_reduce-true345.cont.cont.cont.then994, label %inter_warp_reduce-true345.cont.cont.cont.cont993

inter_warp_reduce-true345.cont.cont.cont.then994: ; preds = %inter_warp_reduce-true345.cont.cont.cont
  store float %add.44.i914, ptr addrspace(3) %269, align 4
  br label %inter_warp_reduce-true345.cont.cont.cont.cont993

inter_warp_reduce-true345.cont.cont.cont.cont993: ; preds = %inter_warp_reduce-true345.cont.cont.cont, %inter_warp_reduce-true345.cont.cont.cont.then994
  %initial_value_addr347.2 = phi float [ %initial_value_addr347.1, %inter_warp_reduce-true345.cont.cont.cont.then994 ], [ %add.44.i914, %inter_warp_reduce-true345.cont.cont.cont ]
  %280 = icmp ult i32 %.pre1107, 16
  %281 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.44.i914, i32 2, i32 31)
  br i1 %280, label %inter_warp_reduce-true345.cont.cont.cont.then, label %inter_warp_reduce-true345.cont.cont.cont.cont

inter_warp_reduce-true345.cont.cont.cont.then:    ; preds = %inter_warp_reduce-true345.cont.cont.cont.cont993
  %.val814.then.val = load float, ptr addrspace(3) %269, align 4
  br label %inter_warp_reduce-true345.cont.cont.cont.cont

inter_warp_reduce-true345.cont.cont.cont.cont:    ; preds = %inter_warp_reduce-true345.cont.cont.cont.cont993, %inter_warp_reduce-true345.cont.cont.cont.then
  %.val814 = phi float [ %.val814.then.val, %inter_warp_reduce-true345.cont.cont.cont.then ], [ %initial_value_addr347.2, %inter_warp_reduce-true345.cont.cont.cont.cont993 ]
  %282 = icmp ult i32 %.pre1107, 16
  %add.44.i915 = fadd float %281, %.val814
  br i1 %282, label %inter_warp_reduce-true345.cont.cont.cont.cont.then992, label %inter_warp_reduce-true345.cont.cont.cont.cont.cont991

inter_warp_reduce-true345.cont.cont.cont.cont.then992: ; preds = %inter_warp_reduce-true345.cont.cont.cont.cont
  store float %add.44.i915, ptr addrspace(3) %269, align 4
  br label %inter_warp_reduce-true345.cont.cont.cont.cont.cont991

inter_warp_reduce-true345.cont.cont.cont.cont.cont991: ; preds = %inter_warp_reduce-true345.cont.cont.cont.cont, %inter_warp_reduce-true345.cont.cont.cont.cont.then992
  %initial_value_addr347.3 = phi float [ %initial_value_addr347.2, %inter_warp_reduce-true345.cont.cont.cont.cont.then992 ], [ %add.44.i915, %inter_warp_reduce-true345.cont.cont.cont.cont ]
  %283 = icmp ult i32 %.pre1107, 16
  %284 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.44.i915, i32 1, i32 31)
  br i1 %283, label %inter_warp_reduce-true345.cont.cont.cont.cont.then, label %inter_warp_reduce-true345.cont.cont.cont.cont.cont

inter_warp_reduce-true345.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true345.cont.cont.cont.cont.cont991
  %.val813.then.val = load float, ptr addrspace(3) %269, align 4
  br label %inter_warp_reduce-true345.cont.cont.cont.cont.cont

inter_warp_reduce-true345.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true345.cont.cont.cont.cont.cont991, %inter_warp_reduce-true345.cont.cont.cont.cont.then
  %.val813 = phi float [ %.val813.then.val, %inter_warp_reduce-true345.cont.cont.cont.cont.then ], [ %initial_value_addr347.3, %inter_warp_reduce-true345.cont.cont.cont.cont.cont991 ]
  %285 = icmp ult i32 %.pre1107, 16
  %add.44.i916 = fadd float %284, %.val813
  br i1 %285, label %inter_warp_reduce-true345.cont.cont.cont.cont.cont.then, label %inter_warp_reduce-true345.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true345.cont.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true345.cont.cont.cont.cont.cont
  store float %add.44.i916, ptr addrspace(3) %269, align 4
  br label %inter_warp_reduce-true345.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true345.cont.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true345.cont.cont.cont.cont.cont, %inter_warp_reduce-true345.cont.cont.cont.cont.cont.then
  %286 = icmp eq i32 %.pre1107, 0
  br i1 %286, label %reduction_write_output-true363, label %common.ret

reduction_write_output-true363:                   ; preds = %inter_warp_reduce-true345.cont.cont.cont.cont.cont.cont
  store float %add.44.i916, ptr addrspace(1) %arg191405, align 128
  br label %common.ret

intra_warp_reduce_write-after445:                 ; preds = %intra_warp_reduce_write-true444, %entry.reduce-group-4-true_crit_edge
  tail call void @llvm.nvvm.barrier0()
  %287 = icmp ult i32 %.pre1159, 32
  br i1 %287, label %inter_warp_reduce-true446, label %common.ret

intra_warp_reduce_write-true444:                  ; preds = %entry.reduce-group-4-true_crit_edge
  store float %add.51.i920, ptr addrspace(3) %75, align 4
  br label %intra_warp_reduce_write-after445

inter_warp_reduce-true446:                        ; preds = %intra_warp_reduce_write-after445
  %288 = zext i32 %.pre1210 to i64
  %289 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache18, i64 0, i64 0, i64 0, i64 %288
  %290 = icmp ult i32 %.pre1159, 16
  br i1 %290, label %inter_warp_reduce-true446.then1010, label %inter_warp_reduce-true446.cont1009

inter_warp_reduce-true446.then1010:               ; preds = %inter_warp_reduce-true446
  %partial_reduction_result450.then.val = load float, ptr addrspace(3) %289, align 4
  br label %inter_warp_reduce-true446.cont1009

inter_warp_reduce-true446.cont1009:               ; preds = %inter_warp_reduce-true446, %inter_warp_reduce-true446.then1010
  %partial_reduction_result450 = phi float [ %partial_reduction_result450.then.val, %inter_warp_reduce-true446.then1010 ], [ -0.000000e+00, %inter_warp_reduce-true446 ]
  %291 = icmp ult i32 %.pre1159, 16
  %292 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result450, i32 16, i32 31)
  br i1 %291, label %inter_warp_reduce-true446.then, label %inter_warp_reduce-true446.cont

inter_warp_reduce-true446.then:                   ; preds = %inter_warp_reduce-true446.cont1009
  %.val829.then.val = load float, ptr addrspace(3) %289, align 4
  br label %inter_warp_reduce-true446.cont

inter_warp_reduce-true446.cont:                   ; preds = %inter_warp_reduce-true446.cont1009, %inter_warp_reduce-true446.then
  %.val829 = phi float [ %.val829.then.val, %inter_warp_reduce-true446.then ], [ -0.000000e+00, %inter_warp_reduce-true446.cont1009 ]
  %293 = icmp ult i32 %.pre1159, 16
  %add.51.i923 = fadd float %292, %.val829
  br i1 %293, label %inter_warp_reduce-true446.cont.then1008, label %inter_warp_reduce-true446.cont.cont1007

inter_warp_reduce-true446.cont.then1008:          ; preds = %inter_warp_reduce-true446.cont
  store float %add.51.i923, ptr addrspace(3) %289, align 4
  br label %inter_warp_reduce-true446.cont.cont1007

inter_warp_reduce-true446.cont.cont1007:          ; preds = %inter_warp_reduce-true446.cont, %inter_warp_reduce-true446.cont.then1008
  %initial_value_addr448.0 = phi float [ -0.000000e+00, %inter_warp_reduce-true446.cont.then1008 ], [ %add.51.i923, %inter_warp_reduce-true446.cont ]
  %294 = icmp ult i32 %.pre1159, 16
  %295 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.51.i923, i32 8, i32 31)
  br i1 %294, label %inter_warp_reduce-true446.cont.then, label %inter_warp_reduce-true446.cont.cont

inter_warp_reduce-true446.cont.then:              ; preds = %inter_warp_reduce-true446.cont.cont1007
  %.val828.then.val = load float, ptr addrspace(3) %289, align 4
  br label %inter_warp_reduce-true446.cont.cont

inter_warp_reduce-true446.cont.cont:              ; preds = %inter_warp_reduce-true446.cont.cont1007, %inter_warp_reduce-true446.cont.then
  %.val828 = phi float [ %.val828.then.val, %inter_warp_reduce-true446.cont.then ], [ %initial_value_addr448.0, %inter_warp_reduce-true446.cont.cont1007 ]
  %296 = icmp ult i32 %.pre1159, 16
  %add.51.i924 = fadd float %295, %.val828
  br i1 %296, label %inter_warp_reduce-true446.cont.cont.then1006, label %inter_warp_reduce-true446.cont.cont.cont1005

inter_warp_reduce-true446.cont.cont.then1006:     ; preds = %inter_warp_reduce-true446.cont.cont
  store float %add.51.i924, ptr addrspace(3) %289, align 4
  br label %inter_warp_reduce-true446.cont.cont.cont1005

inter_warp_reduce-true446.cont.cont.cont1005:     ; preds = %inter_warp_reduce-true446.cont.cont, %inter_warp_reduce-true446.cont.cont.then1006
  %initial_value_addr448.1 = phi float [ %initial_value_addr448.0, %inter_warp_reduce-true446.cont.cont.then1006 ], [ %add.51.i924, %inter_warp_reduce-true446.cont.cont ]
  %297 = icmp ult i32 %.pre1159, 16
  %298 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.51.i924, i32 4, i32 31)
  br i1 %297, label %inter_warp_reduce-true446.cont.cont.then, label %inter_warp_reduce-true446.cont.cont.cont

inter_warp_reduce-true446.cont.cont.then:         ; preds = %inter_warp_reduce-true446.cont.cont.cont1005
  %.val827.then.val = load float, ptr addrspace(3) %289, align 4
  br label %inter_warp_reduce-true446.cont.cont.cont

inter_warp_reduce-true446.cont.cont.cont:         ; preds = %inter_warp_reduce-true446.cont.cont.cont1005, %inter_warp_reduce-true446.cont.cont.then
  %.val827 = phi float [ %.val827.then.val, %inter_warp_reduce-true446.cont.cont.then ], [ %initial_value_addr448.1, %inter_warp_reduce-true446.cont.cont.cont1005 ]
  %299 = icmp ult i32 %.pre1159, 16
  %add.51.i925 = fadd float %298, %.val827
  br i1 %299, label %inter_warp_reduce-true446.cont.cont.cont.then1004, label %inter_warp_reduce-true446.cont.cont.cont.cont1003

inter_warp_reduce-true446.cont.cont.cont.then1004: ; preds = %inter_warp_reduce-true446.cont.cont.cont
  store float %add.51.i925, ptr addrspace(3) %289, align 4
  br label %inter_warp_reduce-true446.cont.cont.cont.cont1003

inter_warp_reduce-true446.cont.cont.cont.cont1003: ; preds = %inter_warp_reduce-true446.cont.cont.cont, %inter_warp_reduce-true446.cont.cont.cont.then1004
  %initial_value_addr448.2 = phi float [ %initial_value_addr448.1, %inter_warp_reduce-true446.cont.cont.cont.then1004 ], [ %add.51.i925, %inter_warp_reduce-true446.cont.cont.cont ]
  %300 = icmp ult i32 %.pre1159, 16
  %301 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.51.i925, i32 2, i32 31)
  br i1 %300, label %inter_warp_reduce-true446.cont.cont.cont.then, label %inter_warp_reduce-true446.cont.cont.cont.cont

inter_warp_reduce-true446.cont.cont.cont.then:    ; preds = %inter_warp_reduce-true446.cont.cont.cont.cont1003
  %.val826.then.val = load float, ptr addrspace(3) %289, align 4
  br label %inter_warp_reduce-true446.cont.cont.cont.cont

inter_warp_reduce-true446.cont.cont.cont.cont:    ; preds = %inter_warp_reduce-true446.cont.cont.cont.cont1003, %inter_warp_reduce-true446.cont.cont.cont.then
  %.val826 = phi float [ %.val826.then.val, %inter_warp_reduce-true446.cont.cont.cont.then ], [ %initial_value_addr448.2, %inter_warp_reduce-true446.cont.cont.cont.cont1003 ]
  %302 = icmp ult i32 %.pre1159, 16
  %add.51.i926 = fadd float %301, %.val826
  br i1 %302, label %inter_warp_reduce-true446.cont.cont.cont.cont.then1002, label %inter_warp_reduce-true446.cont.cont.cont.cont.cont1001

inter_warp_reduce-true446.cont.cont.cont.cont.then1002: ; preds = %inter_warp_reduce-true446.cont.cont.cont.cont
  store float %add.51.i926, ptr addrspace(3) %289, align 4
  br label %inter_warp_reduce-true446.cont.cont.cont.cont.cont1001

inter_warp_reduce-true446.cont.cont.cont.cont.cont1001: ; preds = %inter_warp_reduce-true446.cont.cont.cont.cont, %inter_warp_reduce-true446.cont.cont.cont.cont.then1002
  %initial_value_addr448.3 = phi float [ %initial_value_addr448.2, %inter_warp_reduce-true446.cont.cont.cont.cont.then1002 ], [ %add.51.i926, %inter_warp_reduce-true446.cont.cont.cont.cont ]
  %303 = icmp ult i32 %.pre1159, 16
  %304 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.51.i926, i32 1, i32 31)
  br i1 %303, label %inter_warp_reduce-true446.cont.cont.cont.cont.then, label %inter_warp_reduce-true446.cont.cont.cont.cont.cont

inter_warp_reduce-true446.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true446.cont.cont.cont.cont.cont1001
  %.val825.then.val = load float, ptr addrspace(3) %289, align 4
  br label %inter_warp_reduce-true446.cont.cont.cont.cont.cont

inter_warp_reduce-true446.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true446.cont.cont.cont.cont.cont1001, %inter_warp_reduce-true446.cont.cont.cont.cont.then
  %.val825 = phi float [ %.val825.then.val, %inter_warp_reduce-true446.cont.cont.cont.cont.then ], [ %initial_value_addr448.3, %inter_warp_reduce-true446.cont.cont.cont.cont.cont1001 ]
  %305 = icmp ult i32 %.pre1159, 16
  %add.51.i927 = fadd float %304, %.val825
  br i1 %305, label %inter_warp_reduce-true446.cont.cont.cont.cont.cont.then, label %inter_warp_reduce-true446.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true446.cont.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true446.cont.cont.cont.cont.cont
  store float %add.51.i927, ptr addrspace(3) %289, align 4
  br label %inter_warp_reduce-true446.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true446.cont.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true446.cont.cont.cont.cont.cont, %inter_warp_reduce-true446.cont.cont.cont.cont.cont.then
  %306 = icmp eq i32 %.pre1159, 0
  br i1 %306, label %reduction_write_output-true464, label %common.ret

reduction_write_output-true464:                   ; preds = %inter_warp_reduce-true446.cont.cont.cont.cont.cont.cont
  store float %add.51.i927, ptr addrspace(1) %arg201407, align 128
  br label %common.ret

intra_warp_reduce_write-after546:                 ; preds = %intra_warp_reduce_write-true545, %entry.reduce-group-5-true_crit_edge
  tail call void @llvm.nvvm.barrier0()
  %307 = icmp ult i32 %.pre1211, 32
  br i1 %307, label %inter_warp_reduce-true547, label %common.ret

intra_warp_reduce_write-true545:                  ; preds = %entry.reduce-group-5-true_crit_edge
  store float %add.58.i931, ptr addrspace(3) %100, align 4
  br label %intra_warp_reduce_write-after546

inter_warp_reduce-true547:                        ; preds = %intra_warp_reduce_write-after546
  %308 = zext i32 %.pre1262 to i64
  %309 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache19, i64 0, i64 0, i64 0, i64 %308
  %310 = icmp ult i32 %.pre1211, 16
  br i1 %310, label %inter_warp_reduce-true547.then1020, label %inter_warp_reduce-true547.cont1019

inter_warp_reduce-true547.then1020:               ; preds = %inter_warp_reduce-true547
  %partial_reduction_result551.then.val = load float, ptr addrspace(3) %309, align 4
  br label %inter_warp_reduce-true547.cont1019

inter_warp_reduce-true547.cont1019:               ; preds = %inter_warp_reduce-true547, %inter_warp_reduce-true547.then1020
  %partial_reduction_result551 = phi float [ %partial_reduction_result551.then.val, %inter_warp_reduce-true547.then1020 ], [ -0.000000e+00, %inter_warp_reduce-true547 ]
  %311 = icmp ult i32 %.pre1211, 16
  %312 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result551, i32 16, i32 31)
  br i1 %311, label %inter_warp_reduce-true547.then, label %inter_warp_reduce-true547.cont

inter_warp_reduce-true547.then:                   ; preds = %inter_warp_reduce-true547.cont1019
  %.val841.then.val = load float, ptr addrspace(3) %309, align 4
  br label %inter_warp_reduce-true547.cont

inter_warp_reduce-true547.cont:                   ; preds = %inter_warp_reduce-true547.cont1019, %inter_warp_reduce-true547.then
  %.val841 = phi float [ %.val841.then.val, %inter_warp_reduce-true547.then ], [ -0.000000e+00, %inter_warp_reduce-true547.cont1019 ]
  %313 = icmp ult i32 %.pre1211, 16
  %add.58.i934 = fadd float %312, %.val841
  br i1 %313, label %inter_warp_reduce-true547.cont.then1018, label %inter_warp_reduce-true547.cont.cont1017

inter_warp_reduce-true547.cont.then1018:          ; preds = %inter_warp_reduce-true547.cont
  store float %add.58.i934, ptr addrspace(3) %309, align 4
  br label %inter_warp_reduce-true547.cont.cont1017

inter_warp_reduce-true547.cont.cont1017:          ; preds = %inter_warp_reduce-true547.cont, %inter_warp_reduce-true547.cont.then1018
  %initial_value_addr549.0 = phi float [ -0.000000e+00, %inter_warp_reduce-true547.cont.then1018 ], [ %add.58.i934, %inter_warp_reduce-true547.cont ]
  %314 = icmp ult i32 %.pre1211, 16
  %315 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.58.i934, i32 8, i32 31)
  br i1 %314, label %inter_warp_reduce-true547.cont.then, label %inter_warp_reduce-true547.cont.cont

inter_warp_reduce-true547.cont.then:              ; preds = %inter_warp_reduce-true547.cont.cont1017
  %.val840.then.val = load float, ptr addrspace(3) %309, align 4
  br label %inter_warp_reduce-true547.cont.cont

inter_warp_reduce-true547.cont.cont:              ; preds = %inter_warp_reduce-true547.cont.cont1017, %inter_warp_reduce-true547.cont.then
  %.val840 = phi float [ %.val840.then.val, %inter_warp_reduce-true547.cont.then ], [ %initial_value_addr549.0, %inter_warp_reduce-true547.cont.cont1017 ]
  %316 = icmp ult i32 %.pre1211, 16
  %add.58.i935 = fadd float %315, %.val840
  br i1 %316, label %inter_warp_reduce-true547.cont.cont.then1016, label %inter_warp_reduce-true547.cont.cont.cont1015

inter_warp_reduce-true547.cont.cont.then1016:     ; preds = %inter_warp_reduce-true547.cont.cont
  store float %add.58.i935, ptr addrspace(3) %309, align 4
  br label %inter_warp_reduce-true547.cont.cont.cont1015

inter_warp_reduce-true547.cont.cont.cont1015:     ; preds = %inter_warp_reduce-true547.cont.cont, %inter_warp_reduce-true547.cont.cont.then1016
  %initial_value_addr549.1 = phi float [ %initial_value_addr549.0, %inter_warp_reduce-true547.cont.cont.then1016 ], [ %add.58.i935, %inter_warp_reduce-true547.cont.cont ]
  %317 = icmp ult i32 %.pre1211, 16
  %318 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.58.i935, i32 4, i32 31)
  br i1 %317, label %inter_warp_reduce-true547.cont.cont.then, label %inter_warp_reduce-true547.cont.cont.cont

inter_warp_reduce-true547.cont.cont.then:         ; preds = %inter_warp_reduce-true547.cont.cont.cont1015
  %.val839.then.val = load float, ptr addrspace(3) %309, align 4
  br label %inter_warp_reduce-true547.cont.cont.cont

inter_warp_reduce-true547.cont.cont.cont:         ; preds = %inter_warp_reduce-true547.cont.cont.cont1015, %inter_warp_reduce-true547.cont.cont.then
  %.val839 = phi float [ %.val839.then.val, %inter_warp_reduce-true547.cont.cont.then ], [ %initial_value_addr549.1, %inter_warp_reduce-true547.cont.cont.cont1015 ]
  %319 = icmp ult i32 %.pre1211, 16
  %add.58.i936 = fadd float %318, %.val839
  br i1 %319, label %inter_warp_reduce-true547.cont.cont.cont.then1014, label %inter_warp_reduce-true547.cont.cont.cont.cont1013

inter_warp_reduce-true547.cont.cont.cont.then1014: ; preds = %inter_warp_reduce-true547.cont.cont.cont
  store float %add.58.i936, ptr addrspace(3) %309, align 4
  br label %inter_warp_reduce-true547.cont.cont.cont.cont1013

inter_warp_reduce-true547.cont.cont.cont.cont1013: ; preds = %inter_warp_reduce-true547.cont.cont.cont, %inter_warp_reduce-true547.cont.cont.cont.then1014
  %initial_value_addr549.2 = phi float [ %initial_value_addr549.1, %inter_warp_reduce-true547.cont.cont.cont.then1014 ], [ %add.58.i936, %inter_warp_reduce-true547.cont.cont.cont ]
  %320 = icmp ult i32 %.pre1211, 16
  %321 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.58.i936, i32 2, i32 31)
  br i1 %320, label %inter_warp_reduce-true547.cont.cont.cont.then, label %inter_warp_reduce-true547.cont.cont.cont.cont

inter_warp_reduce-true547.cont.cont.cont.then:    ; preds = %inter_warp_reduce-true547.cont.cont.cont.cont1013
  %.val838.then.val = load float, ptr addrspace(3) %309, align 4
  br label %inter_warp_reduce-true547.cont.cont.cont.cont

inter_warp_reduce-true547.cont.cont.cont.cont:    ; preds = %inter_warp_reduce-true547.cont.cont.cont.cont1013, %inter_warp_reduce-true547.cont.cont.cont.then
  %.val838 = phi float [ %.val838.then.val, %inter_warp_reduce-true547.cont.cont.cont.then ], [ %initial_value_addr549.2, %inter_warp_reduce-true547.cont.cont.cont.cont1013 ]
  %322 = icmp ult i32 %.pre1211, 16
  %add.58.i937 = fadd float %321, %.val838
  br i1 %322, label %inter_warp_reduce-true547.cont.cont.cont.cont.then1012, label %inter_warp_reduce-true547.cont.cont.cont.cont.cont1011

inter_warp_reduce-true547.cont.cont.cont.cont.then1012: ; preds = %inter_warp_reduce-true547.cont.cont.cont.cont
  store float %add.58.i937, ptr addrspace(3) %309, align 4
  br label %inter_warp_reduce-true547.cont.cont.cont.cont.cont1011

inter_warp_reduce-true547.cont.cont.cont.cont.cont1011: ; preds = %inter_warp_reduce-true547.cont.cont.cont.cont, %inter_warp_reduce-true547.cont.cont.cont.cont.then1012
  %initial_value_addr549.3 = phi float [ %initial_value_addr549.2, %inter_warp_reduce-true547.cont.cont.cont.cont.then1012 ], [ %add.58.i937, %inter_warp_reduce-true547.cont.cont.cont.cont ]
  %323 = icmp ult i32 %.pre1211, 16
  %324 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.58.i937, i32 1, i32 31)
  br i1 %323, label %inter_warp_reduce-true547.cont.cont.cont.cont.then, label %inter_warp_reduce-true547.cont.cont.cont.cont.cont

inter_warp_reduce-true547.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true547.cont.cont.cont.cont.cont1011
  %.val837.then.val = load float, ptr addrspace(3) %309, align 4
  br label %inter_warp_reduce-true547.cont.cont.cont.cont.cont

inter_warp_reduce-true547.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true547.cont.cont.cont.cont.cont1011, %inter_warp_reduce-true547.cont.cont.cont.cont.then
  %.val837 = phi float [ %.val837.then.val, %inter_warp_reduce-true547.cont.cont.cont.cont.then ], [ %initial_value_addr549.3, %inter_warp_reduce-true547.cont.cont.cont.cont.cont1011 ]
  %325 = icmp ult i32 %.pre1211, 16
  %add.58.i938 = fadd float %324, %.val837
  br i1 %325, label %inter_warp_reduce-true547.cont.cont.cont.cont.cont.then, label %inter_warp_reduce-true547.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true547.cont.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true547.cont.cont.cont.cont.cont
  store float %add.58.i938, ptr addrspace(3) %309, align 4
  br label %inter_warp_reduce-true547.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true547.cont.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true547.cont.cont.cont.cont.cont, %inter_warp_reduce-true547.cont.cont.cont.cont.cont.then
  %326 = icmp eq i32 %.pre1211, 0
  br i1 %326, label %reduction_write_output-true565, label %common.ret

reduction_write_output-true565:                   ; preds = %inter_warp_reduce-true547.cont.cont.cont.cont.cont.cont
  store float %add.58.i938, ptr addrspace(1) %arg211409, align 128
  br label %common.ret

intra_warp_reduce_write-after647:                 ; preds = %intra_warp_reduce_write-true646, %entry.reduce-group-6-true_crit_edge
  tail call void @llvm.nvvm.barrier0()
  %327 = icmp ult i32 %.pre1263, 32
  br i1 %327, label %inter_warp_reduce-true648, label %common.ret

intra_warp_reduce_write-true646:                  ; preds = %entry.reduce-group-6-true_crit_edge
  store float %add.65.i942, ptr addrspace(3) %125, align 4
  br label %intra_warp_reduce_write-after647

inter_warp_reduce-true648:                        ; preds = %intra_warp_reduce_write-after647
  %328 = zext i32 %.pre1314 to i64
  %329 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache20, i64 0, i64 0, i64 0, i64 %328
  %330 = icmp ult i32 %.pre1263, 16
  br i1 %330, label %inter_warp_reduce-true648.then1030, label %inter_warp_reduce-true648.cont1029

inter_warp_reduce-true648.then1030:               ; preds = %inter_warp_reduce-true648
  %partial_reduction_result652.then.val = load float, ptr addrspace(3) %329, align 4
  br label %inter_warp_reduce-true648.cont1029

inter_warp_reduce-true648.cont1029:               ; preds = %inter_warp_reduce-true648, %inter_warp_reduce-true648.then1030
  %partial_reduction_result652 = phi float [ %partial_reduction_result652.then.val, %inter_warp_reduce-true648.then1030 ], [ -0.000000e+00, %inter_warp_reduce-true648 ]
  %331 = icmp ult i32 %.pre1263, 16
  %332 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result652, i32 16, i32 31)
  br i1 %331, label %inter_warp_reduce-true648.then, label %inter_warp_reduce-true648.cont

inter_warp_reduce-true648.then:                   ; preds = %inter_warp_reduce-true648.cont1029
  %.val853.then.val = load float, ptr addrspace(3) %329, align 4
  br label %inter_warp_reduce-true648.cont

inter_warp_reduce-true648.cont:                   ; preds = %inter_warp_reduce-true648.cont1029, %inter_warp_reduce-true648.then
  %.val853 = phi float [ %.val853.then.val, %inter_warp_reduce-true648.then ], [ -0.000000e+00, %inter_warp_reduce-true648.cont1029 ]
  %333 = icmp ult i32 %.pre1263, 16
  %add.65.i945 = fadd float %332, %.val853
  br i1 %333, label %inter_warp_reduce-true648.cont.then1028, label %inter_warp_reduce-true648.cont.cont1027

inter_warp_reduce-true648.cont.then1028:          ; preds = %inter_warp_reduce-true648.cont
  store float %add.65.i945, ptr addrspace(3) %329, align 4
  br label %inter_warp_reduce-true648.cont.cont1027

inter_warp_reduce-true648.cont.cont1027:          ; preds = %inter_warp_reduce-true648.cont, %inter_warp_reduce-true648.cont.then1028
  %initial_value_addr650.0 = phi float [ -0.000000e+00, %inter_warp_reduce-true648.cont.then1028 ], [ %add.65.i945, %inter_warp_reduce-true648.cont ]
  %334 = icmp ult i32 %.pre1263, 16
  %335 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.65.i945, i32 8, i32 31)
  br i1 %334, label %inter_warp_reduce-true648.cont.then, label %inter_warp_reduce-true648.cont.cont

inter_warp_reduce-true648.cont.then:              ; preds = %inter_warp_reduce-true648.cont.cont1027
  %.val852.then.val = load float, ptr addrspace(3) %329, align 4
  br label %inter_warp_reduce-true648.cont.cont

inter_warp_reduce-true648.cont.cont:              ; preds = %inter_warp_reduce-true648.cont.cont1027, %inter_warp_reduce-true648.cont.then
  %.val852 = phi float [ %.val852.then.val, %inter_warp_reduce-true648.cont.then ], [ %initial_value_addr650.0, %inter_warp_reduce-true648.cont.cont1027 ]
  %336 = icmp ult i32 %.pre1263, 16
  %add.65.i946 = fadd float %335, %.val852
  br i1 %336, label %inter_warp_reduce-true648.cont.cont.then1026, label %inter_warp_reduce-true648.cont.cont.cont1025

inter_warp_reduce-true648.cont.cont.then1026:     ; preds = %inter_warp_reduce-true648.cont.cont
  store float %add.65.i946, ptr addrspace(3) %329, align 4
  br label %inter_warp_reduce-true648.cont.cont.cont1025

inter_warp_reduce-true648.cont.cont.cont1025:     ; preds = %inter_warp_reduce-true648.cont.cont, %inter_warp_reduce-true648.cont.cont.then1026
  %initial_value_addr650.1 = phi float [ %initial_value_addr650.0, %inter_warp_reduce-true648.cont.cont.then1026 ], [ %add.65.i946, %inter_warp_reduce-true648.cont.cont ]
  %337 = icmp ult i32 %.pre1263, 16
  %338 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.65.i946, i32 4, i32 31)
  br i1 %337, label %inter_warp_reduce-true648.cont.cont.then, label %inter_warp_reduce-true648.cont.cont.cont

inter_warp_reduce-true648.cont.cont.then:         ; preds = %inter_warp_reduce-true648.cont.cont.cont1025
  %.val851.then.val = load float, ptr addrspace(3) %329, align 4
  br label %inter_warp_reduce-true648.cont.cont.cont

inter_warp_reduce-true648.cont.cont.cont:         ; preds = %inter_warp_reduce-true648.cont.cont.cont1025, %inter_warp_reduce-true648.cont.cont.then
  %.val851 = phi float [ %.val851.then.val, %inter_warp_reduce-true648.cont.cont.then ], [ %initial_value_addr650.1, %inter_warp_reduce-true648.cont.cont.cont1025 ]
  %339 = icmp ult i32 %.pre1263, 16
  %add.65.i947 = fadd float %338, %.val851
  br i1 %339, label %inter_warp_reduce-true648.cont.cont.cont.then1024, label %inter_warp_reduce-true648.cont.cont.cont.cont1023

inter_warp_reduce-true648.cont.cont.cont.then1024: ; preds = %inter_warp_reduce-true648.cont.cont.cont
  store float %add.65.i947, ptr addrspace(3) %329, align 4
  br label %inter_warp_reduce-true648.cont.cont.cont.cont1023

inter_warp_reduce-true648.cont.cont.cont.cont1023: ; preds = %inter_warp_reduce-true648.cont.cont.cont, %inter_warp_reduce-true648.cont.cont.cont.then1024
  %initial_value_addr650.2 = phi float [ %initial_value_addr650.1, %inter_warp_reduce-true648.cont.cont.cont.then1024 ], [ %add.65.i947, %inter_warp_reduce-true648.cont.cont.cont ]
  %340 = icmp ult i32 %.pre1263, 16
  %341 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.65.i947, i32 2, i32 31)
  br i1 %340, label %inter_warp_reduce-true648.cont.cont.cont.then, label %inter_warp_reduce-true648.cont.cont.cont.cont

inter_warp_reduce-true648.cont.cont.cont.then:    ; preds = %inter_warp_reduce-true648.cont.cont.cont.cont1023
  %.val850.then.val = load float, ptr addrspace(3) %329, align 4
  br label %inter_warp_reduce-true648.cont.cont.cont.cont

inter_warp_reduce-true648.cont.cont.cont.cont:    ; preds = %inter_warp_reduce-true648.cont.cont.cont.cont1023, %inter_warp_reduce-true648.cont.cont.cont.then
  %.val850 = phi float [ %.val850.then.val, %inter_warp_reduce-true648.cont.cont.cont.then ], [ %initial_value_addr650.2, %inter_warp_reduce-true648.cont.cont.cont.cont1023 ]
  %342 = icmp ult i32 %.pre1263, 16
  %add.65.i948 = fadd float %341, %.val850
  br i1 %342, label %inter_warp_reduce-true648.cont.cont.cont.cont.then1022, label %inter_warp_reduce-true648.cont.cont.cont.cont.cont1021

inter_warp_reduce-true648.cont.cont.cont.cont.then1022: ; preds = %inter_warp_reduce-true648.cont.cont.cont.cont
  store float %add.65.i948, ptr addrspace(3) %329, align 4
  br label %inter_warp_reduce-true648.cont.cont.cont.cont.cont1021

inter_warp_reduce-true648.cont.cont.cont.cont.cont1021: ; preds = %inter_warp_reduce-true648.cont.cont.cont.cont, %inter_warp_reduce-true648.cont.cont.cont.cont.then1022
  %initial_value_addr650.3 = phi float [ %initial_value_addr650.2, %inter_warp_reduce-true648.cont.cont.cont.cont.then1022 ], [ %add.65.i948, %inter_warp_reduce-true648.cont.cont.cont.cont ]
  %343 = icmp ult i32 %.pre1263, 16
  %344 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.65.i948, i32 1, i32 31)
  br i1 %343, label %inter_warp_reduce-true648.cont.cont.cont.cont.then, label %inter_warp_reduce-true648.cont.cont.cont.cont.cont

inter_warp_reduce-true648.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true648.cont.cont.cont.cont.cont1021
  %.val849.then.val = load float, ptr addrspace(3) %329, align 4
  br label %inter_warp_reduce-true648.cont.cont.cont.cont.cont

inter_warp_reduce-true648.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true648.cont.cont.cont.cont.cont1021, %inter_warp_reduce-true648.cont.cont.cont.cont.then
  %.val849 = phi float [ %.val849.then.val, %inter_warp_reduce-true648.cont.cont.cont.cont.then ], [ %initial_value_addr650.3, %inter_warp_reduce-true648.cont.cont.cont.cont.cont1021 ]
  %345 = icmp ult i32 %.pre1263, 16
  %add.65.i949 = fadd float %344, %.val849
  br i1 %345, label %inter_warp_reduce-true648.cont.cont.cont.cont.cont.then, label %inter_warp_reduce-true648.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true648.cont.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true648.cont.cont.cont.cont.cont
  store float %add.65.i949, ptr addrspace(3) %329, align 4
  br label %inter_warp_reduce-true648.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true648.cont.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true648.cont.cont.cont.cont.cont, %inter_warp_reduce-true648.cont.cont.cont.cont.cont.then
  %346 = icmp eq i32 %.pre1263, 0
  br i1 %346, label %reduction_write_output-true666, label %common.ret

reduction_write_output-true666:                   ; preds = %inter_warp_reduce-true648.cont.cont.cont.cont.cont.cont
  store float %add.65.i949, ptr addrspace(1) %arg221411, align 128
  br label %common.ret

intra_warp_reduce_write-after748:                 ; preds = %intra_warp_reduce_write-true747, %entry.reduce-group-7-true_crit_edge
  tail call void @llvm.nvvm.barrier0()
  %347 = icmp ult i32 %.pre1315, 32
  br i1 %347, label %inter_warp_reduce-true749, label %common.ret

intra_warp_reduce_write-true747:                  ; preds = %entry.reduce-group-7-true_crit_edge
  store float %add.72.i953, ptr addrspace(3) %150, align 4
  br label %intra_warp_reduce_write-after748

inter_warp_reduce-true749:                        ; preds = %intra_warp_reduce_write-after748
  %348 = zext i32 %.pre1366 to i64
  %349 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache21, i64 0, i64 0, i64 0, i64 %348
  %350 = icmp ult i32 %.pre1315, 16
  br i1 %350, label %inter_warp_reduce-true749.then1040, label %inter_warp_reduce-true749.cont1039

inter_warp_reduce-true749.then1040:               ; preds = %inter_warp_reduce-true749
  %partial_reduction_result753.then.val = load float, ptr addrspace(3) %349, align 4
  br label %inter_warp_reduce-true749.cont1039

inter_warp_reduce-true749.cont1039:               ; preds = %inter_warp_reduce-true749, %inter_warp_reduce-true749.then1040
  %partial_reduction_result753 = phi float [ %partial_reduction_result753.then.val, %inter_warp_reduce-true749.then1040 ], [ -0.000000e+00, %inter_warp_reduce-true749 ]
  %351 = icmp ult i32 %.pre1315, 16
  %352 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result753, i32 16, i32 31)
  br i1 %351, label %inter_warp_reduce-true749.then, label %inter_warp_reduce-true749.cont

inter_warp_reduce-true749.then:                   ; preds = %inter_warp_reduce-true749.cont1039
  %.val865.then.val = load float, ptr addrspace(3) %349, align 4
  br label %inter_warp_reduce-true749.cont

inter_warp_reduce-true749.cont:                   ; preds = %inter_warp_reduce-true749.cont1039, %inter_warp_reduce-true749.then
  %.val865 = phi float [ %.val865.then.val, %inter_warp_reduce-true749.then ], [ -0.000000e+00, %inter_warp_reduce-true749.cont1039 ]
  %353 = icmp ult i32 %.pre1315, 16
  %add.72.i956 = fadd float %352, %.val865
  br i1 %353, label %inter_warp_reduce-true749.cont.then1038, label %inter_warp_reduce-true749.cont.cont1037

inter_warp_reduce-true749.cont.then1038:          ; preds = %inter_warp_reduce-true749.cont
  store float %add.72.i956, ptr addrspace(3) %349, align 4
  br label %inter_warp_reduce-true749.cont.cont1037

inter_warp_reduce-true749.cont.cont1037:          ; preds = %inter_warp_reduce-true749.cont, %inter_warp_reduce-true749.cont.then1038
  %initial_value_addr751.0 = phi float [ -0.000000e+00, %inter_warp_reduce-true749.cont.then1038 ], [ %add.72.i956, %inter_warp_reduce-true749.cont ]
  %354 = icmp ult i32 %.pre1315, 16
  %355 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.72.i956, i32 8, i32 31)
  br i1 %354, label %inter_warp_reduce-true749.cont.then, label %inter_warp_reduce-true749.cont.cont

inter_warp_reduce-true749.cont.then:              ; preds = %inter_warp_reduce-true749.cont.cont1037
  %.val864.then.val = load float, ptr addrspace(3) %349, align 4
  br label %inter_warp_reduce-true749.cont.cont

inter_warp_reduce-true749.cont.cont:              ; preds = %inter_warp_reduce-true749.cont.cont1037, %inter_warp_reduce-true749.cont.then
  %.val864 = phi float [ %.val864.then.val, %inter_warp_reduce-true749.cont.then ], [ %initial_value_addr751.0, %inter_warp_reduce-true749.cont.cont1037 ]
  %356 = icmp ult i32 %.pre1315, 16
  %add.72.i957 = fadd float %355, %.val864
  br i1 %356, label %inter_warp_reduce-true749.cont.cont.then1036, label %inter_warp_reduce-true749.cont.cont.cont1035

inter_warp_reduce-true749.cont.cont.then1036:     ; preds = %inter_warp_reduce-true749.cont.cont
  store float %add.72.i957, ptr addrspace(3) %349, align 4
  br label %inter_warp_reduce-true749.cont.cont.cont1035

inter_warp_reduce-true749.cont.cont.cont1035:     ; preds = %inter_warp_reduce-true749.cont.cont, %inter_warp_reduce-true749.cont.cont.then1036
  %initial_value_addr751.1 = phi float [ %initial_value_addr751.0, %inter_warp_reduce-true749.cont.cont.then1036 ], [ %add.72.i957, %inter_warp_reduce-true749.cont.cont ]
  %357 = icmp ult i32 %.pre1315, 16
  %358 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.72.i957, i32 4, i32 31)
  br i1 %357, label %inter_warp_reduce-true749.cont.cont.then, label %inter_warp_reduce-true749.cont.cont.cont

inter_warp_reduce-true749.cont.cont.then:         ; preds = %inter_warp_reduce-true749.cont.cont.cont1035
  %.val863.then.val = load float, ptr addrspace(3) %349, align 4
  br label %inter_warp_reduce-true749.cont.cont.cont

inter_warp_reduce-true749.cont.cont.cont:         ; preds = %inter_warp_reduce-true749.cont.cont.cont1035, %inter_warp_reduce-true749.cont.cont.then
  %.val863 = phi float [ %.val863.then.val, %inter_warp_reduce-true749.cont.cont.then ], [ %initial_value_addr751.1, %inter_warp_reduce-true749.cont.cont.cont1035 ]
  %359 = icmp ult i32 %.pre1315, 16
  %add.72.i958 = fadd float %358, %.val863
  br i1 %359, label %inter_warp_reduce-true749.cont.cont.cont.then1034, label %inter_warp_reduce-true749.cont.cont.cont.cont1033

inter_warp_reduce-true749.cont.cont.cont.then1034: ; preds = %inter_warp_reduce-true749.cont.cont.cont
  store float %add.72.i958, ptr addrspace(3) %349, align 4
  br label %inter_warp_reduce-true749.cont.cont.cont.cont1033

inter_warp_reduce-true749.cont.cont.cont.cont1033: ; preds = %inter_warp_reduce-true749.cont.cont.cont, %inter_warp_reduce-true749.cont.cont.cont.then1034
  %initial_value_addr751.2 = phi float [ %initial_value_addr751.1, %inter_warp_reduce-true749.cont.cont.cont.then1034 ], [ %add.72.i958, %inter_warp_reduce-true749.cont.cont.cont ]
  %360 = icmp ult i32 %.pre1315, 16
  %361 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.72.i958, i32 2, i32 31)
  br i1 %360, label %inter_warp_reduce-true749.cont.cont.cont.then, label %inter_warp_reduce-true749.cont.cont.cont.cont

inter_warp_reduce-true749.cont.cont.cont.then:    ; preds = %inter_warp_reduce-true749.cont.cont.cont.cont1033
  %.val862.then.val = load float, ptr addrspace(3) %349, align 4
  br label %inter_warp_reduce-true749.cont.cont.cont.cont

inter_warp_reduce-true749.cont.cont.cont.cont:    ; preds = %inter_warp_reduce-true749.cont.cont.cont.cont1033, %inter_warp_reduce-true749.cont.cont.cont.then
  %.val862 = phi float [ %.val862.then.val, %inter_warp_reduce-true749.cont.cont.cont.then ], [ %initial_value_addr751.2, %inter_warp_reduce-true749.cont.cont.cont.cont1033 ]
  %362 = icmp ult i32 %.pre1315, 16
  %add.72.i959 = fadd float %361, %.val862
  br i1 %362, label %inter_warp_reduce-true749.cont.cont.cont.cont.then1032, label %inter_warp_reduce-true749.cont.cont.cont.cont.cont1031

inter_warp_reduce-true749.cont.cont.cont.cont.then1032: ; preds = %inter_warp_reduce-true749.cont.cont.cont.cont
  store float %add.72.i959, ptr addrspace(3) %349, align 4
  br label %inter_warp_reduce-true749.cont.cont.cont.cont.cont1031

inter_warp_reduce-true749.cont.cont.cont.cont.cont1031: ; preds = %inter_warp_reduce-true749.cont.cont.cont.cont, %inter_warp_reduce-true749.cont.cont.cont.cont.then1032
  %initial_value_addr751.3 = phi float [ %initial_value_addr751.2, %inter_warp_reduce-true749.cont.cont.cont.cont.then1032 ], [ %add.72.i959, %inter_warp_reduce-true749.cont.cont.cont.cont ]
  %363 = icmp ult i32 %.pre1315, 16
  %364 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.72.i959, i32 1, i32 31)
  br i1 %363, label %inter_warp_reduce-true749.cont.cont.cont.cont.then, label %inter_warp_reduce-true749.cont.cont.cont.cont.cont

inter_warp_reduce-true749.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true749.cont.cont.cont.cont.cont1031
  %.val861.then.val = load float, ptr addrspace(3) %349, align 4
  br label %inter_warp_reduce-true749.cont.cont.cont.cont.cont

inter_warp_reduce-true749.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true749.cont.cont.cont.cont.cont1031, %inter_warp_reduce-true749.cont.cont.cont.cont.then
  %.val861 = phi float [ %.val861.then.val, %inter_warp_reduce-true749.cont.cont.cont.cont.then ], [ %initial_value_addr751.3, %inter_warp_reduce-true749.cont.cont.cont.cont.cont1031 ]
  %365 = icmp ult i32 %.pre1315, 16
  %add.72.i960 = fadd float %364, %.val861
  br i1 %365, label %inter_warp_reduce-true749.cont.cont.cont.cont.cont.then, label %inter_warp_reduce-true749.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true749.cont.cont.cont.cont.cont.then: ; preds = %inter_warp_reduce-true749.cont.cont.cont.cont.cont
  store float %add.72.i960, ptr addrspace(3) %349, align 4
  br label %inter_warp_reduce-true749.cont.cont.cont.cont.cont.cont

inter_warp_reduce-true749.cont.cont.cont.cont.cont.cont: ; preds = %inter_warp_reduce-true749.cont.cont.cont.cont.cont, %inter_warp_reduce-true749.cont.cont.cont.cont.cont.then
  %366 = icmp eq i32 %.pre1315, 0
  br i1 %366, label %reduction_write_output-true767, label %common.ret

reduction_write_output-true767:                   ; preds = %inter_warp_reduce-true749.cont.cont.cont.cont.cont.cont
  store float %add.72.i960, ptr addrspace(1) %arg231413, align 128
  br label %common.ret
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_445(ptr noalias nocapture readonly align 16 dereferenceable(4) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg3, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg5, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg6, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg7, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg8, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg9, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg10, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg11, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg12, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg13, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg14, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg15, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg16, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg17, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg18, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg19, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg20, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg21, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg22, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg23, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg24, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg25, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg26, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg27, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg28, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg29, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg30, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg31, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg32, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg33, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg34, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg35, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg36, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg37, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg38, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg39, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg40, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg41, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg42, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg43, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg44, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg45, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg46, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg47, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg48, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg49, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg50, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg51, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg52, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg53, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg54, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg55, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg56, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg57, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg58, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg59, ptr noalias nocapture writeonly align 128 dereferenceable(4) %arg60) local_unnamed_addr #4 {
entry:
  %arg60128 = addrspacecast ptr %arg60 to ptr addrspace(1)
  %arg59126 = addrspacecast ptr %arg59 to ptr addrspace(1)
  %arg58124 = addrspacecast ptr %arg58 to ptr addrspace(1)
  %arg57122 = addrspacecast ptr %arg57 to ptr addrspace(1)
  %arg56120 = addrspacecast ptr %arg56 to ptr addrspace(1)
  %arg55118 = addrspacecast ptr %arg55 to ptr addrspace(1)
  %arg54116 = addrspacecast ptr %arg54 to ptr addrspace(1)
  %arg53114 = addrspacecast ptr %arg53 to ptr addrspace(1)
  %arg52112 = addrspacecast ptr %arg52 to ptr addrspace(1)
  %arg51110 = addrspacecast ptr %arg51 to ptr addrspace(1)
  %arg50108 = addrspacecast ptr %arg50 to ptr addrspace(1)
  %arg49106 = addrspacecast ptr %arg49 to ptr addrspace(1)
  %arg48104 = addrspacecast ptr %arg48 to ptr addrspace(1)
  %arg47102 = addrspacecast ptr %arg47 to ptr addrspace(1)
  %arg46100 = addrspacecast ptr %arg46 to ptr addrspace(1)
  %arg4598 = addrspacecast ptr %arg45 to ptr addrspace(1)
  %arg4496 = addrspacecast ptr %arg44 to ptr addrspace(1)
  %arg4394 = addrspacecast ptr %arg43 to ptr addrspace(1)
  %arg4292 = addrspacecast ptr %arg42 to ptr addrspace(1)
  %arg4190 = addrspacecast ptr %arg41 to ptr addrspace(1)
  %arg4088 = addrspacecast ptr %arg40 to ptr addrspace(1)
  %arg3986 = addrspacecast ptr %arg39 to ptr addrspace(1)
  %arg3884 = addrspacecast ptr %arg38 to ptr addrspace(1)
  %arg3782 = addrspacecast ptr %arg37 to ptr addrspace(1)
  %arg3680 = addrspacecast ptr %arg36 to ptr addrspace(1)
  %arg3578 = addrspacecast ptr %arg35 to ptr addrspace(1)
  %arg3476 = addrspacecast ptr %arg34 to ptr addrspace(1)
  %arg3374 = addrspacecast ptr %arg33 to ptr addrspace(1)
  %arg3272 = addrspacecast ptr %arg32 to ptr addrspace(1)
  %arg3170 = addrspacecast ptr %arg31 to ptr addrspace(1)
  %arg3068 = addrspacecast ptr %arg30 to ptr addrspace(1)
  %arg2966 = addrspacecast ptr %arg29 to ptr addrspace(1)
  %arg2864 = addrspacecast ptr %arg28 to ptr addrspace(1)
  %arg2762 = addrspacecast ptr %arg27 to ptr addrspace(1)
  %arg2660 = addrspacecast ptr %arg26 to ptr addrspace(1)
  %arg2558 = addrspacecast ptr %arg25 to ptr addrspace(1)
  %arg2456 = addrspacecast ptr %arg24 to ptr addrspace(1)
  %arg2354 = addrspacecast ptr %arg23 to ptr addrspace(1)
  %arg2252 = addrspacecast ptr %arg22 to ptr addrspace(1)
  %arg2150 = addrspacecast ptr %arg21 to ptr addrspace(1)
  %arg2048 = addrspacecast ptr %arg20 to ptr addrspace(1)
  %arg1946 = addrspacecast ptr %arg19 to ptr addrspace(1)
  %arg1844 = addrspacecast ptr %arg18 to ptr addrspace(1)
  %arg1742 = addrspacecast ptr %arg17 to ptr addrspace(1)
  %arg1640 = addrspacecast ptr %arg16 to ptr addrspace(1)
  %arg1538 = addrspacecast ptr %arg15 to ptr addrspace(1)
  %arg1436 = addrspacecast ptr %arg14 to ptr addrspace(1)
  %arg1334 = addrspacecast ptr %arg13 to ptr addrspace(1)
  %arg1232 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg1130 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg1028 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg926 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg824 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg722 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg620 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg518 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg416 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg314 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg212 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg110 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg01 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = load float, ptr addrspace(1) %arg01, align 16, !invariant.load !195
  %1 = load float, ptr addrspace(1) %arg212, align 16, !invariant.load !195
  %2 = load float, ptr addrspace(1) %arg110, align 128, !invariant.load !195
  %multiply.44 = fmul float %1, %2
  %subtract.45 = fsub float %0, %multiply.44
  %3 = load float, ptr addrspace(1) %arg314, align 16, !invariant.load !195
  %4 = load float, ptr addrspace(1) %arg416, align 128, !invariant.load !195
  %multiply.47 = fmul float %1, %4
  %subtract.48 = fsub float %3, %multiply.47
  %5 = load float, ptr addrspace(1) %arg518, align 16, !invariant.load !195
  %6 = load float, ptr addrspace(1) %arg620, align 128, !invariant.load !195
  %multiply.50 = fmul float %1, %6
  %subtract.51 = fsub float %5, %multiply.50
  %7 = load float, ptr addrspace(1) %arg722, align 16, !invariant.load !195
  %8 = load float, ptr addrspace(1) %arg824, align 128, !invariant.load !195
  %multiply.53 = fmul float %1, %8
  %subtract.54 = fsub float %7, %multiply.53
  %9 = load float, ptr addrspace(1) %arg926, align 16, !invariant.load !195
  %10 = load float, ptr addrspace(1) %arg1028, align 128, !invariant.load !195
  %multiply.56 = fmul float %1, %10
  %subtract.57 = fsub float %9, %multiply.56
  %11 = load float, ptr addrspace(1) %arg1130, align 16, !invariant.load !195
  %12 = load float, ptr addrspace(1) %arg1232, align 128, !invariant.load !195
  %multiply.59 = fmul float %1, %12
  %subtract.60 = fsub float %11, %multiply.59
  %13 = load float, ptr addrspace(1) %arg1334, align 16, !invariant.load !195
  %14 = load float, ptr addrspace(1) %arg1436, align 128, !invariant.load !195
  %multiply.62 = fmul float %1, %14
  %subtract.63 = fsub float %13, %multiply.62
  %15 = load float, ptr addrspace(1) %arg1538, align 16, !invariant.load !195
  %16 = load float, ptr addrspace(1) %arg1640, align 128, !invariant.load !195
  %multiply.65 = fmul float %1, %16
  %subtract.66 = fsub float %15, %multiply.65
  %17 = load float, ptr addrspace(1) %arg1742, align 16, !invariant.load !195
  %18 = load float, ptr addrspace(1) %arg1844, align 128, !invariant.load !195
  %multiply.68 = fmul float %1, %18
  %subtract.69 = fsub float %17, %multiply.68
  %19 = load float, ptr addrspace(1) %arg1946, align 16, !invariant.load !195
  %20 = load float, ptr addrspace(1) %arg2048, align 128, !invariant.load !195
  %multiply.71 = fmul float %1, %20
  %subtract.72 = fsub float %19, %multiply.71
  %21 = load float, ptr addrspace(1) %arg2150, align 16, !invariant.load !195
  %22 = load float, ptr addrspace(1) %arg2252, align 128, !invariant.load !195
  %multiply.74 = fmul float %1, %22
  %subtract.75 = fsub float %21, %multiply.74
  %23 = load float, ptr addrspace(1) %arg2354, align 16, !invariant.load !195
  %24 = load float, ptr addrspace(1) %arg2456, align 128, !invariant.load !195
  %multiply.77 = fmul float %1, %24
  %subtract.78 = fsub float %23, %multiply.77
  %25 = load float, ptr addrspace(1) %arg2558, align 16, !invariant.load !195
  %26 = load float, ptr addrspace(1) %arg2660, align 128, !invariant.load !195
  %multiply.80 = fmul float %1, %26
  %subtract.81 = fsub float %25, %multiply.80
  %27 = load float, ptr addrspace(1) %arg2762, align 16, !invariant.load !195
  %28 = load float, ptr addrspace(1) %arg2864, align 128, !invariant.load !195
  %multiply.83 = fmul float %1, %28
  %subtract.84 = fsub float %27, %multiply.83
  %29 = load float, ptr addrspace(1) %arg2966, align 16, !invariant.load !195
  %30 = load float, ptr addrspace(1) %arg3068, align 128, !invariant.load !195
  %multiply.86 = fmul float %1, %30
  %subtract.87 = fsub float %29, %multiply.86
  %31 = load float, ptr addrspace(1) %arg3170, align 16, !invariant.load !195
  %32 = load float, ptr addrspace(1) %arg3272, align 128, !invariant.load !195
  %multiply.89 = fmul float %1, %32
  %subtract.90 = fsub float %31, %multiply.89
  %33 = load float, ptr addrspace(1) %arg3374, align 16, !invariant.load !195
  %34 = load float, ptr addrspace(1) %arg3476, align 128, !invariant.load !195
  %multiply.92 = fmul float %1, %34
  %subtract.93 = fsub float %33, %multiply.92
  %35 = load float, ptr addrspace(1) %arg3578, align 16, !invariant.load !195
  %36 = load float, ptr addrspace(1) %arg3680, align 128, !invariant.load !195
  %multiply.95 = fmul float %1, %36
  %subtract.96 = fsub float %35, %multiply.95
  %37 = load float, ptr addrspace(1) %arg3782, align 16, !invariant.load !195
  %38 = load float, ptr addrspace(1) %arg3884, align 128, !invariant.load !195
  %multiply.98 = fmul float %1, %38
  %subtract.99 = fsub float %37, %multiply.98
  %39 = load float, ptr addrspace(1) %arg3986, align 16, !invariant.load !195
  %40 = load float, ptr addrspace(1) %arg4088, align 128, !invariant.load !195
  %multiply.101 = fmul float %1, %40
  %subtract.102 = fsub float %39, %multiply.101
  store float %subtract.45, ptr addrspace(1) %arg4190, align 128
  store float %subtract.48, ptr addrspace(1) %arg4292, align 128
  store float %subtract.51, ptr addrspace(1) %arg4394, align 128
  store float %subtract.54, ptr addrspace(1) %arg4496, align 128
  store float %subtract.57, ptr addrspace(1) %arg4598, align 128
  store float %subtract.60, ptr addrspace(1) %arg46100, align 128
  store float %subtract.63, ptr addrspace(1) %arg47102, align 128
  store float %subtract.66, ptr addrspace(1) %arg48104, align 128
  store float %subtract.69, ptr addrspace(1) %arg49106, align 128
  store float %subtract.72, ptr addrspace(1) %arg50108, align 128
  store float %subtract.75, ptr addrspace(1) %arg51110, align 128
  store float %subtract.78, ptr addrspace(1) %arg52112, align 128
  store float %subtract.81, ptr addrspace(1) %arg53114, align 128
  store float %subtract.84, ptr addrspace(1) %arg54116, align 128
  store float %subtract.87, ptr addrspace(1) %arg55118, align 128
  store float %subtract.90, ptr addrspace(1) %arg56120, align 128
  store float %subtract.93, ptr addrspace(1) %arg57122, align 128
  store float %subtract.96, ptr addrspace(1) %arg58124, align 128
  store float %subtract.99, ptr addrspace(1) %arg59126, align 128
  store float %subtract.102, ptr addrspace(1) %arg60128, align 128
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @concatenate_267(ptr noalias nocapture readonly align 16 dereferenceable(3072) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(35904) %arg1, ptr noalias nocapture writeonly align 128 dereferenceable(38976) %arg2) local_unnamed_addr #5 {
entry:
  %arg29 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg17 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg05 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !198
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %2 = shl nuw nsw i32 %0, 10
  %linear_index = or i32 %2, %1
  %.lhs.trunc = trunc i32 %linear_index to i16
  %.lhs.trunc.frozen = freeze i16 %.lhs.trunc
  %3 = udiv i16 %.lhs.trunc.frozen, 6
  %4 = mul i16 %3, 6
  %.decomposed = sub i16 %.lhs.trunc.frozen, %4
  %.zext4 = zext i16 %3 to i64
  %5 = icmp ult i32 %linear_index, 9744
  br i1 %5, label %concatenate.pivot.128., label %concatenate_267.in_bounds-after

concatenate_267.in_bounds-after:                  ; preds = %concatenate.3.merge, %entry
  ret void

concatenate.pivot.128.:                           ; preds = %entry
  %6 = icmp ult i32 %linear_index, 768
  br i1 %6, label %concatenate.pivot.0., label %concatenate.pivot.128.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.128.
  %7 = zext i16 %.decomposed to i64
  %8 = getelementptr inbounds [128 x [6 x float]], ptr addrspace(1) %arg05, i64 0, i64 %.zext4, i64 %7
  br label %concatenate.3.merge

concatenate.pivot.128.1:                          ; preds = %concatenate.pivot.128.
  %9 = zext i16 %.decomposed to i64
  %10 = getelementptr [1496 x [6 x float]], ptr addrspace(1) %arg17, i64 0, i64 %.zext4, i64 %9
  %11 = getelementptr inbounds float, ptr addrspace(1) %10, i64 -768
  br label %concatenate.3.merge

concatenate.3.merge:                              ; preds = %concatenate.pivot.128.1, %concatenate.pivot.0.
  %.in = phi ptr addrspace(1) [ %8, %concatenate.pivot.0. ], [ %11, %concatenate.pivot.128.1 ]
  %12 = load float, ptr addrspace(1) %.in, align 4, !invariant.load !195
  %13 = zext i32 %linear_index to i64
  %14 = getelementptr inbounds float, ptr addrspace(1) %arg29, i64 %13
  store float %12, ptr addrspace(1) %14, align 4
  br label %concatenate_267.in_bounds-after
}

; Function Attrs: nounwind
define void @fusion_310(ptr noalias nocapture readonly align 16 dereferenceable(4194304) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg3, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg5, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg6, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg7, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg8) local_unnamed_addr #0 {
entry:
  %arg8136 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg7134 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg6132 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg5130 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg4128 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg3126 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg2124 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg1122 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg0120 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !200
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x = and i32 %1, 31
  %thread_id.y84 = lshr i32 %1, 5
  %2 = lshr i32 %0, 2
  %3 = shl nuw nsw i32 %0, 5
  %tile_origin.2 = and i32 %3, 96
  %4 = shl nuw nsw i32 %2, 14
  %5 = shl nuw nsw i32 %thread_id.y84, 7
  %6 = add i32 %4, %5
  %7 = add i32 %6, %tile_origin.2
  %8 = add i32 %7, %thread_id.x
  %9 = zext i32 %8 to i64
  %10 = shl nuw nsw i64 %9, 2
  %scevgep = getelementptr i8, ptr addrspace(1) %arg0120, i64 %10
  %11 = lshr i32 %8, 7
  br label %y_in_tile.loop_body

common.ret:                                       ; preds = %reduction_write_output-after59, %reduction_write_output-true80
  ret void

y_in_tile.loop_body:                              ; preds = %entry, %y_in_tile.loop_body
  %lsr.iv139 = phi i32 [ %11, %entry ], [ %lsr.iv.next, %y_in_tile.loop_body ]
  %lsr.iv = phi ptr addrspace(1) [ %scevgep, %entry ], [ %scevgep138, %y_in_tile.loop_body ]
  %y_in_tile.invar_address.0117 = phi i32 [ %thread_id.y84, %entry ], [ %invar.inc, %y_in_tile.loop_body ]
  %partial_reduction_result5.0116 = phi float [ 0.000000e+00, %entry ], [ %add.41.i, %y_in_tile.loop_body ]
  %partial_reduction_result.0115 = phi float [ 0.000000e+00, %entry ], [ %add.15.i, %y_in_tile.loop_body ]
  %partial_reduction_result2.0114 = phi float [ 0.000000e+00, %entry ], [ %add.29.i, %y_in_tile.loop_body ]
  %invar.inc = add nuw nsw i32 %y_in_tile.invar_address.0117, 32
  %12 = and i32 %lsr.iv139, 33554304
  %13 = or i32 %12, %y_in_tile.invar_address.0117
  %Arg_0.19 = load float, ptr addrspace(1) %lsr.iv, align 4, !invariant.load !195
  %14 = zext i32 %13 to i64
  %Arg_1.2 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg1122, i64 0, i64 %14, i64 0
  %Arg_1.210 = load float, ptr addrspace(1) %Arg_1.2, align 4, !invariant.load !195
  %multiply.9 = fmul float %Arg_0.19, %Arg_1.210
  %add.15.i = fadd float %partial_reduction_result.0115, %multiply.9
  %Arg_3.4 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg3126, i64 0, i64 %14, i64 0
  %Arg_3.413 = load float, ptr addrspace(1) %Arg_3.4, align 4, !invariant.load !195
  %Arg_2.3 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg2124, i64 0, i64 %14, i64 0
  %Arg_2.314 = load float, ptr addrspace(1) %Arg_2.3, align 4, !invariant.load !195
  %multiply.17 = fmul float %Arg_3.413, %Arg_2.314
  %subtract.20 = fsub float 1.000000e+00, %Arg_2.314
  %multiply.21 = fmul float %multiply.17, %subtract.20
  %multiply.24 = fmul float %Arg_0.19, %multiply.21
  %add.29.i = fadd float %partial_reduction_result2.0114, %multiply.24
  %Arg_5.6 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg5130, i64 0, i64 %14, i64 0
  %Arg_5.620 = load float, ptr addrspace(1) %Arg_5.6, align 4, !invariant.load !195
  %Arg_4.5 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg4128, i64 0, i64 %14, i64 0
  %Arg_4.521 = load float, ptr addrspace(1) %Arg_4.5, align 4, !invariant.load !195
  %multiply.31 = fmul float %Arg_5.620, %Arg_4.521
  %subtract.32 = fsub float 1.000000e+00, %Arg_4.521
  %multiply.33 = fmul float %multiply.31, %subtract.32
  %multiply.36 = fmul float %Arg_0.19, %multiply.33
  %add.41.i = fadd float %partial_reduction_result5.0116, %multiply.36
  %scevgep138 = getelementptr i8, ptr addrspace(1) %lsr.iv, i64 16384
  %lsr.iv.next = add nuw nsw i32 %lsr.iv139, 32
  %15 = icmp ugt i32 %y_in_tile.invar_address.0117, 95
  br i1 %15, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_body
  %16 = zext i32 %thread_id.x to i64
  %17 = zext i32 %thread_id.y84 to i64
  %shmem_output_address = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache22, i64 0, i64 0, i64 0, i64 %16, i64 %17
  store float %add.15.i, ptr addrspace(3) %shmem_output_address, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache22, i64 0, i64 0, i64 0, i64 %17, i64 %16
  %partial_reduction_result26 = load float, ptr addrspace(3) %shmem_transposed_addr, align 4
  %18 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result26, i32 16, i32 31)
  %add.15.i99 = fadd float %partial_reduction_result26, %18
  %19 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i99, i32 8, i32 31)
  %add.15.i100 = fadd float %add.15.i99, %19
  %20 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i100, i32 4, i32 31)
  %add.15.i101 = fadd float %add.15.i100, %20
  %21 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i101, i32 2, i32 31)
  %add.15.i102 = fadd float %add.15.i101, %21
  %22 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i102, i32 1, i32 31)
  %add.15.i103 = fadd float %add.15.i102, %22
  store float %add.15.i103, ptr addrspace(3) %shmem_transposed_addr, align 4
  %23 = icmp eq i32 %thread_id.x, 0
  %24 = zext i32 %2 to i64
  %25 = or i32 %tile_origin.2, %thread_id.y84
  %26 = zext i32 %25 to i64
  %output_element_address = getelementptr inbounds [64 x [128 x float]], ptr addrspace(1) %arg6132, i64 0, i64 %24, i64 %26
  br i1 %23, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %27 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address40 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache23, i64 0, i64 0, i64 0, i64 %16, i64 %17
  store float %add.29.i, ptr addrspace(3) %shmem_output_address40, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr42 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache23, i64 0, i64 0, i64 0, i64 %17, i64 %16
  %partial_reduction_result44 = load float, ptr addrspace(3) %shmem_transposed_addr42, align 4
  %28 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result44, i32 16, i32 31)
  %add.29.i104 = fadd float %partial_reduction_result44, %28
  %29 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.29.i104, i32 8, i32 31)
  %add.29.i105 = fadd float %add.29.i104, %29
  %30 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.29.i105, i32 4, i32 31)
  %add.29.i106 = fadd float %add.29.i105, %30
  %31 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.29.i106, i32 2, i32 31)
  %add.29.i107 = fadd float %add.29.i106, %31
  %32 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.29.i107, i32 1, i32 31)
  %add.29.i108 = fadd float %add.29.i107, %32
  store float %add.29.i108, ptr addrspace(3) %shmem_transposed_addr42, align 4
  %output_element_address60 = getelementptr inbounds [64 x [128 x float]], ptr addrspace(1) %arg7134, i64 0, i64 %24, i64 %26
  br i1 %27, label %reduction_write_output-true58, label %reduction_write_output-after59

reduction_write_output-after59:                   ; preds = %reduction_write_output-true58, %reduction_write_output-after
  %33 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address62 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache24, i64 0, i64 0, i64 0, i64 %16, i64 %17
  store float %add.41.i, ptr addrspace(3) %shmem_output_address62, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr64 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache24, i64 0, i64 0, i64 0, i64 %17, i64 %16
  %partial_reduction_result66 = load float, ptr addrspace(3) %shmem_transposed_addr64, align 4
  %34 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result66, i32 16, i32 31)
  %add.41.i109 = fadd float %partial_reduction_result66, %34
  %35 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.41.i109, i32 8, i32 31)
  %add.41.i110 = fadd float %add.41.i109, %35
  %36 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.41.i110, i32 4, i32 31)
  %add.41.i111 = fadd float %add.41.i110, %36
  %37 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.41.i111, i32 2, i32 31)
  %add.41.i112 = fadd float %add.41.i111, %37
  %38 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.41.i112, i32 1, i32 31)
  %add.41.i113 = fadd float %add.41.i112, %38
  store float %add.41.i113, ptr addrspace(3) %shmem_transposed_addr64, align 4
  %output_element_address82 = getelementptr inbounds [64 x [128 x float]], ptr addrspace(1) %arg8136, i64 0, i64 %24, i64 %26
  br i1 %33, label %reduction_write_output-true80, label %common.ret

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  store float %add.15.i103, ptr addrspace(1) %output_element_address, align 4
  br label %reduction_write_output-after

reduction_write_output-true58:                    ; preds = %reduction_write_output-after
  store float %add.29.i108, ptr addrspace(1) %output_element_address60, align 4
  br label %reduction_write_output-after59

reduction_write_output-true80:                    ; preds = %reduction_write_output-after59
  store float %add.41.i113, ptr addrspace(1) %output_element_address82, align 4
  br label %common.ret
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @concatenate_236(ptr noalias nocapture readonly align 16 dereferenceable(16384) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg2, ptr noalias nocapture writeonly align 128 dereferenceable(114688) %arg3) local_unnamed_addr #5 {
entry:
  %arg39 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg27 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg15 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg03 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !201
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %2 = shl nuw nsw i32 %0, 10
  %linear_index = or i32 %2, %1
  %3 = and i32 %1, 127
  %4 = lshr i32 %linear_index, 7
  %5 = icmp ult i32 %linear_index, 4096
  %6 = zext i32 %3 to i64
  br i1 %5, label %concatenate.pivot.0., label %concatenate.pivot.96.

concatenate.pivot.0.:                             ; preds = %entry
  %7 = zext i32 %4 to i64
  %8 = getelementptr inbounds [32 x [128 x float]], ptr addrspace(1) %arg03, i64 0, i64 %7, i64 %6
  br label %concatenate.4.merge

concatenate.pivot.96.:                            ; preds = %entry
  %9 = icmp ult i32 %linear_index, 12288
  br i1 %9, label %concatenate.pivot.32.1, label %concatenate.pivot.96.2

concatenate.pivot.32.1:                           ; preds = %concatenate.pivot.96.
  %10 = sext i32 %4 to i64
  %11 = getelementptr [64 x [128 x float]], ptr addrspace(1) %arg15, i64 0, i64 %10, i64 %6
  %12 = getelementptr inbounds float, ptr addrspace(1) %11, i64 -4096
  br label %concatenate.4.merge

concatenate.pivot.96.2:                           ; preds = %concatenate.pivot.96.
  %13 = sext i32 %4 to i64
  %14 = getelementptr [128 x [128 x float]], ptr addrspace(1) %arg27, i64 0, i64 %13, i64 %6
  %15 = getelementptr inbounds float, ptr addrspace(1) %14, i64 -12288
  br label %concatenate.4.merge

concatenate.4.merge:                              ; preds = %concatenate.pivot.96.2, %concatenate.pivot.32.1, %concatenate.pivot.0.
  %.in = phi ptr addrspace(1) [ %8, %concatenate.pivot.0. ], [ %12, %concatenate.pivot.32.1 ], [ %15, %concatenate.pivot.96.2 ]
  %16 = load float, ptr addrspace(1) %.in, align 4, !invariant.load !195
  %17 = zext i32 %linear_index to i64
  %18 = getelementptr inbounds float, ptr addrspace(1) %arg39, i64 %17
  store float %16, ptr addrspace(1) %18, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @concatenate_262(ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg2, ptr noalias nocapture writeonly align 128 dereferenceable(163840) %arg3) local_unnamed_addr #5 {
entry:
  %arg39 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg27 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg15 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg03 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !202
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %2 = shl nuw nsw i32 %0, 10
  %linear_index = or i32 %2, %1
  %3 = and i32 %1, 127
  %4 = lshr i32 %linear_index, 7
  %5 = icmp ult i32 %linear_index, 8192
  %6 = zext i32 %3 to i64
  br i1 %5, label %concatenate.pivot.0., label %concatenate.pivot.192.

concatenate.pivot.0.:                             ; preds = %entry
  %7 = zext i32 %4 to i64
  %8 = getelementptr inbounds [64 x [128 x float]], ptr addrspace(1) %arg03, i64 0, i64 %7, i64 %6
  br label %concatenate.4.merge

concatenate.pivot.192.:                           ; preds = %entry
  %9 = icmp ult i32 %linear_index, 24576
  br i1 %9, label %concatenate.pivot.64.1, label %concatenate.pivot.192.2

concatenate.pivot.64.1:                           ; preds = %concatenate.pivot.192.
  %10 = sext i32 %4 to i64
  %11 = getelementptr [128 x [128 x float]], ptr addrspace(1) %arg15, i64 0, i64 %10, i64 %6
  %12 = getelementptr inbounds float, ptr addrspace(1) %11, i64 -8192
  br label %concatenate.4.merge

concatenate.pivot.192.2:                          ; preds = %concatenate.pivot.192.
  %13 = sext i32 %4 to i64
  %14 = getelementptr [128 x [128 x float]], ptr addrspace(1) %arg27, i64 0, i64 %13, i64 %6
  %15 = getelementptr inbounds float, ptr addrspace(1) %14, i64 -24576
  br label %concatenate.4.merge

concatenate.4.merge:                              ; preds = %concatenate.pivot.192.2, %concatenate.pivot.64.1, %concatenate.pivot.0.
  %.in = phi ptr addrspace(1) [ %8, %concatenate.pivot.0. ], [ %12, %concatenate.pivot.64.1 ], [ %15, %concatenate.pivot.192.2 ]
  %16 = load float, ptr addrspace(1) %.in, align 4, !invariant.load !195
  %17 = zext i32 %linear_index to i64
  %18 = getelementptr inbounds float, ptr addrspace(1) %arg39, i64 %17
  store float %16, ptr addrspace(1) %18, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @concatenate_237(ptr noalias nocapture readonly align 16 dereferenceable(16384) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg2, ptr noalias nocapture writeonly align 128 dereferenceable(180224) %arg3) local_unnamed_addr #5 {
entry:
  %arg39 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg27 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg15 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg03 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !203
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %2 = shl nuw nsw i32 %0, 10
  %linear_index = or i32 %2, %1
  %3 = and i32 %1, 127
  %4 = lshr i32 %linear_index, 7
  %5 = icmp ult i32 %linear_index, 4096
  %6 = zext i32 %3 to i64
  br i1 %5, label %concatenate.pivot.0., label %concatenate.pivot.96.

concatenate.pivot.0.:                             ; preds = %entry
  %7 = zext i32 %4 to i64
  %8 = getelementptr inbounds [32 x [128 x float]], ptr addrspace(1) %arg03, i64 0, i64 %7, i64 %6
  br label %concatenate.4.merge

concatenate.pivot.96.:                            ; preds = %entry
  %9 = icmp ult i32 %linear_index, 12288
  br i1 %9, label %concatenate.pivot.32.1, label %concatenate.pivot.96.2

concatenate.pivot.32.1:                           ; preds = %concatenate.pivot.96.
  %10 = sext i32 %4 to i64
  %11 = getelementptr [64 x [128 x float]], ptr addrspace(1) %arg15, i64 0, i64 %10, i64 %6
  %12 = getelementptr inbounds float, ptr addrspace(1) %11, i64 -4096
  br label %concatenate.4.merge

concatenate.pivot.96.2:                           ; preds = %concatenate.pivot.96.
  %13 = sext i32 %4 to i64
  %14 = getelementptr [256 x [128 x float]], ptr addrspace(1) %arg27, i64 0, i64 %13, i64 %6
  %15 = getelementptr inbounds float, ptr addrspace(1) %14, i64 -12288
  br label %concatenate.4.merge

concatenate.4.merge:                              ; preds = %concatenate.pivot.96.2, %concatenate.pivot.32.1, %concatenate.pivot.0.
  %.in = phi ptr addrspace(1) [ %8, %concatenate.pivot.0. ], [ %12, %concatenate.pivot.32.1 ], [ %15, %concatenate.pivot.96.2 ]
  %16 = load float, ptr addrspace(1) %.in, align 4, !invariant.load !195
  %17 = zext i32 %linear_index to i64
  %18 = getelementptr inbounds float, ptr addrspace(1) %arg39, i64 %17
  store float %16, ptr addrspace(1) %18, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @concatenate_303(ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg1, ptr noalias nocapture writeonly align 128 dereferenceable(196608) %arg2) local_unnamed_addr #5 {
entry:
  %arg26 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg14 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg02 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !204
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %2 = shl nuw nsw i32 %0, 10
  %linear_index = or i32 %2, %1
  %3 = and i32 %1, 255
  %4 = lshr i32 %linear_index, 8
  %5 = icmp ult i32 %linear_index, 16384
  br i1 %5, label %concatenate.pivot.0., label %concatenate.pivot.64.1

concatenate.pivot.0.:                             ; preds = %entry
  %6 = zext i32 %4 to i64
  %7 = zext i32 %3 to i64
  %8 = getelementptr inbounds [64 x [256 x float]], ptr addrspace(1) %arg02, i64 0, i64 %6, i64 %7
  br label %concatenate.3.merge

concatenate.pivot.64.1:                           ; preds = %entry
  %9 = zext i32 %3 to i64
  %10 = sext i32 %4 to i64
  %11 = getelementptr [128 x [256 x float]], ptr addrspace(1) %arg14, i64 0, i64 %10, i64 %9
  %12 = getelementptr inbounds float, ptr addrspace(1) %11, i64 -16384
  br label %concatenate.3.merge

concatenate.3.merge:                              ; preds = %concatenate.pivot.64.1, %concatenate.pivot.0.
  %.in = phi ptr addrspace(1) [ %8, %concatenate.pivot.0. ], [ %12, %concatenate.pivot.64.1 ]
  %13 = load float, ptr addrspace(1) %.in, align 4, !invariant.load !195
  %14 = zext i32 %linear_index to i64
  %15 = getelementptr inbounds float, ptr addrspace(1) %arg26, i64 %14
  store float %13, ptr addrspace(1) %15, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @concatenate_263(ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg2, ptr noalias nocapture writeonly align 128 dereferenceable(229376) %arg3) local_unnamed_addr #5 {
entry:
  %arg39 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg27 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg15 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg03 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !205
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %2 = shl nuw nsw i32 %0, 10
  %linear_index = or i32 %2, %1
  %3 = and i32 %1, 127
  %4 = lshr i32 %linear_index, 7
  %5 = icmp ult i32 %linear_index, 8192
  %6 = zext i32 %3 to i64
  br i1 %5, label %concatenate.pivot.0., label %concatenate.pivot.192.

concatenate.pivot.0.:                             ; preds = %entry
  %7 = zext i32 %4 to i64
  %8 = getelementptr inbounds [64 x [128 x float]], ptr addrspace(1) %arg03, i64 0, i64 %7, i64 %6
  br label %concatenate.4.merge

concatenate.pivot.192.:                           ; preds = %entry
  %9 = icmp ult i32 %linear_index, 24576
  br i1 %9, label %concatenate.pivot.64.1, label %concatenate.pivot.192.2

concatenate.pivot.64.1:                           ; preds = %concatenate.pivot.192.
  %10 = sext i32 %4 to i64
  %11 = getelementptr [128 x [128 x float]], ptr addrspace(1) %arg15, i64 0, i64 %10, i64 %6
  %12 = getelementptr inbounds float, ptr addrspace(1) %11, i64 -8192
  br label %concatenate.4.merge

concatenate.pivot.192.2:                          ; preds = %concatenate.pivot.192.
  %13 = sext i32 %4 to i64
  %14 = getelementptr [256 x [128 x float]], ptr addrspace(1) %arg27, i64 0, i64 %13, i64 %6
  %15 = getelementptr inbounds float, ptr addrspace(1) %14, i64 -24576
  br label %concatenate.4.merge

concatenate.4.merge:                              ; preds = %concatenate.pivot.192.2, %concatenate.pivot.64.1, %concatenate.pivot.0.
  %.in = phi ptr addrspace(1) [ %8, %concatenate.pivot.0. ], [ %12, %concatenate.pivot.64.1 ], [ %15, %concatenate.pivot.192.2 ]
  %16 = load float, ptr addrspace(1) %.in, align 4, !invariant.load !195
  %17 = zext i32 %linear_index to i64
  %18 = getelementptr inbounds float, ptr addrspace(1) %arg39, i64 %17
  store float %16, ptr addrspace(1) %18, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @concatenate_242(ptr noalias nocapture readonly align 16 dereferenceable(16384) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg2, ptr noalias nocapture writeonly align 128 dereferenceable(311296) %arg3) local_unnamed_addr #5 {
entry:
  %arg39 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg27 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg15 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg03 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !206
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %2 = shl nuw nsw i32 %0, 10
  %linear_index = or i32 %2, %1
  %3 = and i32 %1, 255
  %4 = lshr i32 %linear_index, 8
  %5 = icmp ult i32 %linear_index, 4096
  %6 = zext i32 %3 to i64
  br i1 %5, label %concatenate.pivot.0., label %concatenate.pivot.48.

concatenate.pivot.0.:                             ; preds = %entry
  %7 = zext i32 %4 to i64
  %8 = getelementptr inbounds [16 x [256 x float]], ptr addrspace(1) %arg03, i64 0, i64 %7, i64 %6
  br label %concatenate.4.merge

concatenate.pivot.48.:                            ; preds = %entry
  %9 = icmp ult i32 %linear_index, 12288
  br i1 %9, label %concatenate.pivot.16.1, label %concatenate.pivot.48.2

concatenate.pivot.16.1:                           ; preds = %concatenate.pivot.48.
  %10 = sext i32 %4 to i64
  %11 = getelementptr [32 x [256 x float]], ptr addrspace(1) %arg15, i64 0, i64 %10, i64 %6
  %12 = getelementptr inbounds float, ptr addrspace(1) %11, i64 -4096
  br label %concatenate.4.merge

concatenate.pivot.48.2:                           ; preds = %concatenate.pivot.48.
  %13 = sext i32 %4 to i64
  %14 = getelementptr [256 x [256 x float]], ptr addrspace(1) %arg27, i64 0, i64 %13, i64 %6
  %15 = getelementptr inbounds float, ptr addrspace(1) %14, i64 -12288
  br label %concatenate.4.merge

concatenate.4.merge:                              ; preds = %concatenate.pivot.48.2, %concatenate.pivot.16.1, %concatenate.pivot.0.
  %.in = phi ptr addrspace(1) [ %8, %concatenate.pivot.0. ], [ %12, %concatenate.pivot.16.1 ], [ %15, %concatenate.pivot.48.2 ]
  %16 = load float, ptr addrspace(1) %.in, align 4, !invariant.load !195
  %17 = zext i32 %linear_index to i64
  %18 = getelementptr inbounds float, ptr addrspace(1) %arg39, i64 %17
  store float %16, ptr addrspace(1) %18, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @concatenate_260(ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg2, ptr noalias nocapture writeonly align 128 dereferenceable(360448) %arg3) local_unnamed_addr #5 {
entry:
  %arg39 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg27 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg15 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg03 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !207
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %2 = shl nuw nsw i32 %0, 10
  %linear_index = or i32 %2, %1
  %3 = and i32 %1, 255
  %4 = lshr i32 %linear_index, 8
  %5 = icmp ult i32 %linear_index, 8192
  %6 = zext i32 %3 to i64
  br i1 %5, label %concatenate.pivot.0., label %concatenate.pivot.96.

concatenate.pivot.0.:                             ; preds = %entry
  %7 = zext i32 %4 to i64
  %8 = getelementptr inbounds [32 x [256 x float]], ptr addrspace(1) %arg03, i64 0, i64 %7, i64 %6
  br label %concatenate.4.merge

concatenate.pivot.96.:                            ; preds = %entry
  %9 = icmp ult i32 %linear_index, 24576
  br i1 %9, label %concatenate.pivot.32.1, label %concatenate.pivot.96.2

concatenate.pivot.32.1:                           ; preds = %concatenate.pivot.96.
  %10 = sext i32 %4 to i64
  %11 = getelementptr [64 x [256 x float]], ptr addrspace(1) %arg15, i64 0, i64 %10, i64 %6
  %12 = getelementptr inbounds float, ptr addrspace(1) %11, i64 -8192
  br label %concatenate.4.merge

concatenate.pivot.96.2:                           ; preds = %concatenate.pivot.96.
  %13 = sext i32 %4 to i64
  %14 = getelementptr [256 x [256 x float]], ptr addrspace(1) %arg27, i64 0, i64 %13, i64 %6
  %15 = getelementptr inbounds float, ptr addrspace(1) %14, i64 -24576
  br label %concatenate.4.merge

concatenate.4.merge:                              ; preds = %concatenate.pivot.96.2, %concatenate.pivot.32.1, %concatenate.pivot.0.
  %.in = phi ptr addrspace(1) [ %8, %concatenate.pivot.0. ], [ %12, %concatenate.pivot.32.1 ], [ %15, %concatenate.pivot.96.2 ]
  %16 = load float, ptr addrspace(1) %.in, align 4, !invariant.load !195
  %17 = zext i32 %linear_index to i64
  %18 = getelementptr inbounds float, ptr addrspace(1) %arg39, i64 %17
  store float %16, ptr addrspace(1) %18, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @concatenate_238(ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(8192) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg3, ptr noalias nocapture writeonly align 128 dereferenceable(368640) %arg4) local_unnamed_addr #5 {
entry:
  %arg412 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg310 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg28 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg16 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg04 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !208
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %2 = shl nuw nsw i32 %0, 10
  %linear_index = or i32 %2, %1
  %3 = and i32 %1, 255
  %4 = lshr i32 %linear_index, 8
  %5 = icmp ult i32 %linear_index, 24576
  br i1 %5, label %concatenate.pivot.32., label %concatenate.pivot.104.

concatenate.pivot.32.:                            ; preds = %entry
  %6 = icmp ult i32 %linear_index, 8192
  br i1 %6, label %concatenate.pivot.0., label %concatenate.pivot.32.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.32.
  %7 = zext i32 %4 to i64
  %8 = zext i32 %3 to i64
  %9 = getelementptr inbounds [32 x [256 x float]], ptr addrspace(1) %arg04, i64 0, i64 %7, i64 %8
  br label %concatenate.5.merge

concatenate.pivot.32.1:                           ; preds = %concatenate.pivot.32.
  %10 = zext i32 %3 to i64
  %11 = sext i32 %4 to i64
  %12 = getelementptr [64 x [256 x float]], ptr addrspace(1) %arg16, i64 0, i64 %11, i64 %10
  %13 = getelementptr inbounds float, ptr addrspace(1) %12, i64 -8192
  br label %concatenate.5.merge

concatenate.pivot.104.:                           ; preds = %entry
  %14 = icmp ult i32 %linear_index, 26624
  %15 = zext i32 %3 to i64
  br i1 %14, label %concatenate.pivot.96.2, label %concatenate.pivot.104.3

concatenate.pivot.96.2:                           ; preds = %concatenate.pivot.104.
  %16 = sext i32 %4 to i64
  %17 = getelementptr [8 x [256 x float]], ptr addrspace(1) %arg28, i64 0, i64 %16, i64 %15
  %18 = getelementptr inbounds float, ptr addrspace(1) %17, i64 -24576
  br label %concatenate.5.merge

concatenate.pivot.104.3:                          ; preds = %concatenate.pivot.104.
  %19 = sext i32 %4 to i64
  %20 = getelementptr [256 x [256 x float]], ptr addrspace(1) %arg310, i64 0, i64 %19, i64 %15
  %21 = getelementptr inbounds float, ptr addrspace(1) %20, i64 -26624
  br label %concatenate.5.merge

concatenate.5.merge:                              ; preds = %concatenate.pivot.104.3, %concatenate.pivot.96.2, %concatenate.pivot.32.1, %concatenate.pivot.0.
  %.in = phi ptr addrspace(1) [ %9, %concatenate.pivot.0. ], [ %13, %concatenate.pivot.32.1 ], [ %18, %concatenate.pivot.96.2 ], [ %21, %concatenate.pivot.104.3 ]
  %22 = load float, ptr addrspace(1) %.in, align 4, !invariant.load !195
  %23 = zext i32 %linear_index to i64
  %24 = getelementptr inbounds float, ptr addrspace(1) %arg412, i64 %23
  store float %22, ptr addrspace(1) %24, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @concatenate_298(ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg3, ptr noalias nocapture readonly align 16 dereferenceable(8192) %arg4, ptr noalias nocapture writeonly align 128 dereferenceable(401408) %arg5) local_unnamed_addr #5 {
entry:
  %arg515 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg413 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg311 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg29 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg17 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg05 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !209
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %2 = shl nuw nsw i32 %0, 10
  %linear_index = or i32 %2, %1
  %3 = and i32 %1, 255
  %4 = lshr i32 %linear_index, 8
  %5 = icmp ult i32 %linear_index, 49152
  br i1 %5, label %concatenate.pivot.64., label %concatenate.pivot.320.

concatenate.pivot.64.:                            ; preds = %entry
  %6 = icmp ult i32 %linear_index, 16384
  br i1 %6, label %concatenate.pivot.0., label %concatenate.pivot.64.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.64.
  %7 = zext i32 %4 to i64
  %8 = zext i32 %3 to i64
  %9 = getelementptr inbounds [64 x [256 x float]], ptr addrspace(1) %arg05, i64 0, i64 %7, i64 %8
  br label %concatenate.6.merge

concatenate.pivot.64.1:                           ; preds = %concatenate.pivot.64.
  %10 = zext i32 %3 to i64
  %11 = sext i32 %4 to i64
  %12 = getelementptr [128 x [256 x float]], ptr addrspace(1) %arg17, i64 0, i64 %11, i64 %10
  %13 = getelementptr inbounds float, ptr addrspace(1) %12, i64 -16384
  br label %concatenate.6.merge

concatenate.pivot.320.:                           ; preds = %entry
  %14 = icmp ult i32 %linear_index, 81920
  br i1 %14, label %concatenate.pivot.192.2, label %concatenate.pivot.384.

concatenate.pivot.192.2:                          ; preds = %concatenate.pivot.320.
  %15 = zext i32 %3 to i64
  %16 = sext i32 %4 to i64
  %17 = getelementptr [128 x [256 x float]], ptr addrspace(1) %arg29, i64 0, i64 %16, i64 %15
  %18 = getelementptr inbounds float, ptr addrspace(1) %17, i64 -49152
  br label %concatenate.6.merge

concatenate.pivot.384.:                           ; preds = %concatenate.pivot.320.
  %19 = icmp ult i32 %linear_index, 98304
  %20 = zext i32 %3 to i64
  br i1 %19, label %concatenate.pivot.320.3, label %concatenate.pivot.384.4

concatenate.pivot.320.3:                          ; preds = %concatenate.pivot.384.
  %21 = sext i32 %4 to i64
  %22 = getelementptr [64 x [256 x float]], ptr addrspace(1) %arg311, i64 0, i64 %21, i64 %20
  %23 = getelementptr inbounds float, ptr addrspace(1) %22, i64 -81920
  br label %concatenate.6.merge

concatenate.pivot.384.4:                          ; preds = %concatenate.pivot.384.
  %24 = sext i32 %4 to i64
  %25 = getelementptr [8 x [256 x float]], ptr addrspace(1) %arg413, i64 0, i64 %24, i64 %20
  %26 = getelementptr inbounds float, ptr addrspace(1) %25, i64 -98304
  br label %concatenate.6.merge

concatenate.6.merge:                              ; preds = %concatenate.pivot.384.4, %concatenate.pivot.320.3, %concatenate.pivot.192.2, %concatenate.pivot.64.1, %concatenate.pivot.0.
  %.in = phi ptr addrspace(1) [ %9, %concatenate.pivot.0. ], [ %13, %concatenate.pivot.64.1 ], [ %18, %concatenate.pivot.192.2 ], [ %23, %concatenate.pivot.320.3 ], [ %26, %concatenate.pivot.384.4 ]
  %27 = load float, ptr addrspace(1) %.in, align 4, !invariant.load !195
  %28 = zext i32 %linear_index to i64
  %29 = getelementptr inbounds float, ptr addrspace(1) %arg515, i64 %28
  store float %27, ptr addrspace(1) %29, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @concatenate_255(ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg2, ptr noalias nocapture writeonly align 128 dereferenceable(458752) %arg3) local_unnamed_addr #5 {
entry:
  %arg345 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg243 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg141 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg039 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !210
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !200
  %2 = shl nuw nsw i32 %0, 10
  %3 = shl nuw nsw i32 %1, 2
  %linear_index_base = or i32 %2, %3
  %4 = and i32 %3, 252
  %5 = lshr i32 %linear_index_base, 8
  %linear_index1 = or i32 %linear_index_base, 1
  %6 = and i32 %linear_index1, 253
  %linear_index2 = or i32 %linear_index_base, 2
  %7 = and i32 %linear_index2, 254
  %linear_index3 = or i32 %linear_index_base, 3
  %8 = and i32 %linear_index3, 255
  %9 = icmp ult i32 %linear_index_base, 16384
  %10 = zext i32 %4 to i64
  br i1 %9, label %concatenate.pivot.0., label %concatenate.pivot.192.

concatenate.pivot.0.:                             ; preds = %entry
  %11 = zext i32 %5 to i64
  %12 = getelementptr inbounds [64 x [256 x float]], ptr addrspace(1) %arg039, i64 0, i64 %11, i64 %10
  br label %concatenate.4.merge

concatenate.pivot.192.:                           ; preds = %entry
  %13 = icmp ult i32 %linear_index_base, 49152
  br i1 %13, label %concatenate.pivot.64.1, label %concatenate.pivot.192.2

concatenate.pivot.64.1:                           ; preds = %concatenate.pivot.192.
  %14 = sext i32 %5 to i64
  %15 = getelementptr [128 x [256 x float]], ptr addrspace(1) %arg141, i64 0, i64 %14, i64 %10
  %16 = getelementptr inbounds float, ptr addrspace(1) %15, i64 -16384
  br label %concatenate.4.merge

concatenate.pivot.192.2:                          ; preds = %concatenate.pivot.192.
  %17 = sext i32 %5 to i64
  %18 = getelementptr [256 x [256 x float]], ptr addrspace(1) %arg243, i64 0, i64 %17, i64 %10
  %19 = getelementptr inbounds float, ptr addrspace(1) %18, i64 -49152
  br label %concatenate.4.merge

concatenate.4.merge:                              ; preds = %concatenate.pivot.192.2, %concatenate.pivot.64.1, %concatenate.pivot.0.
  %.in = phi ptr addrspace(1) [ %12, %concatenate.pivot.0. ], [ %16, %concatenate.pivot.64.1 ], [ %19, %concatenate.pivot.192.2 ]
  %20 = icmp ult i32 %linear_index_base, 16384
  %21 = load float, ptr addrspace(1) %.in, align 4, !invariant.load !195
  %22 = zext i32 %linear_index_base to i64
  %23 = getelementptr float, ptr addrspace(1) %arg345, i64 %22
  store float %21, ptr addrspace(1) %23, align 16
  %24 = zext i32 %6 to i64
  br i1 %20, label %concatenate.pivot.0.8, label %concatenate.pivot.192.9

concatenate.pivot.0.8:                            ; preds = %concatenate.4.merge
  %25 = zext i32 %5 to i64
  %26 = getelementptr inbounds [64 x [256 x float]], ptr addrspace(1) %arg039, i64 0, i64 %25, i64 %24
  br label %concatenate.4.merge3

concatenate.pivot.192.9:                          ; preds = %concatenate.4.merge
  %27 = icmp ult i32 %linear_index_base, 49152
  br i1 %27, label %concatenate.pivot.64.10, label %concatenate.pivot.192.11

concatenate.pivot.64.10:                          ; preds = %concatenate.pivot.192.9
  %28 = sext i32 %5 to i64
  %29 = getelementptr [128 x [256 x float]], ptr addrspace(1) %arg141, i64 0, i64 %28, i64 %24
  %30 = getelementptr inbounds float, ptr addrspace(1) %29, i64 -16384
  br label %concatenate.4.merge3

concatenate.pivot.192.11:                         ; preds = %concatenate.pivot.192.9
  %31 = sext i32 %5 to i64
  %32 = getelementptr [256 x [256 x float]], ptr addrspace(1) %arg243, i64 0, i64 %31, i64 %24
  %33 = getelementptr inbounds float, ptr addrspace(1) %32, i64 -49152
  br label %concatenate.4.merge3

concatenate.4.merge3:                             ; preds = %concatenate.pivot.192.11, %concatenate.pivot.64.10, %concatenate.pivot.0.8
  %.in36 = phi ptr addrspace(1) [ %26, %concatenate.pivot.0.8 ], [ %30, %concatenate.pivot.64.10 ], [ %33, %concatenate.pivot.192.11 ]
  %34 = icmp ult i32 %linear_index_base, 16384
  %35 = load float, ptr addrspace(1) %.in36, align 4, !invariant.load !195
  %36 = getelementptr inbounds float, ptr addrspace(1) %23, i64 1
  store float %35, ptr addrspace(1) %36, align 4
  %37 = zext i32 %7 to i64
  br i1 %34, label %concatenate.pivot.0.17, label %concatenate.pivot.192.18

concatenate.pivot.0.17:                           ; preds = %concatenate.4.merge3
  %38 = zext i32 %5 to i64
  %39 = getelementptr inbounds [64 x [256 x float]], ptr addrspace(1) %arg039, i64 0, i64 %38, i64 %37
  br label %concatenate.4.merge12

concatenate.pivot.192.18:                         ; preds = %concatenate.4.merge3
  %40 = icmp ult i32 %linear_index_base, 49152
  br i1 %40, label %concatenate.pivot.64.19, label %concatenate.pivot.192.20

concatenate.pivot.64.19:                          ; preds = %concatenate.pivot.192.18
  %41 = sext i32 %5 to i64
  %42 = getelementptr [128 x [256 x float]], ptr addrspace(1) %arg141, i64 0, i64 %41, i64 %37
  %43 = getelementptr inbounds float, ptr addrspace(1) %42, i64 -16384
  br label %concatenate.4.merge12

concatenate.pivot.192.20:                         ; preds = %concatenate.pivot.192.18
  %44 = sext i32 %5 to i64
  %45 = getelementptr [256 x [256 x float]], ptr addrspace(1) %arg243, i64 0, i64 %44, i64 %37
  %46 = getelementptr inbounds float, ptr addrspace(1) %45, i64 -49152
  br label %concatenate.4.merge12

concatenate.4.merge12:                            ; preds = %concatenate.pivot.192.20, %concatenate.pivot.64.19, %concatenate.pivot.0.17
  %.in37 = phi ptr addrspace(1) [ %39, %concatenate.pivot.0.17 ], [ %43, %concatenate.pivot.64.19 ], [ %46, %concatenate.pivot.192.20 ]
  %47 = icmp ult i32 %linear_index_base, 16384
  %48 = load float, ptr addrspace(1) %.in37, align 4, !invariant.load !195
  %49 = getelementptr inbounds float, ptr addrspace(1) %23, i64 2
  store float %48, ptr addrspace(1) %49, align 8
  %50 = zext i32 %8 to i64
  br i1 %47, label %concatenate.pivot.0.26, label %concatenate.pivot.192.27

concatenate.pivot.0.26:                           ; preds = %concatenate.4.merge12
  %51 = zext i32 %5 to i64
  %52 = getelementptr inbounds [64 x [256 x float]], ptr addrspace(1) %arg039, i64 0, i64 %51, i64 %50
  br label %concatenate.4.merge21

concatenate.pivot.192.27:                         ; preds = %concatenate.4.merge12
  %53 = icmp ult i32 %linear_index_base, 49152
  br i1 %53, label %concatenate.pivot.64.28, label %concatenate.pivot.192.29

concatenate.pivot.64.28:                          ; preds = %concatenate.pivot.192.27
  %54 = sext i32 %5 to i64
  %55 = getelementptr [128 x [256 x float]], ptr addrspace(1) %arg141, i64 0, i64 %54, i64 %50
  %56 = getelementptr inbounds float, ptr addrspace(1) %55, i64 -16384
  br label %concatenate.4.merge21

concatenate.pivot.192.29:                         ; preds = %concatenate.pivot.192.27
  %57 = sext i32 %5 to i64
  %58 = getelementptr [256 x [256 x float]], ptr addrspace(1) %arg243, i64 0, i64 %57, i64 %50
  %59 = getelementptr inbounds float, ptr addrspace(1) %58, i64 -49152
  br label %concatenate.4.merge21

concatenate.4.merge21:                            ; preds = %concatenate.pivot.192.29, %concatenate.pivot.64.28, %concatenate.pivot.0.26
  %.in38 = phi ptr addrspace(1) [ %52, %concatenate.pivot.0.26 ], [ %56, %concatenate.pivot.64.28 ], [ %59, %concatenate.pivot.192.29 ]
  %60 = load float, ptr addrspace(1) %.in38, align 4, !invariant.load !195
  %61 = getelementptr inbounds float, ptr addrspace(1) %23, i64 3
  store float %60, ptr addrspace(1) %61, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @concatenate_235(ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(8192) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg3, ptr noalias nocapture writeonly align 128 dereferenceable(466944) %arg4) local_unnamed_addr #5 {
entry:
  %arg457 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg355 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg253 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg151 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg049 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !211
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !200
  %2 = shl nuw nsw i32 %0, 10
  %3 = shl nuw nsw i32 %1, 2
  %linear_index_base = or i32 %2, %3
  %4 = and i32 %3, 252
  %5 = lshr i32 %linear_index_base, 8
  %linear_index1 = or i32 %linear_index_base, 1
  %6 = and i32 %linear_index1, 253
  %linear_index2 = or i32 %linear_index_base, 2
  %7 = and i32 %linear_index2, 254
  %linear_index3 = or i32 %linear_index_base, 3
  %8 = and i32 %linear_index3, 255
  %9 = icmp ult i32 %linear_index_base, 49152
  br i1 %9, label %concatenate.pivot.64., label %concatenate.pivot.200.

concatenate.pivot.64.:                            ; preds = %entry
  %10 = icmp ult i32 %linear_index_base, 16384
  br i1 %10, label %concatenate.pivot.0., label %concatenate.pivot.64.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.64.
  %11 = zext i32 %5 to i64
  %12 = zext i32 %4 to i64
  %13 = getelementptr inbounds [64 x [256 x float]], ptr addrspace(1) %arg049, i64 0, i64 %11, i64 %12
  br label %concatenate.5.merge

concatenate.pivot.64.1:                           ; preds = %concatenate.pivot.64.
  %14 = zext i32 %4 to i64
  %15 = sext i32 %5 to i64
  %16 = getelementptr [128 x [256 x float]], ptr addrspace(1) %arg151, i64 0, i64 %15, i64 %14
  %17 = getelementptr inbounds float, ptr addrspace(1) %16, i64 -16384
  br label %concatenate.5.merge

concatenate.pivot.200.:                           ; preds = %entry
  %18 = icmp ult i32 %linear_index_base, 51200
  %19 = zext i32 %4 to i64
  br i1 %18, label %concatenate.pivot.192.2, label %concatenate.pivot.200.3

concatenate.pivot.192.2:                          ; preds = %concatenate.pivot.200.
  %20 = sext i32 %5 to i64
  %21 = getelementptr [8 x [256 x float]], ptr addrspace(1) %arg253, i64 0, i64 %20, i64 %19
  %22 = getelementptr inbounds float, ptr addrspace(1) %21, i64 -49152
  br label %concatenate.5.merge

concatenate.pivot.200.3:                          ; preds = %concatenate.pivot.200.
  %23 = sext i32 %5 to i64
  %24 = getelementptr [256 x [256 x float]], ptr addrspace(1) %arg355, i64 0, i64 %23, i64 %19
  %25 = getelementptr inbounds float, ptr addrspace(1) %24, i64 -51200
  br label %concatenate.5.merge

concatenate.5.merge:                              ; preds = %concatenate.pivot.200.3, %concatenate.pivot.192.2, %concatenate.pivot.64.1, %concatenate.pivot.0.
  %.in = phi ptr addrspace(1) [ %13, %concatenate.pivot.0. ], [ %17, %concatenate.pivot.64.1 ], [ %22, %concatenate.pivot.192.2 ], [ %25, %concatenate.pivot.200.3 ]
  %26 = icmp ult i32 %linear_index_base, 49152
  %27 = load float, ptr addrspace(1) %.in, align 4, !invariant.load !195
  %28 = zext i32 %linear_index_base to i64
  %29 = getelementptr float, ptr addrspace(1) %arg457, i64 %28
  store float %27, ptr addrspace(1) %29, align 16
  br i1 %26, label %concatenate.pivot.64.10, label %concatenate.pivot.200.13

concatenate.pivot.64.10:                          ; preds = %concatenate.5.merge
  %30 = icmp ult i32 %linear_index_base, 16384
  br i1 %30, label %concatenate.pivot.0.11, label %concatenate.pivot.64.12

concatenate.pivot.0.11:                           ; preds = %concatenate.pivot.64.10
  %31 = zext i32 %5 to i64
  %32 = zext i32 %6 to i64
  %33 = getelementptr inbounds [64 x [256 x float]], ptr addrspace(1) %arg049, i64 0, i64 %31, i64 %32
  br label %concatenate.5.merge4

concatenate.pivot.64.12:                          ; preds = %concatenate.pivot.64.10
  %34 = zext i32 %6 to i64
  %35 = sext i32 %5 to i64
  %36 = getelementptr [128 x [256 x float]], ptr addrspace(1) %arg151, i64 0, i64 %35, i64 %34
  %37 = getelementptr inbounds float, ptr addrspace(1) %36, i64 -16384
  br label %concatenate.5.merge4

concatenate.pivot.200.13:                         ; preds = %concatenate.5.merge
  %38 = icmp ult i32 %linear_index_base, 51200
  %39 = zext i32 %6 to i64
  br i1 %38, label %concatenate.pivot.192.14, label %concatenate.pivot.200.15

concatenate.pivot.192.14:                         ; preds = %concatenate.pivot.200.13
  %40 = sext i32 %5 to i64
  %41 = getelementptr [8 x [256 x float]], ptr addrspace(1) %arg253, i64 0, i64 %40, i64 %39
  %42 = getelementptr inbounds float, ptr addrspace(1) %41, i64 -49152
  br label %concatenate.5.merge4

concatenate.pivot.200.15:                         ; preds = %concatenate.pivot.200.13
  %43 = sext i32 %5 to i64
  %44 = getelementptr [256 x [256 x float]], ptr addrspace(1) %arg355, i64 0, i64 %43, i64 %39
  %45 = getelementptr inbounds float, ptr addrspace(1) %44, i64 -51200
  br label %concatenate.5.merge4

concatenate.5.merge4:                             ; preds = %concatenate.pivot.200.15, %concatenate.pivot.192.14, %concatenate.pivot.64.12, %concatenate.pivot.0.11
  %.in46 = phi ptr addrspace(1) [ %33, %concatenate.pivot.0.11 ], [ %37, %concatenate.pivot.64.12 ], [ %42, %concatenate.pivot.192.14 ], [ %45, %concatenate.pivot.200.15 ]
  %46 = icmp ult i32 %linear_index_base, 49152
  %47 = load float, ptr addrspace(1) %.in46, align 4, !invariant.load !195
  %48 = getelementptr inbounds float, ptr addrspace(1) %29, i64 1
  store float %47, ptr addrspace(1) %48, align 4
  br i1 %46, label %concatenate.pivot.64.22, label %concatenate.pivot.200.25

concatenate.pivot.64.22:                          ; preds = %concatenate.5.merge4
  %49 = icmp ult i32 %linear_index_base, 16384
  br i1 %49, label %concatenate.pivot.0.23, label %concatenate.pivot.64.24

concatenate.pivot.0.23:                           ; preds = %concatenate.pivot.64.22
  %50 = zext i32 %5 to i64
  %51 = zext i32 %7 to i64
  %52 = getelementptr inbounds [64 x [256 x float]], ptr addrspace(1) %arg049, i64 0, i64 %50, i64 %51
  br label %concatenate.5.merge16

concatenate.pivot.64.24:                          ; preds = %concatenate.pivot.64.22
  %53 = zext i32 %7 to i64
  %54 = sext i32 %5 to i64
  %55 = getelementptr [128 x [256 x float]], ptr addrspace(1) %arg151, i64 0, i64 %54, i64 %53
  %56 = getelementptr inbounds float, ptr addrspace(1) %55, i64 -16384
  br label %concatenate.5.merge16

concatenate.pivot.200.25:                         ; preds = %concatenate.5.merge4
  %57 = icmp ult i32 %linear_index_base, 51200
  %58 = zext i32 %7 to i64
  br i1 %57, label %concatenate.pivot.192.26, label %concatenate.pivot.200.27

concatenate.pivot.192.26:                         ; preds = %concatenate.pivot.200.25
  %59 = sext i32 %5 to i64
  %60 = getelementptr [8 x [256 x float]], ptr addrspace(1) %arg253, i64 0, i64 %59, i64 %58
  %61 = getelementptr inbounds float, ptr addrspace(1) %60, i64 -49152
  br label %concatenate.5.merge16

concatenate.pivot.200.27:                         ; preds = %concatenate.pivot.200.25
  %62 = sext i32 %5 to i64
  %63 = getelementptr [256 x [256 x float]], ptr addrspace(1) %arg355, i64 0, i64 %62, i64 %58
  %64 = getelementptr inbounds float, ptr addrspace(1) %63, i64 -51200
  br label %concatenate.5.merge16

concatenate.5.merge16:                            ; preds = %concatenate.pivot.200.27, %concatenate.pivot.192.26, %concatenate.pivot.64.24, %concatenate.pivot.0.23
  %.in47 = phi ptr addrspace(1) [ %52, %concatenate.pivot.0.23 ], [ %56, %concatenate.pivot.64.24 ], [ %61, %concatenate.pivot.192.26 ], [ %64, %concatenate.pivot.200.27 ]
  %65 = icmp ult i32 %linear_index_base, 49152
  %66 = load float, ptr addrspace(1) %.in47, align 4, !invariant.load !195
  %67 = getelementptr inbounds float, ptr addrspace(1) %29, i64 2
  store float %66, ptr addrspace(1) %67, align 8
  br i1 %65, label %concatenate.pivot.64.34, label %concatenate.pivot.200.37

concatenate.pivot.64.34:                          ; preds = %concatenate.5.merge16
  %68 = icmp ult i32 %linear_index_base, 16384
  br i1 %68, label %concatenate.pivot.0.35, label %concatenate.pivot.64.36

concatenate.pivot.0.35:                           ; preds = %concatenate.pivot.64.34
  %69 = zext i32 %5 to i64
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds [64 x [256 x float]], ptr addrspace(1) %arg049, i64 0, i64 %69, i64 %70
  br label %concatenate.5.merge28

concatenate.pivot.64.36:                          ; preds = %concatenate.pivot.64.34
  %72 = zext i32 %8 to i64
  %73 = sext i32 %5 to i64
  %74 = getelementptr [128 x [256 x float]], ptr addrspace(1) %arg151, i64 0, i64 %73, i64 %72
  %75 = getelementptr inbounds float, ptr addrspace(1) %74, i64 -16384
  br label %concatenate.5.merge28

concatenate.pivot.200.37:                         ; preds = %concatenate.5.merge16
  %76 = icmp ult i32 %linear_index_base, 51200
  %77 = zext i32 %8 to i64
  br i1 %76, label %concatenate.pivot.192.38, label %concatenate.pivot.200.39

concatenate.pivot.192.38:                         ; preds = %concatenate.pivot.200.37
  %78 = sext i32 %5 to i64
  %79 = getelementptr [8 x [256 x float]], ptr addrspace(1) %arg253, i64 0, i64 %78, i64 %77
  %80 = getelementptr inbounds float, ptr addrspace(1) %79, i64 -49152
  br label %concatenate.5.merge28

concatenate.pivot.200.39:                         ; preds = %concatenate.pivot.200.37
  %81 = sext i32 %5 to i64
  %82 = getelementptr [256 x [256 x float]], ptr addrspace(1) %arg355, i64 0, i64 %81, i64 %77
  %83 = getelementptr inbounds float, ptr addrspace(1) %82, i64 -51200
  br label %concatenate.5.merge28

concatenate.5.merge28:                            ; preds = %concatenate.pivot.200.39, %concatenate.pivot.192.38, %concatenate.pivot.64.36, %concatenate.pivot.0.35
  %.in48 = phi ptr addrspace(1) [ %71, %concatenate.pivot.0.35 ], [ %75, %concatenate.pivot.64.36 ], [ %80, %concatenate.pivot.192.38 ], [ %83, %concatenate.pivot.200.39 ]
  %84 = load float, ptr addrspace(1) %.in48, align 4, !invariant.load !195
  %85 = getelementptr inbounds float, ptr addrspace(1) %29, i64 3
  store float %84, ptr addrspace(1) %85, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @concatenate_269(ptr noalias nocapture readonly align 16 dereferenceable(46080) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(538560) %arg1, ptr noalias nocapture writeonly align 128 dereferenceable(584640) %arg2) local_unnamed_addr #5 {
entry:
  %arg235 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg133 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg031 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !212
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !200
  %2 = shl nuw nsw i32 %0, 10
  %3 = shl nuw nsw i32 %1, 2
  %linear_index_base = or i32 %2, %3
  %linear_index_base.frozen = freeze i32 %linear_index_base
  %4 = udiv i32 %linear_index_base.frozen, 90
  %5 = mul i32 %4, 90
  %.decomposed = sub i32 %linear_index_base.frozen, %5
  %linear_index1 = or i32 %linear_index_base, 1
  %6 = urem i32 %linear_index1, 90
  %linear_index2 = or i32 %linear_index_base, 2
  %linear_index2.frozen = freeze i32 %linear_index2
  %7 = udiv i32 %linear_index2.frozen, 90
  %8 = mul i32 %7, 90
  %.decomposed29 = sub i32 %linear_index2.frozen, %8
  %linear_index3 = or i32 %linear_index_base, 3
  %linear_index3.frozen = freeze i32 %linear_index3
  %9 = udiv i32 %linear_index3.frozen, 90
  %10 = mul i32 %9, 90
  %.decomposed30 = sub i32 %linear_index3.frozen, %10
  %11 = icmp ult i32 %linear_index_base, 146160
  br i1 %11, label %concatenate.pivot.128., label %concatenate_269.in_bounds-after

concatenate_269.in_bounds-after:                  ; preds = %concatenate.3.merge14, %entry
  ret void

concatenate.pivot.128.:                           ; preds = %entry
  %12 = icmp ult i32 %linear_index_base, 11520
  br i1 %12, label %concatenate.pivot.0., label %concatenate.pivot.128.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.128.
  %13 = zext i32 %4 to i64
  %14 = zext i32 %.decomposed to i64
  %15 = getelementptr inbounds [128 x [90 x float]], ptr addrspace(1) %arg031, i64 0, i64 %13, i64 %14
  br label %concatenate.3.merge

concatenate.pivot.128.1:                          ; preds = %concatenate.pivot.128.
  %16 = zext i32 %.decomposed to i64
  %17 = sext i32 %4 to i64
  %18 = getelementptr [1496 x [90 x float]], ptr addrspace(1) %arg133, i64 0, i64 %17, i64 %16
  %19 = getelementptr inbounds float, ptr addrspace(1) %18, i64 -11520
  br label %concatenate.3.merge

concatenate.3.merge:                              ; preds = %concatenate.pivot.128.1, %concatenate.pivot.0.
  %.in = phi ptr addrspace(1) [ %15, %concatenate.pivot.0. ], [ %19, %concatenate.pivot.128.1 ]
  %20 = icmp ult i32 %linear_index_base, 11520
  %21 = load float, ptr addrspace(1) %.in, align 4, !invariant.load !195
  %22 = zext i32 %linear_index_base to i64
  %23 = getelementptr float, ptr addrspace(1) %arg235, i64 %22
  store float %21, ptr addrspace(1) %23, align 16
  br i1 %20, label %concatenate.pivot.0.6, label %concatenate.pivot.128.7

concatenate.pivot.0.6:                            ; preds = %concatenate.3.merge
  %24 = zext i32 %4 to i64
  %25 = zext i32 %6 to i64
  %26 = getelementptr inbounds [128 x [90 x float]], ptr addrspace(1) %arg031, i64 0, i64 %24, i64 %25
  br label %concatenate.3.merge2

concatenate.pivot.128.7:                          ; preds = %concatenate.3.merge
  %27 = zext i32 %6 to i64
  %28 = sext i32 %4 to i64
  %29 = getelementptr [1496 x [90 x float]], ptr addrspace(1) %arg133, i64 0, i64 %28, i64 %27
  %30 = getelementptr inbounds float, ptr addrspace(1) %29, i64 -11520
  br label %concatenate.3.merge2

concatenate.3.merge2:                             ; preds = %concatenate.pivot.128.7, %concatenate.pivot.0.6
  %.in26 = phi ptr addrspace(1) [ %26, %concatenate.pivot.0.6 ], [ %30, %concatenate.pivot.128.7 ]
  %31 = load float, ptr addrspace(1) %.in26, align 4, !invariant.load !195
  %32 = getelementptr inbounds float, ptr addrspace(1) %23, i64 1
  store float %31, ptr addrspace(1) %32, align 4
  %33 = icmp ult i32 %linear_index2, 11520
  br i1 %33, label %concatenate.pivot.0.12, label %concatenate.pivot.128.13

concatenate.pivot.0.12:                           ; preds = %concatenate.3.merge2
  %34 = zext i32 %7 to i64
  %35 = zext i32 %.decomposed29 to i64
  %36 = getelementptr inbounds [128 x [90 x float]], ptr addrspace(1) %arg031, i64 0, i64 %34, i64 %35
  br label %concatenate.3.merge8

concatenate.pivot.128.13:                         ; preds = %concatenate.3.merge2
  %37 = zext i32 %.decomposed29 to i64
  %38 = sext i32 %7 to i64
  %39 = getelementptr [1496 x [90 x float]], ptr addrspace(1) %arg133, i64 0, i64 %38, i64 %37
  %40 = getelementptr inbounds float, ptr addrspace(1) %39, i64 -11520
  br label %concatenate.3.merge8

concatenate.3.merge8:                             ; preds = %concatenate.pivot.128.13, %concatenate.pivot.0.12
  %.in27 = phi ptr addrspace(1) [ %36, %concatenate.pivot.0.12 ], [ %40, %concatenate.pivot.128.13 ]
  %41 = load float, ptr addrspace(1) %.in27, align 4, !invariant.load !195
  %42 = getelementptr inbounds float, ptr addrspace(1) %23, i64 2
  store float %41, ptr addrspace(1) %42, align 8
  %43 = icmp ult i32 %linear_index3, 11520
  br i1 %43, label %concatenate.pivot.0.18, label %concatenate.pivot.128.19

concatenate.pivot.0.18:                           ; preds = %concatenate.3.merge8
  %44 = zext i32 %9 to i64
  %45 = zext i32 %.decomposed30 to i64
  %46 = getelementptr inbounds [128 x [90 x float]], ptr addrspace(1) %arg031, i64 0, i64 %44, i64 %45
  br label %concatenate.3.merge14

concatenate.pivot.128.19:                         ; preds = %concatenate.3.merge8
  %47 = zext i32 %.decomposed30 to i64
  %48 = sext i32 %9 to i64
  %49 = getelementptr [1496 x [90 x float]], ptr addrspace(1) %arg133, i64 0, i64 %48, i64 %47
  %50 = getelementptr inbounds float, ptr addrspace(1) %49, i64 -11520
  br label %concatenate.3.merge14

concatenate.3.merge14:                            ; preds = %concatenate.pivot.128.19, %concatenate.pivot.0.18
  %.in28 = phi ptr addrspace(1) [ %46, %concatenate.pivot.0.18 ], [ %50, %concatenate.pivot.128.19 ]
  %51 = load float, ptr addrspace(1) %.in28, align 4, !invariant.load !195
  %52 = getelementptr inbounds float, ptr addrspace(1) %23, i64 3
  store float %51, ptr addrspace(1) %52, align 4
  br label %concatenate_269.in_bounds-after
}

; Function Attrs: nounwind
define void @fusion_408(ptr noalias nocapture readonly align 16 dereferenceable(512) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(4194304) %arg3, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg4, ptr noalias nocapture writeonly align 128 dereferenceable(4194304) %arg5, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg6) local_unnamed_addr #0 {
entry:
  %arg6243 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg5241 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg4239 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg3237 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg2235 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg1233 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg0231 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !213
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x = and i32 %1, 31
  %thread_id.y176 = lshr i32 %1, 5
  %2 = lshr i32 %0, 1
  %3 = shl nuw nsw i32 %0, 6
  %tile_origin.2 = and i32 %3, 64
  %4 = shl nuw nsw i32 %thread_id.x, 1
  %5 = shl nuw nsw i32 %2, 14
  %6 = shl nuw nsw i32 %thread_id.y176, 7
  %7 = add i32 %6, %tile_origin.2
  %8 = add i32 %7, %4
  %9 = add i32 %5, %6
  %10 = add i32 %9, %tile_origin.2
  %11 = add i32 %10, %4
  %12 = add i32 %11, 1
  %13 = lshr i32 %12, 7
  %14 = zext i32 %11 to i64
  %15 = shl nuw nsw i64 %14, 2
  %16 = add nuw nsw i64 %15, 4
  %scevgep = getelementptr i8, ptr addrspace(1) %arg3237, i64 %16
  %17 = lshr i32 %11, 7
  br label %y_in_tile.loop_body

common.ret:                                       ; preds = %reduction_write_output-after149, %reduction_write_output-true170
  ret void

y_in_tile.loop_body:                              ; preds = %entry, %y_in_tile.loop_body
  %lsr.iv257 = phi i32 [ %17, %entry ], [ %lsr.iv.next258, %y_in_tile.loop_body ]
  %lsr.iv254 = phi ptr addrspace(1) [ %scevgep, %entry ], [ %scevgep255, %y_in_tile.loop_body ]
  %lsr.iv252 = phi i32 [ %13, %entry ], [ %lsr.iv.next253, %y_in_tile.loop_body ]
  %lsr.iv = phi i32 [ %8, %entry ], [ %lsr.iv.next, %y_in_tile.loop_body ]
  %y_in_tile.invar_address.0227 = phi i32 [ %thread_id.y176, %entry ], [ %invar.inc, %y_in_tile.loop_body ]
  %partial_reduction_result2174.sroa.4.0226 = phi float [ 0.000000e+00, %entry ], [ %add.31.i202, %y_in_tile.loop_body ]
  %partial_reduction_result175.sroa.0.0225 = phi float [ -0.000000e+00, %entry ], [ %add.24.i, %y_in_tile.loop_body ]
  %partial_reduction_result175.sroa.4.0224 = phi float [ -0.000000e+00, %entry ], [ %add.24.i201, %y_in_tile.loop_body ]
  %partial_reduction_result2174.sroa.0.0223 = phi float [ 0.000000e+00, %entry ], [ %add.31.i, %y_in_tile.loop_body ]
  %invar.inc = add nuw nsw i32 %y_in_tile.invar_address.0227, 32
  %18 = and i32 %lsr.iv, 126
  %19 = and i32 %lsr.iv257, 33554304
  %20 = or i32 %19, %y_in_tile.invar_address.0227
  %21 = zext i32 %20 to i64
  %22 = zext i32 %18 to i64
  %Arg_3.4 = getelementptr inbounds [8192 x [128 x float]], ptr addrspace(1) %arg3237, i64 0, i64 %21, i64 %22
  %Arg_3.45 = load float, ptr addrspace(1) %Arg_3.4, align 8, !invariant.load !195
  %compare.7 = fcmp ogt float %Arg_3.45, 0.000000e+00
  %Arg_2.3 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg2235, i64 0, i64 %21, i64 0
  %Arg_2.37 = load float, ptr addrspace(1) %Arg_2.3, align 4, !invariant.load !195
  %Arg_1.2 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg1233, i64 0, i64 %21, i64 0
  %Arg_1.28 = load float, ptr addrspace(1) %Arg_1.2, align 4, !invariant.load !195
  %multiply.8 = fmul float %Arg_2.37, %Arg_1.28
  %subtract.11 = fsub float 1.000000e+00, %Arg_1.28
  %multiply.12 = fmul float %multiply.8, %subtract.11
  %Arg_0.1 = getelementptr inbounds [128 x [1 x float]], ptr addrspace(1) %arg0231, i64 0, i64 %22, i64 0
  %Arg_0.111 = load float, ptr addrspace(1) %Arg_0.1, align 8, !invariant.load !195
  %multiply.17 = fmul float %Arg_0.111, %multiply.12
  %23 = select i1 %compare.7, float %multiply.17, float 0.000000e+00
  %add.24.i = fadd float %partial_reduction_result175.sroa.0.0225, %23
  %multiply.26 = fmul float %Arg_3.45, %multiply.12
  %add.31.i = fadd float %partial_reduction_result2174.sroa.0.0223, %multiply.26
  %scevgep256 = getelementptr i8, ptr addrspace(1) %lsr.iv254, i64 -4
  %24 = load <2 x float>, ptr addrspace(1) %scevgep256, align 8, !invariant.load !195
  %Arg_3.426259 = extractelement <2 x float> %24, i32 0
  %Arg_3.478260 = extractelement <2 x float> %24, i32 1
  %compare.728 = fcmp ogt float %Arg_3.426259, 0.000000e+00
  %25 = select i1 %compare.728, float %multiply.17, float 0.000000e+00
  %26 = getelementptr inbounds [8192 x [128 x float]], ptr addrspace(1) %arg5241, i64 0, i64 %21, i64 %22
  store float %25, ptr addrspace(1) %26, align 8
  %27 = add i32 %lsr.iv, 1
  %28 = and i32 %27, 127
  %29 = and i32 %lsr.iv252, 33554304
  %30 = or i32 %29, %y_in_tile.invar_address.0227
  %31 = zext i32 %30 to i64
  %32 = zext i32 %28 to i64
  %Arg_3.445 = getelementptr inbounds [8192 x [128 x float]], ptr addrspace(1) %arg3237, i64 0, i64 %31, i64 %32
  %Arg_3.446 = load float, ptr addrspace(1) %Arg_3.445, align 4, !invariant.load !195
  %compare.748 = fcmp ogt float %Arg_3.446, 0.000000e+00
  %Arg_2.349 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg2235, i64 0, i64 %31, i64 0
  %Arg_2.350 = load float, ptr addrspace(1) %Arg_2.349, align 4, !invariant.load !195
  %Arg_1.251 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg1233, i64 0, i64 %31, i64 0
  %Arg_1.252 = load float, ptr addrspace(1) %Arg_1.251, align 4, !invariant.load !195
  %multiply.853 = fmul float %Arg_2.350, %Arg_1.252
  %subtract.1157 = fsub float 1.000000e+00, %Arg_1.252
  %multiply.1258 = fmul float %multiply.853, %subtract.1157
  %Arg_0.159 = getelementptr inbounds [128 x [1 x float]], ptr addrspace(1) %arg0231, i64 0, i64 %32, i64 0
  %Arg_0.160 = load float, ptr addrspace(1) %Arg_0.159, align 4, !invariant.load !195
  %multiply.1761 = fmul float %Arg_0.160, %multiply.1258
  %33 = select i1 %compare.748, float %multiply.1761, float 0.000000e+00
  %add.24.i201 = fadd float %partial_reduction_result175.sroa.4.0224, %33
  %multiply.2675 = fmul float %Arg_3.446, %multiply.1258
  %add.31.i202 = fadd float %partial_reduction_result2174.sroa.4.0226, %multiply.2675
  %compare.780 = fcmp ogt float %Arg_3.478260, 0.000000e+00
  %34 = select i1 %compare.780, float %multiply.1761, float 0.000000e+00
  %35 = getelementptr inbounds [8192 x [128 x float]], ptr addrspace(1) %arg5241, i64 0, i64 %31, i64 %32
  store float %34, ptr addrspace(1) %35, align 4
  %lsr.iv.next = add nuw nsw i32 %lsr.iv, 4096
  %lsr.iv.next253 = add nuw nsw i32 %lsr.iv252, 32
  %scevgep255 = getelementptr i8, ptr addrspace(1) %lsr.iv254, i64 16384
  %lsr.iv.next258 = add nuw nsw i32 %lsr.iv257, 32
  %36 = icmp ugt i32 %y_in_tile.invar_address.0227, 95
  br i1 %36, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_body
  %37 = zext i32 %thread_id.x to i64
  %38 = zext i32 %thread_id.y176 to i64
  %shmem_output_address = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache25, i64 0, i64 0, i64 0, i64 %37, i64 %38
  store float %add.24.i, ptr addrspace(3) %shmem_output_address, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache25, i64 0, i64 0, i64 0, i64 %38, i64 %37
  %partial_reduction_result94 = load float, ptr addrspace(3) %shmem_transposed_addr, align 4
  %39 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result94, i32 16, i32 31)
  %add.24.i203 = fadd float %partial_reduction_result94, %39
  %40 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.24.i203, i32 8, i32 31)
  %add.24.i204 = fadd float %add.24.i203, %40
  %41 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.24.i204, i32 4, i32 31)
  %add.24.i205 = fadd float %add.24.i204, %41
  %42 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.24.i205, i32 2, i32 31)
  %add.24.i206 = fadd float %add.24.i205, %42
  %43 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.24.i206, i32 1, i32 31)
  %add.24.i207 = fadd float %add.24.i206, %43
  store float %add.24.i207, ptr addrspace(3) %shmem_transposed_addr, align 4
  %44 = shl nuw nsw i32 %thread_id.y176, 1
  %45 = icmp eq i32 %thread_id.x, 0
  %46 = zext i32 %2 to i64
  %47 = or i32 %44, %tile_origin.2
  %48 = zext i32 %47 to i64
  %output_element_address = getelementptr inbounds [64 x [128 x float]], ptr addrspace(1) %arg4239, i64 0, i64 %46, i64 %48
  br i1 %45, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %49 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address108246 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address, i64 1056
  store float %add.24.i201, ptr addrspace(3) %shmem_output_address108246, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr110247 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr, i64 1056
  %partial_reduction_result112 = load float, ptr addrspace(3) %shmem_transposed_addr110247, align 4
  %50 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result112, i32 16, i32 31)
  %add.24.i208 = fadd float %partial_reduction_result112, %50
  %51 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.24.i208, i32 8, i32 31)
  %add.24.i209 = fadd float %add.24.i208, %51
  %52 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.24.i209, i32 4, i32 31)
  %add.24.i210 = fadd float %add.24.i209, %52
  %53 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.24.i210, i32 2, i32 31)
  %add.24.i211 = fadd float %add.24.i210, %53
  %54 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.24.i211, i32 1, i32 31)
  %add.24.i212 = fadd float %add.24.i211, %54
  store float %add.24.i212, ptr addrspace(3) %shmem_transposed_addr110247, align 4
  br i1 %49, label %reduction_write_output-true126, label %reduction_write_output-after127

reduction_write_output-after127:                  ; preds = %reduction_write_output-true126, %reduction_write_output-after
  %55 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address130 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache26, i64 0, i64 0, i64 0, i64 %37, i64 %38
  store float %add.31.i, ptr addrspace(3) %shmem_output_address130, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr132 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache26, i64 0, i64 0, i64 0, i64 %38, i64 %37
  %partial_reduction_result134 = load float, ptr addrspace(3) %shmem_transposed_addr132, align 4
  %56 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result134, i32 16, i32 31)
  %add.31.i213 = fadd float %partial_reduction_result134, %56
  %57 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.31.i213, i32 8, i32 31)
  %add.31.i214 = fadd float %add.31.i213, %57
  %58 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.31.i214, i32 4, i32 31)
  %add.31.i215 = fadd float %add.31.i214, %58
  %59 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.31.i215, i32 2, i32 31)
  %add.31.i216 = fadd float %add.31.i215, %59
  %60 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.31.i216, i32 1, i32 31)
  %add.31.i217 = fadd float %add.31.i216, %60
  store float %add.31.i217, ptr addrspace(3) %shmem_transposed_addr132, align 4
  %output_element_address150 = getelementptr inbounds [64 x [128 x float]], ptr addrspace(1) %arg6243, i64 0, i64 %46, i64 %48
  br i1 %55, label %reduction_write_output-true148, label %reduction_write_output-after149

reduction_write_output-after149:                  ; preds = %reduction_write_output-true148, %reduction_write_output-after127
  %61 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address152248 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address130, i64 1056
  store float %add.31.i202, ptr addrspace(3) %shmem_output_address152248, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr154249 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr132, i64 1056
  %partial_reduction_result156 = load float, ptr addrspace(3) %shmem_transposed_addr154249, align 4
  %62 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result156, i32 16, i32 31)
  %add.31.i218 = fadd float %partial_reduction_result156, %62
  %63 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.31.i218, i32 8, i32 31)
  %add.31.i219 = fadd float %add.31.i218, %63
  %64 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.31.i219, i32 4, i32 31)
  %add.31.i220 = fadd float %add.31.i219, %64
  %65 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.31.i220, i32 2, i32 31)
  %add.31.i221 = fadd float %add.31.i220, %65
  %66 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.31.i221, i32 1, i32 31)
  %add.31.i222 = fadd float %add.31.i221, %66
  store float %add.31.i222, ptr addrspace(3) %shmem_transposed_addr154249, align 4
  br i1 %61, label %reduction_write_output-true170, label %common.ret

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  store float %add.24.i207, ptr addrspace(1) %output_element_address, align 8
  br label %reduction_write_output-after

reduction_write_output-true126:                   ; preds = %reduction_write_output-after
  %sunkaddr = getelementptr inbounds i8, ptr addrspace(1) %output_element_address, i64 4
  store float %add.24.i212, ptr addrspace(1) %sunkaddr, align 4
  br label %reduction_write_output-after127

reduction_write_output-true148:                   ; preds = %reduction_write_output-after127
  store float %add.31.i217, ptr addrspace(1) %output_element_address150, align 8
  br label %reduction_write_output-after149

reduction_write_output-true170:                   ; preds = %reduction_write_output-after149
  %sunkaddr261 = getelementptr inbounds i8, ptr addrspace(1) %output_element_address150, i64 4
  store float %add.31.i222, ptr addrspace(1) %sunkaddr261, align 4
  br label %common.ret
}

; Function Attrs: nounwind
define void @fusion_392(ptr noalias nocapture readonly align 128 dereferenceable(4194304) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(4194304) %arg1, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg2, ptr noalias nocapture writeonly align 128 dereferenceable(4194304) %arg3) local_unnamed_addr #0 {
entry:
  %arg397 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg295 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg193 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg091 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !213
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x = and i32 %1, 31
  %thread_id.y64 = lshr i32 %1, 5
  %2 = lshr i32 %0, 1
  %3 = shl nuw nsw i32 %0, 6
  %tile_origin.2 = and i32 %3, 64
  %4 = shl nuw nsw i32 %thread_id.x, 1
  %5 = shl nuw nsw i32 %2, 14
  %6 = shl nuw nsw i32 %thread_id.y64, 7
  %7 = add i32 %6, %tile_origin.2
  %8 = add i32 %7, %4
  %9 = add i32 %5, %6
  %10 = add i32 %9, %tile_origin.2
  %11 = add i32 %10, %4
  %12 = add i32 %11, 1
  %13 = lshr i32 %12, 7
  %14 = lshr i32 %11, 7
  %15 = zext i32 %11 to i64
  %16 = shl nuw nsw i64 %15, 2
  %17 = add nuw nsw i64 %16, 4
  %scevgep = getelementptr i8, ptr addrspace(1) %arg193, i64 %17
  %scevgep109 = getelementptr i8, ptr addrspace(1) %arg091, i64 %17
  br label %y_in_tile.loop_body

common.ret:                                       ; preds = %reduction_write_output-after, %reduction_write_output-true59
  ret void

y_in_tile.loop_body:                              ; preds = %entry, %y_in_tile.loop_body
  %lsr.iv110 = phi ptr addrspace(1) [ %scevgep109, %entry ], [ %scevgep111, %y_in_tile.loop_body ]
  %lsr.iv106 = phi ptr addrspace(1) [ %scevgep, %entry ], [ %scevgep107, %y_in_tile.loop_body ]
  %lsr.iv104 = phi i32 [ %8, %entry ], [ %lsr.iv.next105, %y_in_tile.loop_body ]
  %lsr.iv = phi i32 [ 0, %entry ], [ %lsr.iv.next, %y_in_tile.loop_body ]
  %partial_reduction_result63.sroa.4.088 = phi float [ -0.000000e+00, %entry ], [ %add.12.i76, %y_in_tile.loop_body ]
  %partial_reduction_result63.sroa.0.087 = phi float [ -0.000000e+00, %entry ], [ %add.12.i, %y_in_tile.loop_body ]
  %18 = add i32 %thread_id.y64, %lsr.iv
  %19 = and i32 %lsr.iv104, 126
  %20 = add i32 %14, %lsr.iv
  %21 = and i32 %20, 33554304
  %22 = or i32 %21, %18
  %23 = zext i32 %22 to i64
  %24 = zext i32 %19 to i64
  %Arg_1.2 = getelementptr inbounds [8192 x [128 x float]], ptr addrspace(1) %arg193, i64 0, i64 %23, i64 %24
  %Arg_1.23 = load float, ptr addrspace(1) %Arg_1.2, align 8, !invariant.load !195
  %compare.5 = fcmp ogt float %Arg_1.23, 0.000000e+00
  %Arg_0.1 = getelementptr inbounds [8192 x [128 x float]], ptr addrspace(1) %arg091, i64 0, i64 %23, i64 %24
  %Arg_0.14 = load float, ptr addrspace(1) %Arg_0.1, align 8, !invariant.load !195
  %25 = select i1 %compare.5, float %Arg_0.14, float 0.000000e+00
  %add.12.i = fadd float %partial_reduction_result63.sroa.0.087, %25
  %scevgep108 = getelementptr i8, ptr addrspace(1) %lsr.iv106, i64 -4
  %26 = load <2 x float>, ptr addrspace(1) %scevgep108, align 8, !invariant.load !195
  %Arg_1.26113 = extractelement <2 x float> %26, i32 0
  %Arg_1.222114 = extractelement <2 x float> %26, i32 1
  %compare.58 = fcmp ogt float %Arg_1.26113, 0.000000e+00
  %scevgep112 = getelementptr i8, ptr addrspace(1) %lsr.iv110, i64 -4
  %27 = load <2 x float>, ptr addrspace(1) %scevgep112, align 8, !invariant.load !195
  %Arg_0.110115 = extractelement <2 x float> %27, i32 0
  %Arg_0.126116 = extractelement <2 x float> %27, i32 1
  %28 = select i1 %compare.58, float %Arg_0.110115, float 0.000000e+00
  %29 = getelementptr inbounds [8192 x [128 x float]], ptr addrspace(1) %arg397, i64 0, i64 %23, i64 %24
  store float %28, ptr addrspace(1) %29, align 8
  %30 = add i32 %lsr.iv104, 1
  %31 = and i32 %30, 127
  %32 = add i32 %13, %lsr.iv
  %33 = and i32 %32, 33554304
  %34 = or i32 %33, %18
  %35 = zext i32 %34 to i64
  %36 = zext i32 %31 to i64
  %Arg_1.214 = getelementptr inbounds [8192 x [128 x float]], ptr addrspace(1) %arg193, i64 0, i64 %35, i64 %36
  %Arg_1.215 = load float, ptr addrspace(1) %Arg_1.214, align 4, !invariant.load !195
  %compare.517 = fcmp ogt float %Arg_1.215, 0.000000e+00
  %Arg_0.118 = getelementptr inbounds [8192 x [128 x float]], ptr addrspace(1) %arg091, i64 0, i64 %35, i64 %36
  %Arg_0.119 = load float, ptr addrspace(1) %Arg_0.118, align 4, !invariant.load !195
  %37 = select i1 %compare.517, float %Arg_0.119, float 0.000000e+00
  %add.12.i76 = fadd float %partial_reduction_result63.sroa.4.088, %37
  %compare.524 = fcmp ogt float %Arg_1.222114, 0.000000e+00
  %38 = select i1 %compare.524, float %Arg_0.126116, float 0.000000e+00
  %39 = getelementptr inbounds [8192 x [128 x float]], ptr addrspace(1) %arg397, i64 0, i64 %35, i64 %36
  store float %38, ptr addrspace(1) %39, align 4
  %lsr.iv.next = add nuw nsw i32 %lsr.iv, 32
  %40 = add i32 %thread_id.y64, %lsr.iv.next
  %41 = add i32 %40, -32
  %lsr.iv.next105 = add nuw nsw i32 %lsr.iv104, 4096
  %scevgep107 = getelementptr i8, ptr addrspace(1) %lsr.iv106, i64 16384
  %scevgep111 = getelementptr i8, ptr addrspace(1) %lsr.iv110, i64 16384
  %42 = icmp ugt i32 %41, 95
  br i1 %42, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_body
  %43 = zext i32 %thread_id.x to i64
  %44 = zext i32 %thread_id.y64 to i64
  %shmem_output_address = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache27, i64 0, i64 0, i64 0, i64 %43, i64 %44
  store float %add.12.i, ptr addrspace(3) %shmem_output_address, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache27, i64 0, i64 0, i64 0, i64 %44, i64 %43
  %partial_reduction_result27 = load float, ptr addrspace(3) %shmem_transposed_addr, align 4
  %45 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result27, i32 16, i32 31)
  %add.12.i77 = fadd float %partial_reduction_result27, %45
  %46 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.12.i77, i32 8, i32 31)
  %add.12.i78 = fadd float %add.12.i77, %46
  %47 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.12.i78, i32 4, i32 31)
  %add.12.i79 = fadd float %add.12.i78, %47
  %48 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.12.i79, i32 2, i32 31)
  %add.12.i80 = fadd float %add.12.i79, %48
  %49 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.12.i80, i32 1, i32 31)
  %add.12.i81 = fadd float %add.12.i80, %49
  store float %add.12.i81, ptr addrspace(3) %shmem_transposed_addr, align 4
  %50 = shl nuw nsw i32 %thread_id.y64, 1
  %51 = icmp eq i32 %thread_id.x, 0
  %52 = zext i32 %2 to i64
  %53 = or i32 %50, %tile_origin.2
  %54 = zext i32 %53 to i64
  %output_element_address = getelementptr inbounds [64 x [128 x float]], ptr addrspace(1) %arg295, i64 0, i64 %52, i64 %54
  br i1 %51, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %55 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address41101 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address, i64 1056
  store float %add.12.i76, ptr addrspace(3) %shmem_output_address41101, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr43102 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr, i64 1056
  %partial_reduction_result45 = load float, ptr addrspace(3) %shmem_transposed_addr43102, align 4
  %56 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result45, i32 16, i32 31)
  %add.12.i82 = fadd float %partial_reduction_result45, %56
  %57 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.12.i82, i32 8, i32 31)
  %add.12.i83 = fadd float %add.12.i82, %57
  %58 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.12.i83, i32 4, i32 31)
  %add.12.i84 = fadd float %add.12.i83, %58
  %59 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.12.i84, i32 2, i32 31)
  %add.12.i85 = fadd float %add.12.i84, %59
  %60 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.12.i85, i32 1, i32 31)
  %add.12.i86 = fadd float %add.12.i85, %60
  store float %add.12.i86, ptr addrspace(3) %shmem_transposed_addr43102, align 4
  br i1 %55, label %reduction_write_output-true59, label %common.ret

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  store float %add.12.i81, ptr addrspace(1) %output_element_address, align 8
  br label %reduction_write_output-after

reduction_write_output-true59:                    ; preds = %reduction_write_output-after
  %sunkaddr = getelementptr inbounds i8, ptr addrspace(1) %output_element_address, i64 4
  store float %add.12.i86, ptr addrspace(1) %sunkaddr, align 4
  br label %common.ret
}

; Function Attrs: nounwind
define void @fusion_376(ptr noalias nocapture readonly align 128 dereferenceable(8388608) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(8388608) %arg1, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg2, ptr noalias nocapture writeonly align 128 dereferenceable(8388608) %arg3) local_unnamed_addr #0 {
entry:
  %arg397 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg295 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg193 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg091 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !200
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x = and i32 %1, 31
  %thread_id.y64 = lshr i32 %1, 5
  %2 = lshr i32 %0, 2
  %3 = shl nuw nsw i32 %0, 6
  %tile_origin.2 = and i32 %3, 192
  %4 = shl nuw nsw i32 %thread_id.x, 1
  %5 = shl nuw nsw i32 %2, 15
  %6 = shl nuw nsw i32 %thread_id.y64, 8
  %7 = add i32 %6, %tile_origin.2
  %8 = add i32 %7, %4
  %9 = add i32 %5, %6
  %10 = add i32 %9, %tile_origin.2
  %11 = add i32 %10, %4
  %12 = add i32 %11, 1
  %13 = lshr i32 %12, 8
  %14 = lshr i32 %11, 8
  %15 = zext i32 %11 to i64
  %16 = shl nuw nsw i64 %15, 2
  %17 = add nuw nsw i64 %16, 4
  %scevgep = getelementptr i8, ptr addrspace(1) %arg193, i64 %17
  %scevgep109 = getelementptr i8, ptr addrspace(1) %arg091, i64 %17
  br label %y_in_tile.loop_body

common.ret:                                       ; preds = %reduction_write_output-after, %reduction_write_output-true59
  ret void

y_in_tile.loop_body:                              ; preds = %entry, %y_in_tile.loop_body
  %lsr.iv110 = phi ptr addrspace(1) [ %scevgep109, %entry ], [ %scevgep111, %y_in_tile.loop_body ]
  %lsr.iv106 = phi ptr addrspace(1) [ %scevgep, %entry ], [ %scevgep107, %y_in_tile.loop_body ]
  %lsr.iv104 = phi i32 [ %8, %entry ], [ %lsr.iv.next105, %y_in_tile.loop_body ]
  %lsr.iv = phi i32 [ 0, %entry ], [ %lsr.iv.next, %y_in_tile.loop_body ]
  %partial_reduction_result63.sroa.4.088 = phi float [ -0.000000e+00, %entry ], [ %add.12.i76, %y_in_tile.loop_body ]
  %partial_reduction_result63.sroa.0.087 = phi float [ -0.000000e+00, %entry ], [ %add.12.i, %y_in_tile.loop_body ]
  %18 = add i32 %thread_id.y64, %lsr.iv
  %19 = and i32 %lsr.iv104, 254
  %20 = add i32 %14, %lsr.iv
  %21 = and i32 %20, 16777088
  %22 = or i32 %21, %18
  %23 = zext i32 %22 to i64
  %24 = zext i32 %19 to i64
  %Arg_1.2 = getelementptr inbounds [8192 x [256 x float]], ptr addrspace(1) %arg193, i64 0, i64 %23, i64 %24
  %Arg_1.23 = load float, ptr addrspace(1) %Arg_1.2, align 8, !invariant.load !195
  %compare.5 = fcmp ogt float %Arg_1.23, 0.000000e+00
  %Arg_0.1 = getelementptr inbounds [8192 x [256 x float]], ptr addrspace(1) %arg091, i64 0, i64 %23, i64 %24
  %Arg_0.14 = load float, ptr addrspace(1) %Arg_0.1, align 8, !invariant.load !195
  %25 = select i1 %compare.5, float %Arg_0.14, float 0.000000e+00
  %add.12.i = fadd float %partial_reduction_result63.sroa.0.087, %25
  %scevgep108 = getelementptr i8, ptr addrspace(1) %lsr.iv106, i64 -4
  %26 = load <2 x float>, ptr addrspace(1) %scevgep108, align 8, !invariant.load !195
  %Arg_1.26113 = extractelement <2 x float> %26, i32 0
  %Arg_1.222114 = extractelement <2 x float> %26, i32 1
  %compare.58 = fcmp ogt float %Arg_1.26113, 0.000000e+00
  %scevgep112 = getelementptr i8, ptr addrspace(1) %lsr.iv110, i64 -4
  %27 = load <2 x float>, ptr addrspace(1) %scevgep112, align 8, !invariant.load !195
  %Arg_0.110115 = extractelement <2 x float> %27, i32 0
  %Arg_0.126116 = extractelement <2 x float> %27, i32 1
  %28 = select i1 %compare.58, float %Arg_0.110115, float 0.000000e+00
  %29 = getelementptr inbounds [8192 x [256 x float]], ptr addrspace(1) %arg397, i64 0, i64 %23, i64 %24
  store float %28, ptr addrspace(1) %29, align 8
  %30 = add i32 %lsr.iv104, 1
  %31 = and i32 %30, 255
  %32 = add i32 %13, %lsr.iv
  %33 = and i32 %32, 16777088
  %34 = or i32 %33, %18
  %35 = zext i32 %34 to i64
  %36 = zext i32 %31 to i64
  %Arg_1.214 = getelementptr inbounds [8192 x [256 x float]], ptr addrspace(1) %arg193, i64 0, i64 %35, i64 %36
  %Arg_1.215 = load float, ptr addrspace(1) %Arg_1.214, align 4, !invariant.load !195
  %compare.517 = fcmp ogt float %Arg_1.215, 0.000000e+00
  %Arg_0.118 = getelementptr inbounds [8192 x [256 x float]], ptr addrspace(1) %arg091, i64 0, i64 %35, i64 %36
  %Arg_0.119 = load float, ptr addrspace(1) %Arg_0.118, align 4, !invariant.load !195
  %37 = select i1 %compare.517, float %Arg_0.119, float 0.000000e+00
  %add.12.i76 = fadd float %partial_reduction_result63.sroa.4.088, %37
  %compare.524 = fcmp ogt float %Arg_1.222114, 0.000000e+00
  %38 = select i1 %compare.524, float %Arg_0.126116, float 0.000000e+00
  %39 = getelementptr inbounds [8192 x [256 x float]], ptr addrspace(1) %arg397, i64 0, i64 %35, i64 %36
  store float %38, ptr addrspace(1) %39, align 4
  %lsr.iv.next = add nuw nsw i32 %lsr.iv, 32
  %40 = add i32 %thread_id.y64, %lsr.iv.next
  %41 = add i32 %40, -32
  %lsr.iv.next105 = add nuw nsw i32 %lsr.iv104, 8192
  %scevgep107 = getelementptr i8, ptr addrspace(1) %lsr.iv106, i64 32768
  %scevgep111 = getelementptr i8, ptr addrspace(1) %lsr.iv110, i64 32768
  %42 = icmp ugt i32 %41, 95
  br i1 %42, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_body
  %43 = zext i32 %thread_id.x to i64
  %44 = zext i32 %thread_id.y64 to i64
  %shmem_output_address = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache28, i64 0, i64 0, i64 0, i64 %43, i64 %44
  store float %add.12.i, ptr addrspace(3) %shmem_output_address, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache28, i64 0, i64 0, i64 0, i64 %44, i64 %43
  %partial_reduction_result27 = load float, ptr addrspace(3) %shmem_transposed_addr, align 4
  %45 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result27, i32 16, i32 31)
  %add.12.i77 = fadd float %partial_reduction_result27, %45
  %46 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.12.i77, i32 8, i32 31)
  %add.12.i78 = fadd float %add.12.i77, %46
  %47 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.12.i78, i32 4, i32 31)
  %add.12.i79 = fadd float %add.12.i78, %47
  %48 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.12.i79, i32 2, i32 31)
  %add.12.i80 = fadd float %add.12.i79, %48
  %49 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.12.i80, i32 1, i32 31)
  %add.12.i81 = fadd float %add.12.i80, %49
  store float %add.12.i81, ptr addrspace(3) %shmem_transposed_addr, align 4
  %50 = shl nuw nsw i32 %thread_id.y64, 1
  %51 = icmp eq i32 %thread_id.x, 0
  %52 = zext i32 %2 to i64
  %53 = or i32 %50, %tile_origin.2
  %54 = zext i32 %53 to i64
  %output_element_address = getelementptr inbounds [64 x [256 x float]], ptr addrspace(1) %arg295, i64 0, i64 %52, i64 %54
  br i1 %51, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %55 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address41101 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address, i64 1056
  store float %add.12.i76, ptr addrspace(3) %shmem_output_address41101, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr43102 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr, i64 1056
  %partial_reduction_result45 = load float, ptr addrspace(3) %shmem_transposed_addr43102, align 4
  %56 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result45, i32 16, i32 31)
  %add.12.i82 = fadd float %partial_reduction_result45, %56
  %57 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.12.i82, i32 8, i32 31)
  %add.12.i83 = fadd float %add.12.i82, %57
  %58 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.12.i83, i32 4, i32 31)
  %add.12.i84 = fadd float %add.12.i83, %58
  %59 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.12.i84, i32 2, i32 31)
  %add.12.i85 = fadd float %add.12.i84, %59
  %60 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.12.i85, i32 1, i32 31)
  %add.12.i86 = fadd float %add.12.i85, %60
  store float %add.12.i86, ptr addrspace(3) %shmem_transposed_addr43102, align 4
  br i1 %55, label %reduction_write_output-true59, label %common.ret

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  store float %add.12.i81, ptr addrspace(1) %output_element_address, align 8
  br label %reduction_write_output-after

reduction_write_output-true59:                    ; preds = %reduction_write_output-after
  %sunkaddr = getelementptr inbounds i8, ptr addrspace(1) %output_element_address, i64 4
  store float %add.12.i86, ptr addrspace(1) %sunkaddr, align 4
  br label %common.ret
}

; Function Attrs: nounwind
define void @fusion_644(ptr noalias nocapture readonly align 128 dereferenceable(65536) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg1, ptr noalias nocapture writeonly align 128 dereferenceable(1024) %arg2) local_unnamed_addr #0 {
entry:
  %arg278 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg176 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg074 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !196
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x = and i32 %1, 31
  %thread_id.y47 = lshr i32 %1, 5
  %tile_origin.2 = shl nuw nsw i32 %0, 6
  %Arg_1.2 = load float, ptr addrspace(1) %arg176, align 128, !invariant.load !195
  %2 = shl nuw nsw i32 %thread_id.x, 1
  %3 = or i32 %2, %tile_origin.2
  %4 = zext i32 %3 to i64
  %5 = add nuw nsw i32 %thread_id.y47, -32
  %6 = zext i32 %1 to i64
  %7 = lshr i64 %6, 5
  %8 = shl nuw nsw i64 %7, 10
  %9 = shl nuw nsw i64 %4, 2
  %10 = add i64 %8, %9
  %11 = add i64 %10, 4
  %scevgep = getelementptr i8, ptr addrspace(1) %arg074, i64 %11
  br label %y_in_tile.loop_body

common.ret:                                       ; preds = %reduction_write_output-after, %reduction_write_output-true42
  ret void

y_in_tile.loop_body:                              ; preds = %entry, %y_in_tile.loop_body
  %lsr.iv84 = phi ptr addrspace(1) [ %scevgep, %entry ], [ %scevgep85, %y_in_tile.loop_body ]
  %lsr.iv = phi i32 [ %5, %entry ], [ %lsr.iv.next, %y_in_tile.loop_body ]
  %partial_reduction_result46.sroa.4.071 = phi float [ %Arg_1.2, %entry ], [ %add.6.i59, %y_in_tile.loop_body ]
  %partial_reduction_result46.sroa.0.070 = phi float [ %Arg_1.2, %entry ], [ %add.6.i, %y_in_tile.loop_body ]
  %scevgep86 = getelementptr i8, ptr addrspace(1) %lsr.iv84, i64 -4
  %12 = load <2 x float>, ptr addrspace(1) %scevgep86, align 8, !invariant.load !195
  %Arg_0.1387 = extractelement <2 x float> %12, i32 0
  %Arg_0.1888 = extractelement <2 x float> %12, i32 1
  %add.6.i = fadd float %partial_reduction_result46.sroa.0.070, %Arg_0.1387
  %add.6.i59 = fadd float %partial_reduction_result46.sroa.4.071, %Arg_0.1888
  %lsr.iv.next = add nsw i32 %lsr.iv, 32
  %scevgep85 = getelementptr i8, ptr addrspace(1) %lsr.iv84, i64 32768
  %13 = icmp ugt i32 %lsr.iv.next, 31
  br i1 %13, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_body
  %14 = zext i32 %thread_id.x to i64
  %15 = zext i32 %thread_id.y47 to i64
  %shmem_output_address = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache29, i64 0, i64 0, i64 0, i64 %14, i64 %15
  store float %add.6.i, ptr addrspace(3) %shmem_output_address, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache29, i64 0, i64 0, i64 0, i64 %15, i64 %14
  %partial_reduction_result10 = load float, ptr addrspace(3) %shmem_transposed_addr, align 4
  %16 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result10, i32 16, i32 31)
  %add.6.i60 = fadd float %partial_reduction_result10, %16
  %17 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.6.i60, i32 8, i32 31)
  %add.6.i61 = fadd float %add.6.i60, %17
  %18 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.6.i61, i32 4, i32 31)
  %add.6.i62 = fadd float %add.6.i61, %18
  %19 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.6.i62, i32 2, i32 31)
  %add.6.i63 = fadd float %add.6.i62, %19
  %20 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.6.i63, i32 1, i32 31)
  %add.6.i64 = fadd float %add.6.i63, %20
  store float %add.6.i64, ptr addrspace(3) %shmem_transposed_addr, align 4
  %21 = shl nuw nsw i32 %thread_id.y47, 1
  %22 = icmp eq i32 %thread_id.x, 0
  %23 = or i32 %21, %tile_origin.2
  %24 = zext i32 %23 to i64
  %output_element_address = getelementptr inbounds [256 x float], ptr addrspace(1) %arg278, i64 0, i64 %24
  br i1 %22, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %25 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address2481 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address, i64 1056
  store float %add.6.i59, ptr addrspace(3) %shmem_output_address2481, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr2682 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr, i64 1056
  %partial_reduction_result28 = load float, ptr addrspace(3) %shmem_transposed_addr2682, align 4
  %26 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result28, i32 16, i32 31)
  %add.6.i65 = fadd float %partial_reduction_result28, %26
  %27 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.6.i65, i32 8, i32 31)
  %add.6.i66 = fadd float %add.6.i65, %27
  %28 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.6.i66, i32 4, i32 31)
  %add.6.i67 = fadd float %add.6.i66, %28
  %29 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.6.i67, i32 2, i32 31)
  %add.6.i68 = fadd float %add.6.i67, %29
  %30 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.6.i68, i32 1, i32 31)
  %add.6.i69 = fadd float %add.6.i68, %30
  store float %add.6.i69, ptr addrspace(3) %shmem_transposed_addr2682, align 4
  br i1 %25, label %reduction_write_output-true42, label %common.ret

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  store float %add.6.i64, ptr addrspace(1) %output_element_address, align 8
  br label %reduction_write_output-after

reduction_write_output-true42:                    ; preds = %reduction_write_output-after
  %sunkaddr = getelementptr inbounds i8, ptr addrspace(1) %output_element_address, i64 4
  store float %add.6.i69, ptr addrspace(1) %sunkaddr, align 4
  br label %common.ret
}

; Function Attrs: nounwind
define void @fusion_304(ptr noalias nocapture readonly align 16 dereferenceable(512) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(4194304) %arg3, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg4, ptr noalias nocapture writeonly align 128 dereferenceable(4194304) %arg5, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg6) local_unnamed_addr #0 {
entry:
  %arg6216 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg5214 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg4212 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg3210 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg2208 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg1206 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg0204 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !213
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x = and i32 %1, 31
  %thread_id.y149 = lshr i32 %1, 5
  %2 = lshr i32 %0, 1
  %3 = shl nuw nsw i32 %0, 6
  %tile_origin.2 = and i32 %3, 64
  %4 = shl nuw nsw i32 %thread_id.x, 1
  %5 = shl nuw nsw i32 %2, 14
  %6 = shl nuw nsw i32 %thread_id.y149, 7
  %7 = add i32 %6, %tile_origin.2
  %8 = add i32 %7, %4
  %9 = add i32 %5, %6
  %10 = add i32 %9, %tile_origin.2
  %11 = add i32 %10, %4
  %12 = add i32 %11, 1
  %13 = lshr i32 %12, 7
  %14 = zext i32 %11 to i64
  %15 = shl nuw nsw i64 %14, 2
  %16 = add nuw nsw i64 %15, 4
  %scevgep = getelementptr i8, ptr addrspace(1) %arg3210, i64 %16
  %17 = lshr i32 %11, 7
  br label %y_in_tile.loop_body

common.ret:                                       ; preds = %reduction_write_output-after122, %reduction_write_output-true143
  ret void

y_in_tile.loop_body:                              ; preds = %entry, %y_in_tile.loop_body
  %lsr.iv230 = phi i32 [ %17, %entry ], [ %lsr.iv.next231, %y_in_tile.loop_body ]
  %lsr.iv227 = phi ptr addrspace(1) [ %scevgep, %entry ], [ %scevgep228, %y_in_tile.loop_body ]
  %lsr.iv225 = phi i32 [ %13, %entry ], [ %lsr.iv.next226, %y_in_tile.loop_body ]
  %lsr.iv = phi i32 [ %8, %entry ], [ %lsr.iv.next, %y_in_tile.loop_body ]
  %y_in_tile.invar_address.0200 = phi i32 [ %thread_id.y149, %entry ], [ %invar.inc, %y_in_tile.loop_body ]
  %partial_reduction_result2147.sroa.4.0199 = phi float [ 0.000000e+00, %entry ], [ %add.27.i175, %y_in_tile.loop_body ]
  %partial_reduction_result148.sroa.0.0198 = phi float [ -0.000000e+00, %entry ], [ %add.20.i, %y_in_tile.loop_body ]
  %partial_reduction_result148.sroa.4.0197 = phi float [ -0.000000e+00, %entry ], [ %add.20.i174, %y_in_tile.loop_body ]
  %partial_reduction_result2147.sroa.0.0196 = phi float [ 0.000000e+00, %entry ], [ %add.27.i, %y_in_tile.loop_body ]
  %invar.inc = add nuw nsw i32 %y_in_tile.invar_address.0200, 32
  %18 = and i32 %lsr.iv, 126
  %19 = and i32 %lsr.iv230, 33554304
  %20 = or i32 %19, %y_in_tile.invar_address.0200
  %21 = zext i32 %20 to i64
  %22 = zext i32 %18 to i64
  %Arg_3.4 = getelementptr inbounds [8192 x [128 x float]], ptr addrspace(1) %arg3210, i64 0, i64 %21, i64 %22
  %Arg_3.45 = load float, ptr addrspace(1) %Arg_3.4, align 8, !invariant.load !195
  %compare.7 = fcmp ogt float %Arg_3.45, 0.000000e+00
  %Arg_1.2 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg1206, i64 0, i64 %21, i64 0
  %Arg_1.27 = load float, ptr addrspace(1) %Arg_1.2, align 4, !invariant.load !195
  %Arg_2.3 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg2208, i64 0, i64 %21, i64 0
  %Arg_2.38 = load float, ptr addrspace(1) %Arg_2.3, align 4, !invariant.load !195
  %add.8 = fadd float %Arg_1.27, %Arg_2.38
  %Arg_0.1 = getelementptr inbounds [128 x [1 x float]], ptr addrspace(1) %arg0204, i64 0, i64 %22, i64 0
  %Arg_0.19 = load float, ptr addrspace(1) %Arg_0.1, align 8, !invariant.load !195
  %multiply.13 = fmul float %add.8, %Arg_0.19
  %23 = select i1 %compare.7, float %multiply.13, float 0.000000e+00
  %add.20.i = fadd float %partial_reduction_result148.sroa.0.0198, %23
  %multiply.22 = fmul float %Arg_3.45, %add.8
  %add.27.i = fadd float %partial_reduction_result2147.sroa.0.0196, %multiply.22
  %scevgep229 = getelementptr i8, ptr addrspace(1) %lsr.iv227, i64 -4
  %24 = load <2 x float>, ptr addrspace(1) %scevgep229, align 8, !invariant.load !195
  %Arg_3.419232 = extractelement <2 x float> %24, i32 0
  %Arg_3.456233 = extractelement <2 x float> %24, i32 1
  %compare.721 = fcmp ogt float %Arg_3.419232, 0.000000e+00
  %25 = select i1 %compare.721, float %multiply.13, float 0.000000e+00
  %26 = getelementptr inbounds [8192 x [128 x float]], ptr addrspace(1) %arg5214, i64 0, i64 %21, i64 %22
  store float %25, ptr addrspace(1) %26, align 8
  %27 = add i32 %lsr.iv, 1
  %28 = and i32 %27, 127
  %29 = and i32 %lsr.iv225, 33554304
  %30 = or i32 %29, %y_in_tile.invar_address.0200
  %31 = zext i32 %30 to i64
  %32 = zext i32 %28 to i64
  %Arg_3.433 = getelementptr inbounds [8192 x [128 x float]], ptr addrspace(1) %arg3210, i64 0, i64 %31, i64 %32
  %Arg_3.434 = load float, ptr addrspace(1) %Arg_3.433, align 4, !invariant.load !195
  %compare.736 = fcmp ogt float %Arg_3.434, 0.000000e+00
  %Arg_1.237 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg1206, i64 0, i64 %31, i64 0
  %Arg_1.238 = load float, ptr addrspace(1) %Arg_1.237, align 4, !invariant.load !195
  %Arg_2.339 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg2208, i64 0, i64 %31, i64 0
  %Arg_2.340 = load float, ptr addrspace(1) %Arg_2.339, align 4, !invariant.load !195
  %add.841 = fadd float %Arg_1.238, %Arg_2.340
  %Arg_0.142 = getelementptr inbounds [128 x [1 x float]], ptr addrspace(1) %arg0204, i64 0, i64 %32, i64 0
  %Arg_0.143 = load float, ptr addrspace(1) %Arg_0.142, align 4, !invariant.load !195
  %multiply.1344 = fmul float %add.841, %Arg_0.143
  %33 = select i1 %compare.736, float %multiply.1344, float 0.000000e+00
  %add.20.i174 = fadd float %partial_reduction_result148.sroa.4.0197, %33
  %multiply.2253 = fmul float %Arg_3.434, %add.841
  %add.27.i175 = fadd float %partial_reduction_result2147.sroa.4.0199, %multiply.2253
  %compare.758 = fcmp ogt float %Arg_3.456233, 0.000000e+00
  %34 = select i1 %compare.758, float %multiply.1344, float 0.000000e+00
  %35 = getelementptr inbounds [8192 x [128 x float]], ptr addrspace(1) %arg5214, i64 0, i64 %31, i64 %32
  store float %34, ptr addrspace(1) %35, align 4
  %lsr.iv.next = add nuw nsw i32 %lsr.iv, 4096
  %lsr.iv.next226 = add nuw nsw i32 %lsr.iv225, 32
  %scevgep228 = getelementptr i8, ptr addrspace(1) %lsr.iv227, i64 16384
  %lsr.iv.next231 = add nuw nsw i32 %lsr.iv230, 32
  %36 = icmp ugt i32 %y_in_tile.invar_address.0200, 95
  br i1 %36, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_body
  %37 = zext i32 %thread_id.x to i64
  %38 = zext i32 %thread_id.y149 to i64
  %shmem_output_address = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache30, i64 0, i64 0, i64 0, i64 %37, i64 %38
  store float %add.20.i, ptr addrspace(3) %shmem_output_address, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache30, i64 0, i64 0, i64 0, i64 %38, i64 %37
  %partial_reduction_result67 = load float, ptr addrspace(3) %shmem_transposed_addr, align 4
  %39 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result67, i32 16, i32 31)
  %add.20.i176 = fadd float %partial_reduction_result67, %39
  %40 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i176, i32 8, i32 31)
  %add.20.i177 = fadd float %add.20.i176, %40
  %41 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i177, i32 4, i32 31)
  %add.20.i178 = fadd float %add.20.i177, %41
  %42 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i178, i32 2, i32 31)
  %add.20.i179 = fadd float %add.20.i178, %42
  %43 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i179, i32 1, i32 31)
  %add.20.i180 = fadd float %add.20.i179, %43
  store float %add.20.i180, ptr addrspace(3) %shmem_transposed_addr, align 4
  %44 = shl nuw nsw i32 %thread_id.y149, 1
  %45 = icmp eq i32 %thread_id.x, 0
  %46 = zext i32 %2 to i64
  %47 = or i32 %44, %tile_origin.2
  %48 = zext i32 %47 to i64
  %output_element_address = getelementptr inbounds [64 x [128 x float]], ptr addrspace(1) %arg4212, i64 0, i64 %46, i64 %48
  br i1 %45, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %49 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address81219 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address, i64 1056
  store float %add.20.i174, ptr addrspace(3) %shmem_output_address81219, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr83220 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr, i64 1056
  %partial_reduction_result85 = load float, ptr addrspace(3) %shmem_transposed_addr83220, align 4
  %50 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result85, i32 16, i32 31)
  %add.20.i181 = fadd float %partial_reduction_result85, %50
  %51 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i181, i32 8, i32 31)
  %add.20.i182 = fadd float %add.20.i181, %51
  %52 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i182, i32 4, i32 31)
  %add.20.i183 = fadd float %add.20.i182, %52
  %53 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i183, i32 2, i32 31)
  %add.20.i184 = fadd float %add.20.i183, %53
  %54 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i184, i32 1, i32 31)
  %add.20.i185 = fadd float %add.20.i184, %54
  store float %add.20.i185, ptr addrspace(3) %shmem_transposed_addr83220, align 4
  br i1 %49, label %reduction_write_output-true99, label %reduction_write_output-after100

reduction_write_output-after100:                  ; preds = %reduction_write_output-true99, %reduction_write_output-after
  %55 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address103 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache31, i64 0, i64 0, i64 0, i64 %37, i64 %38
  store float %add.27.i, ptr addrspace(3) %shmem_output_address103, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr105 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache31, i64 0, i64 0, i64 0, i64 %38, i64 %37
  %partial_reduction_result107 = load float, ptr addrspace(3) %shmem_transposed_addr105, align 4
  %56 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result107, i32 16, i32 31)
  %add.27.i186 = fadd float %partial_reduction_result107, %56
  %57 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.27.i186, i32 8, i32 31)
  %add.27.i187 = fadd float %add.27.i186, %57
  %58 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.27.i187, i32 4, i32 31)
  %add.27.i188 = fadd float %add.27.i187, %58
  %59 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.27.i188, i32 2, i32 31)
  %add.27.i189 = fadd float %add.27.i188, %59
  %60 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.27.i189, i32 1, i32 31)
  %add.27.i190 = fadd float %add.27.i189, %60
  store float %add.27.i190, ptr addrspace(3) %shmem_transposed_addr105, align 4
  %output_element_address123 = getelementptr inbounds [64 x [128 x float]], ptr addrspace(1) %arg6216, i64 0, i64 %46, i64 %48
  br i1 %55, label %reduction_write_output-true121, label %reduction_write_output-after122

reduction_write_output-after122:                  ; preds = %reduction_write_output-true121, %reduction_write_output-after100
  %61 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address125221 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address103, i64 1056
  store float %add.27.i175, ptr addrspace(3) %shmem_output_address125221, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr127222 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr105, i64 1056
  %partial_reduction_result129 = load float, ptr addrspace(3) %shmem_transposed_addr127222, align 4
  %62 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result129, i32 16, i32 31)
  %add.27.i191 = fadd float %partial_reduction_result129, %62
  %63 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.27.i191, i32 8, i32 31)
  %add.27.i192 = fadd float %add.27.i191, %63
  %64 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.27.i192, i32 4, i32 31)
  %add.27.i193 = fadd float %add.27.i192, %64
  %65 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.27.i193, i32 2, i32 31)
  %add.27.i194 = fadd float %add.27.i193, %65
  %66 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.27.i194, i32 1, i32 31)
  %add.27.i195 = fadd float %add.27.i194, %66
  store float %add.27.i195, ptr addrspace(3) %shmem_transposed_addr127222, align 4
  br i1 %61, label %reduction_write_output-true143, label %common.ret

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  store float %add.20.i180, ptr addrspace(1) %output_element_address, align 8
  br label %reduction_write_output-after

reduction_write_output-true99:                    ; preds = %reduction_write_output-after
  %sunkaddr = getelementptr inbounds i8, ptr addrspace(1) %output_element_address, i64 4
  store float %add.20.i185, ptr addrspace(1) %sunkaddr, align 4
  br label %reduction_write_output-after100

reduction_write_output-true121:                   ; preds = %reduction_write_output-after100
  store float %add.27.i190, ptr addrspace(1) %output_element_address123, align 8
  br label %reduction_write_output-after122

reduction_write_output-true143:                   ; preds = %reduction_write_output-after122
  %sunkaddr234 = getelementptr inbounds i8, ptr addrspace(1) %output_element_address123, i64 4
  store float %add.27.i195, ptr addrspace(1) %sunkaddr234, align 4
  br label %common.ret
}

; Function Attrs: nounwind
define void @fusion_614(ptr noalias nocapture readonly align 128 dereferenceable(32768) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg1, ptr noalias nocapture readonly align 128 dereferenceable(32768) %arg2, ptr noalias nocapture readonly align 128 dereferenceable(32768) %arg3, ptr noalias nocapture readonly align 128 dereferenceable(32768) %arg4, ptr noalias nocapture readonly align 128 dereferenceable(32768) %arg5, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg6, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg7, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg8, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg9, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg10) local_unnamed_addr #0 {
entry:
  %arg10562 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg9560 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg8558 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg7556 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg6554 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg5552 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg4550 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg3548 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg2546 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg1544 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg0542 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !214
  switch i32 %0, label %common.ret [
    i32 0, label %reduce-group-0-true
    i32 1, label %reduce-group-1-true
    i32 2, label %entry.reduce-group-2-true_crit_edge
    i32 3, label %entry.reduce-group-3-true_crit_edge
    i32 4, label %entry.reduce-group-4-true_crit_edge
  ]

entry.reduce-group-4-true_crit_edge:              ; preds = %entry
  %Arg_1.2285.pre = load float, ptr addrspace(1) %arg1544, align 128, !invariant.load !195
  %.pre534 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !193
  %.pre536 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %.pre538 = and i32 %.pre536, 31
  %.pre539 = lshr i32 %.pre536, 5
  %.pre540 = shl nuw nsw i32 %.pre534, 6
  %.pre585 = shl nuw nsw i32 %.pre538, 1
  %.pre587 = or i32 %.pre585, %.pre540
  %.pre589 = zext i32 %.pre587 to i64
  %.pre626 = add nuw nsw i32 %.pre539, -32
  %.pre628 = zext i32 %.pre539 to i64
  %.pre630 = shl nuw nsw i64 %.pre589, 2
  br label %y_in_tile.loop_body297.lr.ph

entry.reduce-group-3-true_crit_edge:              ; preds = %entry
  %Arg_1.2206.pre = load float, ptr addrspace(1) %arg1544, align 128, !invariant.load !195
  %.pre527 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !193
  %.pre529 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %.pre531 = and i32 %.pre529, 31
  %.pre532 = lshr i32 %.pre529, 5
  %.pre533 = shl nuw nsw i32 %.pre527, 6
  %.pre580 = shl nuw nsw i32 %.pre531, 1
  %.pre581 = or i32 %.pre580, %.pre533
  %.pre583 = zext i32 %.pre581 to i64
  %.pre620 = add nuw nsw i32 %.pre532, -32
  %.pre622 = zext i32 %.pre532 to i64
  %.pre624 = shl nuw nsw i64 %.pre583, 2
  %1 = shl nuw nsw i64 %.pre622, 9
  %2 = add i64 %1, %.pre624
  %3 = add i64 %2, 4
  %scevgep610 = getelementptr i8, ptr addrspace(1) %arg4550, i64 %3
  br label %y_in_tile.loop_body218

entry.reduce-group-2-true_crit_edge:              ; preds = %entry
  %Arg_1.2127.pre = load float, ptr addrspace(1) %arg1544, align 128, !invariant.load !195
  %.pre = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !193
  %.pre522 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %.pre524 = and i32 %.pre522, 31
  %.pre525 = lshr i32 %.pre522, 5
  %.pre526 = shl nuw nsw i32 %.pre, 6
  %4 = shl nuw nsw i32 %.pre524, 1
  %5 = or i32 %4, %.pre526
  %6 = zext i32 %5 to i64
  %7 = add nuw nsw i32 %.pre525, -32
  %8 = zext i32 %.pre522 to i64
  %9 = lshr i64 %8, 5
  %10 = shl nuw nsw i64 %9, 9
  %11 = shl nuw nsw i64 %6, 2
  %12 = add i64 %10, %11
  %13 = add i64 %12, 4
  %scevgep616 = getelementptr i8, ptr addrspace(1) %arg3548, i64 %13
  br label %y_in_tile.loop_body139

common.ret.sink.split:                            ; preds = %reduction_write_output-after337, %reduction_write_output-after100, %reduction_write_output-after
  %.sink = phi i32 [ %39, %reduction_write_output-after ], [ %70, %reduction_write_output-after100 ], [ %131, %reduction_write_output-after337 ]
  %arg7.sink = phi ptr addrspace(1) [ %arg6554, %reduction_write_output-after ], [ %arg7556, %reduction_write_output-after100 ], [ %arg10562, %reduction_write_output-after337 ]
  %add.15.i461.sink = phi float [ %add.10.i450, %reduction_write_output-after ], [ %add.15.i461, %reduction_write_output-after100 ], [ %add.30.i494, %reduction_write_output-after337 ]
  %14 = or i32 %.sink, 1
  %15 = zext i32 %14 to i64
  %output_element_address123 = getelementptr inbounds [128 x float], ptr addrspace(1) %arg7.sink, i64 0, i64 %15
  store float %add.15.i461.sink, ptr addrspace(1) %output_element_address123, align 4
  br label %common.ret

common.ret:                                       ; preds = %reduction_write_output-after201, %common.ret.sink.split, %reduction_write_output-after100, %reduction_write_output-after, %reduction_write_output-after337, %reduction_write_output-after280, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %16 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !193
  %17 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x = and i32 %17, 31
  %thread_id.y380 = lshr i32 %17, 5
  %tile_origin.2 = shl nuw nsw i32 %16, 6
  %Arg_1.2 = load float, ptr addrspace(1) %arg1544, align 128, !invariant.load !195
  %18 = shl nuw nsw i32 %thread_id.x, 1
  %19 = or i32 %18, %tile_origin.2
  %20 = zext i32 %19 to i64
  %21 = add nuw nsw i32 %thread_id.y380, -32
  %22 = zext i32 %17 to i64
  %23 = lshr i64 %22, 5
  %24 = shl nuw nsw i64 %23, 9
  %25 = shl nuw nsw i64 %20, 2
  %26 = add i64 %24, %25
  %27 = add i64 %26, 4
  %scevgep = getelementptr i8, ptr addrspace(1) %arg0542, i64 %27
  br label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %reduce-group-0-true, %y_in_tile.loop_body
  %lsr.iv591 = phi ptr addrspace(1) [ %scevgep, %reduce-group-0-true ], [ %scevgep592, %y_in_tile.loop_body ]
  %lsr.iv = phi i32 [ %21, %reduce-group-0-true ], [ %lsr.iv.next, %y_in_tile.loop_body ]
  %partial_reduction_result375.sroa.0.0515 = phi float [ %Arg_1.2, %reduce-group-0-true ], [ %add.10.i, %y_in_tile.loop_body ]
  %partial_reduction_result375.sroa.4.0514 = phi float [ %Arg_1.2, %reduce-group-0-true ], [ %add.10.i440, %y_in_tile.loop_body ]
  %scevgep593 = getelementptr i8, ptr addrspace(1) %lsr.iv591, i64 -4
  %28 = load <2 x float>, ptr addrspace(1) %scevgep593, align 8, !invariant.load !195
  %Arg_0.13632 = extractelement <2 x float> %28, i32 0
  %Arg_0.18633 = extractelement <2 x float> %28, i32 1
  %add.10.i = fadd float %partial_reduction_result375.sroa.0.0515, %Arg_0.13632
  %add.10.i440 = fadd float %partial_reduction_result375.sroa.4.0514, %Arg_0.18633
  %lsr.iv.next = add nsw i32 %lsr.iv, 32
  %scevgep592 = getelementptr i8, ptr addrspace(1) %lsr.iv591, i64 16384
  %29 = icmp ugt i32 %lsr.iv.next, 31
  br i1 %29, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_body
  %30 = zext i32 %thread_id.x to i64
  %31 = zext i32 %thread_id.y380 to i64
  %shmem_output_address = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache32, i64 0, i64 0, i64 0, i64 %30, i64 %31
  store float %add.10.i, ptr addrspace(3) %shmem_output_address, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache32, i64 0, i64 0, i64 0, i64 %31, i64 %30
  %partial_reduction_result10 = load float, ptr addrspace(3) %shmem_transposed_addr, align 4
  %32 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result10, i32 16, i32 31)
  %add.10.i441 = fadd float %partial_reduction_result10, %32
  %33 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.10.i441, i32 8, i32 31)
  %add.10.i442 = fadd float %add.10.i441, %33
  %34 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.10.i442, i32 4, i32 31)
  %add.10.i443 = fadd float %add.10.i442, %34
  %35 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.10.i443, i32 2, i32 31)
  %add.10.i444 = fadd float %add.10.i443, %35
  %36 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.10.i444, i32 1, i32 31)
  %add.10.i445 = fadd float %add.10.i444, %36
  store float %add.10.i445, ptr addrspace(3) %shmem_transposed_addr, align 4
  %37 = shl nuw nsw i32 %thread_id.y380, 1
  %38 = icmp eq i32 %thread_id.x, 0
  %39 = or i32 %37, %tile_origin.2
  %40 = zext i32 %39 to i64
  %output_element_address = getelementptr inbounds [128 x float], ptr addrspace(1) %arg6554, i64 0, i64 %40
  br i1 %38, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %41 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address24565 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address, i64 1056
  store float %add.10.i440, ptr addrspace(3) %shmem_output_address24565, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr26566 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr, i64 1056
  %partial_reduction_result28 = load float, ptr addrspace(3) %shmem_transposed_addr26566, align 4
  %42 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result28, i32 16, i32 31)
  %add.10.i446 = fadd float %partial_reduction_result28, %42
  %43 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.10.i446, i32 8, i32 31)
  %add.10.i447 = fadd float %add.10.i446, %43
  %44 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.10.i447, i32 4, i32 31)
  %add.10.i448 = fadd float %add.10.i447, %44
  %45 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.10.i448, i32 2, i32 31)
  %add.10.i449 = fadd float %add.10.i448, %45
  %46 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.10.i449, i32 1, i32 31)
  %add.10.i450 = fadd float %add.10.i449, %46
  store float %add.10.i450, ptr addrspace(3) %shmem_transposed_addr26566, align 4
  br i1 %41, label %common.ret.sink.split, label %common.ret

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  store float %add.10.i445, ptr addrspace(1) %output_element_address, align 8
  br label %reduction_write_output-after

reduce-group-1-true:                              ; preds = %entry
  %47 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !193
  %48 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x50 = and i32 %48, 31
  %thread_id.y51379 = lshr i32 %48, 5
  %tile_origin.257 = shl nuw nsw i32 %47, 6
  %Arg_1.248 = load float, ptr addrspace(1) %arg1544, align 128, !invariant.load !195
  %49 = shl nuw nsw i32 %thread_id.x50, 1
  %50 = or i32 %49, %tile_origin.257
  %51 = zext i32 %50 to i64
  %52 = add nuw nsw i32 %thread_id.y51379, -32
  %53 = zext i32 %48 to i64
  %54 = lshr i64 %53, 5
  %55 = shl nuw nsw i64 %54, 9
  %56 = shl nuw nsw i64 %51, 2
  %57 = add i64 %55, %56
  %58 = add i64 %57, 4
  %scevgep596 = getelementptr i8, ptr addrspace(1) %arg2546, i64 %58
  br label %y_in_tile.loop_body60

y_in_tile.loop_body60:                            ; preds = %reduce-group-1-true, %y_in_tile.loop_body60
  %lsr.iv597 = phi ptr addrspace(1) [ %scevgep596, %reduce-group-1-true ], [ %scevgep598, %y_in_tile.loop_body60 ]
  %lsr.iv594 = phi i32 [ %52, %reduce-group-1-true ], [ %lsr.iv.next595, %y_in_tile.loop_body60 ]
  %partial_reduction_result47374.sroa.4.0496 = phi float [ %Arg_1.248, %reduce-group-1-true ], [ %add.15.i451, %y_in_tile.loop_body60 ]
  %partial_reduction_result47374.sroa.0.0495 = phi float [ %Arg_1.248, %reduce-group-1-true ], [ %add.15.i, %y_in_tile.loop_body60 ]
  %scevgep599 = getelementptr i8, ptr addrspace(1) %lsr.iv597, i64 -4
  %59 = load <2 x float>, ptr addrspace(1) %scevgep599, align 8, !invariant.load !195
  %Arg_2.373634 = extractelement <2 x float> %59, i32 0
  %Arg_2.379635 = extractelement <2 x float> %59, i32 1
  %add.15.i = fadd float %partial_reduction_result47374.sroa.0.0495, %Arg_2.373634
  %add.15.i451 = fadd float %partial_reduction_result47374.sroa.4.0496, %Arg_2.379635
  %lsr.iv.next595 = add nsw i32 %lsr.iv594, 32
  %scevgep598 = getelementptr i8, ptr addrspace(1) %lsr.iv597, i64 16384
  %60 = icmp ugt i32 %lsr.iv.next595, 31
  br i1 %60, label %y_in_tile.loop_exit58, label %y_in_tile.loop_body60

y_in_tile.loop_exit58:                            ; preds = %y_in_tile.loop_body60
  %61 = zext i32 %thread_id.x50 to i64
  %62 = zext i32 %thread_id.y51379 to i64
  %shmem_output_address81 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache33, i64 0, i64 0, i64 0, i64 %61, i64 %62
  store float %add.15.i, ptr addrspace(3) %shmem_output_address81, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr83 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache33, i64 0, i64 0, i64 0, i64 %62, i64 %61
  %partial_reduction_result85 = load float, ptr addrspace(3) %shmem_transposed_addr83, align 4
  %63 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result85, i32 16, i32 31)
  %add.15.i452 = fadd float %partial_reduction_result85, %63
  %64 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i452, i32 8, i32 31)
  %add.15.i453 = fadd float %add.15.i452, %64
  %65 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i453, i32 4, i32 31)
  %add.15.i454 = fadd float %add.15.i453, %65
  %66 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i454, i32 2, i32 31)
  %add.15.i455 = fadd float %add.15.i454, %66
  %67 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i455, i32 1, i32 31)
  %add.15.i456 = fadd float %add.15.i455, %67
  store float %add.15.i456, ptr addrspace(3) %shmem_transposed_addr83, align 4
  %68 = shl nuw nsw i32 %thread_id.y51379, 1
  %69 = icmp eq i32 %thread_id.x50, 0
  %70 = or i32 %68, %tile_origin.257
  %71 = zext i32 %70 to i64
  %output_element_address101 = getelementptr inbounds [128 x float], ptr addrspace(1) %arg7556, i64 0, i64 %71
  br i1 %69, label %reduction_write_output-true99, label %reduction_write_output-after100

reduction_write_output-after100:                  ; preds = %reduction_write_output-true99, %y_in_tile.loop_exit58
  %72 = icmp eq i32 %thread_id.x50, 0
  %shmem_output_address103568 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address81, i64 1056
  store float %add.15.i451, ptr addrspace(3) %shmem_output_address103568, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr105569 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr83, i64 1056
  %partial_reduction_result107 = load float, ptr addrspace(3) %shmem_transposed_addr105569, align 4
  %73 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result107, i32 16, i32 31)
  %add.15.i457 = fadd float %partial_reduction_result107, %73
  %74 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i457, i32 8, i32 31)
  %add.15.i458 = fadd float %add.15.i457, %74
  %75 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i458, i32 4, i32 31)
  %add.15.i459 = fadd float %add.15.i458, %75
  %76 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i459, i32 2, i32 31)
  %add.15.i460 = fadd float %add.15.i459, %76
  %77 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i460, i32 1, i32 31)
  %add.15.i461 = fadd float %add.15.i460, %77
  store float %add.15.i461, ptr addrspace(3) %shmem_transposed_addr105569, align 4
  br i1 %72, label %common.ret.sink.split, label %common.ret

reduction_write_output-true99:                    ; preds = %y_in_tile.loop_exit58
  store float %add.15.i456, ptr addrspace(1) %output_element_address101, align 8
  br label %reduction_write_output-after100

y_in_tile.loop_body139:                           ; preds = %entry.reduce-group-2-true_crit_edge, %y_in_tile.loop_body139
  %lsr.iv617 = phi ptr addrspace(1) [ %scevgep616, %entry.reduce-group-2-true_crit_edge ], [ %scevgep618, %y_in_tile.loop_body139 ]
  %lsr.iv614 = phi i32 [ %7, %entry.reduce-group-2-true_crit_edge ], [ %lsr.iv.next615, %y_in_tile.loop_body139 ]
  %partial_reduction_result126373.sroa.4.0500 = phi float [ %Arg_1.2127.pre, %entry.reduce-group-2-true_crit_edge ], [ %add.20.i462, %y_in_tile.loop_body139 ]
  %partial_reduction_result126373.sroa.0.0499 = phi float [ %Arg_1.2127.pre, %entry.reduce-group-2-true_crit_edge ], [ %add.20.i, %y_in_tile.loop_body139 ]
  %scevgep619 = getelementptr i8, ptr addrspace(1) %lsr.iv617, i64 -4
  %78 = load <2 x float>, ptr addrspace(1) %scevgep619, align 8, !invariant.load !195
  %Arg_3.4152638 = extractelement <2 x float> %78, i32 0
  %Arg_3.4158639 = extractelement <2 x float> %78, i32 1
  %add.20.i = fadd float %partial_reduction_result126373.sroa.0.0499, %Arg_3.4152638
  %add.20.i462 = fadd float %partial_reduction_result126373.sroa.4.0500, %Arg_3.4158639
  %lsr.iv.next615 = add nsw i32 %lsr.iv614, 32
  %scevgep618 = getelementptr i8, ptr addrspace(1) %lsr.iv617, i64 16384
  %79 = icmp ugt i32 %lsr.iv.next615, 31
  br i1 %79, label %y_in_tile.loop_exit137, label %y_in_tile.loop_body139

y_in_tile.loop_exit137:                           ; preds = %y_in_tile.loop_body139
  %80 = zext i32 %.pre524 to i64
  %81 = zext i32 %.pre525 to i64
  %shmem_output_address160 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache34, i64 0, i64 0, i64 0, i64 %80, i64 %81
  store float %add.20.i, ptr addrspace(3) %shmem_output_address160, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr162 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache34, i64 0, i64 0, i64 0, i64 %81, i64 %80
  %partial_reduction_result164 = load float, ptr addrspace(3) %shmem_transposed_addr162, align 4
  %82 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result164, i32 16, i32 31)
  %add.20.i463 = fadd float %partial_reduction_result164, %82
  %83 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i463, i32 8, i32 31)
  %add.20.i464 = fadd float %add.20.i463, %83
  %84 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i464, i32 4, i32 31)
  %add.20.i465 = fadd float %add.20.i464, %84
  %85 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i465, i32 2, i32 31)
  %add.20.i466 = fadd float %add.20.i465, %85
  %86 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i466, i32 1, i32 31)
  %add.20.i467 = fadd float %add.20.i466, %86
  store float %add.20.i467, ptr addrspace(3) %shmem_transposed_addr162, align 4
  %87 = shl nuw nsw i32 %.pre525, 1
  %88 = icmp eq i32 %.pre524, 0
  %89 = or i32 %87, %.pre526
  %90 = zext i32 %89 to i64
  %output_element_address180 = getelementptr inbounds [128 x float], ptr addrspace(1) %arg8558, i64 0, i64 %90
  br i1 %88, label %reduction_write_output-true178, label %reduction_write_output-after179

reduction_write_output-after179:                  ; preds = %reduction_write_output-true178, %y_in_tile.loop_exit137
  %91 = icmp eq i32 %.pre524, 0
  %shmem_output_address182571 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address160, i64 1056
  store float %add.20.i462, ptr addrspace(3) %shmem_output_address182571, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr184572 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr162, i64 1056
  %partial_reduction_result186 = load float, ptr addrspace(3) %shmem_transposed_addr184572, align 4
  %92 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result186, i32 16, i32 31)
  %add.20.i468 = fadd float %partial_reduction_result186, %92
  %93 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i468, i32 8, i32 31)
  %add.20.i469 = fadd float %add.20.i468, %93
  %94 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i469, i32 4, i32 31)
  %add.20.i470 = fadd float %add.20.i469, %94
  %95 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i470, i32 2, i32 31)
  %add.20.i471 = fadd float %add.20.i470, %95
  %96 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i471, i32 1, i32 31)
  %add.20.i472 = fadd float %add.20.i471, %96
  store float %add.20.i472, ptr addrspace(3) %shmem_transposed_addr184572, align 4
  br i1 %91, label %reduction_write_output-true200, label %reduction_write_output-after201

reduction_write_output-after201:                  ; preds = %reduction_write_output-true200, %reduction_write_output-after179
  br label %common.ret

reduction_write_output-true178:                   ; preds = %y_in_tile.loop_exit137
  store float %add.20.i467, ptr addrspace(1) %output_element_address180, align 8
  br label %reduction_write_output-after179

reduction_write_output-true200:                   ; preds = %reduction_write_output-after179
  %sunkaddr = getelementptr inbounds i8, ptr addrspace(1) %output_element_address180, i64 4
  store float %add.20.i472, ptr addrspace(1) %sunkaddr, align 4
  br label %reduction_write_output-after201

y_in_tile.loop_body218:                           ; preds = %entry.reduce-group-3-true_crit_edge, %y_in_tile.loop_body218
  %lsr.iv611 = phi ptr addrspace(1) [ %scevgep610, %entry.reduce-group-3-true_crit_edge ], [ %scevgep612, %y_in_tile.loop_body218 ]
  %lsr.iv608 = phi i32 [ %.pre620, %entry.reduce-group-3-true_crit_edge ], [ %lsr.iv.next609, %y_in_tile.loop_body218 ]
  %partial_reduction_result205372.sroa.4.0505 = phi float [ %Arg_1.2206.pre, %entry.reduce-group-3-true_crit_edge ], [ %add.25.i473, %y_in_tile.loop_body218 ]
  %partial_reduction_result205372.sroa.0.0504 = phi float [ %Arg_1.2206.pre, %entry.reduce-group-3-true_crit_edge ], [ %add.25.i, %y_in_tile.loop_body218 ]
  %scevgep613 = getelementptr i8, ptr addrspace(1) %lsr.iv611, i64 -4
  %97 = load <2 x float>, ptr addrspace(1) %scevgep613, align 8, !invariant.load !195
  %Arg_4.5231636 = extractelement <2 x float> %97, i32 0
  %Arg_4.5237637 = extractelement <2 x float> %97, i32 1
  %add.25.i = fadd float %partial_reduction_result205372.sroa.0.0504, %Arg_4.5231636
  %add.25.i473 = fadd float %partial_reduction_result205372.sroa.4.0505, %Arg_4.5237637
  %lsr.iv.next609 = add nsw i32 %lsr.iv608, 32
  %scevgep612 = getelementptr i8, ptr addrspace(1) %lsr.iv611, i64 16384
  %98 = icmp ugt i32 %lsr.iv.next609, 31
  br i1 %98, label %y_in_tile.loop_exit216, label %y_in_tile.loop_body218

y_in_tile.loop_exit216:                           ; preds = %y_in_tile.loop_body218
  %99 = zext i32 %.pre531 to i64
  %shmem_output_address239 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache35, i64 0, i64 0, i64 0, i64 %99, i64 %.pre622
  store float %add.25.i, ptr addrspace(3) %shmem_output_address239, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr241 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache35, i64 0, i64 0, i64 0, i64 %.pre622, i64 %99
  %partial_reduction_result243 = load float, ptr addrspace(3) %shmem_transposed_addr241, align 4
  %100 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result243, i32 16, i32 31)
  %add.25.i474 = fadd float %partial_reduction_result243, %100
  %101 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i474, i32 8, i32 31)
  %add.25.i475 = fadd float %add.25.i474, %101
  %102 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i475, i32 4, i32 31)
  %add.25.i476 = fadd float %add.25.i475, %102
  %103 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i476, i32 2, i32 31)
  %add.25.i477 = fadd float %add.25.i476, %103
  %104 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i477, i32 1, i32 31)
  %add.25.i478 = fadd float %add.25.i477, %104
  store float %add.25.i478, ptr addrspace(3) %shmem_transposed_addr241, align 4
  %105 = shl nuw nsw i32 %.pre532, 1
  %106 = icmp eq i32 %.pre531, 0
  %107 = or i32 %105, %.pre533
  %108 = zext i32 %107 to i64
  %output_element_address259 = getelementptr [128 x float], ptr addrspace(1) %arg9560, i64 0, i64 %108
  br i1 %106, label %reduction_write_output-true257, label %reduction_write_output-after258

reduction_write_output-after258:                  ; preds = %reduction_write_output-true257, %y_in_tile.loop_exit216
  %109 = icmp eq i32 %.pre531, 0
  %shmem_output_address261575 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address239, i64 1056
  store float %add.25.i473, ptr addrspace(3) %shmem_output_address261575, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr263576 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr241, i64 1056
  %partial_reduction_result265 = load float, ptr addrspace(3) %shmem_transposed_addr263576, align 4
  %110 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result265, i32 16, i32 31)
  %add.25.i479 = fadd float %partial_reduction_result265, %110
  %111 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i479, i32 8, i32 31)
  %add.25.i480 = fadd float %add.25.i479, %111
  %112 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i480, i32 4, i32 31)
  %add.25.i481 = fadd float %add.25.i480, %112
  %113 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i481, i32 2, i32 31)
  %add.25.i482 = fadd float %add.25.i481, %113
  %114 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i482, i32 1, i32 31)
  %add.25.i483 = fadd float %add.25.i482, %114
  store float %add.25.i483, ptr addrspace(3) %shmem_transposed_addr263576, align 4
  br i1 %109, label %reduction_write_output-true279, label %reduction_write_output-after280

reduction_write_output-after280:                  ; preds = %reduction_write_output-true279, %reduction_write_output-after258
  %115 = icmp eq i32 %0, 4
  br i1 %115, label %y_in_tile.loop_body297.lr.ph, label %common.ret

reduction_write_output-true257:                   ; preds = %y_in_tile.loop_exit216
  store float %add.25.i478, ptr addrspace(1) %output_element_address259, align 8
  br label %reduction_write_output-after258

reduction_write_output-true279:                   ; preds = %reduction_write_output-after258
  %sunkaddr640 = getelementptr inbounds i8, ptr addrspace(1) %output_element_address259, i64 4
  store float %add.25.i483, ptr addrspace(1) %sunkaddr640, align 4
  br label %reduction_write_output-after280

y_in_tile.loop_body297.lr.ph:                     ; preds = %reduction_write_output-after280, %entry.reduce-group-4-true_crit_edge
  %.pre-phi631 = phi i64 [ %.pre630, %entry.reduce-group-4-true_crit_edge ], [ %.pre624, %reduction_write_output-after280 ]
  %.pre-phi629 = phi i64 [ %.pre628, %entry.reduce-group-4-true_crit_edge ], [ %.pre622, %reduction_write_output-after280 ]
  %.pre-phi627 = phi i32 [ %.pre626, %entry.reduce-group-4-true_crit_edge ], [ %.pre620, %reduction_write_output-after280 ]
  %.pre-phi590 = phi i64 [ %.pre589, %entry.reduce-group-4-true_crit_edge ], [ %.pre583, %reduction_write_output-after280 ]
  %.pre-phi588 = phi i32 [ %.pre587, %entry.reduce-group-4-true_crit_edge ], [ %.pre581, %reduction_write_output-after280 ]
  %tile_origin.2294.pre-phi = phi i32 [ %.pre540, %entry.reduce-group-4-true_crit_edge ], [ %.pre533, %reduction_write_output-after280 ]
  %thread_id.y288376.pre-phi = phi i32 [ %.pre539, %entry.reduce-group-4-true_crit_edge ], [ %.pre532, %reduction_write_output-after280 ]
  %thread_id.x287.pre-phi = phi i32 [ %.pre538, %entry.reduce-group-4-true_crit_edge ], [ %.pre531, %reduction_write_output-after280 ]
  %Arg_1.2285 = phi float [ %Arg_1.2285.pre, %entry.reduce-group-4-true_crit_edge ], [ %Arg_1.2206.pre, %reduction_write_output-after280 ]
  %116 = or i32 %.pre-phi588, 1
  %117 = zext i32 %116 to i64
  %118 = shl nuw nsw i64 %.pre-phi629, 9
  %119 = add nuw nsw i64 %118, %.pre-phi631
  %scevgep602 = getelementptr i8, ptr addrspace(1) %arg5552, i64 %119
  %120 = shl nuw nsw i64 %117, 2
  %121 = add nuw nsw i64 %118, %120
  %scevgep605 = getelementptr i8, ptr addrspace(1) %arg5552, i64 %121
  br label %y_in_tile.loop_body297

y_in_tile.loop_body297:                           ; preds = %y_in_tile.loop_body297.lr.ph, %y_in_tile.loop_body297
  %lsr.iv606 = phi ptr addrspace(1) [ %scevgep605, %y_in_tile.loop_body297.lr.ph ], [ %scevgep607, %y_in_tile.loop_body297 ]
  %lsr.iv603 = phi ptr addrspace(1) [ %scevgep602, %y_in_tile.loop_body297.lr.ph ], [ %scevgep604, %y_in_tile.loop_body297 ]
  %lsr.iv600 = phi i32 [ %.pre-phi627, %y_in_tile.loop_body297.lr.ph ], [ %lsr.iv.next601, %y_in_tile.loop_body297 ]
  %partial_reduction_result284371.sroa.4.0510 = phi float [ %Arg_1.2285, %y_in_tile.loop_body297.lr.ph ], [ %add.30.i484, %y_in_tile.loop_body297 ]
  %partial_reduction_result284371.sroa.0.0509 = phi float [ %Arg_1.2285, %y_in_tile.loop_body297.lr.ph ], [ %add.30.i, %y_in_tile.loop_body297 ]
  %Arg_5.6310 = load float, ptr addrspace(1) %lsr.iv603, align 8, !invariant.load !195
  %add.30.i = fadd float %partial_reduction_result284371.sroa.0.0509, %Arg_5.6310
  %Arg_5.6316 = load float, ptr addrspace(1) %lsr.iv606, align 4, !invariant.load !195
  %add.30.i484 = fadd float %partial_reduction_result284371.sroa.4.0510, %Arg_5.6316
  %lsr.iv.next601 = add nsw i32 %lsr.iv600, 32
  %scevgep604 = getelementptr i8, ptr addrspace(1) %lsr.iv603, i64 16384
  %scevgep607 = getelementptr i8, ptr addrspace(1) %lsr.iv606, i64 16384
  %122 = icmp ugt i32 %lsr.iv.next601, 31
  br i1 %122, label %y_in_tile.loop_exit295, label %y_in_tile.loop_body297

y_in_tile.loop_exit295:                           ; preds = %y_in_tile.loop_body297
  %123 = zext i32 %thread_id.x287.pre-phi to i64
  %shmem_output_address318 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache36, i64 0, i64 0, i64 0, i64 %123, i64 %.pre-phi629
  store float %add.30.i, ptr addrspace(3) %shmem_output_address318, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr320 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache36, i64 0, i64 0, i64 0, i64 %.pre-phi629, i64 %123
  %partial_reduction_result322 = load float, ptr addrspace(3) %shmem_transposed_addr320, align 4
  %124 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result322, i32 16, i32 31)
  %add.30.i485 = fadd float %partial_reduction_result322, %124
  %125 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i485, i32 8, i32 31)
  %add.30.i486 = fadd float %add.30.i485, %125
  %126 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i486, i32 4, i32 31)
  %add.30.i487 = fadd float %add.30.i486, %126
  %127 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i487, i32 2, i32 31)
  %add.30.i488 = fadd float %add.30.i487, %127
  %128 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i488, i32 1, i32 31)
  %add.30.i489 = fadd float %add.30.i488, %128
  store float %add.30.i489, ptr addrspace(3) %shmem_transposed_addr320, align 4
  %129 = shl nuw nsw i32 %thread_id.y288376.pre-phi, 1
  %130 = icmp eq i32 %thread_id.x287.pre-phi, 0
  %131 = or i32 %129, %tile_origin.2294.pre-phi
  %132 = zext i32 %131 to i64
  %output_element_address338 = getelementptr inbounds [128 x float], ptr addrspace(1) %arg10562, i64 0, i64 %132
  br i1 %130, label %reduction_write_output-true336, label %reduction_write_output-after337

reduction_write_output-after337:                  ; preds = %reduction_write_output-true336, %y_in_tile.loop_exit295
  %133 = icmp eq i32 %thread_id.x287.pre-phi, 0
  %shmem_output_address340578 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address318, i64 1056
  store float %add.30.i484, ptr addrspace(3) %shmem_output_address340578, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr342579 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr320, i64 1056
  %partial_reduction_result344 = load float, ptr addrspace(3) %shmem_transposed_addr342579, align 4
  %134 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result344, i32 16, i32 31)
  %add.30.i490 = fadd float %partial_reduction_result344, %134
  %135 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i490, i32 8, i32 31)
  %add.30.i491 = fadd float %add.30.i490, %135
  %136 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i491, i32 4, i32 31)
  %add.30.i492 = fadd float %add.30.i491, %136
  %137 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i492, i32 2, i32 31)
  %add.30.i493 = fadd float %add.30.i492, %137
  %138 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i493, i32 1, i32 31)
  %add.30.i494 = fadd float %add.30.i493, %138
  store float %add.30.i494, ptr addrspace(3) %shmem_transposed_addr342579, align 4
  br i1 %133, label %common.ret.sink.split, label %common.ret

reduction_write_output-true336:                   ; preds = %y_in_tile.loop_exit295
  store float %add.30.i489, ptr addrspace(1) %output_element_address338, align 8
  br label %reduction_write_output-after337
}

; Function Attrs: nounwind
define void @fusion_286(ptr noalias nocapture readonly align 16 dereferenceable(512) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4194304) %arg2, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg3, ptr noalias nocapture writeonly align 128 dereferenceable(4194304) %arg4, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg5) local_unnamed_addr #0 {
entry:
  %arg5198 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg4196 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg3194 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg2192 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg1190 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg0188 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !213
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x = and i32 %1, 31
  %thread_id.y133 = lshr i32 %1, 5
  %2 = lshr i32 %0, 1
  %3 = shl nuw nsw i32 %0, 6
  %tile_origin.2 = and i32 %3, 64
  %4 = shl nuw nsw i32 %thread_id.x, 1
  %5 = shl nuw nsw i32 %2, 14
  %6 = shl nuw nsw i32 %thread_id.y133, 7
  %7 = add i32 %6, %tile_origin.2
  %8 = add i32 %7, %4
  %9 = add i32 %5, %6
  %10 = add i32 %9, %tile_origin.2
  %11 = add i32 %10, %4
  %12 = add i32 %11, 1
  %13 = lshr i32 %12, 7
  %14 = zext i32 %11 to i64
  %15 = shl nuw nsw i64 %14, 2
  %16 = add nuw nsw i64 %15, 4
  %scevgep = getelementptr i8, ptr addrspace(1) %arg2192, i64 %16
  %17 = lshr i32 %11, 7
  br label %y_in_tile.loop_body

common.ret:                                       ; preds = %reduction_write_output-after106, %reduction_write_output-true127
  ret void

y_in_tile.loop_body:                              ; preds = %entry, %y_in_tile.loop_body
  %lsr.iv212 = phi i32 [ %17, %entry ], [ %lsr.iv.next213, %y_in_tile.loop_body ]
  %lsr.iv209 = phi ptr addrspace(1) [ %scevgep, %entry ], [ %scevgep210, %y_in_tile.loop_body ]
  %lsr.iv207 = phi i32 [ %13, %entry ], [ %lsr.iv.next208, %y_in_tile.loop_body ]
  %lsr.iv = phi i32 [ %8, %entry ], [ %lsr.iv.next, %y_in_tile.loop_body ]
  %y_in_tile.invar_address.0184 = phi i32 [ %thread_id.y133, %entry ], [ %invar.inc, %y_in_tile.loop_body ]
  %partial_reduction_result2131.sroa.4.0183 = phi float [ 0.000000e+00, %entry ], [ %add.25.i159, %y_in_tile.loop_body ]
  %partial_reduction_result132.sroa.0.0182 = phi float [ -0.000000e+00, %entry ], [ %add.18.i, %y_in_tile.loop_body ]
  %partial_reduction_result132.sroa.4.0181 = phi float [ -0.000000e+00, %entry ], [ %add.18.i158, %y_in_tile.loop_body ]
  %partial_reduction_result2131.sroa.0.0180 = phi float [ 0.000000e+00, %entry ], [ %add.25.i, %y_in_tile.loop_body ]
  %invar.inc = add nuw nsw i32 %y_in_tile.invar_address.0184, 32
  %18 = and i32 %lsr.iv, 126
  %19 = and i32 %lsr.iv212, 33554304
  %20 = or i32 %19, %y_in_tile.invar_address.0184
  %21 = zext i32 %20 to i64
  %22 = zext i32 %18 to i64
  %Arg_2.3 = getelementptr inbounds [8192 x [128 x float]], ptr addrspace(1) %arg2192, i64 0, i64 %21, i64 %22
  %Arg_2.35 = load float, ptr addrspace(1) %Arg_2.3, align 8, !invariant.load !195
  %compare.6 = fcmp ogt float %Arg_2.35, 0.000000e+00
  %Arg_1.2 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg1190, i64 0, i64 %21, i64 0
  %Arg_1.27 = load float, ptr addrspace(1) %Arg_1.2, align 4, !invariant.load !195
  %Arg_0.1 = getelementptr inbounds [128 x [1 x float]], ptr addrspace(1) %arg0188, i64 0, i64 %22, i64 0
  %Arg_0.18 = load float, ptr addrspace(1) %Arg_0.1, align 8, !invariant.load !195
  %multiply.11 = fmul float %Arg_1.27, %Arg_0.18
  %23 = select i1 %compare.6, float %multiply.11, float 0.000000e+00
  %add.18.i = fadd float %partial_reduction_result132.sroa.0.0182, %23
  %multiply.20 = fmul float %Arg_2.35, %Arg_1.27
  %add.25.i = fadd float %partial_reduction_result2131.sroa.0.0180, %multiply.20
  %scevgep211 = getelementptr i8, ptr addrspace(1) %lsr.iv209, i64 -4
  %24 = load <2 x float>, ptr addrspace(1) %scevgep211, align 8, !invariant.load !195
  %Arg_2.315214 = extractelement <2 x float> %24, i32 0
  %Arg_2.343215 = extractelement <2 x float> %24, i32 1
  %compare.617 = fcmp ogt float %Arg_2.315214, 0.000000e+00
  %25 = select i1 %compare.617, float %multiply.11, float 0.000000e+00
  %26 = getelementptr inbounds [8192 x [128 x float]], ptr addrspace(1) %arg4196, i64 0, i64 %21, i64 %22
  store float %25, ptr addrspace(1) %26, align 8
  %27 = add i32 %lsr.iv, 1
  %28 = and i32 %27, 127
  %29 = and i32 %lsr.iv207, 33554304
  %30 = or i32 %29, %y_in_tile.invar_address.0184
  %31 = zext i32 %30 to i64
  %32 = zext i32 %28 to i64
  %Arg_2.326 = getelementptr inbounds [8192 x [128 x float]], ptr addrspace(1) %arg2192, i64 0, i64 %31, i64 %32
  %Arg_2.327 = load float, ptr addrspace(1) %Arg_2.326, align 4, !invariant.load !195
  %compare.629 = fcmp ogt float %Arg_2.327, 0.000000e+00
  %Arg_1.230 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg1190, i64 0, i64 %31, i64 0
  %Arg_1.231 = load float, ptr addrspace(1) %Arg_1.230, align 4, !invariant.load !195
  %Arg_0.132 = getelementptr inbounds [128 x [1 x float]], ptr addrspace(1) %arg0188, i64 0, i64 %32, i64 0
  %Arg_0.133 = load float, ptr addrspace(1) %Arg_0.132, align 4, !invariant.load !195
  %multiply.1134 = fmul float %Arg_1.231, %Arg_0.133
  %33 = select i1 %compare.629, float %multiply.1134, float 0.000000e+00
  %add.18.i158 = fadd float %partial_reduction_result132.sroa.4.0181, %33
  %multiply.2040 = fmul float %Arg_2.327, %Arg_1.231
  %add.25.i159 = fadd float %partial_reduction_result2131.sroa.4.0183, %multiply.2040
  %compare.645 = fcmp ogt float %Arg_2.343215, 0.000000e+00
  %34 = select i1 %compare.645, float %multiply.1134, float 0.000000e+00
  %35 = getelementptr inbounds [8192 x [128 x float]], ptr addrspace(1) %arg4196, i64 0, i64 %31, i64 %32
  store float %34, ptr addrspace(1) %35, align 4
  %lsr.iv.next = add nuw nsw i32 %lsr.iv, 4096
  %lsr.iv.next208 = add nuw nsw i32 %lsr.iv207, 32
  %scevgep210 = getelementptr i8, ptr addrspace(1) %lsr.iv209, i64 16384
  %lsr.iv.next213 = add nuw nsw i32 %lsr.iv212, 32
  %36 = icmp ugt i32 %y_in_tile.invar_address.0184, 95
  br i1 %36, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_body
  %37 = zext i32 %thread_id.x to i64
  %38 = zext i32 %thread_id.y133 to i64
  %shmem_output_address = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache37, i64 0, i64 0, i64 0, i64 %37, i64 %38
  store float %add.18.i, ptr addrspace(3) %shmem_output_address, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache37, i64 0, i64 0, i64 0, i64 %38, i64 %37
  %partial_reduction_result51 = load float, ptr addrspace(3) %shmem_transposed_addr, align 4
  %39 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result51, i32 16, i32 31)
  %add.18.i160 = fadd float %partial_reduction_result51, %39
  %40 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.18.i160, i32 8, i32 31)
  %add.18.i161 = fadd float %add.18.i160, %40
  %41 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.18.i161, i32 4, i32 31)
  %add.18.i162 = fadd float %add.18.i161, %41
  %42 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.18.i162, i32 2, i32 31)
  %add.18.i163 = fadd float %add.18.i162, %42
  %43 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.18.i163, i32 1, i32 31)
  %add.18.i164 = fadd float %add.18.i163, %43
  store float %add.18.i164, ptr addrspace(3) %shmem_transposed_addr, align 4
  %44 = shl nuw nsw i32 %thread_id.y133, 1
  %45 = icmp eq i32 %thread_id.x, 0
  %46 = zext i32 %2 to i64
  %47 = or i32 %44, %tile_origin.2
  %48 = zext i32 %47 to i64
  %output_element_address = getelementptr inbounds [64 x [128 x float]], ptr addrspace(1) %arg3194, i64 0, i64 %46, i64 %48
  br i1 %45, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %49 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address65201 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address, i64 1056
  store float %add.18.i158, ptr addrspace(3) %shmem_output_address65201, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr67202 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr, i64 1056
  %partial_reduction_result69 = load float, ptr addrspace(3) %shmem_transposed_addr67202, align 4
  %50 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result69, i32 16, i32 31)
  %add.18.i165 = fadd float %partial_reduction_result69, %50
  %51 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.18.i165, i32 8, i32 31)
  %add.18.i166 = fadd float %add.18.i165, %51
  %52 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.18.i166, i32 4, i32 31)
  %add.18.i167 = fadd float %add.18.i166, %52
  %53 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.18.i167, i32 2, i32 31)
  %add.18.i168 = fadd float %add.18.i167, %53
  %54 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.18.i168, i32 1, i32 31)
  %add.18.i169 = fadd float %add.18.i168, %54
  store float %add.18.i169, ptr addrspace(3) %shmem_transposed_addr67202, align 4
  br i1 %49, label %reduction_write_output-true83, label %reduction_write_output-after84

reduction_write_output-after84:                   ; preds = %reduction_write_output-true83, %reduction_write_output-after
  %55 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address87 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache38, i64 0, i64 0, i64 0, i64 %37, i64 %38
  store float %add.25.i, ptr addrspace(3) %shmem_output_address87, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr89 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache38, i64 0, i64 0, i64 0, i64 %38, i64 %37
  %partial_reduction_result91 = load float, ptr addrspace(3) %shmem_transposed_addr89, align 4
  %56 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result91, i32 16, i32 31)
  %add.25.i170 = fadd float %partial_reduction_result91, %56
  %57 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i170, i32 8, i32 31)
  %add.25.i171 = fadd float %add.25.i170, %57
  %58 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i171, i32 4, i32 31)
  %add.25.i172 = fadd float %add.25.i171, %58
  %59 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i172, i32 2, i32 31)
  %add.25.i173 = fadd float %add.25.i172, %59
  %60 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i173, i32 1, i32 31)
  %add.25.i174 = fadd float %add.25.i173, %60
  store float %add.25.i174, ptr addrspace(3) %shmem_transposed_addr89, align 4
  %output_element_address107 = getelementptr inbounds [64 x [128 x float]], ptr addrspace(1) %arg5198, i64 0, i64 %46, i64 %48
  br i1 %55, label %reduction_write_output-true105, label %reduction_write_output-after106

reduction_write_output-after106:                  ; preds = %reduction_write_output-true105, %reduction_write_output-after84
  %61 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address109203 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address87, i64 1056
  store float %add.25.i159, ptr addrspace(3) %shmem_output_address109203, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr111204 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr89, i64 1056
  %partial_reduction_result113 = load float, ptr addrspace(3) %shmem_transposed_addr111204, align 4
  %62 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result113, i32 16, i32 31)
  %add.25.i175 = fadd float %partial_reduction_result113, %62
  %63 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i175, i32 8, i32 31)
  %add.25.i176 = fadd float %add.25.i175, %63
  %64 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i176, i32 4, i32 31)
  %add.25.i177 = fadd float %add.25.i176, %64
  %65 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i177, i32 2, i32 31)
  %add.25.i178 = fadd float %add.25.i177, %65
  %66 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i178, i32 1, i32 31)
  %add.25.i179 = fadd float %add.25.i178, %66
  store float %add.25.i179, ptr addrspace(3) %shmem_transposed_addr111204, align 4
  br i1 %61, label %reduction_write_output-true127, label %common.ret

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  store float %add.18.i164, ptr addrspace(1) %output_element_address, align 8
  br label %reduction_write_output-after

reduction_write_output-true83:                    ; preds = %reduction_write_output-after
  %sunkaddr = getelementptr inbounds i8, ptr addrspace(1) %output_element_address, i64 4
  store float %add.18.i169, ptr addrspace(1) %sunkaddr, align 4
  br label %reduction_write_output-after84

reduction_write_output-true105:                   ; preds = %reduction_write_output-after84
  store float %add.25.i174, ptr addrspace(1) %output_element_address107, align 8
  br label %reduction_write_output-after106

reduction_write_output-true127:                   ; preds = %reduction_write_output-after106
  %sunkaddr216 = getelementptr inbounds i8, ptr addrspace(1) %output_element_address107, i64 4
  store float %add.25.i179, ptr addrspace(1) %sunkaddr216, align 4
  br label %common.ret
}

; Function Attrs: nounwind
define void @fusion_398(ptr noalias nocapture readonly align 16 dereferenceable(512) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg3, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg5, ptr noalias nocapture readonly align 16 dereferenceable(4194304) %arg6, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg7, ptr noalias nocapture writeonly align 128 dereferenceable(4194304) %arg8, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg9, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg10) local_unnamed_addr #0 {
entry:
  %arg10190 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg9188 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg8186 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg7184 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg6182 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg5180 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg4178 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg3176 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg2174 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg1172 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg0170 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !200
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x = and i32 %1, 31
  %thread_id.y134 = lshr i32 %1, 5
  %2 = lshr i32 %0, 2
  %3 = shl nuw nsw i32 %0, 5
  %tile_origin.2 = and i32 %3, 96
  %4 = shl nuw nsw i32 %2, 14
  %5 = or i32 %tile_origin.2, %thread_id.x
  %6 = zext i32 %5 to i64
  %Arg_3.4 = getelementptr inbounds [128 x [1 x float]], ptr addrspace(1) %arg3176, i64 0, i64 %6, i64 0
  %Arg_3.414 = load float, ptr addrspace(1) %Arg_3.4, align 4, !invariant.load !195
  %Arg_0.1 = getelementptr inbounds [128 x [1 x float]], ptr addrspace(1) %arg0170, i64 0, i64 %6, i64 0
  %Arg_0.119 = load float, ptr addrspace(1) %Arg_0.1, align 4, !invariant.load !195
  %7 = shl nuw nsw i32 %thread_id.y134, 7
  %8 = add i32 %4, %7
  %9 = add i32 %8, %tile_origin.2
  %10 = add i32 %9, %thread_id.x
  %11 = zext i32 %10 to i64
  %12 = shl nuw nsw i64 %11, 2
  %scevgep = getelementptr i8, ptr addrspace(1) %arg6182, i64 %12
  %scevgep193 = getelementptr i8, ptr addrspace(1) %arg8186, i64 %12
  %13 = lshr i32 %10, 7
  br label %y_in_tile.loop_body

common.ret:                                       ; preds = %reduction_write_output-after109, %reduction_write_output-true130
  ret void

y_in_tile.loop_body:                              ; preds = %entry, %y_in_tile.loop_body
  %lsr.iv196 = phi i32 [ %13, %entry ], [ %lsr.iv.next, %y_in_tile.loop_body ]
  %lsr.iv194 = phi ptr addrspace(1) [ %scevgep193, %entry ], [ %scevgep195, %y_in_tile.loop_body ]
  %lsr.iv = phi ptr addrspace(1) [ %scevgep, %entry ], [ %scevgep192, %y_in_tile.loop_body ]
  %y_in_tile.invar_address.0167 = phi i32 [ %thread_id.y134, %entry ], [ %invar.inc, %y_in_tile.loop_body ]
  %partial_reduction_result4.0166 = phi float [ 0.000000e+00, %entry ], [ %add.50.i, %y_in_tile.loop_body ]
  %partial_reduction_result.0165 = phi float [ -0.000000e+00, %entry ], [ %add.36.i, %y_in_tile.loop_body ]
  %partial_reduction_result2.0164 = phi float [ 0.000000e+00, %entry ], [ %add.43.i, %y_in_tile.loop_body ]
  %invar.inc = add nuw nsw i32 %y_in_tile.invar_address.0167, 32
  %14 = and i32 %lsr.iv196, 33554304
  %15 = or i32 %14, %y_in_tile.invar_address.0167
  %Arg_6.78 = load float, ptr addrspace(1) %lsr.iv, align 4, !invariant.load !195
  %compare.10 = fcmp ogt float %Arg_6.78, 0.000000e+00
  %16 = zext i32 %15 to i64
  %Arg_5.6 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg5180, i64 0, i64 %16, i64 0
  %Arg_5.610 = load float, ptr addrspace(1) %Arg_5.6, align 4, !invariant.load !195
  %Arg_4.5 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg4178, i64 0, i64 %16, i64 0
  %Arg_4.511 = load float, ptr addrspace(1) %Arg_4.5, align 4, !invariant.load !195
  %multiply.11 = fmul float %Arg_5.610, %Arg_4.511
  %subtract.14 = fsub float 1.000000e+00, %Arg_4.511
  %multiply.15 = fmul float %multiply.11, %subtract.14
  %multiply.20 = fmul float %Arg_3.414, %multiply.15
  %Arg_2.3 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg2174, i64 0, i64 %16, i64 0
  %Arg_2.315 = load float, ptr addrspace(1) %Arg_2.3, align 4, !invariant.load !195
  %Arg_1.2 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg1172, i64 0, i64 %16, i64 0
  %Arg_1.216 = load float, ptr addrspace(1) %Arg_1.2, align 4, !invariant.load !195
  %multiply.21 = fmul float %Arg_2.315, %Arg_1.216
  %subtract.22 = fsub float 1.000000e+00, %Arg_1.216
  %multiply.23 = fmul float %multiply.21, %subtract.22
  %multiply.28 = fmul float %Arg_0.119, %multiply.23
  %add.29 = fadd float %multiply.20, %multiply.28
  %17 = select i1 %compare.10, float %add.29, float 0.000000e+00
  %add.36.i = fadd float %partial_reduction_result.0165, %17
  %multiply.38 = fmul float %Arg_6.78, %multiply.15
  %add.43.i = fadd float %partial_reduction_result2.0164, %multiply.38
  %multiply.45 = fmul float %Arg_6.78, %multiply.23
  %add.50.i = fadd float %partial_reduction_result4.0166, %multiply.45
  store float %17, ptr addrspace(1) %lsr.iv194, align 4
  %scevgep192 = getelementptr i8, ptr addrspace(1) %lsr.iv, i64 16384
  %scevgep195 = getelementptr i8, ptr addrspace(1) %lsr.iv194, i64 16384
  %lsr.iv.next = add nuw nsw i32 %lsr.iv196, 32
  %18 = icmp ugt i32 %y_in_tile.invar_address.0167, 95
  br i1 %18, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_body
  %19 = zext i32 %thread_id.x to i64
  %20 = zext i32 %thread_id.y134 to i64
  %shmem_output_address = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache39, i64 0, i64 0, i64 0, i64 %19, i64 %20
  store float %add.36.i, ptr addrspace(3) %shmem_output_address, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache39, i64 0, i64 0, i64 0, i64 %20, i64 %19
  %partial_reduction_result76 = load float, ptr addrspace(3) %shmem_transposed_addr, align 4
  %21 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result76, i32 16, i32 31)
  %add.36.i149 = fadd float %partial_reduction_result76, %21
  %22 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.36.i149, i32 8, i32 31)
  %add.36.i150 = fadd float %add.36.i149, %22
  %23 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.36.i150, i32 4, i32 31)
  %add.36.i151 = fadd float %add.36.i150, %23
  %24 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.36.i151, i32 2, i32 31)
  %add.36.i152 = fadd float %add.36.i151, %24
  %25 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.36.i152, i32 1, i32 31)
  %add.36.i153 = fadd float %add.36.i152, %25
  store float %add.36.i153, ptr addrspace(3) %shmem_transposed_addr, align 4
  %26 = icmp eq i32 %thread_id.x, 0
  %27 = zext i32 %2 to i64
  %28 = or i32 %tile_origin.2, %thread_id.y134
  %29 = zext i32 %28 to i64
  %output_element_address = getelementptr inbounds [64 x [128 x float]], ptr addrspace(1) %arg7184, i64 0, i64 %27, i64 %29
  br i1 %26, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %30 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address90 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache40, i64 0, i64 0, i64 0, i64 %19, i64 %20
  store float %add.43.i, ptr addrspace(3) %shmem_output_address90, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr92 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache40, i64 0, i64 0, i64 0, i64 %20, i64 %19
  %partial_reduction_result94 = load float, ptr addrspace(3) %shmem_transposed_addr92, align 4
  %31 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result94, i32 16, i32 31)
  %add.43.i154 = fadd float %partial_reduction_result94, %31
  %32 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.43.i154, i32 8, i32 31)
  %add.43.i155 = fadd float %add.43.i154, %32
  %33 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.43.i155, i32 4, i32 31)
  %add.43.i156 = fadd float %add.43.i155, %33
  %34 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.43.i156, i32 2, i32 31)
  %add.43.i157 = fadd float %add.43.i156, %34
  %35 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.43.i157, i32 1, i32 31)
  %add.43.i158 = fadd float %add.43.i157, %35
  store float %add.43.i158, ptr addrspace(3) %shmem_transposed_addr92, align 4
  %output_element_address110 = getelementptr inbounds [64 x [128 x float]], ptr addrspace(1) %arg9188, i64 0, i64 %27, i64 %29
  br i1 %30, label %reduction_write_output-true108, label %reduction_write_output-after109

reduction_write_output-after109:                  ; preds = %reduction_write_output-true108, %reduction_write_output-after
  %36 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address112 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache41, i64 0, i64 0, i64 0, i64 %19, i64 %20
  store float %add.50.i, ptr addrspace(3) %shmem_output_address112, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr114 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache41, i64 0, i64 0, i64 0, i64 %20, i64 %19
  %partial_reduction_result116 = load float, ptr addrspace(3) %shmem_transposed_addr114, align 4
  %37 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result116, i32 16, i32 31)
  %add.50.i159 = fadd float %partial_reduction_result116, %37
  %38 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.50.i159, i32 8, i32 31)
  %add.50.i160 = fadd float %add.50.i159, %38
  %39 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.50.i160, i32 4, i32 31)
  %add.50.i161 = fadd float %add.50.i160, %39
  %40 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.50.i161, i32 2, i32 31)
  %add.50.i162 = fadd float %add.50.i161, %40
  %41 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.50.i162, i32 1, i32 31)
  %add.50.i163 = fadd float %add.50.i162, %41
  store float %add.50.i163, ptr addrspace(3) %shmem_transposed_addr114, align 4
  %output_element_address132 = getelementptr inbounds [64 x [128 x float]], ptr addrspace(1) %arg10190, i64 0, i64 %27, i64 %29
  br i1 %36, label %reduction_write_output-true130, label %common.ret

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  store float %add.36.i153, ptr addrspace(1) %output_element_address, align 4
  br label %reduction_write_output-after

reduction_write_output-true108:                   ; preds = %reduction_write_output-after
  store float %add.43.i158, ptr addrspace(1) %output_element_address110, align 4
  br label %reduction_write_output-after109

reduction_write_output-true130:                   ; preds = %reduction_write_output-after109
  store float %add.50.i163, ptr addrspace(1) %output_element_address132, align 4
  br label %common.ret
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_280(ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(65536) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg3, ptr noalias nocapture align 128 dereferenceable(65536) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg5, ptr noalias nocapture align 128 dereferenceable(65536) %arg6, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg7, ptr noalias nocapture align 128 dereferenceable(65536) %arg8, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg9, ptr noalias nocapture align 128 dereferenceable(65536) %arg10, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg11) local_unnamed_addr #6 {
entry:
  %arg1123 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg1021 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg919 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg817 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg715 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg613 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg511 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg49 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg37 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg25 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg13 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg01 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !215
  %1 = shl nuw nsw i32 %0, 10
  %2 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %linear_index = or i32 %1, %2
  %3 = zext i32 %linear_index to i64
  %4 = getelementptr inbounds float, ptr addrspace(1) %arg01, i64 %3
  %5 = load float, ptr addrspace(1) %4, align 4, !invariant.load !195
  %6 = load float, ptr addrspace(1) %arg25, align 16, !invariant.load !195
  %7 = getelementptr inbounds float, ptr addrspace(1) %arg13, i64 %3
  %8 = load float, ptr addrspace(1) %7, align 4, !invariant.load !195
  %multiply.13 = fmul float %6, %8
  %subtract.14 = fsub float %5, %multiply.13
  %9 = getelementptr inbounds float, ptr addrspace(1) %arg37, i64 %3
  %10 = load float, ptr addrspace(1) %9, align 4, !invariant.load !195
  %11 = getelementptr inbounds float, ptr addrspace(1) %arg49, i64 %3
  %12 = load float, ptr addrspace(1) %11, align 4
  %multiply.15 = fmul float %6, %12
  %subtract.16 = fsub float %10, %multiply.15
  %13 = getelementptr inbounds float, ptr addrspace(1) %arg511, i64 %3
  %14 = load float, ptr addrspace(1) %13, align 4, !invariant.load !195
  %15 = getelementptr inbounds float, ptr addrspace(1) %arg613, i64 %3
  %16 = load float, ptr addrspace(1) %15, align 4
  %multiply.17 = fmul float %6, %16
  %subtract.18 = fsub float %14, %multiply.17
  %17 = getelementptr inbounds float, ptr addrspace(1) %arg715, i64 %3
  %18 = load float, ptr addrspace(1) %17, align 4, !invariant.load !195
  %19 = getelementptr inbounds float, ptr addrspace(1) %arg817, i64 %3
  %20 = load float, ptr addrspace(1) %19, align 4
  %multiply.19 = fmul float %6, %20
  %subtract.20 = fsub float %18, %multiply.19
  %21 = getelementptr inbounds float, ptr addrspace(1) %arg919, i64 %3
  %22 = load float, ptr addrspace(1) %21, align 4, !invariant.load !195
  %23 = getelementptr inbounds float, ptr addrspace(1) %arg1021, i64 %3
  %24 = load float, ptr addrspace(1) %23, align 4
  %multiply.21 = fmul float %6, %24
  %subtract.22 = fsub float %22, %multiply.21
  %25 = getelementptr inbounds float, ptr addrspace(1) %arg1123, i64 %3
  store float %subtract.14, ptr addrspace(1) %25, align 4
  store float %subtract.16, ptr addrspace(1) %23, align 4
  store float %subtract.18, ptr addrspace(1) %19, align 4
  store float %subtract.20, ptr addrspace(1) %15, align 4
  store float %subtract.22, ptr addrspace(1) %11, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_285(ptr noalias nocapture readonly align 16 dereferenceable(512) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg3, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg5, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg6, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg7, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg8, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg9, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg10, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg11, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg12, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg13, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg14, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg15, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg16, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg17, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg18, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg19, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg20, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg21, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg22, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg23, ptr noalias nocapture align 128 dereferenceable(512) %arg24, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg25, ptr noalias nocapture align 128 dereferenceable(512) %arg26, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg27, ptr noalias nocapture align 128 dereferenceable(512) %arg28, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg29, ptr noalias nocapture align 128 dereferenceable(512) %arg30, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg31, ptr noalias nocapture align 128 dereferenceable(512) %arg32, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg33, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg34, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg35, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg36, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg37, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg38, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg39, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg40, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg41, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg42, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg43, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg44, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg45, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg46, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg47, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg48, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg49, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg50, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg51, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg52, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg53, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg54, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg55) local_unnamed_addr #6 {
entry:
  %arg55118 = addrspacecast ptr %arg55 to ptr addrspace(1)
  %arg54116 = addrspacecast ptr %arg54 to ptr addrspace(1)
  %arg53114 = addrspacecast ptr %arg53 to ptr addrspace(1)
  %arg52112 = addrspacecast ptr %arg52 to ptr addrspace(1)
  %arg51110 = addrspacecast ptr %arg51 to ptr addrspace(1)
  %arg50108 = addrspacecast ptr %arg50 to ptr addrspace(1)
  %arg49106 = addrspacecast ptr %arg49 to ptr addrspace(1)
  %arg48104 = addrspacecast ptr %arg48 to ptr addrspace(1)
  %arg47102 = addrspacecast ptr %arg47 to ptr addrspace(1)
  %arg46100 = addrspacecast ptr %arg46 to ptr addrspace(1)
  %arg4598 = addrspacecast ptr %arg45 to ptr addrspace(1)
  %arg4496 = addrspacecast ptr %arg44 to ptr addrspace(1)
  %arg4394 = addrspacecast ptr %arg43 to ptr addrspace(1)
  %arg4292 = addrspacecast ptr %arg42 to ptr addrspace(1)
  %arg4190 = addrspacecast ptr %arg41 to ptr addrspace(1)
  %arg4088 = addrspacecast ptr %arg40 to ptr addrspace(1)
  %arg3986 = addrspacecast ptr %arg39 to ptr addrspace(1)
  %arg3884 = addrspacecast ptr %arg38 to ptr addrspace(1)
  %arg3782 = addrspacecast ptr %arg37 to ptr addrspace(1)
  %arg3680 = addrspacecast ptr %arg36 to ptr addrspace(1)
  %arg3578 = addrspacecast ptr %arg35 to ptr addrspace(1)
  %arg3476 = addrspacecast ptr %arg34 to ptr addrspace(1)
  %arg3374 = addrspacecast ptr %arg33 to ptr addrspace(1)
  %arg3272 = addrspacecast ptr %arg32 to ptr addrspace(1)
  %arg3170 = addrspacecast ptr %arg31 to ptr addrspace(1)
  %arg3068 = addrspacecast ptr %arg30 to ptr addrspace(1)
  %arg2966 = addrspacecast ptr %arg29 to ptr addrspace(1)
  %arg2864 = addrspacecast ptr %arg28 to ptr addrspace(1)
  %arg2762 = addrspacecast ptr %arg27 to ptr addrspace(1)
  %arg2660 = addrspacecast ptr %arg26 to ptr addrspace(1)
  %arg2558 = addrspacecast ptr %arg25 to ptr addrspace(1)
  %arg2456 = addrspacecast ptr %arg24 to ptr addrspace(1)
  %arg2354 = addrspacecast ptr %arg23 to ptr addrspace(1)
  %arg2252 = addrspacecast ptr %arg22 to ptr addrspace(1)
  %arg2150 = addrspacecast ptr %arg21 to ptr addrspace(1)
  %arg2048 = addrspacecast ptr %arg20 to ptr addrspace(1)
  %arg1946 = addrspacecast ptr %arg19 to ptr addrspace(1)
  %arg1844 = addrspacecast ptr %arg18 to ptr addrspace(1)
  %arg1742 = addrspacecast ptr %arg17 to ptr addrspace(1)
  %arg1640 = addrspacecast ptr %arg16 to ptr addrspace(1)
  %arg1538 = addrspacecast ptr %arg15 to ptr addrspace(1)
  %arg1436 = addrspacecast ptr %arg14 to ptr addrspace(1)
  %arg1334 = addrspacecast ptr %arg13 to ptr addrspace(1)
  %arg1232 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg1130 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg1028 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg926 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg824 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg722 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg620 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg518 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg416 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg314 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg212 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg110 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg01 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !213
  %1 = zext i32 %0 to i64
  %2 = getelementptr inbounds float, ptr addrspace(1) %arg01, i64 %1
  %3 = load float, ptr addrspace(1) %2, align 4, !invariant.load !195
  %4 = load float, ptr addrspace(1) %arg212, align 16, !invariant.load !195
  %5 = getelementptr inbounds float, ptr addrspace(1) %arg110, i64 %1
  %6 = load float, ptr addrspace(1) %5, align 4, !invariant.load !195
  %multiply.43 = fmul float %4, %6
  %subtract.44 = fsub float %3, %multiply.43
  %7 = getelementptr inbounds float, ptr addrspace(1) %arg314, i64 %1
  %8 = load float, ptr addrspace(1) %7, align 4, !invariant.load !195
  %9 = getelementptr inbounds float, ptr addrspace(1) %arg416, i64 %1
  %10 = load float, ptr addrspace(1) %9, align 4, !invariant.load !195
  %multiply.45 = fmul float %4, %10
  %subtract.46 = fsub float %8, %multiply.45
  %11 = getelementptr inbounds float, ptr addrspace(1) %arg518, i64 %1
  %12 = load float, ptr addrspace(1) %11, align 4, !invariant.load !195
  %13 = getelementptr inbounds float, ptr addrspace(1) %arg620, i64 %1
  %14 = load float, ptr addrspace(1) %13, align 4, !invariant.load !195
  %multiply.47 = fmul float %4, %14
  %subtract.48 = fsub float %12, %multiply.47
  %15 = getelementptr inbounds float, ptr addrspace(1) %arg722, i64 %1
  %16 = load float, ptr addrspace(1) %15, align 4, !invariant.load !195
  %17 = getelementptr inbounds float, ptr addrspace(1) %arg824, i64 %1
  %18 = load float, ptr addrspace(1) %17, align 4, !invariant.load !195
  %multiply.49 = fmul float %4, %18
  %subtract.50 = fsub float %16, %multiply.49
  %19 = getelementptr inbounds float, ptr addrspace(1) %arg926, i64 %1
  %20 = load float, ptr addrspace(1) %19, align 4, !invariant.load !195
  %21 = getelementptr inbounds float, ptr addrspace(1) %arg1028, i64 %1
  %22 = load float, ptr addrspace(1) %21, align 4, !invariant.load !195
  %multiply.51 = fmul float %4, %22
  %subtract.52 = fsub float %20, %multiply.51
  %23 = getelementptr inbounds float, ptr addrspace(1) %arg1130, i64 %1
  %24 = load float, ptr addrspace(1) %23, align 4, !invariant.load !195
  %25 = getelementptr inbounds float, ptr addrspace(1) %arg1232, i64 %1
  %26 = load float, ptr addrspace(1) %25, align 4, !invariant.load !195
  %multiply.53 = fmul float %4, %26
  %subtract.54 = fsub float %24, %multiply.53
  %27 = getelementptr inbounds float, ptr addrspace(1) %arg1334, i64 %1
  %28 = load float, ptr addrspace(1) %27, align 4, !invariant.load !195
  %29 = getelementptr inbounds float, ptr addrspace(1) %arg1436, i64 %1
  %30 = load float, ptr addrspace(1) %29, align 4, !invariant.load !195
  %multiply.55 = fmul float %4, %30
  %subtract.56 = fsub float %28, %multiply.55
  %31 = getelementptr inbounds float, ptr addrspace(1) %arg1538, i64 %1
  %32 = load float, ptr addrspace(1) %31, align 4, !invariant.load !195
  %33 = getelementptr inbounds float, ptr addrspace(1) %arg1640, i64 %1
  %34 = load float, ptr addrspace(1) %33, align 4, !invariant.load !195
  %multiply.57 = fmul float %4, %34
  %subtract.58 = fsub float %32, %multiply.57
  %35 = getelementptr inbounds float, ptr addrspace(1) %arg1742, i64 %1
  %36 = load float, ptr addrspace(1) %35, align 4, !invariant.load !195
  %37 = getelementptr inbounds float, ptr addrspace(1) %arg1844, i64 %1
  %38 = load float, ptr addrspace(1) %37, align 4, !invariant.load !195
  %multiply.59 = fmul float %4, %38
  %subtract.60 = fsub float %36, %multiply.59
  %39 = getelementptr inbounds float, ptr addrspace(1) %arg1946, i64 %1
  %40 = load float, ptr addrspace(1) %39, align 4, !invariant.load !195
  %41 = getelementptr inbounds float, ptr addrspace(1) %arg2048, i64 %1
  %42 = load float, ptr addrspace(1) %41, align 4, !invariant.load !195
  %multiply.61 = fmul float %4, %42
  %subtract.62 = fsub float %40, %multiply.61
  %43 = getelementptr inbounds float, ptr addrspace(1) %arg2150, i64 %1
  %44 = load float, ptr addrspace(1) %43, align 4, !invariant.load !195
  %45 = getelementptr inbounds float, ptr addrspace(1) %arg2252, i64 %1
  %46 = load float, ptr addrspace(1) %45, align 4, !invariant.load !195
  %multiply.63 = fmul float %4, %46
  %subtract.64 = fsub float %44, %multiply.63
  %47 = getelementptr inbounds float, ptr addrspace(1) %arg2354, i64 %1
  %48 = load float, ptr addrspace(1) %47, align 4, !invariant.load !195
  %49 = getelementptr inbounds float, ptr addrspace(1) %arg2456, i64 %1
  %50 = load float, ptr addrspace(1) %49, align 4
  %multiply.65 = fmul float %4, %50
  %subtract.66 = fsub float %48, %multiply.65
  %51 = getelementptr inbounds float, ptr addrspace(1) %arg2558, i64 %1
  %52 = load float, ptr addrspace(1) %51, align 4, !invariant.load !195
  %53 = getelementptr inbounds float, ptr addrspace(1) %arg2660, i64 %1
  %54 = load float, ptr addrspace(1) %53, align 4
  %multiply.67 = fmul float %4, %54
  %subtract.68 = fsub float %52, %multiply.67
  %55 = getelementptr inbounds float, ptr addrspace(1) %arg2762, i64 %1
  %56 = load float, ptr addrspace(1) %55, align 4, !invariant.load !195
  %57 = getelementptr inbounds float, ptr addrspace(1) %arg2864, i64 %1
  %58 = load float, ptr addrspace(1) %57, align 4
  %multiply.69 = fmul float %4, %58
  %subtract.70 = fsub float %56, %multiply.69
  %59 = getelementptr inbounds float, ptr addrspace(1) %arg2966, i64 %1
  %60 = load float, ptr addrspace(1) %59, align 4, !invariant.load !195
  %61 = getelementptr inbounds float, ptr addrspace(1) %arg3068, i64 %1
  %62 = load float, ptr addrspace(1) %61, align 4
  %multiply.71 = fmul float %4, %62
  %subtract.72 = fsub float %60, %multiply.71
  %63 = getelementptr inbounds float, ptr addrspace(1) %arg3170, i64 %1
  %64 = load float, ptr addrspace(1) %63, align 4, !invariant.load !195
  %65 = getelementptr inbounds float, ptr addrspace(1) %arg3272, i64 %1
  %66 = load float, ptr addrspace(1) %65, align 4
  %multiply.73 = fmul float %4, %66
  %subtract.74 = fsub float %64, %multiply.73
  %67 = getelementptr inbounds float, ptr addrspace(1) %arg3374, i64 %1
  %68 = load float, ptr addrspace(1) %67, align 4, !invariant.load !195
  %69 = getelementptr inbounds float, ptr addrspace(1) %arg3476, i64 %1
  %70 = load float, ptr addrspace(1) %69, align 4, !invariant.load !195
  %multiply.75 = fmul float %4, %70
  %subtract.76 = fsub float %68, %multiply.75
  %71 = getelementptr inbounds float, ptr addrspace(1) %arg3578, i64 %1
  %72 = load float, ptr addrspace(1) %71, align 4, !invariant.load !195
  %73 = getelementptr inbounds float, ptr addrspace(1) %arg3680, i64 %1
  %74 = load float, ptr addrspace(1) %73, align 4, !invariant.load !195
  %multiply.77 = fmul float %4, %74
  %subtract.78 = fsub float %72, %multiply.77
  %75 = getelementptr inbounds float, ptr addrspace(1) %arg3782, i64 %1
  %76 = load float, ptr addrspace(1) %75, align 4, !invariant.load !195
  %77 = getelementptr inbounds float, ptr addrspace(1) %arg3884, i64 %1
  %78 = load float, ptr addrspace(1) %77, align 4, !invariant.load !195
  %multiply.79 = fmul float %4, %78
  %subtract.80 = fsub float %76, %multiply.79
  %79 = getelementptr inbounds float, ptr addrspace(1) %arg3986, i64 %1
  %80 = load float, ptr addrspace(1) %79, align 4, !invariant.load !195
  %81 = getelementptr inbounds float, ptr addrspace(1) %arg4088, i64 %1
  %82 = load float, ptr addrspace(1) %81, align 4, !invariant.load !195
  %multiply.81 = fmul float %4, %82
  %subtract.82 = fsub float %80, %multiply.81
  %83 = getelementptr inbounds float, ptr addrspace(1) %arg4190, i64 %1
  store float %subtract.44, ptr addrspace(1) %83, align 4
  %84 = getelementptr inbounds float, ptr addrspace(1) %arg4292, i64 %1
  store float %subtract.46, ptr addrspace(1) %84, align 4
  %85 = getelementptr inbounds float, ptr addrspace(1) %arg4394, i64 %1
  store float %subtract.48, ptr addrspace(1) %85, align 4
  %86 = getelementptr inbounds float, ptr addrspace(1) %arg4496, i64 %1
  store float %subtract.50, ptr addrspace(1) %86, align 4
  %87 = getelementptr inbounds float, ptr addrspace(1) %arg4598, i64 %1
  store float %subtract.52, ptr addrspace(1) %87, align 4
  %88 = getelementptr inbounds float, ptr addrspace(1) %arg46100, i64 %1
  store float %subtract.54, ptr addrspace(1) %88, align 4
  %89 = getelementptr inbounds float, ptr addrspace(1) %arg47102, i64 %1
  store float %subtract.56, ptr addrspace(1) %89, align 4
  %90 = getelementptr inbounds float, ptr addrspace(1) %arg48104, i64 %1
  store float %subtract.58, ptr addrspace(1) %90, align 4
  %91 = getelementptr inbounds float, ptr addrspace(1) %arg49106, i64 %1
  store float %subtract.60, ptr addrspace(1) %91, align 4
  %92 = getelementptr inbounds float, ptr addrspace(1) %arg50108, i64 %1
  store float %subtract.62, ptr addrspace(1) %92, align 4
  %93 = getelementptr inbounds float, ptr addrspace(1) %arg51110, i64 %1
  store float %subtract.64, ptr addrspace(1) %93, align 4
  %94 = getelementptr inbounds float, ptr addrspace(1) %arg52112, i64 %1
  store float %subtract.66, ptr addrspace(1) %94, align 4
  %95 = getelementptr inbounds float, ptr addrspace(1) %arg53114, i64 %1
  store float %subtract.68, ptr addrspace(1) %95, align 4
  %96 = getelementptr inbounds float, ptr addrspace(1) %arg54116, i64 %1
  store float %subtract.70, ptr addrspace(1) %96, align 4
  %97 = getelementptr inbounds float, ptr addrspace(1) %arg55118, i64 %1
  store float %subtract.72, ptr addrspace(1) %97, align 4
  store float %subtract.74, ptr addrspace(1) %49, align 4
  store float %subtract.76, ptr addrspace(1) %53, align 4
  store float %subtract.78, ptr addrspace(1) %57, align 4
  store float %subtract.80, ptr addrspace(1) %61, align 4
  store float %subtract.82, ptr addrspace(1) %65, align 4
  ret void
}

; Function Attrs: nounwind
define void @fusion_639(ptr noalias nocapture readonly align 128 dereferenceable(65536) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg1, ptr noalias nocapture readonly align 128 dereferenceable(65536) %arg2, ptr noalias nocapture readonly align 128 dereferenceable(65536) %arg3, ptr noalias nocapture readonly align 128 dereferenceable(65536) %arg4, ptr noalias nocapture readonly align 128 dereferenceable(65536) %arg5, ptr noalias nocapture writeonly align 128 dereferenceable(1024) %arg6, ptr noalias nocapture writeonly align 128 dereferenceable(1024) %arg7, ptr noalias nocapture writeonly align 128 dereferenceable(1024) %arg8, ptr noalias nocapture writeonly align 128 dereferenceable(1024) %arg9, ptr noalias nocapture writeonly align 128 dereferenceable(1024) %arg10) local_unnamed_addr #0 {
entry:
  %arg10562 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg9560 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg8558 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg7556 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg6554 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg5552 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg4550 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg3548 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg2546 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg1544 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg0542 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !214
  switch i32 %0, label %common.ret [
    i32 0, label %reduce-group-0-true
    i32 1, label %reduce-group-1-true
    i32 2, label %entry.reduce-group-2-true_crit_edge
    i32 3, label %entry.reduce-group-3-true_crit_edge
    i32 4, label %entry.reduce-group-4-true_crit_edge
  ]

entry.reduce-group-4-true_crit_edge:              ; preds = %entry
  %Arg_1.2285.pre = load float, ptr addrspace(1) %arg1544, align 128, !invariant.load !195
  %.pre534 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !196
  %.pre536 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %.pre538 = and i32 %.pre536, 31
  %.pre539 = lshr i32 %.pre536, 5
  %.pre540 = shl nuw nsw i32 %.pre534, 6
  %.pre585 = shl nuw nsw i32 %.pre538, 1
  %.pre587 = or i32 %.pre585, %.pre540
  %.pre589 = zext i32 %.pre587 to i64
  %.pre626 = add nuw nsw i32 %.pre539, -32
  %.pre628 = zext i32 %.pre539 to i64
  %.pre630 = shl nuw nsw i64 %.pre589, 2
  br label %y_in_tile.loop_body297.lr.ph

entry.reduce-group-3-true_crit_edge:              ; preds = %entry
  %Arg_1.2206.pre = load float, ptr addrspace(1) %arg1544, align 128, !invariant.load !195
  %.pre527 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !196
  %.pre529 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %.pre531 = and i32 %.pre529, 31
  %.pre532 = lshr i32 %.pre529, 5
  %.pre533 = shl nuw nsw i32 %.pre527, 6
  %.pre580 = shl nuw nsw i32 %.pre531, 1
  %.pre581 = or i32 %.pre580, %.pre533
  %.pre583 = zext i32 %.pre581 to i64
  %.pre620 = add nuw nsw i32 %.pre532, -32
  %.pre622 = zext i32 %.pre532 to i64
  %.pre624 = shl nuw nsw i64 %.pre583, 2
  %1 = shl nuw nsw i64 %.pre622, 10
  %2 = add i64 %1, %.pre624
  %3 = add i64 %2, 4
  %scevgep610 = getelementptr i8, ptr addrspace(1) %arg4550, i64 %3
  br label %y_in_tile.loop_body218

entry.reduce-group-2-true_crit_edge:              ; preds = %entry
  %Arg_1.2127.pre = load float, ptr addrspace(1) %arg1544, align 128, !invariant.load !195
  %.pre = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !196
  %.pre522 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %.pre524 = and i32 %.pre522, 31
  %.pre525 = lshr i32 %.pre522, 5
  %.pre526 = shl nuw nsw i32 %.pre, 6
  %4 = shl nuw nsw i32 %.pre524, 1
  %5 = or i32 %4, %.pre526
  %6 = zext i32 %5 to i64
  %7 = add nuw nsw i32 %.pre525, -32
  %8 = zext i32 %.pre522 to i64
  %9 = lshr i64 %8, 5
  %10 = shl nuw nsw i64 %9, 10
  %11 = shl nuw nsw i64 %6, 2
  %12 = add i64 %10, %11
  %13 = add i64 %12, 4
  %scevgep616 = getelementptr i8, ptr addrspace(1) %arg3548, i64 %13
  br label %y_in_tile.loop_body139

common.ret.sink.split:                            ; preds = %reduction_write_output-after337, %reduction_write_output-after100, %reduction_write_output-after
  %.sink = phi i32 [ %39, %reduction_write_output-after ], [ %70, %reduction_write_output-after100 ], [ %131, %reduction_write_output-after337 ]
  %arg7.sink = phi ptr addrspace(1) [ %arg6554, %reduction_write_output-after ], [ %arg7556, %reduction_write_output-after100 ], [ %arg10562, %reduction_write_output-after337 ]
  %add.15.i461.sink = phi float [ %add.10.i450, %reduction_write_output-after ], [ %add.15.i461, %reduction_write_output-after100 ], [ %add.30.i494, %reduction_write_output-after337 ]
  %14 = or i32 %.sink, 1
  %15 = zext i32 %14 to i64
  %output_element_address123 = getelementptr inbounds [256 x float], ptr addrspace(1) %arg7.sink, i64 0, i64 %15
  store float %add.15.i461.sink, ptr addrspace(1) %output_element_address123, align 4
  br label %common.ret

common.ret:                                       ; preds = %reduction_write_output-after201, %common.ret.sink.split, %reduction_write_output-after100, %reduction_write_output-after, %reduction_write_output-after337, %reduction_write_output-after280, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %16 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !196
  %17 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x = and i32 %17, 31
  %thread_id.y380 = lshr i32 %17, 5
  %tile_origin.2 = shl nuw nsw i32 %16, 6
  %Arg_1.2 = load float, ptr addrspace(1) %arg1544, align 128, !invariant.load !195
  %18 = shl nuw nsw i32 %thread_id.x, 1
  %19 = or i32 %18, %tile_origin.2
  %20 = zext i32 %19 to i64
  %21 = add nuw nsw i32 %thread_id.y380, -32
  %22 = zext i32 %17 to i64
  %23 = lshr i64 %22, 5
  %24 = shl nuw nsw i64 %23, 10
  %25 = shl nuw nsw i64 %20, 2
  %26 = add i64 %24, %25
  %27 = add i64 %26, 4
  %scevgep = getelementptr i8, ptr addrspace(1) %arg0542, i64 %27
  br label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %reduce-group-0-true, %y_in_tile.loop_body
  %lsr.iv591 = phi ptr addrspace(1) [ %scevgep, %reduce-group-0-true ], [ %scevgep592, %y_in_tile.loop_body ]
  %lsr.iv = phi i32 [ %21, %reduce-group-0-true ], [ %lsr.iv.next, %y_in_tile.loop_body ]
  %partial_reduction_result375.sroa.0.0515 = phi float [ %Arg_1.2, %reduce-group-0-true ], [ %add.10.i, %y_in_tile.loop_body ]
  %partial_reduction_result375.sroa.4.0514 = phi float [ %Arg_1.2, %reduce-group-0-true ], [ %add.10.i440, %y_in_tile.loop_body ]
  %scevgep593 = getelementptr i8, ptr addrspace(1) %lsr.iv591, i64 -4
  %28 = load <2 x float>, ptr addrspace(1) %scevgep593, align 8, !invariant.load !195
  %Arg_0.13632 = extractelement <2 x float> %28, i32 0
  %Arg_0.18633 = extractelement <2 x float> %28, i32 1
  %add.10.i = fadd float %partial_reduction_result375.sroa.0.0515, %Arg_0.13632
  %add.10.i440 = fadd float %partial_reduction_result375.sroa.4.0514, %Arg_0.18633
  %lsr.iv.next = add nsw i32 %lsr.iv, 32
  %scevgep592 = getelementptr i8, ptr addrspace(1) %lsr.iv591, i64 32768
  %29 = icmp ugt i32 %lsr.iv.next, 31
  br i1 %29, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_body
  %30 = zext i32 %thread_id.x to i64
  %31 = zext i32 %thread_id.y380 to i64
  %shmem_output_address = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache42, i64 0, i64 0, i64 0, i64 %30, i64 %31
  store float %add.10.i, ptr addrspace(3) %shmem_output_address, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache42, i64 0, i64 0, i64 0, i64 %31, i64 %30
  %partial_reduction_result10 = load float, ptr addrspace(3) %shmem_transposed_addr, align 4
  %32 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result10, i32 16, i32 31)
  %add.10.i441 = fadd float %partial_reduction_result10, %32
  %33 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.10.i441, i32 8, i32 31)
  %add.10.i442 = fadd float %add.10.i441, %33
  %34 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.10.i442, i32 4, i32 31)
  %add.10.i443 = fadd float %add.10.i442, %34
  %35 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.10.i443, i32 2, i32 31)
  %add.10.i444 = fadd float %add.10.i443, %35
  %36 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.10.i444, i32 1, i32 31)
  %add.10.i445 = fadd float %add.10.i444, %36
  store float %add.10.i445, ptr addrspace(3) %shmem_transposed_addr, align 4
  %37 = shl nuw nsw i32 %thread_id.y380, 1
  %38 = icmp eq i32 %thread_id.x, 0
  %39 = or i32 %37, %tile_origin.2
  %40 = zext i32 %39 to i64
  %output_element_address = getelementptr inbounds [256 x float], ptr addrspace(1) %arg6554, i64 0, i64 %40
  br i1 %38, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %41 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address24565 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address, i64 1056
  store float %add.10.i440, ptr addrspace(3) %shmem_output_address24565, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr26566 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr, i64 1056
  %partial_reduction_result28 = load float, ptr addrspace(3) %shmem_transposed_addr26566, align 4
  %42 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result28, i32 16, i32 31)
  %add.10.i446 = fadd float %partial_reduction_result28, %42
  %43 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.10.i446, i32 8, i32 31)
  %add.10.i447 = fadd float %add.10.i446, %43
  %44 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.10.i447, i32 4, i32 31)
  %add.10.i448 = fadd float %add.10.i447, %44
  %45 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.10.i448, i32 2, i32 31)
  %add.10.i449 = fadd float %add.10.i448, %45
  %46 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.10.i449, i32 1, i32 31)
  %add.10.i450 = fadd float %add.10.i449, %46
  store float %add.10.i450, ptr addrspace(3) %shmem_transposed_addr26566, align 4
  br i1 %41, label %common.ret.sink.split, label %common.ret

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  store float %add.10.i445, ptr addrspace(1) %output_element_address, align 8
  br label %reduction_write_output-after

reduce-group-1-true:                              ; preds = %entry
  %47 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !196
  %48 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x50 = and i32 %48, 31
  %thread_id.y51379 = lshr i32 %48, 5
  %tile_origin.257 = shl nuw nsw i32 %47, 6
  %Arg_1.248 = load float, ptr addrspace(1) %arg1544, align 128, !invariant.load !195
  %49 = shl nuw nsw i32 %thread_id.x50, 1
  %50 = or i32 %49, %tile_origin.257
  %51 = zext i32 %50 to i64
  %52 = add nuw nsw i32 %thread_id.y51379, -32
  %53 = zext i32 %48 to i64
  %54 = lshr i64 %53, 5
  %55 = shl nuw nsw i64 %54, 10
  %56 = shl nuw nsw i64 %51, 2
  %57 = add i64 %55, %56
  %58 = add i64 %57, 4
  %scevgep596 = getelementptr i8, ptr addrspace(1) %arg2546, i64 %58
  br label %y_in_tile.loop_body60

y_in_tile.loop_body60:                            ; preds = %reduce-group-1-true, %y_in_tile.loop_body60
  %lsr.iv597 = phi ptr addrspace(1) [ %scevgep596, %reduce-group-1-true ], [ %scevgep598, %y_in_tile.loop_body60 ]
  %lsr.iv594 = phi i32 [ %52, %reduce-group-1-true ], [ %lsr.iv.next595, %y_in_tile.loop_body60 ]
  %partial_reduction_result47374.sroa.4.0496 = phi float [ %Arg_1.248, %reduce-group-1-true ], [ %add.15.i451, %y_in_tile.loop_body60 ]
  %partial_reduction_result47374.sroa.0.0495 = phi float [ %Arg_1.248, %reduce-group-1-true ], [ %add.15.i, %y_in_tile.loop_body60 ]
  %scevgep599 = getelementptr i8, ptr addrspace(1) %lsr.iv597, i64 -4
  %59 = load <2 x float>, ptr addrspace(1) %scevgep599, align 8, !invariant.load !195
  %Arg_2.373634 = extractelement <2 x float> %59, i32 0
  %Arg_2.379635 = extractelement <2 x float> %59, i32 1
  %add.15.i = fadd float %partial_reduction_result47374.sroa.0.0495, %Arg_2.373634
  %add.15.i451 = fadd float %partial_reduction_result47374.sroa.4.0496, %Arg_2.379635
  %lsr.iv.next595 = add nsw i32 %lsr.iv594, 32
  %scevgep598 = getelementptr i8, ptr addrspace(1) %lsr.iv597, i64 32768
  %60 = icmp ugt i32 %lsr.iv.next595, 31
  br i1 %60, label %y_in_tile.loop_exit58, label %y_in_tile.loop_body60

y_in_tile.loop_exit58:                            ; preds = %y_in_tile.loop_body60
  %61 = zext i32 %thread_id.x50 to i64
  %62 = zext i32 %thread_id.y51379 to i64
  %shmem_output_address81 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache43, i64 0, i64 0, i64 0, i64 %61, i64 %62
  store float %add.15.i, ptr addrspace(3) %shmem_output_address81, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr83 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache43, i64 0, i64 0, i64 0, i64 %62, i64 %61
  %partial_reduction_result85 = load float, ptr addrspace(3) %shmem_transposed_addr83, align 4
  %63 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result85, i32 16, i32 31)
  %add.15.i452 = fadd float %partial_reduction_result85, %63
  %64 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i452, i32 8, i32 31)
  %add.15.i453 = fadd float %add.15.i452, %64
  %65 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i453, i32 4, i32 31)
  %add.15.i454 = fadd float %add.15.i453, %65
  %66 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i454, i32 2, i32 31)
  %add.15.i455 = fadd float %add.15.i454, %66
  %67 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i455, i32 1, i32 31)
  %add.15.i456 = fadd float %add.15.i455, %67
  store float %add.15.i456, ptr addrspace(3) %shmem_transposed_addr83, align 4
  %68 = shl nuw nsw i32 %thread_id.y51379, 1
  %69 = icmp eq i32 %thread_id.x50, 0
  %70 = or i32 %68, %tile_origin.257
  %71 = zext i32 %70 to i64
  %output_element_address101 = getelementptr inbounds [256 x float], ptr addrspace(1) %arg7556, i64 0, i64 %71
  br i1 %69, label %reduction_write_output-true99, label %reduction_write_output-after100

reduction_write_output-after100:                  ; preds = %reduction_write_output-true99, %y_in_tile.loop_exit58
  %72 = icmp eq i32 %thread_id.x50, 0
  %shmem_output_address103568 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address81, i64 1056
  store float %add.15.i451, ptr addrspace(3) %shmem_output_address103568, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr105569 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr83, i64 1056
  %partial_reduction_result107 = load float, ptr addrspace(3) %shmem_transposed_addr105569, align 4
  %73 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result107, i32 16, i32 31)
  %add.15.i457 = fadd float %partial_reduction_result107, %73
  %74 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i457, i32 8, i32 31)
  %add.15.i458 = fadd float %add.15.i457, %74
  %75 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i458, i32 4, i32 31)
  %add.15.i459 = fadd float %add.15.i458, %75
  %76 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i459, i32 2, i32 31)
  %add.15.i460 = fadd float %add.15.i459, %76
  %77 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i460, i32 1, i32 31)
  %add.15.i461 = fadd float %add.15.i460, %77
  store float %add.15.i461, ptr addrspace(3) %shmem_transposed_addr105569, align 4
  br i1 %72, label %common.ret.sink.split, label %common.ret

reduction_write_output-true99:                    ; preds = %y_in_tile.loop_exit58
  store float %add.15.i456, ptr addrspace(1) %output_element_address101, align 8
  br label %reduction_write_output-after100

y_in_tile.loop_body139:                           ; preds = %entry.reduce-group-2-true_crit_edge, %y_in_tile.loop_body139
  %lsr.iv617 = phi ptr addrspace(1) [ %scevgep616, %entry.reduce-group-2-true_crit_edge ], [ %scevgep618, %y_in_tile.loop_body139 ]
  %lsr.iv614 = phi i32 [ %7, %entry.reduce-group-2-true_crit_edge ], [ %lsr.iv.next615, %y_in_tile.loop_body139 ]
  %partial_reduction_result126373.sroa.4.0500 = phi float [ %Arg_1.2127.pre, %entry.reduce-group-2-true_crit_edge ], [ %add.20.i462, %y_in_tile.loop_body139 ]
  %partial_reduction_result126373.sroa.0.0499 = phi float [ %Arg_1.2127.pre, %entry.reduce-group-2-true_crit_edge ], [ %add.20.i, %y_in_tile.loop_body139 ]
  %scevgep619 = getelementptr i8, ptr addrspace(1) %lsr.iv617, i64 -4
  %78 = load <2 x float>, ptr addrspace(1) %scevgep619, align 8, !invariant.load !195
  %Arg_3.4152638 = extractelement <2 x float> %78, i32 0
  %Arg_3.4158639 = extractelement <2 x float> %78, i32 1
  %add.20.i = fadd float %partial_reduction_result126373.sroa.0.0499, %Arg_3.4152638
  %add.20.i462 = fadd float %partial_reduction_result126373.sroa.4.0500, %Arg_3.4158639
  %lsr.iv.next615 = add nsw i32 %lsr.iv614, 32
  %scevgep618 = getelementptr i8, ptr addrspace(1) %lsr.iv617, i64 32768
  %79 = icmp ugt i32 %lsr.iv.next615, 31
  br i1 %79, label %y_in_tile.loop_exit137, label %y_in_tile.loop_body139

y_in_tile.loop_exit137:                           ; preds = %y_in_tile.loop_body139
  %80 = zext i32 %.pre524 to i64
  %81 = zext i32 %.pre525 to i64
  %shmem_output_address160 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache44, i64 0, i64 0, i64 0, i64 %80, i64 %81
  store float %add.20.i, ptr addrspace(3) %shmem_output_address160, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr162 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache44, i64 0, i64 0, i64 0, i64 %81, i64 %80
  %partial_reduction_result164 = load float, ptr addrspace(3) %shmem_transposed_addr162, align 4
  %82 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result164, i32 16, i32 31)
  %add.20.i463 = fadd float %partial_reduction_result164, %82
  %83 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i463, i32 8, i32 31)
  %add.20.i464 = fadd float %add.20.i463, %83
  %84 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i464, i32 4, i32 31)
  %add.20.i465 = fadd float %add.20.i464, %84
  %85 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i465, i32 2, i32 31)
  %add.20.i466 = fadd float %add.20.i465, %85
  %86 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i466, i32 1, i32 31)
  %add.20.i467 = fadd float %add.20.i466, %86
  store float %add.20.i467, ptr addrspace(3) %shmem_transposed_addr162, align 4
  %87 = shl nuw nsw i32 %.pre525, 1
  %88 = icmp eq i32 %.pre524, 0
  %89 = or i32 %87, %.pre526
  %90 = zext i32 %89 to i64
  %output_element_address180 = getelementptr inbounds [256 x float], ptr addrspace(1) %arg8558, i64 0, i64 %90
  br i1 %88, label %reduction_write_output-true178, label %reduction_write_output-after179

reduction_write_output-after179:                  ; preds = %reduction_write_output-true178, %y_in_tile.loop_exit137
  %91 = icmp eq i32 %.pre524, 0
  %shmem_output_address182571 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address160, i64 1056
  store float %add.20.i462, ptr addrspace(3) %shmem_output_address182571, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr184572 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr162, i64 1056
  %partial_reduction_result186 = load float, ptr addrspace(3) %shmem_transposed_addr184572, align 4
  %92 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result186, i32 16, i32 31)
  %add.20.i468 = fadd float %partial_reduction_result186, %92
  %93 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i468, i32 8, i32 31)
  %add.20.i469 = fadd float %add.20.i468, %93
  %94 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i469, i32 4, i32 31)
  %add.20.i470 = fadd float %add.20.i469, %94
  %95 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i470, i32 2, i32 31)
  %add.20.i471 = fadd float %add.20.i470, %95
  %96 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i471, i32 1, i32 31)
  %add.20.i472 = fadd float %add.20.i471, %96
  store float %add.20.i472, ptr addrspace(3) %shmem_transposed_addr184572, align 4
  br i1 %91, label %reduction_write_output-true200, label %reduction_write_output-after201

reduction_write_output-after201:                  ; preds = %reduction_write_output-true200, %reduction_write_output-after179
  br label %common.ret

reduction_write_output-true178:                   ; preds = %y_in_tile.loop_exit137
  store float %add.20.i467, ptr addrspace(1) %output_element_address180, align 8
  br label %reduction_write_output-after179

reduction_write_output-true200:                   ; preds = %reduction_write_output-after179
  %sunkaddr = getelementptr inbounds i8, ptr addrspace(1) %output_element_address180, i64 4
  store float %add.20.i472, ptr addrspace(1) %sunkaddr, align 4
  br label %reduction_write_output-after201

y_in_tile.loop_body218:                           ; preds = %entry.reduce-group-3-true_crit_edge, %y_in_tile.loop_body218
  %lsr.iv611 = phi ptr addrspace(1) [ %scevgep610, %entry.reduce-group-3-true_crit_edge ], [ %scevgep612, %y_in_tile.loop_body218 ]
  %lsr.iv608 = phi i32 [ %.pre620, %entry.reduce-group-3-true_crit_edge ], [ %lsr.iv.next609, %y_in_tile.loop_body218 ]
  %partial_reduction_result205372.sroa.4.0505 = phi float [ %Arg_1.2206.pre, %entry.reduce-group-3-true_crit_edge ], [ %add.25.i473, %y_in_tile.loop_body218 ]
  %partial_reduction_result205372.sroa.0.0504 = phi float [ %Arg_1.2206.pre, %entry.reduce-group-3-true_crit_edge ], [ %add.25.i, %y_in_tile.loop_body218 ]
  %scevgep613 = getelementptr i8, ptr addrspace(1) %lsr.iv611, i64 -4
  %97 = load <2 x float>, ptr addrspace(1) %scevgep613, align 8, !invariant.load !195
  %Arg_4.5231636 = extractelement <2 x float> %97, i32 0
  %Arg_4.5237637 = extractelement <2 x float> %97, i32 1
  %add.25.i = fadd float %partial_reduction_result205372.sroa.0.0504, %Arg_4.5231636
  %add.25.i473 = fadd float %partial_reduction_result205372.sroa.4.0505, %Arg_4.5237637
  %lsr.iv.next609 = add nsw i32 %lsr.iv608, 32
  %scevgep612 = getelementptr i8, ptr addrspace(1) %lsr.iv611, i64 32768
  %98 = icmp ugt i32 %lsr.iv.next609, 31
  br i1 %98, label %y_in_tile.loop_exit216, label %y_in_tile.loop_body218

y_in_tile.loop_exit216:                           ; preds = %y_in_tile.loop_body218
  %99 = zext i32 %.pre531 to i64
  %shmem_output_address239 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache45, i64 0, i64 0, i64 0, i64 %99, i64 %.pre622
  store float %add.25.i, ptr addrspace(3) %shmem_output_address239, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr241 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache45, i64 0, i64 0, i64 0, i64 %.pre622, i64 %99
  %partial_reduction_result243 = load float, ptr addrspace(3) %shmem_transposed_addr241, align 4
  %100 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result243, i32 16, i32 31)
  %add.25.i474 = fadd float %partial_reduction_result243, %100
  %101 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i474, i32 8, i32 31)
  %add.25.i475 = fadd float %add.25.i474, %101
  %102 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i475, i32 4, i32 31)
  %add.25.i476 = fadd float %add.25.i475, %102
  %103 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i476, i32 2, i32 31)
  %add.25.i477 = fadd float %add.25.i476, %103
  %104 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i477, i32 1, i32 31)
  %add.25.i478 = fadd float %add.25.i477, %104
  store float %add.25.i478, ptr addrspace(3) %shmem_transposed_addr241, align 4
  %105 = shl nuw nsw i32 %.pre532, 1
  %106 = icmp eq i32 %.pre531, 0
  %107 = or i32 %105, %.pre533
  %108 = zext i32 %107 to i64
  %output_element_address259 = getelementptr [256 x float], ptr addrspace(1) %arg9560, i64 0, i64 %108
  br i1 %106, label %reduction_write_output-true257, label %reduction_write_output-after258

reduction_write_output-after258:                  ; preds = %reduction_write_output-true257, %y_in_tile.loop_exit216
  %109 = icmp eq i32 %.pre531, 0
  %shmem_output_address261575 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address239, i64 1056
  store float %add.25.i473, ptr addrspace(3) %shmem_output_address261575, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr263576 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr241, i64 1056
  %partial_reduction_result265 = load float, ptr addrspace(3) %shmem_transposed_addr263576, align 4
  %110 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result265, i32 16, i32 31)
  %add.25.i479 = fadd float %partial_reduction_result265, %110
  %111 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i479, i32 8, i32 31)
  %add.25.i480 = fadd float %add.25.i479, %111
  %112 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i480, i32 4, i32 31)
  %add.25.i481 = fadd float %add.25.i480, %112
  %113 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i481, i32 2, i32 31)
  %add.25.i482 = fadd float %add.25.i481, %113
  %114 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i482, i32 1, i32 31)
  %add.25.i483 = fadd float %add.25.i482, %114
  store float %add.25.i483, ptr addrspace(3) %shmem_transposed_addr263576, align 4
  br i1 %109, label %reduction_write_output-true279, label %reduction_write_output-after280

reduction_write_output-after280:                  ; preds = %reduction_write_output-true279, %reduction_write_output-after258
  %115 = icmp eq i32 %0, 4
  br i1 %115, label %y_in_tile.loop_body297.lr.ph, label %common.ret

reduction_write_output-true257:                   ; preds = %y_in_tile.loop_exit216
  store float %add.25.i478, ptr addrspace(1) %output_element_address259, align 8
  br label %reduction_write_output-after258

reduction_write_output-true279:                   ; preds = %reduction_write_output-after258
  %sunkaddr640 = getelementptr inbounds i8, ptr addrspace(1) %output_element_address259, i64 4
  store float %add.25.i483, ptr addrspace(1) %sunkaddr640, align 4
  br label %reduction_write_output-after280

y_in_tile.loop_body297.lr.ph:                     ; preds = %reduction_write_output-after280, %entry.reduce-group-4-true_crit_edge
  %.pre-phi631 = phi i64 [ %.pre630, %entry.reduce-group-4-true_crit_edge ], [ %.pre624, %reduction_write_output-after280 ]
  %.pre-phi629 = phi i64 [ %.pre628, %entry.reduce-group-4-true_crit_edge ], [ %.pre622, %reduction_write_output-after280 ]
  %.pre-phi627 = phi i32 [ %.pre626, %entry.reduce-group-4-true_crit_edge ], [ %.pre620, %reduction_write_output-after280 ]
  %.pre-phi590 = phi i64 [ %.pre589, %entry.reduce-group-4-true_crit_edge ], [ %.pre583, %reduction_write_output-after280 ]
  %.pre-phi588 = phi i32 [ %.pre587, %entry.reduce-group-4-true_crit_edge ], [ %.pre581, %reduction_write_output-after280 ]
  %tile_origin.2294.pre-phi = phi i32 [ %.pre540, %entry.reduce-group-4-true_crit_edge ], [ %.pre533, %reduction_write_output-after280 ]
  %thread_id.y288376.pre-phi = phi i32 [ %.pre539, %entry.reduce-group-4-true_crit_edge ], [ %.pre532, %reduction_write_output-after280 ]
  %thread_id.x287.pre-phi = phi i32 [ %.pre538, %entry.reduce-group-4-true_crit_edge ], [ %.pre531, %reduction_write_output-after280 ]
  %Arg_1.2285 = phi float [ %Arg_1.2285.pre, %entry.reduce-group-4-true_crit_edge ], [ %Arg_1.2206.pre, %reduction_write_output-after280 ]
  %116 = or i32 %.pre-phi588, 1
  %117 = zext i32 %116 to i64
  %118 = shl nuw nsw i64 %.pre-phi629, 10
  %119 = add nuw nsw i64 %118, %.pre-phi631
  %scevgep602 = getelementptr i8, ptr addrspace(1) %arg5552, i64 %119
  %120 = shl nuw nsw i64 %117, 2
  %121 = add nuw nsw i64 %118, %120
  %scevgep605 = getelementptr i8, ptr addrspace(1) %arg5552, i64 %121
  br label %y_in_tile.loop_body297

y_in_tile.loop_body297:                           ; preds = %y_in_tile.loop_body297.lr.ph, %y_in_tile.loop_body297
  %lsr.iv606 = phi ptr addrspace(1) [ %scevgep605, %y_in_tile.loop_body297.lr.ph ], [ %scevgep607, %y_in_tile.loop_body297 ]
  %lsr.iv603 = phi ptr addrspace(1) [ %scevgep602, %y_in_tile.loop_body297.lr.ph ], [ %scevgep604, %y_in_tile.loop_body297 ]
  %lsr.iv600 = phi i32 [ %.pre-phi627, %y_in_tile.loop_body297.lr.ph ], [ %lsr.iv.next601, %y_in_tile.loop_body297 ]
  %partial_reduction_result284371.sroa.4.0510 = phi float [ %Arg_1.2285, %y_in_tile.loop_body297.lr.ph ], [ %add.30.i484, %y_in_tile.loop_body297 ]
  %partial_reduction_result284371.sroa.0.0509 = phi float [ %Arg_1.2285, %y_in_tile.loop_body297.lr.ph ], [ %add.30.i, %y_in_tile.loop_body297 ]
  %Arg_5.6310 = load float, ptr addrspace(1) %lsr.iv603, align 8, !invariant.load !195
  %add.30.i = fadd float %partial_reduction_result284371.sroa.0.0509, %Arg_5.6310
  %Arg_5.6316 = load float, ptr addrspace(1) %lsr.iv606, align 4, !invariant.load !195
  %add.30.i484 = fadd float %partial_reduction_result284371.sroa.4.0510, %Arg_5.6316
  %lsr.iv.next601 = add nsw i32 %lsr.iv600, 32
  %scevgep604 = getelementptr i8, ptr addrspace(1) %lsr.iv603, i64 32768
  %scevgep607 = getelementptr i8, ptr addrspace(1) %lsr.iv606, i64 32768
  %122 = icmp ugt i32 %lsr.iv.next601, 31
  br i1 %122, label %y_in_tile.loop_exit295, label %y_in_tile.loop_body297

y_in_tile.loop_exit295:                           ; preds = %y_in_tile.loop_body297
  %123 = zext i32 %thread_id.x287.pre-phi to i64
  %shmem_output_address318 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache46, i64 0, i64 0, i64 0, i64 %123, i64 %.pre-phi629
  store float %add.30.i, ptr addrspace(3) %shmem_output_address318, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr320 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache46, i64 0, i64 0, i64 0, i64 %.pre-phi629, i64 %123
  %partial_reduction_result322 = load float, ptr addrspace(3) %shmem_transposed_addr320, align 4
  %124 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result322, i32 16, i32 31)
  %add.30.i485 = fadd float %partial_reduction_result322, %124
  %125 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i485, i32 8, i32 31)
  %add.30.i486 = fadd float %add.30.i485, %125
  %126 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i486, i32 4, i32 31)
  %add.30.i487 = fadd float %add.30.i486, %126
  %127 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i487, i32 2, i32 31)
  %add.30.i488 = fadd float %add.30.i487, %127
  %128 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i488, i32 1, i32 31)
  %add.30.i489 = fadd float %add.30.i488, %128
  store float %add.30.i489, ptr addrspace(3) %shmem_transposed_addr320, align 4
  %129 = shl nuw nsw i32 %thread_id.y288376.pre-phi, 1
  %130 = icmp eq i32 %thread_id.x287.pre-phi, 0
  %131 = or i32 %129, %tile_origin.2294.pre-phi
  %132 = zext i32 %131 to i64
  %output_element_address338 = getelementptr inbounds [256 x float], ptr addrspace(1) %arg10562, i64 0, i64 %132
  br i1 %130, label %reduction_write_output-true336, label %reduction_write_output-after337

reduction_write_output-after337:                  ; preds = %reduction_write_output-true336, %y_in_tile.loop_exit295
  %133 = icmp eq i32 %thread_id.x287.pre-phi, 0
  %shmem_output_address340578 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address318, i64 1056
  store float %add.30.i484, ptr addrspace(3) %shmem_output_address340578, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr342579 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr320, i64 1056
  %partial_reduction_result344 = load float, ptr addrspace(3) %shmem_transposed_addr342579, align 4
  %134 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result344, i32 16, i32 31)
  %add.30.i490 = fadd float %partial_reduction_result344, %134
  %135 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i490, i32 8, i32 31)
  %add.30.i491 = fadd float %add.30.i490, %135
  %136 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i491, i32 4, i32 31)
  %add.30.i492 = fadd float %add.30.i491, %136
  %137 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i492, i32 2, i32 31)
  %add.30.i493 = fadd float %add.30.i492, %137
  %138 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i493, i32 1, i32 31)
  %add.30.i494 = fadd float %add.30.i493, %138
  store float %add.30.i494, ptr addrspace(3) %shmem_transposed_addr342579, align 4
  br i1 %133, label %common.ret.sink.split, label %common.ret

reduction_write_output-true336:                   ; preds = %y_in_tile.loop_exit295
  store float %add.30.i489, ptr addrspace(1) %output_element_address338, align 8
  br label %reduction_write_output-after337
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_208(ptr noalias nocapture readonly align 16 dereferenceable(1024) %arg0, ptr noalias nocapture align 128 dereferenceable(1024) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(1024) %arg3, ptr noalias nocapture align 128 dereferenceable(1024) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(1024) %arg5, ptr noalias nocapture align 128 dereferenceable(1024) %arg6, ptr noalias nocapture readonly align 16 dereferenceable(1024) %arg7, ptr noalias nocapture align 128 dereferenceable(1024) %arg8, ptr noalias nocapture readonly align 16 dereferenceable(1024) %arg9, ptr noalias nocapture align 128 dereferenceable(1024) %arg10, ptr noalias nocapture readonly align 16 dereferenceable(1024) %arg11, ptr noalias nocapture align 128 dereferenceable(1024) %arg12) local_unnamed_addr #6 {
entry:
  %arg1225 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg1123 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg1021 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg919 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg817 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg715 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg613 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg511 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg49 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg37 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg25 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg13 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg01 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !200
  %1 = zext i32 %0 to i64
  %2 = getelementptr inbounds float, ptr addrspace(1) %arg01, i64 %1
  %3 = load float, ptr addrspace(1) %2, align 4, !invariant.load !195
  %4 = load float, ptr addrspace(1) %arg25, align 16, !invariant.load !195
  %5 = getelementptr inbounds float, ptr addrspace(1) %arg13, i64 %1
  %6 = load float, ptr addrspace(1) %5, align 4
  %multiply.15 = fmul float %4, %6
  %subtract.16 = fsub float %3, %multiply.15
  %7 = getelementptr inbounds float, ptr addrspace(1) %arg37, i64 %1
  %8 = load float, ptr addrspace(1) %7, align 4, !invariant.load !195
  %9 = getelementptr inbounds float, ptr addrspace(1) %arg49, i64 %1
  %10 = load float, ptr addrspace(1) %9, align 4
  %multiply.17 = fmul float %4, %10
  %subtract.18 = fsub float %8, %multiply.17
  %11 = getelementptr inbounds float, ptr addrspace(1) %arg511, i64 %1
  %12 = load float, ptr addrspace(1) %11, align 4, !invariant.load !195
  %13 = getelementptr inbounds float, ptr addrspace(1) %arg613, i64 %1
  %14 = load float, ptr addrspace(1) %13, align 4
  %multiply.19 = fmul float %4, %14
  %subtract.20 = fsub float %12, %multiply.19
  %15 = getelementptr inbounds float, ptr addrspace(1) %arg715, i64 %1
  %16 = load float, ptr addrspace(1) %15, align 4, !invariant.load !195
  %17 = getelementptr inbounds float, ptr addrspace(1) %arg817, i64 %1
  %18 = load float, ptr addrspace(1) %17, align 4
  %multiply.21 = fmul float %4, %18
  %subtract.22 = fsub float %16, %multiply.21
  %19 = getelementptr inbounds float, ptr addrspace(1) %arg919, i64 %1
  %20 = load float, ptr addrspace(1) %19, align 4, !invariant.load !195
  %21 = getelementptr inbounds float, ptr addrspace(1) %arg1021, i64 %1
  %22 = load float, ptr addrspace(1) %21, align 4
  %multiply.23 = fmul float %4, %22
  %subtract.24 = fsub float %20, %multiply.23
  %23 = getelementptr inbounds float, ptr addrspace(1) %arg1123, i64 %1
  %24 = load float, ptr addrspace(1) %23, align 4, !invariant.load !195
  %25 = getelementptr inbounds float, ptr addrspace(1) %arg1225, i64 %1
  %26 = load float, ptr addrspace(1) %25, align 4
  %multiply.25 = fmul float %4, %26
  %subtract.26 = fsub float %24, %multiply.25
  store float %subtract.16, ptr addrspace(1) %25, align 4
  store float %subtract.18, ptr addrspace(1) %21, align 4
  store float %subtract.20, ptr addrspace(1) %17, align 4
  store float %subtract.22, ptr addrspace(1) %13, align 4
  store float %subtract.24, ptr addrspace(1) %9, align 4
  store float %subtract.26, ptr addrspace(1) %5, align 4
  ret void
}

; Function Attrs: nounwind
define void @fusion_268(ptr noalias nocapture readonly align 16 dereferenceable(512) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg3, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(4194304) %arg5, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg6, ptr noalias nocapture writeonly align 128 dereferenceable(4194304) %arg7, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg8, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg9) local_unnamed_addr #0 {
entry:
  %arg9158 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg8156 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg7154 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg6152 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg5150 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg4148 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg3146 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg2144 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg1142 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg0140 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !200
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x = and i32 %1, 31
  %thread_id.y104 = lshr i32 %1, 5
  %2 = lshr i32 %0, 2
  %3 = shl nuw nsw i32 %0, 5
  %tile_origin.2 = and i32 %3, 96
  %4 = shl nuw nsw i32 %2, 14
  %5 = or i32 %tile_origin.2, %thread_id.x
  %6 = zext i32 %5 to i64
  %Arg_3.4 = getelementptr inbounds [128 x [1 x float]], ptr addrspace(1) %arg3146, i64 0, i64 %6, i64 0
  %Arg_3.411 = load float, ptr addrspace(1) %Arg_3.4, align 4, !invariant.load !195
  %Arg_0.1 = getelementptr inbounds [128 x [1 x float]], ptr addrspace(1) %arg0140, i64 0, i64 %6, i64 0
  %Arg_0.114 = load float, ptr addrspace(1) %Arg_0.1, align 4, !invariant.load !195
  %7 = shl nuw nsw i32 %thread_id.y104, 7
  %8 = add i32 %4, %7
  %9 = add i32 %8, %tile_origin.2
  %10 = add i32 %9, %thread_id.x
  %11 = zext i32 %10 to i64
  %12 = shl nuw nsw i64 %11, 2
  %scevgep = getelementptr i8, ptr addrspace(1) %arg5150, i64 %12
  %scevgep161 = getelementptr i8, ptr addrspace(1) %arg7154, i64 %12
  %13 = lshr i32 %10, 7
  br label %y_in_tile.loop_body

common.ret:                                       ; preds = %reduction_write_output-after79, %reduction_write_output-true100
  ret void

y_in_tile.loop_body:                              ; preds = %entry, %y_in_tile.loop_body
  %lsr.iv164 = phi i32 [ %13, %entry ], [ %lsr.iv.next, %y_in_tile.loop_body ]
  %lsr.iv162 = phi ptr addrspace(1) [ %scevgep161, %entry ], [ %scevgep163, %y_in_tile.loop_body ]
  %lsr.iv = phi ptr addrspace(1) [ %scevgep, %entry ], [ %scevgep160, %y_in_tile.loop_body ]
  %y_in_tile.invar_address.0137 = phi i32 [ %thread_id.y104, %entry ], [ %invar.inc, %y_in_tile.loop_body ]
  %partial_reduction_result4.0136 = phi float [ 0.000000e+00, %entry ], [ %add.42.i, %y_in_tile.loop_body ]
  %partial_reduction_result.0135 = phi float [ -0.000000e+00, %entry ], [ %add.28.i, %y_in_tile.loop_body ]
  %partial_reduction_result2.0134 = phi float [ 0.000000e+00, %entry ], [ %add.35.i, %y_in_tile.loop_body ]
  %invar.inc = add nuw nsw i32 %y_in_tile.invar_address.0137, 32
  %14 = and i32 %lsr.iv164, 33554304
  %15 = or i32 %14, %y_in_tile.invar_address.0137
  %Arg_5.68 = load float, ptr addrspace(1) %lsr.iv, align 4, !invariant.load !195
  %compare.9 = fcmp ogt float %Arg_5.68, 0.000000e+00
  %16 = zext i32 %15 to i64
  %Arg_4.5 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg4148, i64 0, i64 %16, i64 0
  %Arg_4.510 = load float, ptr addrspace(1) %Arg_4.5, align 4, !invariant.load !195
  %multiply.14 = fmul float %Arg_4.510, %Arg_3.411
  %Arg_1.2 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg1142, i64 0, i64 %16, i64 0
  %Arg_1.212 = load float, ptr addrspace(1) %Arg_1.2, align 4, !invariant.load !195
  %Arg_2.3 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg2144, i64 0, i64 %16, i64 0
  %Arg_2.313 = load float, ptr addrspace(1) %Arg_2.3, align 4, !invariant.load !195
  %add.15 = fadd float %Arg_1.212, %Arg_2.313
  %multiply.20 = fmul float %add.15, %Arg_0.114
  %add.21 = fadd float %multiply.14, %multiply.20
  %17 = select i1 %compare.9, float %add.21, float 0.000000e+00
  %add.28.i = fadd float %partial_reduction_result.0135, %17
  %multiply.30 = fmul float %Arg_5.68, %add.15
  %add.35.i = fadd float %partial_reduction_result2.0134, %multiply.30
  %multiply.37 = fmul float %Arg_5.68, %Arg_4.510
  %add.42.i = fadd float %partial_reduction_result4.0136, %multiply.37
  store float %17, ptr addrspace(1) %lsr.iv162, align 4
  %scevgep160 = getelementptr i8, ptr addrspace(1) %lsr.iv, i64 16384
  %scevgep163 = getelementptr i8, ptr addrspace(1) %lsr.iv162, i64 16384
  %lsr.iv.next = add nuw nsw i32 %lsr.iv164, 32
  %18 = icmp ugt i32 %y_in_tile.invar_address.0137, 95
  br i1 %18, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_body
  %19 = zext i32 %thread_id.x to i64
  %20 = zext i32 %thread_id.y104 to i64
  %shmem_output_address = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache47, i64 0, i64 0, i64 0, i64 %19, i64 %20
  store float %add.28.i, ptr addrspace(3) %shmem_output_address, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache47, i64 0, i64 0, i64 0, i64 %20, i64 %19
  %partial_reduction_result46 = load float, ptr addrspace(3) %shmem_transposed_addr, align 4
  %21 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result46, i32 16, i32 31)
  %add.28.i119 = fadd float %partial_reduction_result46, %21
  %22 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.28.i119, i32 8, i32 31)
  %add.28.i120 = fadd float %add.28.i119, %22
  %23 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.28.i120, i32 4, i32 31)
  %add.28.i121 = fadd float %add.28.i120, %23
  %24 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.28.i121, i32 2, i32 31)
  %add.28.i122 = fadd float %add.28.i121, %24
  %25 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.28.i122, i32 1, i32 31)
  %add.28.i123 = fadd float %add.28.i122, %25
  store float %add.28.i123, ptr addrspace(3) %shmem_transposed_addr, align 4
  %26 = icmp eq i32 %thread_id.x, 0
  %27 = zext i32 %2 to i64
  %28 = or i32 %tile_origin.2, %thread_id.y104
  %29 = zext i32 %28 to i64
  %output_element_address = getelementptr inbounds [64 x [128 x float]], ptr addrspace(1) %arg6152, i64 0, i64 %27, i64 %29
  br i1 %26, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %30 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address60 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache48, i64 0, i64 0, i64 0, i64 %19, i64 %20
  store float %add.35.i, ptr addrspace(3) %shmem_output_address60, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr62 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache48, i64 0, i64 0, i64 0, i64 %20, i64 %19
  %partial_reduction_result64 = load float, ptr addrspace(3) %shmem_transposed_addr62, align 4
  %31 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result64, i32 16, i32 31)
  %add.35.i124 = fadd float %partial_reduction_result64, %31
  %32 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.35.i124, i32 8, i32 31)
  %add.35.i125 = fadd float %add.35.i124, %32
  %33 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.35.i125, i32 4, i32 31)
  %add.35.i126 = fadd float %add.35.i125, %33
  %34 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.35.i126, i32 2, i32 31)
  %add.35.i127 = fadd float %add.35.i126, %34
  %35 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.35.i127, i32 1, i32 31)
  %add.35.i128 = fadd float %add.35.i127, %35
  store float %add.35.i128, ptr addrspace(3) %shmem_transposed_addr62, align 4
  %output_element_address80 = getelementptr inbounds [64 x [128 x float]], ptr addrspace(1) %arg8156, i64 0, i64 %27, i64 %29
  br i1 %30, label %reduction_write_output-true78, label %reduction_write_output-after79

reduction_write_output-after79:                   ; preds = %reduction_write_output-true78, %reduction_write_output-after
  %36 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address82 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache49, i64 0, i64 0, i64 0, i64 %19, i64 %20
  store float %add.42.i, ptr addrspace(3) %shmem_output_address82, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr84 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache49, i64 0, i64 0, i64 0, i64 %20, i64 %19
  %partial_reduction_result86 = load float, ptr addrspace(3) %shmem_transposed_addr84, align 4
  %37 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result86, i32 16, i32 31)
  %add.42.i129 = fadd float %partial_reduction_result86, %37
  %38 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.42.i129, i32 8, i32 31)
  %add.42.i130 = fadd float %add.42.i129, %38
  %39 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.42.i130, i32 4, i32 31)
  %add.42.i131 = fadd float %add.42.i130, %39
  %40 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.42.i131, i32 2, i32 31)
  %add.42.i132 = fadd float %add.42.i131, %40
  %41 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.42.i132, i32 1, i32 31)
  %add.42.i133 = fadd float %add.42.i132, %41
  store float %add.42.i133, ptr addrspace(3) %shmem_transposed_addr84, align 4
  %output_element_address102 = getelementptr inbounds [64 x [128 x float]], ptr addrspace(1) %arg9158, i64 0, i64 %27, i64 %29
  br i1 %36, label %reduction_write_output-true100, label %common.ret

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  store float %add.28.i123, ptr addrspace(1) %output_element_address, align 4
  br label %reduction_write_output-after

reduction_write_output-true78:                    ; preds = %reduction_write_output-after
  store float %add.35.i128, ptr addrspace(1) %output_element_address80, align 4
  br label %reduction_write_output-after79

reduction_write_output-true100:                   ; preds = %reduction_write_output-after79
  store float %add.42.i133, ptr addrspace(1) %output_element_address102, align 4
  br label %common.ret
}

; Function Attrs: nounwind
define void @fusion_270(ptr noalias nocapture readonly align 16 dereferenceable(512) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg3, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg5, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg6, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg7, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg8, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg9, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg10, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg11, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg12, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg13, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg14, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg15, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg16, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg17, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg18, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg19, ptr noalias nocapture readonly align 16 dereferenceable(4194304) %arg20, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg21, ptr noalias nocapture writeonly align 128 dereferenceable(4194304) %arg22, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg23, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg24, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg25, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg26) local_unnamed_addr #0 {
entry:
  %arg26402 = addrspacecast ptr %arg26 to ptr addrspace(1)
  %arg25400 = addrspacecast ptr %arg25 to ptr addrspace(1)
  %arg24398 = addrspacecast ptr %arg24 to ptr addrspace(1)
  %arg23396 = addrspacecast ptr %arg23 to ptr addrspace(1)
  %arg22394 = addrspacecast ptr %arg22 to ptr addrspace(1)
  %arg21392 = addrspacecast ptr %arg21 to ptr addrspace(1)
  %arg20390 = addrspacecast ptr %arg20 to ptr addrspace(1)
  %arg19388 = addrspacecast ptr %arg19 to ptr addrspace(1)
  %arg18386 = addrspacecast ptr %arg18 to ptr addrspace(1)
  %arg17384 = addrspacecast ptr %arg17 to ptr addrspace(1)
  %arg16382 = addrspacecast ptr %arg16 to ptr addrspace(1)
  %arg15380 = addrspacecast ptr %arg15 to ptr addrspace(1)
  %arg14378 = addrspacecast ptr %arg14 to ptr addrspace(1)
  %arg13376 = addrspacecast ptr %arg13 to ptr addrspace(1)
  %arg12374 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg11372 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg10370 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg9368 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg8366 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg7364 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg6362 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg5360 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg4358 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg3356 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg2354 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg1352 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg0350 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !200
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x = and i32 %1, 31
  %thread_id.y290 = lshr i32 %1, 5
  %2 = lshr i32 %0, 2
  %3 = shl nuw nsw i32 %0, 5
  %tile_origin.2 = and i32 %3, 96
  %4 = shl nuw nsw i32 %2, 14
  %5 = or i32 %tile_origin.2, %thread_id.x
  %6 = zext i32 %5 to i64
  %Arg_17.18 = getelementptr inbounds [128 x [1 x float]], ptr addrspace(1) %arg17384, i64 0, i64 %6, i64 0
  %Arg_17.1820 = load float, ptr addrspace(1) %Arg_17.18, align 4, !invariant.load !195
  %Arg_15.16 = getelementptr inbounds [128 x [1 x float]], ptr addrspace(1) %arg15380, i64 0, i64 %6, i64 0
  %Arg_15.1622 = load float, ptr addrspace(1) %Arg_15.16, align 4, !invariant.load !195
  %Arg_12.13 = getelementptr inbounds [128 x [1 x float]], ptr addrspace(1) %arg12374, i64 0, i64 %6, i64 0
  %Arg_12.1327 = load float, ptr addrspace(1) %Arg_12.13, align 4, !invariant.load !195
  %Arg_9.10 = getelementptr inbounds [128 x [1 x float]], ptr addrspace(1) %arg9368, i64 0, i64 %6, i64 0
  %Arg_9.1032 = load float, ptr addrspace(1) %Arg_9.10, align 4, !invariant.load !195
  %Arg_6.7 = getelementptr inbounds [128 x [1 x float]], ptr addrspace(1) %arg6362, i64 0, i64 %6, i64 0
  %Arg_6.737 = load float, ptr addrspace(1) %Arg_6.7, align 4, !invariant.load !195
  %Arg_3.4 = getelementptr inbounds [128 x [1 x float]], ptr addrspace(1) %arg3356, i64 0, i64 %6, i64 0
  %Arg_3.442 = load float, ptr addrspace(1) %Arg_3.4, align 4, !invariant.load !195
  %Arg_0.1 = getelementptr inbounds [128 x [1 x float]], ptr addrspace(1) %arg0350, i64 0, i64 %6, i64 0
  %Arg_0.147 = load float, ptr addrspace(1) %Arg_0.1, align 4, !invariant.load !195
  %7 = shl nuw nsw i32 %thread_id.y290, 7
  %8 = add i32 %4, %7
  %9 = add i32 %8, %tile_origin.2
  %10 = add i32 %9, %thread_id.x
  %11 = zext i32 %10 to i64
  %12 = shl nuw nsw i64 %11, 2
  %scevgep = getelementptr i8, ptr addrspace(1) %arg20390, i64 %12
  %scevgep405 = getelementptr i8, ptr addrspace(1) %arg22394, i64 %12
  %13 = lshr i32 %10, 7
  br label %y_in_tile.loop_body

common.ret:                                       ; preds = %reduction_write_output-after265, %reduction_write_output-true286
  ret void

y_in_tile.loop_body:                              ; preds = %entry, %y_in_tile.loop_body
  %lsr.iv408 = phi i32 [ %13, %entry ], [ %lsr.iv.next, %y_in_tile.loop_body ]
  %lsr.iv406 = phi ptr addrspace(1) [ %scevgep405, %entry ], [ %scevgep407, %y_in_tile.loop_body ]
  %lsr.iv = phi ptr addrspace(1) [ %scevgep, %entry ], [ %scevgep404, %y_in_tile.loop_body ]
  %y_in_tile.invar_address.0345 = phi i32 [ %thread_id.y290, %entry ], [ %invar.inc, %y_in_tile.loop_body ]
  %partial_reduction_result10.0344 = phi float [ 0.000000e+00, %entry ], [ %add.120.i, %y_in_tile.loop_body ]
  %partial_reduction_result.0343 = phi float [ -0.000000e+00, %entry ], [ %add.92.i, %y_in_tile.loop_body ]
  %partial_reduction_result7.0342 = phi float [ 0.000000e+00, %entry ], [ %add.113.i, %y_in_tile.loop_body ]
  %partial_reduction_result2.0341 = phi float [ 0.000000e+00, %entry ], [ %add.99.i, %y_in_tile.loop_body ]
  %partial_reduction_result4.0340 = phi float [ 0.000000e+00, %entry ], [ %add.106.i, %y_in_tile.loop_body ]
  %invar.inc = add nuw nsw i32 %y_in_tile.invar_address.0345, 32
  %14 = and i32 %lsr.iv408, 33554304
  %15 = or i32 %14, %y_in_tile.invar_address.0345
  %Arg_20.2114 = load float, ptr addrspace(1) %lsr.iv, align 4, !invariant.load !195
  %compare.24 = fcmp ogt float %Arg_20.2114, 0.000000e+00
  %16 = zext i32 %15 to i64
  %Arg_19.20 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg19388, i64 0, i64 %16, i64 0
  %Arg_19.2016 = load float, ptr addrspace(1) %Arg_19.20, align 4, !invariant.load !195
  %Arg_18.19 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg18386, i64 0, i64 %16, i64 0
  %Arg_18.1917 = load float, ptr addrspace(1) %Arg_18.19, align 4, !invariant.load !195
  %multiply.25 = fmul float %Arg_19.2016, %Arg_18.1917
  %subtract.28 = fsub float 1.000000e+00, %Arg_18.1917
  %multiply.29 = fmul float %multiply.25, %subtract.28
  %multiply.34 = fmul float %Arg_17.1820, %multiply.29
  %Arg_16.17 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg16382, i64 0, i64 %16, i64 0
  %Arg_16.1721 = load float, ptr addrspace(1) %Arg_16.17, align 4, !invariant.load !195
  %multiply.39 = fmul float %Arg_16.1721, %Arg_15.1622
  %add.40 = fadd float %multiply.34, %multiply.39
  %Arg_14.15 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg14378, i64 0, i64 %16, i64 0
  %Arg_14.1523 = load float, ptr addrspace(1) %Arg_14.15, align 4, !invariant.load !195
  %Arg_13.14 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg13376, i64 0, i64 %16, i64 0
  %Arg_13.1424 = load float, ptr addrspace(1) %Arg_13.14, align 4, !invariant.load !195
  %multiply.41 = fmul float %Arg_14.1523, %Arg_13.1424
  %subtract.42 = fsub float 1.000000e+00, %Arg_13.1424
  %multiply.43 = fmul float %multiply.41, %subtract.42
  %multiply.48 = fmul float %Arg_12.1327, %multiply.43
  %add.49 = fadd float %add.40, %multiply.48
  %Arg_11.12 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg11372, i64 0, i64 %16, i64 0
  %Arg_11.1228 = load float, ptr addrspace(1) %Arg_11.12, align 4, !invariant.load !195
  %Arg_10.11 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg10370, i64 0, i64 %16, i64 0
  %Arg_10.1129 = load float, ptr addrspace(1) %Arg_10.11, align 4, !invariant.load !195
  %multiply.50 = fmul float %Arg_11.1228, %Arg_10.1129
  %subtract.51 = fsub float 1.000000e+00, %Arg_10.1129
  %multiply.52 = fmul float %multiply.50, %subtract.51
  %multiply.57 = fmul float %Arg_9.1032, %multiply.52
  %add.58 = fadd float %add.49, %multiply.57
  %Arg_8.9 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg8366, i64 0, i64 %16, i64 0
  %Arg_8.933 = load float, ptr addrspace(1) %Arg_8.9, align 4, !invariant.load !195
  %Arg_7.8 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg7364, i64 0, i64 %16, i64 0
  %Arg_7.834 = load float, ptr addrspace(1) %Arg_7.8, align 4, !invariant.load !195
  %multiply.59 = fmul float %Arg_8.933, %Arg_7.834
  %subtract.60 = fsub float 1.000000e+00, %Arg_7.834
  %multiply.61 = fmul float %multiply.59, %subtract.60
  %multiply.66 = fmul float %Arg_6.737, %multiply.61
  %add.67 = fadd float %add.58, %multiply.66
  %Arg_5.6 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg5360, i64 0, i64 %16, i64 0
  %Arg_5.638 = load float, ptr addrspace(1) %Arg_5.6, align 4, !invariant.load !195
  %Arg_4.5 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg4358, i64 0, i64 %16, i64 0
  %Arg_4.539 = load float, ptr addrspace(1) %Arg_4.5, align 4, !invariant.load !195
  %multiply.68 = fmul float %Arg_5.638, %Arg_4.539
  %subtract.69 = fsub float 1.000000e+00, %Arg_4.539
  %multiply.70 = fmul float %multiply.68, %subtract.69
  %multiply.75 = fmul float %Arg_3.442, %multiply.70
  %add.76 = fadd float %add.67, %multiply.75
  %Arg_2.3 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg2354, i64 0, i64 %16, i64 0
  %Arg_2.343 = load float, ptr addrspace(1) %Arg_2.3, align 4, !invariant.load !195
  %Arg_1.2 = getelementptr inbounds [8192 x [1 x float]], ptr addrspace(1) %arg1352, i64 0, i64 %16, i64 0
  %Arg_1.244 = load float, ptr addrspace(1) %Arg_1.2, align 4, !invariant.load !195
  %multiply.77 = fmul float %Arg_2.343, %Arg_1.244
  %subtract.78 = fsub float 1.000000e+00, %Arg_1.244
  %multiply.79 = fmul float %multiply.77, %subtract.78
  %multiply.84 = fmul float %Arg_0.147, %multiply.79
  %add.85 = fadd float %add.76, %multiply.84
  %17 = select i1 %compare.24, float %add.85, float 0.000000e+00
  %add.92.i = fadd float %partial_reduction_result.0343, %17
  %multiply.94 = fmul float %Arg_20.2114, %multiply.29
  %add.99.i = fadd float %partial_reduction_result2.0341, %multiply.94
  %multiply.101 = fmul float %Arg_20.2114, %multiply.43
  %add.106.i = fadd float %partial_reduction_result4.0340, %multiply.101
  %multiply.108 = fmul float %Arg_20.2114, %multiply.52
  %add.113.i = fadd float %partial_reduction_result7.0342, %multiply.108
  %multiply.115 = fmul float %Arg_20.2114, %multiply.61
  %add.120.i = fadd float %partial_reduction_result10.0344, %multiply.115
  store float %17, ptr addrspace(1) %lsr.iv406, align 4
  %scevgep404 = getelementptr i8, ptr addrspace(1) %lsr.iv, i64 16384
  %scevgep407 = getelementptr i8, ptr addrspace(1) %lsr.iv406, i64 16384
  %lsr.iv.next = add nuw nsw i32 %lsr.iv408, 32
  %18 = icmp ugt i32 %y_in_tile.invar_address.0345, 95
  br i1 %18, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_body
  %19 = zext i32 %thread_id.x to i64
  %20 = zext i32 %thread_id.y290 to i64
  %shmem_output_address = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache50, i64 0, i64 0, i64 0, i64 %19, i64 %20
  store float %add.92.i, ptr addrspace(3) %shmem_output_address, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache50, i64 0, i64 0, i64 0, i64 %20, i64 %19
  %partial_reduction_result188 = load float, ptr addrspace(3) %shmem_transposed_addr, align 4
  %21 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result188, i32 16, i32 31)
  %add.92.i315 = fadd float %partial_reduction_result188, %21
  %22 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.92.i315, i32 8, i32 31)
  %add.92.i316 = fadd float %add.92.i315, %22
  %23 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.92.i316, i32 4, i32 31)
  %add.92.i317 = fadd float %add.92.i316, %23
  %24 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.92.i317, i32 2, i32 31)
  %add.92.i318 = fadd float %add.92.i317, %24
  %25 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.92.i318, i32 1, i32 31)
  %add.92.i319 = fadd float %add.92.i318, %25
  store float %add.92.i319, ptr addrspace(3) %shmem_transposed_addr, align 4
  %26 = icmp eq i32 %thread_id.x, 0
  %27 = zext i32 %2 to i64
  %28 = or i32 %tile_origin.2, %thread_id.y290
  %29 = zext i32 %28 to i64
  %output_element_address = getelementptr inbounds [64 x [128 x float]], ptr addrspace(1) %arg21392, i64 0, i64 %27, i64 %29
  br i1 %26, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %30 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address202 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache51, i64 0, i64 0, i64 0, i64 %19, i64 %20
  store float %add.99.i, ptr addrspace(3) %shmem_output_address202, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr204 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache51, i64 0, i64 0, i64 0, i64 %20, i64 %19
  %partial_reduction_result206 = load float, ptr addrspace(3) %shmem_transposed_addr204, align 4
  %31 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result206, i32 16, i32 31)
  %add.99.i320 = fadd float %partial_reduction_result206, %31
  %32 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.99.i320, i32 8, i32 31)
  %add.99.i321 = fadd float %add.99.i320, %32
  %33 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.99.i321, i32 4, i32 31)
  %add.99.i322 = fadd float %add.99.i321, %33
  %34 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.99.i322, i32 2, i32 31)
  %add.99.i323 = fadd float %add.99.i322, %34
  %35 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.99.i323, i32 1, i32 31)
  %add.99.i324 = fadd float %add.99.i323, %35
  store float %add.99.i324, ptr addrspace(3) %shmem_transposed_addr204, align 4
  %output_element_address222 = getelementptr inbounds [64 x [128 x float]], ptr addrspace(1) %arg23396, i64 0, i64 %27, i64 %29
  br i1 %30, label %reduction_write_output-true220, label %reduction_write_output-after221

reduction_write_output-after221:                  ; preds = %reduction_write_output-true220, %reduction_write_output-after
  %36 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address224 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache52, i64 0, i64 0, i64 0, i64 %19, i64 %20
  store float %add.106.i, ptr addrspace(3) %shmem_output_address224, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr226 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache52, i64 0, i64 0, i64 0, i64 %20, i64 %19
  %partial_reduction_result228 = load float, ptr addrspace(3) %shmem_transposed_addr226, align 4
  %37 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result228, i32 16, i32 31)
  %add.106.i325 = fadd float %partial_reduction_result228, %37
  %38 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.106.i325, i32 8, i32 31)
  %add.106.i326 = fadd float %add.106.i325, %38
  %39 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.106.i326, i32 4, i32 31)
  %add.106.i327 = fadd float %add.106.i326, %39
  %40 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.106.i327, i32 2, i32 31)
  %add.106.i328 = fadd float %add.106.i327, %40
  %41 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.106.i328, i32 1, i32 31)
  %add.106.i329 = fadd float %add.106.i328, %41
  store float %add.106.i329, ptr addrspace(3) %shmem_transposed_addr226, align 4
  %output_element_address244 = getelementptr inbounds [64 x [128 x float]], ptr addrspace(1) %arg24398, i64 0, i64 %27, i64 %29
  br i1 %36, label %reduction_write_output-true242, label %reduction_write_output-after243

reduction_write_output-after243:                  ; preds = %reduction_write_output-true242, %reduction_write_output-after221
  %42 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address246 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache53, i64 0, i64 0, i64 0, i64 %19, i64 %20
  store float %add.113.i, ptr addrspace(3) %shmem_output_address246, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr248 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache53, i64 0, i64 0, i64 0, i64 %20, i64 %19
  %partial_reduction_result250 = load float, ptr addrspace(3) %shmem_transposed_addr248, align 4
  %43 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result250, i32 16, i32 31)
  %add.113.i330 = fadd float %partial_reduction_result250, %43
  %44 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.113.i330, i32 8, i32 31)
  %add.113.i331 = fadd float %add.113.i330, %44
  %45 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.113.i331, i32 4, i32 31)
  %add.113.i332 = fadd float %add.113.i331, %45
  %46 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.113.i332, i32 2, i32 31)
  %add.113.i333 = fadd float %add.113.i332, %46
  %47 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.113.i333, i32 1, i32 31)
  %add.113.i334 = fadd float %add.113.i333, %47
  store float %add.113.i334, ptr addrspace(3) %shmem_transposed_addr248, align 4
  %output_element_address266 = getelementptr inbounds [64 x [128 x float]], ptr addrspace(1) %arg25400, i64 0, i64 %27, i64 %29
  br i1 %42, label %reduction_write_output-true264, label %reduction_write_output-after265

reduction_write_output-after265:                  ; preds = %reduction_write_output-true264, %reduction_write_output-after243
  %48 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address268 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache54, i64 0, i64 0, i64 0, i64 %19, i64 %20
  store float %add.120.i, ptr addrspace(3) %shmem_output_address268, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr270 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache54, i64 0, i64 0, i64 0, i64 %20, i64 %19
  %partial_reduction_result272 = load float, ptr addrspace(3) %shmem_transposed_addr270, align 4
  %49 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result272, i32 16, i32 31)
  %add.120.i335 = fadd float %partial_reduction_result272, %49
  %50 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.120.i335, i32 8, i32 31)
  %add.120.i336 = fadd float %add.120.i335, %50
  %51 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.120.i336, i32 4, i32 31)
  %add.120.i337 = fadd float %add.120.i336, %51
  %52 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.120.i337, i32 2, i32 31)
  %add.120.i338 = fadd float %add.120.i337, %52
  %53 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.120.i338, i32 1, i32 31)
  %add.120.i339 = fadd float %add.120.i338, %53
  store float %add.120.i339, ptr addrspace(3) %shmem_transposed_addr270, align 4
  %output_element_address288 = getelementptr inbounds [64 x [128 x float]], ptr addrspace(1) %arg26402, i64 0, i64 %27, i64 %29
  br i1 %48, label %reduction_write_output-true286, label %common.ret

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  store float %add.92.i319, ptr addrspace(1) %output_element_address, align 4
  br label %reduction_write_output-after

reduction_write_output-true220:                   ; preds = %reduction_write_output-after
  store float %add.99.i324, ptr addrspace(1) %output_element_address222, align 4
  br label %reduction_write_output-after221

reduction_write_output-true242:                   ; preds = %reduction_write_output-after221
  store float %add.106.i329, ptr addrspace(1) %output_element_address244, align 4
  br label %reduction_write_output-after243

reduction_write_output-true264:                   ; preds = %reduction_write_output-after243
  store float %add.113.i334, ptr addrspace(1) %output_element_address266, align 4
  br label %reduction_write_output-after265

reduction_write_output-true286:                   ; preds = %reduction_write_output-after265
  store float %add.120.i339, ptr addrspace(1) %output_element_address288, align 4
  br label %common.ret
}

; Function Attrs: nounwind
define void @fusion_596(ptr noalias nocapture readonly align 128 dereferenceable(32768) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg1, ptr noalias nocapture readonly align 128 dereferenceable(32768) %arg2, ptr noalias nocapture readonly align 128 dereferenceable(32768) %arg3, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg4, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg5, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg6) local_unnamed_addr #0 {
entry:
  %arg6316 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg5314 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg4312 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg3310 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg2308 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg1306 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg0304 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !216
  switch i32 %0, label %common.ret [
    i32 0, label %reduce-group-0-true
    i32 1, label %reduce-group-1-true
    i32 2, label %entry.reduce-group-2-true_crit_edge
  ]

entry.reduce-group-2-true_crit_edge:              ; preds = %entry
  %Arg_1.2127.pre = load float, ptr addrspace(1) %arg1306, align 128, !invariant.load !195
  %.pre = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !193
  %.pre298 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %.pre300 = and i32 %.pre298, 31
  %.pre301 = lshr i32 %.pre298, 5
  %.pre302 = shl nuw nsw i32 %.pre, 6
  %1 = shl nuw nsw i32 %.pre300, 1
  %2 = or i32 %1, %.pre302
  %3 = zext i32 %2 to i64
  %4 = add nuw nsw i32 %.pre301, -32
  %5 = zext i32 %.pre298 to i64
  %6 = lshr i64 %5, 5
  %7 = shl nuw nsw i64 %6, 9
  %8 = shl nuw nsw i64 %3, 2
  %9 = add i64 %7, %8
  %10 = add i64 %9, 4
  %scevgep338 = getelementptr i8, ptr addrspace(1) %arg3310, i64 %10
  br label %y_in_tile.loop_body139

common.ret.sink.split:                            ; preds = %reduction_write_output-after179, %reduction_write_output-after100, %reduction_write_output-after
  %.sink = phi i32 [ %36, %reduction_write_output-after ], [ %67, %reduction_write_output-after100 ], [ %86, %reduction_write_output-after179 ]
  %arg5.sink = phi ptr addrspace(1) [ %arg4312, %reduction_write_output-after ], [ %arg5314, %reduction_write_output-after100 ], [ %arg6316, %reduction_write_output-after179 ]
  %add.13.i271.sink = phi float [ %add.8.i260, %reduction_write_output-after ], [ %add.13.i271, %reduction_write_output-after100 ], [ %add.18.i282, %reduction_write_output-after179 ]
  %11 = or i32 %.sink, 1
  %12 = zext i32 %11 to i64
  %output_element_address123 = getelementptr inbounds [128 x float], ptr addrspace(1) %arg5.sink, i64 0, i64 %12
  store float %add.13.i271.sink, ptr addrspace(1) %output_element_address123, align 4
  br label %common.ret

common.ret:                                       ; preds = %common.ret.sink.split, %reduction_write_output-after100, %reduction_write_output-after, %reduction_write_output-after179, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %13 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !193
  %14 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x = and i32 %14, 31
  %thread_id.y214 = lshr i32 %14, 5
  %tile_origin.2 = shl nuw nsw i32 %13, 6
  %Arg_1.2 = load float, ptr addrspace(1) %arg1306, align 128, !invariant.load !195
  %15 = shl nuw nsw i32 %thread_id.x, 1
  %16 = or i32 %15, %tile_origin.2
  %17 = zext i32 %16 to i64
  %18 = add nuw nsw i32 %thread_id.y214, -32
  %19 = zext i32 %14 to i64
  %20 = lshr i64 %19, 5
  %21 = shl nuw nsw i64 %20, 9
  %22 = shl nuw nsw i64 %17, 2
  %23 = add i64 %21, %22
  %24 = add i64 %23, 4
  %scevgep = getelementptr i8, ptr addrspace(1) %arg0304, i64 %24
  br label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %reduce-group-0-true, %y_in_tile.loop_body
  %lsr.iv327 = phi ptr addrspace(1) [ %scevgep, %reduce-group-0-true ], [ %scevgep328, %y_in_tile.loop_body ]
  %lsr.iv = phi i32 [ %18, %reduce-group-0-true ], [ %lsr.iv.next, %y_in_tile.loop_body ]
  %partial_reduction_result211.sroa.0.0293 = phi float [ %Arg_1.2, %reduce-group-0-true ], [ %add.8.i, %y_in_tile.loop_body ]
  %partial_reduction_result211.sroa.4.0292 = phi float [ %Arg_1.2, %reduce-group-0-true ], [ %add.8.i250, %y_in_tile.loop_body ]
  %scevgep329 = getelementptr i8, ptr addrspace(1) %lsr.iv327, i64 -4
  %25 = load <2 x float>, ptr addrspace(1) %scevgep329, align 8, !invariant.load !195
  %Arg_0.13342 = extractelement <2 x float> %25, i32 0
  %Arg_0.18343 = extractelement <2 x float> %25, i32 1
  %add.8.i = fadd float %partial_reduction_result211.sroa.0.0293, %Arg_0.13342
  %add.8.i250 = fadd float %partial_reduction_result211.sroa.4.0292, %Arg_0.18343
  %lsr.iv.next = add nsw i32 %lsr.iv, 32
  %scevgep328 = getelementptr i8, ptr addrspace(1) %lsr.iv327, i64 16384
  %26 = icmp ugt i32 %lsr.iv.next, 31
  br i1 %26, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_body
  %27 = zext i32 %thread_id.x to i64
  %28 = zext i32 %thread_id.y214 to i64
  %shmem_output_address = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache55, i64 0, i64 0, i64 0, i64 %27, i64 %28
  store float %add.8.i, ptr addrspace(3) %shmem_output_address, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache55, i64 0, i64 0, i64 0, i64 %28, i64 %27
  %partial_reduction_result10 = load float, ptr addrspace(3) %shmem_transposed_addr, align 4
  %29 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result10, i32 16, i32 31)
  %add.8.i251 = fadd float %partial_reduction_result10, %29
  %30 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.8.i251, i32 8, i32 31)
  %add.8.i252 = fadd float %add.8.i251, %30
  %31 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.8.i252, i32 4, i32 31)
  %add.8.i253 = fadd float %add.8.i252, %31
  %32 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.8.i253, i32 2, i32 31)
  %add.8.i254 = fadd float %add.8.i253, %32
  %33 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.8.i254, i32 1, i32 31)
  %add.8.i255 = fadd float %add.8.i254, %33
  store float %add.8.i255, ptr addrspace(3) %shmem_transposed_addr, align 4
  %34 = shl nuw nsw i32 %thread_id.y214, 1
  %35 = icmp eq i32 %thread_id.x, 0
  %36 = or i32 %34, %tile_origin.2
  %37 = zext i32 %36 to i64
  %output_element_address = getelementptr inbounds [128 x float], ptr addrspace(1) %arg4312, i64 0, i64 %37
  br i1 %35, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %38 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address24319 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address, i64 1056
  store float %add.8.i250, ptr addrspace(3) %shmem_output_address24319, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr26320 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr, i64 1056
  %partial_reduction_result28 = load float, ptr addrspace(3) %shmem_transposed_addr26320, align 4
  %39 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result28, i32 16, i32 31)
  %add.8.i256 = fadd float %partial_reduction_result28, %39
  %40 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.8.i256, i32 8, i32 31)
  %add.8.i257 = fadd float %add.8.i256, %40
  %41 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.8.i257, i32 4, i32 31)
  %add.8.i258 = fadd float %add.8.i257, %41
  %42 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.8.i258, i32 2, i32 31)
  %add.8.i259 = fadd float %add.8.i258, %42
  %43 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.8.i259, i32 1, i32 31)
  %add.8.i260 = fadd float %add.8.i259, %43
  store float %add.8.i260, ptr addrspace(3) %shmem_transposed_addr26320, align 4
  br i1 %38, label %common.ret.sink.split, label %common.ret

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  store float %add.8.i255, ptr addrspace(1) %output_element_address, align 8
  br label %reduction_write_output-after

reduce-group-1-true:                              ; preds = %entry
  %44 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !193
  %45 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x50 = and i32 %45, 31
  %thread_id.y51213 = lshr i32 %45, 5
  %tile_origin.257 = shl nuw nsw i32 %44, 6
  %Arg_1.248 = load float, ptr addrspace(1) %arg1306, align 128, !invariant.load !195
  %46 = shl nuw nsw i32 %thread_id.x50, 1
  %47 = or i32 %46, %tile_origin.257
  %48 = zext i32 %47 to i64
  %49 = add nuw nsw i32 %thread_id.y51213, -32
  %50 = zext i32 %45 to i64
  %51 = lshr i64 %50, 5
  %52 = shl nuw nsw i64 %51, 9
  %53 = shl nuw nsw i64 %48, 2
  %54 = add i64 %52, %53
  %55 = add i64 %54, 4
  %scevgep332 = getelementptr i8, ptr addrspace(1) %arg2308, i64 %55
  br label %y_in_tile.loop_body60

y_in_tile.loop_body60:                            ; preds = %reduce-group-1-true, %y_in_tile.loop_body60
  %lsr.iv333 = phi ptr addrspace(1) [ %scevgep332, %reduce-group-1-true ], [ %scevgep334, %y_in_tile.loop_body60 ]
  %lsr.iv330 = phi i32 [ %49, %reduce-group-1-true ], [ %lsr.iv.next331, %y_in_tile.loop_body60 ]
  %partial_reduction_result47210.sroa.4.0284 = phi float [ %Arg_1.248, %reduce-group-1-true ], [ %add.13.i261, %y_in_tile.loop_body60 ]
  %partial_reduction_result47210.sroa.0.0283 = phi float [ %Arg_1.248, %reduce-group-1-true ], [ %add.13.i, %y_in_tile.loop_body60 ]
  %scevgep335 = getelementptr i8, ptr addrspace(1) %lsr.iv333, i64 -4
  %56 = load <2 x float>, ptr addrspace(1) %scevgep335, align 8, !invariant.load !195
  %Arg_2.373344 = extractelement <2 x float> %56, i32 0
  %Arg_2.379345 = extractelement <2 x float> %56, i32 1
  %add.13.i = fadd float %partial_reduction_result47210.sroa.0.0283, %Arg_2.373344
  %add.13.i261 = fadd float %partial_reduction_result47210.sroa.4.0284, %Arg_2.379345
  %lsr.iv.next331 = add nsw i32 %lsr.iv330, 32
  %scevgep334 = getelementptr i8, ptr addrspace(1) %lsr.iv333, i64 16384
  %57 = icmp ugt i32 %lsr.iv.next331, 31
  br i1 %57, label %y_in_tile.loop_exit58, label %y_in_tile.loop_body60

y_in_tile.loop_exit58:                            ; preds = %y_in_tile.loop_body60
  %58 = zext i32 %thread_id.x50 to i64
  %59 = zext i32 %thread_id.y51213 to i64
  %shmem_output_address81 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache56, i64 0, i64 0, i64 0, i64 %58, i64 %59
  store float %add.13.i, ptr addrspace(3) %shmem_output_address81, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr83 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache56, i64 0, i64 0, i64 0, i64 %59, i64 %58
  %partial_reduction_result85 = load float, ptr addrspace(3) %shmem_transposed_addr83, align 4
  %60 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result85, i32 16, i32 31)
  %add.13.i262 = fadd float %partial_reduction_result85, %60
  %61 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i262, i32 8, i32 31)
  %add.13.i263 = fadd float %add.13.i262, %61
  %62 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i263, i32 4, i32 31)
  %add.13.i264 = fadd float %add.13.i263, %62
  %63 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i264, i32 2, i32 31)
  %add.13.i265 = fadd float %add.13.i264, %63
  %64 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i265, i32 1, i32 31)
  %add.13.i266 = fadd float %add.13.i265, %64
  store float %add.13.i266, ptr addrspace(3) %shmem_transposed_addr83, align 4
  %65 = shl nuw nsw i32 %thread_id.y51213, 1
  %66 = icmp eq i32 %thread_id.x50, 0
  %67 = or i32 %65, %tile_origin.257
  %68 = zext i32 %67 to i64
  %output_element_address101 = getelementptr inbounds [128 x float], ptr addrspace(1) %arg5314, i64 0, i64 %68
  br i1 %66, label %reduction_write_output-true99, label %reduction_write_output-after100

reduction_write_output-after100:                  ; preds = %reduction_write_output-true99, %y_in_tile.loop_exit58
  %69 = icmp eq i32 %thread_id.x50, 0
  %shmem_output_address103322 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address81, i64 1056
  store float %add.13.i261, ptr addrspace(3) %shmem_output_address103322, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr105323 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr83, i64 1056
  %partial_reduction_result107 = load float, ptr addrspace(3) %shmem_transposed_addr105323, align 4
  %70 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result107, i32 16, i32 31)
  %add.13.i267 = fadd float %partial_reduction_result107, %70
  %71 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i267, i32 8, i32 31)
  %add.13.i268 = fadd float %add.13.i267, %71
  %72 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i268, i32 4, i32 31)
  %add.13.i269 = fadd float %add.13.i268, %72
  %73 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i269, i32 2, i32 31)
  %add.13.i270 = fadd float %add.13.i269, %73
  %74 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i270, i32 1, i32 31)
  %add.13.i271 = fadd float %add.13.i270, %74
  store float %add.13.i271, ptr addrspace(3) %shmem_transposed_addr105323, align 4
  br i1 %69, label %common.ret.sink.split, label %common.ret

reduction_write_output-true99:                    ; preds = %y_in_tile.loop_exit58
  store float %add.13.i266, ptr addrspace(1) %output_element_address101, align 8
  br label %reduction_write_output-after100

y_in_tile.loop_body139:                           ; preds = %entry.reduce-group-2-true_crit_edge, %y_in_tile.loop_body139
  %lsr.iv339 = phi ptr addrspace(1) [ %scevgep338, %entry.reduce-group-2-true_crit_edge ], [ %scevgep340, %y_in_tile.loop_body139 ]
  %lsr.iv336 = phi i32 [ %4, %entry.reduce-group-2-true_crit_edge ], [ %lsr.iv.next337, %y_in_tile.loop_body139 ]
  %partial_reduction_result126209.sroa.4.0288 = phi float [ %Arg_1.2127.pre, %entry.reduce-group-2-true_crit_edge ], [ %add.18.i272, %y_in_tile.loop_body139 ]
  %partial_reduction_result126209.sroa.0.0287 = phi float [ %Arg_1.2127.pre, %entry.reduce-group-2-true_crit_edge ], [ %add.18.i, %y_in_tile.loop_body139 ]
  %scevgep341 = getelementptr i8, ptr addrspace(1) %lsr.iv339, i64 -4
  %75 = load <2 x float>, ptr addrspace(1) %scevgep341, align 8, !invariant.load !195
  %Arg_3.4152346 = extractelement <2 x float> %75, i32 0
  %Arg_3.4158347 = extractelement <2 x float> %75, i32 1
  %add.18.i = fadd float %partial_reduction_result126209.sroa.0.0287, %Arg_3.4152346
  %add.18.i272 = fadd float %partial_reduction_result126209.sroa.4.0288, %Arg_3.4158347
  %lsr.iv.next337 = add nsw i32 %lsr.iv336, 32
  %scevgep340 = getelementptr i8, ptr addrspace(1) %lsr.iv339, i64 16384
  %76 = icmp ugt i32 %lsr.iv.next337, 31
  br i1 %76, label %y_in_tile.loop_exit137, label %y_in_tile.loop_body139

y_in_tile.loop_exit137:                           ; preds = %y_in_tile.loop_body139
  %77 = zext i32 %.pre300 to i64
  %78 = zext i32 %.pre301 to i64
  %shmem_output_address160 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache57, i64 0, i64 0, i64 0, i64 %77, i64 %78
  store float %add.18.i, ptr addrspace(3) %shmem_output_address160, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr162 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache57, i64 0, i64 0, i64 0, i64 %78, i64 %77
  %partial_reduction_result164 = load float, ptr addrspace(3) %shmem_transposed_addr162, align 4
  %79 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result164, i32 16, i32 31)
  %add.18.i273 = fadd float %partial_reduction_result164, %79
  %80 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.18.i273, i32 8, i32 31)
  %add.18.i274 = fadd float %add.18.i273, %80
  %81 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.18.i274, i32 4, i32 31)
  %add.18.i275 = fadd float %add.18.i274, %81
  %82 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.18.i275, i32 2, i32 31)
  %add.18.i276 = fadd float %add.18.i275, %82
  %83 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.18.i276, i32 1, i32 31)
  %add.18.i277 = fadd float %add.18.i276, %83
  store float %add.18.i277, ptr addrspace(3) %shmem_transposed_addr162, align 4
  %84 = shl nuw nsw i32 %.pre301, 1
  %85 = icmp eq i32 %.pre300, 0
  %86 = or i32 %84, %.pre302
  %87 = zext i32 %86 to i64
  %output_element_address180 = getelementptr inbounds [128 x float], ptr addrspace(1) %arg6316, i64 0, i64 %87
  br i1 %85, label %reduction_write_output-true178, label %reduction_write_output-after179

reduction_write_output-after179:                  ; preds = %reduction_write_output-true178, %y_in_tile.loop_exit137
  %88 = icmp eq i32 %.pre300, 0
  %shmem_output_address182325 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address160, i64 1056
  store float %add.18.i272, ptr addrspace(3) %shmem_output_address182325, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr184326 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr162, i64 1056
  %partial_reduction_result186 = load float, ptr addrspace(3) %shmem_transposed_addr184326, align 4
  %89 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result186, i32 16, i32 31)
  %add.18.i278 = fadd float %partial_reduction_result186, %89
  %90 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.18.i278, i32 8, i32 31)
  %add.18.i279 = fadd float %add.18.i278, %90
  %91 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.18.i279, i32 4, i32 31)
  %add.18.i280 = fadd float %add.18.i279, %91
  %92 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.18.i280, i32 2, i32 31)
  %add.18.i281 = fadd float %add.18.i280, %92
  %93 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.18.i281, i32 1, i32 31)
  %add.18.i282 = fadd float %add.18.i281, %93
  store float %add.18.i282, ptr addrspace(3) %shmem_transposed_addr184326, align 4
  br i1 %88, label %common.ret.sink.split, label %common.ret

reduction_write_output-true178:                   ; preds = %y_in_tile.loop_exit137
  store float %add.18.i277, ptr addrspace(1) %output_element_address180, align 8
  br label %reduction_write_output-after179
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_415(ptr noalias nocapture readonly align 16 dereferenceable(512) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg3, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg5, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg6, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg7, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg8, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg9, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg10, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg11, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg12, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg13, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg14, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg15, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg16, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg17, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg18, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg19, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg20, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg21, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg22, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg23, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg24) local_unnamed_addr #6 {
entry:
  %arg2456 = addrspacecast ptr %arg24 to ptr addrspace(1)
  %arg2354 = addrspacecast ptr %arg23 to ptr addrspace(1)
  %arg2252 = addrspacecast ptr %arg22 to ptr addrspace(1)
  %arg2150 = addrspacecast ptr %arg21 to ptr addrspace(1)
  %arg2048 = addrspacecast ptr %arg20 to ptr addrspace(1)
  %arg1946 = addrspacecast ptr %arg19 to ptr addrspace(1)
  %arg1844 = addrspacecast ptr %arg18 to ptr addrspace(1)
  %arg1742 = addrspacecast ptr %arg17 to ptr addrspace(1)
  %arg1640 = addrspacecast ptr %arg16 to ptr addrspace(1)
  %arg1538 = addrspacecast ptr %arg15 to ptr addrspace(1)
  %arg1436 = addrspacecast ptr %arg14 to ptr addrspace(1)
  %arg1334 = addrspacecast ptr %arg13 to ptr addrspace(1)
  %arg1232 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg1130 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg1028 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg926 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg824 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg722 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg620 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg518 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg416 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg314 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg212 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg110 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg01 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !213
  %1 = zext i32 %0 to i64
  %2 = getelementptr inbounds float, ptr addrspace(1) %arg01, i64 %1
  %3 = load float, ptr addrspace(1) %2, align 4, !invariant.load !195
  %4 = load float, ptr addrspace(1) %arg212, align 16, !invariant.load !195
  %5 = getelementptr inbounds float, ptr addrspace(1) %arg110, i64 %1
  %6 = load float, ptr addrspace(1) %5, align 4, !invariant.load !195
  %multiply.19 = fmul float %4, %6
  %subtract.21 = fsub float %3, %multiply.19
  %7 = getelementptr inbounds float, ptr addrspace(1) %arg314, i64 %1
  %8 = load float, ptr addrspace(1) %7, align 4, !invariant.load !195
  %9 = getelementptr inbounds float, ptr addrspace(1) %arg416, i64 %1
  %10 = load float, ptr addrspace(1) %9, align 4, !invariant.load !195
  %multiply.22 = fmul float %4, %10
  %subtract.24 = fsub float %8, %multiply.22
  %11 = getelementptr inbounds float, ptr addrspace(1) %arg518, i64 %1
  %12 = load float, ptr addrspace(1) %11, align 4, !invariant.load !195
  %13 = getelementptr inbounds float, ptr addrspace(1) %arg620, i64 %1
  %14 = load float, ptr addrspace(1) %13, align 4, !invariant.load !195
  %multiply.25 = fmul float %4, %14
  %subtract.27 = fsub float %12, %multiply.25
  %15 = getelementptr inbounds float, ptr addrspace(1) %arg722, i64 %1
  %16 = load float, ptr addrspace(1) %15, align 4, !invariant.load !195
  %17 = getelementptr inbounds float, ptr addrspace(1) %arg824, i64 %1
  %18 = load float, ptr addrspace(1) %17, align 4, !invariant.load !195
  %multiply.28 = fmul float %4, %18
  %subtract.30 = fsub float %16, %multiply.28
  %19 = getelementptr inbounds float, ptr addrspace(1) %arg926, i64 %1
  %20 = load float, ptr addrspace(1) %19, align 4, !invariant.load !195
  %21 = getelementptr inbounds float, ptr addrspace(1) %arg1028, i64 %1
  %22 = load float, ptr addrspace(1) %21, align 4, !invariant.load !195
  %multiply.31 = fmul float %4, %22
  %subtract.33 = fsub float %20, %multiply.31
  %23 = getelementptr inbounds float, ptr addrspace(1) %arg1130, i64 %1
  %24 = load float, ptr addrspace(1) %23, align 4, !invariant.load !195
  %25 = getelementptr inbounds float, ptr addrspace(1) %arg1232, i64 %1
  %26 = load float, ptr addrspace(1) %25, align 4, !invariant.load !195
  %multiply.34 = fmul float %4, %26
  %subtract.36 = fsub float %24, %multiply.34
  %27 = getelementptr inbounds float, ptr addrspace(1) %arg1334, i64 %1
  %28 = load float, ptr addrspace(1) %27, align 4, !invariant.load !195
  %29 = getelementptr inbounds float, ptr addrspace(1) %arg1436, i64 %1
  %30 = load float, ptr addrspace(1) %29, align 4, !invariant.load !195
  %multiply.37 = fmul float %4, %30
  %subtract.39 = fsub float %28, %multiply.37
  %31 = getelementptr inbounds float, ptr addrspace(1) %arg1538, i64 %1
  %32 = load float, ptr addrspace(1) %31, align 4, !invariant.load !195
  %33 = getelementptr inbounds float, ptr addrspace(1) %arg1640, i64 %1
  %34 = load float, ptr addrspace(1) %33, align 4, !invariant.load !195
  %multiply.40 = fmul float %4, %34
  %subtract.42 = fsub float %32, %multiply.40
  %35 = getelementptr inbounds float, ptr addrspace(1) %arg1742, i64 %1
  store float %subtract.21, ptr addrspace(1) %35, align 4
  %36 = getelementptr inbounds float, ptr addrspace(1) %arg1844, i64 %1
  store float %subtract.24, ptr addrspace(1) %36, align 4
  %37 = getelementptr inbounds float, ptr addrspace(1) %arg1946, i64 %1
  store float %subtract.27, ptr addrspace(1) %37, align 4
  %38 = getelementptr inbounds float, ptr addrspace(1) %arg2048, i64 %1
  store float %subtract.30, ptr addrspace(1) %38, align 4
  %39 = getelementptr inbounds float, ptr addrspace(1) %arg2150, i64 %1
  store float %subtract.33, ptr addrspace(1) %39, align 4
  %40 = getelementptr inbounds float, ptr addrspace(1) %arg2252, i64 %1
  store float %subtract.36, ptr addrspace(1) %40, align 4
  %41 = getelementptr inbounds float, ptr addrspace(1) %arg2354, i64 %1
  store float %subtract.39, ptr addrspace(1) %41, align 4
  %42 = getelementptr inbounds float, ptr addrspace(1) %arg2456, i64 %1
  store float %subtract.42, ptr addrspace(1) %42, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_431(ptr noalias nocapture readonly align 16 dereferenceable(512) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg3, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg5, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg6, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg7, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg8, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg9, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg10, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg11, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg12, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg13, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg14, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg15, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg16, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg17, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg18, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg19, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg20, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg21, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg22, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg23, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg24, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg25, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg26, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg27, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg28, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg29, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg30, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg31, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg32, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg33, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg34, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg35, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg36, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg37, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg38, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg39, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg40, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg41, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg42, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg43, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg44, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg45, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg46, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg47, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg48, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg49, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg50, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg51, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg52, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg53, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg54, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg55, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg56, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg57, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg58, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg59, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg60) local_unnamed_addr #6 {
entry:
  %arg60128 = addrspacecast ptr %arg60 to ptr addrspace(1)
  %arg59126 = addrspacecast ptr %arg59 to ptr addrspace(1)
  %arg58124 = addrspacecast ptr %arg58 to ptr addrspace(1)
  %arg57122 = addrspacecast ptr %arg57 to ptr addrspace(1)
  %arg56120 = addrspacecast ptr %arg56 to ptr addrspace(1)
  %arg55118 = addrspacecast ptr %arg55 to ptr addrspace(1)
  %arg54116 = addrspacecast ptr %arg54 to ptr addrspace(1)
  %arg53114 = addrspacecast ptr %arg53 to ptr addrspace(1)
  %arg52112 = addrspacecast ptr %arg52 to ptr addrspace(1)
  %arg51110 = addrspacecast ptr %arg51 to ptr addrspace(1)
  %arg50108 = addrspacecast ptr %arg50 to ptr addrspace(1)
  %arg49106 = addrspacecast ptr %arg49 to ptr addrspace(1)
  %arg48104 = addrspacecast ptr %arg48 to ptr addrspace(1)
  %arg47102 = addrspacecast ptr %arg47 to ptr addrspace(1)
  %arg46100 = addrspacecast ptr %arg46 to ptr addrspace(1)
  %arg4598 = addrspacecast ptr %arg45 to ptr addrspace(1)
  %arg4496 = addrspacecast ptr %arg44 to ptr addrspace(1)
  %arg4394 = addrspacecast ptr %arg43 to ptr addrspace(1)
  %arg4292 = addrspacecast ptr %arg42 to ptr addrspace(1)
  %arg4190 = addrspacecast ptr %arg41 to ptr addrspace(1)
  %arg4088 = addrspacecast ptr %arg40 to ptr addrspace(1)
  %arg3986 = addrspacecast ptr %arg39 to ptr addrspace(1)
  %arg3884 = addrspacecast ptr %arg38 to ptr addrspace(1)
  %arg3782 = addrspacecast ptr %arg37 to ptr addrspace(1)
  %arg3680 = addrspacecast ptr %arg36 to ptr addrspace(1)
  %arg3578 = addrspacecast ptr %arg35 to ptr addrspace(1)
  %arg3476 = addrspacecast ptr %arg34 to ptr addrspace(1)
  %arg3374 = addrspacecast ptr %arg33 to ptr addrspace(1)
  %arg3272 = addrspacecast ptr %arg32 to ptr addrspace(1)
  %arg3170 = addrspacecast ptr %arg31 to ptr addrspace(1)
  %arg3068 = addrspacecast ptr %arg30 to ptr addrspace(1)
  %arg2966 = addrspacecast ptr %arg29 to ptr addrspace(1)
  %arg2864 = addrspacecast ptr %arg28 to ptr addrspace(1)
  %arg2762 = addrspacecast ptr %arg27 to ptr addrspace(1)
  %arg2660 = addrspacecast ptr %arg26 to ptr addrspace(1)
  %arg2558 = addrspacecast ptr %arg25 to ptr addrspace(1)
  %arg2456 = addrspacecast ptr %arg24 to ptr addrspace(1)
  %arg2354 = addrspacecast ptr %arg23 to ptr addrspace(1)
  %arg2252 = addrspacecast ptr %arg22 to ptr addrspace(1)
  %arg2150 = addrspacecast ptr %arg21 to ptr addrspace(1)
  %arg2048 = addrspacecast ptr %arg20 to ptr addrspace(1)
  %arg1946 = addrspacecast ptr %arg19 to ptr addrspace(1)
  %arg1844 = addrspacecast ptr %arg18 to ptr addrspace(1)
  %arg1742 = addrspacecast ptr %arg17 to ptr addrspace(1)
  %arg1640 = addrspacecast ptr %arg16 to ptr addrspace(1)
  %arg1538 = addrspacecast ptr %arg15 to ptr addrspace(1)
  %arg1436 = addrspacecast ptr %arg14 to ptr addrspace(1)
  %arg1334 = addrspacecast ptr %arg13 to ptr addrspace(1)
  %arg1232 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg1130 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg1028 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg926 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg824 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg722 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg620 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg518 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg416 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg314 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg212 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg110 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg01 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !213
  %1 = zext i32 %0 to i64
  %2 = getelementptr inbounds float, ptr addrspace(1) %arg01, i64 %1
  %3 = load float, ptr addrspace(1) %2, align 4, !invariant.load !195
  %4 = load float, ptr addrspace(1) %arg212, align 16, !invariant.load !195
  %5 = getelementptr inbounds float, ptr addrspace(1) %arg110, i64 %1
  %6 = load float, ptr addrspace(1) %5, align 4, !invariant.load !195
  %multiply.43 = fmul float %4, %6
  %subtract.45 = fsub float %3, %multiply.43
  %7 = getelementptr inbounds float, ptr addrspace(1) %arg314, i64 %1
  %8 = load float, ptr addrspace(1) %7, align 4, !invariant.load !195
  %9 = getelementptr inbounds float, ptr addrspace(1) %arg416, i64 %1
  %10 = load float, ptr addrspace(1) %9, align 4, !invariant.load !195
  %multiply.46 = fmul float %4, %10
  %subtract.48 = fsub float %8, %multiply.46
  %11 = getelementptr inbounds float, ptr addrspace(1) %arg518, i64 %1
  %12 = load float, ptr addrspace(1) %11, align 4, !invariant.load !195
  %13 = getelementptr inbounds float, ptr addrspace(1) %arg620, i64 %1
  %14 = load float, ptr addrspace(1) %13, align 4, !invariant.load !195
  %multiply.49 = fmul float %4, %14
  %subtract.51 = fsub float %12, %multiply.49
  %15 = getelementptr inbounds float, ptr addrspace(1) %arg722, i64 %1
  %16 = load float, ptr addrspace(1) %15, align 4, !invariant.load !195
  %17 = getelementptr inbounds float, ptr addrspace(1) %arg824, i64 %1
  %18 = load float, ptr addrspace(1) %17, align 4, !invariant.load !195
  %multiply.52 = fmul float %4, %18
  %subtract.54 = fsub float %16, %multiply.52
  %19 = getelementptr inbounds float, ptr addrspace(1) %arg926, i64 %1
  %20 = load float, ptr addrspace(1) %19, align 4, !invariant.load !195
  %21 = getelementptr inbounds float, ptr addrspace(1) %arg1028, i64 %1
  %22 = load float, ptr addrspace(1) %21, align 4, !invariant.load !195
  %multiply.55 = fmul float %4, %22
  %subtract.57 = fsub float %20, %multiply.55
  %23 = getelementptr inbounds float, ptr addrspace(1) %arg1130, i64 %1
  %24 = load float, ptr addrspace(1) %23, align 4, !invariant.load !195
  %25 = getelementptr inbounds float, ptr addrspace(1) %arg1232, i64 %1
  %26 = load float, ptr addrspace(1) %25, align 4, !invariant.load !195
  %multiply.58 = fmul float %4, %26
  %subtract.60 = fsub float %24, %multiply.58
  %27 = getelementptr inbounds float, ptr addrspace(1) %arg1334, i64 %1
  %28 = load float, ptr addrspace(1) %27, align 4, !invariant.load !195
  %29 = getelementptr inbounds float, ptr addrspace(1) %arg1436, i64 %1
  %30 = load float, ptr addrspace(1) %29, align 4, !invariant.load !195
  %multiply.61 = fmul float %4, %30
  %subtract.63 = fsub float %28, %multiply.61
  %31 = getelementptr inbounds float, ptr addrspace(1) %arg1538, i64 %1
  %32 = load float, ptr addrspace(1) %31, align 4, !invariant.load !195
  %33 = getelementptr inbounds float, ptr addrspace(1) %arg1640, i64 %1
  %34 = load float, ptr addrspace(1) %33, align 4, !invariant.load !195
  %multiply.64 = fmul float %4, %34
  %subtract.66 = fsub float %32, %multiply.64
  %35 = getelementptr inbounds float, ptr addrspace(1) %arg1742, i64 %1
  %36 = load float, ptr addrspace(1) %35, align 4, !invariant.load !195
  %37 = getelementptr inbounds float, ptr addrspace(1) %arg1844, i64 %1
  %38 = load float, ptr addrspace(1) %37, align 4, !invariant.load !195
  %multiply.67 = fmul float %4, %38
  %subtract.69 = fsub float %36, %multiply.67
  %39 = getelementptr inbounds float, ptr addrspace(1) %arg1946, i64 %1
  %40 = load float, ptr addrspace(1) %39, align 4, !invariant.load !195
  %41 = getelementptr inbounds float, ptr addrspace(1) %arg2048, i64 %1
  %42 = load float, ptr addrspace(1) %41, align 4, !invariant.load !195
  %multiply.70 = fmul float %4, %42
  %subtract.72 = fsub float %40, %multiply.70
  %43 = getelementptr inbounds float, ptr addrspace(1) %arg2150, i64 %1
  %44 = load float, ptr addrspace(1) %43, align 4, !invariant.load !195
  %45 = getelementptr inbounds float, ptr addrspace(1) %arg2252, i64 %1
  %46 = load float, ptr addrspace(1) %45, align 4, !invariant.load !195
  %multiply.73 = fmul float %4, %46
  %subtract.75 = fsub float %44, %multiply.73
  %47 = getelementptr inbounds float, ptr addrspace(1) %arg2354, i64 %1
  %48 = load float, ptr addrspace(1) %47, align 4, !invariant.load !195
  %49 = getelementptr inbounds float, ptr addrspace(1) %arg2456, i64 %1
  %50 = load float, ptr addrspace(1) %49, align 4, !invariant.load !195
  %multiply.76 = fmul float %4, %50
  %subtract.78 = fsub float %48, %multiply.76
  %51 = getelementptr inbounds float, ptr addrspace(1) %arg2558, i64 %1
  %52 = load float, ptr addrspace(1) %51, align 4, !invariant.load !195
  %53 = getelementptr inbounds float, ptr addrspace(1) %arg2660, i64 %1
  %54 = load float, ptr addrspace(1) %53, align 4, !invariant.load !195
  %multiply.79 = fmul float %4, %54
  %subtract.81 = fsub float %52, %multiply.79
  %55 = getelementptr inbounds float, ptr addrspace(1) %arg2762, i64 %1
  %56 = load float, ptr addrspace(1) %55, align 4, !invariant.load !195
  %57 = getelementptr inbounds float, ptr addrspace(1) %arg2864, i64 %1
  %58 = load float, ptr addrspace(1) %57, align 4, !invariant.load !195
  %multiply.82 = fmul float %4, %58
  %subtract.84 = fsub float %56, %multiply.82
  %59 = getelementptr inbounds float, ptr addrspace(1) %arg2966, i64 %1
  %60 = load float, ptr addrspace(1) %59, align 4, !invariant.load !195
  %61 = getelementptr inbounds float, ptr addrspace(1) %arg3068, i64 %1
  %62 = load float, ptr addrspace(1) %61, align 4, !invariant.load !195
  %multiply.85 = fmul float %4, %62
  %subtract.87 = fsub float %60, %multiply.85
  %63 = getelementptr inbounds float, ptr addrspace(1) %arg3170, i64 %1
  %64 = load float, ptr addrspace(1) %63, align 4, !invariant.load !195
  %65 = getelementptr inbounds float, ptr addrspace(1) %arg3272, i64 %1
  %66 = load float, ptr addrspace(1) %65, align 4, !invariant.load !195
  %multiply.88 = fmul float %4, %66
  %subtract.90 = fsub float %64, %multiply.88
  %67 = getelementptr inbounds float, ptr addrspace(1) %arg3374, i64 %1
  %68 = load float, ptr addrspace(1) %67, align 4, !invariant.load !195
  %69 = getelementptr inbounds float, ptr addrspace(1) %arg3476, i64 %1
  %70 = load float, ptr addrspace(1) %69, align 4, !invariant.load !195
  %multiply.91 = fmul float %4, %70
  %subtract.93 = fsub float %68, %multiply.91
  %71 = getelementptr inbounds float, ptr addrspace(1) %arg3578, i64 %1
  %72 = load float, ptr addrspace(1) %71, align 4, !invariant.load !195
  %73 = getelementptr inbounds float, ptr addrspace(1) %arg3680, i64 %1
  %74 = load float, ptr addrspace(1) %73, align 4, !invariant.load !195
  %multiply.94 = fmul float %4, %74
  %subtract.96 = fsub float %72, %multiply.94
  %75 = getelementptr inbounds float, ptr addrspace(1) %arg3782, i64 %1
  %76 = load float, ptr addrspace(1) %75, align 4, !invariant.load !195
  %77 = getelementptr inbounds float, ptr addrspace(1) %arg3884, i64 %1
  %78 = load float, ptr addrspace(1) %77, align 4, !invariant.load !195
  %multiply.97 = fmul float %4, %78
  %subtract.99 = fsub float %76, %multiply.97
  %79 = getelementptr inbounds float, ptr addrspace(1) %arg3986, i64 %1
  %80 = load float, ptr addrspace(1) %79, align 4, !invariant.load !195
  %81 = getelementptr inbounds float, ptr addrspace(1) %arg4088, i64 %1
  %82 = load float, ptr addrspace(1) %81, align 4, !invariant.load !195
  %multiply.100 = fmul float %4, %82
  %subtract.102 = fsub float %80, %multiply.100
  %83 = getelementptr inbounds float, ptr addrspace(1) %arg4190, i64 %1
  store float %subtract.45, ptr addrspace(1) %83, align 4
  %84 = getelementptr inbounds float, ptr addrspace(1) %arg4292, i64 %1
  store float %subtract.48, ptr addrspace(1) %84, align 4
  %85 = getelementptr inbounds float, ptr addrspace(1) %arg4394, i64 %1
  store float %subtract.51, ptr addrspace(1) %85, align 4
  %86 = getelementptr inbounds float, ptr addrspace(1) %arg4496, i64 %1
  store float %subtract.54, ptr addrspace(1) %86, align 4
  %87 = getelementptr inbounds float, ptr addrspace(1) %arg4598, i64 %1
  store float %subtract.57, ptr addrspace(1) %87, align 4
  %88 = getelementptr inbounds float, ptr addrspace(1) %arg46100, i64 %1
  store float %subtract.60, ptr addrspace(1) %88, align 4
  %89 = getelementptr inbounds float, ptr addrspace(1) %arg47102, i64 %1
  store float %subtract.63, ptr addrspace(1) %89, align 4
  %90 = getelementptr inbounds float, ptr addrspace(1) %arg48104, i64 %1
  store float %subtract.66, ptr addrspace(1) %90, align 4
  %91 = getelementptr inbounds float, ptr addrspace(1) %arg49106, i64 %1
  store float %subtract.69, ptr addrspace(1) %91, align 4
  %92 = getelementptr inbounds float, ptr addrspace(1) %arg50108, i64 %1
  store float %subtract.72, ptr addrspace(1) %92, align 4
  %93 = getelementptr inbounds float, ptr addrspace(1) %arg51110, i64 %1
  store float %subtract.75, ptr addrspace(1) %93, align 4
  %94 = getelementptr inbounds float, ptr addrspace(1) %arg52112, i64 %1
  store float %subtract.78, ptr addrspace(1) %94, align 4
  %95 = getelementptr inbounds float, ptr addrspace(1) %arg53114, i64 %1
  store float %subtract.81, ptr addrspace(1) %95, align 4
  %96 = getelementptr inbounds float, ptr addrspace(1) %arg54116, i64 %1
  store float %subtract.84, ptr addrspace(1) %96, align 4
  %97 = getelementptr inbounds float, ptr addrspace(1) %arg55118, i64 %1
  store float %subtract.87, ptr addrspace(1) %97, align 4
  %98 = getelementptr inbounds float, ptr addrspace(1) %arg56120, i64 %1
  store float %subtract.90, ptr addrspace(1) %98, align 4
  %99 = getelementptr inbounds float, ptr addrspace(1) %arg57122, i64 %1
  store float %subtract.93, ptr addrspace(1) %99, align 4
  %100 = getelementptr inbounds float, ptr addrspace(1) %arg58124, i64 %1
  store float %subtract.96, ptr addrspace(1) %100, align 4
  %101 = getelementptr inbounds float, ptr addrspace(1) %arg59126, i64 %1
  store float %subtract.99, ptr addrspace(1) %101, align 4
  %102 = getelementptr inbounds float, ptr addrspace(1) %arg60128, i64 %1
  store float %subtract.102, ptr addrspace(1) %102, align 4
  ret void
}

; Function Attrs: nounwind
define void @fusion_205(ptr noalias nocapture readonly align 128 dereferenceable(7340032) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(4194304) %arg1, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg2, ptr noalias nocapture writeonly align 128 dereferenceable(4194304) %arg3) local_unnamed_addr #0 {
entry:
  %arg397 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg295 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg193 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg091 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !213
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x = and i32 %1, 31
  %thread_id.y64 = lshr i32 %1, 5
  %2 = lshr i32 %0, 1
  %3 = shl nuw nsw i32 %0, 6
  %tile_origin.2 = and i32 %3, 64
  %4 = shl nuw nsw i32 %thread_id.x, 1
  %5 = shl nuw nsw i32 %2, 14
  %6 = shl nuw nsw i32 %thread_id.y64, 7
  %7 = add i32 %6, %tile_origin.2
  %8 = add i32 %7, %4
  %9 = add i32 %5, %6
  %10 = add i32 %9, %tile_origin.2
  %11 = add i32 %10, %4
  %12 = add i32 %11, 1
  %13 = lshr i32 %12, 7
  %14 = zext i32 %11 to i64
  %15 = shl nuw nsw i64 %14, 2
  %16 = add nuw nsw i64 %15, 4
  %scevgep = getelementptr i8, ptr addrspace(1) %arg193, i64 %16
  %17 = lshr i32 %11, 7
  br label %y_in_tile.loop_body

common.ret:                                       ; preds = %reduction_write_output-after, %reduction_write_output-true59
  ret void

y_in_tile.loop_body:                              ; preds = %entry, %y_in_tile.loop_body
  %lsr.iv110 = phi i32 [ %17, %entry ], [ %lsr.iv.next111, %y_in_tile.loop_body ]
  %lsr.iv107 = phi ptr addrspace(1) [ %scevgep, %entry ], [ %scevgep108, %y_in_tile.loop_body ]
  %lsr.iv105 = phi i32 [ %13, %entry ], [ %lsr.iv.next106, %y_in_tile.loop_body ]
  %lsr.iv = phi i32 [ %8, %entry ], [ %lsr.iv.next, %y_in_tile.loop_body ]
  %y_in_tile.invar_address.089 = phi i32 [ %thread_id.y64, %entry ], [ %invar.inc, %y_in_tile.loop_body ]
  %partial_reduction_result63.sroa.4.088 = phi float [ -0.000000e+00, %entry ], [ %add.13.i76, %y_in_tile.loop_body ]
  %partial_reduction_result63.sroa.0.087 = phi float [ -0.000000e+00, %entry ], [ %add.13.i, %y_in_tile.loop_body ]
  %invar.inc = add nuw nsw i32 %y_in_tile.invar_address.089, 32
  %18 = and i32 %lsr.iv, 126
  %19 = and i32 %lsr.iv110, 33554304
  %20 = or i32 %19, %y_in_tile.invar_address.089
  %21 = zext i32 %20 to i64
  %22 = zext i32 %18 to i64
  %Arg_1.2 = getelementptr inbounds [8192 x [128 x float]], ptr addrspace(1) %arg193, i64 0, i64 %21, i64 %22
  %Arg_1.23 = load float, ptr addrspace(1) %Arg_1.2, align 8, !invariant.load !195
  %compare.5 = fcmp ogt float %Arg_1.23, 0.000000e+00
  %23 = getelementptr [8192 x [224 x float]], ptr addrspace(1) %arg091, i64 0, i64 %21, i64 %22
  %Arg_0.199 = getelementptr inbounds float, ptr addrspace(1) %23, i64 96
  %Arg_0.14 = load float, ptr addrspace(1) %Arg_0.199, align 8, !invariant.load !195
  %24 = select i1 %compare.5, float %Arg_0.14, float 0.000000e+00
  %add.13.i = fadd float %partial_reduction_result63.sroa.0.087, %24
  %scevgep109 = getelementptr i8, ptr addrspace(1) %lsr.iv107, i64 -4
  %25 = load <2 x float>, ptr addrspace(1) %scevgep109, align 8, !invariant.load !195
  %Arg_1.26112 = extractelement <2 x float> %25, i32 0
  %Arg_1.222113 = extractelement <2 x float> %25, i32 1
  %compare.58 = fcmp ogt float %Arg_1.26112, 0.000000e+00
  %26 = select i1 %compare.58, float %Arg_0.14, float 0.000000e+00
  %27 = getelementptr inbounds [8192 x [128 x float]], ptr addrspace(1) %arg397, i64 0, i64 %21, i64 %22
  store float %26, ptr addrspace(1) %27, align 8
  %28 = add i32 %lsr.iv, 1
  %29 = and i32 %28, 127
  %30 = and i32 %lsr.iv105, 33554304
  %31 = or i32 %30, %y_in_tile.invar_address.089
  %32 = zext i32 %31 to i64
  %33 = zext i32 %29 to i64
  %Arg_1.214 = getelementptr inbounds [8192 x [128 x float]], ptr addrspace(1) %arg193, i64 0, i64 %32, i64 %33
  %Arg_1.215 = load float, ptr addrspace(1) %Arg_1.214, align 4, !invariant.load !195
  %compare.517 = fcmp ogt float %Arg_1.215, 0.000000e+00
  %34 = getelementptr [8192 x [224 x float]], ptr addrspace(1) %arg091, i64 0, i64 %32, i64 %33
  %Arg_0.118100 = getelementptr inbounds float, ptr addrspace(1) %34, i64 96
  %Arg_0.119 = load float, ptr addrspace(1) %Arg_0.118100, align 4, !invariant.load !195
  %35 = select i1 %compare.517, float %Arg_0.119, float 0.000000e+00
  %add.13.i76 = fadd float %partial_reduction_result63.sroa.4.088, %35
  %compare.524 = fcmp ogt float %Arg_1.222113, 0.000000e+00
  %36 = select i1 %compare.524, float %Arg_0.119, float 0.000000e+00
  %37 = getelementptr inbounds [8192 x [128 x float]], ptr addrspace(1) %arg397, i64 0, i64 %32, i64 %33
  store float %36, ptr addrspace(1) %37, align 4
  %lsr.iv.next = add nuw nsw i32 %lsr.iv, 4096
  %lsr.iv.next106 = add nuw nsw i32 %lsr.iv105, 32
  %scevgep108 = getelementptr i8, ptr addrspace(1) %lsr.iv107, i64 16384
  %lsr.iv.next111 = add nuw nsw i32 %lsr.iv110, 32
  %38 = icmp ugt i32 %y_in_tile.invar_address.089, 95
  br i1 %38, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_body
  %39 = zext i32 %thread_id.x to i64
  %40 = zext i32 %thread_id.y64 to i64
  %shmem_output_address = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache58, i64 0, i64 0, i64 0, i64 %39, i64 %40
  store float %add.13.i, ptr addrspace(3) %shmem_output_address, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache58, i64 0, i64 0, i64 0, i64 %40, i64 %39
  %partial_reduction_result27 = load float, ptr addrspace(3) %shmem_transposed_addr, align 4
  %41 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result27, i32 16, i32 31)
  %add.13.i77 = fadd float %partial_reduction_result27, %41
  %42 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i77, i32 8, i32 31)
  %add.13.i78 = fadd float %add.13.i77, %42
  %43 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i78, i32 4, i32 31)
  %add.13.i79 = fadd float %add.13.i78, %43
  %44 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i79, i32 2, i32 31)
  %add.13.i80 = fadd float %add.13.i79, %44
  %45 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i80, i32 1, i32 31)
  %add.13.i81 = fadd float %add.13.i80, %45
  store float %add.13.i81, ptr addrspace(3) %shmem_transposed_addr, align 4
  %46 = shl nuw nsw i32 %thread_id.y64, 1
  %47 = icmp eq i32 %thread_id.x, 0
  %48 = zext i32 %2 to i64
  %49 = or i32 %46, %tile_origin.2
  %50 = zext i32 %49 to i64
  %output_element_address = getelementptr inbounds [64 x [128 x float]], ptr addrspace(1) %arg295, i64 0, i64 %48, i64 %50
  br i1 %47, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %51 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address41102 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address, i64 1056
  store float %add.13.i76, ptr addrspace(3) %shmem_output_address41102, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr43103 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr, i64 1056
  %partial_reduction_result45 = load float, ptr addrspace(3) %shmem_transposed_addr43103, align 4
  %52 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result45, i32 16, i32 31)
  %add.13.i82 = fadd float %partial_reduction_result45, %52
  %53 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i82, i32 8, i32 31)
  %add.13.i83 = fadd float %add.13.i82, %53
  %54 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i83, i32 4, i32 31)
  %add.13.i84 = fadd float %add.13.i83, %54
  %55 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i84, i32 2, i32 31)
  %add.13.i85 = fadd float %add.13.i84, %55
  %56 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i85, i32 1, i32 31)
  %add.13.i86 = fadd float %add.13.i85, %56
  store float %add.13.i86, ptr addrspace(3) %shmem_transposed_addr43103, align 4
  br i1 %51, label %reduction_write_output-true59, label %common.ret

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  store float %add.13.i81, ptr addrspace(1) %output_element_address, align 8
  br label %reduction_write_output-after

reduction_write_output-true59:                    ; preds = %reduction_write_output-after
  %sunkaddr = getelementptr inbounds i8, ptr addrspace(1) %output_element_address, i64 4
  store float %add.13.i86, ptr addrspace(1) %sunkaddr, align 4
  br label %common.ret
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @concatenate_277(ptr noalias nocapture readonly align 16 dereferenceable(1048576) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(2097152) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4194304) %arg2, ptr noalias nocapture writeonly align 128 dereferenceable(7340032) %arg3) local_unnamed_addr #5 {
entry:
  %arg352 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg250 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg148 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg046 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !217
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !200
  %2 = shl nuw nsw i32 %0, 10
  %3 = shl nuw nsw i32 %1, 2
  %linear_index_base = or i32 %2, %3
  %linear_index_base.frozen = freeze i32 %linear_index_base
  %4 = udiv i32 %linear_index_base.frozen, 224
  %5 = mul i32 %4, 224
  %.decomposed = sub i32 %linear_index_base.frozen, %5
  %linear_index1 = or i32 %linear_index_base, 1
  %6 = urem i32 %linear_index1, 224
  %linear_index2 = or i32 %linear_index_base, 2
  %7 = urem i32 %linear_index2, 224
  %linear_index3 = or i32 %linear_index_base, 3
  %8 = urem i32 %linear_index3, 224
  %9 = icmp ult i32 %.decomposed, 32
  br i1 %9, label %concatenate.pivot.0., label %concatenate.pivot.96.

concatenate.pivot.0.:                             ; preds = %entry
  %10 = udiv i32 %linear_index_base, 224
  %11 = shl nuw nsw i32 %10, 5
  %12 = add nuw nsw i32 %11, %.decomposed
  br label %concatenate.4.merge

concatenate.pivot.96.:                            ; preds = %entry
  %13 = icmp ult i32 %.decomposed, 96
  %14 = udiv i32 %linear_index_base, 224
  br i1 %13, label %concatenate.pivot.32.1, label %concatenate.pivot.96.2

concatenate.pivot.32.1:                           ; preds = %concatenate.pivot.96.
  %15 = add nsw i32 %.decomposed, -32
  %16 = shl nuw nsw i32 %14, 6
  %17 = add nuw nsw i32 %15, %16
  br label %concatenate.4.merge

concatenate.pivot.96.2:                           ; preds = %concatenate.pivot.96.
  %18 = add nsw i32 %.decomposed, -96
  %19 = shl nuw nsw i32 %14, 7
  %20 = add nuw nsw i32 %18, %19
  br label %concatenate.4.merge

concatenate.4.merge:                              ; preds = %concatenate.pivot.96.2, %concatenate.pivot.32.1, %concatenate.pivot.0.
  %.sink39 = phi i32 [ %20, %concatenate.pivot.96.2 ], [ %17, %concatenate.pivot.32.1 ], [ %12, %concatenate.pivot.0. ]
  %arg2.sink = phi ptr addrspace(1) [ %arg250, %concatenate.pivot.96.2 ], [ %arg148, %concatenate.pivot.32.1 ], [ %arg046, %concatenate.pivot.0. ]
  %21 = zext i32 %.sink39 to i64
  %22 = getelementptr inbounds float, ptr addrspace(1) %arg2.sink, i64 %21
  %23 = load float, ptr addrspace(1) %22, align 4, !invariant.load !195
  %24 = zext i32 %linear_index_base to i64
  %25 = getelementptr float, ptr addrspace(1) %arg352, i64 %24
  store float %23, ptr addrspace(1) %25, align 16
  %26 = icmp ult i32 %6, 32
  br i1 %26, label %concatenate.pivot.0.8, label %concatenate.pivot.96.9

concatenate.pivot.0.8:                            ; preds = %concatenate.4.merge
  %27 = udiv i32 %linear_index_base, 224
  %28 = shl nuw nsw i32 %27, 5
  %29 = add nuw nsw i32 %28, %6
  br label %concatenate.4.merge3

concatenate.pivot.96.9:                           ; preds = %concatenate.4.merge
  %30 = icmp ult i32 %6, 96
  %31 = udiv i32 %linear_index_base, 224
  br i1 %30, label %concatenate.pivot.32.10, label %concatenate.pivot.96.11

concatenate.pivot.32.10:                          ; preds = %concatenate.pivot.96.9
  %32 = add nsw i32 %6, -32
  %33 = shl nuw nsw i32 %31, 6
  %34 = add nuw nsw i32 %32, %33
  br label %concatenate.4.merge3

concatenate.pivot.96.11:                          ; preds = %concatenate.pivot.96.9
  %35 = add nsw i32 %6, -96
  %36 = shl nuw nsw i32 %31, 7
  %37 = add nuw nsw i32 %35, %36
  br label %concatenate.4.merge3

concatenate.4.merge3:                             ; preds = %concatenate.pivot.96.11, %concatenate.pivot.32.10, %concatenate.pivot.0.8
  %.sink41 = phi i32 [ %37, %concatenate.pivot.96.11 ], [ %34, %concatenate.pivot.32.10 ], [ %29, %concatenate.pivot.0.8 ]
  %arg2.sink40 = phi ptr addrspace(1) [ %arg250, %concatenate.pivot.96.11 ], [ %arg148, %concatenate.pivot.32.10 ], [ %arg046, %concatenate.pivot.0.8 ]
  %38 = zext i32 %.sink41 to i64
  %39 = getelementptr inbounds float, ptr addrspace(1) %arg2.sink40, i64 %38
  %40 = load float, ptr addrspace(1) %39, align 4, !invariant.load !195
  %41 = getelementptr inbounds float, ptr addrspace(1) %25, i64 1
  store float %40, ptr addrspace(1) %41, align 4
  %42 = icmp ult i32 %7, 32
  br i1 %42, label %concatenate.pivot.0.17, label %concatenate.pivot.96.18

concatenate.pivot.0.17:                           ; preds = %concatenate.4.merge3
  %43 = udiv i32 %linear_index_base, 224
  %44 = shl nuw nsw i32 %43, 5
  %45 = add nuw nsw i32 %44, %7
  br label %concatenate.4.merge12

concatenate.pivot.96.18:                          ; preds = %concatenate.4.merge3
  %46 = icmp ult i32 %7, 96
  %47 = udiv i32 %linear_index_base, 224
  br i1 %46, label %concatenate.pivot.32.19, label %concatenate.pivot.96.20

concatenate.pivot.32.19:                          ; preds = %concatenate.pivot.96.18
  %48 = add nsw i32 %7, -32
  %49 = shl nuw nsw i32 %47, 6
  %50 = add nuw nsw i32 %48, %49
  br label %concatenate.4.merge12

concatenate.pivot.96.20:                          ; preds = %concatenate.pivot.96.18
  %51 = add nsw i32 %7, -96
  %52 = shl nuw nsw i32 %47, 7
  %53 = add nuw nsw i32 %51, %52
  br label %concatenate.4.merge12

concatenate.4.merge12:                            ; preds = %concatenate.pivot.96.20, %concatenate.pivot.32.19, %concatenate.pivot.0.17
  %.sink43 = phi i32 [ %53, %concatenate.pivot.96.20 ], [ %50, %concatenate.pivot.32.19 ], [ %45, %concatenate.pivot.0.17 ]
  %arg2.sink42 = phi ptr addrspace(1) [ %arg250, %concatenate.pivot.96.20 ], [ %arg148, %concatenate.pivot.32.19 ], [ %arg046, %concatenate.pivot.0.17 ]
  %54 = zext i32 %.sink43 to i64
  %55 = getelementptr inbounds float, ptr addrspace(1) %arg2.sink42, i64 %54
  %56 = load float, ptr addrspace(1) %55, align 4, !invariant.load !195
  %57 = getelementptr inbounds float, ptr addrspace(1) %25, i64 2
  store float %56, ptr addrspace(1) %57, align 8
  %58 = icmp ult i32 %8, 32
  br i1 %58, label %concatenate.pivot.0.26, label %concatenate.pivot.96.27

concatenate.pivot.0.26:                           ; preds = %concatenate.4.merge12
  %59 = udiv i32 %linear_index_base, 224
  %60 = shl nuw nsw i32 %59, 5
  %61 = add nuw nsw i32 %60, %8
  br label %concatenate.4.merge21

concatenate.pivot.96.27:                          ; preds = %concatenate.4.merge12
  %62 = icmp ult i32 %8, 96
  br i1 %62, label %concatenate.pivot.32.28, label %concatenate.pivot.96.29

concatenate.pivot.32.28:                          ; preds = %concatenate.pivot.96.27
  %63 = add nsw i32 %8, -32
  %64 = shl nuw nsw i32 %4, 6
  %65 = add nuw nsw i32 %63, %64
  br label %concatenate.4.merge21

concatenate.pivot.96.29:                          ; preds = %concatenate.pivot.96.27
  %66 = add nsw i32 %8, -96
  %67 = shl nuw nsw i32 %4, 7
  %68 = add nuw nsw i32 %66, %67
  br label %concatenate.4.merge21

concatenate.4.merge21:                            ; preds = %concatenate.pivot.96.29, %concatenate.pivot.32.28, %concatenate.pivot.0.26
  %.sink45 = phi i32 [ %68, %concatenate.pivot.96.29 ], [ %65, %concatenate.pivot.32.28 ], [ %61, %concatenate.pivot.0.26 ]
  %arg2.sink44 = phi ptr addrspace(1) [ %arg250, %concatenate.pivot.96.29 ], [ %arg148, %concatenate.pivot.32.28 ], [ %arg046, %concatenate.pivot.0.26 ]
  %69 = zext i32 %.sink45 to i64
  %70 = getelementptr inbounds float, ptr addrspace(1) %arg2.sink44, i64 %69
  %71 = load float, ptr addrspace(1) %70, align 4, !invariant.load !195
  %72 = getelementptr inbounds float, ptr addrspace(1) %25, i64 3
  store float %71, ptr addrspace(1) %72, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @concatenate_287(ptr noalias nocapture readonly align 16 dereferenceable(524288) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(1048576) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(8388608) %arg2, ptr noalias nocapture writeonly align 128 dereferenceable(9961472) %arg3) local_unnamed_addr #5 {
entry:
  %arg352 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg250 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg148 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg046 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !218
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !200
  %2 = shl nuw nsw i32 %0, 10
  %3 = shl nuw nsw i32 %1, 2
  %linear_index_base = or i32 %2, %3
  %linear_index_base.frozen = freeze i32 %linear_index_base
  %4 = udiv i32 %linear_index_base.frozen, 304
  %5 = mul i32 %4, 304
  %.decomposed = sub i32 %linear_index_base.frozen, %5
  %linear_index1 = or i32 %linear_index_base, 1
  %6 = urem i32 %linear_index1, 304
  %linear_index2 = or i32 %linear_index_base, 2
  %7 = urem i32 %linear_index2, 304
  %linear_index3 = or i32 %linear_index_base, 3
  %8 = urem i32 %linear_index3, 304
  %9 = icmp ult i32 %.decomposed, 16
  br i1 %9, label %concatenate.pivot.0., label %concatenate.pivot.48.

concatenate.pivot.0.:                             ; preds = %entry
  %10 = udiv i32 %linear_index_base, 304
  %11 = shl nuw nsw i32 %10, 4
  %12 = add nuw nsw i32 %11, %.decomposed
  br label %concatenate.4.merge

concatenate.pivot.48.:                            ; preds = %entry
  %13 = icmp ult i32 %.decomposed, 48
  %14 = udiv i32 %linear_index_base, 304
  br i1 %13, label %concatenate.pivot.16.1, label %concatenate.pivot.48.2

concatenate.pivot.16.1:                           ; preds = %concatenate.pivot.48.
  %15 = add nsw i32 %.decomposed, -16
  %16 = shl nuw nsw i32 %14, 5
  %17 = add nuw nsw i32 %15, %16
  br label %concatenate.4.merge

concatenate.pivot.48.2:                           ; preds = %concatenate.pivot.48.
  %18 = add nsw i32 %.decomposed, -48
  %19 = shl nuw nsw i32 %14, 8
  %20 = add nuw nsw i32 %18, %19
  br label %concatenate.4.merge

concatenate.4.merge:                              ; preds = %concatenate.pivot.48.2, %concatenate.pivot.16.1, %concatenate.pivot.0.
  %.sink39 = phi i32 [ %20, %concatenate.pivot.48.2 ], [ %17, %concatenate.pivot.16.1 ], [ %12, %concatenate.pivot.0. ]
  %arg2.sink = phi ptr addrspace(1) [ %arg250, %concatenate.pivot.48.2 ], [ %arg148, %concatenate.pivot.16.1 ], [ %arg046, %concatenate.pivot.0. ]
  %21 = zext i32 %.sink39 to i64
  %22 = getelementptr inbounds float, ptr addrspace(1) %arg2.sink, i64 %21
  %23 = load float, ptr addrspace(1) %22, align 4, !invariant.load !195
  %24 = zext i32 %linear_index_base to i64
  %25 = getelementptr float, ptr addrspace(1) %arg352, i64 %24
  store float %23, ptr addrspace(1) %25, align 16
  %26 = icmp ult i32 %6, 16
  br i1 %26, label %concatenate.pivot.0.8, label %concatenate.pivot.48.9

concatenate.pivot.0.8:                            ; preds = %concatenate.4.merge
  %27 = udiv i32 %linear_index_base, 304
  %28 = shl nuw nsw i32 %27, 4
  %29 = add nuw nsw i32 %28, %6
  br label %concatenate.4.merge3

concatenate.pivot.48.9:                           ; preds = %concatenate.4.merge
  %30 = icmp ult i32 %6, 48
  %31 = udiv i32 %linear_index_base, 304
  br i1 %30, label %concatenate.pivot.16.10, label %concatenate.pivot.48.11

concatenate.pivot.16.10:                          ; preds = %concatenate.pivot.48.9
  %32 = add nsw i32 %6, -16
  %33 = shl nuw nsw i32 %31, 5
  %34 = add nuw nsw i32 %32, %33
  br label %concatenate.4.merge3

concatenate.pivot.48.11:                          ; preds = %concatenate.pivot.48.9
  %35 = add nsw i32 %6, -48
  %36 = shl nuw nsw i32 %31, 8
  %37 = add nuw nsw i32 %35, %36
  br label %concatenate.4.merge3

concatenate.4.merge3:                             ; preds = %concatenate.pivot.48.11, %concatenate.pivot.16.10, %concatenate.pivot.0.8
  %.sink41 = phi i32 [ %37, %concatenate.pivot.48.11 ], [ %34, %concatenate.pivot.16.10 ], [ %29, %concatenate.pivot.0.8 ]
  %arg2.sink40 = phi ptr addrspace(1) [ %arg250, %concatenate.pivot.48.11 ], [ %arg148, %concatenate.pivot.16.10 ], [ %arg046, %concatenate.pivot.0.8 ]
  %38 = zext i32 %.sink41 to i64
  %39 = getelementptr inbounds float, ptr addrspace(1) %arg2.sink40, i64 %38
  %40 = load float, ptr addrspace(1) %39, align 4, !invariant.load !195
  %41 = getelementptr inbounds float, ptr addrspace(1) %25, i64 1
  store float %40, ptr addrspace(1) %41, align 4
  %42 = icmp ult i32 %7, 16
  br i1 %42, label %concatenate.pivot.0.17, label %concatenate.pivot.48.18

concatenate.pivot.0.17:                           ; preds = %concatenate.4.merge3
  %43 = udiv i32 %linear_index_base, 304
  %44 = shl nuw nsw i32 %43, 4
  %45 = add nuw nsw i32 %44, %7
  br label %concatenate.4.merge12

concatenate.pivot.48.18:                          ; preds = %concatenate.4.merge3
  %46 = icmp ult i32 %7, 48
  %47 = udiv i32 %linear_index_base, 304
  br i1 %46, label %concatenate.pivot.16.19, label %concatenate.pivot.48.20

concatenate.pivot.16.19:                          ; preds = %concatenate.pivot.48.18
  %48 = add nsw i32 %7, -16
  %49 = shl nuw nsw i32 %47, 5
  %50 = add nuw nsw i32 %48, %49
  br label %concatenate.4.merge12

concatenate.pivot.48.20:                          ; preds = %concatenate.pivot.48.18
  %51 = add nsw i32 %7, -48
  %52 = shl nuw nsw i32 %47, 8
  %53 = add nuw nsw i32 %51, %52
  br label %concatenate.4.merge12

concatenate.4.merge12:                            ; preds = %concatenate.pivot.48.20, %concatenate.pivot.16.19, %concatenate.pivot.0.17
  %.sink43 = phi i32 [ %53, %concatenate.pivot.48.20 ], [ %50, %concatenate.pivot.16.19 ], [ %45, %concatenate.pivot.0.17 ]
  %arg2.sink42 = phi ptr addrspace(1) [ %arg250, %concatenate.pivot.48.20 ], [ %arg148, %concatenate.pivot.16.19 ], [ %arg046, %concatenate.pivot.0.17 ]
  %54 = zext i32 %.sink43 to i64
  %55 = getelementptr inbounds float, ptr addrspace(1) %arg2.sink42, i64 %54
  %56 = load float, ptr addrspace(1) %55, align 4, !invariant.load !195
  %57 = getelementptr inbounds float, ptr addrspace(1) %25, i64 2
  store float %56, ptr addrspace(1) %57, align 8
  %58 = icmp ult i32 %8, 16
  br i1 %58, label %concatenate.pivot.0.26, label %concatenate.pivot.48.27

concatenate.pivot.0.26:                           ; preds = %concatenate.4.merge12
  %59 = udiv i32 %linear_index_base, 304
  %60 = shl nuw nsw i32 %59, 4
  %61 = add nuw nsw i32 %60, %8
  br label %concatenate.4.merge21

concatenate.pivot.48.27:                          ; preds = %concatenate.4.merge12
  %62 = icmp ult i32 %8, 48
  br i1 %62, label %concatenate.pivot.16.28, label %concatenate.pivot.48.29

concatenate.pivot.16.28:                          ; preds = %concatenate.pivot.48.27
  %63 = add nsw i32 %8, -16
  %64 = shl nuw nsw i32 %4, 5
  %65 = add nuw nsw i32 %63, %64
  br label %concatenate.4.merge21

concatenate.pivot.48.29:                          ; preds = %concatenate.pivot.48.27
  %66 = add nsw i32 %8, -48
  %67 = shl nuw nsw i32 %4, 8
  %68 = add nuw nsw i32 %66, %67
  br label %concatenate.4.merge21

concatenate.4.merge21:                            ; preds = %concatenate.pivot.48.29, %concatenate.pivot.16.28, %concatenate.pivot.0.26
  %.sink45 = phi i32 [ %68, %concatenate.pivot.48.29 ], [ %65, %concatenate.pivot.16.28 ], [ %61, %concatenate.pivot.0.26 ]
  %arg2.sink44 = phi ptr addrspace(1) [ %arg250, %concatenate.pivot.48.29 ], [ %arg148, %concatenate.pivot.16.28 ], [ %arg046, %concatenate.pivot.0.26 ]
  %69 = zext i32 %.sink45 to i64
  %70 = getelementptr inbounds float, ptr addrspace(1) %arg2.sink44, i64 %69
  %71 = load float, ptr addrspace(1) %70, align 4, !invariant.load !195
  %72 = getelementptr inbounds float, ptr addrspace(1) %25, i64 3
  store float %71, ptr addrspace(1) %72, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_175(ptr noalias nocapture readonly align 16 dereferenceable(16384) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(311296) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(16384) %arg3, ptr noalias nocapture readonly align 128 dereferenceable(311296) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(16384) %arg5, ptr noalias nocapture readonly align 128 dereferenceable(311296) %arg6, ptr noalias nocapture readonly align 16 dereferenceable(16384) %arg7, ptr noalias nocapture readonly align 128 dereferenceable(311296) %arg8, ptr noalias nocapture readonly align 16 dereferenceable(16384) %arg9, ptr noalias nocapture readonly align 128 dereferenceable(311296) %arg10, ptr noalias nocapture writeonly align 128 dereferenceable(16384) %arg11, ptr noalias nocapture writeonly align 128 dereferenceable(16384) %arg12, ptr noalias nocapture writeonly align 128 dereferenceable(16384) %arg13, ptr noalias nocapture writeonly align 128 dereferenceable(16384) %arg14, ptr noalias nocapture writeonly align 128 dereferenceable(16384) %arg15) local_unnamed_addr #6 {
entry:
  %arg1534 = addrspacecast ptr %arg15 to ptr addrspace(1)
  %arg1432 = addrspacecast ptr %arg14 to ptr addrspace(1)
  %arg1330 = addrspacecast ptr %arg13 to ptr addrspace(1)
  %arg1228 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg1126 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg1024 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg922 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg820 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg718 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg616 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg514 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg412 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg310 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg28 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg16 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg01 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !196
  %1 = shl nuw nsw i32 %0, 10
  %2 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %linear_index = or i32 %1, %2
  %3 = lshr i32 %linear_index, 8
  %4 = and i32 %2, 255
  %5 = zext i32 %linear_index to i64
  %6 = getelementptr inbounds float, ptr addrspace(1) %arg01, i64 %5
  %7 = load float, ptr addrspace(1) %6, align 4, !invariant.load !195
  %8 = load float, ptr addrspace(1) %arg28, align 16, !invariant.load !195
  %9 = zext i32 %3 to i64
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds [304 x [256 x float]], ptr addrspace(1) %arg16, i64 0, i64 %9, i64 %10
  %12 = load float, ptr addrspace(1) %11, align 4, !invariant.load !195
  %multiply.14 = fmul float %8, %12
  %subtract.15 = fsub float %7, %multiply.14
  %13 = getelementptr inbounds float, ptr addrspace(1) %arg310, i64 %5
  %14 = load float, ptr addrspace(1) %13, align 4, !invariant.load !195
  %15 = getelementptr inbounds [304 x [256 x float]], ptr addrspace(1) %arg412, i64 0, i64 %9, i64 %10
  %16 = load float, ptr addrspace(1) %15, align 4, !invariant.load !195
  %multiply.17 = fmul float %8, %16
  %subtract.18 = fsub float %14, %multiply.17
  %17 = getelementptr inbounds float, ptr addrspace(1) %arg514, i64 %5
  %18 = load float, ptr addrspace(1) %17, align 4, !invariant.load !195
  %19 = getelementptr inbounds [304 x [256 x float]], ptr addrspace(1) %arg616, i64 0, i64 %9, i64 %10
  %20 = load float, ptr addrspace(1) %19, align 4, !invariant.load !195
  %multiply.20 = fmul float %8, %20
  %subtract.21 = fsub float %18, %multiply.20
  %21 = getelementptr inbounds float, ptr addrspace(1) %arg718, i64 %5
  %22 = load float, ptr addrspace(1) %21, align 4, !invariant.load !195
  %23 = getelementptr inbounds [304 x [256 x float]], ptr addrspace(1) %arg820, i64 0, i64 %9, i64 %10
  %24 = load float, ptr addrspace(1) %23, align 4, !invariant.load !195
  %multiply.23 = fmul float %8, %24
  %subtract.24 = fsub float %22, %multiply.23
  %25 = getelementptr inbounds float, ptr addrspace(1) %arg922, i64 %5
  %26 = load float, ptr addrspace(1) %25, align 4, !invariant.load !195
  %27 = getelementptr inbounds [304 x [256 x float]], ptr addrspace(1) %arg1024, i64 0, i64 %9, i64 %10
  %28 = load float, ptr addrspace(1) %27, align 4, !invariant.load !195
  %multiply.26 = fmul float %8, %28
  %subtract.27 = fsub float %26, %multiply.26
  %29 = getelementptr inbounds float, ptr addrspace(1) %arg1126, i64 %5
  store float %subtract.15, ptr addrspace(1) %29, align 4
  %30 = getelementptr inbounds float, ptr addrspace(1) %arg1228, i64 %5
  store float %subtract.18, ptr addrspace(1) %30, align 4
  %31 = getelementptr inbounds float, ptr addrspace(1) %arg1330, i64 %5
  store float %subtract.21, ptr addrspace(1) %31, align 4
  %32 = getelementptr inbounds float, ptr addrspace(1) %arg1432, i64 %5
  store float %subtract.24, ptr addrspace(1) %32, align 4
  %33 = getelementptr inbounds float, ptr addrspace(1) %arg1534, i64 %5
  store float %subtract.27, ptr addrspace(1) %33, align 4
  ret void
}

; Function Attrs: nounwind
define void @fusion_213(ptr noalias nocapture readonly align 128 dereferenceable(10485760) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(4194304) %arg1, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg2, ptr noalias nocapture writeonly align 128 dereferenceable(4194304) %arg3) local_unnamed_addr #0 {
entry:
  %arg397 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg295 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg193 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg091 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !213
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x = and i32 %1, 31
  %thread_id.y64 = lshr i32 %1, 5
  %2 = lshr i32 %0, 1
  %3 = shl nuw nsw i32 %0, 6
  %tile_origin.2 = and i32 %3, 64
  %4 = shl nuw nsw i32 %thread_id.x, 1
  %5 = shl nuw nsw i32 %2, 14
  %6 = shl nuw nsw i32 %thread_id.y64, 7
  %7 = add i32 %6, %tile_origin.2
  %8 = add i32 %7, %4
  %9 = add i32 %5, %6
  %10 = add i32 %9, %tile_origin.2
  %11 = add i32 %10, %4
  %12 = add i32 %11, 1
  %13 = lshr i32 %12, 7
  %14 = zext i32 %11 to i64
  %15 = shl nuw nsw i64 %14, 2
  %16 = add nuw nsw i64 %15, 4
  %scevgep = getelementptr i8, ptr addrspace(1) %arg193, i64 %16
  %17 = lshr i32 %11, 7
  br label %y_in_tile.loop_body

common.ret:                                       ; preds = %reduction_write_output-after, %reduction_write_output-true59
  ret void

y_in_tile.loop_body:                              ; preds = %entry, %y_in_tile.loop_body
  %lsr.iv110 = phi i32 [ %17, %entry ], [ %lsr.iv.next111, %y_in_tile.loop_body ]
  %lsr.iv107 = phi ptr addrspace(1) [ %scevgep, %entry ], [ %scevgep108, %y_in_tile.loop_body ]
  %lsr.iv105 = phi i32 [ %13, %entry ], [ %lsr.iv.next106, %y_in_tile.loop_body ]
  %lsr.iv = phi i32 [ %8, %entry ], [ %lsr.iv.next, %y_in_tile.loop_body ]
  %y_in_tile.invar_address.089 = phi i32 [ %thread_id.y64, %entry ], [ %invar.inc, %y_in_tile.loop_body ]
  %partial_reduction_result63.sroa.4.088 = phi float [ -0.000000e+00, %entry ], [ %add.13.i76, %y_in_tile.loop_body ]
  %partial_reduction_result63.sroa.0.087 = phi float [ -0.000000e+00, %entry ], [ %add.13.i, %y_in_tile.loop_body ]
  %invar.inc = add nuw nsw i32 %y_in_tile.invar_address.089, 32
  %18 = and i32 %lsr.iv, 126
  %19 = and i32 %lsr.iv110, 33554304
  %20 = or i32 %19, %y_in_tile.invar_address.089
  %21 = zext i32 %20 to i64
  %22 = zext i32 %18 to i64
  %Arg_1.2 = getelementptr inbounds [8192 x [128 x float]], ptr addrspace(1) %arg193, i64 0, i64 %21, i64 %22
  %Arg_1.23 = load float, ptr addrspace(1) %Arg_1.2, align 8, !invariant.load !195
  %compare.5 = fcmp ogt float %Arg_1.23, 0.000000e+00
  %23 = getelementptr [8192 x [320 x float]], ptr addrspace(1) %arg091, i64 0, i64 %21, i64 %22
  %Arg_0.199 = getelementptr inbounds float, ptr addrspace(1) %23, i64 192
  %Arg_0.14 = load float, ptr addrspace(1) %Arg_0.199, align 8, !invariant.load !195
  %24 = select i1 %compare.5, float %Arg_0.14, float 0.000000e+00
  %add.13.i = fadd float %partial_reduction_result63.sroa.0.087, %24
  %scevgep109 = getelementptr i8, ptr addrspace(1) %lsr.iv107, i64 -4
  %25 = load <2 x float>, ptr addrspace(1) %scevgep109, align 8, !invariant.load !195
  %Arg_1.26112 = extractelement <2 x float> %25, i32 0
  %Arg_1.222113 = extractelement <2 x float> %25, i32 1
  %compare.58 = fcmp ogt float %Arg_1.26112, 0.000000e+00
  %26 = select i1 %compare.58, float %Arg_0.14, float 0.000000e+00
  %27 = getelementptr inbounds [8192 x [128 x float]], ptr addrspace(1) %arg397, i64 0, i64 %21, i64 %22
  store float %26, ptr addrspace(1) %27, align 8
  %28 = add i32 %lsr.iv, 1
  %29 = and i32 %28, 127
  %30 = and i32 %lsr.iv105, 33554304
  %31 = or i32 %30, %y_in_tile.invar_address.089
  %32 = zext i32 %31 to i64
  %33 = zext i32 %29 to i64
  %Arg_1.214 = getelementptr inbounds [8192 x [128 x float]], ptr addrspace(1) %arg193, i64 0, i64 %32, i64 %33
  %Arg_1.215 = load float, ptr addrspace(1) %Arg_1.214, align 4, !invariant.load !195
  %compare.517 = fcmp ogt float %Arg_1.215, 0.000000e+00
  %34 = getelementptr [8192 x [320 x float]], ptr addrspace(1) %arg091, i64 0, i64 %32, i64 %33
  %Arg_0.118100 = getelementptr inbounds float, ptr addrspace(1) %34, i64 192
  %Arg_0.119 = load float, ptr addrspace(1) %Arg_0.118100, align 4, !invariant.load !195
  %35 = select i1 %compare.517, float %Arg_0.119, float 0.000000e+00
  %add.13.i76 = fadd float %partial_reduction_result63.sroa.4.088, %35
  %compare.524 = fcmp ogt float %Arg_1.222113, 0.000000e+00
  %36 = select i1 %compare.524, float %Arg_0.119, float 0.000000e+00
  %37 = getelementptr inbounds [8192 x [128 x float]], ptr addrspace(1) %arg397, i64 0, i64 %32, i64 %33
  store float %36, ptr addrspace(1) %37, align 4
  %lsr.iv.next = add nuw nsw i32 %lsr.iv, 4096
  %lsr.iv.next106 = add nuw nsw i32 %lsr.iv105, 32
  %scevgep108 = getelementptr i8, ptr addrspace(1) %lsr.iv107, i64 16384
  %lsr.iv.next111 = add nuw nsw i32 %lsr.iv110, 32
  %38 = icmp ugt i32 %y_in_tile.invar_address.089, 95
  br i1 %38, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_body
  %39 = zext i32 %thread_id.x to i64
  %40 = zext i32 %thread_id.y64 to i64
  %shmem_output_address = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache59, i64 0, i64 0, i64 0, i64 %39, i64 %40
  store float %add.13.i, ptr addrspace(3) %shmem_output_address, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache59, i64 0, i64 0, i64 0, i64 %40, i64 %39
  %partial_reduction_result27 = load float, ptr addrspace(3) %shmem_transposed_addr, align 4
  %41 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result27, i32 16, i32 31)
  %add.13.i77 = fadd float %partial_reduction_result27, %41
  %42 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i77, i32 8, i32 31)
  %add.13.i78 = fadd float %add.13.i77, %42
  %43 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i78, i32 4, i32 31)
  %add.13.i79 = fadd float %add.13.i78, %43
  %44 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i79, i32 2, i32 31)
  %add.13.i80 = fadd float %add.13.i79, %44
  %45 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i80, i32 1, i32 31)
  %add.13.i81 = fadd float %add.13.i80, %45
  store float %add.13.i81, ptr addrspace(3) %shmem_transposed_addr, align 4
  %46 = shl nuw nsw i32 %thread_id.y64, 1
  %47 = icmp eq i32 %thread_id.x, 0
  %48 = zext i32 %2 to i64
  %49 = or i32 %46, %tile_origin.2
  %50 = zext i32 %49 to i64
  %output_element_address = getelementptr inbounds [64 x [128 x float]], ptr addrspace(1) %arg295, i64 0, i64 %48, i64 %50
  br i1 %47, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %51 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address41102 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address, i64 1056
  store float %add.13.i76, ptr addrspace(3) %shmem_output_address41102, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr43103 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr, i64 1056
  %partial_reduction_result45 = load float, ptr addrspace(3) %shmem_transposed_addr43103, align 4
  %52 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result45, i32 16, i32 31)
  %add.13.i82 = fadd float %partial_reduction_result45, %52
  %53 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i82, i32 8, i32 31)
  %add.13.i83 = fadd float %add.13.i82, %53
  %54 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i83, i32 4, i32 31)
  %add.13.i84 = fadd float %add.13.i83, %54
  %55 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i84, i32 2, i32 31)
  %add.13.i85 = fadd float %add.13.i84, %55
  %56 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i85, i32 1, i32 31)
  %add.13.i86 = fadd float %add.13.i85, %56
  store float %add.13.i86, ptr addrspace(3) %shmem_transposed_addr43103, align 4
  br i1 %51, label %reduction_write_output-true59, label %common.ret

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  store float %add.13.i81, ptr addrspace(1) %output_element_address, align 8
  br label %reduction_write_output-after

reduction_write_output-true59:                    ; preds = %reduction_write_output-after
  %sunkaddr = getelementptr inbounds i8, ptr addrspace(1) %output_element_address, i64 4
  store float %add.13.i86, ptr addrspace(1) %sunkaddr, align 4
  br label %common.ret
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_202(ptr noalias nocapture readonly align 16 dereferenceable(512) %arg0, ptr noalias nocapture align 128 dereferenceable(512) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg3, ptr noalias nocapture align 128 dereferenceable(512) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg5, ptr noalias nocapture align 128 dereferenceable(512) %arg6, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg7, ptr noalias nocapture align 128 dereferenceable(512) %arg8, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg9, ptr noalias nocapture align 128 dereferenceable(512) %arg10, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg11, ptr noalias nocapture align 128 dereferenceable(512) %arg12, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg13, ptr noalias nocapture align 128 dereferenceable(512) %arg14, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg15, ptr noalias nocapture align 128 dereferenceable(512) %arg16, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg17, ptr noalias nocapture align 128 dereferenceable(512) %arg18, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg19, ptr noalias nocapture align 128 dereferenceable(512) %arg20, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg21, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg22, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg23, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg24, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg25, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg26, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg27, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg28, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg29, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg30, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg31, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg32, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg33, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg34, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg35, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg36, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg37, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg38, ptr noalias nocapture readonly align 16 dereferenceable(512) %arg39, ptr noalias nocapture readonly align 128 dereferenceable(512) %arg40, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg41, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg42, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg43, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg44, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg45, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg46, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg47, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg48, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg49, ptr noalias nocapture writeonly align 128 dereferenceable(512) %arg50) local_unnamed_addr #6 {
entry:
  %arg50108 = addrspacecast ptr %arg50 to ptr addrspace(1)
  %arg49106 = addrspacecast ptr %arg49 to ptr addrspace(1)
  %arg48104 = addrspacecast ptr %arg48 to ptr addrspace(1)
  %arg47102 = addrspacecast ptr %arg47 to ptr addrspace(1)
  %arg46100 = addrspacecast ptr %arg46 to ptr addrspace(1)
  %arg4598 = addrspacecast ptr %arg45 to ptr addrspace(1)
  %arg4496 = addrspacecast ptr %arg44 to ptr addrspace(1)
  %arg4394 = addrspacecast ptr %arg43 to ptr addrspace(1)
  %arg4292 = addrspacecast ptr %arg42 to ptr addrspace(1)
  %arg4190 = addrspacecast ptr %arg41 to ptr addrspace(1)
  %arg4088 = addrspacecast ptr %arg40 to ptr addrspace(1)
  %arg3986 = addrspacecast ptr %arg39 to ptr addrspace(1)
  %arg3884 = addrspacecast ptr %arg38 to ptr addrspace(1)
  %arg3782 = addrspacecast ptr %arg37 to ptr addrspace(1)
  %arg3680 = addrspacecast ptr %arg36 to ptr addrspace(1)
  %arg3578 = addrspacecast ptr %arg35 to ptr addrspace(1)
  %arg3476 = addrspacecast ptr %arg34 to ptr addrspace(1)
  %arg3374 = addrspacecast ptr %arg33 to ptr addrspace(1)
  %arg3272 = addrspacecast ptr %arg32 to ptr addrspace(1)
  %arg3170 = addrspacecast ptr %arg31 to ptr addrspace(1)
  %arg3068 = addrspacecast ptr %arg30 to ptr addrspace(1)
  %arg2966 = addrspacecast ptr %arg29 to ptr addrspace(1)
  %arg2864 = addrspacecast ptr %arg28 to ptr addrspace(1)
  %arg2762 = addrspacecast ptr %arg27 to ptr addrspace(1)
  %arg2660 = addrspacecast ptr %arg26 to ptr addrspace(1)
  %arg2558 = addrspacecast ptr %arg25 to ptr addrspace(1)
  %arg2456 = addrspacecast ptr %arg24 to ptr addrspace(1)
  %arg2354 = addrspacecast ptr %arg23 to ptr addrspace(1)
  %arg2252 = addrspacecast ptr %arg22 to ptr addrspace(1)
  %arg2150 = addrspacecast ptr %arg21 to ptr addrspace(1)
  %arg2048 = addrspacecast ptr %arg20 to ptr addrspace(1)
  %arg1946 = addrspacecast ptr %arg19 to ptr addrspace(1)
  %arg1844 = addrspacecast ptr %arg18 to ptr addrspace(1)
  %arg1742 = addrspacecast ptr %arg17 to ptr addrspace(1)
  %arg1640 = addrspacecast ptr %arg16 to ptr addrspace(1)
  %arg1538 = addrspacecast ptr %arg15 to ptr addrspace(1)
  %arg1436 = addrspacecast ptr %arg14 to ptr addrspace(1)
  %arg1334 = addrspacecast ptr %arg13 to ptr addrspace(1)
  %arg1232 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg1130 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg1028 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg926 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg824 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg722 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg620 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg518 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg416 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg314 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg212 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg110 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg01 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !213
  %1 = zext i32 %0 to i64
  %2 = getelementptr inbounds float, ptr addrspace(1) %arg01, i64 %1
  %3 = load float, ptr addrspace(1) %2, align 4, !invariant.load !195
  %4 = load float, ptr addrspace(1) %arg212, align 16, !invariant.load !195
  %5 = getelementptr inbounds float, ptr addrspace(1) %arg110, i64 %1
  %6 = load float, ptr addrspace(1) %5, align 4
  %multiply.43 = fmul float %4, %6
  %subtract.44 = fsub float %3, %multiply.43
  %7 = getelementptr inbounds float, ptr addrspace(1) %arg314, i64 %1
  %8 = load float, ptr addrspace(1) %7, align 4, !invariant.load !195
  %9 = getelementptr inbounds float, ptr addrspace(1) %arg416, i64 %1
  %10 = load float, ptr addrspace(1) %9, align 4
  %multiply.45 = fmul float %4, %10
  %subtract.46 = fsub float %8, %multiply.45
  %11 = getelementptr inbounds float, ptr addrspace(1) %arg518, i64 %1
  %12 = load float, ptr addrspace(1) %11, align 4, !invariant.load !195
  %13 = getelementptr inbounds float, ptr addrspace(1) %arg620, i64 %1
  %14 = load float, ptr addrspace(1) %13, align 4
  %multiply.47 = fmul float %4, %14
  %subtract.48 = fsub float %12, %multiply.47
  %15 = getelementptr inbounds float, ptr addrspace(1) %arg722, i64 %1
  %16 = load float, ptr addrspace(1) %15, align 4, !invariant.load !195
  %17 = getelementptr inbounds float, ptr addrspace(1) %arg824, i64 %1
  %18 = load float, ptr addrspace(1) %17, align 4
  %multiply.49 = fmul float %4, %18
  %subtract.50 = fsub float %16, %multiply.49
  %19 = getelementptr inbounds float, ptr addrspace(1) %arg926, i64 %1
  %20 = load float, ptr addrspace(1) %19, align 4, !invariant.load !195
  %21 = getelementptr inbounds float, ptr addrspace(1) %arg1028, i64 %1
  %22 = load float, ptr addrspace(1) %21, align 4
  %multiply.51 = fmul float %4, %22
  %subtract.52 = fsub float %20, %multiply.51
  %23 = getelementptr inbounds float, ptr addrspace(1) %arg1130, i64 %1
  %24 = load float, ptr addrspace(1) %23, align 4, !invariant.load !195
  %25 = getelementptr inbounds float, ptr addrspace(1) %arg1232, i64 %1
  %26 = load float, ptr addrspace(1) %25, align 4
  %multiply.53 = fmul float %4, %26
  %subtract.54 = fsub float %24, %multiply.53
  %27 = getelementptr inbounds float, ptr addrspace(1) %arg1334, i64 %1
  %28 = load float, ptr addrspace(1) %27, align 4, !invariant.load !195
  %29 = getelementptr inbounds float, ptr addrspace(1) %arg1436, i64 %1
  %30 = load float, ptr addrspace(1) %29, align 4
  %multiply.55 = fmul float %4, %30
  %subtract.56 = fsub float %28, %multiply.55
  %31 = getelementptr inbounds float, ptr addrspace(1) %arg1538, i64 %1
  %32 = load float, ptr addrspace(1) %31, align 4, !invariant.load !195
  %33 = getelementptr inbounds float, ptr addrspace(1) %arg1640, i64 %1
  %34 = load float, ptr addrspace(1) %33, align 4
  %multiply.57 = fmul float %4, %34
  %subtract.58 = fsub float %32, %multiply.57
  %35 = getelementptr inbounds float, ptr addrspace(1) %arg1742, i64 %1
  %36 = load float, ptr addrspace(1) %35, align 4, !invariant.load !195
  %37 = getelementptr inbounds float, ptr addrspace(1) %arg1844, i64 %1
  %38 = load float, ptr addrspace(1) %37, align 4
  %multiply.59 = fmul float %4, %38
  %subtract.60 = fsub float %36, %multiply.59
  %39 = getelementptr inbounds float, ptr addrspace(1) %arg1946, i64 %1
  %40 = load float, ptr addrspace(1) %39, align 4, !invariant.load !195
  %41 = getelementptr inbounds float, ptr addrspace(1) %arg2048, i64 %1
  %42 = load float, ptr addrspace(1) %41, align 4
  %multiply.61 = fmul float %4, %42
  %subtract.62 = fsub float %40, %multiply.61
  %43 = getelementptr inbounds float, ptr addrspace(1) %arg2150, i64 %1
  %44 = load float, ptr addrspace(1) %43, align 4, !invariant.load !195
  %45 = getelementptr inbounds float, ptr addrspace(1) %arg2252, i64 %1
  %46 = load float, ptr addrspace(1) %45, align 4, !invariant.load !195
  %multiply.63 = fmul float %4, %46
  %subtract.64 = fsub float %44, %multiply.63
  %47 = getelementptr inbounds float, ptr addrspace(1) %arg2354, i64 %1
  %48 = load float, ptr addrspace(1) %47, align 4, !invariant.load !195
  %49 = getelementptr inbounds float, ptr addrspace(1) %arg2456, i64 %1
  %50 = load float, ptr addrspace(1) %49, align 4, !invariant.load !195
  %multiply.65 = fmul float %4, %50
  %subtract.66 = fsub float %48, %multiply.65
  %51 = getelementptr inbounds float, ptr addrspace(1) %arg2558, i64 %1
  %52 = load float, ptr addrspace(1) %51, align 4, !invariant.load !195
  %53 = getelementptr inbounds float, ptr addrspace(1) %arg2660, i64 %1
  %54 = load float, ptr addrspace(1) %53, align 4, !invariant.load !195
  %multiply.67 = fmul float %4, %54
  %subtract.68 = fsub float %52, %multiply.67
  %55 = getelementptr inbounds float, ptr addrspace(1) %arg2762, i64 %1
  %56 = load float, ptr addrspace(1) %55, align 4, !invariant.load !195
  %57 = getelementptr inbounds float, ptr addrspace(1) %arg2864, i64 %1
  %58 = load float, ptr addrspace(1) %57, align 4, !invariant.load !195
  %multiply.69 = fmul float %4, %58
  %subtract.70 = fsub float %56, %multiply.69
  %59 = getelementptr inbounds float, ptr addrspace(1) %arg2966, i64 %1
  %60 = load float, ptr addrspace(1) %59, align 4, !invariant.load !195
  %61 = getelementptr inbounds float, ptr addrspace(1) %arg3068, i64 %1
  %62 = load float, ptr addrspace(1) %61, align 4, !invariant.load !195
  %multiply.71 = fmul float %4, %62
  %subtract.72 = fsub float %60, %multiply.71
  %63 = getelementptr inbounds float, ptr addrspace(1) %arg3170, i64 %1
  %64 = load float, ptr addrspace(1) %63, align 4, !invariant.load !195
  %65 = getelementptr inbounds float, ptr addrspace(1) %arg3272, i64 %1
  %66 = load float, ptr addrspace(1) %65, align 4, !invariant.load !195
  %multiply.73 = fmul float %4, %66
  %subtract.74 = fsub float %64, %multiply.73
  %67 = getelementptr inbounds float, ptr addrspace(1) %arg3374, i64 %1
  %68 = load float, ptr addrspace(1) %67, align 4, !invariant.load !195
  %69 = getelementptr inbounds float, ptr addrspace(1) %arg3476, i64 %1
  %70 = load float, ptr addrspace(1) %69, align 4, !invariant.load !195
  %multiply.75 = fmul float %4, %70
  %subtract.76 = fsub float %68, %multiply.75
  %71 = getelementptr inbounds float, ptr addrspace(1) %arg3578, i64 %1
  %72 = load float, ptr addrspace(1) %71, align 4, !invariant.load !195
  %73 = getelementptr inbounds float, ptr addrspace(1) %arg3680, i64 %1
  %74 = load float, ptr addrspace(1) %73, align 4, !invariant.load !195
  %multiply.77 = fmul float %4, %74
  %subtract.78 = fsub float %72, %multiply.77
  %75 = getelementptr inbounds float, ptr addrspace(1) %arg3782, i64 %1
  %76 = load float, ptr addrspace(1) %75, align 4, !invariant.load !195
  %77 = getelementptr inbounds float, ptr addrspace(1) %arg3884, i64 %1
  %78 = load float, ptr addrspace(1) %77, align 4, !invariant.load !195
  %multiply.79 = fmul float %4, %78
  %subtract.80 = fsub float %76, %multiply.79
  %79 = getelementptr inbounds float, ptr addrspace(1) %arg3986, i64 %1
  %80 = load float, ptr addrspace(1) %79, align 4, !invariant.load !195
  %81 = getelementptr inbounds float, ptr addrspace(1) %arg4088, i64 %1
  %82 = load float, ptr addrspace(1) %81, align 4, !invariant.load !195
  %multiply.81 = fmul float %4, %82
  %subtract.82 = fsub float %80, %multiply.81
  %83 = getelementptr inbounds float, ptr addrspace(1) %arg4190, i64 %1
  store float %subtract.44, ptr addrspace(1) %83, align 4
  %84 = getelementptr inbounds float, ptr addrspace(1) %arg4292, i64 %1
  store float %subtract.46, ptr addrspace(1) %84, align 4
  %85 = getelementptr inbounds float, ptr addrspace(1) %arg4394, i64 %1
  store float %subtract.48, ptr addrspace(1) %85, align 4
  %86 = getelementptr inbounds float, ptr addrspace(1) %arg4496, i64 %1
  store float %subtract.50, ptr addrspace(1) %86, align 4
  %87 = getelementptr inbounds float, ptr addrspace(1) %arg4598, i64 %1
  store float %subtract.52, ptr addrspace(1) %87, align 4
  %88 = getelementptr inbounds float, ptr addrspace(1) %arg46100, i64 %1
  store float %subtract.54, ptr addrspace(1) %88, align 4
  %89 = getelementptr inbounds float, ptr addrspace(1) %arg47102, i64 %1
  store float %subtract.56, ptr addrspace(1) %89, align 4
  %90 = getelementptr inbounds float, ptr addrspace(1) %arg48104, i64 %1
  store float %subtract.58, ptr addrspace(1) %90, align 4
  %91 = getelementptr inbounds float, ptr addrspace(1) %arg49106, i64 %1
  store float %subtract.60, ptr addrspace(1) %91, align 4
  %92 = getelementptr inbounds float, ptr addrspace(1) %arg50108, i64 %1
  store float %subtract.62, ptr addrspace(1) %92, align 4
  store float %subtract.64, ptr addrspace(1) %9, align 4
  store float %subtract.66, ptr addrspace(1) %13, align 4
  store float %subtract.68, ptr addrspace(1) %17, align 4
  store float %subtract.70, ptr addrspace(1) %21, align 4
  store float %subtract.72, ptr addrspace(1) %25, align 4
  store float %subtract.74, ptr addrspace(1) %29, align 4
  store float %subtract.76, ptr addrspace(1) %33, align 4
  store float %subtract.78, ptr addrspace(1) %37, align 4
  store float %subtract.80, ptr addrspace(1) %41, align 4
  store float %subtract.82, ptr addrspace(1) %5, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @concatenate_275(ptr noalias nocapture readonly align 16 dereferenceable(2097152) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(4194304) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4194304) %arg2, ptr noalias nocapture writeonly align 128 dereferenceable(10485760) %arg3) local_unnamed_addr #5 {
entry:
  %arg352 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg250 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg148 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg046 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !219
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !200
  %2 = shl nuw nsw i32 %0, 10
  %3 = shl nuw nsw i32 %1, 2
  %linear_index_base = or i32 %2, %3
  %linear_index_base.frozen = freeze i32 %linear_index_base
  %4 = udiv i32 %linear_index_base.frozen, 320
  %5 = mul i32 %4, 320
  %.decomposed = sub i32 %linear_index_base.frozen, %5
  %linear_index1 = or i32 %linear_index_base, 1
  %6 = urem i32 %linear_index1, 320
  %linear_index2 = or i32 %linear_index_base, 2
  %7 = urem i32 %linear_index2, 320
  %linear_index3 = or i32 %linear_index_base, 3
  %8 = urem i32 %linear_index3, 320
  %9 = icmp ult i32 %.decomposed, 64
  br i1 %9, label %concatenate.pivot.0., label %concatenate.pivot.192.

concatenate.pivot.0.:                             ; preds = %entry
  %10 = udiv i32 %linear_index_base, 320
  %11 = shl nuw nsw i32 %10, 6
  %12 = add nuw nsw i32 %11, %.decomposed
  br label %concatenate.4.merge

concatenate.pivot.192.:                           ; preds = %entry
  %13 = icmp ult i32 %.decomposed, 192
  %14 = udiv i32 %linear_index_base, 320
  %15 = shl nuw nsw i32 %14, 7
  br i1 %13, label %concatenate.pivot.64.1, label %concatenate.pivot.192.2

concatenate.pivot.64.1:                           ; preds = %concatenate.pivot.192.
  %16 = add nsw i32 %.decomposed, -64
  %17 = add nuw nsw i32 %16, %15
  br label %concatenate.4.merge

concatenate.pivot.192.2:                          ; preds = %concatenate.pivot.192.
  %18 = add nsw i32 %.decomposed, -192
  %19 = add nuw nsw i32 %18, %15
  br label %concatenate.4.merge

concatenate.4.merge:                              ; preds = %concatenate.pivot.192.2, %concatenate.pivot.64.1, %concatenate.pivot.0.
  %.sink39 = phi i32 [ %19, %concatenate.pivot.192.2 ], [ %17, %concatenate.pivot.64.1 ], [ %12, %concatenate.pivot.0. ]
  %arg2.sink = phi ptr addrspace(1) [ %arg250, %concatenate.pivot.192.2 ], [ %arg148, %concatenate.pivot.64.1 ], [ %arg046, %concatenate.pivot.0. ]
  %20 = zext i32 %.sink39 to i64
  %21 = getelementptr inbounds float, ptr addrspace(1) %arg2.sink, i64 %20
  %22 = load float, ptr addrspace(1) %21, align 4, !invariant.load !195
  %23 = zext i32 %linear_index_base to i64
  %24 = getelementptr float, ptr addrspace(1) %arg352, i64 %23
  store float %22, ptr addrspace(1) %24, align 16
  %25 = icmp ult i32 %6, 64
  br i1 %25, label %concatenate.pivot.0.8, label %concatenate.pivot.192.9

concatenate.pivot.0.8:                            ; preds = %concatenate.4.merge
  %26 = udiv i32 %linear_index_base, 320
  %27 = shl nuw nsw i32 %26, 6
  %28 = add nuw nsw i32 %27, %6
  br label %concatenate.4.merge3

concatenate.pivot.192.9:                          ; preds = %concatenate.4.merge
  %29 = icmp ult i32 %6, 192
  %30 = udiv i32 %linear_index_base, 320
  %31 = shl nuw nsw i32 %30, 7
  br i1 %29, label %concatenate.pivot.64.10, label %concatenate.pivot.192.11

concatenate.pivot.64.10:                          ; preds = %concatenate.pivot.192.9
  %32 = add nsw i32 %6, -64
  %33 = add nuw nsw i32 %32, %31
  br label %concatenate.4.merge3

concatenate.pivot.192.11:                         ; preds = %concatenate.pivot.192.9
  %34 = add nsw i32 %6, -192
  %35 = add nuw nsw i32 %34, %31
  br label %concatenate.4.merge3

concatenate.4.merge3:                             ; preds = %concatenate.pivot.192.11, %concatenate.pivot.64.10, %concatenate.pivot.0.8
  %.sink41 = phi i32 [ %35, %concatenate.pivot.192.11 ], [ %33, %concatenate.pivot.64.10 ], [ %28, %concatenate.pivot.0.8 ]
  %arg2.sink40 = phi ptr addrspace(1) [ %arg250, %concatenate.pivot.192.11 ], [ %arg148, %concatenate.pivot.64.10 ], [ %arg046, %concatenate.pivot.0.8 ]
  %36 = zext i32 %.sink41 to i64
  %37 = getelementptr inbounds float, ptr addrspace(1) %arg2.sink40, i64 %36
  %38 = load float, ptr addrspace(1) %37, align 4, !invariant.load !195
  %39 = getelementptr inbounds float, ptr addrspace(1) %24, i64 1
  store float %38, ptr addrspace(1) %39, align 4
  %40 = icmp ult i32 %7, 64
  br i1 %40, label %concatenate.pivot.0.17, label %concatenate.pivot.192.18

concatenate.pivot.0.17:                           ; preds = %concatenate.4.merge3
  %41 = udiv i32 %linear_index_base, 320
  %42 = shl nuw nsw i32 %41, 6
  %43 = add nuw nsw i32 %42, %7
  br label %concatenate.4.merge12

concatenate.pivot.192.18:                         ; preds = %concatenate.4.merge3
  %44 = icmp ult i32 %7, 192
  %45 = udiv i32 %linear_index_base, 320
  %46 = shl nuw nsw i32 %45, 7
  br i1 %44, label %concatenate.pivot.64.19, label %concatenate.pivot.192.20

concatenate.pivot.64.19:                          ; preds = %concatenate.pivot.192.18
  %47 = add nsw i32 %7, -64
  %48 = add nuw nsw i32 %47, %46
  br label %concatenate.4.merge12

concatenate.pivot.192.20:                         ; preds = %concatenate.pivot.192.18
  %49 = add nsw i32 %7, -192
  %50 = add nuw nsw i32 %49, %46
  br label %concatenate.4.merge12

concatenate.4.merge12:                            ; preds = %concatenate.pivot.192.20, %concatenate.pivot.64.19, %concatenate.pivot.0.17
  %.sink43 = phi i32 [ %50, %concatenate.pivot.192.20 ], [ %48, %concatenate.pivot.64.19 ], [ %43, %concatenate.pivot.0.17 ]
  %arg2.sink42 = phi ptr addrspace(1) [ %arg250, %concatenate.pivot.192.20 ], [ %arg148, %concatenate.pivot.64.19 ], [ %arg046, %concatenate.pivot.0.17 ]
  %51 = zext i32 %.sink43 to i64
  %52 = getelementptr inbounds float, ptr addrspace(1) %arg2.sink42, i64 %51
  %53 = load float, ptr addrspace(1) %52, align 4, !invariant.load !195
  %54 = getelementptr inbounds float, ptr addrspace(1) %24, i64 2
  store float %53, ptr addrspace(1) %54, align 8
  %55 = icmp ult i32 %8, 64
  br i1 %55, label %concatenate.pivot.0.26, label %concatenate.pivot.192.27

concatenate.pivot.0.26:                           ; preds = %concatenate.4.merge12
  %56 = udiv i32 %linear_index_base, 320
  %57 = shl nuw nsw i32 %56, 6
  %58 = add nuw nsw i32 %57, %8
  br label %concatenate.4.merge21

concatenate.pivot.192.27:                         ; preds = %concatenate.4.merge12
  %59 = icmp ult i32 %8, 192
  %60 = shl nuw nsw i32 %4, 7
  br i1 %59, label %concatenate.pivot.64.28, label %concatenate.pivot.192.29

concatenate.pivot.64.28:                          ; preds = %concatenate.pivot.192.27
  %61 = add nsw i32 %8, -64
  %62 = add nuw nsw i32 %61, %60
  br label %concatenate.4.merge21

concatenate.pivot.192.29:                         ; preds = %concatenate.pivot.192.27
  %63 = add nsw i32 %8, -192
  %64 = add nuw nsw i32 %63, %60
  br label %concatenate.4.merge21

concatenate.4.merge21:                            ; preds = %concatenate.pivot.192.29, %concatenate.pivot.64.28, %concatenate.pivot.0.26
  %.sink45 = phi i32 [ %64, %concatenate.pivot.192.29 ], [ %62, %concatenate.pivot.64.28 ], [ %58, %concatenate.pivot.0.26 ]
  %arg2.sink44 = phi ptr addrspace(1) [ %arg250, %concatenate.pivot.192.29 ], [ %arg148, %concatenate.pivot.64.28 ], [ %arg046, %concatenate.pivot.0.26 ]
  %65 = zext i32 %.sink45 to i64
  %66 = getelementptr inbounds float, ptr addrspace(1) %arg2.sink44, i64 %65
  %67 = load float, ptr addrspace(1) %66, align 4, !invariant.load !195
  %68 = getelementptr inbounds float, ptr addrspace(1) %24, i64 3
  store float %67, ptr addrspace(1) %68, align 4
  ret void
}

; Function Attrs: nounwind
define void @fusion_128(ptr noalias nocapture readonly align 128 dereferenceable(11534336) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(8388608) %arg1, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg2, ptr noalias nocapture writeonly align 128 dereferenceable(8388608) %arg3) local_unnamed_addr #0 {
entry:
  %arg397 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg295 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg193 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg091 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !200
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x = and i32 %1, 31
  %thread_id.y64 = lshr i32 %1, 5
  %2 = lshr i32 %0, 2
  %3 = shl nuw nsw i32 %0, 6
  %tile_origin.2 = and i32 %3, 192
  %4 = shl nuw nsw i32 %thread_id.x, 1
  %5 = shl nuw nsw i32 %2, 15
  %6 = shl nuw nsw i32 %thread_id.y64, 8
  %7 = add i32 %6, %tile_origin.2
  %8 = add i32 %7, %4
  %9 = add i32 %5, %6
  %10 = add i32 %9, %tile_origin.2
  %11 = add i32 %10, %4
  %12 = add i32 %11, 1
  %13 = lshr i32 %12, 8
  %14 = zext i32 %11 to i64
  %15 = shl nuw nsw i64 %14, 2
  %16 = add nuw nsw i64 %15, 4
  %scevgep = getelementptr i8, ptr addrspace(1) %arg193, i64 %16
  %17 = lshr i32 %11, 8
  br label %y_in_tile.loop_body

common.ret:                                       ; preds = %reduction_write_output-after, %reduction_write_output-true59
  ret void

y_in_tile.loop_body:                              ; preds = %entry, %y_in_tile.loop_body
  %lsr.iv110 = phi i32 [ %17, %entry ], [ %lsr.iv.next111, %y_in_tile.loop_body ]
  %lsr.iv107 = phi ptr addrspace(1) [ %scevgep, %entry ], [ %scevgep108, %y_in_tile.loop_body ]
  %lsr.iv105 = phi i32 [ %13, %entry ], [ %lsr.iv.next106, %y_in_tile.loop_body ]
  %lsr.iv = phi i32 [ %8, %entry ], [ %lsr.iv.next, %y_in_tile.loop_body ]
  %y_in_tile.invar_address.089 = phi i32 [ %thread_id.y64, %entry ], [ %invar.inc, %y_in_tile.loop_body ]
  %partial_reduction_result63.sroa.4.088 = phi float [ -0.000000e+00, %entry ], [ %add.13.i76, %y_in_tile.loop_body ]
  %partial_reduction_result63.sroa.0.087 = phi float [ -0.000000e+00, %entry ], [ %add.13.i, %y_in_tile.loop_body ]
  %invar.inc = add nuw nsw i32 %y_in_tile.invar_address.089, 32
  %18 = and i32 %lsr.iv, 254
  %19 = and i32 %lsr.iv110, 16777088
  %20 = or i32 %19, %y_in_tile.invar_address.089
  %21 = zext i32 %20 to i64
  %22 = zext i32 %18 to i64
  %Arg_1.2 = getelementptr inbounds [8192 x [256 x float]], ptr addrspace(1) %arg193, i64 0, i64 %21, i64 %22
  %Arg_1.23 = load float, ptr addrspace(1) %Arg_1.2, align 8, !invariant.load !195
  %compare.5 = fcmp ogt float %Arg_1.23, 0.000000e+00
  %23 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg091, i64 0, i64 %21, i64 %22
  %Arg_0.199 = getelementptr inbounds float, ptr addrspace(1) %23, i64 96
  %Arg_0.14 = load float, ptr addrspace(1) %Arg_0.199, align 8, !invariant.load !195
  %24 = select i1 %compare.5, float %Arg_0.14, float 0.000000e+00
  %add.13.i = fadd float %partial_reduction_result63.sroa.0.087, %24
  %scevgep109 = getelementptr i8, ptr addrspace(1) %lsr.iv107, i64 -4
  %25 = load <2 x float>, ptr addrspace(1) %scevgep109, align 8, !invariant.load !195
  %Arg_1.26112 = extractelement <2 x float> %25, i32 0
  %Arg_1.222113 = extractelement <2 x float> %25, i32 1
  %compare.58 = fcmp ogt float %Arg_1.26112, 0.000000e+00
  %26 = select i1 %compare.58, float %Arg_0.14, float 0.000000e+00
  %27 = getelementptr inbounds [8192 x [256 x float]], ptr addrspace(1) %arg397, i64 0, i64 %21, i64 %22
  store float %26, ptr addrspace(1) %27, align 8
  %28 = add i32 %lsr.iv, 1
  %29 = and i32 %28, 255
  %30 = and i32 %lsr.iv105, 16777088
  %31 = or i32 %30, %y_in_tile.invar_address.089
  %32 = zext i32 %31 to i64
  %33 = zext i32 %29 to i64
  %Arg_1.214 = getelementptr inbounds [8192 x [256 x float]], ptr addrspace(1) %arg193, i64 0, i64 %32, i64 %33
  %Arg_1.215 = load float, ptr addrspace(1) %Arg_1.214, align 4, !invariant.load !195
  %compare.517 = fcmp ogt float %Arg_1.215, 0.000000e+00
  %34 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg091, i64 0, i64 %32, i64 %33
  %Arg_0.118100 = getelementptr inbounds float, ptr addrspace(1) %34, i64 96
  %Arg_0.119 = load float, ptr addrspace(1) %Arg_0.118100, align 4, !invariant.load !195
  %35 = select i1 %compare.517, float %Arg_0.119, float 0.000000e+00
  %add.13.i76 = fadd float %partial_reduction_result63.sroa.4.088, %35
  %compare.524 = fcmp ogt float %Arg_1.222113, 0.000000e+00
  %36 = select i1 %compare.524, float %Arg_0.119, float 0.000000e+00
  %37 = getelementptr inbounds [8192 x [256 x float]], ptr addrspace(1) %arg397, i64 0, i64 %32, i64 %33
  store float %36, ptr addrspace(1) %37, align 4
  %lsr.iv.next = add nuw nsw i32 %lsr.iv, 8192
  %lsr.iv.next106 = add nuw nsw i32 %lsr.iv105, 32
  %scevgep108 = getelementptr i8, ptr addrspace(1) %lsr.iv107, i64 32768
  %lsr.iv.next111 = add nuw nsw i32 %lsr.iv110, 32
  %38 = icmp ugt i32 %y_in_tile.invar_address.089, 95
  br i1 %38, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_body
  %39 = zext i32 %thread_id.x to i64
  %40 = zext i32 %thread_id.y64 to i64
  %shmem_output_address = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache60, i64 0, i64 0, i64 0, i64 %39, i64 %40
  store float %add.13.i, ptr addrspace(3) %shmem_output_address, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache60, i64 0, i64 0, i64 0, i64 %40, i64 %39
  %partial_reduction_result27 = load float, ptr addrspace(3) %shmem_transposed_addr, align 4
  %41 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result27, i32 16, i32 31)
  %add.13.i77 = fadd float %partial_reduction_result27, %41
  %42 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i77, i32 8, i32 31)
  %add.13.i78 = fadd float %add.13.i77, %42
  %43 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i78, i32 4, i32 31)
  %add.13.i79 = fadd float %add.13.i78, %43
  %44 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i79, i32 2, i32 31)
  %add.13.i80 = fadd float %add.13.i79, %44
  %45 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i80, i32 1, i32 31)
  %add.13.i81 = fadd float %add.13.i80, %45
  store float %add.13.i81, ptr addrspace(3) %shmem_transposed_addr, align 4
  %46 = shl nuw nsw i32 %thread_id.y64, 1
  %47 = icmp eq i32 %thread_id.x, 0
  %48 = zext i32 %2 to i64
  %49 = or i32 %46, %tile_origin.2
  %50 = zext i32 %49 to i64
  %output_element_address = getelementptr inbounds [64 x [256 x float]], ptr addrspace(1) %arg295, i64 0, i64 %48, i64 %50
  br i1 %47, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %51 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address41102 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address, i64 1056
  store float %add.13.i76, ptr addrspace(3) %shmem_output_address41102, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr43103 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr, i64 1056
  %partial_reduction_result45 = load float, ptr addrspace(3) %shmem_transposed_addr43103, align 4
  %52 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result45, i32 16, i32 31)
  %add.13.i82 = fadd float %partial_reduction_result45, %52
  %53 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i82, i32 8, i32 31)
  %add.13.i83 = fadd float %add.13.i82, %53
  %54 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i83, i32 4, i32 31)
  %add.13.i84 = fadd float %add.13.i83, %54
  %55 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i84, i32 2, i32 31)
  %add.13.i85 = fadd float %add.13.i84, %55
  %56 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i85, i32 1, i32 31)
  %add.13.i86 = fadd float %add.13.i85, %56
  store float %add.13.i86, ptr addrspace(3) %shmem_transposed_addr43103, align 4
  br i1 %51, label %reduction_write_output-true59, label %common.ret

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  store float %add.13.i81, ptr addrspace(1) %output_element_address, align 8
  br label %reduction_write_output-after

reduction_write_output-true59:                    ; preds = %reduction_write_output-after
  %sunkaddr = getelementptr inbounds i8, ptr addrspace(1) %output_element_address, i64 4
  store float %add.13.i86, ptr addrspace(1) %sunkaddr, align 4
  br label %common.ret
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @concatenate_270(ptr noalias nocapture readonly align 16 dereferenceable(1048576) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(2097152) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(8388608) %arg2, ptr noalias nocapture writeonly align 128 dereferenceable(11534336) %arg3) local_unnamed_addr #5 {
entry:
  %arg352 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg250 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg148 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg046 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !220
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !200
  %2 = shl nuw nsw i32 %0, 10
  %3 = shl nuw nsw i32 %1, 2
  %linear_index_base = or i32 %2, %3
  %linear_index_base.frozen = freeze i32 %linear_index_base
  %4 = udiv i32 %linear_index_base.frozen, 352
  %5 = mul i32 %4, 352
  %.decomposed = sub i32 %linear_index_base.frozen, %5
  %linear_index1 = or i32 %linear_index_base, 1
  %6 = urem i32 %linear_index1, 352
  %linear_index2 = or i32 %linear_index_base, 2
  %7 = urem i32 %linear_index2, 352
  %linear_index3 = or i32 %linear_index_base, 3
  %8 = urem i32 %linear_index3, 352
  %9 = icmp ult i32 %.decomposed, 32
  br i1 %9, label %concatenate.pivot.0., label %concatenate.pivot.96.

concatenate.pivot.0.:                             ; preds = %entry
  %10 = udiv i32 %linear_index_base, 352
  %11 = shl nuw nsw i32 %10, 5
  %12 = add nuw nsw i32 %11, %.decomposed
  br label %concatenate.4.merge

concatenate.pivot.96.:                            ; preds = %entry
  %13 = icmp ult i32 %.decomposed, 96
  %14 = udiv i32 %linear_index_base, 352
  br i1 %13, label %concatenate.pivot.32.1, label %concatenate.pivot.96.2

concatenate.pivot.32.1:                           ; preds = %concatenate.pivot.96.
  %15 = add nsw i32 %.decomposed, -32
  %16 = shl nuw nsw i32 %14, 6
  %17 = add nuw nsw i32 %15, %16
  br label %concatenate.4.merge

concatenate.pivot.96.2:                           ; preds = %concatenate.pivot.96.
  %18 = add nsw i32 %.decomposed, -96
  %19 = shl nuw nsw i32 %14, 8
  %20 = add nuw nsw i32 %18, %19
  br label %concatenate.4.merge

concatenate.4.merge:                              ; preds = %concatenate.pivot.96.2, %concatenate.pivot.32.1, %concatenate.pivot.0.
  %.sink39 = phi i32 [ %20, %concatenate.pivot.96.2 ], [ %17, %concatenate.pivot.32.1 ], [ %12, %concatenate.pivot.0. ]
  %arg2.sink = phi ptr addrspace(1) [ %arg250, %concatenate.pivot.96.2 ], [ %arg148, %concatenate.pivot.32.1 ], [ %arg046, %concatenate.pivot.0. ]
  %21 = zext i32 %.sink39 to i64
  %22 = getelementptr inbounds float, ptr addrspace(1) %arg2.sink, i64 %21
  %23 = load float, ptr addrspace(1) %22, align 4, !invariant.load !195
  %24 = zext i32 %linear_index_base to i64
  %25 = getelementptr float, ptr addrspace(1) %arg352, i64 %24
  store float %23, ptr addrspace(1) %25, align 16
  %26 = icmp ult i32 %6, 32
  br i1 %26, label %concatenate.pivot.0.8, label %concatenate.pivot.96.9

concatenate.pivot.0.8:                            ; preds = %concatenate.4.merge
  %27 = udiv i32 %linear_index_base, 352
  %28 = shl nuw nsw i32 %27, 5
  %29 = add nuw nsw i32 %28, %6
  br label %concatenate.4.merge3

concatenate.pivot.96.9:                           ; preds = %concatenate.4.merge
  %30 = icmp ult i32 %6, 96
  %31 = udiv i32 %linear_index_base, 352
  br i1 %30, label %concatenate.pivot.32.10, label %concatenate.pivot.96.11

concatenate.pivot.32.10:                          ; preds = %concatenate.pivot.96.9
  %32 = add nsw i32 %6, -32
  %33 = shl nuw nsw i32 %31, 6
  %34 = add nuw nsw i32 %32, %33
  br label %concatenate.4.merge3

concatenate.pivot.96.11:                          ; preds = %concatenate.pivot.96.9
  %35 = add nsw i32 %6, -96
  %36 = shl nuw nsw i32 %31, 8
  %37 = add nuw nsw i32 %35, %36
  br label %concatenate.4.merge3

concatenate.4.merge3:                             ; preds = %concatenate.pivot.96.11, %concatenate.pivot.32.10, %concatenate.pivot.0.8
  %.sink41 = phi i32 [ %37, %concatenate.pivot.96.11 ], [ %34, %concatenate.pivot.32.10 ], [ %29, %concatenate.pivot.0.8 ]
  %arg2.sink40 = phi ptr addrspace(1) [ %arg250, %concatenate.pivot.96.11 ], [ %arg148, %concatenate.pivot.32.10 ], [ %arg046, %concatenate.pivot.0.8 ]
  %38 = zext i32 %.sink41 to i64
  %39 = getelementptr inbounds float, ptr addrspace(1) %arg2.sink40, i64 %38
  %40 = load float, ptr addrspace(1) %39, align 4, !invariant.load !195
  %41 = getelementptr inbounds float, ptr addrspace(1) %25, i64 1
  store float %40, ptr addrspace(1) %41, align 4
  %42 = icmp ult i32 %7, 32
  br i1 %42, label %concatenate.pivot.0.17, label %concatenate.pivot.96.18

concatenate.pivot.0.17:                           ; preds = %concatenate.4.merge3
  %43 = udiv i32 %linear_index_base, 352
  %44 = shl nuw nsw i32 %43, 5
  %45 = add nuw nsw i32 %44, %7
  br label %concatenate.4.merge12

concatenate.pivot.96.18:                          ; preds = %concatenate.4.merge3
  %46 = icmp ult i32 %7, 96
  %47 = udiv i32 %linear_index_base, 352
  br i1 %46, label %concatenate.pivot.32.19, label %concatenate.pivot.96.20

concatenate.pivot.32.19:                          ; preds = %concatenate.pivot.96.18
  %48 = add nsw i32 %7, -32
  %49 = shl nuw nsw i32 %47, 6
  %50 = add nuw nsw i32 %48, %49
  br label %concatenate.4.merge12

concatenate.pivot.96.20:                          ; preds = %concatenate.pivot.96.18
  %51 = add nsw i32 %7, -96
  %52 = shl nuw nsw i32 %47, 8
  %53 = add nuw nsw i32 %51, %52
  br label %concatenate.4.merge12

concatenate.4.merge12:                            ; preds = %concatenate.pivot.96.20, %concatenate.pivot.32.19, %concatenate.pivot.0.17
  %.sink43 = phi i32 [ %53, %concatenate.pivot.96.20 ], [ %50, %concatenate.pivot.32.19 ], [ %45, %concatenate.pivot.0.17 ]
  %arg2.sink42 = phi ptr addrspace(1) [ %arg250, %concatenate.pivot.96.20 ], [ %arg148, %concatenate.pivot.32.19 ], [ %arg046, %concatenate.pivot.0.17 ]
  %54 = zext i32 %.sink43 to i64
  %55 = getelementptr inbounds float, ptr addrspace(1) %arg2.sink42, i64 %54
  %56 = load float, ptr addrspace(1) %55, align 4, !invariant.load !195
  %57 = getelementptr inbounds float, ptr addrspace(1) %25, i64 2
  store float %56, ptr addrspace(1) %57, align 8
  %58 = icmp ult i32 %8, 32
  br i1 %58, label %concatenate.pivot.0.26, label %concatenate.pivot.96.27

concatenate.pivot.0.26:                           ; preds = %concatenate.4.merge12
  %59 = udiv i32 %linear_index_base, 352
  %60 = shl nuw nsw i32 %59, 5
  %61 = add nuw nsw i32 %60, %8
  br label %concatenate.4.merge21

concatenate.pivot.96.27:                          ; preds = %concatenate.4.merge12
  %62 = icmp ult i32 %8, 96
  br i1 %62, label %concatenate.pivot.32.28, label %concatenate.pivot.96.29

concatenate.pivot.32.28:                          ; preds = %concatenate.pivot.96.27
  %63 = add nsw i32 %8, -32
  %64 = shl nuw nsw i32 %4, 6
  %65 = add nuw nsw i32 %63, %64
  br label %concatenate.4.merge21

concatenate.pivot.96.29:                          ; preds = %concatenate.pivot.96.27
  %66 = add nsw i32 %8, -96
  %67 = shl nuw nsw i32 %4, 8
  %68 = add nuw nsw i32 %66, %67
  br label %concatenate.4.merge21

concatenate.4.merge21:                            ; preds = %concatenate.pivot.96.29, %concatenate.pivot.32.28, %concatenate.pivot.0.26
  %.sink45 = phi i32 [ %68, %concatenate.pivot.96.29 ], [ %65, %concatenate.pivot.32.28 ], [ %61, %concatenate.pivot.0.26 ]
  %arg2.sink44 = phi ptr addrspace(1) [ %arg250, %concatenate.pivot.96.29 ], [ %arg148, %concatenate.pivot.32.28 ], [ %arg046, %concatenate.pivot.0.26 ]
  %69 = zext i32 %.sink45 to i64
  %70 = getelementptr inbounds float, ptr addrspace(1) %arg2.sink44, i64 %69
  %71 = load float, ptr addrspace(1) %70, align 4, !invariant.load !195
  %72 = getelementptr inbounds float, ptr addrspace(1) %25, i64 3
  store float %71, ptr addrspace(1) %72, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_260(ptr noalias nocapture readonly align 16 dereferenceable(16384) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(114688) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(16384) %arg3, ptr noalias nocapture readonly align 128 dereferenceable(180224) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(16384) %arg5, ptr noalias nocapture readonly align 128 dereferenceable(180224) %arg6, ptr noalias nocapture readonly align 16 dereferenceable(16384) %arg7, ptr noalias nocapture readonly align 128 dereferenceable(180224) %arg8, ptr noalias nocapture readonly align 16 dereferenceable(16384) %arg9, ptr noalias nocapture readonly align 128 dereferenceable(180224) %arg10, ptr noalias nocapture readonly align 16 dereferenceable(16384) %arg11, ptr noalias nocapture readonly align 128 dereferenceable(114688) %arg12, ptr noalias nocapture readonly align 16 dereferenceable(16384) %arg13, ptr noalias nocapture readonly align 128 dereferenceable(114688) %arg14, ptr noalias nocapture readonly align 16 dereferenceable(16384) %arg15, ptr noalias nocapture readonly align 128 dereferenceable(114688) %arg16, ptr noalias nocapture writeonly align 128 dereferenceable(16384) %arg17, ptr noalias nocapture writeonly align 128 dereferenceable(16384) %arg18, ptr noalias nocapture writeonly align 128 dereferenceable(16384) %arg19, ptr noalias nocapture writeonly align 128 dereferenceable(16384) %arg20, ptr noalias nocapture writeonly align 128 dereferenceable(16384) %arg21, ptr noalias nocapture writeonly align 128 dereferenceable(16384) %arg22, ptr noalias nocapture writeonly align 128 dereferenceable(16384) %arg23, ptr noalias nocapture writeonly align 128 dereferenceable(16384) %arg24) local_unnamed_addr #6 {
entry:
  %arg2456 = addrspacecast ptr %arg24 to ptr addrspace(1)
  %arg2354 = addrspacecast ptr %arg23 to ptr addrspace(1)
  %arg2252 = addrspacecast ptr %arg22 to ptr addrspace(1)
  %arg2150 = addrspacecast ptr %arg21 to ptr addrspace(1)
  %arg2048 = addrspacecast ptr %arg20 to ptr addrspace(1)
  %arg1946 = addrspacecast ptr %arg19 to ptr addrspace(1)
  %arg1844 = addrspacecast ptr %arg18 to ptr addrspace(1)
  %arg1742 = addrspacecast ptr %arg17 to ptr addrspace(1)
  %arg1640 = addrspacecast ptr %arg16 to ptr addrspace(1)
  %arg1538 = addrspacecast ptr %arg15 to ptr addrspace(1)
  %arg1436 = addrspacecast ptr %arg14 to ptr addrspace(1)
  %arg1334 = addrspacecast ptr %arg13 to ptr addrspace(1)
  %arg1232 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg1130 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg1028 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg926 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg824 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg722 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg620 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg518 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg416 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg314 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg212 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg110 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg01 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !196
  %1 = shl nuw nsw i32 %0, 10
  %2 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %linear_index = or i32 %1, %2
  %3 = lshr i32 %linear_index, 7
  %4 = and i32 %2, 127
  %5 = zext i32 %linear_index to i64
  %6 = getelementptr inbounds float, ptr addrspace(1) %arg01, i64 %5
  %7 = load float, ptr addrspace(1) %6, align 4, !invariant.load !195
  %8 = load float, ptr addrspace(1) %arg212, align 16, !invariant.load !195
  %9 = zext i32 %3 to i64
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds [224 x [128 x float]], ptr addrspace(1) %arg110, i64 0, i64 %9, i64 %10
  %12 = load float, ptr addrspace(1) %11, align 4, !invariant.load !195
  %multiply.20 = fmul float %8, %12
  %subtract.21 = fsub float %7, %multiply.20
  %13 = getelementptr inbounds float, ptr addrspace(1) %arg314, i64 %5
  %14 = load float, ptr addrspace(1) %13, align 4, !invariant.load !195
  %15 = getelementptr inbounds [352 x [128 x float]], ptr addrspace(1) %arg416, i64 0, i64 %9, i64 %10
  %16 = load float, ptr addrspace(1) %15, align 4, !invariant.load !195
  %multiply.23 = fmul float %8, %16
  %subtract.24 = fsub float %14, %multiply.23
  %17 = getelementptr inbounds float, ptr addrspace(1) %arg518, i64 %5
  %18 = load float, ptr addrspace(1) %17, align 4, !invariant.load !195
  %19 = getelementptr inbounds [352 x [128 x float]], ptr addrspace(1) %arg620, i64 0, i64 %9, i64 %10
  %20 = load float, ptr addrspace(1) %19, align 4, !invariant.load !195
  %multiply.26 = fmul float %8, %20
  %subtract.27 = fsub float %18, %multiply.26
  %21 = getelementptr inbounds float, ptr addrspace(1) %arg722, i64 %5
  %22 = load float, ptr addrspace(1) %21, align 4, !invariant.load !195
  %23 = getelementptr inbounds [352 x [128 x float]], ptr addrspace(1) %arg824, i64 0, i64 %9, i64 %10
  %24 = load float, ptr addrspace(1) %23, align 4, !invariant.load !195
  %multiply.29 = fmul float %8, %24
  %subtract.30 = fsub float %22, %multiply.29
  %25 = getelementptr inbounds float, ptr addrspace(1) %arg926, i64 %5
  %26 = load float, ptr addrspace(1) %25, align 4, !invariant.load !195
  %27 = getelementptr inbounds [352 x [128 x float]], ptr addrspace(1) %arg1028, i64 0, i64 %9, i64 %10
  %28 = load float, ptr addrspace(1) %27, align 4, !invariant.load !195
  %multiply.32 = fmul float %8, %28
  %subtract.33 = fsub float %26, %multiply.32
  %29 = getelementptr inbounds float, ptr addrspace(1) %arg1130, i64 %5
  %30 = load float, ptr addrspace(1) %29, align 4, !invariant.load !195
  %31 = getelementptr inbounds [224 x [128 x float]], ptr addrspace(1) %arg1232, i64 0, i64 %9, i64 %10
  %32 = load float, ptr addrspace(1) %31, align 4, !invariant.load !195
  %multiply.35 = fmul float %8, %32
  %subtract.36 = fsub float %30, %multiply.35
  %33 = getelementptr inbounds float, ptr addrspace(1) %arg1334, i64 %5
  %34 = load float, ptr addrspace(1) %33, align 4, !invariant.load !195
  %35 = getelementptr inbounds [224 x [128 x float]], ptr addrspace(1) %arg1436, i64 0, i64 %9, i64 %10
  %36 = load float, ptr addrspace(1) %35, align 4, !invariant.load !195
  %multiply.38 = fmul float %8, %36
  %subtract.39 = fsub float %34, %multiply.38
  %37 = getelementptr inbounds float, ptr addrspace(1) %arg1538, i64 %5
  %38 = load float, ptr addrspace(1) %37, align 4, !invariant.load !195
  %39 = getelementptr inbounds [224 x [128 x float]], ptr addrspace(1) %arg1640, i64 0, i64 %9, i64 %10
  %40 = load float, ptr addrspace(1) %39, align 4, !invariant.load !195
  %multiply.41 = fmul float %8, %40
  %subtract.42 = fsub float %38, %multiply.41
  %41 = getelementptr inbounds float, ptr addrspace(1) %arg1742, i64 %5
  store float %subtract.21, ptr addrspace(1) %41, align 4
  %42 = getelementptr inbounds float, ptr addrspace(1) %arg1844, i64 %5
  store float %subtract.24, ptr addrspace(1) %42, align 4
  %43 = getelementptr inbounds float, ptr addrspace(1) %arg1946, i64 %5
  store float %subtract.27, ptr addrspace(1) %43, align 4
  %44 = getelementptr inbounds float, ptr addrspace(1) %arg2048, i64 %5
  store float %subtract.30, ptr addrspace(1) %44, align 4
  %45 = getelementptr inbounds float, ptr addrspace(1) %arg2150, i64 %5
  store float %subtract.33, ptr addrspace(1) %45, align 4
  %46 = getelementptr inbounds float, ptr addrspace(1) %arg2252, i64 %5
  store float %subtract.36, ptr addrspace(1) %46, align 4
  %47 = getelementptr inbounds float, ptr addrspace(1) %arg2354, i64 %5
  store float %subtract.39, ptr addrspace(1) %47, align 4
  %48 = getelementptr inbounds float, ptr addrspace(1) %arg2456, i64 %5
  store float %subtract.42, ptr addrspace(1) %48, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @concatenate_300(ptr noalias nocapture readonly align 16 dereferenceable(1048576) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(2097152) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(8388608) %arg3, ptr noalias nocapture writeonly align 128 dereferenceable(11796480) %arg4) local_unnamed_addr #5 {
entry:
  %arg464 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg362 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg260 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg158 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg056 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !221
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !200
  %2 = shl nuw nsw i32 %0, 10
  %3 = shl nuw nsw i32 %1, 2
  %linear_index_base = or i32 %2, %3
  %linear_index_base.frozen = freeze i32 %linear_index_base
  %4 = udiv i32 %linear_index_base.frozen, 360
  %5 = mul i32 %4, 360
  %.decomposed = sub i32 %linear_index_base.frozen, %5
  %linear_index1 = or i32 %linear_index_base, 1
  %6 = urem i32 %linear_index1, 360
  %linear_index2 = or i32 %linear_index_base, 2
  %7 = urem i32 %linear_index2, 360
  %linear_index3 = or i32 %linear_index_base, 3
  %8 = urem i32 %linear_index3, 360
  %9 = icmp ult i32 %.decomposed, 96
  br i1 %9, label %concatenate.pivot.32., label %concatenate.pivot.104.

concatenate.pivot.32.:                            ; preds = %entry
  %10 = icmp ult i32 %.decomposed, 32
  br i1 %10, label %concatenate.pivot.0., label %concatenate.pivot.32.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.32.
  %11 = udiv i32 %linear_index_base, 360
  %12 = shl nuw nsw i32 %11, 5
  %13 = add nuw nsw i32 %12, %.decomposed
  br label %concatenate.5.merge

concatenate.pivot.32.1:                           ; preds = %concatenate.pivot.32.
  %14 = add nsw i32 %.decomposed, -32
  %15 = udiv i32 %linear_index_base, 360
  %16 = shl nuw nsw i32 %15, 6
  %17 = add nuw nsw i32 %14, %16
  br label %concatenate.5.merge

concatenate.pivot.104.:                           ; preds = %entry
  %18 = icmp ult i32 %.decomposed, 104
  %19 = udiv i32 %linear_index_base, 360
  br i1 %18, label %concatenate.pivot.96.2, label %concatenate.pivot.104.3

concatenate.pivot.96.2:                           ; preds = %concatenate.pivot.104.
  %20 = add nsw i32 %.decomposed, -96
  %21 = shl nuw nsw i32 %19, 3
  %22 = add nuw nsw i32 %20, %21
  br label %concatenate.5.merge

concatenate.pivot.104.3:                          ; preds = %concatenate.pivot.104.
  %23 = add nsw i32 %.decomposed, -104
  %24 = shl nuw nsw i32 %19, 8
  %25 = add nuw nsw i32 %23, %24
  br label %concatenate.5.merge

concatenate.5.merge:                              ; preds = %concatenate.pivot.104.3, %concatenate.pivot.96.2, %concatenate.pivot.32.1, %concatenate.pivot.0.
  %.sink49 = phi i32 [ %25, %concatenate.pivot.104.3 ], [ %22, %concatenate.pivot.96.2 ], [ %17, %concatenate.pivot.32.1 ], [ %13, %concatenate.pivot.0. ]
  %arg3.sink = phi ptr addrspace(1) [ %arg362, %concatenate.pivot.104.3 ], [ %arg260, %concatenate.pivot.96.2 ], [ %arg158, %concatenate.pivot.32.1 ], [ %arg056, %concatenate.pivot.0. ]
  %26 = zext i32 %.sink49 to i64
  %27 = getelementptr inbounds float, ptr addrspace(1) %arg3.sink, i64 %26
  %28 = load float, ptr addrspace(1) %27, align 4, !invariant.load !195
  %29 = zext i32 %linear_index_base to i64
  %30 = getelementptr float, ptr addrspace(1) %arg464, i64 %29
  store float %28, ptr addrspace(1) %30, align 16
  %31 = icmp ult i32 %6, 96
  br i1 %31, label %concatenate.pivot.32.10, label %concatenate.pivot.104.13

concatenate.pivot.32.10:                          ; preds = %concatenate.5.merge
  %32 = icmp ult i32 %6, 32
  br i1 %32, label %concatenate.pivot.0.11, label %concatenate.pivot.32.12

concatenate.pivot.0.11:                           ; preds = %concatenate.pivot.32.10
  %33 = udiv i32 %linear_index_base, 360
  %34 = shl nuw nsw i32 %33, 5
  %35 = add nuw nsw i32 %34, %6
  br label %concatenate.5.merge4

concatenate.pivot.32.12:                          ; preds = %concatenate.pivot.32.10
  %36 = add nsw i32 %6, -32
  %37 = udiv i32 %linear_index_base, 360
  %38 = shl nuw nsw i32 %37, 6
  %39 = add nuw nsw i32 %36, %38
  br label %concatenate.5.merge4

concatenate.pivot.104.13:                         ; preds = %concatenate.5.merge
  %40 = icmp ult i32 %6, 104
  %41 = udiv i32 %linear_index_base, 360
  br i1 %40, label %concatenate.pivot.96.14, label %concatenate.pivot.104.15

concatenate.pivot.96.14:                          ; preds = %concatenate.pivot.104.13
  %42 = add nsw i32 %6, -96
  %43 = shl nuw nsw i32 %41, 3
  %44 = add nuw nsw i32 %42, %43
  br label %concatenate.5.merge4

concatenate.pivot.104.15:                         ; preds = %concatenate.pivot.104.13
  %45 = add nsw i32 %6, -104
  %46 = shl nuw nsw i32 %41, 8
  %47 = add nuw nsw i32 %45, %46
  br label %concatenate.5.merge4

concatenate.5.merge4:                             ; preds = %concatenate.pivot.104.15, %concatenate.pivot.96.14, %concatenate.pivot.32.12, %concatenate.pivot.0.11
  %.sink51 = phi i32 [ %47, %concatenate.pivot.104.15 ], [ %44, %concatenate.pivot.96.14 ], [ %39, %concatenate.pivot.32.12 ], [ %35, %concatenate.pivot.0.11 ]
  %arg3.sink50 = phi ptr addrspace(1) [ %arg362, %concatenate.pivot.104.15 ], [ %arg260, %concatenate.pivot.96.14 ], [ %arg158, %concatenate.pivot.32.12 ], [ %arg056, %concatenate.pivot.0.11 ]
  %48 = zext i32 %.sink51 to i64
  %49 = getelementptr inbounds float, ptr addrspace(1) %arg3.sink50, i64 %48
  %50 = load float, ptr addrspace(1) %49, align 4, !invariant.load !195
  %51 = getelementptr inbounds float, ptr addrspace(1) %30, i64 1
  store float %50, ptr addrspace(1) %51, align 4
  %52 = icmp ult i32 %7, 96
  br i1 %52, label %concatenate.pivot.32.22, label %concatenate.pivot.104.25

concatenate.pivot.32.22:                          ; preds = %concatenate.5.merge4
  %53 = icmp ult i32 %7, 32
  br i1 %53, label %concatenate.pivot.0.23, label %concatenate.pivot.32.24

concatenate.pivot.0.23:                           ; preds = %concatenate.pivot.32.22
  %54 = udiv i32 %linear_index_base, 360
  %55 = shl nuw nsw i32 %54, 5
  %56 = add nuw nsw i32 %55, %7
  br label %concatenate.5.merge16

concatenate.pivot.32.24:                          ; preds = %concatenate.pivot.32.22
  %57 = add nsw i32 %7, -32
  %58 = udiv i32 %linear_index_base, 360
  %59 = shl nuw nsw i32 %58, 6
  %60 = add nuw nsw i32 %57, %59
  br label %concatenate.5.merge16

concatenate.pivot.104.25:                         ; preds = %concatenate.5.merge4
  %61 = icmp ult i32 %7, 104
  %62 = udiv i32 %linear_index_base, 360
  br i1 %61, label %concatenate.pivot.96.26, label %concatenate.pivot.104.27

concatenate.pivot.96.26:                          ; preds = %concatenate.pivot.104.25
  %63 = add nsw i32 %7, -96
  %64 = shl nuw nsw i32 %62, 3
  %65 = add nuw nsw i32 %63, %64
  br label %concatenate.5.merge16

concatenate.pivot.104.27:                         ; preds = %concatenate.pivot.104.25
  %66 = add nsw i32 %7, -104
  %67 = shl nuw nsw i32 %62, 8
  %68 = add nuw nsw i32 %66, %67
  br label %concatenate.5.merge16

concatenate.5.merge16:                            ; preds = %concatenate.pivot.104.27, %concatenate.pivot.96.26, %concatenate.pivot.32.24, %concatenate.pivot.0.23
  %.sink53 = phi i32 [ %68, %concatenate.pivot.104.27 ], [ %65, %concatenate.pivot.96.26 ], [ %60, %concatenate.pivot.32.24 ], [ %56, %concatenate.pivot.0.23 ]
  %arg3.sink52 = phi ptr addrspace(1) [ %arg362, %concatenate.pivot.104.27 ], [ %arg260, %concatenate.pivot.96.26 ], [ %arg158, %concatenate.pivot.32.24 ], [ %arg056, %concatenate.pivot.0.23 ]
  %69 = zext i32 %.sink53 to i64
  %70 = getelementptr inbounds float, ptr addrspace(1) %arg3.sink52, i64 %69
  %71 = load float, ptr addrspace(1) %70, align 4, !invariant.load !195
  %72 = getelementptr inbounds float, ptr addrspace(1) %30, i64 2
  store float %71, ptr addrspace(1) %72, align 8
  %73 = icmp ult i32 %8, 96
  br i1 %73, label %concatenate.pivot.32.34, label %concatenate.pivot.104.37

concatenate.pivot.32.34:                          ; preds = %concatenate.5.merge16
  %74 = icmp ult i32 %8, 32
  br i1 %74, label %concatenate.pivot.0.35, label %concatenate.pivot.32.36

concatenate.pivot.0.35:                           ; preds = %concatenate.pivot.32.34
  %75 = udiv i32 %linear_index_base, 360
  %76 = shl nuw nsw i32 %75, 5
  %77 = add nuw nsw i32 %76, %8
  br label %concatenate.5.merge28

concatenate.pivot.32.36:                          ; preds = %concatenate.pivot.32.34
  %78 = add nsw i32 %8, -32
  %79 = udiv i32 %linear_index_base, 360
  %80 = shl nuw nsw i32 %79, 6
  %81 = add nuw nsw i32 %78, %80
  br label %concatenate.5.merge28

concatenate.pivot.104.37:                         ; preds = %concatenate.5.merge16
  %82 = icmp ult i32 %8, 104
  br i1 %82, label %concatenate.pivot.96.38, label %concatenate.pivot.104.39

concatenate.pivot.96.38:                          ; preds = %concatenate.pivot.104.37
  %83 = add nsw i32 %8, -96
  %84 = shl nuw nsw i32 %4, 3
  %85 = add nuw nsw i32 %83, %84
  br label %concatenate.5.merge28

concatenate.pivot.104.39:                         ; preds = %concatenate.pivot.104.37
  %86 = add nsw i32 %8, -104
  %87 = shl nuw nsw i32 %4, 8
  %88 = add nuw nsw i32 %86, %87
  br label %concatenate.5.merge28

concatenate.5.merge28:                            ; preds = %concatenate.pivot.104.39, %concatenate.pivot.96.38, %concatenate.pivot.32.36, %concatenate.pivot.0.35
  %.sink55 = phi i32 [ %88, %concatenate.pivot.104.39 ], [ %85, %concatenate.pivot.96.38 ], [ %81, %concatenate.pivot.32.36 ], [ %77, %concatenate.pivot.0.35 ]
  %arg3.sink54 = phi ptr addrspace(1) [ %arg362, %concatenate.pivot.104.39 ], [ %arg260, %concatenate.pivot.96.38 ], [ %arg158, %concatenate.pivot.32.36 ], [ %arg056, %concatenate.pivot.0.35 ]
  %89 = zext i32 %.sink55 to i64
  %90 = getelementptr inbounds float, ptr addrspace(1) %arg3.sink54, i64 %89
  %91 = load float, ptr addrspace(1) %90, align 4, !invariant.load !195
  %92 = getelementptr inbounds float, ptr addrspace(1) %30, i64 3
  store float %91, ptr addrspace(1) %92, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_364(ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(360448) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg3, ptr noalias nocapture readonly align 128 dereferenceable(360448) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg5, ptr noalias nocapture readonly align 128 dereferenceable(368640) %arg6, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg7, ptr noalias nocapture readonly align 128 dereferenceable(368640) %arg8, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg9, ptr noalias nocapture readonly align 128 dereferenceable(368640) %arg10, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg11, ptr noalias nocapture readonly align 128 dereferenceable(360448) %arg12, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg13, ptr noalias nocapture readonly align 128 dereferenceable(311296) %arg14, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg15, ptr noalias nocapture readonly align 128 dereferenceable(311296) %arg16, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg17, ptr noalias nocapture readonly align 128 dereferenceable(311296) %arg18, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg19, ptr noalias nocapture readonly align 128 dereferenceable(360448) %arg20, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg21, ptr noalias nocapture readonly align 128 dereferenceable(311296) %arg22, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg23, ptr noalias nocapture readonly align 128 dereferenceable(311296) %arg24, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg25, ptr noalias nocapture readonly align 128 dereferenceable(360448) %arg26, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg27, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg28, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg29, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg30, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg31, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg32, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg33, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg34, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg35, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg36, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg37, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg38, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg39) local_unnamed_addr #6 {
entry:
  %arg3986 = addrspacecast ptr %arg39 to ptr addrspace(1)
  %arg3884 = addrspacecast ptr %arg38 to ptr addrspace(1)
  %arg3782 = addrspacecast ptr %arg37 to ptr addrspace(1)
  %arg3680 = addrspacecast ptr %arg36 to ptr addrspace(1)
  %arg3578 = addrspacecast ptr %arg35 to ptr addrspace(1)
  %arg3476 = addrspacecast ptr %arg34 to ptr addrspace(1)
  %arg3374 = addrspacecast ptr %arg33 to ptr addrspace(1)
  %arg3272 = addrspacecast ptr %arg32 to ptr addrspace(1)
  %arg3170 = addrspacecast ptr %arg31 to ptr addrspace(1)
  %arg3068 = addrspacecast ptr %arg30 to ptr addrspace(1)
  %arg2966 = addrspacecast ptr %arg29 to ptr addrspace(1)
  %arg2864 = addrspacecast ptr %arg28 to ptr addrspace(1)
  %arg2762 = addrspacecast ptr %arg27 to ptr addrspace(1)
  %arg2660 = addrspacecast ptr %arg26 to ptr addrspace(1)
  %arg2558 = addrspacecast ptr %arg25 to ptr addrspace(1)
  %arg2456 = addrspacecast ptr %arg24 to ptr addrspace(1)
  %arg2354 = addrspacecast ptr %arg23 to ptr addrspace(1)
  %arg2252 = addrspacecast ptr %arg22 to ptr addrspace(1)
  %arg2150 = addrspacecast ptr %arg21 to ptr addrspace(1)
  %arg2048 = addrspacecast ptr %arg20 to ptr addrspace(1)
  %arg1946 = addrspacecast ptr %arg19 to ptr addrspace(1)
  %arg1844 = addrspacecast ptr %arg18 to ptr addrspace(1)
  %arg1742 = addrspacecast ptr %arg17 to ptr addrspace(1)
  %arg1640 = addrspacecast ptr %arg16 to ptr addrspace(1)
  %arg1538 = addrspacecast ptr %arg15 to ptr addrspace(1)
  %arg1436 = addrspacecast ptr %arg14 to ptr addrspace(1)
  %arg1334 = addrspacecast ptr %arg13 to ptr addrspace(1)
  %arg1232 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg1130 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg1028 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg926 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg824 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg722 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg620 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg518 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg416 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg314 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg212 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg110 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg01 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !197
  %1 = shl nuw nsw i32 %0, 10
  %2 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %linear_index = or i32 %1, %2
  %3 = lshr i32 %linear_index, 8
  %4 = and i32 %2, 255
  %5 = zext i32 %linear_index to i64
  %6 = getelementptr inbounds float, ptr addrspace(1) %arg01, i64 %5
  %7 = load float, ptr addrspace(1) %6, align 4, !invariant.load !195
  %8 = load float, ptr addrspace(1) %arg212, align 16, !invariant.load !195
  %9 = zext i32 %3 to i64
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds [352 x [256 x float]], ptr addrspace(1) %arg110, i64 0, i64 %9, i64 %10
  %12 = load float, ptr addrspace(1) %11, align 4, !invariant.load !195
  %multiply.30 = fmul float %8, %12
  %subtract.31 = fsub float %7, %multiply.30
  %13 = getelementptr inbounds float, ptr addrspace(1) %arg314, i64 %5
  %14 = load float, ptr addrspace(1) %13, align 4, !invariant.load !195
  %15 = getelementptr inbounds [352 x [256 x float]], ptr addrspace(1) %arg416, i64 0, i64 %9, i64 %10
  %16 = load float, ptr addrspace(1) %15, align 4, !invariant.load !195
  %multiply.33 = fmul float %8, %16
  %subtract.34 = fsub float %14, %multiply.33
  %17 = getelementptr inbounds float, ptr addrspace(1) %arg518, i64 %5
  %18 = load float, ptr addrspace(1) %17, align 4, !invariant.load !195
  %19 = getelementptr inbounds [360 x [256 x float]], ptr addrspace(1) %arg620, i64 0, i64 %9, i64 %10
  %20 = load float, ptr addrspace(1) %19, align 4, !invariant.load !195
  %multiply.36 = fmul float %8, %20
  %subtract.37 = fsub float %18, %multiply.36
  %21 = getelementptr inbounds float, ptr addrspace(1) %arg722, i64 %5
  %22 = load float, ptr addrspace(1) %21, align 4, !invariant.load !195
  %23 = getelementptr inbounds [360 x [256 x float]], ptr addrspace(1) %arg824, i64 0, i64 %9, i64 %10
  %24 = load float, ptr addrspace(1) %23, align 4, !invariant.load !195
  %multiply.39 = fmul float %8, %24
  %subtract.40 = fsub float %22, %multiply.39
  %25 = getelementptr inbounds float, ptr addrspace(1) %arg926, i64 %5
  %26 = load float, ptr addrspace(1) %25, align 4, !invariant.load !195
  %27 = getelementptr inbounds [360 x [256 x float]], ptr addrspace(1) %arg1028, i64 0, i64 %9, i64 %10
  %28 = load float, ptr addrspace(1) %27, align 4, !invariant.load !195
  %multiply.42 = fmul float %8, %28
  %subtract.43 = fsub float %26, %multiply.42
  %29 = getelementptr inbounds float, ptr addrspace(1) %arg1130, i64 %5
  %30 = load float, ptr addrspace(1) %29, align 4, !invariant.load !195
  %31 = getelementptr inbounds [352 x [256 x float]], ptr addrspace(1) %arg1232, i64 0, i64 %9, i64 %10
  %32 = load float, ptr addrspace(1) %31, align 4, !invariant.load !195
  %multiply.45 = fmul float %8, %32
  %subtract.46 = fsub float %30, %multiply.45
  %33 = getelementptr inbounds float, ptr addrspace(1) %arg1334, i64 %5
  %34 = load float, ptr addrspace(1) %33, align 4, !invariant.load !195
  %35 = getelementptr [304 x [256 x float]], ptr addrspace(1) %arg1436, i64 0, i64 %9, i64 %10
  %36 = getelementptr inbounds float, ptr addrspace(1) %35, i64 4096
  %37 = load float, ptr addrspace(1) %36, align 4, !invariant.load !195
  %multiply.48 = fmul float %8, %37
  %subtract.49 = fsub float %34, %multiply.48
  %38 = getelementptr inbounds float, ptr addrspace(1) %arg1538, i64 %5
  %39 = load float, ptr addrspace(1) %38, align 4, !invariant.load !195
  %40 = getelementptr [304 x [256 x float]], ptr addrspace(1) %arg1640, i64 0, i64 %9, i64 %10
  %41 = getelementptr inbounds float, ptr addrspace(1) %40, i64 4096
  %42 = load float, ptr addrspace(1) %41, align 4, !invariant.load !195
  %multiply.51 = fmul float %8, %42
  %subtract.52 = fsub float %39, %multiply.51
  %43 = getelementptr inbounds float, ptr addrspace(1) %arg1742, i64 %5
  %44 = load float, ptr addrspace(1) %43, align 4, !invariant.load !195
  %45 = getelementptr [304 x [256 x float]], ptr addrspace(1) %arg1844, i64 0, i64 %9, i64 %10
  %46 = getelementptr inbounds float, ptr addrspace(1) %45, i64 4096
  %47 = load float, ptr addrspace(1) %46, align 4, !invariant.load !195
  %multiply.54 = fmul float %8, %47
  %subtract.55 = fsub float %44, %multiply.54
  %48 = getelementptr inbounds float, ptr addrspace(1) %arg1946, i64 %5
  %49 = load float, ptr addrspace(1) %48, align 4, !invariant.load !195
  %50 = getelementptr inbounds [352 x [256 x float]], ptr addrspace(1) %arg2048, i64 0, i64 %9, i64 %10
  %51 = load float, ptr addrspace(1) %50, align 4, !invariant.load !195
  %multiply.57 = fmul float %8, %51
  %subtract.58 = fsub float %49, %multiply.57
  %52 = getelementptr inbounds float, ptr addrspace(1) %arg2150, i64 %5
  %53 = load float, ptr addrspace(1) %52, align 4, !invariant.load !195
  %54 = getelementptr [304 x [256 x float]], ptr addrspace(1) %arg2252, i64 0, i64 %9, i64 %10
  %55 = getelementptr inbounds float, ptr addrspace(1) %54, i64 4096
  %56 = load float, ptr addrspace(1) %55, align 4, !invariant.load !195
  %multiply.60 = fmul float %8, %56
  %subtract.61 = fsub float %53, %multiply.60
  %57 = getelementptr inbounds float, ptr addrspace(1) %arg2354, i64 %5
  %58 = load float, ptr addrspace(1) %57, align 4, !invariant.load !195
  %59 = getelementptr [304 x [256 x float]], ptr addrspace(1) %arg2456, i64 0, i64 %9, i64 %10
  %60 = getelementptr inbounds float, ptr addrspace(1) %59, i64 4096
  %61 = load float, ptr addrspace(1) %60, align 4, !invariant.load !195
  %multiply.63 = fmul float %8, %61
  %subtract.64 = fsub float %58, %multiply.63
  %62 = getelementptr inbounds float, ptr addrspace(1) %arg2558, i64 %5
  %63 = load float, ptr addrspace(1) %62, align 4, !invariant.load !195
  %64 = getelementptr inbounds [352 x [256 x float]], ptr addrspace(1) %arg2660, i64 0, i64 %9, i64 %10
  %65 = load float, ptr addrspace(1) %64, align 4, !invariant.load !195
  %multiply.66 = fmul float %8, %65
  %subtract.67 = fsub float %63, %multiply.66
  %66 = getelementptr inbounds float, ptr addrspace(1) %arg2762, i64 %5
  store float %subtract.31, ptr addrspace(1) %66, align 4
  %67 = getelementptr inbounds float, ptr addrspace(1) %arg2864, i64 %5
  store float %subtract.34, ptr addrspace(1) %67, align 4
  %68 = getelementptr inbounds float, ptr addrspace(1) %arg2966, i64 %5
  store float %subtract.37, ptr addrspace(1) %68, align 4
  %69 = getelementptr inbounds float, ptr addrspace(1) %arg3068, i64 %5
  store float %subtract.40, ptr addrspace(1) %69, align 4
  %70 = getelementptr inbounds float, ptr addrspace(1) %arg3170, i64 %5
  store float %subtract.43, ptr addrspace(1) %70, align 4
  %71 = getelementptr inbounds float, ptr addrspace(1) %arg3272, i64 %5
  store float %subtract.46, ptr addrspace(1) %71, align 4
  %72 = getelementptr inbounds float, ptr addrspace(1) %arg3374, i64 %5
  store float %subtract.49, ptr addrspace(1) %72, align 4
  %73 = getelementptr inbounds float, ptr addrspace(1) %arg3476, i64 %5
  store float %subtract.52, ptr addrspace(1) %73, align 4
  %74 = getelementptr inbounds float, ptr addrspace(1) %arg3578, i64 %5
  store float %subtract.55, ptr addrspace(1) %74, align 4
  %75 = getelementptr inbounds float, ptr addrspace(1) %arg3680, i64 %5
  store float %subtract.58, ptr addrspace(1) %75, align 4
  %76 = getelementptr inbounds float, ptr addrspace(1) %arg3782, i64 %5
  store float %subtract.61, ptr addrspace(1) %76, align 4
  %77 = getelementptr inbounds float, ptr addrspace(1) %arg3884, i64 %5
  store float %subtract.64, ptr addrspace(1) %77, align 4
  %78 = getelementptr inbounds float, ptr addrspace(1) %arg3986, i64 %5
  store float %subtract.67, ptr addrspace(1) %78, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @concatenate_297(ptr noalias nocapture readonly align 16 dereferenceable(2097152) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(4194304) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4194304) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(2097152) %arg3, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg4, ptr noalias nocapture writeonly align 128 dereferenceable(12845056) %arg5) local_unnamed_addr #5 {
entry:
  %arg576 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg474 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg372 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg270 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg168 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg066 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !222
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !200
  %2 = shl nuw nsw i32 %0, 10
  %3 = shl nuw nsw i32 %1, 2
  %linear_index_base = or i32 %2, %3
  %linear_index_base.frozen = freeze i32 %linear_index_base
  %4 = udiv i32 %linear_index_base.frozen, 392
  %5 = mul i32 %4, 392
  %.decomposed = sub i32 %linear_index_base.frozen, %5
  %linear_index1 = or i32 %linear_index_base, 1
  %6 = urem i32 %linear_index1, 392
  %linear_index2 = or i32 %linear_index_base, 2
  %7 = urem i32 %linear_index2, 392
  %linear_index3 = or i32 %linear_index_base, 3
  %8 = urem i32 %linear_index3, 392
  %9 = icmp ult i32 %.decomposed, 192
  br i1 %9, label %concatenate.pivot.64., label %concatenate.pivot.320.

concatenate.pivot.64.:                            ; preds = %entry
  %10 = icmp ult i32 %.decomposed, 64
  br i1 %10, label %concatenate.pivot.0., label %concatenate.pivot.64.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.64.
  %11 = udiv i32 %linear_index_base, 392
  %12 = shl nuw nsw i32 %11, 6
  %13 = add nuw nsw i32 %12, %.decomposed
  br label %concatenate.6.merge

concatenate.pivot.64.1:                           ; preds = %concatenate.pivot.64.
  %14 = add nsw i32 %.decomposed, -64
  %15 = udiv i32 %linear_index_base, 392
  %16 = shl nuw nsw i32 %15, 7
  %17 = add nuw nsw i32 %14, %16
  br label %concatenate.6.merge

concatenate.pivot.320.:                           ; preds = %entry
  %18 = icmp ult i32 %.decomposed, 320
  %19 = udiv i32 %linear_index_base, 392
  br i1 %18, label %concatenate.pivot.192.2, label %concatenate.pivot.384.

concatenate.pivot.192.2:                          ; preds = %concatenate.pivot.320.
  %20 = add nsw i32 %.decomposed, -192
  %21 = shl nuw nsw i32 %19, 7
  %22 = add nuw nsw i32 %20, %21
  br label %concatenate.6.merge

concatenate.pivot.384.:                           ; preds = %concatenate.pivot.320.
  %23 = icmp ult i32 %.decomposed, 384
  br i1 %23, label %concatenate.pivot.320.3, label %concatenate.pivot.384.4

concatenate.pivot.320.3:                          ; preds = %concatenate.pivot.384.
  %24 = add nsw i32 %.decomposed, -320
  %25 = shl nuw nsw i32 %19, 6
  %26 = add nuw nsw i32 %24, %25
  br label %concatenate.6.merge

concatenate.pivot.384.4:                          ; preds = %concatenate.pivot.384.
  %27 = add nsw i32 %.decomposed, -384
  %28 = shl nuw nsw i32 %19, 3
  %29 = add nuw nsw i32 %27, %28
  br label %concatenate.6.merge

concatenate.6.merge:                              ; preds = %concatenate.pivot.384.4, %concatenate.pivot.320.3, %concatenate.pivot.192.2, %concatenate.pivot.64.1, %concatenate.pivot.0.
  %.sink59 = phi i32 [ %29, %concatenate.pivot.384.4 ], [ %26, %concatenate.pivot.320.3 ], [ %22, %concatenate.pivot.192.2 ], [ %17, %concatenate.pivot.64.1 ], [ %13, %concatenate.pivot.0. ]
  %arg4.sink = phi ptr addrspace(1) [ %arg474, %concatenate.pivot.384.4 ], [ %arg372, %concatenate.pivot.320.3 ], [ %arg270, %concatenate.pivot.192.2 ], [ %arg168, %concatenate.pivot.64.1 ], [ %arg066, %concatenate.pivot.0. ]
  %30 = zext i32 %.sink59 to i64
  %31 = getelementptr inbounds float, ptr addrspace(1) %arg4.sink, i64 %30
  %32 = load float, ptr addrspace(1) %31, align 4, !invariant.load !195
  %33 = zext i32 %linear_index_base to i64
  %34 = getelementptr float, ptr addrspace(1) %arg576, i64 %33
  store float %32, ptr addrspace(1) %34, align 16
  %35 = icmp ult i32 %6, 192
  br i1 %35, label %concatenate.pivot.64.12, label %concatenate.pivot.320.15

concatenate.pivot.64.12:                          ; preds = %concatenate.6.merge
  %36 = icmp ult i32 %6, 64
  br i1 %36, label %concatenate.pivot.0.13, label %concatenate.pivot.64.14

concatenate.pivot.0.13:                           ; preds = %concatenate.pivot.64.12
  %37 = udiv i32 %linear_index_base, 392
  %38 = shl nuw nsw i32 %37, 6
  %39 = add nuw nsw i32 %38, %6
  br label %concatenate.6.merge5

concatenate.pivot.64.14:                          ; preds = %concatenate.pivot.64.12
  %40 = add nsw i32 %6, -64
  %41 = udiv i32 %linear_index_base, 392
  %42 = shl nuw nsw i32 %41, 7
  %43 = add nuw nsw i32 %40, %42
  br label %concatenate.6.merge5

concatenate.pivot.320.15:                         ; preds = %concatenate.6.merge
  %44 = icmp ult i32 %6, 320
  %45 = udiv i32 %linear_index_base, 392
  br i1 %44, label %concatenate.pivot.192.16, label %concatenate.pivot.384.17

concatenate.pivot.192.16:                         ; preds = %concatenate.pivot.320.15
  %46 = add nsw i32 %6, -192
  %47 = shl nuw nsw i32 %45, 7
  %48 = add nuw nsw i32 %46, %47
  br label %concatenate.6.merge5

concatenate.pivot.384.17:                         ; preds = %concatenate.pivot.320.15
  %49 = icmp ult i32 %6, 384
  br i1 %49, label %concatenate.pivot.320.18, label %concatenate.pivot.384.19

concatenate.pivot.320.18:                         ; preds = %concatenate.pivot.384.17
  %50 = add nsw i32 %6, -320
  %51 = shl nuw nsw i32 %45, 6
  %52 = add nuw nsw i32 %50, %51
  br label %concatenate.6.merge5

concatenate.pivot.384.19:                         ; preds = %concatenate.pivot.384.17
  %53 = add nsw i32 %6, -384
  %54 = shl nuw nsw i32 %45, 3
  %55 = add nuw nsw i32 %53, %54
  br label %concatenate.6.merge5

concatenate.6.merge5:                             ; preds = %concatenate.pivot.384.19, %concatenate.pivot.320.18, %concatenate.pivot.192.16, %concatenate.pivot.64.14, %concatenate.pivot.0.13
  %.sink61 = phi i32 [ %55, %concatenate.pivot.384.19 ], [ %52, %concatenate.pivot.320.18 ], [ %48, %concatenate.pivot.192.16 ], [ %43, %concatenate.pivot.64.14 ], [ %39, %concatenate.pivot.0.13 ]
  %arg4.sink60 = phi ptr addrspace(1) [ %arg474, %concatenate.pivot.384.19 ], [ %arg372, %concatenate.pivot.320.18 ], [ %arg270, %concatenate.pivot.192.16 ], [ %arg168, %concatenate.pivot.64.14 ], [ %arg066, %concatenate.pivot.0.13 ]
  %56 = zext i32 %.sink61 to i64
  %57 = getelementptr inbounds float, ptr addrspace(1) %arg4.sink60, i64 %56
  %58 = load float, ptr addrspace(1) %57, align 4, !invariant.load !195
  %59 = getelementptr inbounds float, ptr addrspace(1) %34, i64 1
  store float %58, ptr addrspace(1) %59, align 4
  %60 = icmp ult i32 %7, 192
  br i1 %60, label %concatenate.pivot.64.27, label %concatenate.pivot.320.30

concatenate.pivot.64.27:                          ; preds = %concatenate.6.merge5
  %61 = icmp ult i32 %7, 64
  br i1 %61, label %concatenate.pivot.0.28, label %concatenate.pivot.64.29

concatenate.pivot.0.28:                           ; preds = %concatenate.pivot.64.27
  %62 = udiv i32 %linear_index_base, 392
  %63 = shl nuw nsw i32 %62, 6
  %64 = add nuw nsw i32 %63, %7
  br label %concatenate.6.merge20

concatenate.pivot.64.29:                          ; preds = %concatenate.pivot.64.27
  %65 = add nsw i32 %7, -64
  %66 = udiv i32 %linear_index_base, 392
  %67 = shl nuw nsw i32 %66, 7
  %68 = add nuw nsw i32 %65, %67
  br label %concatenate.6.merge20

concatenate.pivot.320.30:                         ; preds = %concatenate.6.merge5
  %69 = icmp ult i32 %7, 320
  %70 = udiv i32 %linear_index_base, 392
  br i1 %69, label %concatenate.pivot.192.31, label %concatenate.pivot.384.32

concatenate.pivot.192.31:                         ; preds = %concatenate.pivot.320.30
  %71 = add nsw i32 %7, -192
  %72 = shl nuw nsw i32 %70, 7
  %73 = add nuw nsw i32 %71, %72
  br label %concatenate.6.merge20

concatenate.pivot.384.32:                         ; preds = %concatenate.pivot.320.30
  %74 = icmp ult i32 %7, 384
  br i1 %74, label %concatenate.pivot.320.33, label %concatenate.pivot.384.34

concatenate.pivot.320.33:                         ; preds = %concatenate.pivot.384.32
  %75 = add nsw i32 %7, -320
  %76 = shl nuw nsw i32 %70, 6
  %77 = add nuw nsw i32 %75, %76
  br label %concatenate.6.merge20

concatenate.pivot.384.34:                         ; preds = %concatenate.pivot.384.32
  %78 = add nsw i32 %7, -384
  %79 = shl nuw nsw i32 %70, 3
  %80 = add nuw nsw i32 %78, %79
  br label %concatenate.6.merge20

concatenate.6.merge20:                            ; preds = %concatenate.pivot.384.34, %concatenate.pivot.320.33, %concatenate.pivot.192.31, %concatenate.pivot.64.29, %concatenate.pivot.0.28
  %.sink63 = phi i32 [ %80, %concatenate.pivot.384.34 ], [ %77, %concatenate.pivot.320.33 ], [ %73, %concatenate.pivot.192.31 ], [ %68, %concatenate.pivot.64.29 ], [ %64, %concatenate.pivot.0.28 ]
  %arg4.sink62 = phi ptr addrspace(1) [ %arg474, %concatenate.pivot.384.34 ], [ %arg372, %concatenate.pivot.320.33 ], [ %arg270, %concatenate.pivot.192.31 ], [ %arg168, %concatenate.pivot.64.29 ], [ %arg066, %concatenate.pivot.0.28 ]
  %81 = zext i32 %.sink63 to i64
  %82 = getelementptr inbounds float, ptr addrspace(1) %arg4.sink62, i64 %81
  %83 = load float, ptr addrspace(1) %82, align 4, !invariant.load !195
  %84 = getelementptr inbounds float, ptr addrspace(1) %34, i64 2
  store float %83, ptr addrspace(1) %84, align 8
  %85 = icmp ult i32 %8, 192
  br i1 %85, label %concatenate.pivot.64.42, label %concatenate.pivot.320.45

concatenate.pivot.64.42:                          ; preds = %concatenate.6.merge20
  %86 = icmp ult i32 %8, 64
  br i1 %86, label %concatenate.pivot.0.43, label %concatenate.pivot.64.44

concatenate.pivot.0.43:                           ; preds = %concatenate.pivot.64.42
  %87 = udiv i32 %linear_index_base, 392
  %88 = shl nuw nsw i32 %87, 6
  %89 = add nuw nsw i32 %88, %8
  br label %concatenate.6.merge35

concatenate.pivot.64.44:                          ; preds = %concatenate.pivot.64.42
  %90 = add nsw i32 %8, -64
  %91 = udiv i32 %linear_index_base, 392
  %92 = shl nuw nsw i32 %91, 7
  %93 = add nuw nsw i32 %90, %92
  br label %concatenate.6.merge35

concatenate.pivot.320.45:                         ; preds = %concatenate.6.merge20
  %94 = icmp ult i32 %8, 320
  br i1 %94, label %concatenate.pivot.192.46, label %concatenate.pivot.384.47

concatenate.pivot.192.46:                         ; preds = %concatenate.pivot.320.45
  %95 = add nsw i32 %8, -192
  %96 = shl nuw nsw i32 %4, 7
  %97 = add nuw nsw i32 %95, %96
  br label %concatenate.6.merge35

concatenate.pivot.384.47:                         ; preds = %concatenate.pivot.320.45
  %98 = icmp ult i32 %8, 384
  br i1 %98, label %concatenate.pivot.320.48, label %concatenate.pivot.384.49

concatenate.pivot.320.48:                         ; preds = %concatenate.pivot.384.47
  %99 = add nsw i32 %8, -320
  %100 = shl nuw nsw i32 %4, 6
  %101 = add nuw nsw i32 %99, %100
  br label %concatenate.6.merge35

concatenate.pivot.384.49:                         ; preds = %concatenate.pivot.384.47
  %102 = add nsw i32 %8, -384
  %103 = shl nuw nsw i32 %4, 3
  %104 = add nuw nsw i32 %102, %103
  br label %concatenate.6.merge35

concatenate.6.merge35:                            ; preds = %concatenate.pivot.384.49, %concatenate.pivot.320.48, %concatenate.pivot.192.46, %concatenate.pivot.64.44, %concatenate.pivot.0.43
  %.sink65 = phi i32 [ %104, %concatenate.pivot.384.49 ], [ %101, %concatenate.pivot.320.48 ], [ %97, %concatenate.pivot.192.46 ], [ %93, %concatenate.pivot.64.44 ], [ %89, %concatenate.pivot.0.43 ]
  %arg4.sink64 = phi ptr addrspace(1) [ %arg474, %concatenate.pivot.384.49 ], [ %arg372, %concatenate.pivot.320.48 ], [ %arg270, %concatenate.pivot.192.46 ], [ %arg168, %concatenate.pivot.64.44 ], [ %arg066, %concatenate.pivot.0.43 ]
  %105 = zext i32 %.sink65 to i64
  %106 = getelementptr inbounds float, ptr addrspace(1) %arg4.sink64, i64 %105
  %107 = load float, ptr addrspace(1) %106, align 4, !invariant.load !195
  %108 = getelementptr inbounds float, ptr addrspace(1) %34, i64 3
  store float %107, ptr addrspace(1) %108, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_365(ptr noalias nocapture readonly align 16 dereferenceable(1048576) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(11534336) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(1048576) %arg3, ptr noalias nocapture readonly align 128 dereferenceable(7340032) %arg4, ptr noalias nocapture readonly align 128 dereferenceable(11534336) %arg5, ptr noalias nocapture readonly align 128 dereferenceable(11534336) %arg6, ptr noalias nocapture readonly align 16 dereferenceable(1048576) %arg7, ptr noalias nocapture readonly align 128 dereferenceable(7340032) %arg8, ptr noalias nocapture readonly align 128 dereferenceable(11534336) %arg9, ptr noalias nocapture readonly align 128 dereferenceable(11796480) %arg10, ptr noalias nocapture readonly align 16 dereferenceable(1048576) %arg11, ptr noalias nocapture readonly align 128 dereferenceable(7340032) %arg12, ptr noalias nocapture readonly align 128 dereferenceable(11534336) %arg13, ptr noalias nocapture readonly align 128 dereferenceable(11796480) %arg14, ptr noalias nocapture readonly align 16 dereferenceable(1048576) %arg15, ptr noalias nocapture readonly align 128 dereferenceable(7340032) %arg16, ptr noalias nocapture readonly align 128 dereferenceable(11534336) %arg17, ptr noalias nocapture readonly align 128 dereferenceable(11796480) %arg18, ptr noalias nocapture readonly align 16 dereferenceable(1048576) %arg19, ptr noalias nocapture readonly align 128 dereferenceable(11534336) %arg20, ptr noalias nocapture readonly align 16 dereferenceable(1048576) %arg21, ptr noalias nocapture readonly align 128 dereferenceable(9961472) %arg22, ptr noalias nocapture readonly align 16 dereferenceable(1048576) %arg23, ptr noalias nocapture readonly align 128 dereferenceable(9961472) %arg24, ptr noalias nocapture readonly align 16 dereferenceable(1048576) %arg25, ptr noalias nocapture readonly align 128 dereferenceable(9961472) %arg26, ptr noalias nocapture readonly align 16 dereferenceable(1048576) %arg27, ptr noalias nocapture readonly align 128 dereferenceable(11534336) %arg28, ptr noalias nocapture readonly align 16 dereferenceable(1048576) %arg29, ptr noalias nocapture readonly align 128 dereferenceable(9961472) %arg30, ptr noalias nocapture readonly align 16 dereferenceable(1048576) %arg31, ptr noalias nocapture readonly align 128 dereferenceable(9961472) %arg32, ptr noalias nocapture readonly align 16 dereferenceable(1048576) %arg33, ptr noalias nocapture readonly align 128 dereferenceable(11534336) %arg34, ptr noalias nocapture writeonly align 128 dereferenceable(1048576) %arg35, ptr noalias nocapture writeonly align 128 dereferenceable(1048576) %arg36, ptr noalias nocapture writeonly align 128 dereferenceable(1048576) %arg37, ptr noalias nocapture writeonly align 128 dereferenceable(1048576) %arg38, ptr noalias nocapture writeonly align 128 dereferenceable(1048576) %arg39, ptr noalias nocapture writeonly align 128 dereferenceable(1048576) %arg40, ptr noalias nocapture writeonly align 128 dereferenceable(1048576) %arg41, ptr noalias nocapture writeonly align 128 dereferenceable(1048576) %arg42, ptr noalias nocapture writeonly align 128 dereferenceable(1048576) %arg43, ptr noalias nocapture writeonly align 128 dereferenceable(1048576) %arg44, ptr noalias nocapture writeonly align 128 dereferenceable(1048576) %arg45, ptr noalias nocapture writeonly align 128 dereferenceable(1048576) %arg46, ptr noalias nocapture writeonly align 128 dereferenceable(1048576) %arg47) local_unnamed_addr #6 {
entry:
  %arg47197 = addrspacecast ptr %arg47 to ptr addrspace(1)
  %arg46195 = addrspacecast ptr %arg46 to ptr addrspace(1)
  %arg45193 = addrspacecast ptr %arg45 to ptr addrspace(1)
  %arg44191 = addrspacecast ptr %arg44 to ptr addrspace(1)
  %arg43189 = addrspacecast ptr %arg43 to ptr addrspace(1)
  %arg42187 = addrspacecast ptr %arg42 to ptr addrspace(1)
  %arg41185 = addrspacecast ptr %arg41 to ptr addrspace(1)
  %arg40183 = addrspacecast ptr %arg40 to ptr addrspace(1)
  %arg39181 = addrspacecast ptr %arg39 to ptr addrspace(1)
  %arg38179 = addrspacecast ptr %arg38 to ptr addrspace(1)
  %arg37177 = addrspacecast ptr %arg37 to ptr addrspace(1)
  %arg36175 = addrspacecast ptr %arg36 to ptr addrspace(1)
  %arg35173 = addrspacecast ptr %arg35 to ptr addrspace(1)
  %arg34171 = addrspacecast ptr %arg34 to ptr addrspace(1)
  %arg33169 = addrspacecast ptr %arg33 to ptr addrspace(1)
  %arg32167 = addrspacecast ptr %arg32 to ptr addrspace(1)
  %arg31165 = addrspacecast ptr %arg31 to ptr addrspace(1)
  %arg30163 = addrspacecast ptr %arg30 to ptr addrspace(1)
  %arg29161 = addrspacecast ptr %arg29 to ptr addrspace(1)
  %arg28159 = addrspacecast ptr %arg28 to ptr addrspace(1)
  %arg27157 = addrspacecast ptr %arg27 to ptr addrspace(1)
  %arg26155 = addrspacecast ptr %arg26 to ptr addrspace(1)
  %arg25153 = addrspacecast ptr %arg25 to ptr addrspace(1)
  %arg24151 = addrspacecast ptr %arg24 to ptr addrspace(1)
  %arg23149 = addrspacecast ptr %arg23 to ptr addrspace(1)
  %arg22147 = addrspacecast ptr %arg22 to ptr addrspace(1)
  %arg21145 = addrspacecast ptr %arg21 to ptr addrspace(1)
  %arg20143 = addrspacecast ptr %arg20 to ptr addrspace(1)
  %arg19141 = addrspacecast ptr %arg19 to ptr addrspace(1)
  %arg18139 = addrspacecast ptr %arg18 to ptr addrspace(1)
  %arg17137 = addrspacecast ptr %arg17 to ptr addrspace(1)
  %arg16135 = addrspacecast ptr %arg16 to ptr addrspace(1)
  %arg15133 = addrspacecast ptr %arg15 to ptr addrspace(1)
  %arg14131 = addrspacecast ptr %arg14 to ptr addrspace(1)
  %arg13129 = addrspacecast ptr %arg13 to ptr addrspace(1)
  %arg12127 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg11125 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg10123 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg9121 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg8119 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg7117 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg6115 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg5113 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg4111 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg3109 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg2107 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg1105 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg0103 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !200
  %1 = shl nuw nsw i32 %0, 10
  %2 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !200
  %3 = shl nuw nsw i32 %2, 2
  %linear_index_base = or i32 %1, %3
  %linear_index3 = or i32 %linear_index_base, 3
  %4 = lshr i32 %linear_index_base, 5
  %5 = and i32 %linear_index3, 31
  %linear_index2 = or i32 %linear_index_base, 2
  %6 = and i32 %linear_index2, 30
  %linear_index1 = or i32 %linear_index_base, 1
  %7 = and i32 %linear_index1, 29
  %8 = and i32 %3, 28
  %9 = zext i32 %linear_index_base to i64
  %10 = getelementptr float, ptr addrspace(1) %arg0103, i64 %9
  %11 = load <4 x float>, ptr addrspace(1) %10, align 16, !invariant.load !195
  %12 = extractelement <4 x float> %11, i32 0
  %13 = extractelement <4 x float> %11, i32 1
  %14 = extractelement <4 x float> %11, i32 2
  %15 = extractelement <4 x float> %11, i32 3
  %16 = load float, ptr addrspace(1) %arg2107, align 16, !invariant.load !195
  %17 = zext i32 %4 to i64
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds [8192 x [352 x float]], ptr addrspace(1) %arg1105, i64 0, i64 %17, i64 %18
  %20 = load <2 x float>, ptr addrspace(1) %19, align 16, !invariant.load !195
  %21 = extractelement <2 x float> %20, i32 0
  %22 = extractelement <2 x float> %20, i32 1
  %multiply.38 = fmul float %16, %21
  %subtract.39 = fsub float %12, %multiply.38
  %23 = getelementptr float, ptr addrspace(1) %arg3109, i64 %9
  %24 = load <4 x float>, ptr addrspace(1) %23, align 16, !invariant.load !195
  %25 = extractelement <4 x float> %24, i32 0
  %26 = extractelement <4 x float> %24, i32 1
  %27 = extractelement <4 x float> %24, i32 2
  %28 = extractelement <4 x float> %24, i32 3
  %29 = getelementptr inbounds [8192 x [352 x float]], ptr addrspace(1) %arg6115, i64 0, i64 %17, i64 %18
  %30 = load <2 x float>, ptr addrspace(1) %29, align 16, !invariant.load !195
  %31 = extractelement <2 x float> %30, i32 0
  %32 = extractelement <2 x float> %30, i32 1
  %33 = getelementptr inbounds [8192 x [352 x float]], ptr addrspace(1) %arg5113, i64 0, i64 %17, i64 %18
  %34 = load <2 x float>, ptr addrspace(1) %33, align 16, !invariant.load !195
  %35 = extractelement <2 x float> %34, i32 0
  %36 = extractelement <2 x float> %34, i32 1
  %add.42 = fadd float %31, %35
  %37 = getelementptr inbounds [8192 x [224 x float]], ptr addrspace(1) %arg4111, i64 0, i64 %17, i64 %18
  %38 = load <2 x float>, ptr addrspace(1) %37, align 16, !invariant.load !195
  %39 = extractelement <2 x float> %38, i32 0
  %40 = extractelement <2 x float> %38, i32 1
  %add.44 = fadd float %add.42, %39
  %multiply.46 = fmul float %16, %add.44
  %subtract.47 = fsub float %25, %multiply.46
  %41 = getelementptr float, ptr addrspace(1) %arg7117, i64 %9
  %42 = load <4 x float>, ptr addrspace(1) %41, align 16, !invariant.load !195
  %43 = extractelement <4 x float> %42, i32 0
  %44 = extractelement <4 x float> %42, i32 1
  %45 = extractelement <4 x float> %42, i32 2
  %46 = extractelement <4 x float> %42, i32 3
  %47 = getelementptr inbounds [8192 x [360 x float]], ptr addrspace(1) %arg10123, i64 0, i64 %17, i64 %18
  %48 = load <2 x float>, ptr addrspace(1) %47, align 16, !invariant.load !195
  %49 = extractelement <2 x float> %48, i32 0
  %50 = extractelement <2 x float> %48, i32 1
  %51 = getelementptr inbounds [8192 x [352 x float]], ptr addrspace(1) %arg9121, i64 0, i64 %17, i64 %18
  %52 = load <2 x float>, ptr addrspace(1) %51, align 16, !invariant.load !195
  %53 = extractelement <2 x float> %52, i32 0
  %54 = extractelement <2 x float> %52, i32 1
  %add.50 = fadd float %49, %53
  %55 = getelementptr inbounds [8192 x [224 x float]], ptr addrspace(1) %arg8119, i64 0, i64 %17, i64 %18
  %56 = load <2 x float>, ptr addrspace(1) %55, align 16, !invariant.load !195
  %57 = extractelement <2 x float> %56, i32 0
  %58 = extractelement <2 x float> %56, i32 1
  %add.52 = fadd float %add.50, %57
  %multiply.54 = fmul float %16, %add.52
  %subtract.55 = fsub float %43, %multiply.54
  %59 = getelementptr float, ptr addrspace(1) %arg11125, i64 %9
  %60 = load <4 x float>, ptr addrspace(1) %59, align 16, !invariant.load !195
  %61 = extractelement <4 x float> %60, i32 0
  %62 = extractelement <4 x float> %60, i32 1
  %63 = extractelement <4 x float> %60, i32 2
  %64 = extractelement <4 x float> %60, i32 3
  %65 = getelementptr inbounds [8192 x [360 x float]], ptr addrspace(1) %arg14131, i64 0, i64 %17, i64 %18
  %66 = load <2 x float>, ptr addrspace(1) %65, align 16, !invariant.load !195
  %67 = extractelement <2 x float> %66, i32 0
  %68 = extractelement <2 x float> %66, i32 1
  %69 = getelementptr inbounds [8192 x [352 x float]], ptr addrspace(1) %arg13129, i64 0, i64 %17, i64 %18
  %70 = load <2 x float>, ptr addrspace(1) %69, align 16, !invariant.load !195
  %71 = extractelement <2 x float> %70, i32 0
  %72 = extractelement <2 x float> %70, i32 1
  %add.58 = fadd float %67, %71
  %73 = getelementptr inbounds [8192 x [224 x float]], ptr addrspace(1) %arg12127, i64 0, i64 %17, i64 %18
  %74 = load <2 x float>, ptr addrspace(1) %73, align 16, !invariant.load !195
  %75 = extractelement <2 x float> %74, i32 0
  %76 = extractelement <2 x float> %74, i32 1
  %add.60 = fadd float %add.58, %75
  %multiply.62 = fmul float %16, %add.60
  %subtract.63 = fsub float %61, %multiply.62
  %77 = getelementptr float, ptr addrspace(1) %arg15133, i64 %9
  %78 = load <4 x float>, ptr addrspace(1) %77, align 16, !invariant.load !195
  %79 = extractelement <4 x float> %78, i32 0
  %80 = extractelement <4 x float> %78, i32 1
  %81 = extractelement <4 x float> %78, i32 2
  %82 = extractelement <4 x float> %78, i32 3
  %83 = getelementptr inbounds [8192 x [360 x float]], ptr addrspace(1) %arg18139, i64 0, i64 %17, i64 %18
  %84 = load <2 x float>, ptr addrspace(1) %83, align 16, !invariant.load !195
  %85 = extractelement <2 x float> %84, i32 0
  %86 = extractelement <2 x float> %84, i32 1
  %87 = getelementptr inbounds [8192 x [352 x float]], ptr addrspace(1) %arg17137, i64 0, i64 %17, i64 %18
  %88 = load <2 x float>, ptr addrspace(1) %87, align 16, !invariant.load !195
  %89 = extractelement <2 x float> %88, i32 0
  %90 = extractelement <2 x float> %88, i32 1
  %add.66 = fadd float %85, %89
  %91 = getelementptr inbounds [8192 x [224 x float]], ptr addrspace(1) %arg16135, i64 0, i64 %17, i64 %18
  %92 = load <2 x float>, ptr addrspace(1) %91, align 16, !invariant.load !195
  %93 = extractelement <2 x float> %92, i32 0
  %94 = extractelement <2 x float> %92, i32 1
  %add.68 = fadd float %add.66, %93
  %multiply.70 = fmul float %16, %add.68
  %subtract.71 = fsub float %79, %multiply.70
  %95 = getelementptr float, ptr addrspace(1) %arg19141, i64 %9
  %96 = load <4 x float>, ptr addrspace(1) %95, align 16, !invariant.load !195
  %97 = extractelement <4 x float> %96, i32 0
  %98 = extractelement <4 x float> %96, i32 1
  %99 = extractelement <4 x float> %96, i32 2
  %100 = extractelement <4 x float> %96, i32 3
  %101 = getelementptr inbounds [8192 x [352 x float]], ptr addrspace(1) %arg20143, i64 0, i64 %17, i64 %18
  %102 = load <2 x float>, ptr addrspace(1) %101, align 16, !invariant.load !195
  %103 = extractelement <2 x float> %102, i32 0
  %104 = extractelement <2 x float> %102, i32 1
  %multiply.73 = fmul float %16, %103
  %subtract.74 = fsub float %97, %multiply.73
  %105 = getelementptr float, ptr addrspace(1) %arg21145, i64 %9
  %106 = load <4 x float>, ptr addrspace(1) %105, align 16, !invariant.load !195
  %107 = extractelement <4 x float> %106, i32 0
  %108 = extractelement <4 x float> %106, i32 1
  %109 = extractelement <4 x float> %106, i32 2
  %110 = extractelement <4 x float> %106, i32 3
  %111 = getelementptr [8192 x [304 x float]], ptr addrspace(1) %arg22147, i64 0, i64 %17, i64 %18
  %112 = getelementptr inbounds float, ptr addrspace(1) %111, i64 16
  %113 = load <2 x float>, ptr addrspace(1) %112, align 16, !invariant.load !195
  %114 = extractelement <2 x float> %113, i32 0
  %115 = extractelement <2 x float> %113, i32 1
  %multiply.76 = fmul float %16, %114
  %subtract.77 = fsub float %107, %multiply.76
  %116 = getelementptr float, ptr addrspace(1) %arg23149, i64 %9
  %117 = load <4 x float>, ptr addrspace(1) %116, align 16, !invariant.load !195
  %118 = extractelement <4 x float> %117, i32 0
  %119 = extractelement <4 x float> %117, i32 1
  %120 = extractelement <4 x float> %117, i32 2
  %121 = extractelement <4 x float> %117, i32 3
  %122 = getelementptr [8192 x [304 x float]], ptr addrspace(1) %arg24151, i64 0, i64 %17, i64 %18
  %123 = getelementptr inbounds float, ptr addrspace(1) %122, i64 16
  %124 = load <2 x float>, ptr addrspace(1) %123, align 16, !invariant.load !195
  %125 = extractelement <2 x float> %124, i32 0
  %126 = extractelement <2 x float> %124, i32 1
  %multiply.79 = fmul float %16, %125
  %subtract.80 = fsub float %118, %multiply.79
  %127 = getelementptr float, ptr addrspace(1) %arg25153, i64 %9
  %128 = load <4 x float>, ptr addrspace(1) %127, align 16, !invariant.load !195
  %129 = extractelement <4 x float> %128, i32 0
  %130 = extractelement <4 x float> %128, i32 1
  %131 = extractelement <4 x float> %128, i32 2
  %132 = extractelement <4 x float> %128, i32 3
  %133 = getelementptr [8192 x [304 x float]], ptr addrspace(1) %arg26155, i64 0, i64 %17, i64 %18
  %134 = getelementptr inbounds float, ptr addrspace(1) %133, i64 16
  %135 = load <2 x float>, ptr addrspace(1) %134, align 16, !invariant.load !195
  %136 = extractelement <2 x float> %135, i32 0
  %137 = extractelement <2 x float> %135, i32 1
  %multiply.82 = fmul float %16, %136
  %subtract.83 = fsub float %129, %multiply.82
  %138 = getelementptr float, ptr addrspace(1) %arg27157, i64 %9
  %139 = load <4 x float>, ptr addrspace(1) %138, align 16, !invariant.load !195
  %140 = extractelement <4 x float> %139, i32 0
  %141 = extractelement <4 x float> %139, i32 1
  %142 = extractelement <4 x float> %139, i32 2
  %143 = extractelement <4 x float> %139, i32 3
  %144 = getelementptr inbounds [8192 x [352 x float]], ptr addrspace(1) %arg28159, i64 0, i64 %17, i64 %18
  %145 = load <2 x float>, ptr addrspace(1) %144, align 16, !invariant.load !195
  %146 = extractelement <2 x float> %145, i32 0
  %147 = extractelement <2 x float> %145, i32 1
  %multiply.85 = fmul float %16, %146
  %subtract.86 = fsub float %140, %multiply.85
  %148 = getelementptr float, ptr addrspace(1) %arg29161, i64 %9
  %149 = load <4 x float>, ptr addrspace(1) %148, align 16, !invariant.load !195
  %150 = extractelement <4 x float> %149, i32 0
  %151 = extractelement <4 x float> %149, i32 1
  %152 = extractelement <4 x float> %149, i32 2
  %153 = extractelement <4 x float> %149, i32 3
  %154 = getelementptr [8192 x [304 x float]], ptr addrspace(1) %arg30163, i64 0, i64 %17, i64 %18
  %155 = getelementptr inbounds float, ptr addrspace(1) %154, i64 16
  %156 = load <2 x float>, ptr addrspace(1) %155, align 16, !invariant.load !195
  %157 = extractelement <2 x float> %156, i32 0
  %158 = extractelement <2 x float> %156, i32 1
  %multiply.88 = fmul float %16, %157
  %subtract.89 = fsub float %150, %multiply.88
  %159 = getelementptr float, ptr addrspace(1) %arg31165, i64 %9
  %160 = load <4 x float>, ptr addrspace(1) %159, align 16, !invariant.load !195
  %161 = extractelement <4 x float> %160, i32 0
  %162 = extractelement <4 x float> %160, i32 1
  %163 = extractelement <4 x float> %160, i32 2
  %164 = extractelement <4 x float> %160, i32 3
  %165 = getelementptr [8192 x [304 x float]], ptr addrspace(1) %arg32167, i64 0, i64 %17, i64 %18
  %166 = getelementptr inbounds float, ptr addrspace(1) %165, i64 16
  %167 = load <2 x float>, ptr addrspace(1) %166, align 16, !invariant.load !195
  %168 = extractelement <2 x float> %167, i32 0
  %169 = extractelement <2 x float> %167, i32 1
  %multiply.91 = fmul float %16, %168
  %subtract.92 = fsub float %161, %multiply.91
  %170 = getelementptr float, ptr addrspace(1) %arg33169, i64 %9
  %171 = load <4 x float>, ptr addrspace(1) %170, align 16, !invariant.load !195
  %172 = extractelement <4 x float> %171, i32 0
  %173 = extractelement <4 x float> %171, i32 1
  %174 = extractelement <4 x float> %171, i32 2
  %175 = extractelement <4 x float> %171, i32 3
  %176 = getelementptr inbounds [8192 x [352 x float]], ptr addrspace(1) %arg34171, i64 0, i64 %17, i64 %18
  %177 = load <2 x float>, ptr addrspace(1) %176, align 16, !invariant.load !195
  %178 = extractelement <2 x float> %177, i32 0
  %179 = extractelement <2 x float> %177, i32 1
  %multiply.94 = fmul float %16, %178
  %subtract.95 = fsub float %172, %multiply.94
  %180 = getelementptr float, ptr addrspace(1) %arg35173, i64 %9
  %181 = getelementptr float, ptr addrspace(1) %arg36175, i64 %9
  %182 = getelementptr float, ptr addrspace(1) %arg37177, i64 %9
  %183 = getelementptr float, ptr addrspace(1) %arg38179, i64 %9
  %184 = getelementptr float, ptr addrspace(1) %arg39181, i64 %9
  %185 = getelementptr float, ptr addrspace(1) %arg40183, i64 %9
  %186 = getelementptr float, ptr addrspace(1) %arg41185, i64 %9
  %187 = getelementptr float, ptr addrspace(1) %arg42187, i64 %9
  %188 = getelementptr float, ptr addrspace(1) %arg43189, i64 %9
  %189 = getelementptr float, ptr addrspace(1) %arg44191, i64 %9
  %190 = getelementptr float, ptr addrspace(1) %arg45193, i64 %9
  %191 = getelementptr float, ptr addrspace(1) %arg46195, i64 %9
  %192 = getelementptr float, ptr addrspace(1) %arg47197, i64 %9
  %193 = zext i32 %7 to i64
  %multiply.381 = fmul float %16, %22
  %subtract.392 = fsub float %13, %multiply.381
  %add.423 = fadd float %32, %36
  %add.444 = fadd float %add.423, %40
  %multiply.465 = fmul float %16, %add.444
  %subtract.476 = fsub float %26, %multiply.465
  %add.507 = fadd float %50, %54
  %add.528 = fadd float %add.507, %58
  %multiply.549 = fmul float %16, %add.528
  %subtract.5510 = fsub float %44, %multiply.549
  %add.5811 = fadd float %68, %72
  %add.6012 = fadd float %add.5811, %76
  %multiply.6213 = fmul float %16, %add.6012
  %subtract.6314 = fsub float %62, %multiply.6213
  %add.6615 = fadd float %86, %90
  %add.6816 = fadd float %add.6615, %94
  %multiply.7017 = fmul float %16, %add.6816
  %subtract.7118 = fsub float %80, %multiply.7017
  %multiply.7319 = fmul float %16, %104
  %subtract.7420 = fsub float %98, %multiply.7319
  %194 = getelementptr [8192 x [304 x float]], ptr addrspace(1) %arg22147, i64 0, i64 %17, i64 %193
  %multiply.7621 = fmul float %16, %115
  %subtract.7722 = fsub float %108, %multiply.7621
  %195 = getelementptr [8192 x [304 x float]], ptr addrspace(1) %arg24151, i64 0, i64 %17, i64 %193
  %multiply.7923 = fmul float %16, %126
  %subtract.8024 = fsub float %119, %multiply.7923
  %196 = getelementptr [8192 x [304 x float]], ptr addrspace(1) %arg26155, i64 0, i64 %17, i64 %193
  %multiply.8225 = fmul float %16, %137
  %subtract.8326 = fsub float %130, %multiply.8225
  %multiply.8527 = fmul float %16, %147
  %subtract.8628 = fsub float %141, %multiply.8527
  %197 = getelementptr [8192 x [304 x float]], ptr addrspace(1) %arg30163, i64 0, i64 %17, i64 %193
  %multiply.8829 = fmul float %16, %158
  %subtract.8930 = fsub float %151, %multiply.8829
  %198 = getelementptr [8192 x [304 x float]], ptr addrspace(1) %arg32167, i64 0, i64 %17, i64 %193
  %multiply.9131 = fmul float %16, %169
  %subtract.9232 = fsub float %162, %multiply.9131
  %multiply.9433 = fmul float %16, %179
  %subtract.9534 = fsub float %173, %multiply.9433
  %199 = zext i32 %6 to i64
  %200 = getelementptr inbounds [8192 x [352 x float]], ptr addrspace(1) %arg1105, i64 0, i64 %17, i64 %199
  %201 = load float, ptr addrspace(1) %200, align 8, !invariant.load !195
  %multiply.3835 = fmul float %16, %201
  %subtract.3936 = fsub float %14, %multiply.3835
  %202 = getelementptr inbounds [8192 x [352 x float]], ptr addrspace(1) %arg6115, i64 0, i64 %17, i64 %199
  %203 = load float, ptr addrspace(1) %202, align 8, !invariant.load !195
  %204 = getelementptr inbounds [8192 x [352 x float]], ptr addrspace(1) %arg5113, i64 0, i64 %17, i64 %199
  %205 = load float, ptr addrspace(1) %204, align 8, !invariant.load !195
  %add.4237 = fadd float %203, %205
  %206 = getelementptr inbounds [8192 x [224 x float]], ptr addrspace(1) %arg4111, i64 0, i64 %17, i64 %199
  %207 = load float, ptr addrspace(1) %206, align 8, !invariant.load !195
  %add.4438 = fadd float %add.4237, %207
  %multiply.4639 = fmul float %16, %add.4438
  %subtract.4740 = fsub float %27, %multiply.4639
  %208 = getelementptr inbounds [8192 x [360 x float]], ptr addrspace(1) %arg10123, i64 0, i64 %17, i64 %199
  %209 = load float, ptr addrspace(1) %208, align 8, !invariant.load !195
  %210 = getelementptr inbounds [8192 x [352 x float]], ptr addrspace(1) %arg9121, i64 0, i64 %17, i64 %199
  %211 = load float, ptr addrspace(1) %210, align 8, !invariant.load !195
  %add.5041 = fadd float %209, %211
  %212 = getelementptr inbounds [8192 x [224 x float]], ptr addrspace(1) %arg8119, i64 0, i64 %17, i64 %199
  %213 = load float, ptr addrspace(1) %212, align 8, !invariant.load !195
  %add.5242 = fadd float %add.5041, %213
  %multiply.5443 = fmul float %16, %add.5242
  %subtract.5544 = fsub float %45, %multiply.5443
  %214 = getelementptr inbounds [8192 x [360 x float]], ptr addrspace(1) %arg14131, i64 0, i64 %17, i64 %199
  %215 = load float, ptr addrspace(1) %214, align 8, !invariant.load !195
  %216 = getelementptr inbounds [8192 x [352 x float]], ptr addrspace(1) %arg13129, i64 0, i64 %17, i64 %199
  %217 = load float, ptr addrspace(1) %216, align 8, !invariant.load !195
  %add.5845 = fadd float %215, %217
  %218 = getelementptr inbounds [8192 x [224 x float]], ptr addrspace(1) %arg12127, i64 0, i64 %17, i64 %199
  %219 = load float, ptr addrspace(1) %218, align 8, !invariant.load !195
  %add.6046 = fadd float %add.5845, %219
  %multiply.6247 = fmul float %16, %add.6046
  %subtract.6348 = fsub float %63, %multiply.6247
  %220 = getelementptr inbounds [8192 x [360 x float]], ptr addrspace(1) %arg18139, i64 0, i64 %17, i64 %199
  %221 = load float, ptr addrspace(1) %220, align 8, !invariant.load !195
  %222 = getelementptr inbounds [8192 x [352 x float]], ptr addrspace(1) %arg17137, i64 0, i64 %17, i64 %199
  %223 = load float, ptr addrspace(1) %222, align 8, !invariant.load !195
  %add.6649 = fadd float %221, %223
  %224 = getelementptr inbounds [8192 x [224 x float]], ptr addrspace(1) %arg16135, i64 0, i64 %17, i64 %199
  %225 = load float, ptr addrspace(1) %224, align 8, !invariant.load !195
  %add.6850 = fadd float %add.6649, %225
  %multiply.7051 = fmul float %16, %add.6850
  %subtract.7152 = fsub float %81, %multiply.7051
  %226 = getelementptr inbounds [8192 x [352 x float]], ptr addrspace(1) %arg20143, i64 0, i64 %17, i64 %199
  %227 = load float, ptr addrspace(1) %226, align 8, !invariant.load !195
  %multiply.7353 = fmul float %16, %227
  %subtract.7454 = fsub float %99, %multiply.7353
  %228 = getelementptr [8192 x [304 x float]], ptr addrspace(1) %arg22147, i64 0, i64 %17, i64 %199
  %229 = getelementptr inbounds float, ptr addrspace(1) %228, i64 16
  %230 = load float, ptr addrspace(1) %229, align 8, !invariant.load !195
  %multiply.7655 = fmul float %16, %230
  %subtract.7756 = fsub float %109, %multiply.7655
  %231 = getelementptr [8192 x [304 x float]], ptr addrspace(1) %arg24151, i64 0, i64 %17, i64 %199
  %232 = getelementptr inbounds float, ptr addrspace(1) %231, i64 16
  %233 = load float, ptr addrspace(1) %232, align 8, !invariant.load !195
  %multiply.7957 = fmul float %16, %233
  %subtract.8058 = fsub float %120, %multiply.7957
  %234 = getelementptr [8192 x [304 x float]], ptr addrspace(1) %arg26155, i64 0, i64 %17, i64 %199
  %235 = getelementptr inbounds float, ptr addrspace(1) %234, i64 16
  %236 = load float, ptr addrspace(1) %235, align 8, !invariant.load !195
  %multiply.8259 = fmul float %16, %236
  %subtract.8360 = fsub float %131, %multiply.8259
  %237 = getelementptr inbounds [8192 x [352 x float]], ptr addrspace(1) %arg28159, i64 0, i64 %17, i64 %199
  %238 = load float, ptr addrspace(1) %237, align 8, !invariant.load !195
  %multiply.8561 = fmul float %16, %238
  %subtract.8662 = fsub float %142, %multiply.8561
  %239 = getelementptr [8192 x [304 x float]], ptr addrspace(1) %arg30163, i64 0, i64 %17, i64 %199
  %240 = getelementptr inbounds float, ptr addrspace(1) %239, i64 16
  %241 = load float, ptr addrspace(1) %240, align 8, !invariant.load !195
  %multiply.8863 = fmul float %16, %241
  %subtract.8964 = fsub float %152, %multiply.8863
  %242 = getelementptr [8192 x [304 x float]], ptr addrspace(1) %arg32167, i64 0, i64 %17, i64 %199
  %243 = getelementptr inbounds float, ptr addrspace(1) %242, i64 16
  %244 = load float, ptr addrspace(1) %243, align 8, !invariant.load !195
  %multiply.9165 = fmul float %16, %244
  %subtract.9266 = fsub float %163, %multiply.9165
  %245 = getelementptr inbounds [8192 x [352 x float]], ptr addrspace(1) %arg34171, i64 0, i64 %17, i64 %199
  %246 = load float, ptr addrspace(1) %245, align 8, !invariant.load !195
  %multiply.9467 = fmul float %16, %246
  %subtract.9568 = fsub float %174, %multiply.9467
  %247 = zext i32 %5 to i64
  %248 = getelementptr inbounds [8192 x [352 x float]], ptr addrspace(1) %arg1105, i64 0, i64 %17, i64 %247
  %249 = load float, ptr addrspace(1) %248, align 4, !invariant.load !195
  %multiply.3869 = fmul float %16, %249
  %subtract.3970 = fsub float %15, %multiply.3869
  %250 = getelementptr inbounds [8192 x [352 x float]], ptr addrspace(1) %arg6115, i64 0, i64 %17, i64 %247
  %251 = load float, ptr addrspace(1) %250, align 4, !invariant.load !195
  %252 = getelementptr inbounds [8192 x [352 x float]], ptr addrspace(1) %arg5113, i64 0, i64 %17, i64 %247
  %253 = load float, ptr addrspace(1) %252, align 4, !invariant.load !195
  %add.4271 = fadd float %251, %253
  %254 = getelementptr inbounds [8192 x [224 x float]], ptr addrspace(1) %arg4111, i64 0, i64 %17, i64 %247
  %255 = load float, ptr addrspace(1) %254, align 4, !invariant.load !195
  %add.4472 = fadd float %add.4271, %255
  %multiply.4673 = fmul float %16, %add.4472
  %subtract.4774 = fsub float %28, %multiply.4673
  %256 = getelementptr inbounds [8192 x [360 x float]], ptr addrspace(1) %arg10123, i64 0, i64 %17, i64 %247
  %257 = load float, ptr addrspace(1) %256, align 4, !invariant.load !195
  %258 = getelementptr inbounds [8192 x [352 x float]], ptr addrspace(1) %arg9121, i64 0, i64 %17, i64 %247
  %259 = load float, ptr addrspace(1) %258, align 4, !invariant.load !195
  %add.5075 = fadd float %257, %259
  %260 = getelementptr inbounds [8192 x [224 x float]], ptr addrspace(1) %arg8119, i64 0, i64 %17, i64 %247
  %261 = load float, ptr addrspace(1) %260, align 4, !invariant.load !195
  %add.5276 = fadd float %add.5075, %261
  %multiply.5477 = fmul float %16, %add.5276
  %subtract.5578 = fsub float %46, %multiply.5477
  %262 = getelementptr inbounds [8192 x [360 x float]], ptr addrspace(1) %arg14131, i64 0, i64 %17, i64 %247
  %263 = load float, ptr addrspace(1) %262, align 4, !invariant.load !195
  %264 = getelementptr inbounds [8192 x [352 x float]], ptr addrspace(1) %arg13129, i64 0, i64 %17, i64 %247
  %265 = load float, ptr addrspace(1) %264, align 4, !invariant.load !195
  %add.5879 = fadd float %263, %265
  %266 = getelementptr inbounds [8192 x [224 x float]], ptr addrspace(1) %arg12127, i64 0, i64 %17, i64 %247
  %267 = load float, ptr addrspace(1) %266, align 4, !invariant.load !195
  %add.6080 = fadd float %add.5879, %267
  %multiply.6281 = fmul float %16, %add.6080
  %subtract.6382 = fsub float %64, %multiply.6281
  %268 = getelementptr inbounds [8192 x [360 x float]], ptr addrspace(1) %arg18139, i64 0, i64 %17, i64 %247
  %269 = load float, ptr addrspace(1) %268, align 4, !invariant.load !195
  %270 = getelementptr inbounds [8192 x [352 x float]], ptr addrspace(1) %arg17137, i64 0, i64 %17, i64 %247
  %271 = load float, ptr addrspace(1) %270, align 4, !invariant.load !195
  %add.6683 = fadd float %269, %271
  %272 = getelementptr inbounds [8192 x [224 x float]], ptr addrspace(1) %arg16135, i64 0, i64 %17, i64 %247
  %273 = load float, ptr addrspace(1) %272, align 4, !invariant.load !195
  %add.6884 = fadd float %add.6683, %273
  %multiply.7085 = fmul float %16, %add.6884
  %subtract.7186 = fsub float %82, %multiply.7085
  %274 = getelementptr inbounds [8192 x [352 x float]], ptr addrspace(1) %arg20143, i64 0, i64 %17, i64 %247
  %275 = load float, ptr addrspace(1) %274, align 4, !invariant.load !195
  %multiply.7387 = fmul float %16, %275
  %subtract.7488 = fsub float %100, %multiply.7387
  %276 = getelementptr [8192 x [304 x float]], ptr addrspace(1) %arg22147, i64 0, i64 %17, i64 %247
  %277 = getelementptr inbounds float, ptr addrspace(1) %276, i64 16
  %278 = load float, ptr addrspace(1) %277, align 4, !invariant.load !195
  %multiply.7689 = fmul float %16, %278
  %subtract.7790 = fsub float %110, %multiply.7689
  %279 = getelementptr [8192 x [304 x float]], ptr addrspace(1) %arg24151, i64 0, i64 %17, i64 %247
  %280 = getelementptr inbounds float, ptr addrspace(1) %279, i64 16
  %281 = load float, ptr addrspace(1) %280, align 4, !invariant.load !195
  %multiply.7991 = fmul float %16, %281
  %subtract.8092 = fsub float %121, %multiply.7991
  %282 = getelementptr [8192 x [304 x float]], ptr addrspace(1) %arg26155, i64 0, i64 %17, i64 %247
  %283 = getelementptr inbounds float, ptr addrspace(1) %282, i64 16
  %284 = load float, ptr addrspace(1) %283, align 4, !invariant.load !195
  %multiply.8293 = fmul float %16, %284
  %subtract.8394 = fsub float %132, %multiply.8293
  %285 = getelementptr inbounds [8192 x [352 x float]], ptr addrspace(1) %arg28159, i64 0, i64 %17, i64 %247
  %286 = load float, ptr addrspace(1) %285, align 4, !invariant.load !195
  %multiply.8595 = fmul float %16, %286
  %subtract.8696 = fsub float %143, %multiply.8595
  %287 = getelementptr [8192 x [304 x float]], ptr addrspace(1) %arg30163, i64 0, i64 %17, i64 %247
  %288 = getelementptr inbounds float, ptr addrspace(1) %287, i64 16
  %289 = load float, ptr addrspace(1) %288, align 4, !invariant.load !195
  %multiply.8897 = fmul float %16, %289
  %subtract.8998 = fsub float %153, %multiply.8897
  %290 = getelementptr [8192 x [304 x float]], ptr addrspace(1) %arg32167, i64 0, i64 %17, i64 %247
  %291 = getelementptr inbounds float, ptr addrspace(1) %290, i64 16
  %292 = load float, ptr addrspace(1) %291, align 4, !invariant.load !195
  %multiply.9199 = fmul float %16, %292
  %subtract.92100 = fsub float %164, %multiply.9199
  %293 = getelementptr inbounds [8192 x [352 x float]], ptr addrspace(1) %arg34171, i64 0, i64 %17, i64 %247
  %294 = load float, ptr addrspace(1) %293, align 4, !invariant.load !195
  %multiply.94101 = fmul float %16, %294
  %subtract.95102 = fsub float %175, %multiply.94101
  %295 = insertelement <4 x float> poison, float %subtract.39, i32 0
  %296 = insertelement <4 x float> %295, float %subtract.392, i32 1
  %297 = insertelement <4 x float> %296, float %subtract.3936, i32 2
  %298 = insertelement <4 x float> %297, float %subtract.3970, i32 3
  store <4 x float> %298, ptr addrspace(1) %180, align 16
  %299 = insertelement <4 x float> poison, float %subtract.47, i32 0
  %300 = insertelement <4 x float> %299, float %subtract.476, i32 1
  %301 = insertelement <4 x float> %300, float %subtract.4740, i32 2
  %302 = insertelement <4 x float> %301, float %subtract.4774, i32 3
  store <4 x float> %302, ptr addrspace(1) %181, align 16
  %303 = insertelement <4 x float> poison, float %subtract.55, i32 0
  %304 = insertelement <4 x float> %303, float %subtract.5510, i32 1
  %305 = insertelement <4 x float> %304, float %subtract.5544, i32 2
  %306 = insertelement <4 x float> %305, float %subtract.5578, i32 3
  store <4 x float> %306, ptr addrspace(1) %182, align 16
  %307 = insertelement <4 x float> poison, float %subtract.63, i32 0
  %308 = insertelement <4 x float> %307, float %subtract.6314, i32 1
  %309 = insertelement <4 x float> %308, float %subtract.6348, i32 2
  %310 = insertelement <4 x float> %309, float %subtract.6382, i32 3
  store <4 x float> %310, ptr addrspace(1) %183, align 16
  %311 = insertelement <4 x float> poison, float %subtract.71, i32 0
  %312 = insertelement <4 x float> %311, float %subtract.7118, i32 1
  %313 = insertelement <4 x float> %312, float %subtract.7152, i32 2
  %314 = insertelement <4 x float> %313, float %subtract.7186, i32 3
  store <4 x float> %314, ptr addrspace(1) %184, align 16
  %315 = insertelement <4 x float> poison, float %subtract.74, i32 0
  %316 = insertelement <4 x float> %315, float %subtract.7420, i32 1
  %317 = insertelement <4 x float> %316, float %subtract.7454, i32 2
  %318 = insertelement <4 x float> %317, float %subtract.7488, i32 3
  store <4 x float> %318, ptr addrspace(1) %185, align 16
  %319 = insertelement <4 x float> poison, float %subtract.77, i32 0
  %320 = insertelement <4 x float> %319, float %subtract.7722, i32 1
  %321 = insertelement <4 x float> %320, float %subtract.7756, i32 2
  %322 = insertelement <4 x float> %321, float %subtract.7790, i32 3
  store <4 x float> %322, ptr addrspace(1) %186, align 16
  %323 = insertelement <4 x float> poison, float %subtract.80, i32 0
  %324 = insertelement <4 x float> %323, float %subtract.8024, i32 1
  %325 = insertelement <4 x float> %324, float %subtract.8058, i32 2
  %326 = insertelement <4 x float> %325, float %subtract.8092, i32 3
  store <4 x float> %326, ptr addrspace(1) %187, align 16
  %327 = insertelement <4 x float> poison, float %subtract.83, i32 0
  %328 = insertelement <4 x float> %327, float %subtract.8326, i32 1
  %329 = insertelement <4 x float> %328, float %subtract.8360, i32 2
  %330 = insertelement <4 x float> %329, float %subtract.8394, i32 3
  store <4 x float> %330, ptr addrspace(1) %188, align 16
  %331 = insertelement <4 x float> poison, float %subtract.86, i32 0
  %332 = insertelement <4 x float> %331, float %subtract.8628, i32 1
  %333 = insertelement <4 x float> %332, float %subtract.8662, i32 2
  %334 = insertelement <4 x float> %333, float %subtract.8696, i32 3
  store <4 x float> %334, ptr addrspace(1) %189, align 16
  %335 = insertelement <4 x float> poison, float %subtract.89, i32 0
  %336 = insertelement <4 x float> %335, float %subtract.8930, i32 1
  %337 = insertelement <4 x float> %336, float %subtract.8964, i32 2
  %338 = insertelement <4 x float> %337, float %subtract.8998, i32 3
  store <4 x float> %338, ptr addrspace(1) %190, align 16
  %339 = insertelement <4 x float> poison, float %subtract.92, i32 0
  %340 = insertelement <4 x float> %339, float %subtract.9232, i32 1
  %341 = insertelement <4 x float> %340, float %subtract.9266, i32 2
  %342 = insertelement <4 x float> %341, float %subtract.92100, i32 3
  store <4 x float> %342, ptr addrspace(1) %191, align 16
  %343 = insertelement <4 x float> poison, float %subtract.95, i32 0
  %344 = insertelement <4 x float> %343, float %subtract.9534, i32 1
  %345 = insertelement <4 x float> %344, float %subtract.9568, i32 2
  %346 = insertelement <4 x float> %345, float %subtract.95102, i32 3
  store <4 x float> %346, ptr addrspace(1) %192, align 16
  ret void
}

; Function Attrs: nounwind
define void @fusion_137(ptr noalias nocapture readonly align 128 dereferenceable(14680064) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(8388608) %arg1, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg2, ptr noalias nocapture writeonly align 128 dereferenceable(8388608) %arg3) local_unnamed_addr #0 {
entry:
  %arg397 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg295 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg193 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg091 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !200
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x = and i32 %1, 31
  %thread_id.y64 = lshr i32 %1, 5
  %2 = lshr i32 %0, 2
  %3 = shl nuw nsw i32 %0, 6
  %tile_origin.2 = and i32 %3, 192
  %4 = shl nuw nsw i32 %thread_id.x, 1
  %5 = shl nuw nsw i32 %2, 15
  %6 = shl nuw nsw i32 %thread_id.y64, 8
  %7 = add i32 %6, %tile_origin.2
  %8 = add i32 %7, %4
  %9 = add i32 %5, %6
  %10 = add i32 %9, %tile_origin.2
  %11 = add i32 %10, %4
  %12 = add i32 %11, 1
  %13 = lshr i32 %12, 8
  %14 = zext i32 %11 to i64
  %15 = shl nuw nsw i64 %14, 2
  %16 = add nuw nsw i64 %15, 4
  %scevgep = getelementptr i8, ptr addrspace(1) %arg193, i64 %16
  %17 = lshr i32 %11, 8
  br label %y_in_tile.loop_body

common.ret:                                       ; preds = %reduction_write_output-after, %reduction_write_output-true59
  ret void

y_in_tile.loop_body:                              ; preds = %entry, %y_in_tile.loop_body
  %lsr.iv110 = phi i32 [ %17, %entry ], [ %lsr.iv.next111, %y_in_tile.loop_body ]
  %lsr.iv107 = phi ptr addrspace(1) [ %scevgep, %entry ], [ %scevgep108, %y_in_tile.loop_body ]
  %lsr.iv105 = phi i32 [ %13, %entry ], [ %lsr.iv.next106, %y_in_tile.loop_body ]
  %lsr.iv = phi i32 [ %8, %entry ], [ %lsr.iv.next, %y_in_tile.loop_body ]
  %y_in_tile.invar_address.089 = phi i32 [ %thread_id.y64, %entry ], [ %invar.inc, %y_in_tile.loop_body ]
  %partial_reduction_result63.sroa.4.088 = phi float [ -0.000000e+00, %entry ], [ %add.13.i76, %y_in_tile.loop_body ]
  %partial_reduction_result63.sroa.0.087 = phi float [ -0.000000e+00, %entry ], [ %add.13.i, %y_in_tile.loop_body ]
  %invar.inc = add nuw nsw i32 %y_in_tile.invar_address.089, 32
  %18 = and i32 %lsr.iv, 254
  %19 = and i32 %lsr.iv110, 16777088
  %20 = or i32 %19, %y_in_tile.invar_address.089
  %21 = zext i32 %20 to i64
  %22 = zext i32 %18 to i64
  %Arg_1.2 = getelementptr inbounds [8192 x [256 x float]], ptr addrspace(1) %arg193, i64 0, i64 %21, i64 %22
  %Arg_1.23 = load float, ptr addrspace(1) %Arg_1.2, align 8, !invariant.load !195
  %compare.5 = fcmp ogt float %Arg_1.23, 0.000000e+00
  %23 = getelementptr [8192 x [448 x float]], ptr addrspace(1) %arg091, i64 0, i64 %21, i64 %22
  %Arg_0.199 = getelementptr inbounds float, ptr addrspace(1) %23, i64 192
  %Arg_0.14 = load float, ptr addrspace(1) %Arg_0.199, align 8, !invariant.load !195
  %24 = select i1 %compare.5, float %Arg_0.14, float 0.000000e+00
  %add.13.i = fadd float %partial_reduction_result63.sroa.0.087, %24
  %scevgep109 = getelementptr i8, ptr addrspace(1) %lsr.iv107, i64 -4
  %25 = load <2 x float>, ptr addrspace(1) %scevgep109, align 8, !invariant.load !195
  %Arg_1.26112 = extractelement <2 x float> %25, i32 0
  %Arg_1.222113 = extractelement <2 x float> %25, i32 1
  %compare.58 = fcmp ogt float %Arg_1.26112, 0.000000e+00
  %26 = select i1 %compare.58, float %Arg_0.14, float 0.000000e+00
  %27 = getelementptr inbounds [8192 x [256 x float]], ptr addrspace(1) %arg397, i64 0, i64 %21, i64 %22
  store float %26, ptr addrspace(1) %27, align 8
  %28 = add i32 %lsr.iv, 1
  %29 = and i32 %28, 255
  %30 = and i32 %lsr.iv105, 16777088
  %31 = or i32 %30, %y_in_tile.invar_address.089
  %32 = zext i32 %31 to i64
  %33 = zext i32 %29 to i64
  %Arg_1.214 = getelementptr inbounds [8192 x [256 x float]], ptr addrspace(1) %arg193, i64 0, i64 %32, i64 %33
  %Arg_1.215 = load float, ptr addrspace(1) %Arg_1.214, align 4, !invariant.load !195
  %compare.517 = fcmp ogt float %Arg_1.215, 0.000000e+00
  %34 = getelementptr [8192 x [448 x float]], ptr addrspace(1) %arg091, i64 0, i64 %32, i64 %33
  %Arg_0.118100 = getelementptr inbounds float, ptr addrspace(1) %34, i64 192
  %Arg_0.119 = load float, ptr addrspace(1) %Arg_0.118100, align 4, !invariant.load !195
  %35 = select i1 %compare.517, float %Arg_0.119, float 0.000000e+00
  %add.13.i76 = fadd float %partial_reduction_result63.sroa.4.088, %35
  %compare.524 = fcmp ogt float %Arg_1.222113, 0.000000e+00
  %36 = select i1 %compare.524, float %Arg_0.119, float 0.000000e+00
  %37 = getelementptr inbounds [8192 x [256 x float]], ptr addrspace(1) %arg397, i64 0, i64 %32, i64 %33
  store float %36, ptr addrspace(1) %37, align 4
  %lsr.iv.next = add nuw nsw i32 %lsr.iv, 8192
  %lsr.iv.next106 = add nuw nsw i32 %lsr.iv105, 32
  %scevgep108 = getelementptr i8, ptr addrspace(1) %lsr.iv107, i64 32768
  %lsr.iv.next111 = add nuw nsw i32 %lsr.iv110, 32
  %38 = icmp ugt i32 %y_in_tile.invar_address.089, 95
  br i1 %38, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_body
  %39 = zext i32 %thread_id.x to i64
  %40 = zext i32 %thread_id.y64 to i64
  %shmem_output_address = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache61, i64 0, i64 0, i64 0, i64 %39, i64 %40
  store float %add.13.i, ptr addrspace(3) %shmem_output_address, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache61, i64 0, i64 0, i64 0, i64 %40, i64 %39
  %partial_reduction_result27 = load float, ptr addrspace(3) %shmem_transposed_addr, align 4
  %41 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result27, i32 16, i32 31)
  %add.13.i77 = fadd float %partial_reduction_result27, %41
  %42 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i77, i32 8, i32 31)
  %add.13.i78 = fadd float %add.13.i77, %42
  %43 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i78, i32 4, i32 31)
  %add.13.i79 = fadd float %add.13.i78, %43
  %44 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i79, i32 2, i32 31)
  %add.13.i80 = fadd float %add.13.i79, %44
  %45 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i80, i32 1, i32 31)
  %add.13.i81 = fadd float %add.13.i80, %45
  store float %add.13.i81, ptr addrspace(3) %shmem_transposed_addr, align 4
  %46 = shl nuw nsw i32 %thread_id.y64, 1
  %47 = icmp eq i32 %thread_id.x, 0
  %48 = zext i32 %2 to i64
  %49 = or i32 %46, %tile_origin.2
  %50 = zext i32 %49 to i64
  %output_element_address = getelementptr inbounds [64 x [256 x float]], ptr addrspace(1) %arg295, i64 0, i64 %48, i64 %50
  br i1 %47, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %51 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address41102 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address, i64 1056
  store float %add.13.i76, ptr addrspace(3) %shmem_output_address41102, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr43103 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr, i64 1056
  %partial_reduction_result45 = load float, ptr addrspace(3) %shmem_transposed_addr43103, align 4
  %52 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result45, i32 16, i32 31)
  %add.13.i82 = fadd float %partial_reduction_result45, %52
  %53 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i82, i32 8, i32 31)
  %add.13.i83 = fadd float %add.13.i82, %53
  %54 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i83, i32 4, i32 31)
  %add.13.i84 = fadd float %add.13.i83, %54
  %55 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i84, i32 2, i32 31)
  %add.13.i85 = fadd float %add.13.i84, %55
  %56 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i85, i32 1, i32 31)
  %add.13.i86 = fadd float %add.13.i85, %56
  store float %add.13.i86, ptr addrspace(3) %shmem_transposed_addr43103, align 4
  br i1 %51, label %reduction_write_output-true59, label %common.ret

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  store float %add.13.i81, ptr addrspace(1) %output_element_address, align 8
  br label %reduction_write_output-after

reduction_write_output-true59:                    ; preds = %reduction_write_output-after
  %sunkaddr = getelementptr inbounds i8, ptr addrspace(1) %output_element_address, i64 4
  store float %add.13.i86, ptr addrspace(1) %sunkaddr, align 4
  br label %common.ret
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_86(ptr noalias nocapture readonly align 128 dereferenceable(10485760) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(14680064) %arg1, ptr noalias nocapture readonly align 128 dereferenceable(14942208) %arg2, ptr noalias nocapture writeonly align 128 dereferenceable(6291456) %arg3) local_unnamed_addr #6 {
entry:
  %arg313 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg211 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg19 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg07 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !223
  %1 = shl nuw nsw i32 %0, 10
  %2 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !200
  %3 = shl nuw nsw i32 %2, 2
  %linear_index_base = or i32 %1, %3
  %linear_index3 = or i32 %linear_index_base, 3
  %linear_index_base.frozen = freeze i32 %linear_index_base
  %4 = udiv i32 %linear_index_base.frozen, 192
  %5 = urem i32 %linear_index3, 192
  %linear_index2 = or i32 %linear_index_base, 2
  %6 = urem i32 %linear_index2, 192
  %linear_index1 = or i32 %linear_index_base, 1
  %7 = urem i32 %linear_index1, 192
  %8 = mul i32 %4, 192
  %.decomposed = sub i32 %linear_index_base.frozen, %8
  %9 = zext i32 %4 to i64
  %10 = zext i32 %.decomposed to i64
  %11 = getelementptr inbounds [8192 x [456 x float]], ptr addrspace(1) %arg211, i64 0, i64 %9, i64 %10
  %12 = load float, ptr addrspace(1) %11, align 4, !invariant.load !195
  %13 = getelementptr inbounds [8192 x [448 x float]], ptr addrspace(1) %arg19, i64 0, i64 %9, i64 %10
  %14 = load float, ptr addrspace(1) %13, align 4, !invariant.load !195
  %add.6 = fadd float %12, %14
  %15 = getelementptr inbounds [8192 x [320 x float]], ptr addrspace(1) %arg07, i64 0, i64 %9, i64 %10
  %16 = load float, ptr addrspace(1) %15, align 4, !invariant.load !195
  %add.8 = fadd float %add.6, %16
  %17 = zext i32 %linear_index_base to i64
  %18 = getelementptr float, ptr addrspace(1) %arg313, i64 %17
  %19 = zext i32 %7 to i64
  %20 = getelementptr inbounds [8192 x [456 x float]], ptr addrspace(1) %arg211, i64 0, i64 %9, i64 %19
  %21 = load float, ptr addrspace(1) %20, align 4, !invariant.load !195
  %22 = getelementptr inbounds [8192 x [448 x float]], ptr addrspace(1) %arg19, i64 0, i64 %9, i64 %19
  %23 = load float, ptr addrspace(1) %22, align 4, !invariant.load !195
  %add.61 = fadd float %21, %23
  %24 = getelementptr inbounds [8192 x [320 x float]], ptr addrspace(1) %arg07, i64 0, i64 %9, i64 %19
  %25 = load float, ptr addrspace(1) %24, align 4, !invariant.load !195
  %add.82 = fadd float %add.61, %25
  %26 = zext i32 %6 to i64
  %27 = getelementptr inbounds [8192 x [456 x float]], ptr addrspace(1) %arg211, i64 0, i64 %9, i64 %26
  %28 = load float, ptr addrspace(1) %27, align 4, !invariant.load !195
  %29 = getelementptr inbounds [8192 x [448 x float]], ptr addrspace(1) %arg19, i64 0, i64 %9, i64 %26
  %30 = load float, ptr addrspace(1) %29, align 4, !invariant.load !195
  %add.63 = fadd float %28, %30
  %31 = getelementptr inbounds [8192 x [320 x float]], ptr addrspace(1) %arg07, i64 0, i64 %9, i64 %26
  %32 = load float, ptr addrspace(1) %31, align 4, !invariant.load !195
  %add.84 = fadd float %add.63, %32
  %33 = zext i32 %5 to i64
  %34 = getelementptr inbounds [8192 x [456 x float]], ptr addrspace(1) %arg211, i64 0, i64 %9, i64 %33
  %35 = load float, ptr addrspace(1) %34, align 4, !invariant.load !195
  %36 = getelementptr inbounds [8192 x [448 x float]], ptr addrspace(1) %arg19, i64 0, i64 %9, i64 %33
  %37 = load float, ptr addrspace(1) %36, align 4, !invariant.load !195
  %add.65 = fadd float %35, %37
  %38 = getelementptr inbounds [8192 x [320 x float]], ptr addrspace(1) %arg07, i64 0, i64 %9, i64 %33
  %39 = load float, ptr addrspace(1) %38, align 4, !invariant.load !195
  %add.86 = fadd float %add.65, %39
  %40 = insertelement <4 x float> poison, float %add.8, i32 0
  %41 = insertelement <4 x float> %40, float %add.82, i32 1
  %42 = insertelement <4 x float> %41, float %add.84, i32 2
  %43 = insertelement <4 x float> %42, float %add.86, i32 3
  store <4 x float> %43, ptr addrspace(1) %18, align 16
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_112(ptr noalias nocapture readonly align 16 dereferenceable(2097152) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(12845056) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(2097152) %arg3, ptr noalias nocapture readonly align 128 dereferenceable(10485760) %arg4, ptr noalias nocapture readonly align 128 dereferenceable(14680064) %arg5, ptr noalias nocapture readonly align 16 dereferenceable(2097152) %arg6, ptr noalias nocapture readonly align 128 dereferenceable(11534336) %arg7, ptr noalias nocapture readonly align 16 dereferenceable(2097152) %arg8, ptr noalias nocapture readonly align 128 dereferenceable(7340032) %arg9, ptr noalias nocapture readonly align 128 dereferenceable(11534336) %arg10, ptr noalias nocapture readonly align 128 dereferenceable(11534336) %arg11, ptr noalias nocapture readonly align 16 dereferenceable(2097152) %arg12, ptr noalias nocapture readonly align 128 dereferenceable(7340032) %arg13, ptr noalias nocapture readonly align 128 dereferenceable(11534336) %arg14, ptr noalias nocapture readonly align 128 dereferenceable(11796480) %arg15, ptr noalias nocapture readonly align 16 dereferenceable(2097152) %arg16, ptr noalias nocapture readonly align 128 dereferenceable(10485760) %arg17, ptr noalias nocapture readonly align 128 dereferenceable(14680064) %arg18, ptr noalias nocapture readonly align 128 dereferenceable(14680064) %arg19, ptr noalias nocapture readonly align 16 dereferenceable(2097152) %arg20, ptr noalias nocapture readonly align 128 dereferenceable(7340032) %arg21, ptr noalias nocapture readonly align 128 dereferenceable(11534336) %arg22, ptr noalias nocapture readonly align 128 dereferenceable(11796480) %arg23, ptr noalias nocapture readonly align 16 dereferenceable(2097152) %arg24, ptr noalias nocapture readonly align 128 dereferenceable(7340032) %arg25, ptr noalias nocapture readonly align 128 dereferenceable(11534336) %arg26, ptr noalias nocapture readonly align 128 dereferenceable(11796480) %arg27, ptr noalias nocapture readonly align 16 dereferenceable(2097152) %arg28, ptr noalias nocapture readonly align 128 dereferenceable(6291456) %arg29, ptr noalias nocapture readonly align 16 dereferenceable(2097152) %arg30, ptr noalias nocapture readonly align 128 dereferenceable(14680064) %arg31, ptr noalias nocapture readonly align 128 dereferenceable(14680064) %arg32, ptr noalias nocapture readonly align 16 dereferenceable(2097152) %arg33, ptr noalias nocapture readonly align 128 dereferenceable(11534336) %arg34, ptr noalias nocapture readonly align 16 dereferenceable(2097152) %arg35, ptr noalias nocapture readonly align 128 dereferenceable(11534336) %arg36, ptr noalias nocapture readonly align 16 dereferenceable(2097152) %arg37, ptr noalias nocapture readonly align 128 dereferenceable(11534336) %arg38, ptr noalias nocapture writeonly align 128 dereferenceable(2097152) %arg39, ptr noalias nocapture writeonly align 128 dereferenceable(2097152) %arg40, ptr noalias nocapture writeonly align 128 dereferenceable(2097152) %arg41, ptr noalias nocapture writeonly align 128 dereferenceable(2097152) %arg42, ptr noalias nocapture writeonly align 128 dereferenceable(2097152) %arg43, ptr noalias nocapture writeonly align 128 dereferenceable(2097152) %arg44, ptr noalias nocapture writeonly align 128 dereferenceable(2097152) %arg45, ptr noalias nocapture writeonly align 128 dereferenceable(2097152) %arg46, ptr noalias nocapture writeonly align 128 dereferenceable(2097152) %arg47, ptr noalias nocapture writeonly align 128 dereferenceable(2097152) %arg48, ptr noalias nocapture writeonly align 128 dereferenceable(2097152) %arg49, ptr noalias nocapture writeonly align 128 dereferenceable(2097152) %arg50, ptr noalias nocapture writeonly align 128 dereferenceable(2097152) %arg51) local_unnamed_addr #6 {
entry:
  %arg51220 = addrspacecast ptr %arg51 to ptr addrspace(1)
  %arg50218 = addrspacecast ptr %arg50 to ptr addrspace(1)
  %arg49216 = addrspacecast ptr %arg49 to ptr addrspace(1)
  %arg48214 = addrspacecast ptr %arg48 to ptr addrspace(1)
  %arg47212 = addrspacecast ptr %arg47 to ptr addrspace(1)
  %arg46210 = addrspacecast ptr %arg46 to ptr addrspace(1)
  %arg45208 = addrspacecast ptr %arg45 to ptr addrspace(1)
  %arg44206 = addrspacecast ptr %arg44 to ptr addrspace(1)
  %arg43204 = addrspacecast ptr %arg43 to ptr addrspace(1)
  %arg42202 = addrspacecast ptr %arg42 to ptr addrspace(1)
  %arg41200 = addrspacecast ptr %arg41 to ptr addrspace(1)
  %arg40198 = addrspacecast ptr %arg40 to ptr addrspace(1)
  %arg39196 = addrspacecast ptr %arg39 to ptr addrspace(1)
  %arg38194 = addrspacecast ptr %arg38 to ptr addrspace(1)
  %arg37192 = addrspacecast ptr %arg37 to ptr addrspace(1)
  %arg36190 = addrspacecast ptr %arg36 to ptr addrspace(1)
  %arg35188 = addrspacecast ptr %arg35 to ptr addrspace(1)
  %arg34186 = addrspacecast ptr %arg34 to ptr addrspace(1)
  %arg33184 = addrspacecast ptr %arg33 to ptr addrspace(1)
  %arg32182 = addrspacecast ptr %arg32 to ptr addrspace(1)
  %arg31180 = addrspacecast ptr %arg31 to ptr addrspace(1)
  %arg30178 = addrspacecast ptr %arg30 to ptr addrspace(1)
  %arg29176 = addrspacecast ptr %arg29 to ptr addrspace(1)
  %arg28174 = addrspacecast ptr %arg28 to ptr addrspace(1)
  %arg27172 = addrspacecast ptr %arg27 to ptr addrspace(1)
  %arg26170 = addrspacecast ptr %arg26 to ptr addrspace(1)
  %arg25168 = addrspacecast ptr %arg25 to ptr addrspace(1)
  %arg24166 = addrspacecast ptr %arg24 to ptr addrspace(1)
  %arg23164 = addrspacecast ptr %arg23 to ptr addrspace(1)
  %arg22162 = addrspacecast ptr %arg22 to ptr addrspace(1)
  %arg21160 = addrspacecast ptr %arg21 to ptr addrspace(1)
  %arg20158 = addrspacecast ptr %arg20 to ptr addrspace(1)
  %arg19156 = addrspacecast ptr %arg19 to ptr addrspace(1)
  %arg18154 = addrspacecast ptr %arg18 to ptr addrspace(1)
  %arg17152 = addrspacecast ptr %arg17 to ptr addrspace(1)
  %arg16150 = addrspacecast ptr %arg16 to ptr addrspace(1)
  %arg15148 = addrspacecast ptr %arg15 to ptr addrspace(1)
  %arg14146 = addrspacecast ptr %arg14 to ptr addrspace(1)
  %arg13144 = addrspacecast ptr %arg13 to ptr addrspace(1)
  %arg12142 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg11140 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg10138 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg9136 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg8134 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg7132 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg6130 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg5128 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg4126 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg3124 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg2122 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg1120 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg0118 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !194
  %1 = shl nuw nsw i32 %0, 10
  %2 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !200
  %3 = shl nuw nsw i32 %2, 2
  %linear_index_base = or i32 %1, %3
  %linear_index3 = or i32 %linear_index_base, 3
  %4 = lshr i32 %linear_index_base, 6
  %5 = and i32 %linear_index3, 63
  %linear_index2 = or i32 %linear_index_base, 2
  %6 = and i32 %linear_index2, 62
  %linear_index1 = or i32 %linear_index_base, 1
  %7 = and i32 %linear_index1, 61
  %8 = and i32 %3, 60
  %9 = zext i32 %linear_index_base to i64
  %10 = getelementptr float, ptr addrspace(1) %arg0118, i64 %9
  %11 = load <4 x float>, ptr addrspace(1) %10, align 16, !invariant.load !195
  %12 = extractelement <4 x float> %11, i32 0
  %13 = extractelement <4 x float> %11, i32 1
  %14 = extractelement <4 x float> %11, i32 2
  %15 = extractelement <4 x float> %11, i32 3
  %16 = load float, ptr addrspace(1) %arg2122, align 16, !invariant.load !195
  %17 = zext i32 %4 to i64
  %18 = zext i32 %8 to i64
  %19 = getelementptr [8192 x [392 x float]], ptr addrspace(1) %arg1120, i64 0, i64 %17, i64 %18
  %20 = getelementptr inbounds float, ptr addrspace(1) %19, i64 320
  %21 = load <2 x float>, ptr addrspace(1) %20, align 16, !invariant.load !195
  %22 = extractelement <2 x float> %21, i32 0
  %23 = extractelement <2 x float> %21, i32 1
  %multiply.42 = fmul float %16, %22
  %subtract.43 = fsub float %12, %multiply.42
  %24 = getelementptr float, ptr addrspace(1) %arg3124, i64 %9
  %25 = load <4 x float>, ptr addrspace(1) %24, align 16, !invariant.load !195
  %26 = extractelement <4 x float> %25, i32 0
  %27 = extractelement <4 x float> %25, i32 1
  %28 = extractelement <4 x float> %25, i32 2
  %29 = extractelement <4 x float> %25, i32 3
  %30 = load <2 x float>, ptr addrspace(1) %19, align 16, !invariant.load !195
  %31 = extractelement <2 x float> %30, i32 0
  %32 = extractelement <2 x float> %30, i32 1
  %33 = getelementptr inbounds [8192 x [448 x float]], ptr addrspace(1) %arg5128, i64 0, i64 %17, i64 %18
  %34 = load <2 x float>, ptr addrspace(1) %33, align 16, !invariant.load !195
  %35 = extractelement <2 x float> %34, i32 0
  %36 = extractelement <2 x float> %34, i32 1
  %add.46 = fadd float %31, %35
  %37 = getelementptr inbounds [8192 x [320 x float]], ptr addrspace(1) %arg4126, i64 0, i64 %17, i64 %18
  %38 = load <2 x float>, ptr addrspace(1) %37, align 16, !invariant.load !195
  %39 = extractelement <2 x float> %38, i32 0
  %40 = extractelement <2 x float> %38, i32 1
  %add.48 = fadd float %add.46, %39
  %multiply.50 = fmul float %16, %add.48
  %subtract.51 = fsub float %26, %multiply.50
  %41 = getelementptr float, ptr addrspace(1) %arg6130, i64 %9
  %42 = load <4 x float>, ptr addrspace(1) %41, align 16, !invariant.load !195
  %43 = extractelement <4 x float> %42, i32 0
  %44 = extractelement <4 x float> %42, i32 1
  %45 = extractelement <4 x float> %42, i32 2
  %46 = extractelement <4 x float> %42, i32 3
  %47 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg7132, i64 0, i64 %17, i64 %18
  %48 = getelementptr inbounds float, ptr addrspace(1) %47, i64 32
  %49 = load <2 x float>, ptr addrspace(1) %48, align 16, !invariant.load !195
  %50 = extractelement <2 x float> %49, i32 0
  %51 = extractelement <2 x float> %49, i32 1
  %multiply.53 = fmul float %16, %50
  %subtract.54 = fsub float %43, %multiply.53
  %52 = getelementptr float, ptr addrspace(1) %arg8134, i64 %9
  %53 = load <4 x float>, ptr addrspace(1) %52, align 16, !invariant.load !195
  %54 = extractelement <4 x float> %53, i32 0
  %55 = extractelement <4 x float> %53, i32 1
  %56 = extractelement <4 x float> %53, i32 2
  %57 = extractelement <4 x float> %53, i32 3
  %58 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg11140, i64 0, i64 %17, i64 %18
  %59 = getelementptr inbounds float, ptr addrspace(1) %58, i64 32
  %60 = load <2 x float>, ptr addrspace(1) %59, align 16, !invariant.load !195
  %61 = extractelement <2 x float> %60, i32 0
  %62 = extractelement <2 x float> %60, i32 1
  %63 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg10138, i64 0, i64 %17, i64 %18
  %64 = getelementptr inbounds float, ptr addrspace(1) %63, i64 32
  %65 = load <2 x float>, ptr addrspace(1) %64, align 16, !invariant.load !195
  %66 = extractelement <2 x float> %65, i32 0
  %67 = extractelement <2 x float> %65, i32 1
  %add.57 = fadd float %61, %66
  %68 = getelementptr [8192 x [224 x float]], ptr addrspace(1) %arg9136, i64 0, i64 %17, i64 %18
  %69 = getelementptr inbounds float, ptr addrspace(1) %68, i64 32
  %70 = load <2 x float>, ptr addrspace(1) %69, align 16, !invariant.load !195
  %71 = extractelement <2 x float> %70, i32 0
  %72 = extractelement <2 x float> %70, i32 1
  %add.59 = fadd float %add.57, %71
  %multiply.61 = fmul float %16, %add.59
  %subtract.62 = fsub float %54, %multiply.61
  %73 = getelementptr float, ptr addrspace(1) %arg12142, i64 %9
  %74 = load <4 x float>, ptr addrspace(1) %73, align 16, !invariant.load !195
  %75 = extractelement <4 x float> %74, i32 0
  %76 = extractelement <4 x float> %74, i32 1
  %77 = extractelement <4 x float> %74, i32 2
  %78 = extractelement <4 x float> %74, i32 3
  %79 = getelementptr [8192 x [360 x float]], ptr addrspace(1) %arg15148, i64 0, i64 %17, i64 %18
  %80 = getelementptr inbounds float, ptr addrspace(1) %79, i64 32
  %81 = load <2 x float>, ptr addrspace(1) %80, align 16, !invariant.load !195
  %82 = extractelement <2 x float> %81, i32 0
  %83 = extractelement <2 x float> %81, i32 1
  %84 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg14146, i64 0, i64 %17, i64 %18
  %85 = getelementptr inbounds float, ptr addrspace(1) %84, i64 32
  %86 = load <2 x float>, ptr addrspace(1) %85, align 16, !invariant.load !195
  %87 = extractelement <2 x float> %86, i32 0
  %88 = extractelement <2 x float> %86, i32 1
  %add.65 = fadd float %82, %87
  %89 = getelementptr [8192 x [224 x float]], ptr addrspace(1) %arg13144, i64 0, i64 %17, i64 %18
  %90 = getelementptr inbounds float, ptr addrspace(1) %89, i64 32
  %91 = load <2 x float>, ptr addrspace(1) %90, align 16, !invariant.load !195
  %92 = extractelement <2 x float> %91, i32 0
  %93 = extractelement <2 x float> %91, i32 1
  %add.67 = fadd float %add.65, %92
  %multiply.69 = fmul float %16, %add.67
  %subtract.70 = fsub float %75, %multiply.69
  %94 = getelementptr float, ptr addrspace(1) %arg16150, i64 %9
  %95 = load <4 x float>, ptr addrspace(1) %94, align 16, !invariant.load !195
  %96 = extractelement <4 x float> %95, i32 0
  %97 = extractelement <4 x float> %95, i32 1
  %98 = extractelement <4 x float> %95, i32 2
  %99 = extractelement <4 x float> %95, i32 3
  %100 = getelementptr inbounds [8192 x [448 x float]], ptr addrspace(1) %arg19156, i64 0, i64 %17, i64 %18
  %101 = load <2 x float>, ptr addrspace(1) %100, align 16, !invariant.load !195
  %102 = extractelement <2 x float> %101, i32 0
  %103 = extractelement <2 x float> %101, i32 1
  %104 = getelementptr inbounds [8192 x [448 x float]], ptr addrspace(1) %arg18154, i64 0, i64 %17, i64 %18
  %105 = load <2 x float>, ptr addrspace(1) %104, align 16, !invariant.load !195
  %106 = extractelement <2 x float> %105, i32 0
  %107 = extractelement <2 x float> %105, i32 1
  %add.73 = fadd float %102, %106
  %108 = getelementptr inbounds [8192 x [320 x float]], ptr addrspace(1) %arg17152, i64 0, i64 %17, i64 %18
  %109 = load <2 x float>, ptr addrspace(1) %108, align 16, !invariant.load !195
  %110 = extractelement <2 x float> %109, i32 0
  %111 = extractelement <2 x float> %109, i32 1
  %add.75 = fadd float %add.73, %110
  %multiply.77 = fmul float %16, %add.75
  %subtract.78 = fsub float %96, %multiply.77
  %112 = getelementptr float, ptr addrspace(1) %arg20158, i64 %9
  %113 = load <4 x float>, ptr addrspace(1) %112, align 16, !invariant.load !195
  %114 = extractelement <4 x float> %113, i32 0
  %115 = extractelement <4 x float> %113, i32 1
  %116 = extractelement <4 x float> %113, i32 2
  %117 = extractelement <4 x float> %113, i32 3
  %118 = getelementptr [8192 x [360 x float]], ptr addrspace(1) %arg23164, i64 0, i64 %17, i64 %18
  %119 = getelementptr inbounds float, ptr addrspace(1) %118, i64 32
  %120 = load <2 x float>, ptr addrspace(1) %119, align 16, !invariant.load !195
  %121 = extractelement <2 x float> %120, i32 0
  %122 = extractelement <2 x float> %120, i32 1
  %123 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg22162, i64 0, i64 %17, i64 %18
  %124 = getelementptr inbounds float, ptr addrspace(1) %123, i64 32
  %125 = load <2 x float>, ptr addrspace(1) %124, align 16, !invariant.load !195
  %126 = extractelement <2 x float> %125, i32 0
  %127 = extractelement <2 x float> %125, i32 1
  %add.81 = fadd float %121, %126
  %128 = getelementptr [8192 x [224 x float]], ptr addrspace(1) %arg21160, i64 0, i64 %17, i64 %18
  %129 = getelementptr inbounds float, ptr addrspace(1) %128, i64 32
  %130 = load <2 x float>, ptr addrspace(1) %129, align 16, !invariant.load !195
  %131 = extractelement <2 x float> %130, i32 0
  %132 = extractelement <2 x float> %130, i32 1
  %add.83 = fadd float %add.81, %131
  %multiply.85 = fmul float %16, %add.83
  %subtract.86 = fsub float %114, %multiply.85
  %133 = getelementptr float, ptr addrspace(1) %arg24166, i64 %9
  %134 = load <4 x float>, ptr addrspace(1) %133, align 16, !invariant.load !195
  %135 = extractelement <4 x float> %134, i32 0
  %136 = extractelement <4 x float> %134, i32 1
  %137 = extractelement <4 x float> %134, i32 2
  %138 = extractelement <4 x float> %134, i32 3
  %139 = getelementptr [8192 x [360 x float]], ptr addrspace(1) %arg27172, i64 0, i64 %17, i64 %18
  %140 = getelementptr inbounds float, ptr addrspace(1) %139, i64 32
  %141 = load <2 x float>, ptr addrspace(1) %140, align 16, !invariant.load !195
  %142 = extractelement <2 x float> %141, i32 0
  %143 = extractelement <2 x float> %141, i32 1
  %144 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg26170, i64 0, i64 %17, i64 %18
  %145 = getelementptr inbounds float, ptr addrspace(1) %144, i64 32
  %146 = load <2 x float>, ptr addrspace(1) %145, align 16, !invariant.load !195
  %147 = extractelement <2 x float> %146, i32 0
  %148 = extractelement <2 x float> %146, i32 1
  %add.89 = fadd float %142, %147
  %149 = getelementptr [8192 x [224 x float]], ptr addrspace(1) %arg25168, i64 0, i64 %17, i64 %18
  %150 = getelementptr inbounds float, ptr addrspace(1) %149, i64 32
  %151 = load <2 x float>, ptr addrspace(1) %150, align 16, !invariant.load !195
  %152 = extractelement <2 x float> %151, i32 0
  %153 = extractelement <2 x float> %151, i32 1
  %add.91 = fadd float %add.89, %152
  %multiply.93 = fmul float %16, %add.91
  %subtract.94 = fsub float %135, %multiply.93
  %154 = getelementptr float, ptr addrspace(1) %arg28174, i64 %9
  %155 = load <4 x float>, ptr addrspace(1) %154, align 16, !invariant.load !195
  %156 = extractelement <4 x float> %155, i32 0
  %157 = extractelement <4 x float> %155, i32 1
  %158 = extractelement <4 x float> %155, i32 2
  %159 = extractelement <4 x float> %155, i32 3
  %160 = getelementptr inbounds [8192 x [192 x float]], ptr addrspace(1) %arg29176, i64 0, i64 %17, i64 %18
  %161 = load <2 x float>, ptr addrspace(1) %160, align 16, !invariant.load !195
  %162 = extractelement <2 x float> %161, i32 0
  %163 = extractelement <2 x float> %161, i32 1
  %multiply.96 = fmul float %16, %162
  %subtract.97 = fsub float %156, %multiply.96
  %164 = getelementptr float, ptr addrspace(1) %arg30178, i64 %9
  %165 = load <4 x float>, ptr addrspace(1) %164, align 16, !invariant.load !195
  %166 = extractelement <4 x float> %165, i32 0
  %167 = extractelement <4 x float> %165, i32 1
  %168 = extractelement <4 x float> %165, i32 2
  %169 = extractelement <4 x float> %165, i32 3
  %170 = getelementptr inbounds [8192 x [448 x float]], ptr addrspace(1) %arg31180, i64 0, i64 %17, i64 %18
  %171 = load <2 x float>, ptr addrspace(1) %170, align 16, !invariant.load !195
  %172 = extractelement <2 x float> %171, i32 0
  %173 = extractelement <2 x float> %171, i32 1
  %174 = getelementptr inbounds [8192 x [448 x float]], ptr addrspace(1) %arg32182, i64 0, i64 %17, i64 %18
  %175 = load <2 x float>, ptr addrspace(1) %174, align 16, !invariant.load !195
  %176 = extractelement <2 x float> %175, i32 0
  %177 = extractelement <2 x float> %175, i32 1
  %add.98 = fadd float %172, %176
  %multiply.100 = fmul float %16, %add.98
  %subtract.101 = fsub float %166, %multiply.100
  %178 = getelementptr float, ptr addrspace(1) %arg33184, i64 %9
  %179 = load <4 x float>, ptr addrspace(1) %178, align 16, !invariant.load !195
  %180 = extractelement <4 x float> %179, i32 0
  %181 = extractelement <4 x float> %179, i32 1
  %182 = extractelement <4 x float> %179, i32 2
  %183 = extractelement <4 x float> %179, i32 3
  %184 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg34186, i64 0, i64 %17, i64 %18
  %185 = getelementptr inbounds float, ptr addrspace(1) %184, i64 32
  %186 = load <2 x float>, ptr addrspace(1) %185, align 16, !invariant.load !195
  %187 = extractelement <2 x float> %186, i32 0
  %188 = extractelement <2 x float> %186, i32 1
  %multiply.103 = fmul float %16, %187
  %subtract.104 = fsub float %180, %multiply.103
  %189 = getelementptr float, ptr addrspace(1) %arg35188, i64 %9
  %190 = load <4 x float>, ptr addrspace(1) %189, align 16, !invariant.load !195
  %191 = extractelement <4 x float> %190, i32 0
  %192 = extractelement <4 x float> %190, i32 1
  %193 = extractelement <4 x float> %190, i32 2
  %194 = extractelement <4 x float> %190, i32 3
  %195 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg36190, i64 0, i64 %17, i64 %18
  %196 = getelementptr inbounds float, ptr addrspace(1) %195, i64 32
  %197 = load <2 x float>, ptr addrspace(1) %196, align 16, !invariant.load !195
  %198 = extractelement <2 x float> %197, i32 0
  %199 = extractelement <2 x float> %197, i32 1
  %multiply.106 = fmul float %16, %198
  %subtract.107 = fsub float %191, %multiply.106
  %200 = getelementptr float, ptr addrspace(1) %arg37192, i64 %9
  %201 = load <4 x float>, ptr addrspace(1) %200, align 16, !invariant.load !195
  %202 = extractelement <4 x float> %201, i32 0
  %203 = extractelement <4 x float> %201, i32 1
  %204 = extractelement <4 x float> %201, i32 2
  %205 = extractelement <4 x float> %201, i32 3
  %206 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg38194, i64 0, i64 %17, i64 %18
  %207 = getelementptr inbounds float, ptr addrspace(1) %206, i64 32
  %208 = load <2 x float>, ptr addrspace(1) %207, align 16, !invariant.load !195
  %209 = extractelement <2 x float> %208, i32 0
  %210 = extractelement <2 x float> %208, i32 1
  %multiply.109 = fmul float %16, %209
  %subtract.110 = fsub float %202, %multiply.109
  %211 = getelementptr float, ptr addrspace(1) %arg39196, i64 %9
  %212 = getelementptr float, ptr addrspace(1) %arg40198, i64 %9
  %213 = getelementptr float, ptr addrspace(1) %arg41200, i64 %9
  %214 = getelementptr float, ptr addrspace(1) %arg42202, i64 %9
  %215 = getelementptr float, ptr addrspace(1) %arg43204, i64 %9
  %216 = getelementptr float, ptr addrspace(1) %arg44206, i64 %9
  %217 = getelementptr float, ptr addrspace(1) %arg45208, i64 %9
  %218 = getelementptr float, ptr addrspace(1) %arg46210, i64 %9
  %219 = getelementptr float, ptr addrspace(1) %arg47212, i64 %9
  %220 = getelementptr float, ptr addrspace(1) %arg48214, i64 %9
  %221 = getelementptr float, ptr addrspace(1) %arg49216, i64 %9
  %222 = getelementptr float, ptr addrspace(1) %arg50218, i64 %9
  %223 = getelementptr float, ptr addrspace(1) %arg51220, i64 %9
  %224 = zext i32 %7 to i64
  %multiply.421 = fmul float %16, %23
  %subtract.432 = fsub float %13, %multiply.421
  %add.463 = fadd float %32, %36
  %add.484 = fadd float %add.463, %40
  %multiply.505 = fmul float %16, %add.484
  %subtract.516 = fsub float %27, %multiply.505
  %225 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg7132, i64 0, i64 %17, i64 %224
  %multiply.537 = fmul float %16, %51
  %subtract.548 = fsub float %44, %multiply.537
  %226 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg11140, i64 0, i64 %17, i64 %224
  %227 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg10138, i64 0, i64 %17, i64 %224
  %add.579 = fadd float %62, %67
  %228 = getelementptr [8192 x [224 x float]], ptr addrspace(1) %arg9136, i64 0, i64 %17, i64 %224
  %add.5910 = fadd float %add.579, %72
  %multiply.6111 = fmul float %16, %add.5910
  %subtract.6212 = fsub float %55, %multiply.6111
  %229 = getelementptr [8192 x [360 x float]], ptr addrspace(1) %arg15148, i64 0, i64 %17, i64 %224
  %230 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg14146, i64 0, i64 %17, i64 %224
  %add.6513 = fadd float %83, %88
  %231 = getelementptr [8192 x [224 x float]], ptr addrspace(1) %arg13144, i64 0, i64 %17, i64 %224
  %add.6714 = fadd float %add.6513, %93
  %multiply.6915 = fmul float %16, %add.6714
  %subtract.7016 = fsub float %76, %multiply.6915
  %add.7317 = fadd float %103, %107
  %add.7518 = fadd float %add.7317, %111
  %multiply.7719 = fmul float %16, %add.7518
  %subtract.7820 = fsub float %97, %multiply.7719
  %232 = getelementptr [8192 x [360 x float]], ptr addrspace(1) %arg23164, i64 0, i64 %17, i64 %224
  %233 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg22162, i64 0, i64 %17, i64 %224
  %add.8121 = fadd float %122, %127
  %234 = getelementptr [8192 x [224 x float]], ptr addrspace(1) %arg21160, i64 0, i64 %17, i64 %224
  %add.8322 = fadd float %add.8121, %132
  %multiply.8523 = fmul float %16, %add.8322
  %subtract.8624 = fsub float %115, %multiply.8523
  %235 = getelementptr [8192 x [360 x float]], ptr addrspace(1) %arg27172, i64 0, i64 %17, i64 %224
  %236 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg26170, i64 0, i64 %17, i64 %224
  %add.8925 = fadd float %143, %148
  %237 = getelementptr [8192 x [224 x float]], ptr addrspace(1) %arg25168, i64 0, i64 %17, i64 %224
  %add.9126 = fadd float %add.8925, %153
  %multiply.9327 = fmul float %16, %add.9126
  %subtract.9428 = fsub float %136, %multiply.9327
  %multiply.9629 = fmul float %16, %163
  %subtract.9730 = fsub float %157, %multiply.9629
  %add.9831 = fadd float %173, %177
  %multiply.10032 = fmul float %16, %add.9831
  %subtract.10133 = fsub float %167, %multiply.10032
  %238 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg34186, i64 0, i64 %17, i64 %224
  %multiply.10334 = fmul float %16, %188
  %subtract.10435 = fsub float %181, %multiply.10334
  %239 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg36190, i64 0, i64 %17, i64 %224
  %multiply.10636 = fmul float %16, %199
  %subtract.10737 = fsub float %192, %multiply.10636
  %240 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg38194, i64 0, i64 %17, i64 %224
  %multiply.10938 = fmul float %16, %210
  %subtract.11039 = fsub float %203, %multiply.10938
  %241 = zext i32 %6 to i64
  %242 = getelementptr [8192 x [392 x float]], ptr addrspace(1) %arg1120, i64 0, i64 %17, i64 %241
  %243 = getelementptr inbounds float, ptr addrspace(1) %242, i64 320
  %244 = load float, ptr addrspace(1) %243, align 8, !invariant.load !195
  %multiply.4240 = fmul float %16, %244
  %subtract.4341 = fsub float %14, %multiply.4240
  %245 = load float, ptr addrspace(1) %242, align 8, !invariant.load !195
  %246 = getelementptr inbounds [8192 x [448 x float]], ptr addrspace(1) %arg5128, i64 0, i64 %17, i64 %241
  %247 = load float, ptr addrspace(1) %246, align 8, !invariant.load !195
  %add.4642 = fadd float %245, %247
  %248 = getelementptr inbounds [8192 x [320 x float]], ptr addrspace(1) %arg4126, i64 0, i64 %17, i64 %241
  %249 = load float, ptr addrspace(1) %248, align 8, !invariant.load !195
  %add.4843 = fadd float %add.4642, %249
  %multiply.5044 = fmul float %16, %add.4843
  %subtract.5145 = fsub float %28, %multiply.5044
  %250 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg7132, i64 0, i64 %17, i64 %241
  %251 = getelementptr inbounds float, ptr addrspace(1) %250, i64 32
  %252 = load float, ptr addrspace(1) %251, align 8, !invariant.load !195
  %multiply.5346 = fmul float %16, %252
  %subtract.5447 = fsub float %45, %multiply.5346
  %253 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg11140, i64 0, i64 %17, i64 %241
  %254 = getelementptr inbounds float, ptr addrspace(1) %253, i64 32
  %255 = load float, ptr addrspace(1) %254, align 8, !invariant.load !195
  %256 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg10138, i64 0, i64 %17, i64 %241
  %257 = getelementptr inbounds float, ptr addrspace(1) %256, i64 32
  %258 = load float, ptr addrspace(1) %257, align 8, !invariant.load !195
  %add.5748 = fadd float %255, %258
  %259 = getelementptr [8192 x [224 x float]], ptr addrspace(1) %arg9136, i64 0, i64 %17, i64 %241
  %260 = getelementptr inbounds float, ptr addrspace(1) %259, i64 32
  %261 = load float, ptr addrspace(1) %260, align 8, !invariant.load !195
  %add.5949 = fadd float %add.5748, %261
  %multiply.6150 = fmul float %16, %add.5949
  %subtract.6251 = fsub float %56, %multiply.6150
  %262 = getelementptr [8192 x [360 x float]], ptr addrspace(1) %arg15148, i64 0, i64 %17, i64 %241
  %263 = getelementptr inbounds float, ptr addrspace(1) %262, i64 32
  %264 = load float, ptr addrspace(1) %263, align 8, !invariant.load !195
  %265 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg14146, i64 0, i64 %17, i64 %241
  %266 = getelementptr inbounds float, ptr addrspace(1) %265, i64 32
  %267 = load float, ptr addrspace(1) %266, align 8, !invariant.load !195
  %add.6552 = fadd float %264, %267
  %268 = getelementptr [8192 x [224 x float]], ptr addrspace(1) %arg13144, i64 0, i64 %17, i64 %241
  %269 = getelementptr inbounds float, ptr addrspace(1) %268, i64 32
  %270 = load float, ptr addrspace(1) %269, align 8, !invariant.load !195
  %add.6753 = fadd float %add.6552, %270
  %multiply.6954 = fmul float %16, %add.6753
  %subtract.7055 = fsub float %77, %multiply.6954
  %271 = getelementptr inbounds [8192 x [448 x float]], ptr addrspace(1) %arg19156, i64 0, i64 %17, i64 %241
  %272 = load float, ptr addrspace(1) %271, align 8, !invariant.load !195
  %273 = getelementptr inbounds [8192 x [448 x float]], ptr addrspace(1) %arg18154, i64 0, i64 %17, i64 %241
  %274 = load float, ptr addrspace(1) %273, align 8, !invariant.load !195
  %add.7356 = fadd float %272, %274
  %275 = getelementptr inbounds [8192 x [320 x float]], ptr addrspace(1) %arg17152, i64 0, i64 %17, i64 %241
  %276 = load float, ptr addrspace(1) %275, align 8, !invariant.load !195
  %add.7557 = fadd float %add.7356, %276
  %multiply.7758 = fmul float %16, %add.7557
  %subtract.7859 = fsub float %98, %multiply.7758
  %277 = getelementptr [8192 x [360 x float]], ptr addrspace(1) %arg23164, i64 0, i64 %17, i64 %241
  %278 = getelementptr inbounds float, ptr addrspace(1) %277, i64 32
  %279 = load float, ptr addrspace(1) %278, align 8, !invariant.load !195
  %280 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg22162, i64 0, i64 %17, i64 %241
  %281 = getelementptr inbounds float, ptr addrspace(1) %280, i64 32
  %282 = load float, ptr addrspace(1) %281, align 8, !invariant.load !195
  %add.8160 = fadd float %279, %282
  %283 = getelementptr [8192 x [224 x float]], ptr addrspace(1) %arg21160, i64 0, i64 %17, i64 %241
  %284 = getelementptr inbounds float, ptr addrspace(1) %283, i64 32
  %285 = load float, ptr addrspace(1) %284, align 8, !invariant.load !195
  %add.8361 = fadd float %add.8160, %285
  %multiply.8562 = fmul float %16, %add.8361
  %subtract.8663 = fsub float %116, %multiply.8562
  %286 = getelementptr [8192 x [360 x float]], ptr addrspace(1) %arg27172, i64 0, i64 %17, i64 %241
  %287 = getelementptr inbounds float, ptr addrspace(1) %286, i64 32
  %288 = load float, ptr addrspace(1) %287, align 8, !invariant.load !195
  %289 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg26170, i64 0, i64 %17, i64 %241
  %290 = getelementptr inbounds float, ptr addrspace(1) %289, i64 32
  %291 = load float, ptr addrspace(1) %290, align 8, !invariant.load !195
  %add.8964 = fadd float %288, %291
  %292 = getelementptr [8192 x [224 x float]], ptr addrspace(1) %arg25168, i64 0, i64 %17, i64 %241
  %293 = getelementptr inbounds float, ptr addrspace(1) %292, i64 32
  %294 = load float, ptr addrspace(1) %293, align 8, !invariant.load !195
  %add.9165 = fadd float %add.8964, %294
  %multiply.9366 = fmul float %16, %add.9165
  %subtract.9467 = fsub float %137, %multiply.9366
  %295 = getelementptr inbounds [8192 x [192 x float]], ptr addrspace(1) %arg29176, i64 0, i64 %17, i64 %241
  %296 = load float, ptr addrspace(1) %295, align 8, !invariant.load !195
  %multiply.9668 = fmul float %16, %296
  %subtract.9769 = fsub float %158, %multiply.9668
  %297 = getelementptr inbounds [8192 x [448 x float]], ptr addrspace(1) %arg31180, i64 0, i64 %17, i64 %241
  %298 = load float, ptr addrspace(1) %297, align 8, !invariant.load !195
  %299 = getelementptr inbounds [8192 x [448 x float]], ptr addrspace(1) %arg32182, i64 0, i64 %17, i64 %241
  %300 = load float, ptr addrspace(1) %299, align 8, !invariant.load !195
  %add.9870 = fadd float %298, %300
  %multiply.10071 = fmul float %16, %add.9870
  %subtract.10172 = fsub float %168, %multiply.10071
  %301 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg34186, i64 0, i64 %17, i64 %241
  %302 = getelementptr inbounds float, ptr addrspace(1) %301, i64 32
  %303 = load float, ptr addrspace(1) %302, align 8, !invariant.load !195
  %multiply.10373 = fmul float %16, %303
  %subtract.10474 = fsub float %182, %multiply.10373
  %304 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg36190, i64 0, i64 %17, i64 %241
  %305 = getelementptr inbounds float, ptr addrspace(1) %304, i64 32
  %306 = load float, ptr addrspace(1) %305, align 8, !invariant.load !195
  %multiply.10675 = fmul float %16, %306
  %subtract.10776 = fsub float %193, %multiply.10675
  %307 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg38194, i64 0, i64 %17, i64 %241
  %308 = getelementptr inbounds float, ptr addrspace(1) %307, i64 32
  %309 = load float, ptr addrspace(1) %308, align 8, !invariant.load !195
  %multiply.10977 = fmul float %16, %309
  %subtract.11078 = fsub float %204, %multiply.10977
  %310 = zext i32 %5 to i64
  %311 = getelementptr [8192 x [392 x float]], ptr addrspace(1) %arg1120, i64 0, i64 %17, i64 %310
  %312 = getelementptr inbounds float, ptr addrspace(1) %311, i64 320
  %313 = load float, ptr addrspace(1) %312, align 4, !invariant.load !195
  %multiply.4279 = fmul float %16, %313
  %subtract.4380 = fsub float %15, %multiply.4279
  %314 = load float, ptr addrspace(1) %311, align 4, !invariant.load !195
  %315 = getelementptr inbounds [8192 x [448 x float]], ptr addrspace(1) %arg5128, i64 0, i64 %17, i64 %310
  %316 = load float, ptr addrspace(1) %315, align 4, !invariant.load !195
  %add.4681 = fadd float %314, %316
  %317 = getelementptr inbounds [8192 x [320 x float]], ptr addrspace(1) %arg4126, i64 0, i64 %17, i64 %310
  %318 = load float, ptr addrspace(1) %317, align 4, !invariant.load !195
  %add.4882 = fadd float %add.4681, %318
  %multiply.5083 = fmul float %16, %add.4882
  %subtract.5184 = fsub float %29, %multiply.5083
  %319 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg7132, i64 0, i64 %17, i64 %310
  %320 = getelementptr inbounds float, ptr addrspace(1) %319, i64 32
  %321 = load float, ptr addrspace(1) %320, align 4, !invariant.load !195
  %multiply.5385 = fmul float %16, %321
  %subtract.5486 = fsub float %46, %multiply.5385
  %322 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg11140, i64 0, i64 %17, i64 %310
  %323 = getelementptr inbounds float, ptr addrspace(1) %322, i64 32
  %324 = load float, ptr addrspace(1) %323, align 4, !invariant.load !195
  %325 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg10138, i64 0, i64 %17, i64 %310
  %326 = getelementptr inbounds float, ptr addrspace(1) %325, i64 32
  %327 = load float, ptr addrspace(1) %326, align 4, !invariant.load !195
  %add.5787 = fadd float %324, %327
  %328 = getelementptr [8192 x [224 x float]], ptr addrspace(1) %arg9136, i64 0, i64 %17, i64 %310
  %329 = getelementptr inbounds float, ptr addrspace(1) %328, i64 32
  %330 = load float, ptr addrspace(1) %329, align 4, !invariant.load !195
  %add.5988 = fadd float %add.5787, %330
  %multiply.6189 = fmul float %16, %add.5988
  %subtract.6290 = fsub float %57, %multiply.6189
  %331 = getelementptr [8192 x [360 x float]], ptr addrspace(1) %arg15148, i64 0, i64 %17, i64 %310
  %332 = getelementptr inbounds float, ptr addrspace(1) %331, i64 32
  %333 = load float, ptr addrspace(1) %332, align 4, !invariant.load !195
  %334 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg14146, i64 0, i64 %17, i64 %310
  %335 = getelementptr inbounds float, ptr addrspace(1) %334, i64 32
  %336 = load float, ptr addrspace(1) %335, align 4, !invariant.load !195
  %add.6591 = fadd float %333, %336
  %337 = getelementptr [8192 x [224 x float]], ptr addrspace(1) %arg13144, i64 0, i64 %17, i64 %310
  %338 = getelementptr inbounds float, ptr addrspace(1) %337, i64 32
  %339 = load float, ptr addrspace(1) %338, align 4, !invariant.load !195
  %add.6792 = fadd float %add.6591, %339
  %multiply.6993 = fmul float %16, %add.6792
  %subtract.7094 = fsub float %78, %multiply.6993
  %340 = getelementptr inbounds [8192 x [448 x float]], ptr addrspace(1) %arg19156, i64 0, i64 %17, i64 %310
  %341 = load float, ptr addrspace(1) %340, align 4, !invariant.load !195
  %342 = getelementptr inbounds [8192 x [448 x float]], ptr addrspace(1) %arg18154, i64 0, i64 %17, i64 %310
  %343 = load float, ptr addrspace(1) %342, align 4, !invariant.load !195
  %add.7395 = fadd float %341, %343
  %344 = getelementptr inbounds [8192 x [320 x float]], ptr addrspace(1) %arg17152, i64 0, i64 %17, i64 %310
  %345 = load float, ptr addrspace(1) %344, align 4, !invariant.load !195
  %add.7596 = fadd float %add.7395, %345
  %multiply.7797 = fmul float %16, %add.7596
  %subtract.7898 = fsub float %99, %multiply.7797
  %346 = getelementptr [8192 x [360 x float]], ptr addrspace(1) %arg23164, i64 0, i64 %17, i64 %310
  %347 = getelementptr inbounds float, ptr addrspace(1) %346, i64 32
  %348 = load float, ptr addrspace(1) %347, align 4, !invariant.load !195
  %349 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg22162, i64 0, i64 %17, i64 %310
  %350 = getelementptr inbounds float, ptr addrspace(1) %349, i64 32
  %351 = load float, ptr addrspace(1) %350, align 4, !invariant.load !195
  %add.8199 = fadd float %348, %351
  %352 = getelementptr [8192 x [224 x float]], ptr addrspace(1) %arg21160, i64 0, i64 %17, i64 %310
  %353 = getelementptr inbounds float, ptr addrspace(1) %352, i64 32
  %354 = load float, ptr addrspace(1) %353, align 4, !invariant.load !195
  %add.83100 = fadd float %add.8199, %354
  %multiply.85101 = fmul float %16, %add.83100
  %subtract.86102 = fsub float %117, %multiply.85101
  %355 = getelementptr [8192 x [360 x float]], ptr addrspace(1) %arg27172, i64 0, i64 %17, i64 %310
  %356 = getelementptr inbounds float, ptr addrspace(1) %355, i64 32
  %357 = load float, ptr addrspace(1) %356, align 4, !invariant.load !195
  %358 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg26170, i64 0, i64 %17, i64 %310
  %359 = getelementptr inbounds float, ptr addrspace(1) %358, i64 32
  %360 = load float, ptr addrspace(1) %359, align 4, !invariant.load !195
  %add.89103 = fadd float %357, %360
  %361 = getelementptr [8192 x [224 x float]], ptr addrspace(1) %arg25168, i64 0, i64 %17, i64 %310
  %362 = getelementptr inbounds float, ptr addrspace(1) %361, i64 32
  %363 = load float, ptr addrspace(1) %362, align 4, !invariant.load !195
  %add.91104 = fadd float %add.89103, %363
  %multiply.93105 = fmul float %16, %add.91104
  %subtract.94106 = fsub float %138, %multiply.93105
  %364 = getelementptr inbounds [8192 x [192 x float]], ptr addrspace(1) %arg29176, i64 0, i64 %17, i64 %310
  %365 = load float, ptr addrspace(1) %364, align 4, !invariant.load !195
  %multiply.96107 = fmul float %16, %365
  %subtract.97108 = fsub float %159, %multiply.96107
  %366 = getelementptr inbounds [8192 x [448 x float]], ptr addrspace(1) %arg31180, i64 0, i64 %17, i64 %310
  %367 = load float, ptr addrspace(1) %366, align 4, !invariant.load !195
  %368 = getelementptr inbounds [8192 x [448 x float]], ptr addrspace(1) %arg32182, i64 0, i64 %17, i64 %310
  %369 = load float, ptr addrspace(1) %368, align 4, !invariant.load !195
  %add.98109 = fadd float %367, %369
  %multiply.100110 = fmul float %16, %add.98109
  %subtract.101111 = fsub float %169, %multiply.100110
  %370 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg34186, i64 0, i64 %17, i64 %310
  %371 = getelementptr inbounds float, ptr addrspace(1) %370, i64 32
  %372 = load float, ptr addrspace(1) %371, align 4, !invariant.load !195
  %multiply.103112 = fmul float %16, %372
  %subtract.104113 = fsub float %183, %multiply.103112
  %373 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg36190, i64 0, i64 %17, i64 %310
  %374 = getelementptr inbounds float, ptr addrspace(1) %373, i64 32
  %375 = load float, ptr addrspace(1) %374, align 4, !invariant.load !195
  %multiply.106114 = fmul float %16, %375
  %subtract.107115 = fsub float %194, %multiply.106114
  %376 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg38194, i64 0, i64 %17, i64 %310
  %377 = getelementptr inbounds float, ptr addrspace(1) %376, i64 32
  %378 = load float, ptr addrspace(1) %377, align 4, !invariant.load !195
  %multiply.109116 = fmul float %16, %378
  %subtract.110117 = fsub float %205, %multiply.109116
  %379 = insertelement <4 x float> poison, float %subtract.43, i32 0
  %380 = insertelement <4 x float> %379, float %subtract.432, i32 1
  %381 = insertelement <4 x float> %380, float %subtract.4341, i32 2
  %382 = insertelement <4 x float> %381, float %subtract.4380, i32 3
  store <4 x float> %382, ptr addrspace(1) %211, align 16
  %383 = insertelement <4 x float> poison, float %subtract.51, i32 0
  %384 = insertelement <4 x float> %383, float %subtract.516, i32 1
  %385 = insertelement <4 x float> %384, float %subtract.5145, i32 2
  %386 = insertelement <4 x float> %385, float %subtract.5184, i32 3
  store <4 x float> %386, ptr addrspace(1) %212, align 16
  %387 = insertelement <4 x float> poison, float %subtract.54, i32 0
  %388 = insertelement <4 x float> %387, float %subtract.548, i32 1
  %389 = insertelement <4 x float> %388, float %subtract.5447, i32 2
  %390 = insertelement <4 x float> %389, float %subtract.5486, i32 3
  store <4 x float> %390, ptr addrspace(1) %213, align 16
  %391 = insertelement <4 x float> poison, float %subtract.62, i32 0
  %392 = insertelement <4 x float> %391, float %subtract.6212, i32 1
  %393 = insertelement <4 x float> %392, float %subtract.6251, i32 2
  %394 = insertelement <4 x float> %393, float %subtract.6290, i32 3
  store <4 x float> %394, ptr addrspace(1) %214, align 16
  %395 = insertelement <4 x float> poison, float %subtract.70, i32 0
  %396 = insertelement <4 x float> %395, float %subtract.7016, i32 1
  %397 = insertelement <4 x float> %396, float %subtract.7055, i32 2
  %398 = insertelement <4 x float> %397, float %subtract.7094, i32 3
  store <4 x float> %398, ptr addrspace(1) %215, align 16
  %399 = insertelement <4 x float> poison, float %subtract.78, i32 0
  %400 = insertelement <4 x float> %399, float %subtract.7820, i32 1
  %401 = insertelement <4 x float> %400, float %subtract.7859, i32 2
  %402 = insertelement <4 x float> %401, float %subtract.7898, i32 3
  store <4 x float> %402, ptr addrspace(1) %216, align 16
  %403 = insertelement <4 x float> poison, float %subtract.86, i32 0
  %404 = insertelement <4 x float> %403, float %subtract.8624, i32 1
  %405 = insertelement <4 x float> %404, float %subtract.8663, i32 2
  %406 = insertelement <4 x float> %405, float %subtract.86102, i32 3
  store <4 x float> %406, ptr addrspace(1) %217, align 16
  %407 = insertelement <4 x float> poison, float %subtract.94, i32 0
  %408 = insertelement <4 x float> %407, float %subtract.9428, i32 1
  %409 = insertelement <4 x float> %408, float %subtract.9467, i32 2
  %410 = insertelement <4 x float> %409, float %subtract.94106, i32 3
  store <4 x float> %410, ptr addrspace(1) %218, align 16
  %411 = insertelement <4 x float> poison, float %subtract.97, i32 0
  %412 = insertelement <4 x float> %411, float %subtract.9730, i32 1
  %413 = insertelement <4 x float> %412, float %subtract.9769, i32 2
  %414 = insertelement <4 x float> %413, float %subtract.97108, i32 3
  store <4 x float> %414, ptr addrspace(1) %219, align 16
  %415 = insertelement <4 x float> poison, float %subtract.101, i32 0
  %416 = insertelement <4 x float> %415, float %subtract.10133, i32 1
  %417 = insertelement <4 x float> %416, float %subtract.10172, i32 2
  %418 = insertelement <4 x float> %417, float %subtract.101111, i32 3
  store <4 x float> %418, ptr addrspace(1) %220, align 16
  %419 = insertelement <4 x float> poison, float %subtract.104, i32 0
  %420 = insertelement <4 x float> %419, float %subtract.10435, i32 1
  %421 = insertelement <4 x float> %420, float %subtract.10474, i32 2
  %422 = insertelement <4 x float> %421, float %subtract.104113, i32 3
  store <4 x float> %422, ptr addrspace(1) %221, align 16
  %423 = insertelement <4 x float> poison, float %subtract.107, i32 0
  %424 = insertelement <4 x float> %423, float %subtract.10737, i32 1
  %425 = insertelement <4 x float> %424, float %subtract.10776, i32 2
  %426 = insertelement <4 x float> %425, float %subtract.107115, i32 3
  store <4 x float> %426, ptr addrspace(1) %222, align 16
  %427 = insertelement <4 x float> poison, float %subtract.110, i32 0
  %428 = insertelement <4 x float> %427, float %subtract.11039, i32 1
  %429 = insertelement <4 x float> %428, float %subtract.11078, i32 2
  %430 = insertelement <4 x float> %429, float %subtract.110117, i32 3
  store <4 x float> %430, ptr addrspace(1) %223, align 16
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_114(ptr noalias nocapture readonly align 16 dereferenceable(4194304) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(12845056) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(4194304) %arg3, ptr noalias nocapture readonly align 128 dereferenceable(10485760) %arg4, ptr noalias nocapture readonly align 128 dereferenceable(14680064) %arg5, ptr noalias nocapture readonly align 16 dereferenceable(4194304) %arg6, ptr noalias nocapture readonly align 128 dereferenceable(14680064) %arg7, ptr noalias nocapture readonly align 128 dereferenceable(14680064) %arg8, ptr noalias nocapture readonly align 16 dereferenceable(4194304) %arg9, ptr noalias nocapture readonly align 128 dereferenceable(10485760) %arg10, ptr noalias nocapture readonly align 128 dereferenceable(14680064) %arg11, ptr noalias nocapture readonly align 128 dereferenceable(14680064) %arg12, ptr noalias nocapture readonly align 16 dereferenceable(4194304) %arg13, ptr noalias nocapture readonly align 128 dereferenceable(6291456) %arg14, ptr noalias nocapture writeonly align 128 dereferenceable(4194304) %arg15, ptr noalias nocapture writeonly align 128 dereferenceable(4194304) %arg16, ptr noalias nocapture writeonly align 128 dereferenceable(4194304) %arg17, ptr noalias nocapture writeonly align 128 dereferenceable(4194304) %arg18, ptr noalias nocapture writeonly align 128 dereferenceable(4194304) %arg19) local_unnamed_addr #6 {
entry:
  %arg1984 = addrspacecast ptr %arg19 to ptr addrspace(1)
  %arg1882 = addrspacecast ptr %arg18 to ptr addrspace(1)
  %arg1780 = addrspacecast ptr %arg17 to ptr addrspace(1)
  %arg1678 = addrspacecast ptr %arg16 to ptr addrspace(1)
  %arg1576 = addrspacecast ptr %arg15 to ptr addrspace(1)
  %arg1474 = addrspacecast ptr %arg14 to ptr addrspace(1)
  %arg1372 = addrspacecast ptr %arg13 to ptr addrspace(1)
  %arg1270 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg1168 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg1066 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg964 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg862 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg760 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg658 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg556 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg454 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg352 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg250 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg148 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg046 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !199
  %1 = shl nuw nsw i32 %0, 10
  %2 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !200
  %3 = shl nuw nsw i32 %2, 2
  %linear_index_base = or i32 %1, %3
  %linear_index3 = or i32 %linear_index_base, 3
  %4 = lshr i32 %linear_index_base, 7
  %5 = and i32 %linear_index3, 127
  %linear_index2 = or i32 %linear_index_base, 2
  %6 = and i32 %linear_index2, 126
  %linear_index1 = or i32 %linear_index_base, 1
  %7 = and i32 %linear_index1, 125
  %8 = and i32 %3, 124
  %9 = zext i32 %linear_index_base to i64
  %10 = getelementptr float, ptr addrspace(1) %arg046, i64 %9
  %11 = load <4 x float>, ptr addrspace(1) %10, align 16, !invariant.load !195
  %12 = extractelement <4 x float> %11, i32 0
  %13 = extractelement <4 x float> %11, i32 1
  %14 = extractelement <4 x float> %11, i32 2
  %15 = extractelement <4 x float> %11, i32 3
  %16 = load float, ptr addrspace(1) %arg250, align 16, !invariant.load !195
  %17 = zext i32 %4 to i64
  %18 = zext i32 %8 to i64
  %19 = getelementptr [8192 x [392 x float]], ptr addrspace(1) %arg148, i64 0, i64 %17, i64 %18
  %20 = getelementptr inbounds float, ptr addrspace(1) %19, i64 192
  %21 = load <2 x float>, ptr addrspace(1) %20, align 16, !invariant.load !195
  %22 = extractelement <2 x float> %21, i32 0
  %23 = extractelement <2 x float> %21, i32 1
  %multiply.18 = fmul float %16, %22
  %subtract.19 = fsub float %12, %multiply.18
  %24 = getelementptr float, ptr addrspace(1) %arg352, i64 %9
  %25 = load <4 x float>, ptr addrspace(1) %24, align 16, !invariant.load !195
  %26 = extractelement <4 x float> %25, i32 0
  %27 = extractelement <4 x float> %25, i32 1
  %28 = extractelement <4 x float> %25, i32 2
  %29 = extractelement <4 x float> %25, i32 3
  %30 = getelementptr inbounds float, ptr addrspace(1) %19, i64 64
  %31 = load <2 x float>, ptr addrspace(1) %30, align 16, !invariant.load !195
  %32 = extractelement <2 x float> %31, i32 0
  %33 = extractelement <2 x float> %31, i32 1
  %34 = getelementptr [8192 x [448 x float]], ptr addrspace(1) %arg556, i64 0, i64 %17, i64 %18
  %35 = getelementptr inbounds float, ptr addrspace(1) %34, i64 64
  %36 = load <2 x float>, ptr addrspace(1) %35, align 16, !invariant.load !195
  %37 = extractelement <2 x float> %36, i32 0
  %38 = extractelement <2 x float> %36, i32 1
  %add.22 = fadd float %32, %37
  %39 = getelementptr [8192 x [320 x float]], ptr addrspace(1) %arg454, i64 0, i64 %17, i64 %18
  %40 = getelementptr inbounds float, ptr addrspace(1) %39, i64 64
  %41 = load <2 x float>, ptr addrspace(1) %40, align 16, !invariant.load !195
  %42 = extractelement <2 x float> %41, i32 0
  %43 = extractelement <2 x float> %41, i32 1
  %add.24 = fadd float %add.22, %42
  %multiply.26 = fmul float %16, %add.24
  %subtract.27 = fsub float %26, %multiply.26
  %44 = getelementptr float, ptr addrspace(1) %arg658, i64 %9
  %45 = load <4 x float>, ptr addrspace(1) %44, align 16, !invariant.load !195
  %46 = extractelement <4 x float> %45, i32 0
  %47 = extractelement <4 x float> %45, i32 1
  %48 = extractelement <4 x float> %45, i32 2
  %49 = extractelement <4 x float> %45, i32 3
  %50 = getelementptr [8192 x [448 x float]], ptr addrspace(1) %arg760, i64 0, i64 %17, i64 %18
  %51 = getelementptr inbounds float, ptr addrspace(1) %50, i64 64
  %52 = load <2 x float>, ptr addrspace(1) %51, align 16, !invariant.load !195
  %53 = extractelement <2 x float> %52, i32 0
  %54 = extractelement <2 x float> %52, i32 1
  %55 = getelementptr [8192 x [448 x float]], ptr addrspace(1) %arg862, i64 0, i64 %17, i64 %18
  %56 = getelementptr inbounds float, ptr addrspace(1) %55, i64 64
  %57 = load <2 x float>, ptr addrspace(1) %56, align 16, !invariant.load !195
  %58 = extractelement <2 x float> %57, i32 0
  %59 = extractelement <2 x float> %57, i32 1
  %add.28 = fadd float %53, %58
  %multiply.30 = fmul float %16, %add.28
  %subtract.31 = fsub float %46, %multiply.30
  %60 = getelementptr float, ptr addrspace(1) %arg964, i64 %9
  %61 = load <4 x float>, ptr addrspace(1) %60, align 16, !invariant.load !195
  %62 = extractelement <4 x float> %61, i32 0
  %63 = extractelement <4 x float> %61, i32 1
  %64 = extractelement <4 x float> %61, i32 2
  %65 = extractelement <4 x float> %61, i32 3
  %66 = getelementptr [8192 x [448 x float]], ptr addrspace(1) %arg1270, i64 0, i64 %17, i64 %18
  %67 = getelementptr inbounds float, ptr addrspace(1) %66, i64 64
  %68 = load <2 x float>, ptr addrspace(1) %67, align 16, !invariant.load !195
  %69 = extractelement <2 x float> %68, i32 0
  %70 = extractelement <2 x float> %68, i32 1
  %71 = getelementptr [8192 x [448 x float]], ptr addrspace(1) %arg1168, i64 0, i64 %17, i64 %18
  %72 = getelementptr inbounds float, ptr addrspace(1) %71, i64 64
  %73 = load <2 x float>, ptr addrspace(1) %72, align 16, !invariant.load !195
  %74 = extractelement <2 x float> %73, i32 0
  %75 = extractelement <2 x float> %73, i32 1
  %add.34 = fadd float %69, %74
  %76 = getelementptr [8192 x [320 x float]], ptr addrspace(1) %arg1066, i64 0, i64 %17, i64 %18
  %77 = getelementptr inbounds float, ptr addrspace(1) %76, i64 64
  %78 = load <2 x float>, ptr addrspace(1) %77, align 16, !invariant.load !195
  %79 = extractelement <2 x float> %78, i32 0
  %80 = extractelement <2 x float> %78, i32 1
  %add.36 = fadd float %add.34, %79
  %multiply.38 = fmul float %16, %add.36
  %subtract.39 = fsub float %62, %multiply.38
  %81 = getelementptr float, ptr addrspace(1) %arg1372, i64 %9
  %82 = load <4 x float>, ptr addrspace(1) %81, align 16, !invariant.load !195
  %83 = extractelement <4 x float> %82, i32 0
  %84 = extractelement <4 x float> %82, i32 1
  %85 = extractelement <4 x float> %82, i32 2
  %86 = extractelement <4 x float> %82, i32 3
  %87 = getelementptr [8192 x [192 x float]], ptr addrspace(1) %arg1474, i64 0, i64 %17, i64 %18
  %88 = getelementptr inbounds float, ptr addrspace(1) %87, i64 64
  %89 = load <2 x float>, ptr addrspace(1) %88, align 16, !invariant.load !195
  %90 = extractelement <2 x float> %89, i32 0
  %91 = extractelement <2 x float> %89, i32 1
  %multiply.41 = fmul float %16, %90
  %subtract.42 = fsub float %83, %multiply.41
  %92 = getelementptr float, ptr addrspace(1) %arg1576, i64 %9
  %93 = getelementptr float, ptr addrspace(1) %arg1678, i64 %9
  %94 = getelementptr float, ptr addrspace(1) %arg1780, i64 %9
  %95 = getelementptr float, ptr addrspace(1) %arg1882, i64 %9
  %96 = getelementptr float, ptr addrspace(1) %arg1984, i64 %9
  %97 = zext i32 %7 to i64
  %98 = getelementptr [8192 x [392 x float]], ptr addrspace(1) %arg148, i64 0, i64 %17, i64 %97
  %multiply.181 = fmul float %16, %23
  %subtract.192 = fsub float %13, %multiply.181
  %99 = getelementptr [8192 x [448 x float]], ptr addrspace(1) %arg556, i64 0, i64 %17, i64 %97
  %add.223 = fadd float %33, %38
  %100 = getelementptr [8192 x [320 x float]], ptr addrspace(1) %arg454, i64 0, i64 %17, i64 %97
  %add.244 = fadd float %add.223, %43
  %multiply.265 = fmul float %16, %add.244
  %subtract.276 = fsub float %27, %multiply.265
  %101 = getelementptr [8192 x [448 x float]], ptr addrspace(1) %arg760, i64 0, i64 %17, i64 %97
  %102 = getelementptr [8192 x [448 x float]], ptr addrspace(1) %arg862, i64 0, i64 %17, i64 %97
  %add.287 = fadd float %54, %59
  %multiply.308 = fmul float %16, %add.287
  %subtract.319 = fsub float %47, %multiply.308
  %103 = getelementptr [8192 x [448 x float]], ptr addrspace(1) %arg1270, i64 0, i64 %17, i64 %97
  %104 = getelementptr [8192 x [448 x float]], ptr addrspace(1) %arg1168, i64 0, i64 %17, i64 %97
  %add.3410 = fadd float %70, %75
  %105 = getelementptr [8192 x [320 x float]], ptr addrspace(1) %arg1066, i64 0, i64 %17, i64 %97
  %add.3611 = fadd float %add.3410, %80
  %multiply.3812 = fmul float %16, %add.3611
  %subtract.3913 = fsub float %63, %multiply.3812
  %106 = getelementptr [8192 x [192 x float]], ptr addrspace(1) %arg1474, i64 0, i64 %17, i64 %97
  %multiply.4114 = fmul float %16, %91
  %subtract.4215 = fsub float %84, %multiply.4114
  %107 = zext i32 %6 to i64
  %108 = getelementptr [8192 x [392 x float]], ptr addrspace(1) %arg148, i64 0, i64 %17, i64 %107
  %109 = getelementptr inbounds float, ptr addrspace(1) %108, i64 192
  %110 = load float, ptr addrspace(1) %109, align 8, !invariant.load !195
  %multiply.1816 = fmul float %16, %110
  %subtract.1917 = fsub float %14, %multiply.1816
  %111 = getelementptr inbounds float, ptr addrspace(1) %108, i64 64
  %112 = load float, ptr addrspace(1) %111, align 8, !invariant.load !195
  %113 = getelementptr [8192 x [448 x float]], ptr addrspace(1) %arg556, i64 0, i64 %17, i64 %107
  %114 = getelementptr inbounds float, ptr addrspace(1) %113, i64 64
  %115 = load float, ptr addrspace(1) %114, align 8, !invariant.load !195
  %add.2218 = fadd float %112, %115
  %116 = getelementptr [8192 x [320 x float]], ptr addrspace(1) %arg454, i64 0, i64 %17, i64 %107
  %117 = getelementptr inbounds float, ptr addrspace(1) %116, i64 64
  %118 = load float, ptr addrspace(1) %117, align 8, !invariant.load !195
  %add.2419 = fadd float %add.2218, %118
  %multiply.2620 = fmul float %16, %add.2419
  %subtract.2721 = fsub float %28, %multiply.2620
  %119 = getelementptr [8192 x [448 x float]], ptr addrspace(1) %arg760, i64 0, i64 %17, i64 %107
  %120 = getelementptr inbounds float, ptr addrspace(1) %119, i64 64
  %121 = load float, ptr addrspace(1) %120, align 8, !invariant.load !195
  %122 = getelementptr [8192 x [448 x float]], ptr addrspace(1) %arg862, i64 0, i64 %17, i64 %107
  %123 = getelementptr inbounds float, ptr addrspace(1) %122, i64 64
  %124 = load float, ptr addrspace(1) %123, align 8, !invariant.load !195
  %add.2822 = fadd float %121, %124
  %multiply.3023 = fmul float %16, %add.2822
  %subtract.3124 = fsub float %48, %multiply.3023
  %125 = getelementptr [8192 x [448 x float]], ptr addrspace(1) %arg1270, i64 0, i64 %17, i64 %107
  %126 = getelementptr inbounds float, ptr addrspace(1) %125, i64 64
  %127 = load float, ptr addrspace(1) %126, align 8, !invariant.load !195
  %128 = getelementptr [8192 x [448 x float]], ptr addrspace(1) %arg1168, i64 0, i64 %17, i64 %107
  %129 = getelementptr inbounds float, ptr addrspace(1) %128, i64 64
  %130 = load float, ptr addrspace(1) %129, align 8, !invariant.load !195
  %add.3425 = fadd float %127, %130
  %131 = getelementptr [8192 x [320 x float]], ptr addrspace(1) %arg1066, i64 0, i64 %17, i64 %107
  %132 = getelementptr inbounds float, ptr addrspace(1) %131, i64 64
  %133 = load float, ptr addrspace(1) %132, align 8, !invariant.load !195
  %add.3626 = fadd float %add.3425, %133
  %multiply.3827 = fmul float %16, %add.3626
  %subtract.3928 = fsub float %64, %multiply.3827
  %134 = getelementptr [8192 x [192 x float]], ptr addrspace(1) %arg1474, i64 0, i64 %17, i64 %107
  %135 = getelementptr inbounds float, ptr addrspace(1) %134, i64 64
  %136 = load float, ptr addrspace(1) %135, align 8, !invariant.load !195
  %multiply.4129 = fmul float %16, %136
  %subtract.4230 = fsub float %85, %multiply.4129
  %137 = zext i32 %5 to i64
  %138 = getelementptr [8192 x [392 x float]], ptr addrspace(1) %arg148, i64 0, i64 %17, i64 %137
  %139 = getelementptr inbounds float, ptr addrspace(1) %138, i64 192
  %140 = load float, ptr addrspace(1) %139, align 4, !invariant.load !195
  %multiply.1831 = fmul float %16, %140
  %subtract.1932 = fsub float %15, %multiply.1831
  %141 = getelementptr inbounds float, ptr addrspace(1) %138, i64 64
  %142 = load float, ptr addrspace(1) %141, align 4, !invariant.load !195
  %143 = getelementptr [8192 x [448 x float]], ptr addrspace(1) %arg556, i64 0, i64 %17, i64 %137
  %144 = getelementptr inbounds float, ptr addrspace(1) %143, i64 64
  %145 = load float, ptr addrspace(1) %144, align 4, !invariant.load !195
  %add.2233 = fadd float %142, %145
  %146 = getelementptr [8192 x [320 x float]], ptr addrspace(1) %arg454, i64 0, i64 %17, i64 %137
  %147 = getelementptr inbounds float, ptr addrspace(1) %146, i64 64
  %148 = load float, ptr addrspace(1) %147, align 4, !invariant.load !195
  %add.2434 = fadd float %add.2233, %148
  %multiply.2635 = fmul float %16, %add.2434
  %subtract.2736 = fsub float %29, %multiply.2635
  %149 = getelementptr [8192 x [448 x float]], ptr addrspace(1) %arg760, i64 0, i64 %17, i64 %137
  %150 = getelementptr inbounds float, ptr addrspace(1) %149, i64 64
  %151 = load float, ptr addrspace(1) %150, align 4, !invariant.load !195
  %152 = getelementptr [8192 x [448 x float]], ptr addrspace(1) %arg862, i64 0, i64 %17, i64 %137
  %153 = getelementptr inbounds float, ptr addrspace(1) %152, i64 64
  %154 = load float, ptr addrspace(1) %153, align 4, !invariant.load !195
  %add.2837 = fadd float %151, %154
  %multiply.3038 = fmul float %16, %add.2837
  %subtract.3139 = fsub float %49, %multiply.3038
  %155 = getelementptr [8192 x [448 x float]], ptr addrspace(1) %arg1270, i64 0, i64 %17, i64 %137
  %156 = getelementptr inbounds float, ptr addrspace(1) %155, i64 64
  %157 = load float, ptr addrspace(1) %156, align 4, !invariant.load !195
  %158 = getelementptr [8192 x [448 x float]], ptr addrspace(1) %arg1168, i64 0, i64 %17, i64 %137
  %159 = getelementptr inbounds float, ptr addrspace(1) %158, i64 64
  %160 = load float, ptr addrspace(1) %159, align 4, !invariant.load !195
  %add.3440 = fadd float %157, %160
  %161 = getelementptr [8192 x [320 x float]], ptr addrspace(1) %arg1066, i64 0, i64 %17, i64 %137
  %162 = getelementptr inbounds float, ptr addrspace(1) %161, i64 64
  %163 = load float, ptr addrspace(1) %162, align 4, !invariant.load !195
  %add.3641 = fadd float %add.3440, %163
  %multiply.3842 = fmul float %16, %add.3641
  %subtract.3943 = fsub float %65, %multiply.3842
  %164 = getelementptr [8192 x [192 x float]], ptr addrspace(1) %arg1474, i64 0, i64 %17, i64 %137
  %165 = getelementptr inbounds float, ptr addrspace(1) %164, i64 64
  %166 = load float, ptr addrspace(1) %165, align 4, !invariant.load !195
  %multiply.4144 = fmul float %16, %166
  %subtract.4245 = fsub float %86, %multiply.4144
  %167 = insertelement <4 x float> poison, float %subtract.19, i32 0
  %168 = insertelement <4 x float> %167, float %subtract.192, i32 1
  %169 = insertelement <4 x float> %168, float %subtract.1917, i32 2
  %170 = insertelement <4 x float> %169, float %subtract.1932, i32 3
  store <4 x float> %170, ptr addrspace(1) %92, align 16
  %171 = insertelement <4 x float> poison, float %subtract.27, i32 0
  %172 = insertelement <4 x float> %171, float %subtract.276, i32 1
  %173 = insertelement <4 x float> %172, float %subtract.2721, i32 2
  %174 = insertelement <4 x float> %173, float %subtract.2736, i32 3
  store <4 x float> %174, ptr addrspace(1) %93, align 16
  %175 = insertelement <4 x float> poison, float %subtract.31, i32 0
  %176 = insertelement <4 x float> %175, float %subtract.319, i32 1
  %177 = insertelement <4 x float> %176, float %subtract.3124, i32 2
  %178 = insertelement <4 x float> %177, float %subtract.3139, i32 3
  store <4 x float> %178, ptr addrspace(1) %94, align 16
  %179 = insertelement <4 x float> poison, float %subtract.39, i32 0
  %180 = insertelement <4 x float> %179, float %subtract.3913, i32 1
  %181 = insertelement <4 x float> %180, float %subtract.3928, i32 2
  %182 = insertelement <4 x float> %181, float %subtract.3943, i32 3
  store <4 x float> %182, ptr addrspace(1) %95, align 16
  %183 = insertelement <4 x float> poison, float %subtract.42, i32 0
  %184 = insertelement <4 x float> %183, float %subtract.4215, i32 1
  %185 = insertelement <4 x float> %184, float %subtract.4230, i32 2
  %186 = insertelement <4 x float> %185, float %subtract.4245, i32 3
  store <4 x float> %186, ptr addrspace(1) %96, align 16
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_110(ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(12845056) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg3, ptr noalias nocapture readonly align 128 dereferenceable(11796480) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg5, ptr noalias nocapture readonly align 128 dereferenceable(11796480) %arg6, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg7, ptr noalias nocapture readonly align 128 dereferenceable(11796480) %arg8, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg9, ptr noalias nocapture readonly align 128 dereferenceable(14942208) %arg10, ptr noalias nocapture writeonly align 128 dereferenceable(262144) %arg11, ptr noalias nocapture writeonly align 128 dereferenceable(262144) %arg12, ptr noalias nocapture writeonly align 128 dereferenceable(262144) %arg13, ptr noalias nocapture writeonly align 128 dereferenceable(262144) %arg14, ptr noalias nocapture writeonly align 128 dereferenceable(262144) %arg15) local_unnamed_addr #6 {
entry:
  %arg1534 = addrspacecast ptr %arg15 to ptr addrspace(1)
  %arg1432 = addrspacecast ptr %arg14 to ptr addrspace(1)
  %arg1330 = addrspacecast ptr %arg13 to ptr addrspace(1)
  %arg1228 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg1126 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg1024 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg922 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg820 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg718 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg616 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg514 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg412 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg310 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg28 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg16 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg01 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !224
  %1 = shl nuw nsw i32 %0, 10
  %2 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %linear_index = or i32 %1, %2
  %3 = lshr i32 %linear_index, 3
  %4 = and i32 %2, 7
  %5 = zext i32 %linear_index to i64
  %6 = getelementptr inbounds float, ptr addrspace(1) %arg01, i64 %5
  %7 = load float, ptr addrspace(1) %6, align 4, !invariant.load !195
  %8 = load float, ptr addrspace(1) %arg28, align 16, !invariant.load !195
  %9 = zext i32 %3 to i64
  %10 = zext i32 %4 to i64
  %11 = getelementptr [8192 x [392 x float]], ptr addrspace(1) %arg16, i64 0, i64 %9, i64 %10
  %12 = getelementptr inbounds float, ptr addrspace(1) %11, i64 384
  %13 = load float, ptr addrspace(1) %12, align 4, !invariant.load !195
  %multiply.14 = fmul float %8, %13
  %subtract.15 = fsub float %7, %multiply.14
  %14 = getelementptr inbounds float, ptr addrspace(1) %arg310, i64 %5
  %15 = load float, ptr addrspace(1) %14, align 4, !invariant.load !195
  %16 = getelementptr [8192 x [360 x float]], ptr addrspace(1) %arg412, i64 0, i64 %9, i64 %10
  %17 = getelementptr inbounds float, ptr addrspace(1) %16, i64 96
  %18 = load float, ptr addrspace(1) %17, align 4, !invariant.load !195
  %multiply.17 = fmul float %8, %18
  %subtract.18 = fsub float %15, %multiply.17
  %19 = getelementptr inbounds float, ptr addrspace(1) %arg514, i64 %5
  %20 = load float, ptr addrspace(1) %19, align 4, !invariant.load !195
  %21 = getelementptr [8192 x [360 x float]], ptr addrspace(1) %arg616, i64 0, i64 %9, i64 %10
  %22 = getelementptr inbounds float, ptr addrspace(1) %21, i64 96
  %23 = load float, ptr addrspace(1) %22, align 4, !invariant.load !195
  %multiply.20 = fmul float %8, %23
  %subtract.21 = fsub float %20, %multiply.20
  %24 = getelementptr inbounds float, ptr addrspace(1) %arg718, i64 %5
  %25 = load float, ptr addrspace(1) %24, align 4, !invariant.load !195
  %26 = getelementptr [8192 x [360 x float]], ptr addrspace(1) %arg820, i64 0, i64 %9, i64 %10
  %27 = getelementptr inbounds float, ptr addrspace(1) %26, i64 96
  %28 = load float, ptr addrspace(1) %27, align 4, !invariant.load !195
  %multiply.23 = fmul float %8, %28
  %subtract.24 = fsub float %25, %multiply.23
  %29 = getelementptr inbounds float, ptr addrspace(1) %arg922, i64 %5
  %30 = load float, ptr addrspace(1) %29, align 4, !invariant.load !195
  %31 = getelementptr [8192 x [456 x float]], ptr addrspace(1) %arg1024, i64 0, i64 %9, i64 %10
  %32 = getelementptr inbounds float, ptr addrspace(1) %31, i64 192
  %33 = load float, ptr addrspace(1) %32, align 4, !invariant.load !195
  %multiply.26 = fmul float %8, %33
  %subtract.27 = fsub float %30, %multiply.26
  %34 = getelementptr inbounds float, ptr addrspace(1) %arg1126, i64 %5
  store float %subtract.15, ptr addrspace(1) %34, align 4
  %35 = getelementptr inbounds float, ptr addrspace(1) %arg1228, i64 %5
  store float %subtract.18, ptr addrspace(1) %35, align 4
  %36 = getelementptr inbounds float, ptr addrspace(1) %arg1330, i64 %5
  store float %subtract.21, ptr addrspace(1) %36, align 4
  %37 = getelementptr inbounds float, ptr addrspace(1) %arg1432, i64 %5
  store float %subtract.24, ptr addrspace(1) %37, align 4
  %38 = getelementptr inbounds float, ptr addrspace(1) %arg1534, i64 %5
  store float %subtract.27, ptr addrspace(1) %38, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_466(ptr noalias nocapture readonly align 128 dereferenceable(11534336) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(8388608) %arg1, ptr noalias nocapture readonly align 128 dereferenceable(9961472) %arg2, ptr noalias nocapture readonly align 128 dereferenceable(11534336) %arg3, ptr noalias nocapture readonly align 128 dereferenceable(9961472) %arg4, ptr noalias nocapture readonly align 128 dereferenceable(11534336) %arg5, ptr noalias nocapture readonly align 128 dereferenceable(9961472) %arg6, ptr noalias nocapture readonly align 128 dereferenceable(11534336) %arg7, ptr noalias nocapture readonly align 128 dereferenceable(14680064) %arg8, ptr noalias nocapture readonly align 128 dereferenceable(11796480) %arg9, ptr noalias nocapture readonly align 128 dereferenceable(11534336) %arg10, ptr noalias nocapture readonly align 128 dereferenceable(9961472) %arg11, ptr noalias nocapture readonly align 128 dereferenceable(9961472) %arg12, ptr noalias nocapture readonly align 128 dereferenceable(11796480) %arg13, ptr noalias nocapture readonly align 128 dereferenceable(11796480) %arg14, ptr noalias nocapture readonly align 128 dereferenceable(14942208) %arg15, ptr noalias nocapture readonly align 128 dereferenceable(14680064) %arg16, ptr noalias nocapture readonly align 128 dereferenceable(14680064) %arg17, ptr noalias nocapture writeonly align 128 dereferenceable(142606336) %arg18) local_unnamed_addr #6 {
entry:
  %arg1855 = addrspacecast ptr %arg18 to ptr addrspace(1)
  %arg1753 = addrspacecast ptr %arg17 to ptr addrspace(1)
  %arg1651 = addrspacecast ptr %arg16 to ptr addrspace(1)
  %arg1549 = addrspacecast ptr %arg15 to ptr addrspace(1)
  %arg1447 = addrspacecast ptr %arg14 to ptr addrspace(1)
  %arg1345 = addrspacecast ptr %arg13 to ptr addrspace(1)
  %arg1243 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg1141 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg1039 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg937 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg835 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg733 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg631 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg529 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg427 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg325 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg223 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg121 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg019 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !225
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %2 = shl nuw nsw i32 %0, 10
  %linear_index = or i32 %2, %1
  %3 = and i32 %1, 255
  %4 = lshr i32 %linear_index, 8
  %5 = urem i32 %4, 17
  %6 = udiv i32 %linear_index, 4352
  %7 = icmp ult i32 %5, 8
  br i1 %7, label %concatenate.pivot.4., label %concatenate.pivot.12.

concatenate.pivot.4.:                             ; preds = %entry
  %8 = icmp ult i32 %5, 4
  %9 = zext i32 %6 to i64
  br i1 %8, label %concatenate.pivot.2., label %concatenate.pivot.6.

concatenate.pivot.2.:                             ; preds = %concatenate.pivot.4.
  %10 = icmp ult i32 %5, 2
  br i1 %10, label %concatenate.pivot.1., label %concatenate.pivot.3.

concatenate.pivot.1.:                             ; preds = %concatenate.pivot.2.
  %11 = icmp eq i32 %5, 0
  br i1 %11, label %concatenate.pivot.0., label %concatenate.pivot.1.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.1.
  %12 = zext i32 %3 to i64
  %13 = getelementptr [8192 x [456 x float]], ptr addrspace(1) %arg1549, i64 0, i64 %9, i64 %12
  %14 = getelementptr inbounds float, ptr addrspace(1) %13, i64 200
  %15 = load float, ptr addrspace(1) %14, align 4, !invariant.load !195
  br label %concatenate.53.merge

concatenate.pivot.1.1:                            ; preds = %concatenate.pivot.1.
  %16 = zext i32 %3 to i64
  %17 = getelementptr [8192 x [360 x float]], ptr addrspace(1) %arg1447, i64 0, i64 %9, i64 %16
  %18 = getelementptr inbounds float, ptr addrspace(1) %17, i64 104
  %19 = load float, ptr addrspace(1) %18, align 4, !invariant.load !195
  br label %concatenate.53.merge

concatenate.pivot.3.:                             ; preds = %concatenate.pivot.2.
  %20 = icmp eq i32 %5, 2
  br i1 %20, label %concatenate.pivot.2.2, label %concatenate.pivot.3.3

concatenate.pivot.2.2:                            ; preds = %concatenate.pivot.3.
  %21 = zext i32 %3 to i64
  %22 = getelementptr [8192 x [360 x float]], ptr addrspace(1) %arg1345, i64 0, i64 %9, i64 %21
  %23 = getelementptr inbounds float, ptr addrspace(1) %22, i64 104
  %24 = load float, ptr addrspace(1) %23, align 4, !invariant.load !195
  br label %concatenate.53.merge

concatenate.pivot.3.3:                            ; preds = %concatenate.pivot.3.
  %25 = zext i32 %3 to i64
  %26 = getelementptr [8192 x [304 x float]], ptr addrspace(1) %arg1243, i64 0, i64 %9, i64 %25
  %27 = getelementptr inbounds float, ptr addrspace(1) %26, i64 48
  %28 = load float, ptr addrspace(1) %27, align 4, !invariant.load !195
  br label %concatenate.53.merge

concatenate.pivot.6.:                             ; preds = %concatenate.pivot.4.
  %29 = icmp ult i32 %5, 6
  br i1 %29, label %concatenate.pivot.5., label %concatenate.pivot.7.

concatenate.pivot.5.:                             ; preds = %concatenate.pivot.6.
  %.not18 = icmp eq i32 %5, 5
  br i1 %.not18, label %concatenate.pivot.5.5, label %concatenate.pivot.4.4

concatenate.pivot.4.4:                            ; preds = %concatenate.pivot.5.
  %30 = zext i32 %3 to i64
  %31 = getelementptr [8192 x [304 x float]], ptr addrspace(1) %arg1141, i64 0, i64 %9, i64 %30
  %32 = getelementptr inbounds float, ptr addrspace(1) %31, i64 48
  %33 = load float, ptr addrspace(1) %32, align 4, !invariant.load !195
  br label %concatenate.53.merge

concatenate.pivot.5.5:                            ; preds = %concatenate.pivot.5.
  %34 = zext i32 %3 to i64
  %35 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg1039, i64 0, i64 %9, i64 %34
  %36 = getelementptr inbounds float, ptr addrspace(1) %35, i64 96
  %37 = load float, ptr addrspace(1) %36, align 4, !invariant.load !195
  br label %concatenate.53.merge

concatenate.pivot.7.:                             ; preds = %concatenate.pivot.6.
  %38 = icmp eq i32 %5, 6
  br i1 %38, label %concatenate.pivot.6.6, label %concatenate.pivot.7.7

concatenate.pivot.6.6:                            ; preds = %concatenate.pivot.7.
  %39 = zext i32 %3 to i64
  %40 = getelementptr [8192 x [360 x float]], ptr addrspace(1) %arg937, i64 0, i64 %9, i64 %39
  %41 = getelementptr inbounds float, ptr addrspace(1) %40, i64 104
  %42 = load float, ptr addrspace(1) %41, align 4, !invariant.load !195
  br label %concatenate.53.merge

concatenate.pivot.7.7:                            ; preds = %concatenate.pivot.7.
  %43 = zext i32 %3 to i64
  %44 = getelementptr [8192 x [448 x float]], ptr addrspace(1) %arg835, i64 0, i64 %9, i64 %43
  %45 = getelementptr inbounds float, ptr addrspace(1) %44, i64 192
  %46 = load float, ptr addrspace(1) %45, align 4, !invariant.load !195
  br label %concatenate.53.merge

concatenate.pivot.12.:                            ; preds = %entry
  %47 = icmp ult i32 %5, 12
  br i1 %47, label %concatenate.pivot.10., label %concatenate.pivot.14.

concatenate.pivot.10.:                            ; preds = %concatenate.pivot.12.
  %48 = icmp ult i32 %5, 10
  %49 = zext i32 %6 to i64
  br i1 %48, label %concatenate.pivot.9., label %concatenate.pivot.11.

concatenate.pivot.9.:                             ; preds = %concatenate.pivot.10.
  %.not17 = icmp eq i32 %5, 9
  br i1 %.not17, label %concatenate.pivot.9.9, label %concatenate.pivot.8.8

concatenate.pivot.8.8:                            ; preds = %concatenate.pivot.9.
  %50 = zext i32 %3 to i64
  %51 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg733, i64 0, i64 %49, i64 %50
  %52 = getelementptr inbounds float, ptr addrspace(1) %51, i64 96
  %53 = load float, ptr addrspace(1) %52, align 4, !invariant.load !195
  br label %concatenate.53.merge

concatenate.pivot.9.9:                            ; preds = %concatenate.pivot.9.
  %54 = zext i32 %3 to i64
  %55 = getelementptr [8192 x [304 x float]], ptr addrspace(1) %arg631, i64 0, i64 %49, i64 %54
  %56 = getelementptr inbounds float, ptr addrspace(1) %55, i64 48
  %57 = load float, ptr addrspace(1) %56, align 4, !invariant.load !195
  br label %concatenate.53.merge

concatenate.pivot.11.:                            ; preds = %concatenate.pivot.10.
  %58 = icmp eq i32 %5, 10
  br i1 %58, label %concatenate.pivot.10.10, label %concatenate.pivot.11.11

concatenate.pivot.10.10:                          ; preds = %concatenate.pivot.11.
  %59 = zext i32 %3 to i64
  %60 = getelementptr [8192 x [448 x float]], ptr addrspace(1) %arg1651, i64 0, i64 %49, i64 %59
  %61 = getelementptr inbounds float, ptr addrspace(1) %60, i64 192
  %62 = load float, ptr addrspace(1) %61, align 4, !invariant.load !195
  %63 = getelementptr [8192 x [448 x float]], ptr addrspace(1) %arg1753, i64 0, i64 %49, i64 %59
  %64 = getelementptr inbounds float, ptr addrspace(1) %63, i64 192
  %65 = load float, ptr addrspace(1) %64, align 4, !invariant.load !195
  %add.39 = fadd float %62, %65
  br label %concatenate.53.merge

concatenate.pivot.11.11:                          ; preds = %concatenate.pivot.11.
  %66 = zext i32 %3 to i64
  %67 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg529, i64 0, i64 %49, i64 %66
  %68 = getelementptr inbounds float, ptr addrspace(1) %67, i64 96
  %69 = load float, ptr addrspace(1) %68, align 4, !invariant.load !195
  br label %concatenate.53.merge

concatenate.pivot.14.:                            ; preds = %concatenate.pivot.12.
  %70 = icmp ult i32 %5, 14
  br i1 %70, label %concatenate.pivot.13., label %concatenate.pivot.15.

concatenate.pivot.13.:                            ; preds = %concatenate.pivot.14.
  %.not = icmp eq i32 %5, 13
  %71 = zext i32 %6 to i64
  br i1 %.not, label %concatenate.pivot.13.13, label %concatenate.pivot.12.12

concatenate.pivot.12.12:                          ; preds = %concatenate.pivot.13.
  %72 = zext i32 %3 to i64
  %73 = getelementptr [8192 x [304 x float]], ptr addrspace(1) %arg427, i64 0, i64 %71, i64 %72
  %74 = getelementptr inbounds float, ptr addrspace(1) %73, i64 48
  %75 = load float, ptr addrspace(1) %74, align 4, !invariant.load !195
  br label %concatenate.53.merge

concatenate.pivot.13.13:                          ; preds = %concatenate.pivot.13.
  %76 = zext i32 %3 to i64
  %77 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg325, i64 0, i64 %71, i64 %76
  %78 = getelementptr inbounds float, ptr addrspace(1) %77, i64 96
  %79 = load float, ptr addrspace(1) %78, align 4, !invariant.load !195
  br label %concatenate.53.merge

concatenate.pivot.15.:                            ; preds = %concatenate.pivot.14.
  %80 = icmp eq i32 %5, 14
  br i1 %80, label %concatenate.pivot.14.14, label %concatenate.pivot.16.

concatenate.pivot.14.14:                          ; preds = %concatenate.pivot.15.
  %81 = zext i32 %6 to i64
  %82 = zext i32 %3 to i64
  %83 = getelementptr [8192 x [304 x float]], ptr addrspace(1) %arg223, i64 0, i64 %81, i64 %82
  %84 = getelementptr inbounds float, ptr addrspace(1) %83, i64 48
  %85 = load float, ptr addrspace(1) %84, align 4, !invariant.load !195
  br label %concatenate.53.merge

concatenate.pivot.16.:                            ; preds = %concatenate.pivot.15.
  %86 = icmp ult i32 %5, 16
  br i1 %86, label %concatenate.pivot.15.15, label %concatenate.pivot.16.16

concatenate.pivot.15.15:                          ; preds = %concatenate.pivot.16.
  %87 = zext i32 %6 to i64
  %88 = zext i32 %3 to i64
  %89 = getelementptr inbounds [8192 x [256 x float]], ptr addrspace(1) %arg121, i64 0, i64 %87, i64 %88
  %90 = load float, ptr addrspace(1) %89, align 4, !invariant.load !195
  br label %concatenate.53.merge

concatenate.pivot.16.16:                          ; preds = %concatenate.pivot.16.
  %91 = zext i32 %6 to i64
  %92 = zext i32 %3 to i64
  %93 = getelementptr [8192 x [352 x float]], ptr addrspace(1) %arg019, i64 0, i64 %91, i64 %92
  %94 = getelementptr inbounds float, ptr addrspace(1) %93, i64 96
  %95 = load float, ptr addrspace(1) %94, align 4, !invariant.load !195
  br label %concatenate.53.merge

concatenate.53.merge:                             ; preds = %concatenate.pivot.16.16, %concatenate.pivot.15.15, %concatenate.pivot.14.14, %concatenate.pivot.13.13, %concatenate.pivot.12.12, %concatenate.pivot.11.11, %concatenate.pivot.10.10, %concatenate.pivot.9.9, %concatenate.pivot.8.8, %concatenate.pivot.7.7, %concatenate.pivot.6.6, %concatenate.pivot.5.5, %concatenate.pivot.4.4, %concatenate.pivot.3.3, %concatenate.pivot.2.2, %concatenate.pivot.1.1, %concatenate.pivot.0.
  %96 = phi float [ %15, %concatenate.pivot.0. ], [ %19, %concatenate.pivot.1.1 ], [ %24, %concatenate.pivot.2.2 ], [ %28, %concatenate.pivot.3.3 ], [ %33, %concatenate.pivot.4.4 ], [ %37, %concatenate.pivot.5.5 ], [ %42, %concatenate.pivot.6.6 ], [ %46, %concatenate.pivot.7.7 ], [ %53, %concatenate.pivot.8.8 ], [ %57, %concatenate.pivot.9.9 ], [ %add.39, %concatenate.pivot.10.10 ], [ %69, %concatenate.pivot.11.11 ], [ %75, %concatenate.pivot.12.12 ], [ %79, %concatenate.pivot.13.13 ], [ %85, %concatenate.pivot.14.14 ], [ %90, %concatenate.pivot.15.15 ], [ %95, %concatenate.pivot.16.16 ]
  %97 = zext i32 %linear_index to i64
  %98 = getelementptr inbounds float, ptr addrspace(1) %arg1855, i64 %97
  store float %96, ptr addrspace(1) %98, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_453(ptr noalias nocapture readonly align 16 dereferenceable(196608) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(3342336) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(196608) %arg2, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg3, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg4) local_unnamed_addr #6 {
entry:
  %arg422 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg320 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg218 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg116 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg014 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !197
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %2 = shl nuw nsw i32 %0, 10
  %linear_index = or i32 %2, %1
  %3 = zext i32 %linear_index to i64
  %4 = getelementptr [8192 x [17 x [6 x float]]], ptr addrspace(1) %arg116, i64 0, i64 %3, i64 0, i64 0
  %5 = getelementptr inbounds float, ptr addrspace(1) %4, i64 90
  %6 = load <2 x float>, ptr addrspace(1) %5, align 8, !invariant.load !195
  %7 = extractelement <2 x float> %6, i32 0
  %8 = extractelement <2 x float> %6, i32 1
  %9 = getelementptr inbounds [8192 x [1 x [6 x float]]], ptr addrspace(1) %arg014, i64 0, i64 %3, i64 0, i64 0
  %10 = load <2 x float>, ptr addrspace(1) %9, align 8, !invariant.load !195
  %11 = extractelement <2 x float> %10, i32 0
  %12 = extractelement <2 x float> %10, i32 1
  %multiply.5 = fmul float %7, %11
  %multiply.5.1 = fmul float %8, %12
  %13 = getelementptr inbounds float, ptr addrspace(1) %4, i64 92
  %14 = load <2 x float>, ptr addrspace(1) %13, align 8, !invariant.load !195
  %15 = extractelement <2 x float> %14, i32 0
  %16 = extractelement <2 x float> %14, i32 1
  %17 = getelementptr inbounds float, ptr addrspace(1) %9, i64 2
  %18 = load <2 x float>, ptr addrspace(1) %17, align 8, !invariant.load !195
  %19 = extractelement <2 x float> %18, i32 0
  %20 = extractelement <2 x float> %18, i32 1
  %multiply.5.2 = fmul float %15, %19
  %multiply.5.3 = fmul float %16, %20
  %21 = getelementptr inbounds float, ptr addrspace(1) %4, i64 94
  %22 = load <2 x float>, ptr addrspace(1) %21, align 8, !invariant.load !195
  %23 = extractelement <2 x float> %22, i32 0
  %24 = extractelement <2 x float> %22, i32 1
  %25 = getelementptr inbounds float, ptr addrspace(1) %9, i64 4
  %26 = load <2 x float>, ptr addrspace(1) %25, align 8, !invariant.load !195
  %27 = extractelement <2 x float> %26, i32 0
  %28 = extractelement <2 x float> %26, i32 1
  %multiply.5.4 = fmul float %23, %27
  %multiply.5.5 = fmul float %24, %28
  %29 = getelementptr inbounds float, ptr addrspace(1) %4, i64 96
  %30 = load <2 x float>, ptr addrspace(1) %29, align 8, !invariant.load !195
  %31 = extractelement <2 x float> %30, i32 0
  %32 = extractelement <2 x float> %30, i32 1
  %33 = getelementptr inbounds [8192 x [1 x [6 x float]]], ptr addrspace(1) %arg218, i64 0, i64 %3, i64 0, i64 0
  %34 = load <2 x float>, ptr addrspace(1) %33, align 8, !invariant.load !195
  %35 = extractelement <2 x float> %34, i32 0
  %36 = extractelement <2 x float> %34, i32 1
  %multiply.14 = fmul float %31, %35
  %add.19.i = fadd float %multiply.14, 0.000000e+00
  %multiply.14.1 = fmul float %32, %36
  %add.19.i.1 = fadd float %add.19.i, %multiply.14.1
  %37 = getelementptr inbounds float, ptr addrspace(1) %4, i64 98
  %38 = load <2 x float>, ptr addrspace(1) %37, align 8, !invariant.load !195
  %39 = extractelement <2 x float> %38, i32 0
  %40 = extractelement <2 x float> %38, i32 1
  %41 = getelementptr inbounds float, ptr addrspace(1) %33, i64 2
  %42 = load <2 x float>, ptr addrspace(1) %41, align 8, !invariant.load !195
  %43 = extractelement <2 x float> %42, i32 0
  %44 = extractelement <2 x float> %42, i32 1
  %multiply.14.2 = fmul float %39, %43
  %add.19.i.2 = fadd float %add.19.i.1, %multiply.14.2
  %multiply.14.3 = fmul float %40, %44
  %add.19.i.3 = fadd float %add.19.i.2, %multiply.14.3
  %45 = getelementptr inbounds float, ptr addrspace(1) %4, i64 100
  %46 = load <2 x float>, ptr addrspace(1) %45, align 8, !invariant.load !195
  %47 = extractelement <2 x float> %46, i32 0
  %48 = extractelement <2 x float> %46, i32 1
  %49 = getelementptr inbounds float, ptr addrspace(1) %33, i64 4
  %50 = load <2 x float>, ptr addrspace(1) %49, align 8, !invariant.load !195
  %51 = extractelement <2 x float> %50, i32 0
  %52 = extractelement <2 x float> %50, i32 1
  %multiply.14.4 = fmul float %47, %51
  %add.19.i.4 = fadd float %add.19.i.3, %multiply.14.4
  %multiply.14.5 = fmul float %48, %52
  %add.19.i.5 = fadd float %add.19.i.4, %multiply.14.5
  %add.11.i = fadd float %multiply.5, 0.000000e+00
  %add.11.i.1 = fadd float %add.11.i, %multiply.5.1
  %add.11.i.2 = fadd float %add.11.i.1, %multiply.5.2
  %add.11.i.3 = fadd float %add.11.i.2, %multiply.5.3
  %add.11.i.4 = fadd float %add.11.i.3, %multiply.5.4
  %add.11.i.5 = fadd float %add.11.i.4, %multiply.5.5
  %53 = getelementptr inbounds float, ptr addrspace(1) %arg320, i64 %3
  store float %add.11.i.5, ptr addrspace(1) %53, align 4
  %54 = getelementptr inbounds float, ptr addrspace(1) %arg422, i64 %3
  store float %add.19.i.5, ptr addrspace(1) %54, align 4
  ret void
}

; Function Attrs: nounwind
define void @fusion_8(ptr noalias nocapture readonly align 16 dereferenceable(196608) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(32768) %arg1, ptr noalias nocapture readonly align 128 dereferenceable(3342336) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(196608) %arg3, ptr noalias nocapture readonly align 128 dereferenceable(32768) %arg4, ptr noalias nocapture writeonly align 128 dereferenceable(1536) %arg5, ptr noalias nocapture writeonly align 128 dereferenceable(196608) %arg6, ptr noalias nocapture writeonly align 128 dereferenceable(1536) %arg7, ptr noalias nocapture writeonly align 128 dereferenceable(196608) %arg8) local_unnamed_addr #0 {
entry:
  %arg8110 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg7108 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg6106 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg5104 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg4102 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg3100 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg298 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg196 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg094 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !224
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x = and i32 %1, 31
  %thread_id.y66 = lshr i32 %1, 5
  %2 = mul i32 %0, 768
  %3 = add nuw nsw i32 %thread_id.y66, -32
  %4 = mul nuw nsw i32 %thread_id.y66, 6
  %5 = add i32 %2, %4
  %6 = add i32 %5, %thread_id.x
  %7 = zext i32 %6 to i64
  %8 = shl nuw nsw i64 %7, 2
  %scevgep = getelementptr i8, ptr addrspace(1) %arg094, i64 %8
  %scevgep118 = getelementptr i8, ptr addrspace(1) %arg3100, i64 %8
  %scevgep121 = getelementptr i8, ptr addrspace(1) %arg6106, i64 %8
  %scevgep124 = getelementptr i8, ptr addrspace(1) %arg8110, i64 %8
  br label %y_in_tile.loop_body

common.ret:                                       ; preds = %reduction_write_output-after, %reduction_write_output-true62
  ret void

y_in_tile.loop_body:                              ; preds = %entry, %x_in_tile-after
  %lsr.iv125 = phi ptr addrspace(1) [ %scevgep124, %entry ], [ %scevgep126, %x_in_tile-after ]
  %lsr.iv122 = phi ptr addrspace(1) [ %scevgep121, %entry ], [ %scevgep123, %x_in_tile-after ]
  %lsr.iv119 = phi ptr addrspace(1) [ %scevgep118, %entry ], [ %scevgep120, %x_in_tile-after ]
  %lsr.iv116 = phi ptr addrspace(1) [ %scevgep, %entry ], [ %scevgep117, %x_in_tile-after ]
  %lsr.iv114 = phi i32 [ %6, %entry ], [ %lsr.iv.next115, %x_in_tile-after ]
  %lsr.iv = phi i32 [ %3, %entry ], [ %lsr.iv.next, %x_in_tile-after ]
  %partial_reduction_result2.087 = phi float [ -0.000000e+00, %entry ], [ %partial_reduction_result2.1, %x_in_tile-after ]
  %partial_reduction_result.086 = phi float [ -0.000000e+00, %entry ], [ %partial_reduction_result.1, %x_in_tile-after ]
  %9 = icmp ult i32 %thread_id.x, 6
  br i1 %9, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %y_in_tile.loop_body
  %partial_reduction_result.1 = phi float [ %add.15.i84, %x_in_tile-true ], [ %partial_reduction_result.086, %y_in_tile.loop_body ]
  %partial_reduction_result2.1 = phi float [ %add.25.i85, %x_in_tile-true ], [ %partial_reduction_result2.087, %y_in_tile.loop_body ]
  %lsr.iv.next = add nsw i32 %lsr.iv, 32
  %lsr.iv.next115 = add nuw nsw i32 %lsr.iv114, 192
  %scevgep117 = getelementptr i8, ptr addrspace(1) %lsr.iv116, i64 768
  %scevgep120 = getelementptr i8, ptr addrspace(1) %lsr.iv119, i64 768
  %scevgep123 = getelementptr i8, ptr addrspace(1) %lsr.iv122, i64 768
  %scevgep126 = getelementptr i8, ptr addrspace(1) %lsr.iv125, i64 768
  %10 = icmp ugt i32 %lsr.iv.next, 95
  br i1 %10, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_exit:                              ; preds = %x_in_tile-after
  %11 = zext i32 %thread_id.x to i64
  %12 = zext i32 %thread_id.y66 to i64
  %shmem_output_address = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache62, i64 0, i64 0, i64 0, i64 %11, i64 %12
  store float %partial_reduction_result.1, ptr addrspace(3) %shmem_output_address, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache62, i64 0, i64 0, i64 0, i64 %12, i64 %11
  %partial_reduction_result30 = load float, ptr addrspace(3) %shmem_transposed_addr, align 4
  %13 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result30, i32 16, i32 31)
  %add.15.i = fadd float %partial_reduction_result30, %13
  %14 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i, i32 8, i32 31)
  %add.15.i76 = fadd float %add.15.i, %14
  %15 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i76, i32 4, i32 31)
  %add.15.i77 = fadd float %add.15.i76, %15
  %16 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i77, i32 2, i32 31)
  %add.15.i78 = fadd float %add.15.i77, %16
  %17 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i78, i32 1, i32 31)
  %add.15.i79 = fadd float %add.15.i78, %17
  store float %add.15.i79, ptr addrspace(3) %shmem_transposed_addr, align 4
  %18 = icmp ult i32 %1, 192
  %19 = icmp eq i32 %thread_id.x, 0
  %20 = and i1 %18, %19
  br i1 %20, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %shmem_output_address44 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache63, i64 0, i64 0, i64 0, i64 %11, i64 %12
  store float %partial_reduction_result2.1, ptr addrspace(3) %shmem_output_address44, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr46 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache63, i64 0, i64 0, i64 0, i64 %12, i64 %11
  %partial_reduction_result48 = load float, ptr addrspace(3) %shmem_transposed_addr46, align 4
  %21 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result48, i32 16, i32 31)
  %add.25.i = fadd float %partial_reduction_result48, %21
  %22 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i, i32 8, i32 31)
  %add.25.i80 = fadd float %add.25.i, %22
  %23 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i80, i32 4, i32 31)
  %add.25.i81 = fadd float %add.25.i80, %23
  %24 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i81, i32 2, i32 31)
  %add.25.i82 = fadd float %add.25.i81, %24
  %25 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i82, i32 1, i32 31)
  %add.25.i83 = fadd float %add.25.i82, %25
  store float %add.25.i83, ptr addrspace(3) %shmem_transposed_addr46, align 4
  br i1 %20, label %reduction_write_output-true62, label %common.ret

x_in_tile-true:                                   ; preds = %y_in_tile.loop_body
  %.frozen = freeze i32 %lsr.iv114
  %26 = udiv i32 %.frozen, 6
  %27 = mul i32 %26, 6
  %.decomposed = sub i32 %.frozen, %27
  %28 = and i32 %26, 127
  %29 = udiv i32 %lsr.iv114, 768
  %30 = shl nuw nsw i32 %29, 7
  %31 = or i32 %28, %30
  %32 = zext i32 %31 to i64
  %33 = zext i32 %.decomposed to i64
  %34 = getelementptr [8192 x [17 x [6 x float]]], ptr addrspace(1) %arg298, i64 0, i64 %32, i64 0, i64 %33
  %Arg_2.3112 = getelementptr inbounds float, ptr addrspace(1) %34, i64 96
  %Arg_2.36 = load float, ptr addrspace(1) %Arg_2.3112, align 4, !invariant.load !195
  %Arg_1.2 = getelementptr inbounds [8192 x float], ptr addrspace(1) %arg196, i64 0, i64 %32
  %Arg_1.27 = load float, ptr addrspace(1) %Arg_1.2, align 4, !invariant.load !195
  %subtract.8 = fsub float %Arg_2.36, %Arg_1.27
  %Arg_0.18 = load float, ptr addrspace(1) %lsr.iv116, align 4, !invariant.load !195
  %multiply.9 = fmul float %subtract.8, %Arg_0.18
  %add.15.i84 = fadd float %partial_reduction_result.086, %multiply.9
  %Arg_2.39113 = getelementptr inbounds float, ptr addrspace(1) %34, i64 90
  %Arg_2.310 = load float, ptr addrspace(1) %Arg_2.39113, align 4, !invariant.load !195
  %Arg_4.5 = getelementptr inbounds [8192 x float], ptr addrspace(1) %arg4102, i64 0, i64 %32
  %Arg_4.511 = load float, ptr addrspace(1) %Arg_4.5, align 4, !invariant.load !195
  %subtract.19 = fsub float %Arg_2.310, %Arg_4.511
  %Arg_3.412 = load float, ptr addrspace(1) %lsr.iv119, align 4, !invariant.load !195
  %multiply.20 = fmul float %subtract.19, %Arg_3.412
  %add.25.i85 = fadd float %partial_reduction_result2.087, %multiply.20
  store float %multiply.9, ptr addrspace(1) %lsr.iv122, align 4
  store float %multiply.20, ptr addrspace(1) %lsr.iv125, align 4
  br label %x_in_tile-after

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %35 = mul nuw nsw i32 %0, 6
  %36 = add nuw nsw i32 %35, %thread_id.y66
  %.frozen90 = freeze i32 %36
  %37 = udiv i32 %.frozen90, 6
  %38 = mul i32 %37, 6
  %.decomposed91 = sub i32 %.frozen90, %38
  %39 = zext i32 %37 to i64
  %40 = zext i32 %.decomposed91 to i64
  %output_element_address = getelementptr inbounds [64 x [6 x float]], ptr addrspace(1) %arg5104, i64 0, i64 %39, i64 %40
  store float %add.15.i79, ptr addrspace(1) %output_element_address, align 4
  br label %reduction_write_output-after

reduction_write_output-true62:                    ; preds = %reduction_write_output-after
  %41 = mul nuw nsw i32 %0, 6
  %42 = add nuw nsw i32 %41, %thread_id.y66
  %.frozen92 = freeze i32 %42
  %43 = udiv i32 %.frozen92, 6
  %44 = mul i32 %43, 6
  %.decomposed93 = sub i32 %.frozen92, %44
  %45 = zext i32 %43 to i64
  %46 = zext i32 %.decomposed93 to i64
  %output_element_address64 = getelementptr inbounds [64 x [6 x float]], ptr addrspace(1) %arg7108, i64 0, i64 %45, i64 %46
  store float %add.25.i83, ptr addrspace(1) %output_element_address64, align 4
  br label %common.ret
}

; Function Attrs: nofree nosync nounwind memory(argmem: readwrite)
define void @fusion_9(ptr noalias nocapture readonly align 16 dereferenceable(24) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(1536) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(24) %arg3, ptr noalias nocapture readonly align 128 dereferenceable(1536) %arg4, ptr noalias nocapture writeonly align 128 dereferenceable(24) %arg5, ptr noalias nocapture writeonly align 128 dereferenceable(24) %arg6) local_unnamed_addr #7 {
entry:
  %arg627 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg525 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg423 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg321 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg219 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg117 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg015 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !226
  %1 = zext i32 %0 to i64
  %2 = getelementptr inbounds float, ptr addrspace(1) %arg015, i64 %1
  %3 = load float, ptr addrspace(1) %2, align 4, !invariant.load !195
  %4 = load float, ptr addrspace(1) %arg219, align 16, !invariant.load !195
  %5 = shl nuw nsw i64 %1, 2
  %scevgep58 = getelementptr i8, ptr addrspace(1) %arg117, i64 %5
  br label %reduce.12.inner.loop_body.reduction_dim.0

reduce.12.inner.loop_body.reduction_dim.0:        ; preds = %reduce.12.inner.loop_body.reduction_dim.0, %entry
  %lsr.iv55 = phi i64 [ %lsr.iv.next56, %reduce.12.inner.loop_body.reduction_dim.0 ], [ 96, %entry ]
  %accumulator_0.011 = phi float [ -0.000000e+00, %entry ], [ %add.11.i.7, %reduce.12.inner.loop_body.reduction_dim.0 ]
  %scevgep60 = getelementptr i8, ptr addrspace(1) %scevgep58, i64 %lsr.iv55
  %scevgep61 = getelementptr i8, ptr addrspace(1) %scevgep60, i64 -96
  %6 = load float, ptr addrspace(1) %scevgep61, align 4, !invariant.load !195
  %add.11.i = fadd float %accumulator_0.011, %6
  %scevgep64 = getelementptr i8, ptr addrspace(1) %scevgep60, i64 -72
  %7 = load float, ptr addrspace(1) %scevgep64, align 4, !invariant.load !195
  %add.11.i.1 = fadd float %add.11.i, %7
  %scevgep66 = getelementptr i8, ptr addrspace(1) %scevgep60, i64 -48
  %8 = load float, ptr addrspace(1) %scevgep66, align 4, !invariant.load !195
  %add.11.i.2 = fadd float %add.11.i.1, %8
  %scevgep67 = getelementptr i8, ptr addrspace(1) %scevgep60, i64 -24
  %9 = load float, ptr addrspace(1) %scevgep67, align 4, !invariant.load !195
  %add.11.i.3 = fadd float %add.11.i.2, %9
  %10 = load float, ptr addrspace(1) %scevgep60, align 4, !invariant.load !195
  %add.11.i.4 = fadd float %add.11.i.3, %10
  %scevgep70 = getelementptr i8, ptr addrspace(1) %scevgep60, i64 24
  %11 = load float, ptr addrspace(1) %scevgep70, align 4, !invariant.load !195
  %add.11.i.5 = fadd float %add.11.i.4, %11
  %scevgep69 = getelementptr i8, ptr addrspace(1) %scevgep60, i64 48
  %12 = load float, ptr addrspace(1) %scevgep69, align 4, !invariant.load !195
  %add.11.i.6 = fadd float %add.11.i.5, %12
  %scevgep63 = getelementptr i8, ptr addrspace(1) %scevgep60, i64 72
  %13 = load float, ptr addrspace(1) %scevgep63, align 4, !invariant.load !195
  %add.11.i.7 = fadd float %add.11.i.6, %13
  %lsr.iv.next56 = add nuw nsw i64 %lsr.iv55, 192
  %tmp57 = trunc i64 %lsr.iv.next56 to i32
  %exitcond.7 = icmp eq i32 %tmp57, 1632
  br i1 %exitcond.7, label %reduce.12.inner.loop_exit.reduction_dim.0, label %reduce.12.inner.loop_body.reduction_dim.0

reduce.12.inner.loop_exit.reduction_dim.0:        ; preds = %reduce.12.inner.loop_body.reduction_dim.0
  %14 = getelementptr inbounds float, ptr addrspace(1) %arg321, i64 %1
  %15 = load float, ptr addrspace(1) %14, align 4, !invariant.load !195
  %scevgep = getelementptr i8, ptr addrspace(1) %arg423, i64 %5
  br label %reduce.19.inner.loop_body.reduction_dim.0

reduce.19.inner.loop_body.reduction_dim.0:        ; preds = %reduce.19.inner.loop_body.reduction_dim.0, %reduce.12.inner.loop_exit.reduction_dim.0
  %lsr.iv = phi i64 [ %lsr.iv.next, %reduce.19.inner.loop_body.reduction_dim.0 ], [ 96, %reduce.12.inner.loop_exit.reduction_dim.0 ]
  %accumulator_02.013 = phi float [ -0.000000e+00, %reduce.12.inner.loop_exit.reduction_dim.0 ], [ %add.18.i.7, %reduce.19.inner.loop_body.reduction_dim.0 ]
  %scevgep44 = getelementptr i8, ptr addrspace(1) %scevgep, i64 %lsr.iv
  %scevgep45 = getelementptr i8, ptr addrspace(1) %scevgep44, i64 -96
  %16 = load float, ptr addrspace(1) %scevgep45, align 4, !invariant.load !195
  %add.18.i = fadd float %accumulator_02.013, %16
  %scevgep48 = getelementptr i8, ptr addrspace(1) %scevgep44, i64 -72
  %17 = load float, ptr addrspace(1) %scevgep48, align 4, !invariant.load !195
  %add.18.i.1 = fadd float %add.18.i, %17
  %scevgep50 = getelementptr i8, ptr addrspace(1) %scevgep44, i64 -48
  %18 = load float, ptr addrspace(1) %scevgep50, align 4, !invariant.load !195
  %add.18.i.2 = fadd float %add.18.i.1, %18
  %scevgep51 = getelementptr i8, ptr addrspace(1) %scevgep44, i64 -24
  %19 = load float, ptr addrspace(1) %scevgep51, align 4, !invariant.load !195
  %add.18.i.3 = fadd float %add.18.i.2, %19
  %20 = load float, ptr addrspace(1) %scevgep44, align 4, !invariant.load !195
  %add.18.i.4 = fadd float %add.18.i.3, %20
  %scevgep54 = getelementptr i8, ptr addrspace(1) %scevgep44, i64 24
  %21 = load float, ptr addrspace(1) %scevgep54, align 4, !invariant.load !195
  %add.18.i.5 = fadd float %add.18.i.4, %21
  %scevgep53 = getelementptr i8, ptr addrspace(1) %scevgep44, i64 48
  %22 = load float, ptr addrspace(1) %scevgep53, align 4, !invariant.load !195
  %add.18.i.6 = fadd float %add.18.i.5, %22
  %scevgep47 = getelementptr i8, ptr addrspace(1) %scevgep44, i64 72
  %23 = load float, ptr addrspace(1) %scevgep47, align 4, !invariant.load !195
  %add.18.i.7 = fadd float %add.18.i.6, %23
  %lsr.iv.next = add nuw nsw i64 %lsr.iv, 192
  %tmp = trunc i64 %lsr.iv.next to i32
  %exitcond14.7 = icmp eq i32 %tmp, 1632
  br i1 %exitcond14.7, label %reduce.19.inner.loop_exit.reduction_dim.0, label %reduce.19.inner.loop_body.reduction_dim.0

reduce.19.inner.loop_exit.reduction_dim.0:        ; preds = %reduce.19.inner.loop_body.reduction_dim.0
  %multiply.13 = fmul float %4, %add.11.i.7
  %subtract.14 = fsub float %3, %multiply.13
  %multiply.20 = fmul float %4, %add.18.i.7
  %subtract.21 = fsub float %15, %multiply.20
  %24 = getelementptr inbounds float, ptr addrspace(1) %arg525, i64 %1
  store float %subtract.14, ptr addrspace(1) %24, align 4
  %25 = getelementptr inbounds float, ptr addrspace(1) %arg627, i64 %1
  store float %subtract.21, ptr addrspace(1) %25, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_4(ptr noalias nocapture readonly align 16 dereferenceable(35904) %arg0, ptr noalias nocapture align 128 dereferenceable(35904) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(35904) %arg3, ptr noalias nocapture align 128 dereferenceable(35904) %arg4) local_unnamed_addr #6 {
entry:
  %arg49 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg37 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg25 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg13 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg01 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !227
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %2 = shl nuw nsw i32 %0, 10
  %linear_index = or i32 %2, %1
  %3 = icmp ult i32 %linear_index, 8976
  br i1 %3, label %fusion_4.in_bounds-true, label %fusion_4.in_bounds-after

fusion_4.in_bounds-after:                         ; preds = %fusion_4.in_bounds-true, %entry
  ret void

fusion_4.in_bounds-true:                          ; preds = %entry
  %4 = zext i32 %linear_index to i64
  %5 = getelementptr inbounds float, ptr addrspace(1) %arg01, i64 %4
  %6 = load float, ptr addrspace(1) %5, align 4, !invariant.load !195
  %7 = load float, ptr addrspace(1) %arg25, align 16, !invariant.load !195
  %8 = getelementptr inbounds float, ptr addrspace(1) %arg13, i64 %4
  %9 = load float, ptr addrspace(1) %8, align 4
  %multiply.7 = fmul float %7, %9
  %subtract.8 = fsub float %6, %multiply.7
  %10 = getelementptr inbounds float, ptr addrspace(1) %arg37, i64 %4
  %11 = load float, ptr addrspace(1) %10, align 4, !invariant.load !195
  %12 = getelementptr inbounds float, ptr addrspace(1) %arg49, i64 %4
  %13 = load float, ptr addrspace(1) %12, align 4
  %multiply.9 = fmul float %7, %13
  %subtract.10 = fsub float %11, %multiply.9
  store float %subtract.8, ptr addrspace(1) %12, align 4
  store float %subtract.10, ptr addrspace(1) %8, align 4
  br label %fusion_4.in_bounds-after
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_449(ptr noalias nocapture readonly align 16 dereferenceable(2949120) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(3342336) %arg1, ptr noalias nocapture writeonly align 128 dereferenceable(491520) %arg2) local_unnamed_addr #6 {
entry:
  %arg260 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg158 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg056 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !228
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !200
  %2 = shl nuw nsw i32 %0, 10
  %3 = shl nuw nsw i32 %1, 2
  %linear_index_base = or i32 %2, %3
  %linear_index_base.frozen = freeze i32 %linear_index_base
  %4 = udiv i32 %linear_index_base.frozen, 15
  %5 = mul i32 %4, 15
  %.decomposed = sub i32 %linear_index_base.frozen, %5
  %linear_index1 = or i32 %linear_index_base, 1
  %linear_index1.frozen = freeze i32 %linear_index1
  %6 = udiv i32 %linear_index1.frozen, 15
  %7 = mul i32 %6, 15
  %.decomposed53 = sub i32 %linear_index1.frozen, %7
  %linear_index2 = or i32 %linear_index_base, 2
  %linear_index2.frozen = freeze i32 %linear_index2
  %8 = udiv i32 %linear_index2.frozen, 15
  %9 = mul i32 %8, 15
  %.decomposed54 = sub i32 %linear_index2.frozen, %9
  %linear_index3 = or i32 %linear_index_base, 3
  %linear_index3.frozen = freeze i32 %linear_index3
  %10 = udiv i32 %linear_index3.frozen, 15
  %11 = mul i32 %10, 15
  %.decomposed55 = sub i32 %linear_index3.frozen, %11
  %12 = zext i32 %4 to i64
  %13 = zext i32 %.decomposed to i64
  %14 = getelementptr inbounds [8192 x [17 x [6 x float]]], ptr addrspace(1) %arg158, i64 0, i64 %12, i64 %13, i64 0
  %15 = load <2 x float>, ptr addrspace(1) %14, align 8, !invariant.load !195
  %16 = extractelement <2 x float> %15, i32 0
  %17 = extractelement <2 x float> %15, i32 1
  %18 = getelementptr inbounds [8192 x [15 x [6 x float]]], ptr addrspace(1) %arg056, i64 0, i64 %12, i64 %13, i64 0
  %19 = load <2 x float>, ptr addrspace(1) %18, align 8, !invariant.load !195
  %20 = extractelement <2 x float> %19, i32 0
  %21 = extractelement <2 x float> %19, i32 1
  %multiply.4 = fmul float %16, %20
  %add.9.i = fadd float %multiply.4, 0.000000e+00
  %multiply.4.1 = fmul float %17, %21
  %add.9.i.1 = fadd float %add.9.i, %multiply.4.1
  %22 = getelementptr inbounds float, ptr addrspace(1) %14, i64 2
  %23 = load <2 x float>, ptr addrspace(1) %22, align 8, !invariant.load !195
  %24 = extractelement <2 x float> %23, i32 0
  %25 = extractelement <2 x float> %23, i32 1
  %26 = getelementptr inbounds float, ptr addrspace(1) %18, i64 2
  %27 = load <2 x float>, ptr addrspace(1) %26, align 8, !invariant.load !195
  %28 = extractelement <2 x float> %27, i32 0
  %29 = extractelement <2 x float> %27, i32 1
  %multiply.4.2 = fmul float %24, %28
  %add.9.i.2 = fadd float %add.9.i.1, %multiply.4.2
  %multiply.4.3 = fmul float %25, %29
  %add.9.i.3 = fadd float %add.9.i.2, %multiply.4.3
  %30 = getelementptr inbounds float, ptr addrspace(1) %14, i64 4
  %31 = load <2 x float>, ptr addrspace(1) %30, align 8, !invariant.load !195
  %32 = extractelement <2 x float> %31, i32 0
  %33 = extractelement <2 x float> %31, i32 1
  %34 = getelementptr inbounds float, ptr addrspace(1) %18, i64 4
  %35 = load <2 x float>, ptr addrspace(1) %34, align 8, !invariant.load !195
  %36 = extractelement <2 x float> %35, i32 0
  %37 = extractelement <2 x float> %35, i32 1
  %multiply.4.4 = fmul float %32, %36
  %add.9.i.4 = fadd float %add.9.i.3, %multiply.4.4
  %multiply.4.5 = fmul float %33, %37
  %add.9.i.5 = fadd float %add.9.i.4, %multiply.4.5
  %38 = zext i32 %linear_index_base to i64
  %39 = getelementptr float, ptr addrspace(1) %arg260, i64 %38
  %40 = zext i32 %6 to i64
  %41 = zext i32 %.decomposed53 to i64
  %42 = getelementptr inbounds [8192 x [17 x [6 x float]]], ptr addrspace(1) %arg158, i64 0, i64 %40, i64 %41, i64 0
  %43 = load <2 x float>, ptr addrspace(1) %42, align 8, !invariant.load !195
  %44 = extractelement <2 x float> %43, i32 0
  %45 = extractelement <2 x float> %43, i32 1
  %46 = getelementptr inbounds [8192 x [15 x [6 x float]]], ptr addrspace(1) %arg056, i64 0, i64 %40, i64 %41, i64 0
  %47 = load <2 x float>, ptr addrspace(1) %46, align 8, !invariant.load !195
  %48 = extractelement <2 x float> %47, i32 0
  %49 = extractelement <2 x float> %47, i32 1
  %multiply.410 = fmul float %44, %48
  %add.9.i42 = fadd float %multiply.410, 0.000000e+00
  %multiply.410.1 = fmul float %45, %49
  %add.9.i42.1 = fadd float %add.9.i42, %multiply.410.1
  %50 = getelementptr inbounds float, ptr addrspace(1) %42, i64 2
  %51 = load <2 x float>, ptr addrspace(1) %50, align 8, !invariant.load !195
  %52 = extractelement <2 x float> %51, i32 0
  %53 = extractelement <2 x float> %51, i32 1
  %54 = getelementptr inbounds float, ptr addrspace(1) %46, i64 2
  %55 = load <2 x float>, ptr addrspace(1) %54, align 8, !invariant.load !195
  %56 = extractelement <2 x float> %55, i32 0
  %57 = extractelement <2 x float> %55, i32 1
  %multiply.410.2 = fmul float %52, %56
  %add.9.i42.2 = fadd float %add.9.i42.1, %multiply.410.2
  %multiply.410.3 = fmul float %53, %57
  %add.9.i42.3 = fadd float %add.9.i42.2, %multiply.410.3
  %58 = getelementptr inbounds float, ptr addrspace(1) %42, i64 4
  %59 = load <2 x float>, ptr addrspace(1) %58, align 8, !invariant.load !195
  %60 = extractelement <2 x float> %59, i32 0
  %61 = extractelement <2 x float> %59, i32 1
  %62 = getelementptr inbounds float, ptr addrspace(1) %46, i64 4
  %63 = load <2 x float>, ptr addrspace(1) %62, align 8, !invariant.load !195
  %64 = extractelement <2 x float> %63, i32 0
  %65 = extractelement <2 x float> %63, i32 1
  %multiply.410.4 = fmul float %60, %64
  %add.9.i42.4 = fadd float %add.9.i42.3, %multiply.410.4
  %multiply.410.5 = fmul float %61, %65
  %add.9.i42.5 = fadd float %add.9.i42.4, %multiply.410.5
  %66 = zext i32 %8 to i64
  %67 = zext i32 %.decomposed54 to i64
  %68 = getelementptr inbounds [8192 x [17 x [6 x float]]], ptr addrspace(1) %arg158, i64 0, i64 %66, i64 %67, i64 0
  %69 = load <2 x float>, ptr addrspace(1) %68, align 8, !invariant.load !195
  %70 = extractelement <2 x float> %69, i32 0
  %71 = extractelement <2 x float> %69, i32 1
  %72 = getelementptr inbounds [8192 x [15 x [6 x float]]], ptr addrspace(1) %arg056, i64 0, i64 %66, i64 %67, i64 0
  %73 = load <2 x float>, ptr addrspace(1) %72, align 8, !invariant.load !195
  %74 = extractelement <2 x float> %73, i32 0
  %75 = extractelement <2 x float> %73, i32 1
  %multiply.422 = fmul float %70, %74
  %add.9.i43 = fadd float %multiply.422, 0.000000e+00
  %multiply.422.1 = fmul float %71, %75
  %add.9.i43.1 = fadd float %add.9.i43, %multiply.422.1
  %76 = getelementptr inbounds float, ptr addrspace(1) %68, i64 2
  %77 = load <2 x float>, ptr addrspace(1) %76, align 8, !invariant.load !195
  %78 = extractelement <2 x float> %77, i32 0
  %79 = extractelement <2 x float> %77, i32 1
  %80 = getelementptr inbounds float, ptr addrspace(1) %72, i64 2
  %81 = load <2 x float>, ptr addrspace(1) %80, align 8, !invariant.load !195
  %82 = extractelement <2 x float> %81, i32 0
  %83 = extractelement <2 x float> %81, i32 1
  %multiply.422.2 = fmul float %78, %82
  %add.9.i43.2 = fadd float %add.9.i43.1, %multiply.422.2
  %multiply.422.3 = fmul float %79, %83
  %add.9.i43.3 = fadd float %add.9.i43.2, %multiply.422.3
  %84 = getelementptr inbounds float, ptr addrspace(1) %68, i64 4
  %85 = load <2 x float>, ptr addrspace(1) %84, align 8, !invariant.load !195
  %86 = extractelement <2 x float> %85, i32 0
  %87 = extractelement <2 x float> %85, i32 1
  %88 = getelementptr inbounds float, ptr addrspace(1) %72, i64 4
  %89 = load <2 x float>, ptr addrspace(1) %88, align 8, !invariant.load !195
  %90 = extractelement <2 x float> %89, i32 0
  %91 = extractelement <2 x float> %89, i32 1
  %multiply.422.4 = fmul float %86, %90
  %add.9.i43.4 = fadd float %add.9.i43.3, %multiply.422.4
  %multiply.422.5 = fmul float %87, %91
  %add.9.i43.5 = fadd float %add.9.i43.4, %multiply.422.5
  %92 = zext i32 %10 to i64
  %93 = zext i32 %.decomposed55 to i64
  %94 = getelementptr inbounds [8192 x [17 x [6 x float]]], ptr addrspace(1) %arg158, i64 0, i64 %92, i64 %93, i64 0
  %95 = load <2 x float>, ptr addrspace(1) %94, align 8, !invariant.load !195
  %96 = extractelement <2 x float> %95, i32 0
  %97 = extractelement <2 x float> %95, i32 1
  %98 = getelementptr inbounds [8192 x [15 x [6 x float]]], ptr addrspace(1) %arg056, i64 0, i64 %92, i64 %93, i64 0
  %99 = load <2 x float>, ptr addrspace(1) %98, align 8, !invariant.load !195
  %100 = extractelement <2 x float> %99, i32 0
  %101 = extractelement <2 x float> %99, i32 1
  %multiply.434 = fmul float %96, %100
  %add.9.i44 = fadd float %multiply.434, 0.000000e+00
  %multiply.434.1 = fmul float %97, %101
  %add.9.i44.1 = fadd float %add.9.i44, %multiply.434.1
  %102 = getelementptr inbounds float, ptr addrspace(1) %94, i64 2
  %103 = load <2 x float>, ptr addrspace(1) %102, align 8, !invariant.load !195
  %104 = extractelement <2 x float> %103, i32 0
  %105 = extractelement <2 x float> %103, i32 1
  %106 = getelementptr inbounds float, ptr addrspace(1) %98, i64 2
  %107 = load <2 x float>, ptr addrspace(1) %106, align 8, !invariant.load !195
  %108 = extractelement <2 x float> %107, i32 0
  %109 = extractelement <2 x float> %107, i32 1
  %multiply.434.2 = fmul float %104, %108
  %add.9.i44.2 = fadd float %add.9.i44.1, %multiply.434.2
  %multiply.434.3 = fmul float %105, %109
  %add.9.i44.3 = fadd float %add.9.i44.2, %multiply.434.3
  %110 = getelementptr inbounds float, ptr addrspace(1) %94, i64 4
  %111 = load <2 x float>, ptr addrspace(1) %110, align 8, !invariant.load !195
  %112 = extractelement <2 x float> %111, i32 0
  %113 = extractelement <2 x float> %111, i32 1
  %114 = getelementptr inbounds float, ptr addrspace(1) %98, i64 4
  %115 = load <2 x float>, ptr addrspace(1) %114, align 8, !invariant.load !195
  %116 = extractelement <2 x float> %115, i32 0
  %117 = extractelement <2 x float> %115, i32 1
  %multiply.434.4 = fmul float %112, %116
  %add.9.i44.4 = fadd float %add.9.i44.3, %multiply.434.4
  %multiply.434.5 = fmul float %113, %117
  %add.9.i44.5 = fadd float %add.9.i44.4, %multiply.434.5
  %118 = insertelement <4 x float> poison, float %add.9.i.5, i32 0
  %119 = insertelement <4 x float> %118, float %add.9.i42.5, i32 1
  %120 = insertelement <4 x float> %119, float %add.9.i43.5, i32 2
  %121 = insertelement <4 x float> %120, float %add.9.i44.5, i32 3
  store <4 x float> %121, ptr addrspace(1) %39, align 16
  ret void
}

; Function Attrs: nounwind
define void @fusion_12(ptr noalias nocapture readonly align 16 dereferenceable(2949120) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(491520) %arg1, ptr noalias nocapture readonly align 128 dereferenceable(3342336) %arg2, ptr noalias nocapture writeonly align 128 dereferenceable(23040) %arg3, ptr noalias nocapture writeonly align 128 dereferenceable(2949120) %arg4) local_unnamed_addr #0 {
entry:
  %arg453 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg351 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg249 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg147 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg045 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !229
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x = and i32 %1, 31
  %thread_id.y28 = lshr i32 %1, 5
  %.lhs.trunc = trunc i32 %0 to i8
  %2 = udiv i8 %.lhs.trunc, 3
  %3 = mul i8 %2, 3
  %.decomposed = sub i8 %.lhs.trunc, %3
  %.zext39 = zext i8 %2 to i32
  %4 = icmp eq i8 %.decomposed, 2
  %tile_bound1 = select i1 %4, i32 26, i32 32
  %5 = shl nuw nsw i8 %.decomposed, 5
  %tile_origin.2 = zext i8 %5 to i32
  %6 = mul i32 %.zext39, 11520
  %7 = add nuw nsw i32 %thread_id.y28, -32
  %8 = mul nuw nsw i32 %thread_id.y28, 90
  %9 = add i32 %6, %8
  %10 = add i32 %9, %tile_origin.2
  %11 = add i32 %10, %thread_id.x
  %12 = zext i32 %11 to i64
  %13 = shl nuw nsw i64 %12, 2
  %scevgep = getelementptr i8, ptr addrspace(1) %arg045, i64 %13
  %scevgep59 = getelementptr i8, ptr addrspace(1) %arg453, i64 %13
  %14 = udiv i32 %11, 90
  br label %y_in_tile.loop_body

common.ret:                                       ; preds = %y_in_tile.loop_exit, %reduction_write_output-true
  ret void

y_in_tile.loop_body:                              ; preds = %entry, %x_in_tile-after
  %lsr.iv62 = phi i32 [ %14, %entry ], [ %lsr.iv.next63, %x_in_tile-after ]
  %lsr.iv60 = phi ptr addrspace(1) [ %scevgep59, %entry ], [ %scevgep61, %x_in_tile-after ]
  %lsr.iv57 = phi ptr addrspace(1) [ %scevgep, %entry ], [ %scevgep58, %x_in_tile-after ]
  %lsr.iv55 = phi i32 [ %11, %entry ], [ %lsr.iv.next56, %x_in_tile-after ]
  %lsr.iv = phi i32 [ %7, %entry ], [ %lsr.iv.next, %x_in_tile-after ]
  %partial_reduction_result.040 = phi float [ -0.000000e+00, %entry ], [ %partial_reduction_result.1, %x_in_tile-after ]
  %15 = icmp ult i32 %thread_id.x, %tile_bound1
  br i1 %15, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %y_in_tile.loop_body
  %partial_reduction_result.1 = phi float [ %add.13.i37, %x_in_tile-true ], [ %partial_reduction_result.040, %y_in_tile.loop_body ]
  %lsr.iv.next = add nsw i32 %lsr.iv, 32
  %lsr.iv.next56 = add nuw nsw i32 %lsr.iv55, 2880
  %scevgep58 = getelementptr i8, ptr addrspace(1) %lsr.iv57, i64 11520
  %scevgep61 = getelementptr i8, ptr addrspace(1) %lsr.iv60, i64 11520
  %lsr.iv.next63 = add nuw nsw i32 %lsr.iv62, 32
  %16 = icmp ugt i32 %lsr.iv.next, 95
  br i1 %16, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_exit:                              ; preds = %x_in_tile-after
  %17 = zext i32 %thread_id.x to i64
  %18 = zext i32 %thread_id.y28 to i64
  %shmem_output_address = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache64, i64 0, i64 0, i64 0, i64 %17, i64 %18
  store float %partial_reduction_result.1, ptr addrspace(3) %shmem_output_address, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache64, i64 0, i64 0, i64 0, i64 %18, i64 %17
  %partial_reduction_result14 = load float, ptr addrspace(3) %shmem_transposed_addr, align 4
  %19 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result14, i32 16, i32 31)
  %add.13.i = fadd float %partial_reduction_result14, %19
  %20 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i, i32 8, i32 31)
  %add.13.i33 = fadd float %add.13.i, %20
  %21 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i33, i32 4, i32 31)
  %add.13.i34 = fadd float %add.13.i33, %21
  %22 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i34, i32 2, i32 31)
  %add.13.i35 = fadd float %add.13.i34, %22
  %23 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.13.i35, i32 1, i32 31)
  %add.13.i36 = fadd float %add.13.i35, %23
  store float %add.13.i36, ptr addrspace(3) %shmem_transposed_addr, align 4
  %24 = icmp ult i32 %thread_id.y28, %tile_bound1
  %25 = icmp eq i32 %thread_id.x, 0
  %26 = and i1 %25, %24
  br i1 %26, label %reduction_write_output-true, label %common.ret

x_in_tile-true:                                   ; preds = %y_in_tile.loop_body
  %.frozen = freeze i32 %lsr.iv55
  %27 = udiv i32 %.frozen, 6
  %28 = mul i32 %27, 6
  %.decomposed42 = sub i32 %.frozen, %28
  %29 = urem i32 %27, 15
  %30 = and i32 %lsr.iv62, 127
  %31 = udiv i32 %lsr.iv55, 11520
  %32 = shl nuw nsw i32 %31, 7
  %33 = or i32 %30, %32
  %34 = zext i32 %33 to i64
  %35 = zext i32 %29 to i64
  %36 = zext i32 %.decomposed42 to i64
  %Arg_2.3 = getelementptr inbounds [8192 x [17 x [6 x float]]], ptr addrspace(1) %arg249, i64 0, i64 %34, i64 %35, i64 %36
  %Arg_2.33 = load float, ptr addrspace(1) %Arg_2.3, align 4, !invariant.load !195
  %37 = zext i32 %27 to i64
  %Arg_1.2 = getelementptr inbounds float, ptr addrspace(1) %arg147, i64 %37
  %Arg_1.24 = load float, ptr addrspace(1) %Arg_1.2, align 4, !invariant.load !195
  %subtract.6 = fsub float %Arg_2.33, %Arg_1.24
  %Arg_0.15 = load float, ptr addrspace(1) %lsr.iv57, align 4, !invariant.load !195
  %multiply.7 = fmul float %subtract.6, %Arg_0.15
  %add.13.i37 = fadd float %partial_reduction_result.040, %multiply.7
  store float %multiply.7, ptr addrspace(1) %lsr.iv60, align 4
  br label %x_in_tile-after

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %38 = or i32 %thread_id.y28, %tile_origin.2
  %39 = mul nuw nsw i32 %.zext39, 90
  %40 = add nuw nsw i32 %38, %39
  %.frozen43 = freeze i32 %40
  %41 = udiv i32 %.frozen43, 6
  %42 = mul i32 %41, 6
  %.decomposed44 = sub i32 %.frozen43, %42
  %43 = urem i32 %41, 15
  %44 = udiv i32 %40, 90
  %45 = zext i32 %44 to i64
  %46 = zext i32 %43 to i64
  %47 = zext i32 %.decomposed44 to i64
  %output_element_address = getelementptr inbounds [64 x [15 x [6 x float]]], ptr addrspace(1) %arg351, i64 0, i64 %45, i64 %46, i64 %47
  store float %add.13.i36, ptr addrspace(1) %output_element_address, align 4
  br label %common.ret
}

; Function Attrs: nounwind
define void @reduce(ptr noalias nocapture readonly align 128 dereferenceable(23040) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg1, ptr noalias nocapture writeonly align 128 dereferenceable(360) %arg2) local_unnamed_addr #0 {
entry:
  %arg234 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg132 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg030 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !216
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x = and i32 %1, 31
  %thread_id.y18 = lshr i32 %1, 5
  %2 = icmp eq i32 %0, 2
  %tile_bound1 = select i1 %2, i32 26, i32 32
  %tile_origin.2 = shl i32 %0, 5
  %Arg_1.2 = load float, ptr addrspace(1) %arg132, align 128, !invariant.load !195
  %3 = add nuw nsw i32 %thread_id.y18, -32
  %4 = mul nuw nsw i32 %thread_id.y18, 90
  %5 = add i32 %4, %tile_origin.2
  %6 = add i32 %5, %thread_id.x
  %7 = zext i32 %6 to i64
  %8 = shl nuw nsw i64 %7, 2
  %scevgep = getelementptr i8, ptr addrspace(1) %arg030, i64 %8
  br label %y_in_tile.loop_body

common.ret:                                       ; preds = %y_in_tile.loop_exit, %reduction_write_output-true
  ret void

y_in_tile.loop_body:                              ; preds = %entry, %x_in_tile-after
  %lsr.iv36 = phi ptr addrspace(1) [ %scevgep, %entry ], [ %scevgep37, %x_in_tile-after ]
  %lsr.iv = phi i32 [ %3, %entry ], [ %lsr.iv.next, %x_in_tile-after ]
  %partial_reduction_result.028 = phi float [ %Arg_1.2, %entry ], [ %partial_reduction_result.1, %x_in_tile-after ]
  %9 = icmp ult i32 %thread_id.x, %tile_bound1
  br i1 %9, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %y_in_tile.loop_body
  %partial_reduction_result.1 = phi float [ %add.6.i27, %x_in_tile-true ], [ %partial_reduction_result.028, %y_in_tile.loop_body ]
  %lsr.iv.next = add nsw i32 %lsr.iv, 32
  %scevgep37 = getelementptr i8, ptr addrspace(1) %lsr.iv36, i64 11520
  %10 = icmp ugt i32 %lsr.iv.next, 31
  br i1 %10, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_exit:                              ; preds = %x_in_tile-after
  %11 = zext i32 %thread_id.x to i64
  %12 = zext i32 %thread_id.y18 to i64
  %shmem_output_address = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache65, i64 0, i64 0, i64 0, i64 %11, i64 %12
  store float %partial_reduction_result.1, ptr addrspace(3) %shmem_output_address, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache65, i64 0, i64 0, i64 0, i64 %12, i64 %11
  %partial_reduction_result4 = load float, ptr addrspace(3) %shmem_transposed_addr, align 4
  %13 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result4, i32 16, i32 31)
  %add.6.i = fadd float %partial_reduction_result4, %13
  %14 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.6.i, i32 8, i32 31)
  %add.6.i23 = fadd float %add.6.i, %14
  %15 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.6.i23, i32 4, i32 31)
  %add.6.i24 = fadd float %add.6.i23, %15
  %16 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.6.i24, i32 2, i32 31)
  %add.6.i25 = fadd float %add.6.i24, %16
  %17 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.6.i25, i32 1, i32 31)
  %add.6.i26 = fadd float %add.6.i25, %17
  store float %add.6.i26, ptr addrspace(3) %shmem_transposed_addr, align 4
  %18 = icmp ult i32 %thread_id.y18, %tile_bound1
  %19 = icmp eq i32 %thread_id.x, 0
  %20 = and i1 %19, %18
  br i1 %20, label %reduction_write_output-true, label %common.ret

x_in_tile-true:                                   ; preds = %y_in_tile.loop_body
  %Arg_0.13 = load float, ptr addrspace(1) %lsr.iv36, align 4, !invariant.load !195
  %add.6.i27 = fadd float %partial_reduction_result.028, %Arg_0.13
  br label %x_in_tile-after

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %21 = or i32 %tile_origin.2, %thread_id.y18
  %22 = udiv i32 %21, 6
  %23 = mul i32 %22, 6
  %.decomposed = sub i32 %21, %23
  %24 = zext i32 %22 to i64
  %25 = zext i32 %.decomposed to i64
  %output_element_address = getelementptr inbounds [15 x [6 x float]], ptr addrspace(1) %arg234, i64 0, i64 %24, i64 %25
  store float %add.6.i26, ptr addrspace(1) %output_element_address, align 4
  br label %common.ret
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_11(ptr noalias nocapture readonly align 16 dereferenceable(360) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(360) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture writeonly align 128 dereferenceable(360) %arg3) local_unnamed_addr #6 {
entry:
  %arg37 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg25 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg13 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg01 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !208
  %1 = zext i32 %0 to i64
  %2 = getelementptr inbounds float, ptr addrspace(1) %arg01, i64 %1
  %3 = load float, ptr addrspace(1) %2, align 4, !invariant.load !195
  %4 = load float, ptr addrspace(1) %arg25, align 16, !invariant.load !195
  %5 = getelementptr inbounds float, ptr addrspace(1) %arg13, i64 %1
  %6 = load float, ptr addrspace(1) %5, align 4, !invariant.load !195
  %multiply.5 = fmul float %4, %6
  %subtract.7 = fsub float %3, %multiply.5
  %7 = getelementptr inbounds float, ptr addrspace(1) %arg37, i64 %1
  store float %subtract.7, ptr addrspace(1) %7, align 4
  ret void
}

; Function Attrs: nounwind
define void @fusion_50(ptr noalias nocapture readonly align 128 dereferenceable(50331648) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(8388608) %arg1, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg2, ptr noalias nocapture writeonly align 128 dereferenceable(8388608) %arg3) local_unnamed_addr #0 {
entry:
  %arg397 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg295 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg193 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg091 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !200
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x = and i32 %1, 31
  %thread_id.y64 = lshr i32 %1, 5
  %2 = lshr i32 %0, 2
  %3 = shl nuw nsw i32 %0, 6
  %tile_origin.2 = and i32 %3, 192
  %4 = shl nuw nsw i32 %thread_id.x, 1
  %5 = shl nuw nsw i32 %2, 15
  %6 = shl nuw nsw i32 %thread_id.y64, 8
  %7 = add i32 %6, %tile_origin.2
  %8 = add i32 %7, %4
  %9 = add i32 %5, %6
  %10 = add i32 %9, %tile_origin.2
  %11 = add i32 %10, %4
  %12 = add i32 %11, 1
  %13 = lshr i32 %12, 8
  %14 = zext i32 %11 to i64
  %15 = shl nuw nsw i64 %14, 2
  %16 = add nuw nsw i64 %15, 4
  %scevgep = getelementptr i8, ptr addrspace(1) %arg193, i64 %16
  %17 = lshr i32 %11, 8
  br label %y_in_tile.loop_body

common.ret:                                       ; preds = %reduction_write_output-after, %reduction_write_output-true59
  ret void

y_in_tile.loop_body:                              ; preds = %entry, %y_in_tile.loop_body
  %lsr.iv110 = phi i32 [ %17, %entry ], [ %lsr.iv.next111, %y_in_tile.loop_body ]
  %lsr.iv107 = phi ptr addrspace(1) [ %scevgep, %entry ], [ %scevgep108, %y_in_tile.loop_body ]
  %lsr.iv105 = phi i32 [ %13, %entry ], [ %lsr.iv.next106, %y_in_tile.loop_body ]
  %lsr.iv = phi i32 [ %8, %entry ], [ %lsr.iv.next, %y_in_tile.loop_body ]
  %y_in_tile.invar_address.089 = phi i32 [ %thread_id.y64, %entry ], [ %invar.inc, %y_in_tile.loop_body ]
  %partial_reduction_result63.sroa.4.088 = phi float [ -0.000000e+00, %entry ], [ %add.14.i76, %y_in_tile.loop_body ]
  %partial_reduction_result63.sroa.0.087 = phi float [ -0.000000e+00, %entry ], [ %add.14.i, %y_in_tile.loop_body ]
  %invar.inc = add nuw nsw i32 %y_in_tile.invar_address.089, 32
  %18 = and i32 %lsr.iv, 254
  %19 = and i32 %lsr.iv110, 16777088
  %20 = or i32 %19, %y_in_tile.invar_address.089
  %21 = zext i32 %20 to i64
  %22 = zext i32 %18 to i64
  %Arg_1.2 = getelementptr inbounds [8192 x [256 x float]], ptr addrspace(1) %arg193, i64 0, i64 %21, i64 %22
  %Arg_1.23 = load float, ptr addrspace(1) %Arg_1.2, align 8, !invariant.load !195
  %compare.5 = fcmp ogt float %Arg_1.23, 0.000000e+00
  %23 = getelementptr [8192 x [6 x [256 x float]]], ptr addrspace(1) %arg091, i64 0, i64 %21, i64 0, i64 %22
  %Arg_0.199 = getelementptr inbounds float, ptr addrspace(1) %23, i64 1280
  %Arg_0.14 = load float, ptr addrspace(1) %Arg_0.199, align 8, !invariant.load !195
  %24 = select i1 %compare.5, float %Arg_0.14, float 0.000000e+00
  %add.14.i = fadd float %partial_reduction_result63.sroa.0.087, %24
  %scevgep109 = getelementptr i8, ptr addrspace(1) %lsr.iv107, i64 -4
  %25 = load <2 x float>, ptr addrspace(1) %scevgep109, align 8, !invariant.load !195
  %Arg_1.26112 = extractelement <2 x float> %25, i32 0
  %Arg_1.222113 = extractelement <2 x float> %25, i32 1
  %compare.58 = fcmp ogt float %Arg_1.26112, 0.000000e+00
  %26 = select i1 %compare.58, float %Arg_0.14, float 0.000000e+00
  %27 = getelementptr inbounds [8192 x [256 x float]], ptr addrspace(1) %arg397, i64 0, i64 %21, i64 %22
  store float %26, ptr addrspace(1) %27, align 8
  %28 = add i32 %lsr.iv, 1
  %29 = and i32 %28, 255
  %30 = and i32 %lsr.iv105, 16777088
  %31 = or i32 %30, %y_in_tile.invar_address.089
  %32 = zext i32 %31 to i64
  %33 = zext i32 %29 to i64
  %Arg_1.214 = getelementptr inbounds [8192 x [256 x float]], ptr addrspace(1) %arg193, i64 0, i64 %32, i64 %33
  %Arg_1.215 = load float, ptr addrspace(1) %Arg_1.214, align 4, !invariant.load !195
  %compare.517 = fcmp ogt float %Arg_1.215, 0.000000e+00
  %34 = getelementptr [8192 x [6 x [256 x float]]], ptr addrspace(1) %arg091, i64 0, i64 %32, i64 0, i64 %33
  %Arg_0.118100 = getelementptr inbounds float, ptr addrspace(1) %34, i64 1280
  %Arg_0.119 = load float, ptr addrspace(1) %Arg_0.118100, align 4, !invariant.load !195
  %35 = select i1 %compare.517, float %Arg_0.119, float 0.000000e+00
  %add.14.i76 = fadd float %partial_reduction_result63.sroa.4.088, %35
  %compare.524 = fcmp ogt float %Arg_1.222113, 0.000000e+00
  %36 = select i1 %compare.524, float %Arg_0.119, float 0.000000e+00
  %37 = getelementptr inbounds [8192 x [256 x float]], ptr addrspace(1) %arg397, i64 0, i64 %32, i64 %33
  store float %36, ptr addrspace(1) %37, align 4
  %lsr.iv.next = add nuw nsw i32 %lsr.iv, 8192
  %lsr.iv.next106 = add nuw nsw i32 %lsr.iv105, 32
  %scevgep108 = getelementptr i8, ptr addrspace(1) %lsr.iv107, i64 32768
  %lsr.iv.next111 = add nuw nsw i32 %lsr.iv110, 32
  %38 = icmp ugt i32 %y_in_tile.invar_address.089, 95
  br i1 %38, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_body
  %39 = zext i32 %thread_id.x to i64
  %40 = zext i32 %thread_id.y64 to i64
  %shmem_output_address = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache66, i64 0, i64 0, i64 0, i64 %39, i64 %40
  store float %add.14.i, ptr addrspace(3) %shmem_output_address, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache66, i64 0, i64 0, i64 0, i64 %40, i64 %39
  %partial_reduction_result27 = load float, ptr addrspace(3) %shmem_transposed_addr, align 4
  %41 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result27, i32 16, i32 31)
  %add.14.i77 = fadd float %partial_reduction_result27, %41
  %42 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.14.i77, i32 8, i32 31)
  %add.14.i78 = fadd float %add.14.i77, %42
  %43 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.14.i78, i32 4, i32 31)
  %add.14.i79 = fadd float %add.14.i78, %43
  %44 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.14.i79, i32 2, i32 31)
  %add.14.i80 = fadd float %add.14.i79, %44
  %45 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.14.i80, i32 1, i32 31)
  %add.14.i81 = fadd float %add.14.i80, %45
  store float %add.14.i81, ptr addrspace(3) %shmem_transposed_addr, align 4
  %46 = shl nuw nsw i32 %thread_id.y64, 1
  %47 = icmp eq i32 %thread_id.x, 0
  %48 = zext i32 %2 to i64
  %49 = or i32 %46, %tile_origin.2
  %50 = zext i32 %49 to i64
  %output_element_address = getelementptr inbounds [64 x [256 x float]], ptr addrspace(1) %arg295, i64 0, i64 %48, i64 %50
  br i1 %47, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %51 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address41102 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address, i64 1056
  store float %add.14.i76, ptr addrspace(3) %shmem_output_address41102, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr43103 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr, i64 1056
  %partial_reduction_result45 = load float, ptr addrspace(3) %shmem_transposed_addr43103, align 4
  %52 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result45, i32 16, i32 31)
  %add.14.i82 = fadd float %partial_reduction_result45, %52
  %53 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.14.i82, i32 8, i32 31)
  %add.14.i83 = fadd float %add.14.i82, %53
  %54 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.14.i83, i32 4, i32 31)
  %add.14.i84 = fadd float %add.14.i83, %54
  %55 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.14.i84, i32 2, i32 31)
  %add.14.i85 = fadd float %add.14.i84, %55
  %56 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.14.i85, i32 1, i32 31)
  %add.14.i86 = fadd float %add.14.i85, %56
  store float %add.14.i86, ptr addrspace(3) %shmem_transposed_addr43103, align 4
  br i1 %51, label %reduction_write_output-true59, label %common.ret

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  store float %add.14.i81, ptr addrspace(1) %output_element_address, align 8
  br label %reduction_write_output-after

reduction_write_output-true59:                    ; preds = %reduction_write_output-after
  %sunkaddr = getelementptr inbounds i8, ptr addrspace(1) %output_element_address, i64 4
  store float %add.14.i86, ptr addrspace(1) %sunkaddr, align 4
  br label %common.ret
}

; Function Attrs: nounwind
define void @fusion_60(ptr noalias nocapture readonly align 128 dereferenceable(50331648) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(8388608) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(8388608) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(8388608) %arg3, ptr noalias nocapture readonly align 16 dereferenceable(8388608) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(8388608) %arg5, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg6, ptr noalias nocapture writeonly align 128 dereferenceable(8388608) %arg7, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg8, ptr noalias nocapture writeonly align 128 dereferenceable(8388608) %arg9, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg10, ptr noalias nocapture writeonly align 128 dereferenceable(8388608) %arg11, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg12, ptr noalias nocapture writeonly align 128 dereferenceable(8388608) %arg13, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg14, ptr noalias nocapture writeonly align 128 dereferenceable(8388608) %arg15) local_unnamed_addr #0 {
entry:
  %arg15259 = addrspacecast ptr %arg15 to ptr addrspace(1)
  %arg14257 = addrspacecast ptr %arg14 to ptr addrspace(1)
  %arg13255 = addrspacecast ptr %arg13 to ptr addrspace(1)
  %arg12253 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg11251 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg10249 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg9247 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg8245 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg7243 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg6241 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg5239 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg4237 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg3235 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg2233 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg1231 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg0229 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !194
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x = and i32 %1, 31
  %thread_id.y169 = lshr i32 %1, 5
  %2 = lshr i32 %0, 3
  %3 = shl nuw nsw i32 %0, 5
  %tile_origin.2 = and i32 %3, 224
  %4 = shl nuw nsw i32 %2, 15
  %5 = or i32 %tile_origin.2, %thread_id.x
  %6 = zext i32 %5 to i64
  %7 = shl nuw nsw i32 %thread_id.y169, 8
  %8 = add i32 %4, %7
  %9 = add i32 %8, %tile_origin.2
  %10 = add i32 %9, %thread_id.x
  %11 = zext i32 %10 to i64
  %12 = shl nuw nsw i64 %11, 2
  %13 = lshr i32 %10, 8
  br label %y_in_tile.loop_body

common.ret:                                       ; preds = %reduction_write_output-after144, %reduction_write_output-true165
  ret void

y_in_tile.loop_body:                              ; preds = %entry, %y_in_tile.loop_body
  %lsr.iv293 = phi i32 [ %13, %entry ], [ %lsr.iv.next, %y_in_tile.loop_body ]
  %lsr.iv290 = phi ptr addrspace(1) [ %arg7243, %entry ], [ %scevgep291, %y_in_tile.loop_body ]
  %lsr.iv287 = phi ptr addrspace(1) [ %arg9247, %entry ], [ %scevgep288, %y_in_tile.loop_body ]
  %lsr.iv284 = phi ptr addrspace(1) [ %arg11251, %entry ], [ %scevgep285, %y_in_tile.loop_body ]
  %lsr.iv281 = phi ptr addrspace(1) [ %arg15259, %entry ], [ %scevgep282, %y_in_tile.loop_body ]
  %lsr.iv278 = phi ptr addrspace(1) [ %arg13255, %entry ], [ %scevgep279, %y_in_tile.loop_body ]
  %lsr.iv275 = phi ptr addrspace(1) [ %arg5239, %entry ], [ %scevgep276, %y_in_tile.loop_body ]
  %lsr.iv272 = phi ptr addrspace(1) [ %arg4237, %entry ], [ %scevgep273, %y_in_tile.loop_body ]
  %lsr.iv269 = phi ptr addrspace(1) [ %arg3235, %entry ], [ %scevgep270, %y_in_tile.loop_body ]
  %lsr.iv266 = phi ptr addrspace(1) [ %arg2233, %entry ], [ %scevgep267, %y_in_tile.loop_body ]
  %lsr.iv = phi ptr addrspace(1) [ %arg1231, %entry ], [ %scevgep, %y_in_tile.loop_body ]
  %y_in_tile.invar_address.0224 = phi i32 [ %thread_id.y169, %entry ], [ %invar.inc, %y_in_tile.loop_body ]
  %partial_reduction_result11.0223 = phi float [ -0.000000e+00, %entry ], [ %add.58.i, %y_in_tile.loop_body ]
  %partial_reduction_result.0222 = phi float [ -0.000000e+00, %entry ], [ %add.18.i, %y_in_tile.loop_body ]
  %partial_reduction_result8.0221 = phi float [ -0.000000e+00, %entry ], [ %add.48.i, %y_in_tile.loop_body ]
  %partial_reduction_result2.0220 = phi float [ -0.000000e+00, %entry ], [ %add.28.i, %y_in_tile.loop_body ]
  %partial_reduction_result5.0219 = phi float [ -0.000000e+00, %entry ], [ %add.38.i, %y_in_tile.loop_body ]
  %invar.inc = add nuw nsw i32 %y_in_tile.invar_address.0224, 32
  %14 = and i32 %lsr.iv293, 16777088
  %15 = or i32 %14, %y_in_tile.invar_address.0224
  %scevgep265 = getelementptr i8, ptr addrspace(1) %lsr.iv, i64 %12
  %Arg_1.215 = load float, ptr addrspace(1) %scevgep265, align 4, !invariant.load !195
  %compare.9 = fcmp ogt float %Arg_1.215, 0.000000e+00
  %16 = zext i32 %15 to i64
  %Arg_0.1 = getelementptr inbounds [8192 x [6 x [256 x float]]], ptr addrspace(1) %arg0229, i64 0, i64 %16, i64 0, i64 %6
  %Arg_0.116 = load float, ptr addrspace(1) %Arg_0.1, align 4, !invariant.load !195
  %17 = select i1 %compare.9, float %Arg_0.116, float 0.000000e+00
  %add.18.i = fadd float %partial_reduction_result.0222, %17
  %scevgep268 = getelementptr i8, ptr addrspace(1) %lsr.iv266, i64 %12
  %Arg_2.317 = load float, ptr addrspace(1) %scevgep268, align 4, !invariant.load !195
  %compare.20 = fcmp ogt float %Arg_2.317, 0.000000e+00
  %Arg_0.119261 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 256
  %Arg_0.120 = load float, ptr addrspace(1) %Arg_0.119261, align 4, !invariant.load !195
  %18 = select i1 %compare.20, float %Arg_0.120, float 0.000000e+00
  %add.28.i = fadd float %partial_reduction_result2.0220, %18
  %scevgep271 = getelementptr i8, ptr addrspace(1) %lsr.iv269, i64 %12
  %Arg_3.422 = load float, ptr addrspace(1) %scevgep271, align 4, !invariant.load !195
  %compare.30 = fcmp ogt float %Arg_3.422, 0.000000e+00
  %Arg_0.124262 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 512
  %Arg_0.125 = load float, ptr addrspace(1) %Arg_0.124262, align 4, !invariant.load !195
  %19 = select i1 %compare.30, float %Arg_0.125, float 0.000000e+00
  %add.38.i = fadd float %partial_reduction_result5.0219, %19
  %scevgep274 = getelementptr i8, ptr addrspace(1) %lsr.iv272, i64 %12
  %Arg_4.527 = load float, ptr addrspace(1) %scevgep274, align 4, !invariant.load !195
  %compare.40 = fcmp ogt float %Arg_4.527, 0.000000e+00
  %Arg_0.129263 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 768
  %Arg_0.130 = load float, ptr addrspace(1) %Arg_0.129263, align 4, !invariant.load !195
  %20 = select i1 %compare.40, float %Arg_0.130, float 0.000000e+00
  %add.48.i = fadd float %partial_reduction_result8.0221, %20
  %scevgep277 = getelementptr i8, ptr addrspace(1) %lsr.iv275, i64 %12
  %Arg_5.632 = load float, ptr addrspace(1) %scevgep277, align 4, !invariant.load !195
  %compare.50 = fcmp ogt float %Arg_5.632, 0.000000e+00
  %Arg_0.134264 = getelementptr inbounds float, ptr addrspace(1) %Arg_0.1, i64 1024
  %Arg_0.135 = load float, ptr addrspace(1) %Arg_0.134264, align 4, !invariant.load !195
  %21 = select i1 %compare.50, float %Arg_0.135, float 0.000000e+00
  %add.58.i = fadd float %partial_reduction_result11.0223, %21
  %scevgep280 = getelementptr i8, ptr addrspace(1) %lsr.iv278, i64 %12
  store float %20, ptr addrspace(1) %scevgep280, align 4
  %scevgep283 = getelementptr i8, ptr addrspace(1) %lsr.iv281, i64 %12
  store float %21, ptr addrspace(1) %scevgep283, align 4
  %scevgep286 = getelementptr i8, ptr addrspace(1) %lsr.iv284, i64 %12
  store float %19, ptr addrspace(1) %scevgep286, align 4
  %scevgep289 = getelementptr i8, ptr addrspace(1) %lsr.iv287, i64 %12
  store float %18, ptr addrspace(1) %scevgep289, align 4
  %scevgep292 = getelementptr i8, ptr addrspace(1) %lsr.iv290, i64 %12
  store float %17, ptr addrspace(1) %scevgep292, align 4
  %scevgep = getelementptr i8, ptr addrspace(1) %lsr.iv, i64 32768
  %scevgep267 = getelementptr i8, ptr addrspace(1) %lsr.iv266, i64 32768
  %scevgep270 = getelementptr i8, ptr addrspace(1) %lsr.iv269, i64 32768
  %scevgep273 = getelementptr i8, ptr addrspace(1) %lsr.iv272, i64 32768
  %scevgep276 = getelementptr i8, ptr addrspace(1) %lsr.iv275, i64 32768
  %scevgep279 = getelementptr i8, ptr addrspace(1) %lsr.iv278, i64 32768
  %scevgep282 = getelementptr i8, ptr addrspace(1) %lsr.iv281, i64 32768
  %scevgep285 = getelementptr i8, ptr addrspace(1) %lsr.iv284, i64 32768
  %scevgep288 = getelementptr i8, ptr addrspace(1) %lsr.iv287, i64 32768
  %scevgep291 = getelementptr i8, ptr addrspace(1) %lsr.iv290, i64 32768
  %lsr.iv.next = add nuw nsw i32 %lsr.iv293, 32
  %22 = icmp ugt i32 %y_in_tile.invar_address.0224, 95
  br i1 %22, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_body
  %23 = zext i32 %thread_id.x to i64
  %24 = zext i32 %thread_id.y169 to i64
  %shmem_output_address = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache67, i64 0, i64 0, i64 0, i64 %23, i64 %24
  store float %add.18.i, ptr addrspace(3) %shmem_output_address, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache67, i64 0, i64 0, i64 0, i64 %24, i64 %23
  %partial_reduction_result67 = load float, ptr addrspace(3) %shmem_transposed_addr, align 4
  %25 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result67, i32 16, i32 31)
  %add.18.i194 = fadd float %partial_reduction_result67, %25
  %26 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.18.i194, i32 8, i32 31)
  %add.18.i195 = fadd float %add.18.i194, %26
  %27 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.18.i195, i32 4, i32 31)
  %add.18.i196 = fadd float %add.18.i195, %27
  %28 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.18.i196, i32 2, i32 31)
  %add.18.i197 = fadd float %add.18.i196, %28
  %29 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.18.i197, i32 1, i32 31)
  %add.18.i198 = fadd float %add.18.i197, %29
  store float %add.18.i198, ptr addrspace(3) %shmem_transposed_addr, align 4
  %30 = icmp eq i32 %thread_id.x, 0
  %31 = zext i32 %2 to i64
  %32 = or i32 %tile_origin.2, %thread_id.y169
  %33 = zext i32 %32 to i64
  %output_element_address = getelementptr inbounds [64 x [256 x float]], ptr addrspace(1) %arg6241, i64 0, i64 %31, i64 %33
  br i1 %30, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %34 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address81 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache68, i64 0, i64 0, i64 0, i64 %23, i64 %24
  store float %add.28.i, ptr addrspace(3) %shmem_output_address81, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr83 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache68, i64 0, i64 0, i64 0, i64 %24, i64 %23
  %partial_reduction_result85 = load float, ptr addrspace(3) %shmem_transposed_addr83, align 4
  %35 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result85, i32 16, i32 31)
  %add.28.i199 = fadd float %partial_reduction_result85, %35
  %36 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.28.i199, i32 8, i32 31)
  %add.28.i200 = fadd float %add.28.i199, %36
  %37 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.28.i200, i32 4, i32 31)
  %add.28.i201 = fadd float %add.28.i200, %37
  %38 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.28.i201, i32 2, i32 31)
  %add.28.i202 = fadd float %add.28.i201, %38
  %39 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.28.i202, i32 1, i32 31)
  %add.28.i203 = fadd float %add.28.i202, %39
  store float %add.28.i203, ptr addrspace(3) %shmem_transposed_addr83, align 4
  %output_element_address101 = getelementptr inbounds [64 x [256 x float]], ptr addrspace(1) %arg8245, i64 0, i64 %31, i64 %33
  br i1 %34, label %reduction_write_output-true99, label %reduction_write_output-after100

reduction_write_output-after100:                  ; preds = %reduction_write_output-true99, %reduction_write_output-after
  %40 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address103 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache69, i64 0, i64 0, i64 0, i64 %23, i64 %24
  store float %add.38.i, ptr addrspace(3) %shmem_output_address103, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr105 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache69, i64 0, i64 0, i64 0, i64 %24, i64 %23
  %partial_reduction_result107 = load float, ptr addrspace(3) %shmem_transposed_addr105, align 4
  %41 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result107, i32 16, i32 31)
  %add.38.i204 = fadd float %partial_reduction_result107, %41
  %42 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.38.i204, i32 8, i32 31)
  %add.38.i205 = fadd float %add.38.i204, %42
  %43 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.38.i205, i32 4, i32 31)
  %add.38.i206 = fadd float %add.38.i205, %43
  %44 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.38.i206, i32 2, i32 31)
  %add.38.i207 = fadd float %add.38.i206, %44
  %45 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.38.i207, i32 1, i32 31)
  %add.38.i208 = fadd float %add.38.i207, %45
  store float %add.38.i208, ptr addrspace(3) %shmem_transposed_addr105, align 4
  %output_element_address123 = getelementptr inbounds [64 x [256 x float]], ptr addrspace(1) %arg10249, i64 0, i64 %31, i64 %33
  br i1 %40, label %reduction_write_output-true121, label %reduction_write_output-after122

reduction_write_output-after122:                  ; preds = %reduction_write_output-true121, %reduction_write_output-after100
  %46 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address125 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache70, i64 0, i64 0, i64 0, i64 %23, i64 %24
  store float %add.48.i, ptr addrspace(3) %shmem_output_address125, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr127 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache70, i64 0, i64 0, i64 0, i64 %24, i64 %23
  %partial_reduction_result129 = load float, ptr addrspace(3) %shmem_transposed_addr127, align 4
  %47 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result129, i32 16, i32 31)
  %add.48.i209 = fadd float %partial_reduction_result129, %47
  %48 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.48.i209, i32 8, i32 31)
  %add.48.i210 = fadd float %add.48.i209, %48
  %49 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.48.i210, i32 4, i32 31)
  %add.48.i211 = fadd float %add.48.i210, %49
  %50 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.48.i211, i32 2, i32 31)
  %add.48.i212 = fadd float %add.48.i211, %50
  %51 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.48.i212, i32 1, i32 31)
  %add.48.i213 = fadd float %add.48.i212, %51
  store float %add.48.i213, ptr addrspace(3) %shmem_transposed_addr127, align 4
  %output_element_address145 = getelementptr inbounds [64 x [256 x float]], ptr addrspace(1) %arg12253, i64 0, i64 %31, i64 %33
  br i1 %46, label %reduction_write_output-true143, label %reduction_write_output-after144

reduction_write_output-after144:                  ; preds = %reduction_write_output-true143, %reduction_write_output-after122
  %52 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address147 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache71, i64 0, i64 0, i64 0, i64 %23, i64 %24
  store float %add.58.i, ptr addrspace(3) %shmem_output_address147, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr149 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache71, i64 0, i64 0, i64 0, i64 %24, i64 %23
  %partial_reduction_result151 = load float, ptr addrspace(3) %shmem_transposed_addr149, align 4
  %53 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result151, i32 16, i32 31)
  %add.58.i214 = fadd float %partial_reduction_result151, %53
  %54 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.58.i214, i32 8, i32 31)
  %add.58.i215 = fadd float %add.58.i214, %54
  %55 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.58.i215, i32 4, i32 31)
  %add.58.i216 = fadd float %add.58.i215, %55
  %56 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.58.i216, i32 2, i32 31)
  %add.58.i217 = fadd float %add.58.i216, %56
  %57 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.58.i217, i32 1, i32 31)
  %add.58.i218 = fadd float %add.58.i217, %57
  store float %add.58.i218, ptr addrspace(3) %shmem_transposed_addr149, align 4
  %output_element_address167 = getelementptr inbounds [64 x [256 x float]], ptr addrspace(1) %arg14257, i64 0, i64 %31, i64 %33
  br i1 %52, label %reduction_write_output-true165, label %common.ret

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  store float %add.18.i198, ptr addrspace(1) %output_element_address, align 4
  br label %reduction_write_output-after

reduction_write_output-true99:                    ; preds = %reduction_write_output-after
  store float %add.28.i203, ptr addrspace(1) %output_element_address101, align 4
  br label %reduction_write_output-after100

reduction_write_output-true121:                   ; preds = %reduction_write_output-after100
  store float %add.38.i208, ptr addrspace(1) %output_element_address123, align 4
  br label %reduction_write_output-after122

reduction_write_output-true143:                   ; preds = %reduction_write_output-after122
  store float %add.48.i213, ptr addrspace(1) %output_element_address145, align 4
  br label %reduction_write_output-after144

reduction_write_output-true165:                   ; preds = %reduction_write_output-after144
  store float %add.58.i218, ptr addrspace(1) %output_element_address167, align 4
  br label %common.ret
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_375(ptr noalias nocapture readonly align 16 dereferenceable(1024) %arg0, ptr noalias nocapture align 128 dereferenceable(1024) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(1024) %arg3, ptr noalias nocapture align 128 dereferenceable(1024) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(1024) %arg5, ptr noalias nocapture align 128 dereferenceable(1024) %arg6, ptr noalias nocapture readonly align 16 dereferenceable(1024) %arg7, ptr noalias nocapture align 128 dereferenceable(1024) %arg8, ptr noalias nocapture readonly align 16 dereferenceable(1024) %arg9, ptr noalias nocapture align 128 dereferenceable(1024) %arg10, ptr noalias nocapture readonly align 16 dereferenceable(1024) %arg11, ptr noalias nocapture align 128 dereferenceable(1024) %arg12, ptr noalias nocapture readonly align 16 dereferenceable(1024) %arg13, ptr noalias nocapture align 128 dereferenceable(1024) %arg14, ptr noalias nocapture readonly align 16 dereferenceable(1024) %arg15, ptr noalias nocapture align 128 dereferenceable(1024) %arg16, ptr noalias nocapture readonly align 16 dereferenceable(1024) %arg17, ptr noalias nocapture align 128 dereferenceable(1024) %arg18, ptr noalias nocapture readonly align 16 dereferenceable(1024) %arg19, ptr noalias nocapture align 128 dereferenceable(1024) %arg20, ptr noalias nocapture readonly align 16 dereferenceable(1024) %arg21, ptr noalias nocapture align 128 dereferenceable(1024) %arg22, ptr noalias nocapture readonly align 16 dereferenceable(1024) %arg23, ptr noalias nocapture align 128 dereferenceable(1024) %arg24, ptr noalias nocapture readonly align 16 dereferenceable(1024) %arg25, ptr noalias nocapture align 128 dereferenceable(1024) %arg26, ptr noalias nocapture readonly align 16 dereferenceable(1024) %arg27, ptr noalias nocapture align 128 dereferenceable(1024) %arg28, ptr noalias nocapture readonly align 16 dereferenceable(1024) %arg29, ptr noalias nocapture align 128 dereferenceable(1024) %arg30, ptr noalias nocapture readonly align 16 dereferenceable(1024) %arg31, ptr noalias nocapture align 128 dereferenceable(1024) %arg32, ptr noalias nocapture readonly align 16 dereferenceable(1024) %arg33, ptr noalias nocapture align 128 dereferenceable(1024) %arg34, ptr noalias nocapture readonly align 16 dereferenceable(1024) %arg35, ptr noalias nocapture align 128 dereferenceable(1024) %arg36, ptr noalias nocapture readonly align 16 dereferenceable(1024) %arg37, ptr noalias nocapture align 128 dereferenceable(1024) %arg38, ptr noalias nocapture readonly align 16 dereferenceable(1024) %arg39, ptr noalias nocapture align 128 dereferenceable(1024) %arg40) local_unnamed_addr #6 {
entry:
  %arg4088 = addrspacecast ptr %arg40 to ptr addrspace(1)
  %arg3986 = addrspacecast ptr %arg39 to ptr addrspace(1)
  %arg3884 = addrspacecast ptr %arg38 to ptr addrspace(1)
  %arg3782 = addrspacecast ptr %arg37 to ptr addrspace(1)
  %arg3680 = addrspacecast ptr %arg36 to ptr addrspace(1)
  %arg3578 = addrspacecast ptr %arg35 to ptr addrspace(1)
  %arg3476 = addrspacecast ptr %arg34 to ptr addrspace(1)
  %arg3374 = addrspacecast ptr %arg33 to ptr addrspace(1)
  %arg3272 = addrspacecast ptr %arg32 to ptr addrspace(1)
  %arg3170 = addrspacecast ptr %arg31 to ptr addrspace(1)
  %arg3068 = addrspacecast ptr %arg30 to ptr addrspace(1)
  %arg2966 = addrspacecast ptr %arg29 to ptr addrspace(1)
  %arg2864 = addrspacecast ptr %arg28 to ptr addrspace(1)
  %arg2762 = addrspacecast ptr %arg27 to ptr addrspace(1)
  %arg2660 = addrspacecast ptr %arg26 to ptr addrspace(1)
  %arg2558 = addrspacecast ptr %arg25 to ptr addrspace(1)
  %arg2456 = addrspacecast ptr %arg24 to ptr addrspace(1)
  %arg2354 = addrspacecast ptr %arg23 to ptr addrspace(1)
  %arg2252 = addrspacecast ptr %arg22 to ptr addrspace(1)
  %arg2150 = addrspacecast ptr %arg21 to ptr addrspace(1)
  %arg2048 = addrspacecast ptr %arg20 to ptr addrspace(1)
  %arg1946 = addrspacecast ptr %arg19 to ptr addrspace(1)
  %arg1844 = addrspacecast ptr %arg18 to ptr addrspace(1)
  %arg1742 = addrspacecast ptr %arg17 to ptr addrspace(1)
  %arg1640 = addrspacecast ptr %arg16 to ptr addrspace(1)
  %arg1538 = addrspacecast ptr %arg15 to ptr addrspace(1)
  %arg1436 = addrspacecast ptr %arg14 to ptr addrspace(1)
  %arg1334 = addrspacecast ptr %arg13 to ptr addrspace(1)
  %arg1232 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg1130 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg1028 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg926 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg824 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg722 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg620 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg518 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg416 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg314 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg212 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg110 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg01 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !200
  %1 = zext i32 %0 to i64
  %2 = getelementptr inbounds float, ptr addrspace(1) %arg01, i64 %1
  %3 = load float, ptr addrspace(1) %2, align 4, !invariant.load !195
  %4 = load float, ptr addrspace(1) %arg212, align 16, !invariant.load !195
  %5 = getelementptr inbounds float, ptr addrspace(1) %arg110, i64 %1
  %6 = load float, ptr addrspace(1) %5, align 4
  %multiply.43 = fmul float %4, %6
  %subtract.44 = fsub float %3, %multiply.43
  %7 = getelementptr inbounds float, ptr addrspace(1) %arg314, i64 %1
  %8 = load float, ptr addrspace(1) %7, align 4, !invariant.load !195
  %9 = getelementptr inbounds float, ptr addrspace(1) %arg416, i64 %1
  %10 = load float, ptr addrspace(1) %9, align 4
  %multiply.45 = fmul float %4, %10
  %subtract.46 = fsub float %8, %multiply.45
  %11 = getelementptr inbounds float, ptr addrspace(1) %arg518, i64 %1
  %12 = load float, ptr addrspace(1) %11, align 4, !invariant.load !195
  %13 = getelementptr inbounds float, ptr addrspace(1) %arg620, i64 %1
  %14 = load float, ptr addrspace(1) %13, align 4
  %multiply.47 = fmul float %4, %14
  %subtract.48 = fsub float %12, %multiply.47
  %15 = getelementptr inbounds float, ptr addrspace(1) %arg722, i64 %1
  %16 = load float, ptr addrspace(1) %15, align 4, !invariant.load !195
  %17 = getelementptr inbounds float, ptr addrspace(1) %arg824, i64 %1
  %18 = load float, ptr addrspace(1) %17, align 4
  %multiply.49 = fmul float %4, %18
  %subtract.50 = fsub float %16, %multiply.49
  %19 = getelementptr inbounds float, ptr addrspace(1) %arg926, i64 %1
  %20 = load float, ptr addrspace(1) %19, align 4, !invariant.load !195
  %21 = getelementptr inbounds float, ptr addrspace(1) %arg1028, i64 %1
  %22 = load float, ptr addrspace(1) %21, align 4
  %multiply.51 = fmul float %4, %22
  %subtract.52 = fsub float %20, %multiply.51
  %23 = getelementptr inbounds float, ptr addrspace(1) %arg1130, i64 %1
  %24 = load float, ptr addrspace(1) %23, align 4, !invariant.load !195
  %25 = getelementptr inbounds float, ptr addrspace(1) %arg1232, i64 %1
  %26 = load float, ptr addrspace(1) %25, align 4
  %multiply.53 = fmul float %4, %26
  %subtract.54 = fsub float %24, %multiply.53
  %27 = getelementptr inbounds float, ptr addrspace(1) %arg1334, i64 %1
  %28 = load float, ptr addrspace(1) %27, align 4, !invariant.load !195
  %29 = getelementptr inbounds float, ptr addrspace(1) %arg1436, i64 %1
  %30 = load float, ptr addrspace(1) %29, align 4
  %multiply.55 = fmul float %4, %30
  %subtract.56 = fsub float %28, %multiply.55
  %31 = getelementptr inbounds float, ptr addrspace(1) %arg1538, i64 %1
  %32 = load float, ptr addrspace(1) %31, align 4, !invariant.load !195
  %33 = getelementptr inbounds float, ptr addrspace(1) %arg1640, i64 %1
  %34 = load float, ptr addrspace(1) %33, align 4
  %multiply.57 = fmul float %4, %34
  %subtract.58 = fsub float %32, %multiply.57
  %35 = getelementptr inbounds float, ptr addrspace(1) %arg1742, i64 %1
  %36 = load float, ptr addrspace(1) %35, align 4, !invariant.load !195
  %37 = getelementptr inbounds float, ptr addrspace(1) %arg1844, i64 %1
  %38 = load float, ptr addrspace(1) %37, align 4
  %multiply.59 = fmul float %4, %38
  %subtract.60 = fsub float %36, %multiply.59
  %39 = getelementptr inbounds float, ptr addrspace(1) %arg1946, i64 %1
  %40 = load float, ptr addrspace(1) %39, align 4, !invariant.load !195
  %41 = getelementptr inbounds float, ptr addrspace(1) %arg2048, i64 %1
  %42 = load float, ptr addrspace(1) %41, align 4
  %multiply.61 = fmul float %4, %42
  %subtract.62 = fsub float %40, %multiply.61
  %43 = getelementptr inbounds float, ptr addrspace(1) %arg2150, i64 %1
  %44 = load float, ptr addrspace(1) %43, align 4, !invariant.load !195
  %45 = getelementptr inbounds float, ptr addrspace(1) %arg2252, i64 %1
  %46 = load float, ptr addrspace(1) %45, align 4
  %multiply.63 = fmul float %4, %46
  %subtract.64 = fsub float %44, %multiply.63
  %47 = getelementptr inbounds float, ptr addrspace(1) %arg2354, i64 %1
  %48 = load float, ptr addrspace(1) %47, align 4, !invariant.load !195
  %49 = getelementptr inbounds float, ptr addrspace(1) %arg2456, i64 %1
  %50 = load float, ptr addrspace(1) %49, align 4
  %multiply.65 = fmul float %4, %50
  %subtract.66 = fsub float %48, %multiply.65
  %51 = getelementptr inbounds float, ptr addrspace(1) %arg2558, i64 %1
  %52 = load float, ptr addrspace(1) %51, align 4, !invariant.load !195
  %53 = getelementptr inbounds float, ptr addrspace(1) %arg2660, i64 %1
  %54 = load float, ptr addrspace(1) %53, align 4
  %multiply.67 = fmul float %4, %54
  %subtract.68 = fsub float %52, %multiply.67
  %55 = getelementptr inbounds float, ptr addrspace(1) %arg2762, i64 %1
  %56 = load float, ptr addrspace(1) %55, align 4, !invariant.load !195
  %57 = getelementptr inbounds float, ptr addrspace(1) %arg2864, i64 %1
  %58 = load float, ptr addrspace(1) %57, align 4
  %multiply.69 = fmul float %4, %58
  %subtract.70 = fsub float %56, %multiply.69
  %59 = getelementptr inbounds float, ptr addrspace(1) %arg2966, i64 %1
  %60 = load float, ptr addrspace(1) %59, align 4, !invariant.load !195
  %61 = getelementptr inbounds float, ptr addrspace(1) %arg3068, i64 %1
  %62 = load float, ptr addrspace(1) %61, align 4
  %multiply.71 = fmul float %4, %62
  %subtract.72 = fsub float %60, %multiply.71
  %63 = getelementptr inbounds float, ptr addrspace(1) %arg3170, i64 %1
  %64 = load float, ptr addrspace(1) %63, align 4, !invariant.load !195
  %65 = getelementptr inbounds float, ptr addrspace(1) %arg3272, i64 %1
  %66 = load float, ptr addrspace(1) %65, align 4
  %multiply.73 = fmul float %4, %66
  %subtract.74 = fsub float %64, %multiply.73
  %67 = getelementptr inbounds float, ptr addrspace(1) %arg3374, i64 %1
  %68 = load float, ptr addrspace(1) %67, align 4, !invariant.load !195
  %69 = getelementptr inbounds float, ptr addrspace(1) %arg3476, i64 %1
  %70 = load float, ptr addrspace(1) %69, align 4
  %multiply.75 = fmul float %4, %70
  %subtract.76 = fsub float %68, %multiply.75
  %71 = getelementptr inbounds float, ptr addrspace(1) %arg3578, i64 %1
  %72 = load float, ptr addrspace(1) %71, align 4, !invariant.load !195
  %73 = getelementptr inbounds float, ptr addrspace(1) %arg3680, i64 %1
  %74 = load float, ptr addrspace(1) %73, align 4
  %multiply.77 = fmul float %4, %74
  %subtract.78 = fsub float %72, %multiply.77
  %75 = getelementptr inbounds float, ptr addrspace(1) %arg3782, i64 %1
  %76 = load float, ptr addrspace(1) %75, align 4, !invariant.load !195
  %77 = getelementptr inbounds float, ptr addrspace(1) %arg3884, i64 %1
  %78 = load float, ptr addrspace(1) %77, align 4
  %multiply.79 = fmul float %4, %78
  %subtract.80 = fsub float %76, %multiply.79
  %79 = getelementptr inbounds float, ptr addrspace(1) %arg3986, i64 %1
  %80 = load float, ptr addrspace(1) %79, align 4, !invariant.load !195
  %81 = getelementptr inbounds float, ptr addrspace(1) %arg4088, i64 %1
  %82 = load float, ptr addrspace(1) %81, align 4
  %multiply.81 = fmul float %4, %82
  %subtract.82 = fsub float %80, %multiply.81
  store float %subtract.44, ptr addrspace(1) %49, align 4
  store float %subtract.46, ptr addrspace(1) %53, align 4
  store float %subtract.48, ptr addrspace(1) %57, align 4
  store float %subtract.50, ptr addrspace(1) %61, align 4
  store float %subtract.52, ptr addrspace(1) %65, align 4
  store float %subtract.54, ptr addrspace(1) %69, align 4
  store float %subtract.56, ptr addrspace(1) %73, align 4
  store float %subtract.58, ptr addrspace(1) %77, align 4
  store float %subtract.60, ptr addrspace(1) %81, align 4
  store float %subtract.62, ptr addrspace(1) %45, align 4
  store float %subtract.64, ptr addrspace(1) %9, align 4
  store float %subtract.66, ptr addrspace(1) %13, align 4
  store float %subtract.68, ptr addrspace(1) %17, align 4
  store float %subtract.70, ptr addrspace(1) %21, align 4
  store float %subtract.72, ptr addrspace(1) %25, align 4
  store float %subtract.74, ptr addrspace(1) %29, align 4
  store float %subtract.76, ptr addrspace(1) %33, align 4
  store float %subtract.78, ptr addrspace(1) %37, align 4
  store float %subtract.80, ptr addrspace(1) %41, align 4
  store float %subtract.82, ptr addrspace(1) %5, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_48(ptr noalias nocapture readonly align 16 dereferenceable(524288) %arg0, ptr noalias nocapture align 128 dereferenceable(524288) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(524288) %arg3, ptr noalias nocapture align 128 dereferenceable(524288) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(524288) %arg5, ptr noalias nocapture align 128 dereferenceable(524288) %arg6, ptr noalias nocapture readonly align 16 dereferenceable(524288) %arg7, ptr noalias nocapture align 128 dereferenceable(524288) %arg8, ptr noalias nocapture readonly align 16 dereferenceable(524288) %arg9, ptr noalias nocapture align 128 dereferenceable(524288) %arg10, ptr noalias nocapture readonly align 16 dereferenceable(524288) %arg11, ptr noalias nocapture align 128 dereferenceable(524288) %arg12) local_unnamed_addr #6 {
entry:
  %arg1261 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg1159 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg1057 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg955 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg853 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg751 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg649 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg547 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg445 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg343 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg241 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg139 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg037 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !213
  %1 = shl nuw nsw i32 %0, 10
  %2 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !200
  %3 = shl nuw nsw i32 %2, 2
  %linear_index_base = or i32 %1, %3
  %4 = zext i32 %linear_index_base to i64
  %5 = getelementptr float, ptr addrspace(1) %arg037, i64 %4
  %6 = load <4 x float>, ptr addrspace(1) %5, align 16, !invariant.load !195
  %7 = extractelement <4 x float> %6, i32 0
  %8 = extractelement <4 x float> %6, i32 1
  %9 = extractelement <4 x float> %6, i32 2
  %10 = extractelement <4 x float> %6, i32 3
  %11 = load float, ptr addrspace(1) %arg241, align 16, !invariant.load !195
  %12 = getelementptr float, ptr addrspace(1) %arg139, i64 %4
  %13 = load <4 x float>, ptr addrspace(1) %12, align 16
  %14 = extractelement <4 x float> %13, i32 0
  %15 = extractelement <4 x float> %13, i32 1
  %16 = extractelement <4 x float> %13, i32 2
  %17 = extractelement <4 x float> %13, i32 3
  %multiply.15 = fmul float %11, %14
  %subtract.16 = fsub float %7, %multiply.15
  %18 = getelementptr float, ptr addrspace(1) %arg343, i64 %4
  %19 = load <4 x float>, ptr addrspace(1) %18, align 16, !invariant.load !195
  %20 = extractelement <4 x float> %19, i32 0
  %21 = extractelement <4 x float> %19, i32 1
  %22 = extractelement <4 x float> %19, i32 2
  %23 = extractelement <4 x float> %19, i32 3
  %24 = getelementptr float, ptr addrspace(1) %arg445, i64 %4
  %25 = load <4 x float>, ptr addrspace(1) %24, align 16
  %26 = extractelement <4 x float> %25, i32 0
  %27 = extractelement <4 x float> %25, i32 1
  %28 = extractelement <4 x float> %25, i32 2
  %29 = extractelement <4 x float> %25, i32 3
  %multiply.17 = fmul float %11, %26
  %subtract.18 = fsub float %20, %multiply.17
  %30 = getelementptr float, ptr addrspace(1) %arg547, i64 %4
  %31 = load <4 x float>, ptr addrspace(1) %30, align 16, !invariant.load !195
  %32 = extractelement <4 x float> %31, i32 0
  %33 = extractelement <4 x float> %31, i32 1
  %34 = extractelement <4 x float> %31, i32 2
  %35 = extractelement <4 x float> %31, i32 3
  %36 = getelementptr float, ptr addrspace(1) %arg649, i64 %4
  %37 = load <4 x float>, ptr addrspace(1) %36, align 16
  %38 = extractelement <4 x float> %37, i32 0
  %39 = extractelement <4 x float> %37, i32 1
  %40 = extractelement <4 x float> %37, i32 2
  %41 = extractelement <4 x float> %37, i32 3
  %multiply.19 = fmul float %11, %38
  %subtract.20 = fsub float %32, %multiply.19
  %42 = getelementptr float, ptr addrspace(1) %arg751, i64 %4
  %43 = load <4 x float>, ptr addrspace(1) %42, align 16, !invariant.load !195
  %44 = extractelement <4 x float> %43, i32 0
  %45 = extractelement <4 x float> %43, i32 1
  %46 = extractelement <4 x float> %43, i32 2
  %47 = extractelement <4 x float> %43, i32 3
  %48 = getelementptr float, ptr addrspace(1) %arg853, i64 %4
  %49 = load <4 x float>, ptr addrspace(1) %48, align 16
  %50 = extractelement <4 x float> %49, i32 0
  %51 = extractelement <4 x float> %49, i32 1
  %52 = extractelement <4 x float> %49, i32 2
  %53 = extractelement <4 x float> %49, i32 3
  %multiply.21 = fmul float %11, %50
  %subtract.22 = fsub float %44, %multiply.21
  %54 = getelementptr float, ptr addrspace(1) %arg955, i64 %4
  %55 = load <4 x float>, ptr addrspace(1) %54, align 16, !invariant.load !195
  %56 = extractelement <4 x float> %55, i32 0
  %57 = extractelement <4 x float> %55, i32 1
  %58 = extractelement <4 x float> %55, i32 2
  %59 = extractelement <4 x float> %55, i32 3
  %60 = getelementptr float, ptr addrspace(1) %arg1057, i64 %4
  %61 = load <4 x float>, ptr addrspace(1) %60, align 16
  %62 = extractelement <4 x float> %61, i32 0
  %63 = extractelement <4 x float> %61, i32 1
  %64 = extractelement <4 x float> %61, i32 2
  %65 = extractelement <4 x float> %61, i32 3
  %multiply.23 = fmul float %11, %62
  %subtract.24 = fsub float %56, %multiply.23
  %66 = getelementptr float, ptr addrspace(1) %arg1159, i64 %4
  %67 = load <4 x float>, ptr addrspace(1) %66, align 16, !invariant.load !195
  %68 = extractelement <4 x float> %67, i32 0
  %69 = extractelement <4 x float> %67, i32 1
  %70 = extractelement <4 x float> %67, i32 2
  %71 = extractelement <4 x float> %67, i32 3
  %72 = getelementptr float, ptr addrspace(1) %arg1261, i64 %4
  %73 = load <4 x float>, ptr addrspace(1) %72, align 16
  %74 = extractelement <4 x float> %73, i32 0
  %75 = extractelement <4 x float> %73, i32 1
  %76 = extractelement <4 x float> %73, i32 2
  %77 = extractelement <4 x float> %73, i32 3
  %multiply.25 = fmul float %11, %74
  %subtract.26 = fsub float %68, %multiply.25
  %multiply.151 = fmul float %11, %15
  %subtract.162 = fsub float %8, %multiply.151
  %multiply.173 = fmul float %11, %27
  %subtract.184 = fsub float %21, %multiply.173
  %multiply.195 = fmul float %11, %39
  %subtract.206 = fsub float %33, %multiply.195
  %multiply.217 = fmul float %11, %51
  %subtract.228 = fsub float %45, %multiply.217
  %multiply.239 = fmul float %11, %63
  %subtract.2410 = fsub float %57, %multiply.239
  %multiply.2511 = fmul float %11, %75
  %subtract.2612 = fsub float %69, %multiply.2511
  %multiply.1513 = fmul float %11, %16
  %subtract.1614 = fsub float %9, %multiply.1513
  %multiply.1715 = fmul float %11, %28
  %subtract.1816 = fsub float %22, %multiply.1715
  %multiply.1917 = fmul float %11, %40
  %subtract.2018 = fsub float %34, %multiply.1917
  %multiply.2119 = fmul float %11, %52
  %subtract.2220 = fsub float %46, %multiply.2119
  %multiply.2321 = fmul float %11, %64
  %subtract.2422 = fsub float %58, %multiply.2321
  %multiply.2523 = fmul float %11, %76
  %subtract.2624 = fsub float %70, %multiply.2523
  %multiply.1525 = fmul float %11, %17
  %subtract.1626 = fsub float %10, %multiply.1525
  %multiply.1727 = fmul float %11, %29
  %subtract.1828 = fsub float %23, %multiply.1727
  %multiply.1929 = fmul float %11, %41
  %subtract.2030 = fsub float %35, %multiply.1929
  %multiply.2131 = fmul float %11, %53
  %subtract.2232 = fsub float %47, %multiply.2131
  %multiply.2333 = fmul float %11, %65
  %subtract.2434 = fsub float %59, %multiply.2333
  %multiply.2535 = fmul float %11, %77
  %subtract.2636 = fsub float %71, %multiply.2535
  %78 = insertelement <4 x float> poison, float %subtract.16, i32 0
  %79 = insertelement <4 x float> %78, float %subtract.162, i32 1
  %80 = insertelement <4 x float> %79, float %subtract.1614, i32 2
  %81 = insertelement <4 x float> %80, float %subtract.1626, i32 3
  store <4 x float> %81, ptr addrspace(1) %72, align 16
  %82 = insertelement <4 x float> poison, float %subtract.18, i32 0
  %83 = insertelement <4 x float> %82, float %subtract.184, i32 1
  %84 = insertelement <4 x float> %83, float %subtract.1816, i32 2
  %85 = insertelement <4 x float> %84, float %subtract.1828, i32 3
  store <4 x float> %85, ptr addrspace(1) %60, align 16
  %86 = insertelement <4 x float> poison, float %subtract.20, i32 0
  %87 = insertelement <4 x float> %86, float %subtract.206, i32 1
  %88 = insertelement <4 x float> %87, float %subtract.2018, i32 2
  %89 = insertelement <4 x float> %88, float %subtract.2030, i32 3
  store <4 x float> %89, ptr addrspace(1) %48, align 16
  %90 = insertelement <4 x float> poison, float %subtract.22, i32 0
  %91 = insertelement <4 x float> %90, float %subtract.228, i32 1
  %92 = insertelement <4 x float> %91, float %subtract.2220, i32 2
  %93 = insertelement <4 x float> %92, float %subtract.2232, i32 3
  store <4 x float> %93, ptr addrspace(1) %36, align 16
  %94 = insertelement <4 x float> poison, float %subtract.24, i32 0
  %95 = insertelement <4 x float> %94, float %subtract.2410, i32 1
  %96 = insertelement <4 x float> %95, float %subtract.2422, i32 2
  %97 = insertelement <4 x float> %96, float %subtract.2434, i32 3
  store <4 x float> %97, ptr addrspace(1) %24, align 16
  %98 = insertelement <4 x float> poison, float %subtract.26, i32 0
  %99 = insertelement <4 x float> %98, float %subtract.2612, i32 1
  %100 = insertelement <4 x float> %99, float %subtract.2624, i32 2
  %101 = insertelement <4 x float> %100, float %subtract.2636, i32 3
  store <4 x float> %101, ptr addrspace(1) %12, align 16
  ret void
}

; Function Attrs: nounwind
define void @fusion_34(ptr noalias nocapture readonly align 128 dereferenceable(16777216) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(16777216) %arg1, ptr noalias nocapture writeonly align 128 dereferenceable(131072) %arg2, ptr noalias nocapture writeonly align 128 dereferenceable(16777216) %arg3) local_unnamed_addr #0 {
entry:
  %arg397 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg295 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg193 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg091 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !194
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x = and i32 %1, 31
  %thread_id.y64 = lshr i32 %1, 5
  %2 = lshr i32 %0, 3
  %3 = shl nuw nsw i32 %0, 6
  %tile_origin.2 = and i32 %3, 448
  %4 = shl nuw nsw i32 %thread_id.x, 1
  %5 = shl nuw nsw i32 %2, 16
  %6 = shl nuw nsw i32 %thread_id.y64, 9
  %7 = add i32 %6, %tile_origin.2
  %8 = add i32 %7, %4
  %9 = add i32 %5, %6
  %10 = add i32 %9, %tile_origin.2
  %11 = add i32 %10, %4
  %12 = add i32 %11, 1
  %13 = lshr i32 %12, 9
  %14 = lshr i32 %11, 9
  %15 = zext i32 %11 to i64
  %16 = shl nuw nsw i64 %15, 2
  %17 = add nuw nsw i64 %16, 4
  %scevgep = getelementptr i8, ptr addrspace(1) %arg193, i64 %17
  %scevgep109 = getelementptr i8, ptr addrspace(1) %arg091, i64 %17
  br label %y_in_tile.loop_body

common.ret:                                       ; preds = %reduction_write_output-after, %reduction_write_output-true59
  ret void

y_in_tile.loop_body:                              ; preds = %entry, %y_in_tile.loop_body
  %lsr.iv110 = phi ptr addrspace(1) [ %scevgep109, %entry ], [ %scevgep111, %y_in_tile.loop_body ]
  %lsr.iv106 = phi ptr addrspace(1) [ %scevgep, %entry ], [ %scevgep107, %y_in_tile.loop_body ]
  %lsr.iv104 = phi i32 [ %8, %entry ], [ %lsr.iv.next105, %y_in_tile.loop_body ]
  %lsr.iv = phi i32 [ 0, %entry ], [ %lsr.iv.next, %y_in_tile.loop_body ]
  %partial_reduction_result63.sroa.4.088 = phi float [ -0.000000e+00, %entry ], [ %add.12.i76, %y_in_tile.loop_body ]
  %partial_reduction_result63.sroa.0.087 = phi float [ -0.000000e+00, %entry ], [ %add.12.i, %y_in_tile.loop_body ]
  %18 = add i32 %thread_id.y64, %lsr.iv
  %19 = and i32 %lsr.iv104, 510
  %20 = add i32 %14, %lsr.iv
  %21 = and i32 %20, 8388480
  %22 = or i32 %21, %18
  %23 = zext i32 %22 to i64
  %24 = zext i32 %19 to i64
  %Arg_1.2 = getelementptr inbounds [8192 x [512 x float]], ptr addrspace(1) %arg193, i64 0, i64 %23, i64 %24
  %Arg_1.23 = load float, ptr addrspace(1) %Arg_1.2, align 8, !invariant.load !195
  %compare.5 = fcmp ogt float %Arg_1.23, 0.000000e+00
  %Arg_0.1 = getelementptr inbounds [8192 x [512 x float]], ptr addrspace(1) %arg091, i64 0, i64 %23, i64 %24
  %Arg_0.14 = load float, ptr addrspace(1) %Arg_0.1, align 8, !invariant.load !195
  %25 = select i1 %compare.5, float %Arg_0.14, float 0.000000e+00
  %add.12.i = fadd float %partial_reduction_result63.sroa.0.087, %25
  %scevgep108 = getelementptr i8, ptr addrspace(1) %lsr.iv106, i64 -4
  %26 = load <2 x float>, ptr addrspace(1) %scevgep108, align 8, !invariant.load !195
  %Arg_1.26113 = extractelement <2 x float> %26, i32 0
  %Arg_1.222114 = extractelement <2 x float> %26, i32 1
  %compare.58 = fcmp ogt float %Arg_1.26113, 0.000000e+00
  %scevgep112 = getelementptr i8, ptr addrspace(1) %lsr.iv110, i64 -4
  %27 = load <2 x float>, ptr addrspace(1) %scevgep112, align 8, !invariant.load !195
  %Arg_0.110115 = extractelement <2 x float> %27, i32 0
  %Arg_0.126116 = extractelement <2 x float> %27, i32 1
  %28 = select i1 %compare.58, float %Arg_0.110115, float 0.000000e+00
  %29 = getelementptr inbounds [8192 x [512 x float]], ptr addrspace(1) %arg397, i64 0, i64 %23, i64 %24
  store float %28, ptr addrspace(1) %29, align 8
  %30 = add i32 %lsr.iv104, 1
  %31 = and i32 %30, 511
  %32 = add i32 %13, %lsr.iv
  %33 = and i32 %32, 8388480
  %34 = or i32 %33, %18
  %35 = zext i32 %34 to i64
  %36 = zext i32 %31 to i64
  %Arg_1.214 = getelementptr inbounds [8192 x [512 x float]], ptr addrspace(1) %arg193, i64 0, i64 %35, i64 %36
  %Arg_1.215 = load float, ptr addrspace(1) %Arg_1.214, align 4, !invariant.load !195
  %compare.517 = fcmp ogt float %Arg_1.215, 0.000000e+00
  %Arg_0.118 = getelementptr inbounds [8192 x [512 x float]], ptr addrspace(1) %arg091, i64 0, i64 %35, i64 %36
  %Arg_0.119 = load float, ptr addrspace(1) %Arg_0.118, align 4, !invariant.load !195
  %37 = select i1 %compare.517, float %Arg_0.119, float 0.000000e+00
  %add.12.i76 = fadd float %partial_reduction_result63.sroa.4.088, %37
  %compare.524 = fcmp ogt float %Arg_1.222114, 0.000000e+00
  %38 = select i1 %compare.524, float %Arg_0.126116, float 0.000000e+00
  %39 = getelementptr inbounds [8192 x [512 x float]], ptr addrspace(1) %arg397, i64 0, i64 %35, i64 %36
  store float %38, ptr addrspace(1) %39, align 4
  %lsr.iv.next = add nuw nsw i32 %lsr.iv, 32
  %40 = add i32 %thread_id.y64, %lsr.iv.next
  %41 = add i32 %40, -32
  %lsr.iv.next105 = add nuw nsw i32 %lsr.iv104, 16384
  %scevgep107 = getelementptr i8, ptr addrspace(1) %lsr.iv106, i64 65536
  %scevgep111 = getelementptr i8, ptr addrspace(1) %lsr.iv110, i64 65536
  %42 = icmp ugt i32 %41, 95
  br i1 %42, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_body
  %43 = zext i32 %thread_id.x to i64
  %44 = zext i32 %thread_id.y64 to i64
  %shmem_output_address = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache72, i64 0, i64 0, i64 0, i64 %43, i64 %44
  store float %add.12.i, ptr addrspace(3) %shmem_output_address, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache72, i64 0, i64 0, i64 0, i64 %44, i64 %43
  %partial_reduction_result27 = load float, ptr addrspace(3) %shmem_transposed_addr, align 4
  %45 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result27, i32 16, i32 31)
  %add.12.i77 = fadd float %partial_reduction_result27, %45
  %46 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.12.i77, i32 8, i32 31)
  %add.12.i78 = fadd float %add.12.i77, %46
  %47 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.12.i78, i32 4, i32 31)
  %add.12.i79 = fadd float %add.12.i78, %47
  %48 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.12.i79, i32 2, i32 31)
  %add.12.i80 = fadd float %add.12.i79, %48
  %49 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.12.i80, i32 1, i32 31)
  %add.12.i81 = fadd float %add.12.i80, %49
  store float %add.12.i81, ptr addrspace(3) %shmem_transposed_addr, align 4
  %50 = shl nuw nsw i32 %thread_id.y64, 1
  %51 = icmp eq i32 %thread_id.x, 0
  %52 = zext i32 %2 to i64
  %53 = or i32 %50, %tile_origin.2
  %54 = zext i32 %53 to i64
  %output_element_address = getelementptr inbounds [64 x [512 x float]], ptr addrspace(1) %arg295, i64 0, i64 %52, i64 %54
  br i1 %51, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %55 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address41101 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address, i64 1056
  store float %add.12.i76, ptr addrspace(3) %shmem_output_address41101, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr43102 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr, i64 1056
  %partial_reduction_result45 = load float, ptr addrspace(3) %shmem_transposed_addr43102, align 4
  %56 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result45, i32 16, i32 31)
  %add.12.i82 = fadd float %partial_reduction_result45, %56
  %57 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.12.i82, i32 8, i32 31)
  %add.12.i83 = fadd float %add.12.i82, %57
  %58 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.12.i83, i32 4, i32 31)
  %add.12.i84 = fadd float %add.12.i83, %58
  %59 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.12.i84, i32 2, i32 31)
  %add.12.i85 = fadd float %add.12.i84, %59
  %60 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.12.i85, i32 1, i32 31)
  %add.12.i86 = fadd float %add.12.i85, %60
  store float %add.12.i86, ptr addrspace(3) %shmem_transposed_addr43102, align 4
  br i1 %55, label %reduction_write_output-true59, label %common.ret

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  store float %add.12.i81, ptr addrspace(1) %output_element_address, align 8
  br label %reduction_write_output-after

reduction_write_output-true59:                    ; preds = %reduction_write_output-after
  %sunkaddr = getelementptr inbounds i8, ptr addrspace(1) %output_element_address, i64 4
  store float %add.12.i86, ptr addrspace(1) %sunkaddr, align 4
  br label %common.ret
}

; Function Attrs: nounwind
define void @fusion_670(ptr noalias nocapture readonly align 128 dereferenceable(131072) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg1, ptr noalias nocapture writeonly align 128 dereferenceable(2048) %arg2) local_unnamed_addr #0 {
entry:
  %arg278 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg176 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg074 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !197
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x = and i32 %1, 31
  %thread_id.y47 = lshr i32 %1, 5
  %tile_origin.2 = shl nuw nsw i32 %0, 6
  %Arg_1.2 = load float, ptr addrspace(1) %arg176, align 128, !invariant.load !195
  %2 = shl nuw nsw i32 %thread_id.x, 1
  %3 = or i32 %2, %tile_origin.2
  %4 = zext i32 %3 to i64
  %5 = add nuw nsw i32 %thread_id.y47, -32
  %6 = zext i32 %1 to i64
  %7 = lshr i64 %6, 5
  %8 = shl nuw nsw i64 %7, 11
  %9 = shl nuw nsw i64 %4, 2
  %10 = add i64 %8, %9
  %11 = add i64 %10, 4
  %scevgep = getelementptr i8, ptr addrspace(1) %arg074, i64 %11
  br label %y_in_tile.loop_body

common.ret:                                       ; preds = %reduction_write_output-after, %reduction_write_output-true42
  ret void

y_in_tile.loop_body:                              ; preds = %entry, %y_in_tile.loop_body
  %lsr.iv84 = phi ptr addrspace(1) [ %scevgep, %entry ], [ %scevgep85, %y_in_tile.loop_body ]
  %lsr.iv = phi i32 [ %5, %entry ], [ %lsr.iv.next, %y_in_tile.loop_body ]
  %partial_reduction_result46.sroa.4.071 = phi float [ %Arg_1.2, %entry ], [ %add.6.i59, %y_in_tile.loop_body ]
  %partial_reduction_result46.sroa.0.070 = phi float [ %Arg_1.2, %entry ], [ %add.6.i, %y_in_tile.loop_body ]
  %scevgep86 = getelementptr i8, ptr addrspace(1) %lsr.iv84, i64 -4
  %12 = load <2 x float>, ptr addrspace(1) %scevgep86, align 8, !invariant.load !195
  %Arg_0.1387 = extractelement <2 x float> %12, i32 0
  %Arg_0.1888 = extractelement <2 x float> %12, i32 1
  %add.6.i = fadd float %partial_reduction_result46.sroa.0.070, %Arg_0.1387
  %add.6.i59 = fadd float %partial_reduction_result46.sroa.4.071, %Arg_0.1888
  %lsr.iv.next = add nsw i32 %lsr.iv, 32
  %scevgep85 = getelementptr i8, ptr addrspace(1) %lsr.iv84, i64 65536
  %13 = icmp ugt i32 %lsr.iv.next, 31
  br i1 %13, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_body
  %14 = zext i32 %thread_id.x to i64
  %15 = zext i32 %thread_id.y47 to i64
  %shmem_output_address = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache73, i64 0, i64 0, i64 0, i64 %14, i64 %15
  store float %add.6.i, ptr addrspace(3) %shmem_output_address, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache73, i64 0, i64 0, i64 0, i64 %15, i64 %14
  %partial_reduction_result10 = load float, ptr addrspace(3) %shmem_transposed_addr, align 4
  %16 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result10, i32 16, i32 31)
  %add.6.i60 = fadd float %partial_reduction_result10, %16
  %17 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.6.i60, i32 8, i32 31)
  %add.6.i61 = fadd float %add.6.i60, %17
  %18 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.6.i61, i32 4, i32 31)
  %add.6.i62 = fadd float %add.6.i61, %18
  %19 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.6.i62, i32 2, i32 31)
  %add.6.i63 = fadd float %add.6.i62, %19
  %20 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.6.i63, i32 1, i32 31)
  %add.6.i64 = fadd float %add.6.i63, %20
  store float %add.6.i64, ptr addrspace(3) %shmem_transposed_addr, align 4
  %21 = shl nuw nsw i32 %thread_id.y47, 1
  %22 = icmp eq i32 %thread_id.x, 0
  %23 = or i32 %21, %tile_origin.2
  %24 = zext i32 %23 to i64
  %output_element_address = getelementptr inbounds [512 x float], ptr addrspace(1) %arg278, i64 0, i64 %24
  br i1 %22, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %25 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address2481 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address, i64 1056
  store float %add.6.i59, ptr addrspace(3) %shmem_output_address2481, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr2682 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr, i64 1056
  %partial_reduction_result28 = load float, ptr addrspace(3) %shmem_transposed_addr2682, align 4
  %26 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result28, i32 16, i32 31)
  %add.6.i65 = fadd float %partial_reduction_result28, %26
  %27 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.6.i65, i32 8, i32 31)
  %add.6.i66 = fadd float %add.6.i65, %27
  %28 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.6.i66, i32 4, i32 31)
  %add.6.i67 = fadd float %add.6.i66, %28
  %29 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.6.i67, i32 2, i32 31)
  %add.6.i68 = fadd float %add.6.i67, %29
  %30 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.6.i68, i32 1, i32 31)
  %add.6.i69 = fadd float %add.6.i68, %30
  store float %add.6.i69, ptr addrspace(3) %shmem_transposed_addr2682, align 4
  br i1 %25, label %reduction_write_output-true42, label %common.ret

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  store float %add.6.i64, ptr addrspace(1) %output_element_address, align 8
  br label %reduction_write_output-after

reduction_write_output-true42:                    ; preds = %reduction_write_output-after
  %sunkaddr = getelementptr inbounds i8, ptr addrspace(1) %output_element_address, i64 4
  store float %add.6.i69, ptr addrspace(1) %sunkaddr, align 4
  br label %common.ret
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @add_168(ptr noalias nocapture align 128 dereferenceable(524288) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(524288) %arg1) local_unnamed_addr #6 {
entry:
  %arg16 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg04 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !213
  %1 = shl nuw nsw i32 %0, 10
  %2 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !200
  %3 = shl nuw nsw i32 %2, 2
  %linear_index_base = or i32 %1, %3
  %4 = zext i32 %linear_index_base to i64
  %5 = getelementptr float, ptr addrspace(1) %arg04, i64 %4
  %6 = load <4 x float>, ptr addrspace(1) %5, align 16
  %7 = extractelement <4 x float> %6, i32 0
  %8 = extractelement <4 x float> %6, i32 1
  %9 = extractelement <4 x float> %6, i32 2
  %10 = extractelement <4 x float> %6, i32 3
  %11 = getelementptr float, ptr addrspace(1) %arg16, i64 %4
  %12 = load <4 x float>, ptr addrspace(1) %11, align 16, !invariant.load !195
  %13 = extractelement <4 x float> %12, i32 0
  %14 = extractelement <4 x float> %12, i32 1
  %15 = extractelement <4 x float> %12, i32 2
  %16 = extractelement <4 x float> %12, i32 3
  %add.3 = fadd float %7, %13
  %add.31 = fadd float %8, %14
  %add.32 = fadd float %9, %15
  %add.33 = fadd float %10, %16
  %17 = insertelement <4 x float> poison, float %add.3, i32 0
  %18 = insertelement <4 x float> %17, float %add.31, i32 1
  %19 = insertelement <4 x float> %18, float %add.32, i32 2
  %20 = insertelement <4 x float> %19, float %add.33, i32 3
  store <4 x float> %20, ptr addrspace(1) %5, align 16
  ret void
}

; Function Attrs: nounwind
define void @fusion_665(ptr noalias nocapture readonly align 128 dereferenceable(131072) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(4) %arg1, ptr noalias nocapture readonly align 128 dereferenceable(131072) %arg2, ptr noalias nocapture readonly align 128 dereferenceable(131072) %arg3, ptr noalias nocapture readonly align 128 dereferenceable(131072) %arg4, ptr noalias nocapture readonly align 128 dereferenceable(131072) %arg5, ptr noalias nocapture writeonly align 128 dereferenceable(2048) %arg6, ptr noalias nocapture writeonly align 128 dereferenceable(2048) %arg7, ptr noalias nocapture writeonly align 128 dereferenceable(2048) %arg8, ptr noalias nocapture writeonly align 128 dereferenceable(2048) %arg9, ptr noalias nocapture writeonly align 128 dereferenceable(2048) %arg10) local_unnamed_addr #0 {
entry:
  %arg10562 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg9560 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg8558 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg7556 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg6554 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg5552 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg4550 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg3548 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg2546 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg1544 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg0542 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !214
  switch i32 %0, label %common.ret [
    i32 0, label %reduce-group-0-true
    i32 1, label %reduce-group-1-true
    i32 2, label %entry.reduce-group-2-true_crit_edge
    i32 3, label %entry.reduce-group-3-true_crit_edge
    i32 4, label %entry.reduce-group-4-true_crit_edge
  ]

entry.reduce-group-4-true_crit_edge:              ; preds = %entry
  %Arg_1.2285.pre = load float, ptr addrspace(1) %arg1544, align 128, !invariant.load !195
  %.pre534 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !197
  %.pre536 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %.pre538 = and i32 %.pre536, 31
  %.pre539 = lshr i32 %.pre536, 5
  %.pre540 = shl nuw nsw i32 %.pre534, 6
  %.pre585 = shl nuw nsw i32 %.pre538, 1
  %.pre587 = or i32 %.pre585, %.pre540
  %.pre589 = zext i32 %.pre587 to i64
  %.pre626 = add nuw nsw i32 %.pre539, -32
  %.pre628 = zext i32 %.pre539 to i64
  %.pre630 = shl nuw nsw i64 %.pre589, 2
  br label %y_in_tile.loop_body297.lr.ph

entry.reduce-group-3-true_crit_edge:              ; preds = %entry
  %Arg_1.2206.pre = load float, ptr addrspace(1) %arg1544, align 128, !invariant.load !195
  %.pre527 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !197
  %.pre529 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %.pre531 = and i32 %.pre529, 31
  %.pre532 = lshr i32 %.pre529, 5
  %.pre533 = shl nuw nsw i32 %.pre527, 6
  %.pre580 = shl nuw nsw i32 %.pre531, 1
  %.pre581 = or i32 %.pre580, %.pre533
  %.pre583 = zext i32 %.pre581 to i64
  %.pre620 = add nuw nsw i32 %.pre532, -32
  %.pre622 = zext i32 %.pre532 to i64
  %.pre624 = shl nuw nsw i64 %.pre583, 2
  %1 = shl nuw nsw i64 %.pre622, 11
  %2 = add i64 %1, %.pre624
  %3 = add i64 %2, 4
  %scevgep610 = getelementptr i8, ptr addrspace(1) %arg4550, i64 %3
  br label %y_in_tile.loop_body218

entry.reduce-group-2-true_crit_edge:              ; preds = %entry
  %Arg_1.2127.pre = load float, ptr addrspace(1) %arg1544, align 128, !invariant.load !195
  %.pre = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !197
  %.pre522 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %.pre524 = and i32 %.pre522, 31
  %.pre525 = lshr i32 %.pre522, 5
  %.pre526 = shl nuw nsw i32 %.pre, 6
  %4 = shl nuw nsw i32 %.pre524, 1
  %5 = or i32 %4, %.pre526
  %6 = zext i32 %5 to i64
  %7 = add nuw nsw i32 %.pre525, -32
  %8 = zext i32 %.pre522 to i64
  %9 = lshr i64 %8, 5
  %10 = shl nuw nsw i64 %9, 11
  %11 = shl nuw nsw i64 %6, 2
  %12 = add i64 %10, %11
  %13 = add i64 %12, 4
  %scevgep616 = getelementptr i8, ptr addrspace(1) %arg3548, i64 %13
  br label %y_in_tile.loop_body139

common.ret.sink.split:                            ; preds = %reduction_write_output-after337, %reduction_write_output-after100, %reduction_write_output-after
  %.sink = phi i32 [ %39, %reduction_write_output-after ], [ %70, %reduction_write_output-after100 ], [ %131, %reduction_write_output-after337 ]
  %arg7.sink = phi ptr addrspace(1) [ %arg6554, %reduction_write_output-after ], [ %arg7556, %reduction_write_output-after100 ], [ %arg10562, %reduction_write_output-after337 ]
  %add.15.i461.sink = phi float [ %add.10.i450, %reduction_write_output-after ], [ %add.15.i461, %reduction_write_output-after100 ], [ %add.30.i494, %reduction_write_output-after337 ]
  %14 = or i32 %.sink, 1
  %15 = zext i32 %14 to i64
  %output_element_address123 = getelementptr inbounds [512 x float], ptr addrspace(1) %arg7.sink, i64 0, i64 %15
  store float %add.15.i461.sink, ptr addrspace(1) %output_element_address123, align 4
  br label %common.ret

common.ret:                                       ; preds = %reduction_write_output-after201, %common.ret.sink.split, %reduction_write_output-after100, %reduction_write_output-after, %reduction_write_output-after337, %reduction_write_output-after280, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %16 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !197
  %17 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x = and i32 %17, 31
  %thread_id.y380 = lshr i32 %17, 5
  %tile_origin.2 = shl nuw nsw i32 %16, 6
  %Arg_1.2 = load float, ptr addrspace(1) %arg1544, align 128, !invariant.load !195
  %18 = shl nuw nsw i32 %thread_id.x, 1
  %19 = or i32 %18, %tile_origin.2
  %20 = zext i32 %19 to i64
  %21 = add nuw nsw i32 %thread_id.y380, -32
  %22 = zext i32 %17 to i64
  %23 = lshr i64 %22, 5
  %24 = shl nuw nsw i64 %23, 11
  %25 = shl nuw nsw i64 %20, 2
  %26 = add i64 %24, %25
  %27 = add i64 %26, 4
  %scevgep = getelementptr i8, ptr addrspace(1) %arg0542, i64 %27
  br label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %reduce-group-0-true, %y_in_tile.loop_body
  %lsr.iv591 = phi ptr addrspace(1) [ %scevgep, %reduce-group-0-true ], [ %scevgep592, %y_in_tile.loop_body ]
  %lsr.iv = phi i32 [ %21, %reduce-group-0-true ], [ %lsr.iv.next, %y_in_tile.loop_body ]
  %partial_reduction_result375.sroa.0.0515 = phi float [ %Arg_1.2, %reduce-group-0-true ], [ %add.10.i, %y_in_tile.loop_body ]
  %partial_reduction_result375.sroa.4.0514 = phi float [ %Arg_1.2, %reduce-group-0-true ], [ %add.10.i440, %y_in_tile.loop_body ]
  %scevgep593 = getelementptr i8, ptr addrspace(1) %lsr.iv591, i64 -4
  %28 = load <2 x float>, ptr addrspace(1) %scevgep593, align 8, !invariant.load !195
  %Arg_0.13632 = extractelement <2 x float> %28, i32 0
  %Arg_0.18633 = extractelement <2 x float> %28, i32 1
  %add.10.i = fadd float %partial_reduction_result375.sroa.0.0515, %Arg_0.13632
  %add.10.i440 = fadd float %partial_reduction_result375.sroa.4.0514, %Arg_0.18633
  %lsr.iv.next = add nsw i32 %lsr.iv, 32
  %scevgep592 = getelementptr i8, ptr addrspace(1) %lsr.iv591, i64 65536
  %29 = icmp ugt i32 %lsr.iv.next, 31
  br i1 %29, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_body
  %30 = zext i32 %thread_id.x to i64
  %31 = zext i32 %thread_id.y380 to i64
  %shmem_output_address = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache74, i64 0, i64 0, i64 0, i64 %30, i64 %31
  store float %add.10.i, ptr addrspace(3) %shmem_output_address, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache74, i64 0, i64 0, i64 0, i64 %31, i64 %30
  %partial_reduction_result10 = load float, ptr addrspace(3) %shmem_transposed_addr, align 4
  %32 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result10, i32 16, i32 31)
  %add.10.i441 = fadd float %partial_reduction_result10, %32
  %33 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.10.i441, i32 8, i32 31)
  %add.10.i442 = fadd float %add.10.i441, %33
  %34 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.10.i442, i32 4, i32 31)
  %add.10.i443 = fadd float %add.10.i442, %34
  %35 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.10.i443, i32 2, i32 31)
  %add.10.i444 = fadd float %add.10.i443, %35
  %36 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.10.i444, i32 1, i32 31)
  %add.10.i445 = fadd float %add.10.i444, %36
  store float %add.10.i445, ptr addrspace(3) %shmem_transposed_addr, align 4
  %37 = shl nuw nsw i32 %thread_id.y380, 1
  %38 = icmp eq i32 %thread_id.x, 0
  %39 = or i32 %37, %tile_origin.2
  %40 = zext i32 %39 to i64
  %output_element_address = getelementptr inbounds [512 x float], ptr addrspace(1) %arg6554, i64 0, i64 %40
  br i1 %38, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %41 = icmp eq i32 %thread_id.x, 0
  %shmem_output_address24565 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address, i64 1056
  store float %add.10.i440, ptr addrspace(3) %shmem_output_address24565, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr26566 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr, i64 1056
  %partial_reduction_result28 = load float, ptr addrspace(3) %shmem_transposed_addr26566, align 4
  %42 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result28, i32 16, i32 31)
  %add.10.i446 = fadd float %partial_reduction_result28, %42
  %43 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.10.i446, i32 8, i32 31)
  %add.10.i447 = fadd float %add.10.i446, %43
  %44 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.10.i447, i32 4, i32 31)
  %add.10.i448 = fadd float %add.10.i447, %44
  %45 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.10.i448, i32 2, i32 31)
  %add.10.i449 = fadd float %add.10.i448, %45
  %46 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.10.i449, i32 1, i32 31)
  %add.10.i450 = fadd float %add.10.i449, %46
  store float %add.10.i450, ptr addrspace(3) %shmem_transposed_addr26566, align 4
  br i1 %41, label %common.ret.sink.split, label %common.ret

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  store float %add.10.i445, ptr addrspace(1) %output_element_address, align 8
  br label %reduction_write_output-after

reduce-group-1-true:                              ; preds = %entry
  %47 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !197
  %48 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %thread_id.x50 = and i32 %48, 31
  %thread_id.y51379 = lshr i32 %48, 5
  %tile_origin.257 = shl nuw nsw i32 %47, 6
  %Arg_1.248 = load float, ptr addrspace(1) %arg1544, align 128, !invariant.load !195
  %49 = shl nuw nsw i32 %thread_id.x50, 1
  %50 = or i32 %49, %tile_origin.257
  %51 = zext i32 %50 to i64
  %52 = add nuw nsw i32 %thread_id.y51379, -32
  %53 = zext i32 %48 to i64
  %54 = lshr i64 %53, 5
  %55 = shl nuw nsw i64 %54, 11
  %56 = shl nuw nsw i64 %51, 2
  %57 = add i64 %55, %56
  %58 = add i64 %57, 4
  %scevgep596 = getelementptr i8, ptr addrspace(1) %arg2546, i64 %58
  br label %y_in_tile.loop_body60

y_in_tile.loop_body60:                            ; preds = %reduce-group-1-true, %y_in_tile.loop_body60
  %lsr.iv597 = phi ptr addrspace(1) [ %scevgep596, %reduce-group-1-true ], [ %scevgep598, %y_in_tile.loop_body60 ]
  %lsr.iv594 = phi i32 [ %52, %reduce-group-1-true ], [ %lsr.iv.next595, %y_in_tile.loop_body60 ]
  %partial_reduction_result47374.sroa.4.0496 = phi float [ %Arg_1.248, %reduce-group-1-true ], [ %add.15.i451, %y_in_tile.loop_body60 ]
  %partial_reduction_result47374.sroa.0.0495 = phi float [ %Arg_1.248, %reduce-group-1-true ], [ %add.15.i, %y_in_tile.loop_body60 ]
  %scevgep599 = getelementptr i8, ptr addrspace(1) %lsr.iv597, i64 -4
  %59 = load <2 x float>, ptr addrspace(1) %scevgep599, align 8, !invariant.load !195
  %Arg_2.373634 = extractelement <2 x float> %59, i32 0
  %Arg_2.379635 = extractelement <2 x float> %59, i32 1
  %add.15.i = fadd float %partial_reduction_result47374.sroa.0.0495, %Arg_2.373634
  %add.15.i451 = fadd float %partial_reduction_result47374.sroa.4.0496, %Arg_2.379635
  %lsr.iv.next595 = add nsw i32 %lsr.iv594, 32
  %scevgep598 = getelementptr i8, ptr addrspace(1) %lsr.iv597, i64 65536
  %60 = icmp ugt i32 %lsr.iv.next595, 31
  br i1 %60, label %y_in_tile.loop_exit58, label %y_in_tile.loop_body60

y_in_tile.loop_exit58:                            ; preds = %y_in_tile.loop_body60
  %61 = zext i32 %thread_id.x50 to i64
  %62 = zext i32 %thread_id.y51379 to i64
  %shmem_output_address81 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache75, i64 0, i64 0, i64 0, i64 %61, i64 %62
  store float %add.15.i, ptr addrspace(3) %shmem_output_address81, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr83 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache75, i64 0, i64 0, i64 0, i64 %62, i64 %61
  %partial_reduction_result85 = load float, ptr addrspace(3) %shmem_transposed_addr83, align 4
  %63 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result85, i32 16, i32 31)
  %add.15.i452 = fadd float %partial_reduction_result85, %63
  %64 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i452, i32 8, i32 31)
  %add.15.i453 = fadd float %add.15.i452, %64
  %65 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i453, i32 4, i32 31)
  %add.15.i454 = fadd float %add.15.i453, %65
  %66 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i454, i32 2, i32 31)
  %add.15.i455 = fadd float %add.15.i454, %66
  %67 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i455, i32 1, i32 31)
  %add.15.i456 = fadd float %add.15.i455, %67
  store float %add.15.i456, ptr addrspace(3) %shmem_transposed_addr83, align 4
  %68 = shl nuw nsw i32 %thread_id.y51379, 1
  %69 = icmp eq i32 %thread_id.x50, 0
  %70 = or i32 %68, %tile_origin.257
  %71 = zext i32 %70 to i64
  %output_element_address101 = getelementptr inbounds [512 x float], ptr addrspace(1) %arg7556, i64 0, i64 %71
  br i1 %69, label %reduction_write_output-true99, label %reduction_write_output-after100

reduction_write_output-after100:                  ; preds = %reduction_write_output-true99, %y_in_tile.loop_exit58
  %72 = icmp eq i32 %thread_id.x50, 0
  %shmem_output_address103568 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address81, i64 1056
  store float %add.15.i451, ptr addrspace(3) %shmem_output_address103568, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr105569 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr83, i64 1056
  %partial_reduction_result107 = load float, ptr addrspace(3) %shmem_transposed_addr105569, align 4
  %73 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result107, i32 16, i32 31)
  %add.15.i457 = fadd float %partial_reduction_result107, %73
  %74 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i457, i32 8, i32 31)
  %add.15.i458 = fadd float %add.15.i457, %74
  %75 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i458, i32 4, i32 31)
  %add.15.i459 = fadd float %add.15.i458, %75
  %76 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i459, i32 2, i32 31)
  %add.15.i460 = fadd float %add.15.i459, %76
  %77 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.15.i460, i32 1, i32 31)
  %add.15.i461 = fadd float %add.15.i460, %77
  store float %add.15.i461, ptr addrspace(3) %shmem_transposed_addr105569, align 4
  br i1 %72, label %common.ret.sink.split, label %common.ret

reduction_write_output-true99:                    ; preds = %y_in_tile.loop_exit58
  store float %add.15.i456, ptr addrspace(1) %output_element_address101, align 8
  br label %reduction_write_output-after100

y_in_tile.loop_body139:                           ; preds = %entry.reduce-group-2-true_crit_edge, %y_in_tile.loop_body139
  %lsr.iv617 = phi ptr addrspace(1) [ %scevgep616, %entry.reduce-group-2-true_crit_edge ], [ %scevgep618, %y_in_tile.loop_body139 ]
  %lsr.iv614 = phi i32 [ %7, %entry.reduce-group-2-true_crit_edge ], [ %lsr.iv.next615, %y_in_tile.loop_body139 ]
  %partial_reduction_result126373.sroa.4.0500 = phi float [ %Arg_1.2127.pre, %entry.reduce-group-2-true_crit_edge ], [ %add.20.i462, %y_in_tile.loop_body139 ]
  %partial_reduction_result126373.sroa.0.0499 = phi float [ %Arg_1.2127.pre, %entry.reduce-group-2-true_crit_edge ], [ %add.20.i, %y_in_tile.loop_body139 ]
  %scevgep619 = getelementptr i8, ptr addrspace(1) %lsr.iv617, i64 -4
  %78 = load <2 x float>, ptr addrspace(1) %scevgep619, align 8, !invariant.load !195
  %Arg_3.4152638 = extractelement <2 x float> %78, i32 0
  %Arg_3.4158639 = extractelement <2 x float> %78, i32 1
  %add.20.i = fadd float %partial_reduction_result126373.sroa.0.0499, %Arg_3.4152638
  %add.20.i462 = fadd float %partial_reduction_result126373.sroa.4.0500, %Arg_3.4158639
  %lsr.iv.next615 = add nsw i32 %lsr.iv614, 32
  %scevgep618 = getelementptr i8, ptr addrspace(1) %lsr.iv617, i64 65536
  %79 = icmp ugt i32 %lsr.iv.next615, 31
  br i1 %79, label %y_in_tile.loop_exit137, label %y_in_tile.loop_body139

y_in_tile.loop_exit137:                           ; preds = %y_in_tile.loop_body139
  %80 = zext i32 %.pre524 to i64
  %81 = zext i32 %.pre525 to i64
  %shmem_output_address160 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache76, i64 0, i64 0, i64 0, i64 %80, i64 %81
  store float %add.20.i, ptr addrspace(3) %shmem_output_address160, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr162 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache76, i64 0, i64 0, i64 0, i64 %81, i64 %80
  %partial_reduction_result164 = load float, ptr addrspace(3) %shmem_transposed_addr162, align 4
  %82 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result164, i32 16, i32 31)
  %add.20.i463 = fadd float %partial_reduction_result164, %82
  %83 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i463, i32 8, i32 31)
  %add.20.i464 = fadd float %add.20.i463, %83
  %84 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i464, i32 4, i32 31)
  %add.20.i465 = fadd float %add.20.i464, %84
  %85 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i465, i32 2, i32 31)
  %add.20.i466 = fadd float %add.20.i465, %85
  %86 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i466, i32 1, i32 31)
  %add.20.i467 = fadd float %add.20.i466, %86
  store float %add.20.i467, ptr addrspace(3) %shmem_transposed_addr162, align 4
  %87 = shl nuw nsw i32 %.pre525, 1
  %88 = icmp eq i32 %.pre524, 0
  %89 = or i32 %87, %.pre526
  %90 = zext i32 %89 to i64
  %output_element_address180 = getelementptr inbounds [512 x float], ptr addrspace(1) %arg8558, i64 0, i64 %90
  br i1 %88, label %reduction_write_output-true178, label %reduction_write_output-after179

reduction_write_output-after179:                  ; preds = %reduction_write_output-true178, %y_in_tile.loop_exit137
  %91 = icmp eq i32 %.pre524, 0
  %shmem_output_address182571 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address160, i64 1056
  store float %add.20.i462, ptr addrspace(3) %shmem_output_address182571, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr184572 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr162, i64 1056
  %partial_reduction_result186 = load float, ptr addrspace(3) %shmem_transposed_addr184572, align 4
  %92 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result186, i32 16, i32 31)
  %add.20.i468 = fadd float %partial_reduction_result186, %92
  %93 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i468, i32 8, i32 31)
  %add.20.i469 = fadd float %add.20.i468, %93
  %94 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i469, i32 4, i32 31)
  %add.20.i470 = fadd float %add.20.i469, %94
  %95 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i470, i32 2, i32 31)
  %add.20.i471 = fadd float %add.20.i470, %95
  %96 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.20.i471, i32 1, i32 31)
  %add.20.i472 = fadd float %add.20.i471, %96
  store float %add.20.i472, ptr addrspace(3) %shmem_transposed_addr184572, align 4
  br i1 %91, label %reduction_write_output-true200, label %reduction_write_output-after201

reduction_write_output-after201:                  ; preds = %reduction_write_output-true200, %reduction_write_output-after179
  br label %common.ret

reduction_write_output-true178:                   ; preds = %y_in_tile.loop_exit137
  store float %add.20.i467, ptr addrspace(1) %output_element_address180, align 8
  br label %reduction_write_output-after179

reduction_write_output-true200:                   ; preds = %reduction_write_output-after179
  %sunkaddr = getelementptr inbounds i8, ptr addrspace(1) %output_element_address180, i64 4
  store float %add.20.i472, ptr addrspace(1) %sunkaddr, align 4
  br label %reduction_write_output-after201

y_in_tile.loop_body218:                           ; preds = %entry.reduce-group-3-true_crit_edge, %y_in_tile.loop_body218
  %lsr.iv611 = phi ptr addrspace(1) [ %scevgep610, %entry.reduce-group-3-true_crit_edge ], [ %scevgep612, %y_in_tile.loop_body218 ]
  %lsr.iv608 = phi i32 [ %.pre620, %entry.reduce-group-3-true_crit_edge ], [ %lsr.iv.next609, %y_in_tile.loop_body218 ]
  %partial_reduction_result205372.sroa.4.0505 = phi float [ %Arg_1.2206.pre, %entry.reduce-group-3-true_crit_edge ], [ %add.25.i473, %y_in_tile.loop_body218 ]
  %partial_reduction_result205372.sroa.0.0504 = phi float [ %Arg_1.2206.pre, %entry.reduce-group-3-true_crit_edge ], [ %add.25.i, %y_in_tile.loop_body218 ]
  %scevgep613 = getelementptr i8, ptr addrspace(1) %lsr.iv611, i64 -4
  %97 = load <2 x float>, ptr addrspace(1) %scevgep613, align 8, !invariant.load !195
  %Arg_4.5231636 = extractelement <2 x float> %97, i32 0
  %Arg_4.5237637 = extractelement <2 x float> %97, i32 1
  %add.25.i = fadd float %partial_reduction_result205372.sroa.0.0504, %Arg_4.5231636
  %add.25.i473 = fadd float %partial_reduction_result205372.sroa.4.0505, %Arg_4.5237637
  %lsr.iv.next609 = add nsw i32 %lsr.iv608, 32
  %scevgep612 = getelementptr i8, ptr addrspace(1) %lsr.iv611, i64 65536
  %98 = icmp ugt i32 %lsr.iv.next609, 31
  br i1 %98, label %y_in_tile.loop_exit216, label %y_in_tile.loop_body218

y_in_tile.loop_exit216:                           ; preds = %y_in_tile.loop_body218
  %99 = zext i32 %.pre531 to i64
  %shmem_output_address239 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache77, i64 0, i64 0, i64 0, i64 %99, i64 %.pre622
  store float %add.25.i, ptr addrspace(3) %shmem_output_address239, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr241 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache77, i64 0, i64 0, i64 0, i64 %.pre622, i64 %99
  %partial_reduction_result243 = load float, ptr addrspace(3) %shmem_transposed_addr241, align 4
  %100 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result243, i32 16, i32 31)
  %add.25.i474 = fadd float %partial_reduction_result243, %100
  %101 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i474, i32 8, i32 31)
  %add.25.i475 = fadd float %add.25.i474, %101
  %102 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i475, i32 4, i32 31)
  %add.25.i476 = fadd float %add.25.i475, %102
  %103 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i476, i32 2, i32 31)
  %add.25.i477 = fadd float %add.25.i476, %103
  %104 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i477, i32 1, i32 31)
  %add.25.i478 = fadd float %add.25.i477, %104
  store float %add.25.i478, ptr addrspace(3) %shmem_transposed_addr241, align 4
  %105 = shl nuw nsw i32 %.pre532, 1
  %106 = icmp eq i32 %.pre531, 0
  %107 = or i32 %105, %.pre533
  %108 = zext i32 %107 to i64
  %output_element_address259 = getelementptr [512 x float], ptr addrspace(1) %arg9560, i64 0, i64 %108
  br i1 %106, label %reduction_write_output-true257, label %reduction_write_output-after258

reduction_write_output-after258:                  ; preds = %reduction_write_output-true257, %y_in_tile.loop_exit216
  %109 = icmp eq i32 %.pre531, 0
  %shmem_output_address261575 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address239, i64 1056
  store float %add.25.i473, ptr addrspace(3) %shmem_output_address261575, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr263576 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr241, i64 1056
  %partial_reduction_result265 = load float, ptr addrspace(3) %shmem_transposed_addr263576, align 4
  %110 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result265, i32 16, i32 31)
  %add.25.i479 = fadd float %partial_reduction_result265, %110
  %111 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i479, i32 8, i32 31)
  %add.25.i480 = fadd float %add.25.i479, %111
  %112 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i480, i32 4, i32 31)
  %add.25.i481 = fadd float %add.25.i480, %112
  %113 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i481, i32 2, i32 31)
  %add.25.i482 = fadd float %add.25.i481, %113
  %114 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.25.i482, i32 1, i32 31)
  %add.25.i483 = fadd float %add.25.i482, %114
  store float %add.25.i483, ptr addrspace(3) %shmem_transposed_addr263576, align 4
  br i1 %109, label %reduction_write_output-true279, label %reduction_write_output-after280

reduction_write_output-after280:                  ; preds = %reduction_write_output-true279, %reduction_write_output-after258
  %115 = icmp eq i32 %0, 4
  br i1 %115, label %y_in_tile.loop_body297.lr.ph, label %common.ret

reduction_write_output-true257:                   ; preds = %y_in_tile.loop_exit216
  store float %add.25.i478, ptr addrspace(1) %output_element_address259, align 8
  br label %reduction_write_output-after258

reduction_write_output-true279:                   ; preds = %reduction_write_output-after258
  %sunkaddr640 = getelementptr inbounds i8, ptr addrspace(1) %output_element_address259, i64 4
  store float %add.25.i483, ptr addrspace(1) %sunkaddr640, align 4
  br label %reduction_write_output-after280

y_in_tile.loop_body297.lr.ph:                     ; preds = %reduction_write_output-after280, %entry.reduce-group-4-true_crit_edge
  %.pre-phi631 = phi i64 [ %.pre630, %entry.reduce-group-4-true_crit_edge ], [ %.pre624, %reduction_write_output-after280 ]
  %.pre-phi629 = phi i64 [ %.pre628, %entry.reduce-group-4-true_crit_edge ], [ %.pre622, %reduction_write_output-after280 ]
  %.pre-phi627 = phi i32 [ %.pre626, %entry.reduce-group-4-true_crit_edge ], [ %.pre620, %reduction_write_output-after280 ]
  %.pre-phi590 = phi i64 [ %.pre589, %entry.reduce-group-4-true_crit_edge ], [ %.pre583, %reduction_write_output-after280 ]
  %.pre-phi588 = phi i32 [ %.pre587, %entry.reduce-group-4-true_crit_edge ], [ %.pre581, %reduction_write_output-after280 ]
  %tile_origin.2294.pre-phi = phi i32 [ %.pre540, %entry.reduce-group-4-true_crit_edge ], [ %.pre533, %reduction_write_output-after280 ]
  %thread_id.y288376.pre-phi = phi i32 [ %.pre539, %entry.reduce-group-4-true_crit_edge ], [ %.pre532, %reduction_write_output-after280 ]
  %thread_id.x287.pre-phi = phi i32 [ %.pre538, %entry.reduce-group-4-true_crit_edge ], [ %.pre531, %reduction_write_output-after280 ]
  %Arg_1.2285 = phi float [ %Arg_1.2285.pre, %entry.reduce-group-4-true_crit_edge ], [ %Arg_1.2206.pre, %reduction_write_output-after280 ]
  %116 = or i32 %.pre-phi588, 1
  %117 = zext i32 %116 to i64
  %118 = shl nuw nsw i64 %.pre-phi629, 11
  %119 = add nuw nsw i64 %118, %.pre-phi631
  %scevgep602 = getelementptr i8, ptr addrspace(1) %arg5552, i64 %119
  %120 = shl nuw nsw i64 %117, 2
  %121 = add nuw nsw i64 %118, %120
  %scevgep605 = getelementptr i8, ptr addrspace(1) %arg5552, i64 %121
  br label %y_in_tile.loop_body297

y_in_tile.loop_body297:                           ; preds = %y_in_tile.loop_body297.lr.ph, %y_in_tile.loop_body297
  %lsr.iv606 = phi ptr addrspace(1) [ %scevgep605, %y_in_tile.loop_body297.lr.ph ], [ %scevgep607, %y_in_tile.loop_body297 ]
  %lsr.iv603 = phi ptr addrspace(1) [ %scevgep602, %y_in_tile.loop_body297.lr.ph ], [ %scevgep604, %y_in_tile.loop_body297 ]
  %lsr.iv600 = phi i32 [ %.pre-phi627, %y_in_tile.loop_body297.lr.ph ], [ %lsr.iv.next601, %y_in_tile.loop_body297 ]
  %partial_reduction_result284371.sroa.4.0510 = phi float [ %Arg_1.2285, %y_in_tile.loop_body297.lr.ph ], [ %add.30.i484, %y_in_tile.loop_body297 ]
  %partial_reduction_result284371.sroa.0.0509 = phi float [ %Arg_1.2285, %y_in_tile.loop_body297.lr.ph ], [ %add.30.i, %y_in_tile.loop_body297 ]
  %Arg_5.6310 = load float, ptr addrspace(1) %lsr.iv603, align 8, !invariant.load !195
  %add.30.i = fadd float %partial_reduction_result284371.sroa.0.0509, %Arg_5.6310
  %Arg_5.6316 = load float, ptr addrspace(1) %lsr.iv606, align 4, !invariant.load !195
  %add.30.i484 = fadd float %partial_reduction_result284371.sroa.4.0510, %Arg_5.6316
  %lsr.iv.next601 = add nsw i32 %lsr.iv600, 32
  %scevgep604 = getelementptr i8, ptr addrspace(1) %lsr.iv603, i64 65536
  %scevgep607 = getelementptr i8, ptr addrspace(1) %lsr.iv606, i64 65536
  %122 = icmp ugt i32 %lsr.iv.next601, 31
  br i1 %122, label %y_in_tile.loop_exit295, label %y_in_tile.loop_body297

y_in_tile.loop_exit295:                           ; preds = %y_in_tile.loop_body297
  %123 = zext i32 %thread_id.x287.pre-phi to i64
  %shmem_output_address318 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache78, i64 0, i64 0, i64 0, i64 %123, i64 %.pre-phi629
  store float %add.30.i, ptr addrspace(3) %shmem_output_address318, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr320 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache78, i64 0, i64 0, i64 0, i64 %.pre-phi629, i64 %123
  %partial_reduction_result322 = load float, ptr addrspace(3) %shmem_transposed_addr320, align 4
  %124 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result322, i32 16, i32 31)
  %add.30.i485 = fadd float %partial_reduction_result322, %124
  %125 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i485, i32 8, i32 31)
  %add.30.i486 = fadd float %add.30.i485, %125
  %126 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i486, i32 4, i32 31)
  %add.30.i487 = fadd float %add.30.i486, %126
  %127 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i487, i32 2, i32 31)
  %add.30.i488 = fadd float %add.30.i487, %127
  %128 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i488, i32 1, i32 31)
  %add.30.i489 = fadd float %add.30.i488, %128
  store float %add.30.i489, ptr addrspace(3) %shmem_transposed_addr320, align 4
  %129 = shl nuw nsw i32 %thread_id.y288376.pre-phi, 1
  %130 = icmp eq i32 %thread_id.x287.pre-phi, 0
  %131 = or i32 %129, %tile_origin.2294.pre-phi
  %132 = zext i32 %131 to i64
  %output_element_address338 = getelementptr inbounds [512 x float], ptr addrspace(1) %arg10562, i64 0, i64 %132
  br i1 %130, label %reduction_write_output-true336, label %reduction_write_output-after337

reduction_write_output-after337:                  ; preds = %reduction_write_output-true336, %y_in_tile.loop_exit295
  %133 = icmp eq i32 %thread_id.x287.pre-phi, 0
  %shmem_output_address340578 = getelementptr inbounds float, ptr addrspace(3) %shmem_output_address318, i64 1056
  store float %add.30.i484, ptr addrspace(3) %shmem_output_address340578, align 4
  tail call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr342579 = getelementptr inbounds float, ptr addrspace(3) %shmem_transposed_addr320, i64 1056
  %partial_reduction_result344 = load float, ptr addrspace(3) %shmem_transposed_addr342579, align 4
  %134 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result344, i32 16, i32 31)
  %add.30.i490 = fadd float %partial_reduction_result344, %134
  %135 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i490, i32 8, i32 31)
  %add.30.i491 = fadd float %add.30.i490, %135
  %136 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i491, i32 4, i32 31)
  %add.30.i492 = fadd float %add.30.i491, %136
  %137 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i492, i32 2, i32 31)
  %add.30.i493 = fadd float %add.30.i492, %137
  %138 = tail call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %add.30.i493, i32 1, i32 31)
  %add.30.i494 = fadd float %add.30.i493, %138
  store float %add.30.i494, ptr addrspace(3) %shmem_transposed_addr342579, align 4
  br i1 %133, label %common.ret.sink.split, label %common.ret

reduction_write_output-true336:                   ; preds = %y_in_tile.loop_exit295
  store float %add.30.i489, ptr addrspace(1) %output_element_address338, align 8
  br label %reduction_write_output-after337
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_41(ptr noalias nocapture readonly align 16 dereferenceable(2048) %arg0, ptr noalias nocapture align 128 dereferenceable(2048) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(2048) %arg3, ptr noalias nocapture align 128 dereferenceable(2048) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(2048) %arg5, ptr noalias nocapture align 128 dereferenceable(2048) %arg6, ptr noalias nocapture readonly align 16 dereferenceable(2048) %arg7, ptr noalias nocapture align 128 dereferenceable(2048) %arg8, ptr noalias nocapture readonly align 16 dereferenceable(2048) %arg9, ptr noalias nocapture align 128 dereferenceable(2048) %arg10, ptr noalias nocapture readonly align 16 dereferenceable(2048) %arg11, ptr noalias nocapture align 128 dereferenceable(2048) %arg12) local_unnamed_addr #6 {
entry:
  %arg1225 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg1123 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg1021 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg919 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg817 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg715 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg613 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg511 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg49 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg37 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg25 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg13 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg01 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !194
  %1 = zext i32 %0 to i64
  %2 = getelementptr inbounds float, ptr addrspace(1) %arg01, i64 %1
  %3 = load float, ptr addrspace(1) %2, align 4, !invariant.load !195
  %4 = load float, ptr addrspace(1) %arg25, align 16, !invariant.load !195
  %5 = getelementptr inbounds float, ptr addrspace(1) %arg13, i64 %1
  %6 = load float, ptr addrspace(1) %5, align 4
  %multiply.15 = fmul float %4, %6
  %subtract.16 = fsub float %3, %multiply.15
  %7 = getelementptr inbounds float, ptr addrspace(1) %arg37, i64 %1
  %8 = load float, ptr addrspace(1) %7, align 4, !invariant.load !195
  %9 = getelementptr inbounds float, ptr addrspace(1) %arg49, i64 %1
  %10 = load float, ptr addrspace(1) %9, align 4
  %multiply.17 = fmul float %4, %10
  %subtract.18 = fsub float %8, %multiply.17
  %11 = getelementptr inbounds float, ptr addrspace(1) %arg511, i64 %1
  %12 = load float, ptr addrspace(1) %11, align 4, !invariant.load !195
  %13 = getelementptr inbounds float, ptr addrspace(1) %arg613, i64 %1
  %14 = load float, ptr addrspace(1) %13, align 4
  %multiply.19 = fmul float %4, %14
  %subtract.20 = fsub float %12, %multiply.19
  %15 = getelementptr inbounds float, ptr addrspace(1) %arg715, i64 %1
  %16 = load float, ptr addrspace(1) %15, align 4, !invariant.load !195
  %17 = getelementptr inbounds float, ptr addrspace(1) %arg817, i64 %1
  %18 = load float, ptr addrspace(1) %17, align 4
  %multiply.21 = fmul float %4, %18
  %subtract.22 = fsub float %16, %multiply.21
  %19 = getelementptr inbounds float, ptr addrspace(1) %arg919, i64 %1
  %20 = load float, ptr addrspace(1) %19, align 4, !invariant.load !195
  %21 = getelementptr inbounds float, ptr addrspace(1) %arg1021, i64 %1
  %22 = load float, ptr addrspace(1) %21, align 4
  %multiply.23 = fmul float %4, %22
  %subtract.24 = fsub float %20, %multiply.23
  %23 = getelementptr inbounds float, ptr addrspace(1) %arg1123, i64 %1
  %24 = load float, ptr addrspace(1) %23, align 4, !invariant.load !195
  %25 = getelementptr inbounds float, ptr addrspace(1) %arg1225, i64 %1
  %26 = load float, ptr addrspace(1) %25, align 4
  %multiply.25 = fmul float %4, %26
  %subtract.26 = fsub float %24, %multiply.25
  store float %subtract.16, ptr addrspace(1) %25, align 4
  store float %subtract.18, ptr addrspace(1) %21, align 4
  store float %subtract.20, ptr addrspace(1) %17, align 4
  store float %subtract.22, ptr addrspace(1) %13, align 4
  store float %subtract.24, ptr addrspace(1) %9, align 4
  store float %subtract.26, ptr addrspace(1) %5, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_29(ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg0, ptr noalias nocapture align 128 dereferenceable(32768) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg3, ptr noalias nocapture align 128 dereferenceable(32768) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg5, ptr noalias nocapture align 128 dereferenceable(32768) %arg6, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg7, ptr noalias nocapture align 128 dereferenceable(32768) %arg8, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg9, ptr noalias nocapture align 128 dereferenceable(32768) %arg10, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg11, ptr noalias nocapture align 128 dereferenceable(32768) %arg12) local_unnamed_addr #6 {
entry:
  %arg1225 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg1123 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg1021 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg919 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg817 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg715 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg613 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg511 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg49 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg37 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg25 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg13 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg01 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !197
  %1 = shl nuw nsw i32 %0, 10
  %2 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %linear_index = or i32 %1, %2
  %3 = zext i32 %linear_index to i64
  %4 = getelementptr inbounds float, ptr addrspace(1) %arg01, i64 %3
  %5 = load float, ptr addrspace(1) %4, align 4, !invariant.load !195
  %6 = load float, ptr addrspace(1) %arg25, align 16, !invariant.load !195
  %7 = getelementptr inbounds float, ptr addrspace(1) %arg13, i64 %3
  %8 = load float, ptr addrspace(1) %7, align 4
  %multiply.15 = fmul float %6, %8
  %subtract.16 = fsub float %5, %multiply.15
  %9 = getelementptr inbounds float, ptr addrspace(1) %arg37, i64 %3
  %10 = load float, ptr addrspace(1) %9, align 4, !invariant.load !195
  %11 = getelementptr inbounds float, ptr addrspace(1) %arg49, i64 %3
  %12 = load float, ptr addrspace(1) %11, align 4
  %multiply.17 = fmul float %6, %12
  %subtract.18 = fsub float %10, %multiply.17
  %13 = getelementptr inbounds float, ptr addrspace(1) %arg511, i64 %3
  %14 = load float, ptr addrspace(1) %13, align 4, !invariant.load !195
  %15 = getelementptr inbounds float, ptr addrspace(1) %arg613, i64 %3
  %16 = load float, ptr addrspace(1) %15, align 4
  %multiply.19 = fmul float %6, %16
  %subtract.20 = fsub float %14, %multiply.19
  %17 = getelementptr inbounds float, ptr addrspace(1) %arg715, i64 %3
  %18 = load float, ptr addrspace(1) %17, align 4, !invariant.load !195
  %19 = getelementptr inbounds float, ptr addrspace(1) %arg817, i64 %3
  %20 = load float, ptr addrspace(1) %19, align 4
  %multiply.21 = fmul float %6, %20
  %subtract.22 = fsub float %18, %multiply.21
  %21 = getelementptr inbounds float, ptr addrspace(1) %arg919, i64 %3
  %22 = load float, ptr addrspace(1) %21, align 4, !invariant.load !195
  %23 = getelementptr inbounds float, ptr addrspace(1) %arg1021, i64 %3
  %24 = load float, ptr addrspace(1) %23, align 4
  %multiply.23 = fmul float %6, %24
  %subtract.24 = fsub float %22, %multiply.23
  %25 = getelementptr inbounds float, ptr addrspace(1) %arg1123, i64 %3
  %26 = load float, ptr addrspace(1) %25, align 4, !invariant.load !195
  %27 = getelementptr inbounds float, ptr addrspace(1) %arg1225, i64 %3
  %28 = load float, ptr addrspace(1) %27, align 4
  %multiply.25 = fmul float %6, %28
  %subtract.26 = fsub float %26, %multiply.25
  store float %subtract.16, ptr addrspace(1) %27, align 4
  store float %subtract.18, ptr addrspace(1) %23, align 4
  store float %subtract.20, ptr addrspace(1) %19, align 4
  store float %subtract.22, ptr addrspace(1) %15, align 4
  store float %subtract.24, ptr addrspace(1) %11, align 4
  store float %subtract.26, ptr addrspace(1) %7, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_30(ptr noalias nocapture readonly align 16 dereferenceable(3031040) %arg0, ptr noalias nocapture align 128 dereferenceable(3031040) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(3031040) %arg3, ptr noalias nocapture align 128 dereferenceable(3031040) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(3031040) %arg5, ptr noalias nocapture align 128 dereferenceable(3031040) %arg6, ptr noalias nocapture readonly align 16 dereferenceable(3031040) %arg7, ptr noalias nocapture align 128 dereferenceable(3031040) %arg8, ptr noalias nocapture readonly align 16 dereferenceable(3031040) %arg9, ptr noalias nocapture align 128 dereferenceable(3031040) %arg10, ptr noalias nocapture readonly align 16 dereferenceable(3031040) %arg11, ptr noalias nocapture align 128 dereferenceable(3031040) %arg12) local_unnamed_addr #6 {
entry:
  %arg1261 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg1159 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg1057 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg955 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg853 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg751 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg649 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg547 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg445 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg343 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg241 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg139 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg037 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !230
  %1 = shl nuw nsw i32 %0, 10
  %2 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !200
  %3 = shl nuw nsw i32 %2, 2
  %linear_index_base = or i32 %1, %3
  %4 = zext i32 %linear_index_base to i64
  %5 = getelementptr float, ptr addrspace(1) %arg037, i64 %4
  %6 = load <4 x float>, ptr addrspace(1) %5, align 16, !invariant.load !195
  %7 = extractelement <4 x float> %6, i32 0
  %8 = extractelement <4 x float> %6, i32 1
  %9 = extractelement <4 x float> %6, i32 2
  %10 = extractelement <4 x float> %6, i32 3
  %11 = load float, ptr addrspace(1) %arg241, align 16, !invariant.load !195
  %12 = getelementptr float, ptr addrspace(1) %arg139, i64 %4
  %13 = load <4 x float>, ptr addrspace(1) %12, align 16
  %14 = extractelement <4 x float> %13, i32 0
  %15 = extractelement <4 x float> %13, i32 1
  %16 = extractelement <4 x float> %13, i32 2
  %17 = extractelement <4 x float> %13, i32 3
  %multiply.15 = fmul float %11, %14
  %subtract.16 = fsub float %7, %multiply.15
  %18 = getelementptr float, ptr addrspace(1) %arg343, i64 %4
  %19 = load <4 x float>, ptr addrspace(1) %18, align 16, !invariant.load !195
  %20 = extractelement <4 x float> %19, i32 0
  %21 = extractelement <4 x float> %19, i32 1
  %22 = extractelement <4 x float> %19, i32 2
  %23 = extractelement <4 x float> %19, i32 3
  %24 = getelementptr float, ptr addrspace(1) %arg445, i64 %4
  %25 = load <4 x float>, ptr addrspace(1) %24, align 16
  %26 = extractelement <4 x float> %25, i32 0
  %27 = extractelement <4 x float> %25, i32 1
  %28 = extractelement <4 x float> %25, i32 2
  %29 = extractelement <4 x float> %25, i32 3
  %multiply.17 = fmul float %11, %26
  %subtract.18 = fsub float %20, %multiply.17
  %30 = getelementptr float, ptr addrspace(1) %arg547, i64 %4
  %31 = load <4 x float>, ptr addrspace(1) %30, align 16, !invariant.load !195
  %32 = extractelement <4 x float> %31, i32 0
  %33 = extractelement <4 x float> %31, i32 1
  %34 = extractelement <4 x float> %31, i32 2
  %35 = extractelement <4 x float> %31, i32 3
  %36 = getelementptr float, ptr addrspace(1) %arg649, i64 %4
  %37 = load <4 x float>, ptr addrspace(1) %36, align 16
  %38 = extractelement <4 x float> %37, i32 0
  %39 = extractelement <4 x float> %37, i32 1
  %40 = extractelement <4 x float> %37, i32 2
  %41 = extractelement <4 x float> %37, i32 3
  %multiply.19 = fmul float %11, %38
  %subtract.20 = fsub float %32, %multiply.19
  %42 = getelementptr float, ptr addrspace(1) %arg751, i64 %4
  %43 = load <4 x float>, ptr addrspace(1) %42, align 16, !invariant.load !195
  %44 = extractelement <4 x float> %43, i32 0
  %45 = extractelement <4 x float> %43, i32 1
  %46 = extractelement <4 x float> %43, i32 2
  %47 = extractelement <4 x float> %43, i32 3
  %48 = getelementptr float, ptr addrspace(1) %arg853, i64 %4
  %49 = load <4 x float>, ptr addrspace(1) %48, align 16
  %50 = extractelement <4 x float> %49, i32 0
  %51 = extractelement <4 x float> %49, i32 1
  %52 = extractelement <4 x float> %49, i32 2
  %53 = extractelement <4 x float> %49, i32 3
  %multiply.21 = fmul float %11, %50
  %subtract.22 = fsub float %44, %multiply.21
  %54 = getelementptr float, ptr addrspace(1) %arg955, i64 %4
  %55 = load <4 x float>, ptr addrspace(1) %54, align 16, !invariant.load !195
  %56 = extractelement <4 x float> %55, i32 0
  %57 = extractelement <4 x float> %55, i32 1
  %58 = extractelement <4 x float> %55, i32 2
  %59 = extractelement <4 x float> %55, i32 3
  %60 = getelementptr float, ptr addrspace(1) %arg1057, i64 %4
  %61 = load <4 x float>, ptr addrspace(1) %60, align 16
  %62 = extractelement <4 x float> %61, i32 0
  %63 = extractelement <4 x float> %61, i32 1
  %64 = extractelement <4 x float> %61, i32 2
  %65 = extractelement <4 x float> %61, i32 3
  %multiply.23 = fmul float %11, %62
  %subtract.24 = fsub float %56, %multiply.23
  %66 = getelementptr float, ptr addrspace(1) %arg1159, i64 %4
  %67 = load <4 x float>, ptr addrspace(1) %66, align 16, !invariant.load !195
  %68 = extractelement <4 x float> %67, i32 0
  %69 = extractelement <4 x float> %67, i32 1
  %70 = extractelement <4 x float> %67, i32 2
  %71 = extractelement <4 x float> %67, i32 3
  %72 = getelementptr float, ptr addrspace(1) %arg1261, i64 %4
  %73 = load <4 x float>, ptr addrspace(1) %72, align 16
  %74 = extractelement <4 x float> %73, i32 0
  %75 = extractelement <4 x float> %73, i32 1
  %76 = extractelement <4 x float> %73, i32 2
  %77 = extractelement <4 x float> %73, i32 3
  %multiply.25 = fmul float %11, %74
  %subtract.26 = fsub float %68, %multiply.25
  %multiply.151 = fmul float %11, %15
  %subtract.162 = fsub float %8, %multiply.151
  %multiply.173 = fmul float %11, %27
  %subtract.184 = fsub float %21, %multiply.173
  %multiply.195 = fmul float %11, %39
  %subtract.206 = fsub float %33, %multiply.195
  %multiply.217 = fmul float %11, %51
  %subtract.228 = fsub float %45, %multiply.217
  %multiply.239 = fmul float %11, %63
  %subtract.2410 = fsub float %57, %multiply.239
  %multiply.2511 = fmul float %11, %75
  %subtract.2612 = fsub float %69, %multiply.2511
  %multiply.1513 = fmul float %11, %16
  %subtract.1614 = fsub float %9, %multiply.1513
  %multiply.1715 = fmul float %11, %28
  %subtract.1816 = fsub float %22, %multiply.1715
  %multiply.1917 = fmul float %11, %40
  %subtract.2018 = fsub float %34, %multiply.1917
  %multiply.2119 = fmul float %11, %52
  %subtract.2220 = fsub float %46, %multiply.2119
  %multiply.2321 = fmul float %11, %64
  %subtract.2422 = fsub float %58, %multiply.2321
  %multiply.2523 = fmul float %11, %76
  %subtract.2624 = fsub float %70, %multiply.2523
  %multiply.1525 = fmul float %11, %17
  %subtract.1626 = fsub float %10, %multiply.1525
  %multiply.1727 = fmul float %11, %29
  %subtract.1828 = fsub float %23, %multiply.1727
  %multiply.1929 = fmul float %11, %41
  %subtract.2030 = fsub float %35, %multiply.1929
  %multiply.2131 = fmul float %11, %53
  %subtract.2232 = fsub float %47, %multiply.2131
  %multiply.2333 = fmul float %11, %65
  %subtract.2434 = fsub float %59, %multiply.2333
  %multiply.2535 = fmul float %11, %77
  %subtract.2636 = fsub float %71, %multiply.2535
  %78 = insertelement <4 x float> poison, float %subtract.16, i32 0
  %79 = insertelement <4 x float> %78, float %subtract.162, i32 1
  %80 = insertelement <4 x float> %79, float %subtract.1614, i32 2
  %81 = insertelement <4 x float> %80, float %subtract.1626, i32 3
  store <4 x float> %81, ptr addrspace(1) %72, align 16
  %82 = insertelement <4 x float> poison, float %subtract.18, i32 0
  %83 = insertelement <4 x float> %82, float %subtract.184, i32 1
  %84 = insertelement <4 x float> %83, float %subtract.1816, i32 2
  %85 = insertelement <4 x float> %84, float %subtract.1828, i32 3
  store <4 x float> %85, ptr addrspace(1) %60, align 16
  %86 = insertelement <4 x float> poison, float %subtract.20, i32 0
  %87 = insertelement <4 x float> %86, float %subtract.206, i32 1
  %88 = insertelement <4 x float> %87, float %subtract.2018, i32 2
  %89 = insertelement <4 x float> %88, float %subtract.2030, i32 3
  store <4 x float> %89, ptr addrspace(1) %48, align 16
  %90 = insertelement <4 x float> poison, float %subtract.22, i32 0
  %91 = insertelement <4 x float> %90, float %subtract.228, i32 1
  %92 = insertelement <4 x float> %91, float %subtract.2220, i32 2
  %93 = insertelement <4 x float> %92, float %subtract.2232, i32 3
  store <4 x float> %93, ptr addrspace(1) %36, align 16
  %94 = insertelement <4 x float> poison, float %subtract.24, i32 0
  %95 = insertelement <4 x float> %94, float %subtract.2410, i32 1
  %96 = insertelement <4 x float> %95, float %subtract.2422, i32 2
  %97 = insertelement <4 x float> %96, float %subtract.2434, i32 3
  store <4 x float> %97, ptr addrspace(1) %24, align 16
  %98 = insertelement <4 x float> poison, float %subtract.26, i32 0
  %99 = insertelement <4 x float> %98, float %subtract.2612, i32 1
  %100 = insertelement <4 x float> %99, float %subtract.2624, i32 2
  %101 = insertelement <4 x float> %100, float %subtract.2636, i32 3
  store <4 x float> %101, ptr addrspace(1) %12, align 16
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @concatenate_271(ptr noalias nocapture readonly align 16 dereferenceable(2097152) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(4194304) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(8388608) %arg2, ptr noalias nocapture writeonly align 128 dereferenceable(14680064) %arg3) local_unnamed_addr #5 {
entry:
  %arg352 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg250 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg148 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg046 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !231
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !200
  %2 = shl nuw nsw i32 %0, 10
  %3 = shl nuw nsw i32 %1, 2
  %linear_index_base = or i32 %2, %3
  %linear_index_base.frozen = freeze i32 %linear_index_base
  %4 = udiv i32 %linear_index_base.frozen, 448
  %5 = mul i32 %4, 448
  %.decomposed = sub i32 %linear_index_base.frozen, %5
  %linear_index1 = or i32 %linear_index_base, 1
  %6 = urem i32 %linear_index1, 448
  %linear_index2 = or i32 %linear_index_base, 2
  %7 = urem i32 %linear_index2, 448
  %linear_index3 = or i32 %linear_index_base, 3
  %8 = urem i32 %linear_index3, 448
  %9 = icmp ult i32 %.decomposed, 64
  br i1 %9, label %concatenate.pivot.0., label %concatenate.pivot.192.

concatenate.pivot.0.:                             ; preds = %entry
  %10 = udiv i32 %linear_index_base, 448
  %11 = shl nuw nsw i32 %10, 6
  %12 = add nuw nsw i32 %11, %.decomposed
  br label %concatenate.4.merge

concatenate.pivot.192.:                           ; preds = %entry
  %13 = icmp ult i32 %.decomposed, 192
  %14 = udiv i32 %linear_index_base, 448
  br i1 %13, label %concatenate.pivot.64.1, label %concatenate.pivot.192.2

concatenate.pivot.64.1:                           ; preds = %concatenate.pivot.192.
  %15 = add nsw i32 %.decomposed, -64
  %16 = shl nuw nsw i32 %14, 7
  %17 = add nuw nsw i32 %15, %16
  br label %concatenate.4.merge

concatenate.pivot.192.2:                          ; preds = %concatenate.pivot.192.
  %18 = add nsw i32 %.decomposed, -192
  %19 = shl nuw nsw i32 %14, 8
  %20 = add nuw nsw i32 %18, %19
  br label %concatenate.4.merge

concatenate.4.merge:                              ; preds = %concatenate.pivot.192.2, %concatenate.pivot.64.1, %concatenate.pivot.0.
  %.sink39 = phi i32 [ %20, %concatenate.pivot.192.2 ], [ %17, %concatenate.pivot.64.1 ], [ %12, %concatenate.pivot.0. ]
  %arg2.sink = phi ptr addrspace(1) [ %arg250, %concatenate.pivot.192.2 ], [ %arg148, %concatenate.pivot.64.1 ], [ %arg046, %concatenate.pivot.0. ]
  %21 = zext i32 %.sink39 to i64
  %22 = getelementptr inbounds float, ptr addrspace(1) %arg2.sink, i64 %21
  %23 = load float, ptr addrspace(1) %22, align 4, !invariant.load !195
  %24 = zext i32 %linear_index_base to i64
  %25 = getelementptr float, ptr addrspace(1) %arg352, i64 %24
  store float %23, ptr addrspace(1) %25, align 16
  %26 = icmp ult i32 %6, 64
  br i1 %26, label %concatenate.pivot.0.8, label %concatenate.pivot.192.9

concatenate.pivot.0.8:                            ; preds = %concatenate.4.merge
  %27 = udiv i32 %linear_index_base, 448
  %28 = shl nuw nsw i32 %27, 6
  %29 = add nuw nsw i32 %28, %6
  br label %concatenate.4.merge3

concatenate.pivot.192.9:                          ; preds = %concatenate.4.merge
  %30 = icmp ult i32 %6, 192
  %31 = udiv i32 %linear_index_base, 448
  br i1 %30, label %concatenate.pivot.64.10, label %concatenate.pivot.192.11

concatenate.pivot.64.10:                          ; preds = %concatenate.pivot.192.9
  %32 = add nsw i32 %6, -64
  %33 = shl nuw nsw i32 %31, 7
  %34 = add nuw nsw i32 %32, %33
  br label %concatenate.4.merge3

concatenate.pivot.192.11:                         ; preds = %concatenate.pivot.192.9
  %35 = add nsw i32 %6, -192
  %36 = shl nuw nsw i32 %31, 8
  %37 = add nuw nsw i32 %35, %36
  br label %concatenate.4.merge3

concatenate.4.merge3:                             ; preds = %concatenate.pivot.192.11, %concatenate.pivot.64.10, %concatenate.pivot.0.8
  %.sink41 = phi i32 [ %37, %concatenate.pivot.192.11 ], [ %34, %concatenate.pivot.64.10 ], [ %29, %concatenate.pivot.0.8 ]
  %arg2.sink40 = phi ptr addrspace(1) [ %arg250, %concatenate.pivot.192.11 ], [ %arg148, %concatenate.pivot.64.10 ], [ %arg046, %concatenate.pivot.0.8 ]
  %38 = zext i32 %.sink41 to i64
  %39 = getelementptr inbounds float, ptr addrspace(1) %arg2.sink40, i64 %38
  %40 = load float, ptr addrspace(1) %39, align 4, !invariant.load !195
  %41 = getelementptr inbounds float, ptr addrspace(1) %25, i64 1
  store float %40, ptr addrspace(1) %41, align 4
  %42 = icmp ult i32 %7, 64
  br i1 %42, label %concatenate.pivot.0.17, label %concatenate.pivot.192.18

concatenate.pivot.0.17:                           ; preds = %concatenate.4.merge3
  %43 = udiv i32 %linear_index_base, 448
  %44 = shl nuw nsw i32 %43, 6
  %45 = add nuw nsw i32 %44, %7
  br label %concatenate.4.merge12

concatenate.pivot.192.18:                         ; preds = %concatenate.4.merge3
  %46 = icmp ult i32 %7, 192
  %47 = udiv i32 %linear_index_base, 448
  br i1 %46, label %concatenate.pivot.64.19, label %concatenate.pivot.192.20

concatenate.pivot.64.19:                          ; preds = %concatenate.pivot.192.18
  %48 = add nsw i32 %7, -64
  %49 = shl nuw nsw i32 %47, 7
  %50 = add nuw nsw i32 %48, %49
  br label %concatenate.4.merge12

concatenate.pivot.192.20:                         ; preds = %concatenate.pivot.192.18
  %51 = add nsw i32 %7, -192
  %52 = shl nuw nsw i32 %47, 8
  %53 = add nuw nsw i32 %51, %52
  br label %concatenate.4.merge12

concatenate.4.merge12:                            ; preds = %concatenate.pivot.192.20, %concatenate.pivot.64.19, %concatenate.pivot.0.17
  %.sink43 = phi i32 [ %53, %concatenate.pivot.192.20 ], [ %50, %concatenate.pivot.64.19 ], [ %45, %concatenate.pivot.0.17 ]
  %arg2.sink42 = phi ptr addrspace(1) [ %arg250, %concatenate.pivot.192.20 ], [ %arg148, %concatenate.pivot.64.19 ], [ %arg046, %concatenate.pivot.0.17 ]
  %54 = zext i32 %.sink43 to i64
  %55 = getelementptr inbounds float, ptr addrspace(1) %arg2.sink42, i64 %54
  %56 = load float, ptr addrspace(1) %55, align 4, !invariant.load !195
  %57 = getelementptr inbounds float, ptr addrspace(1) %25, i64 2
  store float %56, ptr addrspace(1) %57, align 8
  %58 = icmp ult i32 %8, 64
  br i1 %58, label %concatenate.pivot.0.26, label %concatenate.pivot.192.27

concatenate.pivot.0.26:                           ; preds = %concatenate.4.merge12
  %59 = udiv i32 %linear_index_base, 448
  %60 = shl nuw nsw i32 %59, 6
  %61 = add nuw nsw i32 %60, %8
  br label %concatenate.4.merge21

concatenate.pivot.192.27:                         ; preds = %concatenate.4.merge12
  %62 = icmp ult i32 %8, 192
  br i1 %62, label %concatenate.pivot.64.28, label %concatenate.pivot.192.29

concatenate.pivot.64.28:                          ; preds = %concatenate.pivot.192.27
  %63 = add nsw i32 %8, -64
  %64 = shl nuw nsw i32 %4, 7
  %65 = add nuw nsw i32 %63, %64
  br label %concatenate.4.merge21

concatenate.pivot.192.29:                         ; preds = %concatenate.pivot.192.27
  %66 = add nsw i32 %8, -192
  %67 = shl nuw nsw i32 %4, 8
  %68 = add nuw nsw i32 %66, %67
  br label %concatenate.4.merge21

concatenate.4.merge21:                            ; preds = %concatenate.pivot.192.29, %concatenate.pivot.64.28, %concatenate.pivot.0.26
  %.sink45 = phi i32 [ %68, %concatenate.pivot.192.29 ], [ %65, %concatenate.pivot.64.28 ], [ %61, %concatenate.pivot.0.26 ]
  %arg2.sink44 = phi ptr addrspace(1) [ %arg250, %concatenate.pivot.192.29 ], [ %arg148, %concatenate.pivot.64.28 ], [ %arg046, %concatenate.pivot.0.26 ]
  %69 = zext i32 %.sink45 to i64
  %70 = getelementptr inbounds float, ptr addrspace(1) %arg2.sink44, i64 %69
  %71 = load float, ptr addrspace(1) %70, align 4, !invariant.load !195
  %72 = getelementptr inbounds float, ptr addrspace(1) %25, i64 3
  store float %71, ptr addrspace(1) %72, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_266(ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(163840) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg3, ptr noalias nocapture readonly align 128 dereferenceable(180224) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg5, ptr noalias nocapture readonly align 128 dereferenceable(180224) %arg6, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg7, ptr noalias nocapture readonly align 128 dereferenceable(229376) %arg8, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg9, ptr noalias nocapture readonly align 128 dereferenceable(180224) %arg10, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg11, ptr noalias nocapture readonly align 128 dereferenceable(180224) %arg12, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg13, ptr noalias nocapture readonly align 128 dereferenceable(229376) %arg14, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg15, ptr noalias nocapture readonly align 128 dereferenceable(229376) %arg16, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg17, ptr noalias nocapture readonly align 128 dereferenceable(114688) %arg18, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg19, ptr noalias nocapture readonly align 128 dereferenceable(114688) %arg20, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg21, ptr noalias nocapture readonly align 128 dereferenceable(163840) %arg22, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg23, ptr noalias nocapture readonly align 128 dereferenceable(114688) %arg24, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg25, ptr noalias nocapture readonly align 128 dereferenceable(114688) %arg26, ptr noalias nocapture readonly align 16 dereferenceable(32768) %arg27, ptr noalias nocapture readonly align 128 dereferenceable(163840) %arg28, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg29, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg30, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg31, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg32, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg33, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg34, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg35, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg36, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg37, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg38, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg39, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg40, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg41, ptr noalias nocapture writeonly align 128 dereferenceable(32768) %arg42) local_unnamed_addr #6 {
entry:
  %arg4292 = addrspacecast ptr %arg42 to ptr addrspace(1)
  %arg4190 = addrspacecast ptr %arg41 to ptr addrspace(1)
  %arg4088 = addrspacecast ptr %arg40 to ptr addrspace(1)
  %arg3986 = addrspacecast ptr %arg39 to ptr addrspace(1)
  %arg3884 = addrspacecast ptr %arg38 to ptr addrspace(1)
  %arg3782 = addrspacecast ptr %arg37 to ptr addrspace(1)
  %arg3680 = addrspacecast ptr %arg36 to ptr addrspace(1)
  %arg3578 = addrspacecast ptr %arg35 to ptr addrspace(1)
  %arg3476 = addrspacecast ptr %arg34 to ptr addrspace(1)
  %arg3374 = addrspacecast ptr %arg33 to ptr addrspace(1)
  %arg3272 = addrspacecast ptr %arg32 to ptr addrspace(1)
  %arg3170 = addrspacecast ptr %arg31 to ptr addrspace(1)
  %arg3068 = addrspacecast ptr %arg30 to ptr addrspace(1)
  %arg2966 = addrspacecast ptr %arg29 to ptr addrspace(1)
  %arg2864 = addrspacecast ptr %arg28 to ptr addrspace(1)
  %arg2762 = addrspacecast ptr %arg27 to ptr addrspace(1)
  %arg2660 = addrspacecast ptr %arg26 to ptr addrspace(1)
  %arg2558 = addrspacecast ptr %arg25 to ptr addrspace(1)
  %arg2456 = addrspacecast ptr %arg24 to ptr addrspace(1)
  %arg2354 = addrspacecast ptr %arg23 to ptr addrspace(1)
  %arg2252 = addrspacecast ptr %arg22 to ptr addrspace(1)
  %arg2150 = addrspacecast ptr %arg21 to ptr addrspace(1)
  %arg2048 = addrspacecast ptr %arg20 to ptr addrspace(1)
  %arg1946 = addrspacecast ptr %arg19 to ptr addrspace(1)
  %arg1844 = addrspacecast ptr %arg18 to ptr addrspace(1)
  %arg1742 = addrspacecast ptr %arg17 to ptr addrspace(1)
  %arg1640 = addrspacecast ptr %arg16 to ptr addrspace(1)
  %arg1538 = addrspacecast ptr %arg15 to ptr addrspace(1)
  %arg1436 = addrspacecast ptr %arg14 to ptr addrspace(1)
  %arg1334 = addrspacecast ptr %arg13 to ptr addrspace(1)
  %arg1232 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg1130 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg1028 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg926 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg824 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg722 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg620 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg518 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg416 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg314 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg212 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg110 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg01 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !197
  %1 = shl nuw nsw i32 %0, 10
  %2 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %linear_index = or i32 %1, %2
  %3 = lshr i32 %linear_index, 7
  %4 = and i32 %2, 127
  %5 = zext i32 %linear_index to i64
  %6 = getelementptr inbounds float, ptr addrspace(1) %arg01, i64 %5
  %7 = load float, ptr addrspace(1) %6, align 4, !invariant.load !195
  %8 = load float, ptr addrspace(1) %arg212, align 16, !invariant.load !195
  %9 = zext i32 %3 to i64
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds [320 x [128 x float]], ptr addrspace(1) %arg110, i64 0, i64 %9, i64 %10
  %12 = load float, ptr addrspace(1) %11, align 4, !invariant.load !195
  %multiply.32 = fmul float %8, %12
  %subtract.33 = fsub float %7, %multiply.32
  %13 = getelementptr inbounds float, ptr addrspace(1) %arg314, i64 %5
  %14 = load float, ptr addrspace(1) %13, align 4, !invariant.load !195
  %15 = getelementptr [352 x [128 x float]], ptr addrspace(1) %arg416, i64 0, i64 %9, i64 %10
  %16 = getelementptr inbounds float, ptr addrspace(1) %15, i64 4096
  %17 = load float, ptr addrspace(1) %16, align 4, !invariant.load !195
  %multiply.35 = fmul float %8, %17
  %subtract.36 = fsub float %14, %multiply.35
  %18 = getelementptr inbounds float, ptr addrspace(1) %arg518, i64 %5
  %19 = load float, ptr addrspace(1) %18, align 4, !invariant.load !195
  %20 = getelementptr [352 x [128 x float]], ptr addrspace(1) %arg620, i64 0, i64 %9, i64 %10
  %21 = getelementptr inbounds float, ptr addrspace(1) %20, i64 4096
  %22 = load float, ptr addrspace(1) %21, align 4, !invariant.load !195
  %multiply.38 = fmul float %8, %22
  %subtract.39 = fsub float %19, %multiply.38
  %23 = getelementptr inbounds float, ptr addrspace(1) %arg722, i64 %5
  %24 = load float, ptr addrspace(1) %23, align 4, !invariant.load !195
  %25 = getelementptr inbounds [448 x [128 x float]], ptr addrspace(1) %arg824, i64 0, i64 %9, i64 %10
  %26 = load float, ptr addrspace(1) %25, align 4, !invariant.load !195
  %multiply.41 = fmul float %8, %26
  %subtract.42 = fsub float %24, %multiply.41
  %27 = getelementptr inbounds float, ptr addrspace(1) %arg926, i64 %5
  %28 = load float, ptr addrspace(1) %27, align 4, !invariant.load !195
  %29 = getelementptr [352 x [128 x float]], ptr addrspace(1) %arg1028, i64 0, i64 %9, i64 %10
  %30 = getelementptr inbounds float, ptr addrspace(1) %29, i64 4096
  %31 = load float, ptr addrspace(1) %30, align 4, !invariant.load !195
  %multiply.44 = fmul float %8, %31
  %subtract.45 = fsub float %28, %multiply.44
  %32 = getelementptr inbounds float, ptr addrspace(1) %arg1130, i64 %5
  %33 = load float, ptr addrspace(1) %32, align 4, !invariant.load !195
  %34 = getelementptr [352 x [128 x float]], ptr addrspace(1) %arg1232, i64 0, i64 %9, i64 %10
  %35 = getelementptr inbounds float, ptr addrspace(1) %34, i64 4096
  %36 = load float, ptr addrspace(1) %35, align 4, !invariant.load !195
  %multiply.47 = fmul float %8, %36
  %subtract.48 = fsub float %33, %multiply.47
  %37 = getelementptr inbounds float, ptr addrspace(1) %arg1334, i64 %5
  %38 = load float, ptr addrspace(1) %37, align 4, !invariant.load !195
  %39 = getelementptr inbounds [448 x [128 x float]], ptr addrspace(1) %arg1436, i64 0, i64 %9, i64 %10
  %40 = load float, ptr addrspace(1) %39, align 4, !invariant.load !195
  %multiply.50 = fmul float %8, %40
  %subtract.51 = fsub float %38, %multiply.50
  %41 = getelementptr inbounds float, ptr addrspace(1) %arg1538, i64 %5
  %42 = load float, ptr addrspace(1) %41, align 4, !invariant.load !195
  %43 = getelementptr inbounds [448 x [128 x float]], ptr addrspace(1) %arg1640, i64 0, i64 %9, i64 %10
  %44 = load float, ptr addrspace(1) %43, align 4, !invariant.load !195
  %multiply.53 = fmul float %8, %44
  %subtract.54 = fsub float %42, %multiply.53
  %45 = getelementptr inbounds float, ptr addrspace(1) %arg1742, i64 %5
  %46 = load float, ptr addrspace(1) %45, align 4, !invariant.load !195
  %47 = getelementptr [224 x [128 x float]], ptr addrspace(1) %arg1844, i64 0, i64 %9, i64 %10
  %48 = getelementptr inbounds float, ptr addrspace(1) %47, i64 4096
  %49 = load float, ptr addrspace(1) %48, align 4, !invariant.load !195
  %multiply.56 = fmul float %8, %49
  %subtract.57 = fsub float %46, %multiply.56
  %50 = getelementptr inbounds float, ptr addrspace(1) %arg1946, i64 %5
  %51 = load float, ptr addrspace(1) %50, align 4, !invariant.load !195
  %52 = getelementptr [224 x [128 x float]], ptr addrspace(1) %arg2048, i64 0, i64 %9, i64 %10
  %53 = getelementptr inbounds float, ptr addrspace(1) %52, i64 4096
  %54 = load float, ptr addrspace(1) %53, align 4, !invariant.load !195
  %multiply.59 = fmul float %8, %54
  %subtract.60 = fsub float %51, %multiply.59
  %55 = getelementptr inbounds float, ptr addrspace(1) %arg2150, i64 %5
  %56 = load float, ptr addrspace(1) %55, align 4, !invariant.load !195
  %57 = getelementptr inbounds [320 x [128 x float]], ptr addrspace(1) %arg2252, i64 0, i64 %9, i64 %10
  %58 = load float, ptr addrspace(1) %57, align 4, !invariant.load !195
  %multiply.62 = fmul float %8, %58
  %subtract.63 = fsub float %56, %multiply.62
  %59 = getelementptr inbounds float, ptr addrspace(1) %arg2354, i64 %5
  %60 = load float, ptr addrspace(1) %59, align 4, !invariant.load !195
  %61 = getelementptr [224 x [128 x float]], ptr addrspace(1) %arg2456, i64 0, i64 %9, i64 %10
  %62 = getelementptr inbounds float, ptr addrspace(1) %61, i64 4096
  %63 = load float, ptr addrspace(1) %62, align 4, !invariant.load !195
  %multiply.65 = fmul float %8, %63
  %subtract.66 = fsub float %60, %multiply.65
  %64 = getelementptr inbounds float, ptr addrspace(1) %arg2558, i64 %5
  %65 = load float, ptr addrspace(1) %64, align 4, !invariant.load !195
  %66 = getelementptr [224 x [128 x float]], ptr addrspace(1) %arg2660, i64 0, i64 %9, i64 %10
  %67 = getelementptr inbounds float, ptr addrspace(1) %66, i64 4096
  %68 = load float, ptr addrspace(1) %67, align 4, !invariant.load !195
  %multiply.68 = fmul float %8, %68
  %subtract.69 = fsub float %65, %multiply.68
  %69 = getelementptr inbounds float, ptr addrspace(1) %arg2762, i64 %5
  %70 = load float, ptr addrspace(1) %69, align 4, !invariant.load !195
  %71 = getelementptr inbounds [320 x [128 x float]], ptr addrspace(1) %arg2864, i64 0, i64 %9, i64 %10
  %72 = load float, ptr addrspace(1) %71, align 4, !invariant.load !195
  %multiply.71 = fmul float %8, %72
  %subtract.72 = fsub float %70, %multiply.71
  %73 = getelementptr inbounds float, ptr addrspace(1) %arg2966, i64 %5
  store float %subtract.33, ptr addrspace(1) %73, align 4
  %74 = getelementptr inbounds float, ptr addrspace(1) %arg3068, i64 %5
  store float %subtract.36, ptr addrspace(1) %74, align 4
  %75 = getelementptr inbounds float, ptr addrspace(1) %arg3170, i64 %5
  store float %subtract.39, ptr addrspace(1) %75, align 4
  %76 = getelementptr inbounds float, ptr addrspace(1) %arg3272, i64 %5
  store float %subtract.42, ptr addrspace(1) %76, align 4
  %77 = getelementptr inbounds float, ptr addrspace(1) %arg3374, i64 %5
  store float %subtract.45, ptr addrspace(1) %77, align 4
  %78 = getelementptr inbounds float, ptr addrspace(1) %arg3476, i64 %5
  store float %subtract.48, ptr addrspace(1) %78, align 4
  %79 = getelementptr inbounds float, ptr addrspace(1) %arg3578, i64 %5
  store float %subtract.51, ptr addrspace(1) %79, align 4
  %80 = getelementptr inbounds float, ptr addrspace(1) %arg3680, i64 %5
  store float %subtract.54, ptr addrspace(1) %80, align 4
  %81 = getelementptr inbounds float, ptr addrspace(1) %arg3782, i64 %5
  store float %subtract.57, ptr addrspace(1) %81, align 4
  %82 = getelementptr inbounds float, ptr addrspace(1) %arg3884, i64 %5
  store float %subtract.60, ptr addrspace(1) %82, align 4
  %83 = getelementptr inbounds float, ptr addrspace(1) %arg3986, i64 %5
  store float %subtract.63, ptr addrspace(1) %83, align 4
  %84 = getelementptr inbounds float, ptr addrspace(1) %arg4088, i64 %5
  store float %subtract.66, ptr addrspace(1) %84, align 4
  %85 = getelementptr inbounds float, ptr addrspace(1) %arg4190, i64 %5
  store float %subtract.69, ptr addrspace(1) %85, align 4
  %86 = getelementptr inbounds float, ptr addrspace(1) %arg4292, i64 %5
  store float %subtract.72, ptr addrspace(1) %86, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_248(ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(163840) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg3, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg4, ptr noalias nocapture readonly align 128 dereferenceable(163840) %arg5, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg6, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg7, ptr noalias nocapture readonly align 128 dereferenceable(163840) %arg8, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg9, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg10, ptr noalias nocapture readonly align 128 dereferenceable(65536) %arg11, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg12, ptr noalias nocapture readonly align 128 dereferenceable(229376) %arg13, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg14, ptr noalias nocapture readonly align 128 dereferenceable(229376) %arg15, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg16, ptr noalias nocapture readonly align 128 dereferenceable(229376) %arg17, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg18, ptr noalias nocapture readonly align 128 dereferenceable(114688) %arg19, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg20, ptr noalias nocapture readonly align 128 dereferenceable(114688) %arg21, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg22, ptr noalias nocapture readonly align 128 dereferenceable(114688) %arg23, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg24, ptr noalias nocapture readonly align 128 dereferenceable(114688) %arg25, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg26, ptr noalias nocapture readonly align 128 dereferenceable(65536) %arg27, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg28, ptr noalias nocapture readonly align 128 dereferenceable(65536) %arg29, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg30, ptr noalias nocapture readonly align 128 dereferenceable(65536) %arg31, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg32, ptr noalias nocapture align 128 dereferenceable(65536) %arg33, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg34, ptr noalias nocapture align 128 dereferenceable(65536) %arg35, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg36, ptr noalias nocapture align 128 dereferenceable(65536) %arg37, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg38, ptr noalias nocapture align 128 dereferenceable(65536) %arg39, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg40, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg41, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg42, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg43, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg44, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg45, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg46, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg47, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg48, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg49, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg50, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg51, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg52, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg53, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg54, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg55, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg56) local_unnamed_addr #6 {
entry:
  %arg56120 = addrspacecast ptr %arg56 to ptr addrspace(1)
  %arg55118 = addrspacecast ptr %arg55 to ptr addrspace(1)
  %arg54116 = addrspacecast ptr %arg54 to ptr addrspace(1)
  %arg53114 = addrspacecast ptr %arg53 to ptr addrspace(1)
  %arg52112 = addrspacecast ptr %arg52 to ptr addrspace(1)
  %arg51110 = addrspacecast ptr %arg51 to ptr addrspace(1)
  %arg50108 = addrspacecast ptr %arg50 to ptr addrspace(1)
  %arg49106 = addrspacecast ptr %arg49 to ptr addrspace(1)
  %arg48104 = addrspacecast ptr %arg48 to ptr addrspace(1)
  %arg47102 = addrspacecast ptr %arg47 to ptr addrspace(1)
  %arg46100 = addrspacecast ptr %arg46 to ptr addrspace(1)
  %arg4598 = addrspacecast ptr %arg45 to ptr addrspace(1)
  %arg4496 = addrspacecast ptr %arg44 to ptr addrspace(1)
  %arg4394 = addrspacecast ptr %arg43 to ptr addrspace(1)
  %arg4292 = addrspacecast ptr %arg42 to ptr addrspace(1)
  %arg4190 = addrspacecast ptr %arg41 to ptr addrspace(1)
  %arg4088 = addrspacecast ptr %arg40 to ptr addrspace(1)
  %arg3986 = addrspacecast ptr %arg39 to ptr addrspace(1)
  %arg3884 = addrspacecast ptr %arg38 to ptr addrspace(1)
  %arg3782 = addrspacecast ptr %arg37 to ptr addrspace(1)
  %arg3680 = addrspacecast ptr %arg36 to ptr addrspace(1)
  %arg3578 = addrspacecast ptr %arg35 to ptr addrspace(1)
  %arg3476 = addrspacecast ptr %arg34 to ptr addrspace(1)
  %arg3374 = addrspacecast ptr %arg33 to ptr addrspace(1)
  %arg3272 = addrspacecast ptr %arg32 to ptr addrspace(1)
  %arg3170 = addrspacecast ptr %arg31 to ptr addrspace(1)
  %arg3068 = addrspacecast ptr %arg30 to ptr addrspace(1)
  %arg2966 = addrspacecast ptr %arg29 to ptr addrspace(1)
  %arg2864 = addrspacecast ptr %arg28 to ptr addrspace(1)
  %arg2762 = addrspacecast ptr %arg27 to ptr addrspace(1)
  %arg2660 = addrspacecast ptr %arg26 to ptr addrspace(1)
  %arg2558 = addrspacecast ptr %arg25 to ptr addrspace(1)
  %arg2456 = addrspacecast ptr %arg24 to ptr addrspace(1)
  %arg2354 = addrspacecast ptr %arg23 to ptr addrspace(1)
  %arg2252 = addrspacecast ptr %arg22 to ptr addrspace(1)
  %arg2150 = addrspacecast ptr %arg21 to ptr addrspace(1)
  %arg2048 = addrspacecast ptr %arg20 to ptr addrspace(1)
  %arg1946 = addrspacecast ptr %arg19 to ptr addrspace(1)
  %arg1844 = addrspacecast ptr %arg18 to ptr addrspace(1)
  %arg1742 = addrspacecast ptr %arg17 to ptr addrspace(1)
  %arg1640 = addrspacecast ptr %arg16 to ptr addrspace(1)
  %arg1538 = addrspacecast ptr %arg15 to ptr addrspace(1)
  %arg1436 = addrspacecast ptr %arg14 to ptr addrspace(1)
  %arg1334 = addrspacecast ptr %arg13 to ptr addrspace(1)
  %arg1232 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg1130 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg1028 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg926 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg824 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg722 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg620 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg518 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg416 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg314 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg212 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg110 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg01 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !215
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %2 = shl nuw nsw i32 %0, 10
  %linear_index = or i32 %2, %1
  %3 = lshr i32 %linear_index, 7
  %4 = and i32 %1, 127
  %5 = zext i32 %linear_index to i64
  %6 = getelementptr inbounds float, ptr addrspace(1) %arg01, i64 %5
  %7 = load float, ptr addrspace(1) %6, align 4, !invariant.load !195
  %8 = load float, ptr addrspace(1) %arg212, align 16, !invariant.load !195
  %9 = zext i32 %4 to i64
  %10 = zext i32 %3 to i64
  %11 = getelementptr [320 x [128 x float]], ptr addrspace(1) %arg110, i64 0, i64 %10, i64 %9
  %12 = getelementptr inbounds float, ptr addrspace(1) %11, i64 24576
  %13 = load float, ptr addrspace(1) %12, align 4, !invariant.load !195
  %multiply.43 = fmul float %8, %13
  %subtract.44 = fsub float %7, %multiply.43
  %14 = getelementptr inbounds float, ptr addrspace(1) %arg314, i64 %5
  %15 = load float, ptr addrspace(1) %14, align 4, !invariant.load !195
  %16 = getelementptr inbounds float, ptr addrspace(1) %11, i64 8192
  %17 = load float, ptr addrspace(1) %16, align 4, !invariant.load !195
  %multiply.46 = fmul float %8, %17
  %subtract.47 = fsub float %15, %multiply.46
  %18 = getelementptr inbounds float, ptr addrspace(1) %arg620, i64 %5
  %19 = load float, ptr addrspace(1) %18, align 4, !invariant.load !195
  %20 = getelementptr [320 x [128 x float]], ptr addrspace(1) %arg518, i64 0, i64 %10, i64 %9
  %21 = getelementptr inbounds float, ptr addrspace(1) %20, i64 8192
  %22 = load float, ptr addrspace(1) %21, align 4, !invariant.load !195
  %multiply.49 = fmul float %8, %22
  %subtract.50 = fsub float %19, %multiply.49
  %23 = getelementptr inbounds float, ptr addrspace(1) %arg416, i64 %5
  %24 = load float, ptr addrspace(1) %23, align 4, !invariant.load !195
  %25 = getelementptr inbounds float, ptr addrspace(1) %20, i64 24576
  %26 = load float, ptr addrspace(1) %25, align 4, !invariant.load !195
  %multiply.52 = fmul float %8, %26
  %subtract.53 = fsub float %24, %multiply.52
  %27 = getelementptr inbounds float, ptr addrspace(1) %arg926, i64 %5
  %28 = load float, ptr addrspace(1) %27, align 4, !invariant.load !195
  %29 = getelementptr [320 x [128 x float]], ptr addrspace(1) %arg824, i64 0, i64 %10, i64 %9
  %30 = getelementptr inbounds float, ptr addrspace(1) %29, i64 8192
  %31 = load float, ptr addrspace(1) %30, align 4, !invariant.load !195
  %multiply.55 = fmul float %8, %31
  %subtract.56 = fsub float %28, %multiply.55
  %32 = getelementptr inbounds float, ptr addrspace(1) %arg722, i64 %5
  %33 = load float, ptr addrspace(1) %32, align 4, !invariant.load !195
  %34 = getelementptr inbounds float, ptr addrspace(1) %29, i64 24576
  %35 = load float, ptr addrspace(1) %34, align 4, !invariant.load !195
  %multiply.58 = fmul float %8, %35
  %subtract.59 = fsub float %33, %multiply.58
  %36 = getelementptr inbounds float, ptr addrspace(1) %arg1028, i64 %5
  %37 = load float, ptr addrspace(1) %36, align 4, !invariant.load !195
  %38 = getelementptr inbounds float, ptr addrspace(1) %arg1130, i64 %5
  %39 = load float, ptr addrspace(1) %38, align 4, !invariant.load !195
  %multiply.60 = fmul float %8, %39
  %subtract.61 = fsub float %37, %multiply.60
  %40 = getelementptr inbounds float, ptr addrspace(1) %arg1232, i64 %5
  %41 = load float, ptr addrspace(1) %40, align 4, !invariant.load !195
  %42 = getelementptr [448 x [128 x float]], ptr addrspace(1) %arg1334, i64 0, i64 %10, i64 %9
  %43 = getelementptr inbounds float, ptr addrspace(1) %42, i64 8192
  %44 = load float, ptr addrspace(1) %43, align 4, !invariant.load !195
  %multiply.63 = fmul float %8, %44
  %subtract.64 = fsub float %41, %multiply.63
  %45 = getelementptr inbounds float, ptr addrspace(1) %arg1436, i64 %5
  %46 = load float, ptr addrspace(1) %45, align 4, !invariant.load !195
  %47 = getelementptr [448 x [128 x float]], ptr addrspace(1) %arg1538, i64 0, i64 %10, i64 %9
  %48 = getelementptr inbounds float, ptr addrspace(1) %47, i64 8192
  %49 = load float, ptr addrspace(1) %48, align 4, !invariant.load !195
  %multiply.66 = fmul float %8, %49
  %subtract.67 = fsub float %46, %multiply.66
  %50 = getelementptr inbounds float, ptr addrspace(1) %arg1640, i64 %5
  %51 = load float, ptr addrspace(1) %50, align 4, !invariant.load !195
  %52 = getelementptr [448 x [128 x float]], ptr addrspace(1) %arg1742, i64 0, i64 %10, i64 %9
  %53 = getelementptr inbounds float, ptr addrspace(1) %52, i64 8192
  %54 = load float, ptr addrspace(1) %53, align 4, !invariant.load !195
  %multiply.69 = fmul float %8, %54
  %subtract.70 = fsub float %51, %multiply.69
  %55 = getelementptr inbounds float, ptr addrspace(1) %arg1844, i64 %5
  %56 = load float, ptr addrspace(1) %55, align 4, !invariant.load !195
  %57 = getelementptr [224 x [128 x float]], ptr addrspace(1) %arg1946, i64 0, i64 %10, i64 %9
  %58 = getelementptr inbounds float, ptr addrspace(1) %57, i64 12288
  %59 = load float, ptr addrspace(1) %58, align 4, !invariant.load !195
  %multiply.72 = fmul float %8, %59
  %subtract.73 = fsub float %56, %multiply.72
  %60 = getelementptr inbounds float, ptr addrspace(1) %arg2048, i64 %5
  %61 = load float, ptr addrspace(1) %60, align 4, !invariant.load !195
  %62 = getelementptr [224 x [128 x float]], ptr addrspace(1) %arg2150, i64 0, i64 %10, i64 %9
  %63 = getelementptr inbounds float, ptr addrspace(1) %62, i64 12288
  %64 = load float, ptr addrspace(1) %63, align 4, !invariant.load !195
  %multiply.75 = fmul float %8, %64
  %subtract.76 = fsub float %61, %multiply.75
  %65 = getelementptr inbounds float, ptr addrspace(1) %arg2252, i64 %5
  %66 = load float, ptr addrspace(1) %65, align 4, !invariant.load !195
  %67 = getelementptr [224 x [128 x float]], ptr addrspace(1) %arg2354, i64 0, i64 %10, i64 %9
  %68 = getelementptr inbounds float, ptr addrspace(1) %67, i64 12288
  %69 = load float, ptr addrspace(1) %68, align 4, !invariant.load !195
  %multiply.78 = fmul float %8, %69
  %subtract.79 = fsub float %66, %multiply.78
  %70 = getelementptr inbounds float, ptr addrspace(1) %arg2456, i64 %5
  %71 = load float, ptr addrspace(1) %70, align 4, !invariant.load !195
  %72 = getelementptr [224 x [128 x float]], ptr addrspace(1) %arg2558, i64 0, i64 %10, i64 %9
  %73 = getelementptr inbounds float, ptr addrspace(1) %72, i64 12288
  %74 = load float, ptr addrspace(1) %73, align 4, !invariant.load !195
  %multiply.81 = fmul float %8, %74
  %subtract.82 = fsub float %71, %multiply.81
  %75 = getelementptr inbounds float, ptr addrspace(1) %arg2660, i64 %5
  %76 = load float, ptr addrspace(1) %75, align 4, !invariant.load !195
  %77 = getelementptr inbounds float, ptr addrspace(1) %arg2762, i64 %5
  %78 = load float, ptr addrspace(1) %77, align 4, !invariant.load !195
  %multiply.83 = fmul float %8, %78
  %subtract.84 = fsub float %76, %multiply.83
  %79 = getelementptr inbounds float, ptr addrspace(1) %arg2864, i64 %5
  %80 = load float, ptr addrspace(1) %79, align 4, !invariant.load !195
  %81 = getelementptr inbounds float, ptr addrspace(1) %arg2966, i64 %5
  %82 = load float, ptr addrspace(1) %81, align 4, !invariant.load !195
  %multiply.85 = fmul float %8, %82
  %subtract.86 = fsub float %80, %multiply.85
  %83 = getelementptr inbounds float, ptr addrspace(1) %arg3068, i64 %5
  %84 = load float, ptr addrspace(1) %83, align 4, !invariant.load !195
  %85 = getelementptr inbounds float, ptr addrspace(1) %arg3170, i64 %5
  %86 = load float, ptr addrspace(1) %85, align 4, !invariant.load !195
  %multiply.87 = fmul float %8, %86
  %subtract.88 = fsub float %84, %multiply.87
  %87 = getelementptr inbounds float, ptr addrspace(1) %arg3272, i64 %5
  %88 = load float, ptr addrspace(1) %87, align 4, !invariant.load !195
  %89 = getelementptr inbounds float, ptr addrspace(1) %arg3374, i64 %5
  %90 = load float, ptr addrspace(1) %89, align 4
  %multiply.89 = fmul float %8, %90
  %subtract.90 = fsub float %88, %multiply.89
  %91 = getelementptr inbounds float, ptr addrspace(1) %arg3476, i64 %5
  %92 = load float, ptr addrspace(1) %91, align 4, !invariant.load !195
  %93 = getelementptr inbounds float, ptr addrspace(1) %arg3578, i64 %5
  %94 = load float, ptr addrspace(1) %93, align 4
  %multiply.91 = fmul float %8, %94
  %subtract.92 = fsub float %92, %multiply.91
  %95 = getelementptr inbounds float, ptr addrspace(1) %arg3680, i64 %5
  %96 = load float, ptr addrspace(1) %95, align 4, !invariant.load !195
  %97 = getelementptr inbounds float, ptr addrspace(1) %arg3782, i64 %5
  %98 = load float, ptr addrspace(1) %97, align 4
  %multiply.93 = fmul float %8, %98
  %subtract.94 = fsub float %96, %multiply.93
  %99 = getelementptr inbounds float, ptr addrspace(1) %arg3884, i64 %5
  %100 = load float, ptr addrspace(1) %99, align 4, !invariant.load !195
  %101 = getelementptr inbounds float, ptr addrspace(1) %arg3986, i64 %5
  %102 = load float, ptr addrspace(1) %101, align 4
  %multiply.95 = fmul float %8, %102
  %subtract.96 = fsub float %100, %multiply.95
  %103 = getelementptr inbounds float, ptr addrspace(1) %arg4088, i64 %5
  store float %subtract.44, ptr addrspace(1) %103, align 4
  %104 = getelementptr inbounds float, ptr addrspace(1) %arg4190, i64 %5
  store float %subtract.47, ptr addrspace(1) %104, align 4
  %105 = getelementptr inbounds float, ptr addrspace(1) %arg4292, i64 %5
  store float %subtract.50, ptr addrspace(1) %105, align 4
  %106 = getelementptr inbounds float, ptr addrspace(1) %arg4394, i64 %5
  store float %subtract.53, ptr addrspace(1) %106, align 4
  %107 = getelementptr inbounds float, ptr addrspace(1) %arg4496, i64 %5
  store float %subtract.56, ptr addrspace(1) %107, align 4
  %108 = getelementptr inbounds float, ptr addrspace(1) %arg4598, i64 %5
  store float %subtract.59, ptr addrspace(1) %108, align 4
  %109 = getelementptr inbounds float, ptr addrspace(1) %arg46100, i64 %5
  store float %subtract.61, ptr addrspace(1) %109, align 4
  %110 = getelementptr inbounds float, ptr addrspace(1) %arg47102, i64 %5
  store float %subtract.64, ptr addrspace(1) %110, align 4
  %111 = getelementptr inbounds float, ptr addrspace(1) %arg48104, i64 %5
  store float %subtract.67, ptr addrspace(1) %111, align 4
  %112 = getelementptr inbounds float, ptr addrspace(1) %arg49106, i64 %5
  store float %subtract.70, ptr addrspace(1) %112, align 4
  %113 = getelementptr inbounds float, ptr addrspace(1) %arg50108, i64 %5
  store float %subtract.73, ptr addrspace(1) %113, align 4
  %114 = getelementptr inbounds float, ptr addrspace(1) %arg51110, i64 %5
  store float %subtract.76, ptr addrspace(1) %114, align 4
  %115 = getelementptr inbounds float, ptr addrspace(1) %arg52112, i64 %5
  store float %subtract.79, ptr addrspace(1) %115, align 4
  %116 = getelementptr inbounds float, ptr addrspace(1) %arg53114, i64 %5
  store float %subtract.82, ptr addrspace(1) %116, align 4
  %117 = getelementptr inbounds float, ptr addrspace(1) %arg54116, i64 %5
  store float %subtract.84, ptr addrspace(1) %117, align 4
  %118 = getelementptr inbounds float, ptr addrspace(1) %arg55118, i64 %5
  store float %subtract.86, ptr addrspace(1) %118, align 4
  %119 = getelementptr inbounds float, ptr addrspace(1) %arg56120, i64 %5
  store float %subtract.88, ptr addrspace(1) %119, align 4
  store float %subtract.90, ptr addrspace(1) %101, align 4
  store float %subtract.92, ptr addrspace(1) %97, align 4
  store float %subtract.94, ptr addrspace(1) %93, align 4
  store float %subtract.96, ptr addrspace(1) %89, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_383(ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(131072) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg3, ptr noalias nocapture readonly align 128 dereferenceable(180224) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg5, ptr noalias nocapture readonly align 128 dereferenceable(180224) %arg6, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg7, ptr noalias nocapture readonly align 128 dereferenceable(229376) %arg8, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg9, ptr noalias nocapture readonly align 128 dereferenceable(180224) %arg10, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg11, ptr noalias nocapture readonly align 128 dereferenceable(180224) %arg12, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg13, ptr noalias nocapture readonly align 128 dereferenceable(229376) %arg14, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg15, ptr noalias nocapture readonly align 128 dereferenceable(229376) %arg16, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg17, ptr noalias nocapture readonly align 128 dereferenceable(131072) %arg18, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg19, ptr noalias nocapture readonly align 128 dereferenceable(131072) %arg20, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg21, ptr noalias nocapture align 128 dereferenceable(131072) %arg22, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg23, ptr noalias nocapture align 128 dereferenceable(131072) %arg24, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg25, ptr noalias nocapture align 128 dereferenceable(131072) %arg26, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg27, ptr noalias nocapture align 128 dereferenceable(131072) %arg28, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg29, ptr noalias nocapture align 128 dereferenceable(131072) %arg30, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg31, ptr noalias nocapture align 128 dereferenceable(131072) %arg32, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg33, ptr noalias nocapture align 128 dereferenceable(131072) %arg34, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg35, ptr noalias nocapture align 128 dereferenceable(131072) %arg36, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg37, ptr noalias nocapture align 128 dereferenceable(131072) %arg38, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg39, ptr noalias nocapture align 128 dereferenceable(131072) %arg40, ptr noalias nocapture writeonly align 128 dereferenceable(131072) %arg41, ptr noalias nocapture writeonly align 128 dereferenceable(131072) %arg42, ptr noalias nocapture writeonly align 128 dereferenceable(131072) %arg43, ptr noalias nocapture writeonly align 128 dereferenceable(131072) %arg44, ptr noalias nocapture writeonly align 128 dereferenceable(131072) %arg45, ptr noalias nocapture writeonly align 128 dereferenceable(131072) %arg46, ptr noalias nocapture writeonly align 128 dereferenceable(131072) %arg47, ptr noalias nocapture writeonly align 128 dereferenceable(131072) %arg48, ptr noalias nocapture writeonly align 128 dereferenceable(131072) %arg49, ptr noalias nocapture writeonly align 128 dereferenceable(131072) %arg50) local_unnamed_addr #6 {
entry:
  %arg50108 = addrspacecast ptr %arg50 to ptr addrspace(1)
  %arg49106 = addrspacecast ptr %arg49 to ptr addrspace(1)
  %arg48104 = addrspacecast ptr %arg48 to ptr addrspace(1)
  %arg47102 = addrspacecast ptr %arg47 to ptr addrspace(1)
  %arg46100 = addrspacecast ptr %arg46 to ptr addrspace(1)
  %arg4598 = addrspacecast ptr %arg45 to ptr addrspace(1)
  %arg4496 = addrspacecast ptr %arg44 to ptr addrspace(1)
  %arg4394 = addrspacecast ptr %arg43 to ptr addrspace(1)
  %arg4292 = addrspacecast ptr %arg42 to ptr addrspace(1)
  %arg4190 = addrspacecast ptr %arg41 to ptr addrspace(1)
  %arg4088 = addrspacecast ptr %arg40 to ptr addrspace(1)
  %arg3986 = addrspacecast ptr %arg39 to ptr addrspace(1)
  %arg3884 = addrspacecast ptr %arg38 to ptr addrspace(1)
  %arg3782 = addrspacecast ptr %arg37 to ptr addrspace(1)
  %arg3680 = addrspacecast ptr %arg36 to ptr addrspace(1)
  %arg3578 = addrspacecast ptr %arg35 to ptr addrspace(1)
  %arg3476 = addrspacecast ptr %arg34 to ptr addrspace(1)
  %arg3374 = addrspacecast ptr %arg33 to ptr addrspace(1)
  %arg3272 = addrspacecast ptr %arg32 to ptr addrspace(1)
  %arg3170 = addrspacecast ptr %arg31 to ptr addrspace(1)
  %arg3068 = addrspacecast ptr %arg30 to ptr addrspace(1)
  %arg2966 = addrspacecast ptr %arg29 to ptr addrspace(1)
  %arg2864 = addrspacecast ptr %arg28 to ptr addrspace(1)
  %arg2762 = addrspacecast ptr %arg27 to ptr addrspace(1)
  %arg2660 = addrspacecast ptr %arg26 to ptr addrspace(1)
  %arg2558 = addrspacecast ptr %arg25 to ptr addrspace(1)
  %arg2456 = addrspacecast ptr %arg24 to ptr addrspace(1)
  %arg2354 = addrspacecast ptr %arg23 to ptr addrspace(1)
  %arg2252 = addrspacecast ptr %arg22 to ptr addrspace(1)
  %arg2150 = addrspacecast ptr %arg21 to ptr addrspace(1)
  %arg2048 = addrspacecast ptr %arg20 to ptr addrspace(1)
  %arg1946 = addrspacecast ptr %arg19 to ptr addrspace(1)
  %arg1844 = addrspacecast ptr %arg18 to ptr addrspace(1)
  %arg1742 = addrspacecast ptr %arg17 to ptr addrspace(1)
  %arg1640 = addrspacecast ptr %arg16 to ptr addrspace(1)
  %arg1538 = addrspacecast ptr %arg15 to ptr addrspace(1)
  %arg1436 = addrspacecast ptr %arg14 to ptr addrspace(1)
  %arg1334 = addrspacecast ptr %arg13 to ptr addrspace(1)
  %arg1232 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg1130 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg1028 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg926 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg824 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg722 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg620 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg518 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg416 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg314 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg212 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg110 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg01 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !232
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %2 = shl nuw nsw i32 %0, 10
  %linear_index = or i32 %2, %1
  %3 = lshr i32 %linear_index, 7
  %4 = and i32 %1, 127
  %5 = zext i32 %linear_index to i64
  %6 = getelementptr inbounds float, ptr addrspace(1) %arg01, i64 %5
  %7 = load float, ptr addrspace(1) %6, align 4, !invariant.load !195
  %8 = load float, ptr addrspace(1) %arg212, align 16, !invariant.load !195
  %9 = getelementptr inbounds float, ptr addrspace(1) %arg110, i64 %5
  %10 = load float, ptr addrspace(1) %9, align 4, !invariant.load !195
  %multiply.43 = fmul float %8, %10
  %subtract.44 = fsub float %7, %multiply.43
  %11 = getelementptr inbounds float, ptr addrspace(1) %arg314, i64 %5
  %12 = load float, ptr addrspace(1) %11, align 4, !invariant.load !195
  %13 = zext i32 %4 to i64
  %14 = zext i32 %3 to i64
  %15 = getelementptr [352 x [128 x float]], ptr addrspace(1) %arg416, i64 0, i64 %14, i64 %13
  %16 = getelementptr inbounds float, ptr addrspace(1) %15, i64 12288
  %17 = load float, ptr addrspace(1) %16, align 4, !invariant.load !195
  %multiply.46 = fmul float %8, %17
  %subtract.47 = fsub float %12, %multiply.46
  %18 = getelementptr inbounds float, ptr addrspace(1) %arg518, i64 %5
  %19 = load float, ptr addrspace(1) %18, align 4, !invariant.load !195
  %20 = getelementptr [352 x [128 x float]], ptr addrspace(1) %arg620, i64 0, i64 %14, i64 %13
  %21 = getelementptr inbounds float, ptr addrspace(1) %20, i64 12288
  %22 = load float, ptr addrspace(1) %21, align 4, !invariant.load !195
  %multiply.49 = fmul float %8, %22
  %subtract.50 = fsub float %19, %multiply.49
  %23 = getelementptr inbounds float, ptr addrspace(1) %arg722, i64 %5
  %24 = load float, ptr addrspace(1) %23, align 4, !invariant.load !195
  %25 = getelementptr [448 x [128 x float]], ptr addrspace(1) %arg824, i64 0, i64 %14, i64 %13
  %26 = getelementptr inbounds float, ptr addrspace(1) %25, i64 24576
  %27 = load float, ptr addrspace(1) %26, align 4, !invariant.load !195
  %multiply.52 = fmul float %8, %27
  %subtract.53 = fsub float %24, %multiply.52
  %28 = getelementptr inbounds float, ptr addrspace(1) %arg926, i64 %5
  %29 = load float, ptr addrspace(1) %28, align 4, !invariant.load !195
  %30 = getelementptr [352 x [128 x float]], ptr addrspace(1) %arg1028, i64 0, i64 %14, i64 %13
  %31 = getelementptr inbounds float, ptr addrspace(1) %30, i64 12288
  %32 = load float, ptr addrspace(1) %31, align 4, !invariant.load !195
  %multiply.55 = fmul float %8, %32
  %subtract.56 = fsub float %29, %multiply.55
  %33 = getelementptr inbounds float, ptr addrspace(1) %arg1130, i64 %5
  %34 = load float, ptr addrspace(1) %33, align 4, !invariant.load !195
  %35 = getelementptr [352 x [128 x float]], ptr addrspace(1) %arg1232, i64 0, i64 %14, i64 %13
  %36 = getelementptr inbounds float, ptr addrspace(1) %35, i64 12288
  %37 = load float, ptr addrspace(1) %36, align 4, !invariant.load !195
  %multiply.58 = fmul float %8, %37
  %subtract.59 = fsub float %34, %multiply.58
  %38 = getelementptr inbounds float, ptr addrspace(1) %arg1334, i64 %5
  %39 = load float, ptr addrspace(1) %38, align 4, !invariant.load !195
  %40 = getelementptr [448 x [128 x float]], ptr addrspace(1) %arg1436, i64 0, i64 %14, i64 %13
  %41 = getelementptr inbounds float, ptr addrspace(1) %40, i64 24576
  %42 = load float, ptr addrspace(1) %41, align 4, !invariant.load !195
  %multiply.61 = fmul float %8, %42
  %subtract.62 = fsub float %39, %multiply.61
  %43 = getelementptr inbounds float, ptr addrspace(1) %arg1538, i64 %5
  %44 = load float, ptr addrspace(1) %43, align 4, !invariant.load !195
  %45 = getelementptr [448 x [128 x float]], ptr addrspace(1) %arg1640, i64 0, i64 %14, i64 %13
  %46 = getelementptr inbounds float, ptr addrspace(1) %45, i64 24576
  %47 = load float, ptr addrspace(1) %46, align 4, !invariant.load !195
  %multiply.64 = fmul float %8, %47
  %subtract.65 = fsub float %44, %multiply.64
  %48 = getelementptr inbounds float, ptr addrspace(1) %arg1742, i64 %5
  %49 = load float, ptr addrspace(1) %48, align 4, !invariant.load !195
  %50 = getelementptr inbounds float, ptr addrspace(1) %arg1844, i64 %5
  %51 = load float, ptr addrspace(1) %50, align 4, !invariant.load !195
  %multiply.66 = fmul float %8, %51
  %subtract.67 = fsub float %49, %multiply.66
  %52 = getelementptr inbounds float, ptr addrspace(1) %arg1946, i64 %5
  %53 = load float, ptr addrspace(1) %52, align 4, !invariant.load !195
  %54 = getelementptr inbounds float, ptr addrspace(1) %arg2048, i64 %5
  %55 = load float, ptr addrspace(1) %54, align 4, !invariant.load !195
  %multiply.68 = fmul float %8, %55
  %subtract.69 = fsub float %53, %multiply.68
  %56 = getelementptr inbounds float, ptr addrspace(1) %arg2150, i64 %5
  %57 = load float, ptr addrspace(1) %56, align 4, !invariant.load !195
  %58 = getelementptr inbounds float, ptr addrspace(1) %arg2252, i64 %5
  %59 = load float, ptr addrspace(1) %58, align 4
  %multiply.70 = fmul float %8, %59
  %subtract.71 = fsub float %57, %multiply.70
  %60 = getelementptr inbounds float, ptr addrspace(1) %arg2354, i64 %5
  %61 = load float, ptr addrspace(1) %60, align 4, !invariant.load !195
  %62 = getelementptr inbounds float, ptr addrspace(1) %arg2456, i64 %5
  %63 = load float, ptr addrspace(1) %62, align 4
  %multiply.72 = fmul float %8, %63
  %subtract.73 = fsub float %61, %multiply.72
  %64 = getelementptr inbounds float, ptr addrspace(1) %arg2558, i64 %5
  %65 = load float, ptr addrspace(1) %64, align 4, !invariant.load !195
  %66 = getelementptr inbounds float, ptr addrspace(1) %arg2660, i64 %5
  %67 = load float, ptr addrspace(1) %66, align 4
  %multiply.74 = fmul float %8, %67
  %subtract.75 = fsub float %65, %multiply.74
  %68 = getelementptr inbounds float, ptr addrspace(1) %arg2762, i64 %5
  %69 = load float, ptr addrspace(1) %68, align 4, !invariant.load !195
  %70 = getelementptr inbounds float, ptr addrspace(1) %arg2864, i64 %5
  %71 = load float, ptr addrspace(1) %70, align 4
  %multiply.76 = fmul float %8, %71
  %subtract.77 = fsub float %69, %multiply.76
  %72 = getelementptr inbounds float, ptr addrspace(1) %arg2966, i64 %5
  %73 = load float, ptr addrspace(1) %72, align 4, !invariant.load !195
  %74 = getelementptr inbounds float, ptr addrspace(1) %arg3068, i64 %5
  %75 = load float, ptr addrspace(1) %74, align 4
  %multiply.78 = fmul float %8, %75
  %subtract.79 = fsub float %73, %multiply.78
  %76 = getelementptr inbounds float, ptr addrspace(1) %arg3170, i64 %5
  %77 = load float, ptr addrspace(1) %76, align 4, !invariant.load !195
  %78 = getelementptr inbounds float, ptr addrspace(1) %arg3272, i64 %5
  %79 = load float, ptr addrspace(1) %78, align 4
  %multiply.80 = fmul float %8, %79
  %subtract.81 = fsub float %77, %multiply.80
  %80 = getelementptr inbounds float, ptr addrspace(1) %arg3374, i64 %5
  %81 = load float, ptr addrspace(1) %80, align 4, !invariant.load !195
  %82 = getelementptr inbounds float, ptr addrspace(1) %arg3476, i64 %5
  %83 = load float, ptr addrspace(1) %82, align 4
  %multiply.82 = fmul float %8, %83
  %subtract.83 = fsub float %81, %multiply.82
  %84 = getelementptr inbounds float, ptr addrspace(1) %arg3578, i64 %5
  %85 = load float, ptr addrspace(1) %84, align 4, !invariant.load !195
  %86 = getelementptr inbounds float, ptr addrspace(1) %arg3680, i64 %5
  %87 = load float, ptr addrspace(1) %86, align 4
  %multiply.84 = fmul float %8, %87
  %subtract.85 = fsub float %85, %multiply.84
  %88 = getelementptr inbounds float, ptr addrspace(1) %arg3782, i64 %5
  %89 = load float, ptr addrspace(1) %88, align 4, !invariant.load !195
  %90 = getelementptr inbounds float, ptr addrspace(1) %arg3884, i64 %5
  %91 = load float, ptr addrspace(1) %90, align 4
  %multiply.86 = fmul float %8, %91
  %subtract.87 = fsub float %89, %multiply.86
  %92 = getelementptr inbounds float, ptr addrspace(1) %arg3986, i64 %5
  %93 = load float, ptr addrspace(1) %92, align 4, !invariant.load !195
  %94 = getelementptr inbounds float, ptr addrspace(1) %arg4088, i64 %5
  %95 = load float, ptr addrspace(1) %94, align 4
  %multiply.88 = fmul float %8, %95
  %subtract.89 = fsub float %93, %multiply.88
  %96 = getelementptr inbounds float, ptr addrspace(1) %arg4190, i64 %5
  store float %subtract.44, ptr addrspace(1) %96, align 4
  %97 = getelementptr inbounds float, ptr addrspace(1) %arg4292, i64 %5
  store float %subtract.47, ptr addrspace(1) %97, align 4
  %98 = getelementptr inbounds float, ptr addrspace(1) %arg4394, i64 %5
  store float %subtract.50, ptr addrspace(1) %98, align 4
  %99 = getelementptr inbounds float, ptr addrspace(1) %arg4496, i64 %5
  store float %subtract.53, ptr addrspace(1) %99, align 4
  %100 = getelementptr inbounds float, ptr addrspace(1) %arg4598, i64 %5
  store float %subtract.56, ptr addrspace(1) %100, align 4
  %101 = getelementptr inbounds float, ptr addrspace(1) %arg46100, i64 %5
  store float %subtract.59, ptr addrspace(1) %101, align 4
  %102 = getelementptr inbounds float, ptr addrspace(1) %arg47102, i64 %5
  store float %subtract.62, ptr addrspace(1) %102, align 4
  %103 = getelementptr inbounds float, ptr addrspace(1) %arg48104, i64 %5
  store float %subtract.65, ptr addrspace(1) %103, align 4
  %104 = getelementptr inbounds float, ptr addrspace(1) %arg49106, i64 %5
  store float %subtract.67, ptr addrspace(1) %104, align 4
  %105 = getelementptr inbounds float, ptr addrspace(1) %arg50108, i64 %5
  store float %subtract.69, ptr addrspace(1) %105, align 4
  store float %subtract.71, ptr addrspace(1) %94, align 4
  store float %subtract.73, ptr addrspace(1) %90, align 4
  store float %subtract.75, ptr addrspace(1) %86, align 4
  store float %subtract.77, ptr addrspace(1) %82, align 4
  store float %subtract.79, ptr addrspace(1) %78, align 4
  store float %subtract.81, ptr addrspace(1) %74, align 4
  store float %subtract.83, ptr addrspace(1) %70, align 4
  store float %subtract.85, ptr addrspace(1) %66, align 4
  store float %subtract.87, ptr addrspace(1) %62, align 4
  store float %subtract.89, ptr addrspace(1) %58, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @concatenate_299(ptr noalias nocapture readonly align 16 dereferenceable(2097152) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(4194304) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(8388608) %arg3, ptr noalias nocapture writeonly align 128 dereferenceable(14942208) %arg4) local_unnamed_addr #5 {
entry:
  %arg464 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg362 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg260 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg158 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg056 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !233
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !200
  %2 = shl nuw nsw i32 %0, 10
  %3 = shl nuw nsw i32 %1, 2
  %linear_index_base = or i32 %2, %3
  %linear_index_base.frozen = freeze i32 %linear_index_base
  %4 = udiv i32 %linear_index_base.frozen, 456
  %5 = mul i32 %4, 456
  %.decomposed = sub i32 %linear_index_base.frozen, %5
  %linear_index1 = or i32 %linear_index_base, 1
  %6 = urem i32 %linear_index1, 456
  %linear_index2 = or i32 %linear_index_base, 2
  %7 = urem i32 %linear_index2, 456
  %linear_index3 = or i32 %linear_index_base, 3
  %8 = urem i32 %linear_index3, 456
  %9 = icmp ult i32 %.decomposed, 192
  br i1 %9, label %concatenate.pivot.64., label %concatenate.pivot.200.

concatenate.pivot.64.:                            ; preds = %entry
  %10 = icmp ult i32 %.decomposed, 64
  br i1 %10, label %concatenate.pivot.0., label %concatenate.pivot.64.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.64.
  %11 = udiv i32 %linear_index_base, 456
  %12 = shl nuw nsw i32 %11, 6
  %13 = add nuw nsw i32 %12, %.decomposed
  br label %concatenate.5.merge

concatenate.pivot.64.1:                           ; preds = %concatenate.pivot.64.
  %14 = add nsw i32 %.decomposed, -64
  %15 = udiv i32 %linear_index_base, 456
  %16 = shl nuw nsw i32 %15, 7
  %17 = add nuw nsw i32 %14, %16
  br label %concatenate.5.merge

concatenate.pivot.200.:                           ; preds = %entry
  %18 = icmp ult i32 %.decomposed, 200
  %19 = udiv i32 %linear_index_base, 456
  br i1 %18, label %concatenate.pivot.192.2, label %concatenate.pivot.200.3

concatenate.pivot.192.2:                          ; preds = %concatenate.pivot.200.
  %20 = add nsw i32 %.decomposed, -192
  %21 = shl nuw nsw i32 %19, 3
  %22 = add nuw nsw i32 %20, %21
  br label %concatenate.5.merge

concatenate.pivot.200.3:                          ; preds = %concatenate.pivot.200.
  %23 = add nsw i32 %.decomposed, -200
  %24 = shl nuw nsw i32 %19, 8
  %25 = add nuw nsw i32 %23, %24
  br label %concatenate.5.merge

concatenate.5.merge:                              ; preds = %concatenate.pivot.200.3, %concatenate.pivot.192.2, %concatenate.pivot.64.1, %concatenate.pivot.0.
  %.sink49 = phi i32 [ %25, %concatenate.pivot.200.3 ], [ %22, %concatenate.pivot.192.2 ], [ %17, %concatenate.pivot.64.1 ], [ %13, %concatenate.pivot.0. ]
  %arg3.sink = phi ptr addrspace(1) [ %arg362, %concatenate.pivot.200.3 ], [ %arg260, %concatenate.pivot.192.2 ], [ %arg158, %concatenate.pivot.64.1 ], [ %arg056, %concatenate.pivot.0. ]
  %26 = zext i32 %.sink49 to i64
  %27 = getelementptr inbounds float, ptr addrspace(1) %arg3.sink, i64 %26
  %28 = load float, ptr addrspace(1) %27, align 4, !invariant.load !195
  %29 = zext i32 %linear_index_base to i64
  %30 = getelementptr float, ptr addrspace(1) %arg464, i64 %29
  store float %28, ptr addrspace(1) %30, align 16
  %31 = icmp ult i32 %6, 192
  br i1 %31, label %concatenate.pivot.64.10, label %concatenate.pivot.200.13

concatenate.pivot.64.10:                          ; preds = %concatenate.5.merge
  %32 = icmp ult i32 %6, 64
  br i1 %32, label %concatenate.pivot.0.11, label %concatenate.pivot.64.12

concatenate.pivot.0.11:                           ; preds = %concatenate.pivot.64.10
  %33 = udiv i32 %linear_index_base, 456
  %34 = shl nuw nsw i32 %33, 6
  %35 = add nuw nsw i32 %34, %6
  br label %concatenate.5.merge4

concatenate.pivot.64.12:                          ; preds = %concatenate.pivot.64.10
  %36 = add nsw i32 %6, -64
  %37 = udiv i32 %linear_index_base, 456
  %38 = shl nuw nsw i32 %37, 7
  %39 = add nuw nsw i32 %36, %38
  br label %concatenate.5.merge4

concatenate.pivot.200.13:                         ; preds = %concatenate.5.merge
  %40 = icmp ult i32 %6, 200
  %41 = udiv i32 %linear_index_base, 456
  br i1 %40, label %concatenate.pivot.192.14, label %concatenate.pivot.200.15

concatenate.pivot.192.14:                         ; preds = %concatenate.pivot.200.13
  %42 = add nsw i32 %6, -192
  %43 = shl nuw nsw i32 %41, 3
  %44 = add nuw nsw i32 %42, %43
  br label %concatenate.5.merge4

concatenate.pivot.200.15:                         ; preds = %concatenate.pivot.200.13
  %45 = add nsw i32 %6, -200
  %46 = shl nuw nsw i32 %41, 8
  %47 = add nuw nsw i32 %45, %46
  br label %concatenate.5.merge4

concatenate.5.merge4:                             ; preds = %concatenate.pivot.200.15, %concatenate.pivot.192.14, %concatenate.pivot.64.12, %concatenate.pivot.0.11
  %.sink51 = phi i32 [ %47, %concatenate.pivot.200.15 ], [ %44, %concatenate.pivot.192.14 ], [ %39, %concatenate.pivot.64.12 ], [ %35, %concatenate.pivot.0.11 ]
  %arg3.sink50 = phi ptr addrspace(1) [ %arg362, %concatenate.pivot.200.15 ], [ %arg260, %concatenate.pivot.192.14 ], [ %arg158, %concatenate.pivot.64.12 ], [ %arg056, %concatenate.pivot.0.11 ]
  %48 = zext i32 %.sink51 to i64
  %49 = getelementptr inbounds float, ptr addrspace(1) %arg3.sink50, i64 %48
  %50 = load float, ptr addrspace(1) %49, align 4, !invariant.load !195
  %51 = getelementptr inbounds float, ptr addrspace(1) %30, i64 1
  store float %50, ptr addrspace(1) %51, align 4
  %52 = icmp ult i32 %7, 192
  br i1 %52, label %concatenate.pivot.64.22, label %concatenate.pivot.200.25

concatenate.pivot.64.22:                          ; preds = %concatenate.5.merge4
  %53 = icmp ult i32 %7, 64
  br i1 %53, label %concatenate.pivot.0.23, label %concatenate.pivot.64.24

concatenate.pivot.0.23:                           ; preds = %concatenate.pivot.64.22
  %54 = udiv i32 %linear_index_base, 456
  %55 = shl nuw nsw i32 %54, 6
  %56 = add nuw nsw i32 %55, %7
  br label %concatenate.5.merge16

concatenate.pivot.64.24:                          ; preds = %concatenate.pivot.64.22
  %57 = add nsw i32 %7, -64
  %58 = udiv i32 %linear_index_base, 456
  %59 = shl nuw nsw i32 %58, 7
  %60 = add nuw nsw i32 %57, %59
  br label %concatenate.5.merge16

concatenate.pivot.200.25:                         ; preds = %concatenate.5.merge4
  %61 = icmp ult i32 %7, 200
  %62 = udiv i32 %linear_index_base, 456
  br i1 %61, label %concatenate.pivot.192.26, label %concatenate.pivot.200.27

concatenate.pivot.192.26:                         ; preds = %concatenate.pivot.200.25
  %63 = add nsw i32 %7, -192
  %64 = shl nuw nsw i32 %62, 3
  %65 = add nuw nsw i32 %63, %64
  br label %concatenate.5.merge16

concatenate.pivot.200.27:                         ; preds = %concatenate.pivot.200.25
  %66 = add nsw i32 %7, -200
  %67 = shl nuw nsw i32 %62, 8
  %68 = add nuw nsw i32 %66, %67
  br label %concatenate.5.merge16

concatenate.5.merge16:                            ; preds = %concatenate.pivot.200.27, %concatenate.pivot.192.26, %concatenate.pivot.64.24, %concatenate.pivot.0.23
  %.sink53 = phi i32 [ %68, %concatenate.pivot.200.27 ], [ %65, %concatenate.pivot.192.26 ], [ %60, %concatenate.pivot.64.24 ], [ %56, %concatenate.pivot.0.23 ]
  %arg3.sink52 = phi ptr addrspace(1) [ %arg362, %concatenate.pivot.200.27 ], [ %arg260, %concatenate.pivot.192.26 ], [ %arg158, %concatenate.pivot.64.24 ], [ %arg056, %concatenate.pivot.0.23 ]
  %69 = zext i32 %.sink53 to i64
  %70 = getelementptr inbounds float, ptr addrspace(1) %arg3.sink52, i64 %69
  %71 = load float, ptr addrspace(1) %70, align 4, !invariant.load !195
  %72 = getelementptr inbounds float, ptr addrspace(1) %30, i64 2
  store float %71, ptr addrspace(1) %72, align 8
  %73 = icmp ult i32 %8, 192
  br i1 %73, label %concatenate.pivot.64.34, label %concatenate.pivot.200.37

concatenate.pivot.64.34:                          ; preds = %concatenate.5.merge16
  %74 = icmp ult i32 %8, 64
  br i1 %74, label %concatenate.pivot.0.35, label %concatenate.pivot.64.36

concatenate.pivot.0.35:                           ; preds = %concatenate.pivot.64.34
  %75 = udiv i32 %linear_index_base, 456
  %76 = shl nuw nsw i32 %75, 6
  %77 = add nuw nsw i32 %76, %8
  br label %concatenate.5.merge28

concatenate.pivot.64.36:                          ; preds = %concatenate.pivot.64.34
  %78 = add nsw i32 %8, -64
  %79 = udiv i32 %linear_index_base, 456
  %80 = shl nuw nsw i32 %79, 7
  %81 = add nuw nsw i32 %78, %80
  br label %concatenate.5.merge28

concatenate.pivot.200.37:                         ; preds = %concatenate.5.merge16
  %82 = icmp ult i32 %8, 200
  br i1 %82, label %concatenate.pivot.192.38, label %concatenate.pivot.200.39

concatenate.pivot.192.38:                         ; preds = %concatenate.pivot.200.37
  %83 = add nsw i32 %8, -192
  %84 = shl nuw nsw i32 %4, 3
  %85 = add nuw nsw i32 %83, %84
  br label %concatenate.5.merge28

concatenate.pivot.200.39:                         ; preds = %concatenate.pivot.200.37
  %86 = add nsw i32 %8, -200
  %87 = shl nuw nsw i32 %4, 8
  %88 = add nuw nsw i32 %86, %87
  br label %concatenate.5.merge28

concatenate.5.merge28:                            ; preds = %concatenate.pivot.200.39, %concatenate.pivot.192.38, %concatenate.pivot.64.36, %concatenate.pivot.0.35
  %.sink55 = phi i32 [ %88, %concatenate.pivot.200.39 ], [ %85, %concatenate.pivot.192.38 ], [ %81, %concatenate.pivot.64.36 ], [ %77, %concatenate.pivot.0.35 ]
  %arg3.sink54 = phi ptr addrspace(1) [ %arg362, %concatenate.pivot.200.39 ], [ %arg260, %concatenate.pivot.192.38 ], [ %arg158, %concatenate.pivot.64.36 ], [ %arg056, %concatenate.pivot.0.35 ]
  %89 = zext i32 %.sink55 to i64
  %90 = getelementptr inbounds float, ptr addrspace(1) %arg3.sink54, i64 %89
  %91 = load float, ptr addrspace(1) %90, align 4, !invariant.load !195
  %92 = getelementptr inbounds float, ptr addrspace(1) %30, i64 3
  store float %91, ptr addrspace(1) %92, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_109(ptr noalias nocapture readonly align 16 dereferenceable(8192) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(401408) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(8192) %arg3, ptr noalias nocapture readonly align 128 dereferenceable(368640) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(8192) %arg5, ptr noalias nocapture readonly align 128 dereferenceable(368640) %arg6, ptr noalias nocapture readonly align 16 dereferenceable(8192) %arg7, ptr noalias nocapture readonly align 128 dereferenceable(368640) %arg8, ptr noalias nocapture readonly align 16 dereferenceable(8192) %arg9, ptr noalias nocapture readonly align 128 dereferenceable(466944) %arg10, ptr noalias nocapture writeonly align 128 dereferenceable(8192) %arg11, ptr noalias nocapture writeonly align 128 dereferenceable(8192) %arg12, ptr noalias nocapture writeonly align 128 dereferenceable(8192) %arg13, ptr noalias nocapture writeonly align 128 dereferenceable(8192) %arg14, ptr noalias nocapture writeonly align 128 dereferenceable(8192) %arg15) local_unnamed_addr #6 {
entry:
  %arg1534 = addrspacecast ptr %arg15 to ptr addrspace(1)
  %arg1432 = addrspacecast ptr %arg14 to ptr addrspace(1)
  %arg1330 = addrspacecast ptr %arg13 to ptr addrspace(1)
  %arg1228 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg1126 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg1024 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg922 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg820 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg718 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg616 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg514 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg412 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg310 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg28 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg16 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg01 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !193
  %1 = shl nuw nsw i32 %0, 10
  %2 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %linear_index = or i32 %1, %2
  %3 = lshr i32 %linear_index, 8
  %4 = and i32 %2, 255
  %5 = zext i32 %linear_index to i64
  %6 = getelementptr inbounds float, ptr addrspace(1) %arg01, i64 %5
  %7 = load float, ptr addrspace(1) %6, align 4, !invariant.load !195
  %8 = load float, ptr addrspace(1) %arg28, align 16, !invariant.load !195
  %9 = zext i32 %4 to i64
  %10 = zext i32 %3 to i64
  %11 = getelementptr [392 x [256 x float]], ptr addrspace(1) %arg16, i64 0, i64 %10, i64 %9
  %12 = getelementptr inbounds float, ptr addrspace(1) %11, i64 98304
  %13 = load float, ptr addrspace(1) %12, align 4, !invariant.load !195
  %multiply.14 = fmul float %8, %13
  %subtract.15 = fsub float %7, %multiply.14
  %14 = getelementptr inbounds float, ptr addrspace(1) %arg310, i64 %5
  %15 = load float, ptr addrspace(1) %14, align 4, !invariant.load !195
  %16 = getelementptr [360 x [256 x float]], ptr addrspace(1) %arg412, i64 0, i64 %10, i64 %9
  %17 = getelementptr inbounds float, ptr addrspace(1) %16, i64 24576
  %18 = load float, ptr addrspace(1) %17, align 4, !invariant.load !195
  %multiply.17 = fmul float %8, %18
  %subtract.18 = fsub float %15, %multiply.17
  %19 = getelementptr inbounds float, ptr addrspace(1) %arg514, i64 %5
  %20 = load float, ptr addrspace(1) %19, align 4, !invariant.load !195
  %21 = getelementptr [360 x [256 x float]], ptr addrspace(1) %arg616, i64 0, i64 %10, i64 %9
  %22 = getelementptr inbounds float, ptr addrspace(1) %21, i64 24576
  %23 = load float, ptr addrspace(1) %22, align 4, !invariant.load !195
  %multiply.20 = fmul float %8, %23
  %subtract.21 = fsub float %20, %multiply.20
  %24 = getelementptr inbounds float, ptr addrspace(1) %arg718, i64 %5
  %25 = load float, ptr addrspace(1) %24, align 4, !invariant.load !195
  %26 = getelementptr [360 x [256 x float]], ptr addrspace(1) %arg820, i64 0, i64 %10, i64 %9
  %27 = getelementptr inbounds float, ptr addrspace(1) %26, i64 24576
  %28 = load float, ptr addrspace(1) %27, align 4, !invariant.load !195
  %multiply.23 = fmul float %8, %28
  %subtract.24 = fsub float %25, %multiply.23
  %29 = getelementptr inbounds float, ptr addrspace(1) %arg922, i64 %5
  %30 = load float, ptr addrspace(1) %29, align 4, !invariant.load !195
  %31 = getelementptr [456 x [256 x float]], ptr addrspace(1) %arg1024, i64 0, i64 %10, i64 %9
  %32 = getelementptr inbounds float, ptr addrspace(1) %31, i64 49152
  %33 = load float, ptr addrspace(1) %32, align 4, !invariant.load !195
  %multiply.26 = fmul float %8, %33
  %subtract.27 = fsub float %30, %multiply.26
  %34 = getelementptr inbounds float, ptr addrspace(1) %arg1126, i64 %5
  store float %subtract.15, ptr addrspace(1) %34, align 4
  %35 = getelementptr inbounds float, ptr addrspace(1) %arg1228, i64 %5
  store float %subtract.18, ptr addrspace(1) %35, align 4
  %36 = getelementptr inbounds float, ptr addrspace(1) %arg1330, i64 %5
  store float %subtract.21, ptr addrspace(1) %36, align 4
  %37 = getelementptr inbounds float, ptr addrspace(1) %arg1432, i64 %5
  store float %subtract.24, ptr addrspace(1) %37, align 4
  %38 = getelementptr inbounds float, ptr addrspace(1) %arg1534, i64 %5
  store float %subtract.27, ptr addrspace(1) %38, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_115(ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(401408) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg3, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg4, ptr noalias nocapture readonly align 128 dereferenceable(458752) %arg5, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg6, ptr noalias nocapture readonly align 128 dereferenceable(458752) %arg7, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg8, ptr noalias nocapture readonly align 128 dereferenceable(466944) %arg9, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg10, ptr noalias nocapture readonly align 128 dereferenceable(458752) %arg11, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg12, ptr noalias nocapture readonly align 128 dereferenceable(458752) %arg13, ptr noalias nocapture readonly align 16 dereferenceable(131072) %arg14, ptr noalias nocapture readonly align 128 dereferenceable(458752) %arg15, ptr noalias nocapture writeonly align 128 dereferenceable(131072) %arg16, ptr noalias nocapture writeonly align 128 dereferenceable(131072) %arg17, ptr noalias nocapture writeonly align 128 dereferenceable(131072) %arg18, ptr noalias nocapture writeonly align 128 dereferenceable(131072) %arg19, ptr noalias nocapture writeonly align 128 dereferenceable(131072) %arg20, ptr noalias nocapture writeonly align 128 dereferenceable(131072) %arg21, ptr noalias nocapture writeonly align 128 dereferenceable(131072) %arg22, ptr noalias nocapture writeonly align 128 dereferenceable(131072) %arg23) local_unnamed_addr #6 {
entry:
  %arg2354 = addrspacecast ptr %arg23 to ptr addrspace(1)
  %arg2252 = addrspacecast ptr %arg22 to ptr addrspace(1)
  %arg2150 = addrspacecast ptr %arg21 to ptr addrspace(1)
  %arg2048 = addrspacecast ptr %arg20 to ptr addrspace(1)
  %arg1946 = addrspacecast ptr %arg19 to ptr addrspace(1)
  %arg1844 = addrspacecast ptr %arg18 to ptr addrspace(1)
  %arg1742 = addrspacecast ptr %arg17 to ptr addrspace(1)
  %arg1640 = addrspacecast ptr %arg16 to ptr addrspace(1)
  %arg1538 = addrspacecast ptr %arg15 to ptr addrspace(1)
  %arg1436 = addrspacecast ptr %arg14 to ptr addrspace(1)
  %arg1334 = addrspacecast ptr %arg13 to ptr addrspace(1)
  %arg1232 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg1130 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg1028 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg926 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg824 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg722 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg620 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg518 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg416 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg314 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg212 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg110 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg01 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !232
  %1 = shl nuw nsw i32 %0, 10
  %2 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %linear_index = or i32 %1, %2
  %3 = lshr i32 %linear_index, 8
  %4 = and i32 %2, 255
  %5 = zext i32 %linear_index to i64
  %6 = getelementptr inbounds float, ptr addrspace(1) %arg01, i64 %5
  %7 = load float, ptr addrspace(1) %6, align 4, !invariant.load !195
  %8 = load float, ptr addrspace(1) %arg212, align 16, !invariant.load !195
  %9 = zext i32 %4 to i64
  %10 = zext i32 %3 to i64
  %11 = getelementptr [392 x [256 x float]], ptr addrspace(1) %arg110, i64 0, i64 %10, i64 %9
  %12 = getelementptr inbounds float, ptr addrspace(1) %11, i64 16384
  %13 = load float, ptr addrspace(1) %12, align 4, !invariant.load !195
  %multiply.19 = fmul float %8, %13
  %subtract.20 = fsub float %7, %multiply.19
  %14 = getelementptr inbounds float, ptr addrspace(1) %arg314, i64 %5
  %15 = load float, ptr addrspace(1) %14, align 4, !invariant.load !195
  %16 = getelementptr inbounds float, ptr addrspace(1) %11, i64 49152
  %17 = load float, ptr addrspace(1) %16, align 4, !invariant.load !195
  %multiply.22 = fmul float %8, %17
  %subtract.23 = fsub float %15, %multiply.22
  %18 = getelementptr inbounds float, ptr addrspace(1) %arg416, i64 %5
  %19 = load float, ptr addrspace(1) %18, align 4, !invariant.load !195
  %20 = getelementptr [448 x [256 x float]], ptr addrspace(1) %arg518, i64 0, i64 %10, i64 %9
  %21 = getelementptr inbounds float, ptr addrspace(1) %20, i64 16384
  %22 = load float, ptr addrspace(1) %21, align 4, !invariant.load !195
  %multiply.25 = fmul float %8, %22
  %subtract.26 = fsub float %19, %multiply.25
  %23 = getelementptr inbounds float, ptr addrspace(1) %arg620, i64 %5
  %24 = load float, ptr addrspace(1) %23, align 4, !invariant.load !195
  %25 = getelementptr [448 x [256 x float]], ptr addrspace(1) %arg722, i64 0, i64 %10, i64 %9
  %26 = getelementptr inbounds float, ptr addrspace(1) %25, i64 16384
  %27 = load float, ptr addrspace(1) %26, align 4, !invariant.load !195
  %multiply.28 = fmul float %8, %27
  %subtract.29 = fsub float %24, %multiply.28
  %28 = getelementptr inbounds float, ptr addrspace(1) %arg824, i64 %5
  %29 = load float, ptr addrspace(1) %28, align 4, !invariant.load !195
  %30 = getelementptr [456 x [256 x float]], ptr addrspace(1) %arg926, i64 0, i64 %10, i64 %9
  %31 = getelementptr inbounds float, ptr addrspace(1) %30, i64 16384
  %32 = load float, ptr addrspace(1) %31, align 4, !invariant.load !195
  %multiply.31 = fmul float %8, %32
  %subtract.32 = fsub float %29, %multiply.31
  %33 = getelementptr inbounds float, ptr addrspace(1) %arg1028, i64 %5
  %34 = load float, ptr addrspace(1) %33, align 4, !invariant.load !195
  %35 = getelementptr [448 x [256 x float]], ptr addrspace(1) %arg1130, i64 0, i64 %10, i64 %9
  %36 = getelementptr inbounds float, ptr addrspace(1) %35, i64 16384
  %37 = load float, ptr addrspace(1) %36, align 4, !invariant.load !195
  %multiply.34 = fmul float %8, %37
  %subtract.35 = fsub float %34, %multiply.34
  %38 = getelementptr inbounds float, ptr addrspace(1) %arg1232, i64 %5
  %39 = load float, ptr addrspace(1) %38, align 4, !invariant.load !195
  %40 = getelementptr [448 x [256 x float]], ptr addrspace(1) %arg1334, i64 0, i64 %10, i64 %9
  %41 = getelementptr inbounds float, ptr addrspace(1) %40, i64 16384
  %42 = load float, ptr addrspace(1) %41, align 4, !invariant.load !195
  %multiply.37 = fmul float %8, %42
  %subtract.38 = fsub float %39, %multiply.37
  %43 = getelementptr inbounds float, ptr addrspace(1) %arg1436, i64 %5
  %44 = load float, ptr addrspace(1) %43, align 4, !invariant.load !195
  %45 = getelementptr [448 x [256 x float]], ptr addrspace(1) %arg1538, i64 0, i64 %10, i64 %9
  %46 = getelementptr inbounds float, ptr addrspace(1) %45, i64 16384
  %47 = load float, ptr addrspace(1) %46, align 4, !invariant.load !195
  %multiply.40 = fmul float %8, %47
  %subtract.41 = fsub float %44, %multiply.40
  %48 = getelementptr inbounds float, ptr addrspace(1) %arg1640, i64 %5
  store float %subtract.20, ptr addrspace(1) %48, align 4
  %49 = getelementptr inbounds float, ptr addrspace(1) %arg1742, i64 %5
  store float %subtract.23, ptr addrspace(1) %49, align 4
  %50 = getelementptr inbounds float, ptr addrspace(1) %arg1844, i64 %5
  store float %subtract.26, ptr addrspace(1) %50, align 4
  %51 = getelementptr inbounds float, ptr addrspace(1) %arg1946, i64 %5
  store float %subtract.29, ptr addrspace(1) %51, align 4
  %52 = getelementptr inbounds float, ptr addrspace(1) %arg2048, i64 %5
  store float %subtract.32, ptr addrspace(1) %52, align 4
  %53 = getelementptr inbounds float, ptr addrspace(1) %arg2150, i64 %5
  store float %subtract.35, ptr addrspace(1) %53, align 4
  %54 = getelementptr inbounds float, ptr addrspace(1) %arg2252, i64 %5
  store float %subtract.38, ptr addrspace(1) %54, align 4
  %55 = getelementptr inbounds float, ptr addrspace(1) %arg2354, i64 %5
  store float %subtract.41, ptr addrspace(1) %55, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_116(ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(401408) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg3, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg4, ptr noalias nocapture readonly align 128 dereferenceable(360448) %arg5, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg6, ptr noalias nocapture readonly align 128 dereferenceable(360448) %arg7, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg8, ptr noalias nocapture readonly align 128 dereferenceable(368640) %arg9, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg10, ptr noalias nocapture readonly align 128 dereferenceable(458752) %arg11, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg12, ptr noalias nocapture readonly align 128 dereferenceable(368640) %arg13, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg14, ptr noalias nocapture readonly align 128 dereferenceable(368640) %arg15, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg16, ptr noalias nocapture readonly align 128 dereferenceable(466944) %arg17, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg18, ptr noalias nocapture readonly align 128 dereferenceable(360448) %arg19, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg20, ptr noalias nocapture readonly align 128 dereferenceable(458752) %arg21, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg22, ptr noalias nocapture readonly align 128 dereferenceable(360448) %arg23, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg24, ptr noalias nocapture readonly align 128 dereferenceable(360448) %arg25, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg26, ptr noalias nocapture readonly align 128 dereferenceable(458752) %arg27, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg28, ptr noalias nocapture readonly align 128 dereferenceable(458752) %arg29, ptr noalias nocapture readonly align 16 dereferenceable(65536) %arg30, ptr noalias nocapture readonly align 128 dereferenceable(458752) %arg31, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg32, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg33, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg34, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg35, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg36, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg37, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg38, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg39, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg40, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg41, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg42, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg43, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg44, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg45, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg46, ptr noalias nocapture writeonly align 128 dereferenceable(65536) %arg47) local_unnamed_addr #6 {
entry:
  %arg47102 = addrspacecast ptr %arg47 to ptr addrspace(1)
  %arg46100 = addrspacecast ptr %arg46 to ptr addrspace(1)
  %arg4598 = addrspacecast ptr %arg45 to ptr addrspace(1)
  %arg4496 = addrspacecast ptr %arg44 to ptr addrspace(1)
  %arg4394 = addrspacecast ptr %arg43 to ptr addrspace(1)
  %arg4292 = addrspacecast ptr %arg42 to ptr addrspace(1)
  %arg4190 = addrspacecast ptr %arg41 to ptr addrspace(1)
  %arg4088 = addrspacecast ptr %arg40 to ptr addrspace(1)
  %arg3986 = addrspacecast ptr %arg39 to ptr addrspace(1)
  %arg3884 = addrspacecast ptr %arg38 to ptr addrspace(1)
  %arg3782 = addrspacecast ptr %arg37 to ptr addrspace(1)
  %arg3680 = addrspacecast ptr %arg36 to ptr addrspace(1)
  %arg3578 = addrspacecast ptr %arg35 to ptr addrspace(1)
  %arg3476 = addrspacecast ptr %arg34 to ptr addrspace(1)
  %arg3374 = addrspacecast ptr %arg33 to ptr addrspace(1)
  %arg3272 = addrspacecast ptr %arg32 to ptr addrspace(1)
  %arg3170 = addrspacecast ptr %arg31 to ptr addrspace(1)
  %arg3068 = addrspacecast ptr %arg30 to ptr addrspace(1)
  %arg2966 = addrspacecast ptr %arg29 to ptr addrspace(1)
  %arg2864 = addrspacecast ptr %arg28 to ptr addrspace(1)
  %arg2762 = addrspacecast ptr %arg27 to ptr addrspace(1)
  %arg2660 = addrspacecast ptr %arg26 to ptr addrspace(1)
  %arg2558 = addrspacecast ptr %arg25 to ptr addrspace(1)
  %arg2456 = addrspacecast ptr %arg24 to ptr addrspace(1)
  %arg2354 = addrspacecast ptr %arg23 to ptr addrspace(1)
  %arg2252 = addrspacecast ptr %arg22 to ptr addrspace(1)
  %arg2150 = addrspacecast ptr %arg21 to ptr addrspace(1)
  %arg2048 = addrspacecast ptr %arg20 to ptr addrspace(1)
  %arg1946 = addrspacecast ptr %arg19 to ptr addrspace(1)
  %arg1844 = addrspacecast ptr %arg18 to ptr addrspace(1)
  %arg1742 = addrspacecast ptr %arg17 to ptr addrspace(1)
  %arg1640 = addrspacecast ptr %arg16 to ptr addrspace(1)
  %arg1538 = addrspacecast ptr %arg15 to ptr addrspace(1)
  %arg1436 = addrspacecast ptr %arg14 to ptr addrspace(1)
  %arg1334 = addrspacecast ptr %arg13 to ptr addrspace(1)
  %arg1232 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg1130 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg1028 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg926 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg824 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg722 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg620 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg518 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg416 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg314 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg212 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg110 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg01 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !215
  %1 = shl nuw nsw i32 %0, 10
  %2 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %linear_index = or i32 %1, %2
  %3 = lshr i32 %linear_index, 8
  %4 = and i32 %2, 255
  %5 = zext i32 %linear_index to i64
  %6 = getelementptr inbounds float, ptr addrspace(1) %arg01, i64 %5
  %7 = load float, ptr addrspace(1) %6, align 4, !invariant.load !195
  %8 = load float, ptr addrspace(1) %arg212, align 16, !invariant.load !195
  %9 = zext i32 %3 to i64
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds [392 x [256 x float]], ptr addrspace(1) %arg110, i64 0, i64 %9, i64 %10
  %12 = load float, ptr addrspace(1) %11, align 4, !invariant.load !195
  %multiply.35 = fmul float %8, %12
  %subtract.36 = fsub float %7, %multiply.35
  %13 = getelementptr inbounds float, ptr addrspace(1) %arg314, i64 %5
  %14 = load float, ptr addrspace(1) %13, align 4, !invariant.load !195
  %15 = getelementptr inbounds float, ptr addrspace(1) %11, i64 81920
  %16 = load float, ptr addrspace(1) %15, align 4, !invariant.load !195
  %multiply.38 = fmul float %8, %16
  %subtract.39 = fsub float %14, %multiply.38
  %17 = getelementptr inbounds float, ptr addrspace(1) %arg416, i64 %5
  %18 = load float, ptr addrspace(1) %17, align 4, !invariant.load !195
  %19 = getelementptr [352 x [256 x float]], ptr addrspace(1) %arg518, i64 0, i64 %9, i64 %10
  %20 = getelementptr inbounds float, ptr addrspace(1) %19, i64 8192
  %21 = load float, ptr addrspace(1) %20, align 4, !invariant.load !195
  %multiply.41 = fmul float %8, %21
  %subtract.42 = fsub float %18, %multiply.41
  %22 = getelementptr inbounds float, ptr addrspace(1) %arg620, i64 %5
  %23 = load float, ptr addrspace(1) %22, align 4, !invariant.load !195
  %24 = getelementptr [352 x [256 x float]], ptr addrspace(1) %arg722, i64 0, i64 %9, i64 %10
  %25 = getelementptr inbounds float, ptr addrspace(1) %24, i64 8192
  %26 = load float, ptr addrspace(1) %25, align 4, !invariant.load !195
  %multiply.44 = fmul float %8, %26
  %subtract.45 = fsub float %23, %multiply.44
  %27 = getelementptr inbounds float, ptr addrspace(1) %arg824, i64 %5
  %28 = load float, ptr addrspace(1) %27, align 4, !invariant.load !195
  %29 = getelementptr [360 x [256 x float]], ptr addrspace(1) %arg926, i64 0, i64 %9, i64 %10
  %30 = getelementptr inbounds float, ptr addrspace(1) %29, i64 8192
  %31 = load float, ptr addrspace(1) %30, align 4, !invariant.load !195
  %multiply.47 = fmul float %8, %31
  %subtract.48 = fsub float %28, %multiply.47
  %32 = getelementptr inbounds float, ptr addrspace(1) %arg1028, i64 %5
  %33 = load float, ptr addrspace(1) %32, align 4, !invariant.load !195
  %34 = getelementptr inbounds [448 x [256 x float]], ptr addrspace(1) %arg1130, i64 0, i64 %9, i64 %10
  %35 = load float, ptr addrspace(1) %34, align 4, !invariant.load !195
  %multiply.50 = fmul float %8, %35
  %subtract.51 = fsub float %33, %multiply.50
  %36 = getelementptr inbounds float, ptr addrspace(1) %arg1232, i64 %5
  %37 = load float, ptr addrspace(1) %36, align 4, !invariant.load !195
  %38 = getelementptr [360 x [256 x float]], ptr addrspace(1) %arg1334, i64 0, i64 %9, i64 %10
  %39 = getelementptr inbounds float, ptr addrspace(1) %38, i64 8192
  %40 = load float, ptr addrspace(1) %39, align 4, !invariant.load !195
  %multiply.53 = fmul float %8, %40
  %subtract.54 = fsub float %37, %multiply.53
  %41 = getelementptr inbounds float, ptr addrspace(1) %arg1436, i64 %5
  %42 = load float, ptr addrspace(1) %41, align 4, !invariant.load !195
  %43 = getelementptr [360 x [256 x float]], ptr addrspace(1) %arg1538, i64 0, i64 %9, i64 %10
  %44 = getelementptr inbounds float, ptr addrspace(1) %43, i64 8192
  %45 = load float, ptr addrspace(1) %44, align 4, !invariant.load !195
  %multiply.56 = fmul float %8, %45
  %subtract.57 = fsub float %42, %multiply.56
  %46 = getelementptr inbounds float, ptr addrspace(1) %arg1640, i64 %5
  %47 = load float, ptr addrspace(1) %46, align 4, !invariant.load !195
  %48 = getelementptr inbounds [456 x [256 x float]], ptr addrspace(1) %arg1742, i64 0, i64 %9, i64 %10
  %49 = load float, ptr addrspace(1) %48, align 4, !invariant.load !195
  %multiply.59 = fmul float %8, %49
  %subtract.60 = fsub float %47, %multiply.59
  %50 = getelementptr inbounds float, ptr addrspace(1) %arg1844, i64 %5
  %51 = load float, ptr addrspace(1) %50, align 4, !invariant.load !195
  %52 = getelementptr [352 x [256 x float]], ptr addrspace(1) %arg1946, i64 0, i64 %9, i64 %10
  %53 = getelementptr inbounds float, ptr addrspace(1) %52, i64 8192
  %54 = load float, ptr addrspace(1) %53, align 4, !invariant.load !195
  %multiply.62 = fmul float %8, %54
  %subtract.63 = fsub float %51, %multiply.62
  %55 = getelementptr inbounds float, ptr addrspace(1) %arg2048, i64 %5
  %56 = load float, ptr addrspace(1) %55, align 4, !invariant.load !195
  %57 = getelementptr inbounds [448 x [256 x float]], ptr addrspace(1) %arg2150, i64 0, i64 %9, i64 %10
  %58 = load float, ptr addrspace(1) %57, align 4, !invariant.load !195
  %multiply.65 = fmul float %8, %58
  %subtract.66 = fsub float %56, %multiply.65
  %59 = getelementptr inbounds float, ptr addrspace(1) %arg2252, i64 %5
  %60 = load float, ptr addrspace(1) %59, align 4, !invariant.load !195
  %61 = getelementptr [352 x [256 x float]], ptr addrspace(1) %arg2354, i64 0, i64 %9, i64 %10
  %62 = getelementptr inbounds float, ptr addrspace(1) %61, i64 8192
  %63 = load float, ptr addrspace(1) %62, align 4, !invariant.load !195
  %multiply.68 = fmul float %8, %63
  %subtract.69 = fsub float %60, %multiply.68
  %64 = getelementptr inbounds float, ptr addrspace(1) %arg2456, i64 %5
  %65 = load float, ptr addrspace(1) %64, align 4, !invariant.load !195
  %66 = getelementptr [352 x [256 x float]], ptr addrspace(1) %arg2558, i64 0, i64 %9, i64 %10
  %67 = getelementptr inbounds float, ptr addrspace(1) %66, i64 8192
  %68 = load float, ptr addrspace(1) %67, align 4, !invariant.load !195
  %multiply.71 = fmul float %8, %68
  %subtract.72 = fsub float %65, %multiply.71
  %69 = getelementptr inbounds float, ptr addrspace(1) %arg2660, i64 %5
  %70 = load float, ptr addrspace(1) %69, align 4, !invariant.load !195
  %71 = getelementptr inbounds [448 x [256 x float]], ptr addrspace(1) %arg2762, i64 0, i64 %9, i64 %10
  %72 = load float, ptr addrspace(1) %71, align 4, !invariant.load !195
  %multiply.74 = fmul float %8, %72
  %subtract.75 = fsub float %70, %multiply.74
  %73 = getelementptr inbounds float, ptr addrspace(1) %arg2864, i64 %5
  %74 = load float, ptr addrspace(1) %73, align 4, !invariant.load !195
  %75 = getelementptr inbounds [448 x [256 x float]], ptr addrspace(1) %arg2966, i64 0, i64 %9, i64 %10
  %76 = load float, ptr addrspace(1) %75, align 4, !invariant.load !195
  %multiply.77 = fmul float %8, %76
  %subtract.78 = fsub float %74, %multiply.77
  %77 = getelementptr inbounds float, ptr addrspace(1) %arg3068, i64 %5
  %78 = load float, ptr addrspace(1) %77, align 4, !invariant.load !195
  %79 = getelementptr inbounds [448 x [256 x float]], ptr addrspace(1) %arg3170, i64 0, i64 %9, i64 %10
  %80 = load float, ptr addrspace(1) %79, align 4, !invariant.load !195
  %multiply.80 = fmul float %8, %80
  %subtract.81 = fsub float %78, %multiply.80
  %81 = getelementptr inbounds float, ptr addrspace(1) %arg3272, i64 %5
  store float %subtract.36, ptr addrspace(1) %81, align 4
  %82 = getelementptr inbounds float, ptr addrspace(1) %arg3374, i64 %5
  store float %subtract.39, ptr addrspace(1) %82, align 4
  %83 = getelementptr inbounds float, ptr addrspace(1) %arg3476, i64 %5
  store float %subtract.42, ptr addrspace(1) %83, align 4
  %84 = getelementptr inbounds float, ptr addrspace(1) %arg3578, i64 %5
  store float %subtract.45, ptr addrspace(1) %84, align 4
  %85 = getelementptr inbounds float, ptr addrspace(1) %arg3680, i64 %5
  store float %subtract.48, ptr addrspace(1) %85, align 4
  %86 = getelementptr inbounds float, ptr addrspace(1) %arg3782, i64 %5
  store float %subtract.51, ptr addrspace(1) %86, align 4
  %87 = getelementptr inbounds float, ptr addrspace(1) %arg3884, i64 %5
  store float %subtract.54, ptr addrspace(1) %87, align 4
  %88 = getelementptr inbounds float, ptr addrspace(1) %arg3986, i64 %5
  store float %subtract.57, ptr addrspace(1) %88, align 4
  %89 = getelementptr inbounds float, ptr addrspace(1) %arg4088, i64 %5
  store float %subtract.60, ptr addrspace(1) %89, align 4
  %90 = getelementptr inbounds float, ptr addrspace(1) %arg4190, i64 %5
  store float %subtract.63, ptr addrspace(1) %90, align 4
  %91 = getelementptr inbounds float, ptr addrspace(1) %arg4292, i64 %5
  store float %subtract.66, ptr addrspace(1) %91, align 4
  %92 = getelementptr inbounds float, ptr addrspace(1) %arg4394, i64 %5
  store float %subtract.69, ptr addrspace(1) %92, align 4
  %93 = getelementptr inbounds float, ptr addrspace(1) %arg4496, i64 %5
  store float %subtract.72, ptr addrspace(1) %93, align 4
  %94 = getelementptr inbounds float, ptr addrspace(1) %arg4598, i64 %5
  store float %subtract.75, ptr addrspace(1) %94, align 4
  %95 = getelementptr inbounds float, ptr addrspace(1) %arg46100, i64 %5
  store float %subtract.78, ptr addrspace(1) %95, align 4
  %96 = getelementptr inbounds float, ptr addrspace(1) %arg47102, i64 %5
  store float %subtract.81, ptr addrspace(1) %96, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_361(ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(360448) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg3, ptr noalias nocapture readonly align 128 dereferenceable(360448) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg5, ptr noalias nocapture readonly align 128 dereferenceable(368640) %arg6, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg7, ptr noalias nocapture readonly align 128 dereferenceable(458752) %arg8, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg9, ptr noalias nocapture readonly align 128 dereferenceable(368640) %arg10, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg11, ptr noalias nocapture readonly align 128 dereferenceable(368640) %arg12, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg13, ptr noalias nocapture readonly align 128 dereferenceable(466944) %arg14, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg15, ptr noalias nocapture readonly align 128 dereferenceable(262144) %arg16, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg17, ptr noalias nocapture readonly align 128 dereferenceable(360448) %arg18, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg19, ptr noalias nocapture readonly align 128 dereferenceable(311296) %arg20, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg21, ptr noalias nocapture readonly align 128 dereferenceable(311296) %arg22, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg23, ptr noalias nocapture readonly align 128 dereferenceable(458752) %arg24, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg25, ptr noalias nocapture readonly align 128 dereferenceable(311296) %arg26, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg27, ptr noalias nocapture readonly align 128 dereferenceable(360448) %arg28, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg29, ptr noalias nocapture readonly align 128 dereferenceable(311296) %arg30, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg31, ptr noalias nocapture readonly align 128 dereferenceable(311296) %arg32, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg33, ptr noalias nocapture readonly align 128 dereferenceable(360448) %arg34, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg35, ptr noalias nocapture readonly align 128 dereferenceable(458752) %arg36, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg37, ptr noalias nocapture readonly align 128 dereferenceable(458752) %arg38, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg39, ptr noalias nocapture readonly align 128 dereferenceable(458752) %arg40, ptr noalias nocapture writeonly align 128 dereferenceable(262144) %arg41, ptr noalias nocapture writeonly align 128 dereferenceable(262144) %arg42, ptr noalias nocapture writeonly align 128 dereferenceable(262144) %arg43, ptr noalias nocapture writeonly align 128 dereferenceable(262144) %arg44, ptr noalias nocapture writeonly align 128 dereferenceable(262144) %arg45, ptr noalias nocapture writeonly align 128 dereferenceable(262144) %arg46, ptr noalias nocapture writeonly align 128 dereferenceable(262144) %arg47, ptr noalias nocapture writeonly align 128 dereferenceable(262144) %arg48, ptr noalias nocapture writeonly align 128 dereferenceable(262144) %arg49, ptr noalias nocapture writeonly align 128 dereferenceable(262144) %arg50, ptr noalias nocapture writeonly align 128 dereferenceable(262144) %arg51, ptr noalias nocapture writeonly align 128 dereferenceable(262144) %arg52, ptr noalias nocapture writeonly align 128 dereferenceable(262144) %arg53, ptr noalias nocapture writeonly align 128 dereferenceable(262144) %arg54, ptr noalias nocapture writeonly align 128 dereferenceable(262144) %arg55, ptr noalias nocapture writeonly align 128 dereferenceable(262144) %arg56, ptr noalias nocapture writeonly align 128 dereferenceable(262144) %arg57, ptr noalias nocapture writeonly align 128 dereferenceable(262144) %arg58, ptr noalias nocapture writeonly align 128 dereferenceable(262144) %arg59, ptr noalias nocapture writeonly align 128 dereferenceable(262144) %arg60) local_unnamed_addr #6 {
entry:
  %arg60128 = addrspacecast ptr %arg60 to ptr addrspace(1)
  %arg59126 = addrspacecast ptr %arg59 to ptr addrspace(1)
  %arg58124 = addrspacecast ptr %arg58 to ptr addrspace(1)
  %arg57122 = addrspacecast ptr %arg57 to ptr addrspace(1)
  %arg56120 = addrspacecast ptr %arg56 to ptr addrspace(1)
  %arg55118 = addrspacecast ptr %arg55 to ptr addrspace(1)
  %arg54116 = addrspacecast ptr %arg54 to ptr addrspace(1)
  %arg53114 = addrspacecast ptr %arg53 to ptr addrspace(1)
  %arg52112 = addrspacecast ptr %arg52 to ptr addrspace(1)
  %arg51110 = addrspacecast ptr %arg51 to ptr addrspace(1)
  %arg50108 = addrspacecast ptr %arg50 to ptr addrspace(1)
  %arg49106 = addrspacecast ptr %arg49 to ptr addrspace(1)
  %arg48104 = addrspacecast ptr %arg48 to ptr addrspace(1)
  %arg47102 = addrspacecast ptr %arg47 to ptr addrspace(1)
  %arg46100 = addrspacecast ptr %arg46 to ptr addrspace(1)
  %arg4598 = addrspacecast ptr %arg45 to ptr addrspace(1)
  %arg4496 = addrspacecast ptr %arg44 to ptr addrspace(1)
  %arg4394 = addrspacecast ptr %arg43 to ptr addrspace(1)
  %arg4292 = addrspacecast ptr %arg42 to ptr addrspace(1)
  %arg4190 = addrspacecast ptr %arg41 to ptr addrspace(1)
  %arg4088 = addrspacecast ptr %arg40 to ptr addrspace(1)
  %arg3986 = addrspacecast ptr %arg39 to ptr addrspace(1)
  %arg3884 = addrspacecast ptr %arg38 to ptr addrspace(1)
  %arg3782 = addrspacecast ptr %arg37 to ptr addrspace(1)
  %arg3680 = addrspacecast ptr %arg36 to ptr addrspace(1)
  %arg3578 = addrspacecast ptr %arg35 to ptr addrspace(1)
  %arg3476 = addrspacecast ptr %arg34 to ptr addrspace(1)
  %arg3374 = addrspacecast ptr %arg33 to ptr addrspace(1)
  %arg3272 = addrspacecast ptr %arg32 to ptr addrspace(1)
  %arg3170 = addrspacecast ptr %arg31 to ptr addrspace(1)
  %arg3068 = addrspacecast ptr %arg30 to ptr addrspace(1)
  %arg2966 = addrspacecast ptr %arg29 to ptr addrspace(1)
  %arg2864 = addrspacecast ptr %arg28 to ptr addrspace(1)
  %arg2762 = addrspacecast ptr %arg27 to ptr addrspace(1)
  %arg2660 = addrspacecast ptr %arg26 to ptr addrspace(1)
  %arg2558 = addrspacecast ptr %arg25 to ptr addrspace(1)
  %arg2456 = addrspacecast ptr %arg24 to ptr addrspace(1)
  %arg2354 = addrspacecast ptr %arg23 to ptr addrspace(1)
  %arg2252 = addrspacecast ptr %arg22 to ptr addrspace(1)
  %arg2150 = addrspacecast ptr %arg21 to ptr addrspace(1)
  %arg2048 = addrspacecast ptr %arg20 to ptr addrspace(1)
  %arg1946 = addrspacecast ptr %arg19 to ptr addrspace(1)
  %arg1844 = addrspacecast ptr %arg18 to ptr addrspace(1)
  %arg1742 = addrspacecast ptr %arg17 to ptr addrspace(1)
  %arg1640 = addrspacecast ptr %arg16 to ptr addrspace(1)
  %arg1538 = addrspacecast ptr %arg15 to ptr addrspace(1)
  %arg1436 = addrspacecast ptr %arg14 to ptr addrspace(1)
  %arg1334 = addrspacecast ptr %arg13 to ptr addrspace(1)
  %arg1232 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg1130 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg1028 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg926 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg824 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg722 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg620 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg518 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg416 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg314 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg212 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg110 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg01 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !224
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %2 = shl nuw nsw i32 %0, 10
  %linear_index = or i32 %2, %1
  %3 = lshr i32 %linear_index, 8
  %4 = and i32 %1, 255
  %5 = zext i32 %linear_index to i64
  %6 = getelementptr inbounds float, ptr addrspace(1) %arg01, i64 %5
  %7 = load float, ptr addrspace(1) %6, align 4, !invariant.load !195
  %8 = load float, ptr addrspace(1) %arg212, align 16, !invariant.load !195
  %9 = zext i32 %4 to i64
  %10 = zext i32 %3 to i64
  %11 = getelementptr [352 x [256 x float]], ptr addrspace(1) %arg110, i64 0, i64 %10, i64 %9
  %12 = getelementptr inbounds float, ptr addrspace(1) %11, i64 24576
  %13 = load float, ptr addrspace(1) %12, align 4, !invariant.load !195
  %multiply.44 = fmul float %8, %13
  %subtract.45 = fsub float %7, %multiply.44
  %14 = getelementptr inbounds float, ptr addrspace(1) %arg314, i64 %5
  %15 = load float, ptr addrspace(1) %14, align 4, !invariant.load !195
  %16 = getelementptr [352 x [256 x float]], ptr addrspace(1) %arg416, i64 0, i64 %10, i64 %9
  %17 = getelementptr inbounds float, ptr addrspace(1) %16, i64 24576
  %18 = load float, ptr addrspace(1) %17, align 4, !invariant.load !195
  %multiply.47 = fmul float %8, %18
  %subtract.48 = fsub float %15, %multiply.47
  %19 = getelementptr inbounds float, ptr addrspace(1) %arg518, i64 %5
  %20 = load float, ptr addrspace(1) %19, align 4, !invariant.load !195
  %21 = getelementptr [360 x [256 x float]], ptr addrspace(1) %arg620, i64 0, i64 %10, i64 %9
  %22 = getelementptr inbounds float, ptr addrspace(1) %21, i64 26624
  %23 = load float, ptr addrspace(1) %22, align 4, !invariant.load !195
  %multiply.50 = fmul float %8, %23
  %subtract.51 = fsub float %20, %multiply.50
  %24 = getelementptr inbounds float, ptr addrspace(1) %arg722, i64 %5
  %25 = load float, ptr addrspace(1) %24, align 4, !invariant.load !195
  %26 = getelementptr [448 x [256 x float]], ptr addrspace(1) %arg824, i64 0, i64 %10, i64 %9
  %27 = getelementptr inbounds float, ptr addrspace(1) %26, i64 49152
  %28 = load float, ptr addrspace(1) %27, align 4, !invariant.load !195
  %multiply.53 = fmul float %8, %28
  %subtract.54 = fsub float %25, %multiply.53
  %29 = getelementptr inbounds float, ptr addrspace(1) %arg926, i64 %5
  %30 = load float, ptr addrspace(1) %29, align 4, !invariant.load !195
  %31 = getelementptr [360 x [256 x float]], ptr addrspace(1) %arg1028, i64 0, i64 %10, i64 %9
  %32 = getelementptr inbounds float, ptr addrspace(1) %31, i64 26624
  %33 = load float, ptr addrspace(1) %32, align 4, !invariant.load !195
  %multiply.56 = fmul float %8, %33
  %subtract.57 = fsub float %30, %multiply.56
  %34 = getelementptr inbounds float, ptr addrspace(1) %arg1130, i64 %5
  %35 = load float, ptr addrspace(1) %34, align 4, !invariant.load !195
  %36 = getelementptr [360 x [256 x float]], ptr addrspace(1) %arg1232, i64 0, i64 %10, i64 %9
  %37 = getelementptr inbounds float, ptr addrspace(1) %36, i64 26624
  %38 = load float, ptr addrspace(1) %37, align 4, !invariant.load !195
  %multiply.59 = fmul float %8, %38
  %subtract.60 = fsub float %35, %multiply.59
  %39 = getelementptr inbounds float, ptr addrspace(1) %arg1334, i64 %5
  %40 = load float, ptr addrspace(1) %39, align 4, !invariant.load !195
  %41 = getelementptr [456 x [256 x float]], ptr addrspace(1) %arg1436, i64 0, i64 %10, i64 %9
  %42 = getelementptr inbounds float, ptr addrspace(1) %41, i64 51200
  %43 = load float, ptr addrspace(1) %42, align 4, !invariant.load !195
  %multiply.62 = fmul float %8, %43
  %subtract.63 = fsub float %40, %multiply.62
  %44 = getelementptr inbounds float, ptr addrspace(1) %arg1538, i64 %5
  %45 = load float, ptr addrspace(1) %44, align 4, !invariant.load !195
  %46 = getelementptr inbounds float, ptr addrspace(1) %arg1640, i64 %5
  %47 = load float, ptr addrspace(1) %46, align 4, !invariant.load !195
  %multiply.64 = fmul float %8, %47
  %subtract.65 = fsub float %45, %multiply.64
  %48 = getelementptr inbounds float, ptr addrspace(1) %arg1742, i64 %5
  %49 = load float, ptr addrspace(1) %48, align 4, !invariant.load !195
  %50 = getelementptr [352 x [256 x float]], ptr addrspace(1) %arg1844, i64 0, i64 %10, i64 %9
  %51 = getelementptr inbounds float, ptr addrspace(1) %50, i64 24576
  %52 = load float, ptr addrspace(1) %51, align 4, !invariant.load !195
  %multiply.67 = fmul float %8, %52
  %subtract.68 = fsub float %49, %multiply.67
  %53 = getelementptr inbounds float, ptr addrspace(1) %arg1946, i64 %5
  %54 = load float, ptr addrspace(1) %53, align 4, !invariant.load !195
  %55 = getelementptr [304 x [256 x float]], ptr addrspace(1) %arg2048, i64 0, i64 %10, i64 %9
  %56 = getelementptr inbounds float, ptr addrspace(1) %55, i64 12288
  %57 = load float, ptr addrspace(1) %56, align 4, !invariant.load !195
  %multiply.70 = fmul float %8, %57
  %subtract.71 = fsub float %54, %multiply.70
  %58 = getelementptr inbounds float, ptr addrspace(1) %arg2150, i64 %5
  %59 = load float, ptr addrspace(1) %58, align 4, !invariant.load !195
  %60 = getelementptr [304 x [256 x float]], ptr addrspace(1) %arg2252, i64 0, i64 %10, i64 %9
  %61 = getelementptr inbounds float, ptr addrspace(1) %60, i64 12288
  %62 = load float, ptr addrspace(1) %61, align 4, !invariant.load !195
  %multiply.73 = fmul float %8, %62
  %subtract.74 = fsub float %59, %multiply.73
  %63 = getelementptr inbounds float, ptr addrspace(1) %arg2354, i64 %5
  %64 = load float, ptr addrspace(1) %63, align 4, !invariant.load !195
  %65 = getelementptr [448 x [256 x float]], ptr addrspace(1) %arg2456, i64 0, i64 %10, i64 %9
  %66 = getelementptr inbounds float, ptr addrspace(1) %65, i64 49152
  %67 = load float, ptr addrspace(1) %66, align 4, !invariant.load !195
  %multiply.76 = fmul float %8, %67
  %subtract.77 = fsub float %64, %multiply.76
  %68 = getelementptr inbounds float, ptr addrspace(1) %arg2558, i64 %5
  %69 = load float, ptr addrspace(1) %68, align 4, !invariant.load !195
  %70 = getelementptr [304 x [256 x float]], ptr addrspace(1) %arg2660, i64 0, i64 %10, i64 %9
  %71 = getelementptr inbounds float, ptr addrspace(1) %70, i64 12288
  %72 = load float, ptr addrspace(1) %71, align 4, !invariant.load !195
  %multiply.79 = fmul float %8, %72
  %subtract.80 = fsub float %69, %multiply.79
  %73 = getelementptr inbounds float, ptr addrspace(1) %arg2762, i64 %5
  %74 = load float, ptr addrspace(1) %73, align 4, !invariant.load !195
  %75 = getelementptr [352 x [256 x float]], ptr addrspace(1) %arg2864, i64 0, i64 %10, i64 %9
  %76 = getelementptr inbounds float, ptr addrspace(1) %75, i64 24576
  %77 = load float, ptr addrspace(1) %76, align 4, !invariant.load !195
  %multiply.82 = fmul float %8, %77
  %subtract.83 = fsub float %74, %multiply.82
  %78 = getelementptr inbounds float, ptr addrspace(1) %arg2966, i64 %5
  %79 = load float, ptr addrspace(1) %78, align 4, !invariant.load !195
  %80 = getelementptr [304 x [256 x float]], ptr addrspace(1) %arg3068, i64 0, i64 %10, i64 %9
  %81 = getelementptr inbounds float, ptr addrspace(1) %80, i64 12288
  %82 = load float, ptr addrspace(1) %81, align 4, !invariant.load !195
  %multiply.85 = fmul float %8, %82
  %subtract.86 = fsub float %79, %multiply.85
  %83 = getelementptr inbounds float, ptr addrspace(1) %arg3170, i64 %5
  %84 = load float, ptr addrspace(1) %83, align 4, !invariant.load !195
  %85 = getelementptr [304 x [256 x float]], ptr addrspace(1) %arg3272, i64 0, i64 %10, i64 %9
  %86 = getelementptr inbounds float, ptr addrspace(1) %85, i64 12288
  %87 = load float, ptr addrspace(1) %86, align 4, !invariant.load !195
  %multiply.88 = fmul float %8, %87
  %subtract.89 = fsub float %84, %multiply.88
  %88 = getelementptr inbounds float, ptr addrspace(1) %arg3374, i64 %5
  %89 = load float, ptr addrspace(1) %88, align 4, !invariant.load !195
  %90 = getelementptr [352 x [256 x float]], ptr addrspace(1) %arg3476, i64 0, i64 %10, i64 %9
  %91 = getelementptr inbounds float, ptr addrspace(1) %90, i64 24576
  %92 = load float, ptr addrspace(1) %91, align 4, !invariant.load !195
  %multiply.91 = fmul float %8, %92
  %subtract.92 = fsub float %89, %multiply.91
  %93 = getelementptr inbounds float, ptr addrspace(1) %arg3578, i64 %5
  %94 = load float, ptr addrspace(1) %93, align 4, !invariant.load !195
  %95 = getelementptr [448 x [256 x float]], ptr addrspace(1) %arg3680, i64 0, i64 %10, i64 %9
  %96 = getelementptr inbounds float, ptr addrspace(1) %95, i64 49152
  %97 = load float, ptr addrspace(1) %96, align 4, !invariant.load !195
  %multiply.94 = fmul float %8, %97
  %subtract.95 = fsub float %94, %multiply.94
  %98 = getelementptr inbounds float, ptr addrspace(1) %arg3782, i64 %5
  %99 = load float, ptr addrspace(1) %98, align 4, !invariant.load !195
  %100 = getelementptr [448 x [256 x float]], ptr addrspace(1) %arg3884, i64 0, i64 %10, i64 %9
  %101 = getelementptr inbounds float, ptr addrspace(1) %100, i64 49152
  %102 = load float, ptr addrspace(1) %101, align 4, !invariant.load !195
  %multiply.97 = fmul float %8, %102
  %subtract.98 = fsub float %99, %multiply.97
  %103 = getelementptr inbounds float, ptr addrspace(1) %arg3986, i64 %5
  %104 = load float, ptr addrspace(1) %103, align 4, !invariant.load !195
  %105 = getelementptr [448 x [256 x float]], ptr addrspace(1) %arg4088, i64 0, i64 %10, i64 %9
  %106 = getelementptr inbounds float, ptr addrspace(1) %105, i64 49152
  %107 = load float, ptr addrspace(1) %106, align 4, !invariant.load !195
  %multiply.100 = fmul float %8, %107
  %subtract.101 = fsub float %104, %multiply.100
  %108 = getelementptr inbounds float, ptr addrspace(1) %arg4190, i64 %5
  store float %subtract.45, ptr addrspace(1) %108, align 4
  %109 = getelementptr inbounds float, ptr addrspace(1) %arg4292, i64 %5
  store float %subtract.48, ptr addrspace(1) %109, align 4
  %110 = getelementptr inbounds float, ptr addrspace(1) %arg4394, i64 %5
  store float %subtract.51, ptr addrspace(1) %110, align 4
  %111 = getelementptr inbounds float, ptr addrspace(1) %arg4496, i64 %5
  store float %subtract.54, ptr addrspace(1) %111, align 4
  %112 = getelementptr inbounds float, ptr addrspace(1) %arg4598, i64 %5
  store float %subtract.57, ptr addrspace(1) %112, align 4
  %113 = getelementptr inbounds float, ptr addrspace(1) %arg46100, i64 %5
  store float %subtract.60, ptr addrspace(1) %113, align 4
  %114 = getelementptr inbounds float, ptr addrspace(1) %arg47102, i64 %5
  store float %subtract.63, ptr addrspace(1) %114, align 4
  %115 = getelementptr inbounds float, ptr addrspace(1) %arg48104, i64 %5
  store float %subtract.65, ptr addrspace(1) %115, align 4
  %116 = getelementptr inbounds float, ptr addrspace(1) %arg49106, i64 %5
  store float %subtract.68, ptr addrspace(1) %116, align 4
  %117 = getelementptr inbounds float, ptr addrspace(1) %arg50108, i64 %5
  store float %subtract.71, ptr addrspace(1) %117, align 4
  %118 = getelementptr inbounds float, ptr addrspace(1) %arg51110, i64 %5
  store float %subtract.74, ptr addrspace(1) %118, align 4
  %119 = getelementptr inbounds float, ptr addrspace(1) %arg52112, i64 %5
  store float %subtract.77, ptr addrspace(1) %119, align 4
  %120 = getelementptr inbounds float, ptr addrspace(1) %arg53114, i64 %5
  store float %subtract.80, ptr addrspace(1) %120, align 4
  %121 = getelementptr inbounds float, ptr addrspace(1) %arg54116, i64 %5
  store float %subtract.83, ptr addrspace(1) %121, align 4
  %122 = getelementptr inbounds float, ptr addrspace(1) %arg55118, i64 %5
  store float %subtract.86, ptr addrspace(1) %122, align 4
  %123 = getelementptr inbounds float, ptr addrspace(1) %arg56120, i64 %5
  store float %subtract.89, ptr addrspace(1) %123, align 4
  %124 = getelementptr inbounds float, ptr addrspace(1) %arg57122, i64 %5
  store float %subtract.92, ptr addrspace(1) %124, align 4
  %125 = getelementptr inbounds float, ptr addrspace(1) %arg58124, i64 %5
  store float %subtract.95, ptr addrspace(1) %125, align 4
  %126 = getelementptr inbounds float, ptr addrspace(1) %arg59126, i64 %5
  store float %subtract.98, ptr addrspace(1) %126, align 4
  %127 = getelementptr inbounds float, ptr addrspace(1) %arg60128, i64 %5
  store float %subtract.101, ptr addrspace(1) %127, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @fusion_545(ptr noalias nocapture readonly align 128 dereferenceable(16777216) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(196608) %arg1, ptr noalias nocapture readonly align 128 dereferenceable(196608) %arg2, ptr noalias nocapture writeonly align 128 dereferenceable(17170432) %arg3) local_unnamed_addr #5 {
entry:
  %arg352 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg250 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg148 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg046 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !234
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !200
  %2 = shl nuw nsw i32 %0, 10
  %3 = shl nuw nsw i32 %1, 2
  %linear_index_base = or i32 %2, %3
  %linear_index_base.frozen = freeze i32 %linear_index_base
  %4 = udiv i32 %linear_index_base.frozen, 524
  %5 = mul i32 %4, 524
  %.decomposed = sub i32 %linear_index_base.frozen, %5
  %linear_index1 = or i32 %linear_index_base, 1
  %6 = urem i32 %linear_index1, 524
  %linear_index2 = or i32 %linear_index_base, 2
  %7 = urem i32 %linear_index2, 524
  %linear_index3 = or i32 %linear_index_base, 3
  %8 = urem i32 %linear_index3, 524
  %9 = icmp ult i32 %.decomposed, 512
  br i1 %9, label %concatenate.pivot.0., label %concatenate.pivot.518.

concatenate.pivot.0.:                             ; preds = %entry
  %10 = udiv i32 %linear_index_base, 524
  %11 = shl nuw nsw i32 %10, 9
  %12 = add nuw nsw i32 %11, %.decomposed
  br label %concatenate.6.merge

concatenate.pivot.518.:                           ; preds = %entry
  %13 = icmp ult i32 %.decomposed, 518
  %14 = udiv i32 %linear_index_base, 524
  %15 = mul nuw nsw i32 %14, 6
  br i1 %13, label %concatenate.pivot.512.1, label %concatenate.pivot.518.2

concatenate.pivot.512.1:                          ; preds = %concatenate.pivot.518.
  %16 = add nsw i32 %.decomposed, -512
  %17 = add nuw nsw i32 %16, %15
  br label %concatenate.6.merge

concatenate.pivot.518.2:                          ; preds = %concatenate.pivot.518.
  %18 = add nsw i32 %.decomposed, -518
  %19 = add nuw nsw i32 %18, %15
  br label %concatenate.6.merge

concatenate.6.merge:                              ; preds = %concatenate.pivot.518.2, %concatenate.pivot.512.1, %concatenate.pivot.0.
  %.sink39 = phi i32 [ %19, %concatenate.pivot.518.2 ], [ %17, %concatenate.pivot.512.1 ], [ %12, %concatenate.pivot.0. ]
  %arg1.sink = phi ptr addrspace(1) [ %arg148, %concatenate.pivot.518.2 ], [ %arg250, %concatenate.pivot.512.1 ], [ %arg046, %concatenate.pivot.0. ]
  %20 = zext i32 %.sink39 to i64
  %21 = getelementptr inbounds float, ptr addrspace(1) %arg1.sink, i64 %20
  %22 = load float, ptr addrspace(1) %21, align 4, !invariant.load !195
  %23 = zext i32 %linear_index_base to i64
  %24 = getelementptr float, ptr addrspace(1) %arg352, i64 %23
  store float %22, ptr addrspace(1) %24, align 16
  %25 = icmp ult i32 %6, 512
  br i1 %25, label %concatenate.pivot.0.8, label %concatenate.pivot.518.9

concatenate.pivot.0.8:                            ; preds = %concatenate.6.merge
  %26 = udiv i32 %linear_index_base, 524
  %27 = shl nuw nsw i32 %26, 9
  %28 = add nuw nsw i32 %27, %6
  br label %concatenate.6.merge3

concatenate.pivot.518.9:                          ; preds = %concatenate.6.merge
  %29 = icmp ult i32 %6, 518
  %30 = udiv i32 %linear_index_base, 524
  %31 = mul nuw nsw i32 %30, 6
  br i1 %29, label %concatenate.pivot.512.10, label %concatenate.pivot.518.11

concatenate.pivot.512.10:                         ; preds = %concatenate.pivot.518.9
  %32 = add nsw i32 %6, -512
  %33 = add nuw nsw i32 %32, %31
  br label %concatenate.6.merge3

concatenate.pivot.518.11:                         ; preds = %concatenate.pivot.518.9
  %34 = add nsw i32 %6, -518
  %35 = add nuw nsw i32 %34, %31
  br label %concatenate.6.merge3

concatenate.6.merge3:                             ; preds = %concatenate.pivot.518.11, %concatenate.pivot.512.10, %concatenate.pivot.0.8
  %.sink41 = phi i32 [ %35, %concatenate.pivot.518.11 ], [ %33, %concatenate.pivot.512.10 ], [ %28, %concatenate.pivot.0.8 ]
  %arg1.sink40 = phi ptr addrspace(1) [ %arg148, %concatenate.pivot.518.11 ], [ %arg250, %concatenate.pivot.512.10 ], [ %arg046, %concatenate.pivot.0.8 ]
  %36 = zext i32 %.sink41 to i64
  %37 = getelementptr inbounds float, ptr addrspace(1) %arg1.sink40, i64 %36
  %38 = load float, ptr addrspace(1) %37, align 4, !invariant.load !195
  %39 = getelementptr inbounds float, ptr addrspace(1) %24, i64 1
  store float %38, ptr addrspace(1) %39, align 4
  %40 = icmp ult i32 %7, 512
  br i1 %40, label %concatenate.pivot.0.17, label %concatenate.pivot.518.18

concatenate.pivot.0.17:                           ; preds = %concatenate.6.merge3
  %41 = udiv i32 %linear_index_base, 524
  %42 = shl nuw nsw i32 %41, 9
  %43 = add nuw nsw i32 %42, %7
  br label %concatenate.6.merge12

concatenate.pivot.518.18:                         ; preds = %concatenate.6.merge3
  %44 = icmp ult i32 %7, 518
  %45 = udiv i32 %linear_index_base, 524
  %46 = mul nuw nsw i32 %45, 6
  br i1 %44, label %concatenate.pivot.512.19, label %concatenate.pivot.518.20

concatenate.pivot.512.19:                         ; preds = %concatenate.pivot.518.18
  %47 = add nsw i32 %7, -512
  %48 = add nuw nsw i32 %47, %46
  br label %concatenate.6.merge12

concatenate.pivot.518.20:                         ; preds = %concatenate.pivot.518.18
  %49 = add nsw i32 %7, -518
  %50 = add nuw nsw i32 %49, %46
  br label %concatenate.6.merge12

concatenate.6.merge12:                            ; preds = %concatenate.pivot.518.20, %concatenate.pivot.512.19, %concatenate.pivot.0.17
  %.sink43 = phi i32 [ %50, %concatenate.pivot.518.20 ], [ %48, %concatenate.pivot.512.19 ], [ %43, %concatenate.pivot.0.17 ]
  %arg1.sink42 = phi ptr addrspace(1) [ %arg148, %concatenate.pivot.518.20 ], [ %arg250, %concatenate.pivot.512.19 ], [ %arg046, %concatenate.pivot.0.17 ]
  %51 = zext i32 %.sink43 to i64
  %52 = getelementptr inbounds float, ptr addrspace(1) %arg1.sink42, i64 %51
  %53 = load float, ptr addrspace(1) %52, align 4, !invariant.load !195
  %54 = getelementptr inbounds float, ptr addrspace(1) %24, i64 2
  store float %53, ptr addrspace(1) %54, align 8
  %55 = icmp ult i32 %8, 512
  br i1 %55, label %concatenate.pivot.0.26, label %concatenate.pivot.518.27

concatenate.pivot.0.26:                           ; preds = %concatenate.6.merge12
  %56 = udiv i32 %linear_index_base, 524
  %57 = shl nuw nsw i32 %56, 9
  %58 = add nuw nsw i32 %57, %8
  br label %concatenate.6.merge21

concatenate.pivot.518.27:                         ; preds = %concatenate.6.merge12
  %59 = icmp ult i32 %8, 518
  %60 = mul nuw nsw i32 %4, 6
  br i1 %59, label %concatenate.pivot.512.28, label %concatenate.pivot.518.29

concatenate.pivot.512.28:                         ; preds = %concatenate.pivot.518.27
  %61 = add nsw i32 %8, -512
  %62 = add nuw nsw i32 %61, %60
  br label %concatenate.6.merge21

concatenate.pivot.518.29:                         ; preds = %concatenate.pivot.518.27
  %63 = add nsw i32 %8, -518
  %64 = add nuw nsw i32 %63, %60
  br label %concatenate.6.merge21

concatenate.6.merge21:                            ; preds = %concatenate.pivot.518.29, %concatenate.pivot.512.28, %concatenate.pivot.0.26
  %.sink45 = phi i32 [ %64, %concatenate.pivot.518.29 ], [ %62, %concatenate.pivot.512.28 ], [ %58, %concatenate.pivot.0.26 ]
  %arg1.sink44 = phi ptr addrspace(1) [ %arg148, %concatenate.pivot.518.29 ], [ %arg250, %concatenate.pivot.512.28 ], [ %arg046, %concatenate.pivot.0.26 ]
  %65 = zext i32 %.sink45 to i64
  %66 = getelementptr inbounds float, ptr addrspace(1) %arg1.sink44, i64 %65
  %67 = load float, ptr addrspace(1) %66, align 4, !invariant.load !195
  %68 = getelementptr inbounds float, ptr addrspace(1) %24, i64 3
  store float %67, ptr addrspace(1) %68, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_3(ptr noalias nocapture readonly align 16 dereferenceable(3072) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(268288) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(3072) %arg3, ptr noalias nocapture writeonly align 128 dereferenceable(3072) %arg4, ptr noalias nocapture writeonly align 128 dereferenceable(3072) %arg5) local_unnamed_addr #6 {
entry:
  %arg513 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg411 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg39 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg27 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg15 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg03 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !235
  %.lhs.trunc = trunc i32 %0 to i16
  %1 = udiv i16 %.lhs.trunc, 6
  %2 = mul i16 %1, 6
  %.decomposed = sub i16 %.lhs.trunc, %2
  %.zext2 = zext i16 %.decomposed to i32
  %3 = zext i32 %0 to i64
  %4 = getelementptr inbounds float, ptr addrspace(1) %arg03, i64 %3
  %5 = load float, ptr addrspace(1) %4, align 4, !invariant.load !195
  %6 = load float, ptr addrspace(1) %arg27, align 16, !invariant.load !195
  %7 = or i32 %.zext2, 512
  %8 = zext i16 %1 to i64
  %9 = zext i32 %7 to i64
  %10 = getelementptr inbounds [128 x [524 x float]], ptr addrspace(1) %arg15, i64 0, i64 %8, i64 %9
  %11 = load float, ptr addrspace(1) %10, align 4, !invariant.load !195
  %multiply.7 = fmul float %6, %11
  %subtract.8 = fsub float %5, %multiply.7
  %12 = getelementptr inbounds float, ptr addrspace(1) %arg39, i64 %3
  %13 = load float, ptr addrspace(1) %12, align 4, !invariant.load !195
  %14 = zext i32 %.zext2 to i64
  %15 = getelementptr [128 x [524 x float]], ptr addrspace(1) %arg15, i64 0, i64 %8, i64 %14
  %16 = getelementptr inbounds float, ptr addrspace(1) %15, i64 518
  %17 = load float, ptr addrspace(1) %16, align 4, !invariant.load !195
  %multiply.10 = fmul float %6, %17
  %subtract.11 = fsub float %13, %multiply.10
  %18 = getelementptr inbounds float, ptr addrspace(1) %arg411, i64 %3
  store float %subtract.8, ptr addrspace(1) %18, align 4
  %19 = getelementptr inbounds float, ptr addrspace(1) %arg513, i64 %3
  store float %subtract.11, ptr addrspace(1) %19, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_28(ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(268288) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg3, ptr noalias nocapture align 128 dereferenceable(262144) %arg4, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg5, ptr noalias nocapture align 128 dereferenceable(262144) %arg6, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg7, ptr noalias nocapture align 128 dereferenceable(262144) %arg8, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg9, ptr noalias nocapture align 128 dereferenceable(262144) %arg10, ptr noalias nocapture readonly align 16 dereferenceable(262144) %arg11, ptr noalias nocapture align 128 dereferenceable(262144) %arg12, ptr noalias nocapture writeonly align 128 dereferenceable(262144) %arg13) local_unnamed_addr #6 {
entry:
  %arg1328 = addrspacecast ptr %arg13 to ptr addrspace(1)
  %arg1226 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg1124 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg1022 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg920 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg818 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg716 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg614 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg512 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg410 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg38 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg26 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg14 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg01 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !224
  %1 = shl nuw nsw i32 %0, 10
  %2 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %linear_index = or i32 %1, %2
  %3 = lshr i32 %linear_index, 9
  %4 = and i32 %2, 511
  %5 = zext i32 %linear_index to i64
  %6 = getelementptr inbounds float, ptr addrspace(1) %arg01, i64 %5
  %7 = load float, ptr addrspace(1) %6, align 4, !invariant.load !195
  %8 = load float, ptr addrspace(1) %arg26, align 16, !invariant.load !195
  %9 = zext i32 %3 to i64
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds [128 x [524 x float]], ptr addrspace(1) %arg14, i64 0, i64 %9, i64 %10
  %12 = load float, ptr addrspace(1) %11, align 4, !invariant.load !195
  %multiply.16 = fmul float %8, %12
  %subtract.17 = fsub float %7, %multiply.16
  %13 = getelementptr inbounds float, ptr addrspace(1) %arg38, i64 %5
  %14 = load float, ptr addrspace(1) %13, align 4, !invariant.load !195
  %15 = getelementptr inbounds float, ptr addrspace(1) %arg410, i64 %5
  %16 = load float, ptr addrspace(1) %15, align 4
  %multiply.18 = fmul float %8, %16
  %subtract.19 = fsub float %14, %multiply.18
  %17 = getelementptr inbounds float, ptr addrspace(1) %arg512, i64 %5
  %18 = load float, ptr addrspace(1) %17, align 4, !invariant.load !195
  %19 = getelementptr inbounds float, ptr addrspace(1) %arg614, i64 %5
  %20 = load float, ptr addrspace(1) %19, align 4
  %multiply.20 = fmul float %8, %20
  %subtract.21 = fsub float %18, %multiply.20
  %21 = getelementptr inbounds float, ptr addrspace(1) %arg716, i64 %5
  %22 = load float, ptr addrspace(1) %21, align 4, !invariant.load !195
  %23 = getelementptr inbounds float, ptr addrspace(1) %arg818, i64 %5
  %24 = load float, ptr addrspace(1) %23, align 4
  %multiply.22 = fmul float %8, %24
  %subtract.23 = fsub float %22, %multiply.22
  %25 = getelementptr inbounds float, ptr addrspace(1) %arg920, i64 %5
  %26 = load float, ptr addrspace(1) %25, align 4, !invariant.load !195
  %27 = getelementptr inbounds float, ptr addrspace(1) %arg1022, i64 %5
  %28 = load float, ptr addrspace(1) %27, align 4
  %multiply.24 = fmul float %8, %28
  %subtract.25 = fsub float %26, %multiply.24
  %29 = getelementptr inbounds float, ptr addrspace(1) %arg1124, i64 %5
  %30 = load float, ptr addrspace(1) %29, align 4, !invariant.load !195
  %31 = getelementptr inbounds float, ptr addrspace(1) %arg1226, i64 %5
  %32 = load float, ptr addrspace(1) %31, align 4
  %multiply.26 = fmul float %8, %32
  %subtract.27 = fsub float %30, %multiply.26
  store float %subtract.17, ptr addrspace(1) %31, align 4
  store float %subtract.19, ptr addrspace(1) %27, align 4
  store float %subtract.21, ptr addrspace(1) %23, align 4
  store float %subtract.23, ptr addrspace(1) %19, align 4
  store float %subtract.25, ptr addrspace(1) %15, align 4
  %33 = getelementptr inbounds float, ptr addrspace(1) %arg1328, i64 %5
  store float %subtract.27, ptr addrspace(1) %33, align 4
  ret void
}

; Function Attrs: nofree nosync nounwind memory(argmem: readwrite)
define void @add_115(ptr noalias nocapture readonly align 128 dereferenceable(48496640) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(48496640) %arg1, ptr noalias nocapture writeonly align 128 dereferenceable(48496640) %arg2) local_unnamed_addr #7 {
entry:
  %arg29 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg17 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg05 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !236
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !213
  %2 = shl nuw nsw i32 %0, 9
  %3 = shl nuw nsw i32 %1, 2
  %linear_index_base = or i32 %2, %3
  %4 = zext i32 %linear_index_base to i64
  %5 = shl nuw nsw i64 %4, 2
  %6 = add nuw nsw i64 %5, 8
  %scevgep = getelementptr i8, ptr addrspace(1) %arg29, i64 %6
  %scevgep25 = getelementptr i8, ptr addrspace(1) %arg17, i64 %6
  %scevgep31 = getelementptr i8, ptr addrspace(1) %arg05, i64 %6
  br label %loop.loop_body

loop.loop_body:                                   ; preds = %entry, %add_115.in_bounds-after
  %lsr.iv32 = phi ptr addrspace(1) [ %scevgep31, %entry ], [ %scevgep33, %add_115.in_bounds-after ]
  %lsr.iv26 = phi ptr addrspace(1) [ %scevgep25, %entry ], [ %scevgep27, %add_115.in_bounds-after ]
  %lsr.iv20 = phi ptr addrspace(1) [ %scevgep, %entry ], [ %scevgep21, %add_115.in_bounds-after ]
  %lsr.iv = phi i32 [ -442368, %entry ], [ %lsr.iv.next, %add_115.in_bounds-after ]
  %7 = add i32 %linear_index_base, %lsr.iv
  %8 = add i32 %7, 442368
  %9 = icmp ult i32 %8, 12124160
  br i1 %9, label %add_115.in_bounds-true, label %add_115.in_bounds-after

add_115.in_bounds-after:                          ; preds = %add_115.in_bounds-true, %loop.loop_body
  %lsr.iv.next = add nsw i32 %lsr.iv, 442368
  %scevgep21 = getelementptr i8, ptr addrspace(1) %lsr.iv20, i64 1769472
  %scevgep27 = getelementptr i8, ptr addrspace(1) %lsr.iv26, i64 1769472
  %scevgep33 = getelementptr i8, ptr addrspace(1) %lsr.iv32, i64 1769472
  %10 = icmp ugt i32 %lsr.iv.next, 11681791
  br i1 %10, label %loop.loop_exit, label %loop.loop_body, !llvm.loop !237

loop.loop_exit:                                   ; preds = %add_115.in_bounds-after
  ret void

add_115.in_bounds-true:                           ; preds = %loop.loop_body
  %scevgep34 = getelementptr i8, ptr addrspace(1) %lsr.iv32, i64 -8
  %11 = load <4 x float>, ptr addrspace(1) %scevgep34, align 16, !invariant.load !195
  %12 = extractelement <4 x float> %11, i32 0
  %13 = extractelement <4 x float> %11, i32 1
  %14 = extractelement <4 x float> %11, i32 2
  %15 = extractelement <4 x float> %11, i32 3
  %scevgep29 = getelementptr i8, ptr addrspace(1) %lsr.iv26, i64 -8
  %16 = load <4 x float>, ptr addrspace(1) %scevgep29, align 16, !invariant.load !195
  %17 = extractelement <4 x float> %16, i32 0
  %18 = extractelement <4 x float> %16, i32 1
  %19 = extractelement <4 x float> %16, i32 2
  %20 = extractelement <4 x float> %16, i32 3
  %add.3 = fadd float %12, %17
  %scevgep23 = getelementptr i8, ptr addrspace(1) %lsr.iv20, i64 -8
  %add.31 = fadd float %13, %18
  %add.32 = fadd float %14, %19
  %add.33 = fadd float %15, %20
  %21 = insertelement <4 x float> poison, float %add.3, i32 0
  %22 = insertelement <4 x float> %21, float %add.31, i32 1
  %23 = insertelement <4 x float> %22, float %add.32, i32 2
  %24 = insertelement <4 x float> %23, float %add.33, i32 3
  store <4 x float> %24, ptr addrspace(1) %scevgep23, align 16
  br label %add_115.in_bounds-after
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @slice_507(ptr noalias nocapture readonly align 128 dereferenceable(53215232) %arg0, ptr noalias nocapture writeonly align 128 dereferenceable(4194304) %arg1) local_unnamed_addr #6 {
entry:
  %arg13 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg01 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !199
  %1 = shl nuw nsw i32 %0, 10
  %2 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !200
  %3 = shl nuw nsw i32 %2, 2
  %linear_index_base = or i32 %1, %3
  %linear_index3 = or i32 %linear_index_base, 3
  %4 = lshr i32 %linear_index_base, 7
  %5 = and i32 %linear_index3, 127
  %linear_index2 = or i32 %linear_index_base, 2
  %6 = and i32 %linear_index2, 126
  %linear_index1 = or i32 %linear_index_base, 1
  %7 = and i32 %linear_index1, 125
  %8 = and i32 %3, 124
  %9 = zext i32 %4 to i64
  %10 = zext i32 %8 to i64
  %11 = getelementptr inbounds [8192 x [1624 x float]], ptr addrspace(1) %arg01, i64 0, i64 %9, i64 %10
  %12 = load <2 x float>, ptr addrspace(1) %11, align 16, !invariant.load !195
  %13 = extractelement <2 x float> %12, i32 0
  %14 = extractelement <2 x float> %12, i32 1
  %15 = zext i32 %linear_index_base to i64
  %16 = getelementptr float, ptr addrspace(1) %arg13, i64 %15
  %17 = zext i32 %7 to i64
  %18 = zext i32 %6 to i64
  %19 = getelementptr inbounds [8192 x [1624 x float]], ptr addrspace(1) %arg01, i64 0, i64 %9, i64 %18
  %20 = load float, ptr addrspace(1) %19, align 8, !invariant.load !195
  %21 = zext i32 %5 to i64
  %22 = getelementptr inbounds [8192 x [1624 x float]], ptr addrspace(1) %arg01, i64 0, i64 %9, i64 %21
  %23 = load float, ptr addrspace(1) %22, align 4, !invariant.load !195
  %24 = insertelement <4 x float> poison, float %13, i32 0
  %25 = insertelement <4 x float> %24, float %14, i32 1
  %26 = insertelement <4 x float> %25, float %20, i32 2
  %27 = insertelement <4 x float> %26, float %23, i32 3
  store <4 x float> %27, ptr addrspace(1) %16, align 16
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_176(ptr noalias nocapture readonly align 16 dereferenceable(524288) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(9961472) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture readonly align 16 dereferenceable(524288) %arg3, ptr noalias nocapture align 128 dereferenceable(524288) %arg4, ptr noalias nocapture readonly align 128 dereferenceable(53215232) %arg5, ptr noalias nocapture readonly align 128 dereferenceable(53215232) %arg6, ptr noalias nocapture readonly align 128 dereferenceable(53215232) %arg7, ptr noalias nocapture readonly align 16 dereferenceable(524288) %arg8, ptr noalias nocapture readonly align 128 dereferenceable(9961472) %arg9, ptr noalias nocapture readonly align 16 dereferenceable(524288) %arg10, ptr noalias nocapture readonly align 128 dereferenceable(9961472) %arg11, ptr noalias nocapture readonly align 16 dereferenceable(524288) %arg12, ptr noalias nocapture readonly align 128 dereferenceable(9961472) %arg13, ptr noalias nocapture readonly align 16 dereferenceable(524288) %arg14, ptr noalias nocapture readonly align 128 dereferenceable(9961472) %arg15, ptr noalias nocapture writeonly align 128 dereferenceable(524288) %arg16, ptr noalias nocapture writeonly align 128 dereferenceable(524288) %arg17, ptr noalias nocapture writeonly align 128 dereferenceable(524288) %arg18, ptr noalias nocapture writeonly align 128 dereferenceable(524288) %arg19, ptr noalias nocapture writeonly align 128 dereferenceable(524288) %arg20) local_unnamed_addr #6 {
entry:
  %arg2086 = addrspacecast ptr %arg20 to ptr addrspace(1)
  %arg1984 = addrspacecast ptr %arg19 to ptr addrspace(1)
  %arg1882 = addrspacecast ptr %arg18 to ptr addrspace(1)
  %arg1780 = addrspacecast ptr %arg17 to ptr addrspace(1)
  %arg1678 = addrspacecast ptr %arg16 to ptr addrspace(1)
  %arg1576 = addrspacecast ptr %arg15 to ptr addrspace(1)
  %arg1474 = addrspacecast ptr %arg14 to ptr addrspace(1)
  %arg1372 = addrspacecast ptr %arg13 to ptr addrspace(1)
  %arg1270 = addrspacecast ptr %arg12 to ptr addrspace(1)
  %arg1168 = addrspacecast ptr %arg11 to ptr addrspace(1)
  %arg1066 = addrspacecast ptr %arg10 to ptr addrspace(1)
  %arg964 = addrspacecast ptr %arg9 to ptr addrspace(1)
  %arg862 = addrspacecast ptr %arg8 to ptr addrspace(1)
  %arg760 = addrspacecast ptr %arg7 to ptr addrspace(1)
  %arg658 = addrspacecast ptr %arg6 to ptr addrspace(1)
  %arg556 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg454 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg352 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg250 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg148 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg046 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !213
  %1 = shl nuw nsw i32 %0, 10
  %2 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !200
  %3 = shl nuw nsw i32 %2, 2
  %linear_index_base = or i32 %1, %3
  %linear_index3 = or i32 %linear_index_base, 3
  %4 = lshr i32 %linear_index_base, 4
  %5 = and i32 %linear_index3, 15
  %linear_index2 = or i32 %linear_index_base, 2
  %6 = and i32 %linear_index2, 14
  %linear_index1 = or i32 %linear_index_base, 1
  %7 = and i32 %linear_index1, 13
  %8 = and i32 %3, 12
  %9 = zext i32 %linear_index_base to i64
  %10 = getelementptr float, ptr addrspace(1) %arg046, i64 %9
  %11 = load <4 x float>, ptr addrspace(1) %10, align 16, !invariant.load !195
  %12 = extractelement <4 x float> %11, i32 0
  %13 = extractelement <4 x float> %11, i32 1
  %14 = extractelement <4 x float> %11, i32 2
  %15 = extractelement <4 x float> %11, i32 3
  %16 = load float, ptr addrspace(1) %arg250, align 16, !invariant.load !195
  %17 = zext i32 %4 to i64
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds [8192 x [304 x float]], ptr addrspace(1) %arg148, i64 0, i64 %17, i64 %18
  %20 = load <2 x float>, ptr addrspace(1) %19, align 16, !invariant.load !195
  %21 = extractelement <2 x float> %20, i32 0
  %22 = extractelement <2 x float> %20, i32 1
  %multiply.19 = fmul float %16, %21
  %subtract.20 = fsub float %12, %multiply.19
  %23 = getelementptr float, ptr addrspace(1) %arg352, i64 %9
  %24 = load <4 x float>, ptr addrspace(1) %23, align 16, !invariant.load !195
  %25 = extractelement <4 x float> %24, i32 0
  %26 = extractelement <4 x float> %24, i32 1
  %27 = extractelement <4 x float> %24, i32 2
  %28 = extractelement <4 x float> %24, i32 3
  %29 = getelementptr float, ptr addrspace(1) %arg454, i64 %9
  %30 = load <4 x float>, ptr addrspace(1) %29, align 16
  %31 = extractelement <4 x float> %30, i32 0
  %32 = extractelement <4 x float> %30, i32 1
  %33 = extractelement <4 x float> %30, i32 2
  %34 = extractelement <4 x float> %30, i32 3
  %35 = getelementptr [8192 x [1624 x float]], ptr addrspace(1) %arg760, i64 0, i64 %17, i64 %18
  %36 = getelementptr inbounds float, ptr addrspace(1) %35, i64 1608
  %37 = load <2 x float>, ptr addrspace(1) %36, align 16, !invariant.load !195
  %38 = extractelement <2 x float> %37, i32 0
  %39 = extractelement <2 x float> %37, i32 1
  %40 = getelementptr [8192 x [1624 x float]], ptr addrspace(1) %arg658, i64 0, i64 %17, i64 %18
  %41 = getelementptr inbounds float, ptr addrspace(1) %40, i64 1608
  %42 = load <2 x float>, ptr addrspace(1) %41, align 16, !invariant.load !195
  %43 = extractelement <2 x float> %42, i32 0
  %44 = extractelement <2 x float> %42, i32 1
  %add.23 = fadd float %38, %43
  %45 = getelementptr [8192 x [1624 x float]], ptr addrspace(1) %arg556, i64 0, i64 %17, i64 %18
  %46 = getelementptr inbounds float, ptr addrspace(1) %45, i64 1608
  %47 = load <2 x float>, ptr addrspace(1) %46, align 16, !invariant.load !195
  %48 = extractelement <2 x float> %47, i32 0
  %49 = extractelement <2 x float> %47, i32 1
  %add.25 = fadd float %add.23, %48
  %add.27 = fadd float %31, %add.25
  %multiply.28 = fmul float %16, %add.27
  %subtract.29 = fsub float %25, %multiply.28
  %50 = getelementptr float, ptr addrspace(1) %arg862, i64 %9
  %51 = load <4 x float>, ptr addrspace(1) %50, align 16, !invariant.load !195
  %52 = extractelement <4 x float> %51, i32 0
  %53 = extractelement <4 x float> %51, i32 1
  %54 = extractelement <4 x float> %51, i32 2
  %55 = extractelement <4 x float> %51, i32 3
  %56 = getelementptr inbounds [8192 x [304 x float]], ptr addrspace(1) %arg964, i64 0, i64 %17, i64 %18
  %57 = load <2 x float>, ptr addrspace(1) %56, align 16, !invariant.load !195
  %58 = extractelement <2 x float> %57, i32 0
  %59 = extractelement <2 x float> %57, i32 1
  %multiply.31 = fmul float %16, %58
  %subtract.32 = fsub float %52, %multiply.31
  %60 = getelementptr float, ptr addrspace(1) %arg1066, i64 %9
  %61 = load <4 x float>, ptr addrspace(1) %60, align 16, !invariant.load !195
  %62 = extractelement <4 x float> %61, i32 0
  %63 = extractelement <4 x float> %61, i32 1
  %64 = extractelement <4 x float> %61, i32 2
  %65 = extractelement <4 x float> %61, i32 3
  %66 = getelementptr inbounds [8192 x [304 x float]], ptr addrspace(1) %arg1168, i64 0, i64 %17, i64 %18
  %67 = load <2 x float>, ptr addrspace(1) %66, align 16, !invariant.load !195
  %68 = extractelement <2 x float> %67, i32 0
  %69 = extractelement <2 x float> %67, i32 1
  %multiply.34 = fmul float %16, %68
  %subtract.35 = fsub float %62, %multiply.34
  %70 = getelementptr float, ptr addrspace(1) %arg1270, i64 %9
  %71 = load <4 x float>, ptr addrspace(1) %70, align 16, !invariant.load !195
  %72 = extractelement <4 x float> %71, i32 0
  %73 = extractelement <4 x float> %71, i32 1
  %74 = extractelement <4 x float> %71, i32 2
  %75 = extractelement <4 x float> %71, i32 3
  %76 = getelementptr inbounds [8192 x [304 x float]], ptr addrspace(1) %arg1372, i64 0, i64 %17, i64 %18
  %77 = load <2 x float>, ptr addrspace(1) %76, align 16, !invariant.load !195
  %78 = extractelement <2 x float> %77, i32 0
  %79 = extractelement <2 x float> %77, i32 1
  %multiply.37 = fmul float %16, %78
  %subtract.38 = fsub float %72, %multiply.37
  %80 = getelementptr float, ptr addrspace(1) %arg1474, i64 %9
  %81 = load <4 x float>, ptr addrspace(1) %80, align 16, !invariant.load !195
  %82 = extractelement <4 x float> %81, i32 0
  %83 = extractelement <4 x float> %81, i32 1
  %84 = extractelement <4 x float> %81, i32 2
  %85 = extractelement <4 x float> %81, i32 3
  %86 = getelementptr inbounds [8192 x [304 x float]], ptr addrspace(1) %arg1576, i64 0, i64 %17, i64 %18
  %87 = load <2 x float>, ptr addrspace(1) %86, align 16, !invariant.load !195
  %88 = extractelement <2 x float> %87, i32 0
  %89 = extractelement <2 x float> %87, i32 1
  %multiply.40 = fmul float %16, %88
  %subtract.41 = fsub float %82, %multiply.40
  %90 = getelementptr float, ptr addrspace(1) %arg1678, i64 %9
  %91 = getelementptr float, ptr addrspace(1) %arg1780, i64 %9
  %92 = getelementptr float, ptr addrspace(1) %arg1882, i64 %9
  %93 = getelementptr float, ptr addrspace(1) %arg1984, i64 %9
  %94 = getelementptr float, ptr addrspace(1) %arg2086, i64 %9
  %95 = zext i32 %7 to i64
  %multiply.191 = fmul float %16, %22
  %subtract.202 = fsub float %13, %multiply.191
  %96 = getelementptr [8192 x [1624 x float]], ptr addrspace(1) %arg760, i64 0, i64 %17, i64 %95
  %97 = getelementptr [8192 x [1624 x float]], ptr addrspace(1) %arg658, i64 0, i64 %17, i64 %95
  %add.233 = fadd float %39, %44
  %98 = getelementptr [8192 x [1624 x float]], ptr addrspace(1) %arg556, i64 0, i64 %17, i64 %95
  %add.254 = fadd float %add.233, %49
  %add.275 = fadd float %32, %add.254
  %multiply.286 = fmul float %16, %add.275
  %subtract.297 = fsub float %26, %multiply.286
  %multiply.318 = fmul float %16, %59
  %subtract.329 = fsub float %53, %multiply.318
  %multiply.3410 = fmul float %16, %69
  %subtract.3511 = fsub float %63, %multiply.3410
  %multiply.3712 = fmul float %16, %79
  %subtract.3813 = fsub float %73, %multiply.3712
  %multiply.4014 = fmul float %16, %89
  %subtract.4115 = fsub float %83, %multiply.4014
  %99 = zext i32 %6 to i64
  %100 = getelementptr inbounds [8192 x [304 x float]], ptr addrspace(1) %arg148, i64 0, i64 %17, i64 %99
  %101 = load float, ptr addrspace(1) %100, align 8, !invariant.load !195
  %multiply.1916 = fmul float %16, %101
  %subtract.2017 = fsub float %14, %multiply.1916
  %102 = getelementptr [8192 x [1624 x float]], ptr addrspace(1) %arg760, i64 0, i64 %17, i64 %99
  %103 = getelementptr inbounds float, ptr addrspace(1) %102, i64 1608
  %104 = load float, ptr addrspace(1) %103, align 8, !invariant.load !195
  %105 = getelementptr [8192 x [1624 x float]], ptr addrspace(1) %arg658, i64 0, i64 %17, i64 %99
  %106 = getelementptr inbounds float, ptr addrspace(1) %105, i64 1608
  %107 = load float, ptr addrspace(1) %106, align 8, !invariant.load !195
  %add.2318 = fadd float %104, %107
  %108 = getelementptr [8192 x [1624 x float]], ptr addrspace(1) %arg556, i64 0, i64 %17, i64 %99
  %109 = getelementptr inbounds float, ptr addrspace(1) %108, i64 1608
  %110 = load float, ptr addrspace(1) %109, align 8, !invariant.load !195
  %add.2519 = fadd float %add.2318, %110
  %add.2720 = fadd float %33, %add.2519
  %multiply.2821 = fmul float %16, %add.2720
  %subtract.2922 = fsub float %27, %multiply.2821
  %111 = getelementptr inbounds [8192 x [304 x float]], ptr addrspace(1) %arg964, i64 0, i64 %17, i64 %99
  %112 = load float, ptr addrspace(1) %111, align 8, !invariant.load !195
  %multiply.3123 = fmul float %16, %112
  %subtract.3224 = fsub float %54, %multiply.3123
  %113 = getelementptr inbounds [8192 x [304 x float]], ptr addrspace(1) %arg1168, i64 0, i64 %17, i64 %99
  %114 = load float, ptr addrspace(1) %113, align 8, !invariant.load !195
  %multiply.3425 = fmul float %16, %114
  %subtract.3526 = fsub float %64, %multiply.3425
  %115 = getelementptr inbounds [8192 x [304 x float]], ptr addrspace(1) %arg1372, i64 0, i64 %17, i64 %99
  %116 = load float, ptr addrspace(1) %115, align 8, !invariant.load !195
  %multiply.3727 = fmul float %16, %116
  %subtract.3828 = fsub float %74, %multiply.3727
  %117 = getelementptr inbounds [8192 x [304 x float]], ptr addrspace(1) %arg1576, i64 0, i64 %17, i64 %99
  %118 = load float, ptr addrspace(1) %117, align 8, !invariant.load !195
  %multiply.4029 = fmul float %16, %118
  %subtract.4130 = fsub float %84, %multiply.4029
  %119 = zext i32 %5 to i64
  %120 = getelementptr inbounds [8192 x [304 x float]], ptr addrspace(1) %arg148, i64 0, i64 %17, i64 %119
  %121 = load float, ptr addrspace(1) %120, align 4, !invariant.load !195
  %multiply.1931 = fmul float %16, %121
  %subtract.2032 = fsub float %15, %multiply.1931
  %122 = getelementptr [8192 x [1624 x float]], ptr addrspace(1) %arg760, i64 0, i64 %17, i64 %119
  %123 = getelementptr inbounds float, ptr addrspace(1) %122, i64 1608
  %124 = load float, ptr addrspace(1) %123, align 4, !invariant.load !195
  %125 = getelementptr [8192 x [1624 x float]], ptr addrspace(1) %arg658, i64 0, i64 %17, i64 %119
  %126 = getelementptr inbounds float, ptr addrspace(1) %125, i64 1608
  %127 = load float, ptr addrspace(1) %126, align 4, !invariant.load !195
  %add.2333 = fadd float %124, %127
  %128 = getelementptr [8192 x [1624 x float]], ptr addrspace(1) %arg556, i64 0, i64 %17, i64 %119
  %129 = getelementptr inbounds float, ptr addrspace(1) %128, i64 1608
  %130 = load float, ptr addrspace(1) %129, align 4, !invariant.load !195
  %add.2534 = fadd float %add.2333, %130
  %add.2735 = fadd float %34, %add.2534
  %multiply.2836 = fmul float %16, %add.2735
  %subtract.2937 = fsub float %28, %multiply.2836
  %131 = getelementptr inbounds [8192 x [304 x float]], ptr addrspace(1) %arg964, i64 0, i64 %17, i64 %119
  %132 = load float, ptr addrspace(1) %131, align 4, !invariant.load !195
  %multiply.3138 = fmul float %16, %132
  %subtract.3239 = fsub float %55, %multiply.3138
  %133 = getelementptr inbounds [8192 x [304 x float]], ptr addrspace(1) %arg1168, i64 0, i64 %17, i64 %119
  %134 = load float, ptr addrspace(1) %133, align 4, !invariant.load !195
  %multiply.3440 = fmul float %16, %134
  %subtract.3541 = fsub float %65, %multiply.3440
  %135 = getelementptr inbounds [8192 x [304 x float]], ptr addrspace(1) %arg1372, i64 0, i64 %17, i64 %119
  %136 = load float, ptr addrspace(1) %135, align 4, !invariant.load !195
  %multiply.3742 = fmul float %16, %136
  %subtract.3843 = fsub float %75, %multiply.3742
  %137 = getelementptr inbounds [8192 x [304 x float]], ptr addrspace(1) %arg1576, i64 0, i64 %17, i64 %119
  %138 = load float, ptr addrspace(1) %137, align 4, !invariant.load !195
  %multiply.4044 = fmul float %16, %138
  %subtract.4145 = fsub float %85, %multiply.4044
  %139 = insertelement <4 x float> poison, float %subtract.20, i32 0
  %140 = insertelement <4 x float> %139, float %subtract.202, i32 1
  %141 = insertelement <4 x float> %140, float %subtract.2017, i32 2
  %142 = insertelement <4 x float> %141, float %subtract.2032, i32 3
  store <4 x float> %142, ptr addrspace(1) %90, align 16
  %143 = insertelement <4 x float> poison, float %subtract.29, i32 0
  %144 = insertelement <4 x float> %143, float %subtract.297, i32 1
  %145 = insertelement <4 x float> %144, float %subtract.2922, i32 2
  %146 = insertelement <4 x float> %145, float %subtract.2937, i32 3
  store <4 x float> %146, ptr addrspace(1) %91, align 16
  %147 = insertelement <4 x float> poison, float %subtract.32, i32 0
  %148 = insertelement <4 x float> %147, float %subtract.329, i32 1
  %149 = insertelement <4 x float> %148, float %subtract.3224, i32 2
  %150 = insertelement <4 x float> %149, float %subtract.3239, i32 3
  store <4 x float> %150, ptr addrspace(1) %92, align 16
  %151 = insertelement <4 x float> poison, float %subtract.35, i32 0
  %152 = insertelement <4 x float> %151, float %subtract.3511, i32 1
  %153 = insertelement <4 x float> %152, float %subtract.3526, i32 2
  %154 = insertelement <4 x float> %153, float %subtract.3541, i32 3
  store <4 x float> %154, ptr addrspace(1) %93, align 16
  %155 = insertelement <4 x float> poison, float %subtract.38, i32 0
  %156 = insertelement <4 x float> %155, float %subtract.3813, i32 1
  %157 = insertelement <4 x float> %156, float %subtract.3828, i32 2
  %158 = insertelement <4 x float> %157, float %subtract.3843, i32 3
  store <4 x float> %158, ptr addrspace(1) %94, align 16
  %159 = insertelement <4 x float> poison, float %subtract.41, i32 0
  %160 = insertelement <4 x float> %159, float %subtract.4115, i32 1
  %161 = insertelement <4 x float> %160, float %subtract.4130, i32 2
  %162 = insertelement <4 x float> %161, float %subtract.4145, i32 3
  store <4 x float> %162, ptr addrspace(1) %29, align 16
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_567(ptr noalias nocapture readonly align 128 dereferenceable(48496640) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(53215232) %arg1, ptr noalias nocapture readonly align 128 dereferenceable(53215232) %arg2, ptr noalias nocapture readonly align 128 dereferenceable(53215232) %arg3, ptr noalias nocapture writeonly align 128 dereferenceable(8388608) %arg4, ptr noalias nocapture writeonly align 128 dereferenceable(8388608) %arg5) local_unnamed_addr #6 {
entry:
  %arg513 = addrspacecast ptr %arg5 to ptr addrspace(1)
  %arg411 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg39 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg27 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg15 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg03 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !239
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %2 = shl nuw nsw i32 %0, 10
  %linear_index = or i32 %2, %1
  %linear_index.frozen = freeze i32 %linear_index
  %3 = udiv i32 %linear_index.frozen, 1480
  %4 = mul i32 %3, 1480
  %.decomposed = sub i32 %linear_index.frozen, %4
  %5 = zext i32 %linear_index to i64
  %6 = getelementptr inbounds float, ptr addrspace(1) %arg03, i64 %5
  %7 = load float, ptr addrspace(1) %6, align 4, !invariant.load !195
  %8 = zext i32 %3 to i64
  %9 = zext i32 %.decomposed to i64
  %10 = getelementptr [8192 x [1624 x float]], ptr addrspace(1) %arg39, i64 0, i64 %8, i64 %9
  %11 = getelementptr inbounds float, ptr addrspace(1) %10, i64 128
  %12 = load float, ptr addrspace(1) %11, align 4, !invariant.load !195
  %13 = getelementptr [8192 x [1624 x float]], ptr addrspace(1) %arg27, i64 0, i64 %8, i64 %9
  %14 = getelementptr inbounds float, ptr addrspace(1) %13, i64 128
  %15 = load float, ptr addrspace(1) %14, align 4, !invariant.load !195
  %add.7 = fadd float %12, %15
  %16 = getelementptr [8192 x [1624 x float]], ptr addrspace(1) %arg15, i64 0, i64 %8, i64 %9
  %17 = getelementptr inbounds float, ptr addrspace(1) %16, i64 128
  %18 = load float, ptr addrspace(1) %17, align 4, !invariant.load !195
  %add.9 = fadd float %add.7, %18
  %add.11 = fadd float %7, %add.9
  %19 = icmp ugt i32 %.decomposed, 1223
  %20 = add nsw i32 %.decomposed, -1224
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds [8192 x [256 x float]], ptr addrspace(1) %arg411, i64 0, i64 %8, i64 %21
  br i1 %19, label %slice0-true, label %slice0-after

fusion_567.in_bounds-after:                       ; preds = %slice0-after, %slice1-true
  ret void

slice0-after:                                     ; preds = %slice0-true, %entry
  %23 = add nsw i32 %.decomposed, -968
  %24 = icmp ult i32 %23, 256
  %25 = zext i32 %23 to i64
  %26 = getelementptr inbounds [8192 x [256 x float]], ptr addrspace(1) %arg513, i64 0, i64 %8, i64 %25
  br i1 %24, label %slice1-true, label %fusion_567.in_bounds-after

slice0-true:                                      ; preds = %entry
  store float %add.11, ptr addrspace(1) %22, align 4
  br label %slice0-after

slice1-true:                                      ; preds = %slice0-after
  store float %add.11, ptr addrspace(1) %26, align 4
  br label %fusion_567.in_bounds-after
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_569(ptr noalias nocapture readonly align 128 dereferenceable(48496640) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(53215232) %arg1, ptr noalias nocapture readonly align 128 dereferenceable(53215232) %arg2, ptr noalias nocapture readonly align 128 dereferenceable(53215232) %arg3, ptr noalias nocapture writeonly align 128 dereferenceable(31719424) %arg4) local_unnamed_addr #6 {
entry:
  %arg418 = addrspacecast ptr %arg4 to ptr addrspace(1)
  %arg316 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg214 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg112 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg010 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !240
  %1 = shl nuw nsw i32 %0, 10
  %2 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !200
  %3 = shl nuw nsw i32 %2, 2
  %linear_index_base = or i32 %1, %3
  %linear_index3 = or i32 %linear_index_base, 3
  %linear_index_base.frozen = freeze i32 %linear_index_base
  %4 = udiv i32 %linear_index_base.frozen, 968
  %5 = urem i32 %linear_index3, 968
  %linear_index2 = or i32 %linear_index_base, 2
  %6 = urem i32 %linear_index2, 968
  %linear_index1 = or i32 %linear_index_base, 1
  %7 = urem i32 %linear_index1, 968
  %8 = mul i32 %4, 968
  %.decomposed = sub i32 %linear_index_base.frozen, %8
  %9 = zext i32 %4 to i64
  %10 = zext i32 %.decomposed to i64
  %11 = getelementptr inbounds [8192 x [1480 x float]], ptr addrspace(1) %arg010, i64 0, i64 %9, i64 %10
  %12 = load float, ptr addrspace(1) %11, align 4, !invariant.load !195
  %13 = getelementptr [8192 x [1624 x float]], ptr addrspace(1) %arg316, i64 0, i64 %9, i64 %10
  %14 = getelementptr inbounds float, ptr addrspace(1) %13, i64 128
  %15 = load float, ptr addrspace(1) %14, align 4, !invariant.load !195
  %16 = getelementptr [8192 x [1624 x float]], ptr addrspace(1) %arg214, i64 0, i64 %9, i64 %10
  %17 = getelementptr inbounds float, ptr addrspace(1) %16, i64 128
  %18 = load float, ptr addrspace(1) %17, align 4, !invariant.load !195
  %add.7 = fadd float %15, %18
  %19 = getelementptr [8192 x [1624 x float]], ptr addrspace(1) %arg112, i64 0, i64 %9, i64 %10
  %20 = getelementptr inbounds float, ptr addrspace(1) %19, i64 128
  %21 = load float, ptr addrspace(1) %20, align 4, !invariant.load !195
  %add.9 = fadd float %add.7, %21
  %add.11 = fadd float %12, %add.9
  %22 = zext i32 %linear_index_base to i64
  %23 = getelementptr float, ptr addrspace(1) %arg418, i64 %22
  %24 = zext i32 %7 to i64
  %25 = getelementptr inbounds [8192 x [1480 x float]], ptr addrspace(1) %arg010, i64 0, i64 %9, i64 %24
  %26 = load float, ptr addrspace(1) %25, align 4, !invariant.load !195
  %27 = getelementptr [8192 x [1624 x float]], ptr addrspace(1) %arg316, i64 0, i64 %9, i64 %24
  %28 = getelementptr inbounds float, ptr addrspace(1) %27, i64 128
  %29 = load float, ptr addrspace(1) %28, align 4, !invariant.load !195
  %30 = getelementptr [8192 x [1624 x float]], ptr addrspace(1) %arg214, i64 0, i64 %9, i64 %24
  %31 = getelementptr inbounds float, ptr addrspace(1) %30, i64 128
  %32 = load float, ptr addrspace(1) %31, align 4, !invariant.load !195
  %add.71 = fadd float %29, %32
  %33 = getelementptr [8192 x [1624 x float]], ptr addrspace(1) %arg112, i64 0, i64 %9, i64 %24
  %34 = getelementptr inbounds float, ptr addrspace(1) %33, i64 128
  %35 = load float, ptr addrspace(1) %34, align 4, !invariant.load !195
  %add.92 = fadd float %add.71, %35
  %add.113 = fadd float %26, %add.92
  %36 = zext i32 %6 to i64
  %37 = getelementptr inbounds [8192 x [1480 x float]], ptr addrspace(1) %arg010, i64 0, i64 %9, i64 %36
  %38 = load float, ptr addrspace(1) %37, align 4, !invariant.load !195
  %39 = getelementptr [8192 x [1624 x float]], ptr addrspace(1) %arg316, i64 0, i64 %9, i64 %36
  %40 = getelementptr inbounds float, ptr addrspace(1) %39, i64 128
  %41 = load float, ptr addrspace(1) %40, align 4, !invariant.load !195
  %42 = getelementptr [8192 x [1624 x float]], ptr addrspace(1) %arg214, i64 0, i64 %9, i64 %36
  %43 = getelementptr inbounds float, ptr addrspace(1) %42, i64 128
  %44 = load float, ptr addrspace(1) %43, align 4, !invariant.load !195
  %add.74 = fadd float %41, %44
  %45 = getelementptr [8192 x [1624 x float]], ptr addrspace(1) %arg112, i64 0, i64 %9, i64 %36
  %46 = getelementptr inbounds float, ptr addrspace(1) %45, i64 128
  %47 = load float, ptr addrspace(1) %46, align 4, !invariant.load !195
  %add.95 = fadd float %add.74, %47
  %add.116 = fadd float %38, %add.95
  %48 = zext i32 %5 to i64
  %49 = getelementptr inbounds [8192 x [1480 x float]], ptr addrspace(1) %arg010, i64 0, i64 %9, i64 %48
  %50 = load float, ptr addrspace(1) %49, align 4, !invariant.load !195
  %51 = getelementptr [8192 x [1624 x float]], ptr addrspace(1) %arg316, i64 0, i64 %9, i64 %48
  %52 = getelementptr inbounds float, ptr addrspace(1) %51, i64 128
  %53 = load float, ptr addrspace(1) %52, align 4, !invariant.load !195
  %54 = getelementptr [8192 x [1624 x float]], ptr addrspace(1) %arg214, i64 0, i64 %9, i64 %48
  %55 = getelementptr inbounds float, ptr addrspace(1) %54, i64 128
  %56 = load float, ptr addrspace(1) %55, align 4, !invariant.load !195
  %add.77 = fadd float %53, %56
  %57 = getelementptr [8192 x [1624 x float]], ptr addrspace(1) %arg112, i64 0, i64 %9, i64 %48
  %58 = getelementptr inbounds float, ptr addrspace(1) %57, i64 128
  %59 = load float, ptr addrspace(1) %58, align 4, !invariant.load !195
  %add.98 = fadd float %add.77, %59
  %add.119 = fadd float %50, %add.98
  %60 = insertelement <4 x float> poison, float %add.11, i32 0
  %61 = insertelement <4 x float> %60, float %add.113, i32 1
  %62 = insertelement <4 x float> %61, float %add.116, i32 2
  %63 = insertelement <4 x float> %62, float %add.119, i32 3
  store <4 x float> %63, ptr addrspace(1) %23, align 16
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none)
define void @concatenate_307(ptr noalias nocapture readonly align 16 dereferenceable(4194304) %arg0, ptr noalias nocapture readonly align 16 dereferenceable(49020928) %arg1, ptr noalias nocapture writeonly align 128 dereferenceable(53215232) %arg2) local_unnamed_addr #5 {
entry:
  %arg240 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg138 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg036 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !241
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !200
  %2 = shl nuw nsw i32 %0, 10
  %3 = shl nuw nsw i32 %1, 2
  %linear_index_base = or i32 %2, %3
  %linear_index_base.frozen = freeze i32 %linear_index_base
  %4 = udiv i32 %linear_index_base.frozen, 1624
  %5 = mul i32 %4, 1624
  %.decomposed = sub i32 %linear_index_base.frozen, %5
  %linear_index1 = or i32 %linear_index_base, 1
  %6 = urem i32 %linear_index1, 1624
  %linear_index2 = or i32 %linear_index_base, 2
  %7 = urem i32 %linear_index2, 1624
  %linear_index3 = or i32 %linear_index_base, 3
  %8 = urem i32 %linear_index3, 1624
  %9 = icmp ult i32 %.decomposed, 128
  br i1 %9, label %concatenate.pivot.0., label %concatenate.pivot.128.1

concatenate.pivot.0.:                             ; preds = %entry
  %10 = udiv i32 %linear_index_base, 1624
  %11 = shl nuw nsw i32 %10, 7
  %12 = add nuw nsw i32 %11, %.decomposed
  br label %concatenate.3.merge

concatenate.pivot.128.1:                          ; preds = %entry
  %13 = add nsw i32 %.decomposed, -128
  %14 = udiv i32 %linear_index_base, 1624
  %15 = mul nuw nsw i32 %14, 1496
  %16 = add nuw nsw i32 %13, %15
  br label %concatenate.3.merge

concatenate.3.merge:                              ; preds = %concatenate.pivot.128.1, %concatenate.pivot.0.
  %.sink29 = phi i32 [ %16, %concatenate.pivot.128.1 ], [ %12, %concatenate.pivot.0. ]
  %arg1.sink = phi ptr addrspace(1) [ %arg138, %concatenate.pivot.128.1 ], [ %arg036, %concatenate.pivot.0. ]
  %17 = zext i32 %.sink29 to i64
  %18 = getelementptr inbounds float, ptr addrspace(1) %arg1.sink, i64 %17
  %19 = load float, ptr addrspace(1) %18, align 4, !invariant.load !195
  %20 = zext i32 %linear_index_base to i64
  %21 = getelementptr float, ptr addrspace(1) %arg240, i64 %20
  store float %19, ptr addrspace(1) %21, align 16
  %22 = icmp ult i32 %6, 128
  br i1 %22, label %concatenate.pivot.0.6, label %concatenate.pivot.128.7

concatenate.pivot.0.6:                            ; preds = %concatenate.3.merge
  %23 = udiv i32 %linear_index_base, 1624
  %24 = shl nuw nsw i32 %23, 7
  %25 = add nuw nsw i32 %24, %6
  br label %concatenate.3.merge2

concatenate.pivot.128.7:                          ; preds = %concatenate.3.merge
  %26 = add nsw i32 %6, -128
  %27 = udiv i32 %linear_index_base, 1624
  %28 = mul nuw nsw i32 %27, 1496
  %29 = add nuw nsw i32 %26, %28
  br label %concatenate.3.merge2

concatenate.3.merge2:                             ; preds = %concatenate.pivot.128.7, %concatenate.pivot.0.6
  %.sink31 = phi i32 [ %29, %concatenate.pivot.128.7 ], [ %25, %concatenate.pivot.0.6 ]
  %arg1.sink30 = phi ptr addrspace(1) [ %arg138, %concatenate.pivot.128.7 ], [ %arg036, %concatenate.pivot.0.6 ]
  %30 = zext i32 %.sink31 to i64
  %31 = getelementptr inbounds float, ptr addrspace(1) %arg1.sink30, i64 %30
  %32 = load float, ptr addrspace(1) %31, align 4, !invariant.load !195
  %33 = getelementptr inbounds float, ptr addrspace(1) %21, i64 1
  store float %32, ptr addrspace(1) %33, align 4
  %34 = icmp ult i32 %7, 128
  br i1 %34, label %concatenate.pivot.0.12, label %concatenate.pivot.128.13

concatenate.pivot.0.12:                           ; preds = %concatenate.3.merge2
  %35 = udiv i32 %linear_index_base, 1624
  %36 = shl nuw nsw i32 %35, 7
  %37 = add nuw nsw i32 %36, %7
  br label %concatenate.3.merge8

concatenate.pivot.128.13:                         ; preds = %concatenate.3.merge2
  %38 = add nsw i32 %7, -128
  %39 = udiv i32 %linear_index_base, 1624
  %40 = mul nuw nsw i32 %39, 1496
  %41 = add nuw nsw i32 %38, %40
  br label %concatenate.3.merge8

concatenate.3.merge8:                             ; preds = %concatenate.pivot.128.13, %concatenate.pivot.0.12
  %.sink33 = phi i32 [ %41, %concatenate.pivot.128.13 ], [ %37, %concatenate.pivot.0.12 ]
  %arg1.sink32 = phi ptr addrspace(1) [ %arg138, %concatenate.pivot.128.13 ], [ %arg036, %concatenate.pivot.0.12 ]
  %42 = zext i32 %.sink33 to i64
  %43 = getelementptr inbounds float, ptr addrspace(1) %arg1.sink32, i64 %42
  %44 = load float, ptr addrspace(1) %43, align 4, !invariant.load !195
  %45 = getelementptr inbounds float, ptr addrspace(1) %21, i64 2
  store float %44, ptr addrspace(1) %45, align 8
  %46 = icmp ult i32 %8, 128
  br i1 %46, label %concatenate.pivot.0.18, label %concatenate.pivot.128.19

concatenate.pivot.0.18:                           ; preds = %concatenate.3.merge8
  %47 = udiv i32 %linear_index_base, 1624
  %48 = shl nuw nsw i32 %47, 7
  %49 = add nuw nsw i32 %48, %8
  br label %concatenate.3.merge14

concatenate.pivot.128.19:                         ; preds = %concatenate.3.merge8
  %50 = add nsw i32 %8, -128
  %51 = mul nuw nsw i32 %4, 1496
  %52 = add nuw nsw i32 %50, %51
  br label %concatenate.3.merge14

concatenate.3.merge14:                            ; preds = %concatenate.pivot.128.19, %concatenate.pivot.0.18
  %.sink35 = phi i32 [ %52, %concatenate.pivot.128.19 ], [ %49, %concatenate.pivot.0.18 ]
  %arg1.sink34 = phi ptr addrspace(1) [ %arg138, %concatenate.pivot.128.19 ], [ %arg036, %concatenate.pivot.0.18 ]
  %53 = zext i32 %.sink35 to i64
  %54 = getelementptr inbounds float, ptr addrspace(1) %arg1.sink34, i64 %53
  %55 = load float, ptr addrspace(1) %54, align 4, !invariant.load !195
  %56 = getelementptr inbounds float, ptr addrspace(1) %21, i64 3
  store float %55, ptr addrspace(1) %56, align 4
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_5(ptr noalias nocapture readonly align 16 dereferenceable(46080) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(584640) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture writeonly align 128 dereferenceable(46080) %arg3) local_unnamed_addr #6 {
entry:
  %arg39 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg27 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg15 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg03 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !242
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !199
  %2 = shl nuw nsw i32 %0, 10
  %linear_index = or i32 %2, %1
  %3 = icmp ult i32 %linear_index, 11520
  br i1 %3, label %fusion_5.in_bounds-true, label %fusion_5.in_bounds-after

fusion_5.in_bounds-after:                         ; preds = %fusion_5.in_bounds-true, %entry
  ret void

fusion_5.in_bounds-true:                          ; preds = %entry
  %.lhs.trunc = trunc i32 %linear_index to i16
  %.lhs.trunc.frozen = freeze i16 %.lhs.trunc
  %4 = udiv i16 %.lhs.trunc.frozen, 90
  %5 = mul i16 %4, 90
  %.decomposed = sub i16 %.lhs.trunc.frozen, %5
  %6 = zext i32 %linear_index to i64
  %7 = getelementptr inbounds float, ptr addrspace(1) %arg03, i64 %6
  %8 = load float, ptr addrspace(1) %7, align 4, !invariant.load !195
  %9 = load float, ptr addrspace(1) %arg27, align 16, !invariant.load !195
  %10 = zext i16 %4 to i64
  %11 = zext i16 %.decomposed to i64
  %12 = getelementptr inbounds [1624 x [90 x float]], ptr addrspace(1) %arg15, i64 0, i64 %10, i64 %11
  %13 = load float, ptr addrspace(1) %12, align 4, !invariant.load !195
  %multiply.6 = fmul float %9, %13
  %subtract.7 = fsub float %8, %multiply.6
  %14 = getelementptr inbounds float, ptr addrspace(1) %arg39, i64 %6
  store float %subtract.7, ptr addrspace(1) %14, align 4
  br label %fusion_5.in_bounds-after
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite)
define void @fusion_6(ptr noalias nocapture readonly align 16 dereferenceable(538560) %arg0, ptr noalias nocapture readonly align 128 dereferenceable(584640) %arg1, ptr noalias nocapture readonly align 16 dereferenceable(4) %arg2, ptr noalias nocapture writeonly align 128 dereferenceable(538560) %arg3) local_unnamed_addr #6 {
entry:
  %arg315 = addrspacecast ptr %arg3 to ptr addrspace(1)
  %arg213 = addrspacecast ptr %arg2 to ptr addrspace(1)
  %arg111 = addrspacecast ptr %arg1 to ptr addrspace(1)
  %arg09 = addrspacecast ptr %arg0 to ptr addrspace(1)
  %0 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !243
  %1 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !200
  %2 = shl nuw nsw i32 %0, 10
  %3 = shl nuw nsw i32 %1, 2
  %linear_index_base = or i32 %2, %3
  %4 = icmp ult i32 %linear_index_base, 134640
  br i1 %4, label %fusion_6.in_bounds-true, label %fusion_6.in_bounds-after

fusion_6.in_bounds-after:                         ; preds = %fusion_6.in_bounds-true, %entry
  ret void

fusion_6.in_bounds-true:                          ; preds = %entry
  %linear_index3 = or i32 %linear_index_base, 3
  %linear_index3.frozen = freeze i32 %linear_index3
  %5 = udiv i32 %linear_index3.frozen, 90
  %6 = mul i32 %5, 90
  %.decomposed = sub i32 %linear_index3.frozen, %6
  %linear_index2 = or i32 %linear_index_base, 2
  %linear_index2.frozen = freeze i32 %linear_index2
  %7 = udiv i32 %linear_index2.frozen, 90
  %8 = mul i32 %7, 90
  %.decomposed7 = sub i32 %linear_index2.frozen, %8
  %linear_index1 = or i32 %linear_index_base, 1
  %linear_index_base.frozen = freeze i32 %linear_index_base
  %9 = udiv i32 %linear_index_base.frozen, 90
  %10 = urem i32 %linear_index1, 90
  %11 = mul i32 %9, 90
  %.decomposed8 = sub i32 %linear_index_base.frozen, %11
  %12 = zext i32 %linear_index_base to i64
  %13 = getelementptr float, ptr addrspace(1) %arg09, i64 %12
  %14 = load <4 x float>, ptr addrspace(1) %13, align 16, !invariant.load !195
  %15 = extractelement <4 x float> %14, i32 0
  %16 = extractelement <4 x float> %14, i32 1
  %17 = extractelement <4 x float> %14, i32 2
  %18 = extractelement <4 x float> %14, i32 3
  %19 = load float, ptr addrspace(1) %arg213, align 16, !invariant.load !195
  %20 = zext i32 %.decomposed8 to i64
  %21 = zext i32 %9 to i64
  %22 = getelementptr [1624 x [90 x float]], ptr addrspace(1) %arg111, i64 0, i64 %21, i64 %20
  %23 = getelementptr inbounds float, ptr addrspace(1) %22, i64 11520
  %24 = load float, ptr addrspace(1) %23, align 4, !invariant.load !195
  %multiply.6 = fmul float %19, %24
  %subtract.7 = fsub float %15, %multiply.6
  %25 = getelementptr float, ptr addrspace(1) %arg315, i64 %12
  %26 = zext i32 %10 to i64
  %27 = getelementptr [1624 x [90 x float]], ptr addrspace(1) %arg111, i64 0, i64 %21, i64 %26
  %28 = getelementptr inbounds float, ptr addrspace(1) %27, i64 11520
  %29 = load float, ptr addrspace(1) %28, align 4, !invariant.load !195
  %multiply.61 = fmul float %19, %29
  %subtract.72 = fsub float %16, %multiply.61
  %30 = zext i32 %.decomposed7 to i64
  %31 = zext i32 %7 to i64
  %32 = getelementptr [1624 x [90 x float]], ptr addrspace(1) %arg111, i64 0, i64 %31, i64 %30
  %33 = getelementptr inbounds float, ptr addrspace(1) %32, i64 11520
  %34 = load float, ptr addrspace(1) %33, align 4, !invariant.load !195
  %multiply.63 = fmul float %19, %34
  %subtract.74 = fsub float %17, %multiply.63
  %35 = zext i32 %.decomposed to i64
  %36 = zext i32 %5 to i64
  %37 = getelementptr [1624 x [90 x float]], ptr addrspace(1) %arg111, i64 0, i64 %36, i64 %35
  %38 = getelementptr inbounds float, ptr addrspace(1) %37, i64 11520
  %39 = load float, ptr addrspace(1) %38, align 4, !invariant.load !195
  %multiply.65 = fmul float %19, %39
  %subtract.76 = fsub float %18, %multiply.65
  %40 = insertelement <4 x float> poison, float %subtract.7, i32 0
  %41 = insertelement <4 x float> %40, float %subtract.72, i32 1
  %42 = insertelement <4 x float> %41, float %subtract.74, i32 2
  %43 = insertelement <4 x float> %42, float %subtract.76, i32 3
  store <4 x float> %43, ptr addrspace(1) %25, align 16
  br label %fusion_6.in_bounds-after
}

attributes #0 = { nounwind }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #3 = { convergent nocallback nounwind }
attributes #4 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) }
attributes #5 = { mustprogress nofree nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) }
attributes #6 = { mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #7 = { nofree nosync nounwind memory(argmem: readwrite) }

!nvvm.annotations = !{!0, !1, !2, !3, !4, !5, !6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191}
!llvm.module.flags = !{!192}

!0 = !{ptr @fusion_564, !"kernel", i32 1}
!1 = !{ptr @fusion_564, !"reqntidx", i32 512}
!2 = !{ptr @fusion_434, !"kernel", i32 1}
!3 = !{ptr @fusion_434, !"reqntidx", i32 1}
!4 = !{ptr @fusion_570, !"kernel", i32 1}
!5 = !{ptr @fusion_570, !"reqntidx", i32 512}
!6 = !{ptr @fusion_547, !"kernel", i32 1}
!7 = !{ptr @fusion_547, !"reqntidx", i32 512}
!8 = !{ptr @fusion_563, !"kernel", i32 1}
!9 = !{ptr @fusion_563, !"reqntidx", i32 512}
!10 = !{ptr @fusion_445, !"kernel", i32 1}
!11 = !{ptr @fusion_445, !"reqntidx", i32 1}
!12 = !{ptr @concatenate_267, !"kernel", i32 1}
!13 = !{ptr @concatenate_267, !"reqntidx", i32 1024}
!14 = !{ptr @fusion_310, !"kernel", i32 1}
!15 = !{ptr @fusion_310, !"reqntidx", i32 1024}
!16 = !{ptr @concatenate_236, !"kernel", i32 1}
!17 = !{ptr @concatenate_236, !"reqntidx", i32 1024}
!18 = !{ptr @concatenate_262, !"kernel", i32 1}
!19 = !{ptr @concatenate_262, !"reqntidx", i32 1024}
!20 = !{ptr @concatenate_237, !"kernel", i32 1}
!21 = !{ptr @concatenate_237, !"reqntidx", i32 1024}
!22 = !{ptr @concatenate_303, !"kernel", i32 1}
!23 = !{ptr @concatenate_303, !"reqntidx", i32 1024}
!24 = !{ptr @concatenate_263, !"kernel", i32 1}
!25 = !{ptr @concatenate_263, !"reqntidx", i32 1024}
!26 = !{ptr @concatenate_242, !"kernel", i32 1}
!27 = !{ptr @concatenate_242, !"reqntidx", i32 1024}
!28 = !{ptr @concatenate_260, !"kernel", i32 1}
!29 = !{ptr @concatenate_260, !"reqntidx", i32 1024}
!30 = !{ptr @concatenate_238, !"kernel", i32 1}
!31 = !{ptr @concatenate_238, !"reqntidx", i32 1024}
!32 = !{ptr @concatenate_298, !"kernel", i32 1}
!33 = !{ptr @concatenate_298, !"reqntidx", i32 1024}
!34 = !{ptr @concatenate_255, !"kernel", i32 1}
!35 = !{ptr @concatenate_255, !"reqntidx", i32 256}
!36 = !{ptr @concatenate_235, !"kernel", i32 1}
!37 = !{ptr @concatenate_235, !"reqntidx", i32 256}
!38 = !{ptr @concatenate_269, !"kernel", i32 1}
!39 = !{ptr @concatenate_269, !"reqntidx", i32 256}
!40 = !{ptr @fusion_408, !"kernel", i32 1}
!41 = !{ptr @fusion_408, !"reqntidx", i32 1024}
!42 = !{ptr @fusion_392, !"kernel", i32 1}
!43 = !{ptr @fusion_392, !"reqntidx", i32 1024}
!44 = !{ptr @fusion_376, !"kernel", i32 1}
!45 = !{ptr @fusion_376, !"reqntidx", i32 1024}
!46 = !{ptr @fusion_644, !"kernel", i32 1}
!47 = !{ptr @fusion_644, !"reqntidx", i32 1024}
!48 = !{ptr @fusion_304, !"kernel", i32 1}
!49 = !{ptr @fusion_304, !"reqntidx", i32 1024}
!50 = !{ptr @fusion_614, !"kernel", i32 1}
!51 = !{ptr @fusion_614, !"reqntidx", i32 1024}
!52 = !{ptr @fusion_286, !"kernel", i32 1}
!53 = !{ptr @fusion_286, !"reqntidx", i32 1024}
!54 = !{ptr @fusion_398, !"kernel", i32 1}
!55 = !{ptr @fusion_398, !"reqntidx", i32 1024}
!56 = !{ptr @fusion_280, !"kernel", i32 1}
!57 = !{ptr @fusion_280, !"reqntidx", i32 1024}
!58 = !{ptr @fusion_285, !"kernel", i32 1}
!59 = !{ptr @fusion_285, !"reqntidx", i32 128}
!60 = !{ptr @fusion_639, !"kernel", i32 1}
!61 = !{ptr @fusion_639, !"reqntidx", i32 1024}
!62 = !{ptr @fusion_208, !"kernel", i32 1}
!63 = !{ptr @fusion_208, !"reqntidx", i32 256}
!64 = !{ptr @fusion_268, !"kernel", i32 1}
!65 = !{ptr @fusion_268, !"reqntidx", i32 1024}
!66 = !{ptr @fusion_270, !"kernel", i32 1}
!67 = !{ptr @fusion_270, !"reqntidx", i32 1024}
!68 = !{ptr @fusion_596, !"kernel", i32 1}
!69 = !{ptr @fusion_596, !"reqntidx", i32 1024}
!70 = !{ptr @fusion_415, !"kernel", i32 1}
!71 = !{ptr @fusion_415, !"reqntidx", i32 128}
!72 = !{ptr @fusion_431, !"kernel", i32 1}
!73 = !{ptr @fusion_431, !"reqntidx", i32 128}
!74 = !{ptr @fusion_205, !"kernel", i32 1}
!75 = !{ptr @fusion_205, !"reqntidx", i32 1024}
!76 = !{ptr @concatenate_277, !"kernel", i32 1}
!77 = !{ptr @concatenate_277, !"reqntidx", i32 256}
!78 = !{ptr @concatenate_287, !"kernel", i32 1}
!79 = !{ptr @concatenate_287, !"reqntidx", i32 256}
!80 = !{ptr @fusion_175, !"kernel", i32 1}
!81 = !{ptr @fusion_175, !"reqntidx", i32 1024}
!82 = !{ptr @fusion_213, !"kernel", i32 1}
!83 = !{ptr @fusion_213, !"reqntidx", i32 1024}
!84 = !{ptr @fusion_202, !"kernel", i32 1}
!85 = !{ptr @fusion_202, !"reqntidx", i32 128}
!86 = !{ptr @concatenate_275, !"kernel", i32 1}
!87 = !{ptr @concatenate_275, !"reqntidx", i32 256}
!88 = !{ptr @fusion_128, !"kernel", i32 1}
!89 = !{ptr @fusion_128, !"reqntidx", i32 1024}
!90 = !{ptr @concatenate_270, !"kernel", i32 1}
!91 = !{ptr @concatenate_270, !"reqntidx", i32 256}
!92 = !{ptr @fusion_260, !"kernel", i32 1}
!93 = !{ptr @fusion_260, !"reqntidx", i32 1024}
!94 = !{ptr @concatenate_300, !"kernel", i32 1}
!95 = !{ptr @concatenate_300, !"reqntidx", i32 256}
!96 = !{ptr @fusion_364, !"kernel", i32 1}
!97 = !{ptr @fusion_364, !"reqntidx", i32 1024}
!98 = !{ptr @concatenate_297, !"kernel", i32 1}
!99 = !{ptr @concatenate_297, !"reqntidx", i32 256}
!100 = !{ptr @fusion_365, !"kernel", i32 1}
!101 = !{ptr @fusion_365, !"reqntidx", i32 256}
!102 = !{ptr @fusion_137, !"kernel", i32 1}
!103 = !{ptr @fusion_137, !"reqntidx", i32 1024}
!104 = !{ptr @fusion_86, !"kernel", i32 1}
!105 = !{ptr @fusion_86, !"reqntidx", i32 256}
!106 = !{ptr @fusion_112, !"kernel", i32 1}
!107 = !{ptr @fusion_112, !"reqntidx", i32 256}
!108 = !{ptr @fusion_114, !"kernel", i32 1}
!109 = !{ptr @fusion_114, !"reqntidx", i32 256}
!110 = !{ptr @fusion_110, !"kernel", i32 1}
!111 = !{ptr @fusion_110, !"reqntidx", i32 1024}
!112 = !{ptr @fusion_466, !"kernel", i32 1}
!113 = !{ptr @fusion_466, !"reqntidx", i32 1024}
!114 = !{ptr @fusion_453, !"kernel", i32 1}
!115 = !{ptr @fusion_453, !"reqntidx", i32 1024}
!116 = !{ptr @fusion_8, !"kernel", i32 1}
!117 = !{ptr @fusion_8, !"reqntidx", i32 1024}
!118 = !{ptr @fusion_9, !"kernel", i32 1}
!119 = !{ptr @fusion_9, !"reqntidx", i32 6}
!120 = !{ptr @fusion_4, !"kernel", i32 1}
!121 = !{ptr @fusion_4, !"reqntidx", i32 1024}
!122 = !{ptr @fusion_449, !"kernel", i32 1}
!123 = !{ptr @fusion_449, !"reqntidx", i32 256}
!124 = !{ptr @fusion_12, !"kernel", i32 1}
!125 = !{ptr @fusion_12, !"reqntidx", i32 1024}
!126 = !{ptr @reduce, !"kernel", i32 1}
!127 = !{ptr @reduce, !"reqntidx", i32 1024}
!128 = !{ptr @fusion_11, !"kernel", i32 1}
!129 = !{ptr @fusion_11, !"reqntidx", i32 90}
!130 = !{ptr @fusion_50, !"kernel", i32 1}
!131 = !{ptr @fusion_50, !"reqntidx", i32 1024}
!132 = !{ptr @fusion_60, !"kernel", i32 1}
!133 = !{ptr @fusion_60, !"reqntidx", i32 1024}
!134 = !{ptr @fusion_375, !"kernel", i32 1}
!135 = !{ptr @fusion_375, !"reqntidx", i32 256}
!136 = !{ptr @fusion_48, !"kernel", i32 1}
!137 = !{ptr @fusion_48, !"reqntidx", i32 256}
!138 = !{ptr @fusion_34, !"kernel", i32 1}
!139 = !{ptr @fusion_34, !"reqntidx", i32 1024}
!140 = !{ptr @fusion_670, !"kernel", i32 1}
!141 = !{ptr @fusion_670, !"reqntidx", i32 1024}
!142 = !{ptr @add_168, !"kernel", i32 1}
!143 = !{ptr @add_168, !"reqntidx", i32 256}
!144 = !{ptr @fusion_665, !"kernel", i32 1}
!145 = !{ptr @fusion_665, !"reqntidx", i32 1024}
!146 = !{ptr @fusion_41, !"kernel", i32 1}
!147 = !{ptr @fusion_41, !"reqntidx", i32 512}
!148 = !{ptr @fusion_29, !"kernel", i32 1}
!149 = !{ptr @fusion_29, !"reqntidx", i32 1024}
!150 = !{ptr @fusion_30, !"kernel", i32 1}
!151 = !{ptr @fusion_30, !"reqntidx", i32 256}
!152 = !{ptr @concatenate_271, !"kernel", i32 1}
!153 = !{ptr @concatenate_271, !"reqntidx", i32 256}
!154 = !{ptr @fusion_266, !"kernel", i32 1}
!155 = !{ptr @fusion_266, !"reqntidx", i32 1024}
!156 = !{ptr @fusion_248, !"kernel", i32 1}
!157 = !{ptr @fusion_248, !"reqntidx", i32 1024}
!158 = !{ptr @fusion_383, !"kernel", i32 1}
!159 = !{ptr @fusion_383, !"reqntidx", i32 1024}
!160 = !{ptr @concatenate_299, !"kernel", i32 1}
!161 = !{ptr @concatenate_299, !"reqntidx", i32 256}
!162 = !{ptr @fusion_109, !"kernel", i32 1}
!163 = !{ptr @fusion_109, !"reqntidx", i32 1024}
!164 = !{ptr @fusion_115, !"kernel", i32 1}
!165 = !{ptr @fusion_115, !"reqntidx", i32 1024}
!166 = !{ptr @fusion_116, !"kernel", i32 1}
!167 = !{ptr @fusion_116, !"reqntidx", i32 1024}
!168 = !{ptr @fusion_361, !"kernel", i32 1}
!169 = !{ptr @fusion_361, !"reqntidx", i32 1024}
!170 = !{ptr @fusion_545, !"kernel", i32 1}
!171 = !{ptr @fusion_545, !"reqntidx", i32 256}
!172 = !{ptr @fusion_3, !"kernel", i32 1}
!173 = !{ptr @fusion_3, !"reqntidx", i32 768}
!174 = !{ptr @fusion_28, !"kernel", i32 1}
!175 = !{ptr @fusion_28, !"reqntidx", i32 1024}
!176 = !{ptr @add_115, !"kernel", i32 1}
!177 = !{ptr @add_115, !"reqntidx", i32 128}
!178 = !{ptr @slice_507, !"kernel", i32 1}
!179 = !{ptr @slice_507, !"reqntidx", i32 256}
!180 = !{ptr @fusion_176, !"kernel", i32 1}
!181 = !{ptr @fusion_176, !"reqntidx", i32 256}
!182 = !{ptr @fusion_567, !"kernel", i32 1}
!183 = !{ptr @fusion_567, !"reqntidx", i32 1024}
!184 = !{ptr @fusion_569, !"kernel", i32 1}
!185 = !{ptr @fusion_569, !"reqntidx", i32 256}
!186 = !{ptr @concatenate_307, !"kernel", i32 1}
!187 = !{ptr @concatenate_307, !"reqntidx", i32 256}
!188 = !{ptr @fusion_5, !"kernel", i32 1}
!189 = !{ptr @fusion_5, !"reqntidx", i32 1024}
!190 = !{ptr @fusion_6, !"kernel", i32 1}
!191 = !{ptr @fusion_6, !"reqntidx", i32 256}
!192 = !{i32 4, !"nvvm-reflect-ftz", i32 0}
!193 = !{i32 0, i32 2}
!194 = !{i32 0, i32 512}
!195 = !{}
!196 = !{i32 0, i32 4}
!197 = !{i32 0, i32 8}
!198 = !{i32 0, i32 10}
!199 = !{i32 0, i32 1024}
!200 = !{i32 0, i32 256}
!201 = !{i32 0, i32 28}
!202 = !{i32 0, i32 40}
!203 = !{i32 0, i32 44}
!204 = !{i32 0, i32 48}
!205 = !{i32 0, i32 56}
!206 = !{i32 0, i32 76}
!207 = !{i32 0, i32 88}
!208 = !{i32 0, i32 90}
!209 = !{i32 0, i32 98}
!210 = !{i32 0, i32 112}
!211 = !{i32 0, i32 114}
!212 = !{i32 0, i32 143}
!213 = !{i32 0, i32 128}
!214 = !{i32 0, i32 5}
!215 = !{i32 0, i32 16}
!216 = !{i32 0, i32 3}
!217 = !{i32 0, i32 1792}
!218 = !{i32 0, i32 2432}
!219 = !{i32 0, i32 2560}
!220 = !{i32 0, i32 2816}
!221 = !{i32 0, i32 2880}
!222 = !{i32 0, i32 3136}
!223 = !{i32 0, i32 1536}
!224 = !{i32 0, i32 64}
!225 = !{i32 0, i32 34816}
!226 = !{i32 0, i32 6}
!227 = !{i32 0, i32 9}
!228 = !{i32 0, i32 120}
!229 = !{i32 0, i32 192}
!230 = !{i32 0, i32 740}
!231 = !{i32 0, i32 3584}
!232 = !{i32 0, i32 32}
!233 = !{i32 0, i32 3648}
!234 = !{i32 0, i32 4192}
!235 = !{i32 0, i32 768}
!236 = !{i32 0, i32 864}
!237 = distinct !{!237, !238}
!238 = !{!"llvm.loop.vectorize.enable", i1 false}
!239 = !{i32 0, i32 11840}
!240 = !{i32 0, i32 7744}
!241 = !{i32 0, i32 12992}
!242 = !{i32 0, i32 12}
!243 = !{i32 0, i32 132}
