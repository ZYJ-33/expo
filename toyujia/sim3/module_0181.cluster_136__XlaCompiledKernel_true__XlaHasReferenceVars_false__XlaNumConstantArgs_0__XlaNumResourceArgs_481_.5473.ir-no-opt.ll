target datalayout = "e-i64:64-i128:128-v16:16-v32:32-n16:32:64"
target triple = "nvptx64-nvidia-cuda"

@buffer_for_constant_210 = constant [64 x i8] c"\00\00\00\80\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", align 128
@buffer_for_constant_208 = constant [64 x i8] c"o\12\83:\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", align 128
@buffer_for_constant_178 = constant [64 x i8] zeroinitializer, align 128
@0 = private unnamed_addr constant [4 x i8] c"\00\00\80\FF"
@shared_cache = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache1 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache2 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache3 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache4 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache5 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache6 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@1 = private unnamed_addr constant [4 x i8] c"\00\00\80\FF"
@shared_cache7 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache8 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache9 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache10 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache11 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache12 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache13 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache14 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@2 = private unnamed_addr constant [4 x i8] c"\00\00\80?"
@3 = private unnamed_addr constant [4 x i8] zeroinitializer
@4 = private unnamed_addr constant [4 x i8] zeroinitializer
@5 = private unnamed_addr constant [4 x i8] c"\08\00\00\00"
@6 = private unnamed_addr constant [4 x i8] c"\04\00\00\00"
@7 = private unnamed_addr constant [4 x i8] c"\00\00\80\FF"
@shared_cache15 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@8 = private unnamed_addr constant [4 x i8] zeroinitializer
@9 = private unnamed_addr constant [4 x i8] c"\00\00\80?"
@10 = private unnamed_addr constant [4 x i8] zeroinitializer
@11 = private unnamed_addr constant [4 x i8] zeroinitializer
@12 = private unnamed_addr constant [4 x i8] c"\00\01\00\00"
@13 = private unnamed_addr constant [4 x i8] c"\00\00@@"
@14 = private unnamed_addr constant [4 x i8] c"\04\00\00\00"
@15 = private unnamed_addr constant [4 x i8] c"\CD\CCL>"
@16 = private unnamed_addr constant [4 x i8] c"\9A\99\99?"
@17 = private unnamed_addr constant [4 x i8] c"\00\00 A"
@18 = private unnamed_addr constant [4 x i8] c"\00\00\00A"
@19 = private unnamed_addr constant [4 x i8] c"\08\00\00\00"
@20 = private unnamed_addr constant [4 x i8] c"\00\00\F0B"
@21 = private unnamed_addr constant [4 x i8] zeroinitializer
@22 = private unnamed_addr constant [4 x i8] zeroinitializer
@23 = private unnamed_addr constant [4 x i8] zeroinitializer
@shared_cache16 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@24 = private unnamed_addr constant [4 x i8] c"\00\00\80?"
@25 = private unnamed_addr constant [4 x i8] zeroinitializer
@shared_cache17 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@shared_cache18 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@26 = private unnamed_addr constant [4 x i8] zeroinitializer
@27 = private unnamed_addr constant [4 x i8] zeroinitializer
@28 = private unnamed_addr constant [4 x i8] zeroinitializer
@shared_cache19 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@29 = private unnamed_addr constant [4 x i8] zeroinitializer
@30 = private unnamed_addr constant [4 x i8] zeroinitializer
@31 = private unnamed_addr constant [4 x i8] zeroinitializer
@shared_cache20 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@32 = private unnamed_addr constant [4 x i8] zeroinitializer
@33 = private unnamed_addr constant [4 x i8] zeroinitializer
@shared_cache21 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@shared_cache22 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@34 = private unnamed_addr constant [4 x i8] zeroinitializer
@shared_cache23 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@shared_cache24 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@shared_cache25 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@shared_cache26 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@shared_cache27 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@shared_cache28 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@shared_cache29 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@shared_cache30 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@35 = private unnamed_addr constant [4 x i8] c"\00\00\80?"
@36 = private unnamed_addr constant [4 x i8] zeroinitializer
@37 = private unnamed_addr constant [4 x i8] zeroinitializer
@38 = private unnamed_addr constant [4 x i8] zeroinitializer
@shared_cache31 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@39 = private unnamed_addr constant [4 x i8] zeroinitializer
@40 = private unnamed_addr constant [4 x i8] zeroinitializer
@41 = private unnamed_addr constant [4 x i8] zeroinitializer
@shared_cache32 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@shared_cache33 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@42 = private unnamed_addr constant [4 x i8] zeroinitializer
@shared_cache34 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@shared_cache35 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@shared_cache36 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@shared_cache37 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@shared_cache38 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@shared_cache39 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@shared_cache40 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@shared_cache41 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@43 = private unnamed_addr constant [4 x i8] zeroinitializer
@44 = private unnamed_addr constant [4 x i8] zeroinitializer
@45 = private unnamed_addr constant [4 x i8] zeroinitializer
@shared_cache42 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@46 = private unnamed_addr constant [4 x i8] zeroinitializer
@47 = private unnamed_addr constant [4 x i8] zeroinitializer
@shared_cache43 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@shared_cache44 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@shared_cache45 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@shared_cache46 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@48 = private unnamed_addr constant [4 x i8] zeroinitializer
@49 = private unnamed_addr constant [4 x i8] zeroinitializer
@shared_cache47 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@shared_cache48 = private addrspace(3) global [3 x [1 x [1 x float]]] undef
@50 = private unnamed_addr constant [4 x i8] zeroinitializer
@51 = private unnamed_addr constant [4 x i8] zeroinitializer
@52 = private unnamed_addr constant [4 x i8] c"\00\00\80?"
@53 = private unnamed_addr constant [4 x i8] c"\95\BF\D63"
@54 = private unnamed_addr constant [4 x i8] c"\00\00\80?"
@55 = private unnamed_addr constant [4 x i8] c"\01\00\80?"
@56 = private unnamed_addr constant [4 x i8] zeroinitializer
@57 = private unnamed_addr constant [4 x i8] c"\00\00\80?"
@58 = private unnamed_addr constant [4 x i8] zeroinitializer
@59 = private unnamed_addr constant [4 x i8] c"\00\01\00\00"
@shared_cache49 = private addrspace(3) global [1 x [1 x [2 x float]]] undef
@shared_cache50 = private addrspace(3) global [1 x [1 x [1 x float]]] undef
@60 = private unnamed_addr constant [4 x i8] c"\00\00\00\80"
@shared_cache51 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@61 = private unnamed_addr constant [4 x i8] c"\00\00\80?"
@shared_cache52 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache53 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache54 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@62 = private unnamed_addr constant [4 x i8] c"\00\00\80?"
@63 = private unnamed_addr constant [4 x i8] c"\00\00\00\80"
@shared_cache55 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache56 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache57 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache58 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache59 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache60 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache61 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache62 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@64 = private unnamed_addr constant [4 x i8] zeroinitializer
@shared_cache63 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@65 = private unnamed_addr constant [4 x i8] c"\00\00\80?"
@shared_cache64 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache65 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache66 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache67 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@66 = private unnamed_addr constant [4 x i8] zeroinitializer
@shared_cache68 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@67 = private unnamed_addr constant [4 x i8] c"\00\00\80?"
@shared_cache69 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache70 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache71 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache72 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache73 = private addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache74 = private addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache75 = private addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache76 = private addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache77 = private addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@68 = private unnamed_addr constant [4 x i8] c"\00\00\80?"
@69 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@70 = private unnamed_addr constant [4 x i8] zeroinitializer
@shared_cache78 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache79 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache80 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache81 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@71 = private unnamed_addr constant [4 x i8] c"\00\00\80?"
@72 = private unnamed_addr constant [4 x i8] c"\00\00\00\80"
@shared_cache82 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache83 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@73 = private unnamed_addr constant [4 x i8] zeroinitializer
@74 = private unnamed_addr constant [4 x i8] c"\00\00\00\80"
@shared_cache84 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@75 = private unnamed_addr constant [4 x i8] zeroinitializer
@76 = private unnamed_addr constant [4 x i8] c"\00\00\00\80"
@shared_cache85 = private addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache86 = private addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache87 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache88 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@77 = private unnamed_addr constant [4 x i8] zeroinitializer
@shared_cache89 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@78 = private unnamed_addr constant [4 x i8] c"\00\00\80?"
@shared_cache90 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache91 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache92 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache93 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@79 = private unnamed_addr constant [4 x i8] c"\00\00\80?"
@80 = private unnamed_addr constant [4 x i8] c"\00\00\00\80"
@shared_cache94 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache95 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache96 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache97 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache98 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache99 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache100 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache101 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@81 = private unnamed_addr constant [4 x i8] c"\00\00\80?"
@82 = private unnamed_addr constant [4 x i8] c"\00\00\00\80"
@shared_cache102 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache103 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache104 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache105 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache106 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache107 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache108 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@shared_cache109 = private addrspace(3) global [1 x [1 x [16 x float]]] undef
@83 = private unnamed_addr constant [4 x i8] zeroinitializer
@84 = private unnamed_addr constant [4 x i8] c"\00\00\00\80"
@shared_cache110 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache111 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache112 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@85 = private unnamed_addr constant [4 x i8] zeroinitializer
@86 = private unnamed_addr constant [4 x i8] c"\00\00\00\80"
@shared_cache113 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache114 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache115 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache116 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@87 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@88 = private unnamed_addr constant [4 x i8] zeroinitializer
@89 = private unnamed_addr constant [4 x i8] c"\00\00\00\80"
@shared_cache117 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache118 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache119 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache120 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache121 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache122 = private addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache123 = private addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@90 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@91 = private unnamed_addr constant [4 x i8] zeroinitializer
@shared_cache124 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@92 = private unnamed_addr constant [4 x i8] c"\00\00\80?"
@shared_cache125 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache126 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache127 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache128 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@93 = private unnamed_addr constant [4 x i8] zeroinitializer
@94 = private unnamed_addr constant [4 x i8] c"\00\00\80?"
@95 = private unnamed_addr constant [4 x i8] c"\00\00\00\80"
@shared_cache129 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache130 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache131 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache132 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache133 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@96 = private unnamed_addr constant [4 x i8] zeroinitializer
@shared_cache134 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache135 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache136 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache137 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache138 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache139 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache140 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache141 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache142 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache143 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@97 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@98 = private unnamed_addr constant [4 x i8] zeroinitializer
@99 = private unnamed_addr constant [4 x i8] c"\00\00\00\80"
@shared_cache144 = private addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@100 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@shared_cache145 = private addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache146 = private addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache147 = private addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache148 = private addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@101 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@102 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@103 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@104 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@105 = private unnamed_addr constant [4 x i8] zeroinitializer
@106 = private unnamed_addr constant [4 x i8] c"\00\00\00\80"
@shared_cache149 = private addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache150 = private addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@107 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@108 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@shared_cache151 = private addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache152 = private addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache153 = private addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache154 = private addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache155 = private addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@109 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@110 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@111 = private unnamed_addr constant [4 x i8] zeroinitializer
@112 = private unnamed_addr constant [4 x i8] c"\00\00\00\80"
@shared_cache156 = private addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@113 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@shared_cache157 = private addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache158 = private addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache159 = private addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache160 = private addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@shared_cache161 = private addrspace(3) global [1 x [2 x [32 x [33 x float]]]] undef
@114 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@115 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@116 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@117 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@118 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@119 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@120 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@121 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@122 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@123 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@124 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@125 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@126 = private unnamed_addr constant [4 x i8] c"\00\00\80?"
@127 = private unnamed_addr constant [4 x i8] c"\00\00\00\80"
@shared_cache162 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache163 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache164 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@shared_cache165 = private addrspace(3) global [1 x [1 x [32 x [33 x float]]]] undef
@128 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@129 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@130 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@131 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@132 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@133 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@134 = private unnamed_addr constant [4 x i8] c"\00\00\80?"
@135 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@136 = private unnamed_addr constant [4 x i8] c"\00\00\80?"
@137 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@138 = private unnamed_addr constant [4 x i8] c"\00\00\80?"
@139 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@140 = private unnamed_addr constant [4 x i8] c"o\12\83:"
@141 = private unnamed_addr constant [4 x i8] c"o\12\83:"

define void @fusion_389(ptr noalias align 16 dereferenceable(32768) %arg0, ptr noalias align 16 dereferenceable(32768) %arg1, ptr noalias align 16 dereferenceable(32768) %arg2, ptr noalias align 16 dereferenceable(32768) %arg3, ptr noalias align 16 dereferenceable(32768) %arg4, ptr noalias align 16 dereferenceable(32768) %arg5, ptr noalias align 16 dereferenceable(32768) %arg6, ptr noalias align 128 dereferenceable(4) %arg7, ptr noalias align 128 dereferenceable(4) %arg8, ptr noalias align 128 dereferenceable(4) %arg9, ptr noalias align 128 dereferenceable(4) %arg10, ptr noalias align 128 dereferenceable(4) %arg11, ptr noalias align 128 dereferenceable(4) %arg12, ptr noalias align 128 dereferenceable(4) %arg13) {
entry:
  %return_buffer595 = alloca float, align 4
  %result_from_other_lane593 = alloca float, align 4
  %return_buffer592 = alloca float, align 4
  %result_from_other_lane590 = alloca float, align 4
  %return_buffer589 = alloca float, align 4
  %result_from_other_lane587 = alloca float, align 4
  %return_buffer586 = alloca float, align 4
  %result_from_other_lane584 = alloca float, align 4
  %return_buffer583 = alloca float, align 4
  %result_from_other_lane581 = alloca float, align 4
  %initial_value_addr580 = alloca float, align 4
  %return_buffer575 = alloca float, align 4
  %result_from_other_lane573 = alloca float, align 4
  %return_buffer572 = alloca float, align 4
  %result_from_other_lane570 = alloca float, align 4
  %return_buffer569 = alloca float, align 4
  %result_from_other_lane567 = alloca float, align 4
  %return_buffer566 = alloca float, align 4
  %result_from_other_lane564 = alloca float, align 4
  %return_buffer563 = alloca float, align 4
  %result_from_other_lane561 = alloca float, align 4
  %return_buffer559 = alloca float, align 4
  %return_buffer553 = alloca float, align 4
  %tile_loop.invar_address545 = alloca i32, align 4
  %return_buffer541 = alloca float, align 4
  %return_buffer537 = alloca float, align 4
  %tile_loop.invar_address532 = alloca i32, align 4
  %y_in_tile.invar_address523 = alloca i32, align 4
  %partial_reduction_result509 = alloca float, align 4
  %reduction_input_address508 = alloca float, align 4
  %return_buffer504 = alloca float, align 4
  %result_from_other_lane502 = alloca float, align 4
  %return_buffer501 = alloca float, align 4
  %result_from_other_lane499 = alloca float, align 4
  %return_buffer498 = alloca float, align 4
  %result_from_other_lane496 = alloca float, align 4
  %return_buffer495 = alloca float, align 4
  %result_from_other_lane493 = alloca float, align 4
  %return_buffer492 = alloca float, align 4
  %result_from_other_lane490 = alloca float, align 4
  %initial_value_addr489 = alloca float, align 4
  %return_buffer484 = alloca float, align 4
  %result_from_other_lane482 = alloca float, align 4
  %return_buffer481 = alloca float, align 4
  %result_from_other_lane479 = alloca float, align 4
  %return_buffer478 = alloca float, align 4
  %result_from_other_lane476 = alloca float, align 4
  %return_buffer475 = alloca float, align 4
  %result_from_other_lane473 = alloca float, align 4
  %return_buffer472 = alloca float, align 4
  %result_from_other_lane470 = alloca float, align 4
  %return_buffer468 = alloca float, align 4
  %return_buffer462 = alloca float, align 4
  %tile_loop.invar_address454 = alloca i32, align 4
  %return_buffer450 = alloca float, align 4
  %return_buffer446 = alloca float, align 4
  %tile_loop.invar_address441 = alloca i32, align 4
  %y_in_tile.invar_address432 = alloca i32, align 4
  %partial_reduction_result418 = alloca float, align 4
  %reduction_input_address417 = alloca float, align 4
  %return_buffer413 = alloca float, align 4
  %result_from_other_lane411 = alloca float, align 4
  %return_buffer410 = alloca float, align 4
  %result_from_other_lane408 = alloca float, align 4
  %return_buffer407 = alloca float, align 4
  %result_from_other_lane405 = alloca float, align 4
  %return_buffer404 = alloca float, align 4
  %result_from_other_lane402 = alloca float, align 4
  %return_buffer401 = alloca float, align 4
  %result_from_other_lane399 = alloca float, align 4
  %initial_value_addr398 = alloca float, align 4
  %return_buffer393 = alloca float, align 4
  %result_from_other_lane391 = alloca float, align 4
  %return_buffer390 = alloca float, align 4
  %result_from_other_lane388 = alloca float, align 4
  %return_buffer387 = alloca float, align 4
  %result_from_other_lane385 = alloca float, align 4
  %return_buffer384 = alloca float, align 4
  %result_from_other_lane382 = alloca float, align 4
  %return_buffer381 = alloca float, align 4
  %result_from_other_lane379 = alloca float, align 4
  %return_buffer377 = alloca float, align 4
  %return_buffer371 = alloca float, align 4
  %tile_loop.invar_address363 = alloca i32, align 4
  %return_buffer359 = alloca float, align 4
  %return_buffer355 = alloca float, align 4
  %tile_loop.invar_address350 = alloca i32, align 4
  %y_in_tile.invar_address341 = alloca i32, align 4
  %partial_reduction_result327 = alloca float, align 4
  %reduction_input_address326 = alloca float, align 4
  %return_buffer322 = alloca float, align 4
  %result_from_other_lane320 = alloca float, align 4
  %return_buffer319 = alloca float, align 4
  %result_from_other_lane317 = alloca float, align 4
  %return_buffer316 = alloca float, align 4
  %result_from_other_lane314 = alloca float, align 4
  %return_buffer313 = alloca float, align 4
  %result_from_other_lane311 = alloca float, align 4
  %return_buffer310 = alloca float, align 4
  %result_from_other_lane308 = alloca float, align 4
  %initial_value_addr307 = alloca float, align 4
  %return_buffer302 = alloca float, align 4
  %result_from_other_lane300 = alloca float, align 4
  %return_buffer299 = alloca float, align 4
  %result_from_other_lane297 = alloca float, align 4
  %return_buffer296 = alloca float, align 4
  %result_from_other_lane294 = alloca float, align 4
  %return_buffer293 = alloca float, align 4
  %result_from_other_lane291 = alloca float, align 4
  %return_buffer290 = alloca float, align 4
  %result_from_other_lane288 = alloca float, align 4
  %return_buffer286 = alloca float, align 4
  %return_buffer280 = alloca float, align 4
  %tile_loop.invar_address272 = alloca i32, align 4
  %return_buffer268 = alloca float, align 4
  %return_buffer264 = alloca float, align 4
  %tile_loop.invar_address259 = alloca i32, align 4
  %y_in_tile.invar_address250 = alloca i32, align 4
  %partial_reduction_result236 = alloca float, align 4
  %reduction_input_address235 = alloca float, align 4
  %return_buffer231 = alloca float, align 4
  %result_from_other_lane229 = alloca float, align 4
  %return_buffer228 = alloca float, align 4
  %result_from_other_lane226 = alloca float, align 4
  %return_buffer225 = alloca float, align 4
  %result_from_other_lane223 = alloca float, align 4
  %return_buffer222 = alloca float, align 4
  %result_from_other_lane220 = alloca float, align 4
  %return_buffer219 = alloca float, align 4
  %result_from_other_lane217 = alloca float, align 4
  %initial_value_addr216 = alloca float, align 4
  %return_buffer211 = alloca float, align 4
  %result_from_other_lane209 = alloca float, align 4
  %return_buffer208 = alloca float, align 4
  %result_from_other_lane206 = alloca float, align 4
  %return_buffer205 = alloca float, align 4
  %result_from_other_lane203 = alloca float, align 4
  %return_buffer202 = alloca float, align 4
  %result_from_other_lane200 = alloca float, align 4
  %return_buffer199 = alloca float, align 4
  %result_from_other_lane197 = alloca float, align 4
  %return_buffer195 = alloca float, align 4
  %return_buffer189 = alloca float, align 4
  %tile_loop.invar_address181 = alloca i32, align 4
  %return_buffer177 = alloca float, align 4
  %return_buffer173 = alloca float, align 4
  %tile_loop.invar_address168 = alloca i32, align 4
  %y_in_tile.invar_address159 = alloca i32, align 4
  %partial_reduction_result145 = alloca float, align 4
  %reduction_input_address144 = alloca float, align 4
  %return_buffer140 = alloca float, align 4
  %result_from_other_lane138 = alloca float, align 4
  %return_buffer137 = alloca float, align 4
  %result_from_other_lane135 = alloca float, align 4
  %return_buffer134 = alloca float, align 4
  %result_from_other_lane132 = alloca float, align 4
  %return_buffer131 = alloca float, align 4
  %result_from_other_lane129 = alloca float, align 4
  %return_buffer128 = alloca float, align 4
  %result_from_other_lane126 = alloca float, align 4
  %initial_value_addr125 = alloca float, align 4
  %return_buffer120 = alloca float, align 4
  %result_from_other_lane118 = alloca float, align 4
  %return_buffer117 = alloca float, align 4
  %result_from_other_lane115 = alloca float, align 4
  %return_buffer114 = alloca float, align 4
  %result_from_other_lane112 = alloca float, align 4
  %return_buffer111 = alloca float, align 4
  %result_from_other_lane109 = alloca float, align 4
  %return_buffer108 = alloca float, align 4
  %result_from_other_lane106 = alloca float, align 4
  %return_buffer104 = alloca float, align 4
  %return_buffer98 = alloca float, align 4
  %tile_loop.invar_address90 = alloca i32, align 4
  %return_buffer86 = alloca float, align 4
  %return_buffer82 = alloca float, align 4
  %tile_loop.invar_address77 = alloca i32, align 4
  %y_in_tile.invar_address68 = alloca i32, align 4
  %partial_reduction_result54 = alloca float, align 4
  %reduction_input_address53 = alloca float, align 4
  %return_buffer52 = alloca float, align 4
  %result_from_other_lane50 = alloca float, align 4
  %return_buffer49 = alloca float, align 4
  %result_from_other_lane47 = alloca float, align 4
  %return_buffer46 = alloca float, align 4
  %result_from_other_lane44 = alloca float, align 4
  %return_buffer43 = alloca float, align 4
  %result_from_other_lane41 = alloca float, align 4
  %return_buffer40 = alloca float, align 4
  %result_from_other_lane38 = alloca float, align 4
  %initial_value_addr = alloca float, align 4
  %return_buffer37 = alloca float, align 4
  %result_from_other_lane35 = alloca float, align 4
  %return_buffer34 = alloca float, align 4
  %result_from_other_lane32 = alloca float, align 4
  %return_buffer31 = alloca float, align 4
  %result_from_other_lane29 = alloca float, align 4
  %return_buffer28 = alloca float, align 4
  %result_from_other_lane26 = alloca float, align 4
  %return_buffer25 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer23 = alloca float, align 4
  %return_buffer17 = alloca float, align 4
  %tile_loop.invar_address11 = alloca i32, align 4
  %return_buffer7 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !292
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %inter_warp_reduce-after, %entry
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %reduce-group-1-true, label %reduce-group-1-after

reduce-group-1-after:                             ; preds = %inter_warp_reduce-after124, %reduce-group-0-after
  %3 = icmp eq i32 %0, 2
  br i1 %3, label %reduce-group-2-true, label %reduce-group-2-after

reduce-group-2-after:                             ; preds = %inter_warp_reduce-after215, %reduce-group-1-after
  %4 = icmp eq i32 %0, 3
  br i1 %4, label %reduce-group-3-true, label %reduce-group-3-after

reduce-group-3-after:                             ; preds = %inter_warp_reduce-after306, %reduce-group-2-after
  %5 = icmp eq i32 %0, 4
  br i1 %5, label %reduce-group-4-true, label %reduce-group-4-after

reduce-group-4-after:                             ; preds = %inter_warp_reduce-after397, %reduce-group-3-after
  %6 = icmp eq i32 %0, 5
  br i1 %6, label %reduce-group-5-true, label %reduce-group-5-after

reduce-group-5-after:                             ; preds = %inter_warp_reduce-after488, %reduce-group-4-after
  %7 = icmp eq i32 %0, 6
  br i1 %7, label %reduce-group-6-true, label %reduce-group-6-after

reduce-group-6-after:                             ; preds = %inter_warp_reduce-after579, %reduce-group-5-after
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_59_constant_10 = load float, ptr @0, align 4
  %8 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_59_constant_10, ptr %8, align 4
  %9 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !293
  %10 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %11 = urem i32 %9, 512
  %12 = udiv i32 %9, 512
  %13 = mul i32 %10, 1
  %14 = add i32 %13, %12
  %15 = icmp ult i32 %14, 1
  br i1 %15, label %16, label %early_return

16:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %11, 512
  %thread_id.y = udiv i32 %11, 512
  %lane_id = urem i32 %11, 32
  %17 = udiv i32 %14, 1
  %18 = urem i32 %17, 1
  %19 = udiv i32 %14, 1
  %20 = urem i32 %19, 1
  %21 = udiv i32 %14, 1
  %22 = icmp eq i32 %20, 0
  %tile_bound = select i1 %22, i32 1, i32 1
  %23 = icmp eq i32 %18, 0
  %tile_bound1 = select i1 %23, i32 8192, i32 8192
  %tile_origin.0 = mul i32 %21, 1
  %tile_origin.1 = mul i32 %20, 1
  %tile_origin.2 = mul i32 %18, 8192
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %is_full_tile-after, %16
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %24 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %24, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 1
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %25 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %26 = icmp eq i32 8192, %tile_bound1
  br i1 %26, label %is_full_tile-true, label %is_full_tile-false

is_full_tile-after:                               ; preds = %tile_loop.loop_exit8, %tile_loop.loop_exit
  br label %y_in_tile.loop_header, !llvm.loop !295

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %partial_reduction_result24 = load float, ptr %current_output, align 4
  %27 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result24, i32 16, i32 31)
  store float %27, ptr %result_from_other_lane, align 4
  call void @region_1_11(ptr %current_output, ptr %result_from_other_lane, ptr %return_buffer25)
  %28 = load float, ptr %return_buffer25, align 4
  store float %28, ptr %current_output, align 4
  %partial_reduction_result27 = load float, ptr %current_output, align 4
  %29 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result27, i32 8, i32 31)
  store float %29, ptr %result_from_other_lane26, align 4
  call void @region_1_11(ptr %current_output, ptr %result_from_other_lane26, ptr %return_buffer28)
  %30 = load float, ptr %return_buffer28, align 4
  store float %30, ptr %current_output, align 4
  %partial_reduction_result30 = load float, ptr %current_output, align 4
  %31 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result30, i32 4, i32 31)
  store float %31, ptr %result_from_other_lane29, align 4
  call void @region_1_11(ptr %current_output, ptr %result_from_other_lane29, ptr %return_buffer31)
  %32 = load float, ptr %return_buffer31, align 4
  store float %32, ptr %current_output, align 4
  %partial_reduction_result33 = load float, ptr %current_output, align 4
  %33 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result33, i32 2, i32 31)
  store float %33, ptr %result_from_other_lane32, align 4
  call void @region_1_11(ptr %current_output, ptr %result_from_other_lane32, ptr %return_buffer34)
  %34 = load float, ptr %return_buffer34, align 4
  store float %34, ptr %current_output, align 4
  %partial_reduction_result36 = load float, ptr %current_output, align 4
  %35 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result36, i32 1, i32 31)
  store float %35, ptr %result_from_other_lane35, align 4
  call void @region_1_11(ptr %current_output, ptr %result_from_other_lane35, ptr %return_buffer37)
  %36 = load float, ptr %return_buffer37, align 4
  store float %36, ptr %current_output, align 4
  %37 = udiv i32 %thread_id.x, 32
  %38 = icmp eq i32 %lane_id, 0
  br i1 %38, label %intra_warp_reduce_write-true, label %intra_warp_reduce_write-after

intra_warp_reduce_write-after:                    ; preds = %intra_warp_reduce_write-true, %y_in_tile.loop_exit
  call void @llvm.nvvm.barrier0()
  %39 = icmp eq i32 %37, 0
  br i1 %39, label %inter_warp_reduce-true, label %inter_warp_reduce-after

inter_warp_reduce-after:                          ; preds = %reduction_write_output-after, %intra_warp_reduce_write-after
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

is_full_tile-true:                                ; preds = %y_in_tile.loop_body
  %40 = mul i32 %thread_id.x, 2
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %tile_loop.loop_body, %is_full_tile-true
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %41 = icmp uge i32 %tile_loop.indvar, 8
  br i1 %41, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %42 = icmp eq i32 %tile_loop.indvar, 0
  %43 = mul i32 %tile_loop.indvar, 1024
  %44 = add i32 %43, 0
  %x_loc = add i32 %44, %40
  %45 = add i32 %tile_origin.1, %y_in_tile.indvar
  %46 = add i32 %tile_origin.2, %x_loc
  %47 = mul nuw nsw i32 %46, 1
  %48 = add nuw nsw i32 0, %47
  %49 = mul nuw nsw i32 %45, 8192
  %50 = add nuw nsw i32 %48, %49
  %51 = mul nuw nsw i32 %tile_origin.0, 8192
  %52 = add nuw nsw i32 %50, %51
  %53 = udiv i32 %52, 1
  %Arg_0.1 = getelementptr inbounds i32, ptr %arg0, i32 %52
  %Arg_0.13 = load i32, ptr %Arg_0.1, align 4, !invariant.load !297
  %54 = sitofp i32 %Arg_0.13 to float
  store float %54, ptr %reduction_input_address, align 4
  %55 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_11(ptr %55, ptr %reduction_input_address, ptr %return_buffer)
  %56 = load float, ptr %return_buffer, align 4
  store float %56, ptr %55, align 4
  %57 = mul i32 %tile_loop.indvar, 1024
  %58 = add i32 %57, 1
  %x_loc4 = add i32 %58, %40
  %59 = add i32 %tile_origin.1, %y_in_tile.indvar
  %60 = add i32 %tile_origin.2, %x_loc4
  %61 = mul nuw nsw i32 %60, 1
  %62 = add nuw nsw i32 0, %61
  %63 = mul nuw nsw i32 %59, 8192
  %64 = add nuw nsw i32 %62, %63
  %65 = mul nuw nsw i32 %tile_origin.0, 8192
  %66 = add nuw nsw i32 %64, %65
  %67 = udiv i32 %66, 1
  %Arg_0.15 = getelementptr inbounds i32, ptr %arg0, i32 %66
  %Arg_0.16 = load i32, ptr %Arg_0.15, align 4, !invariant.load !297
  %68 = sitofp i32 %Arg_0.16 to float
  store float %68, ptr %reduction_input_address, align 4
  %69 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_11(ptr %69, ptr %reduction_input_address, ptr %return_buffer7)
  %70 = load float, ptr %return_buffer7, align 4
  store float %70, ptr %69, align 4
  br label %tile_loop.loop_header, !llvm.loop !298

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %is_full_tile-after

is_full_tile-false:                               ; preds = %y_in_tile.loop_body
  %71 = mul i32 %thread_id.x, 2
  store i32 0, ptr %tile_loop.invar_address11, align 4
  br label %tile_loop.loop_header9

tile_loop.loop_header9:                           ; preds = %x_in_tile-after20, %is_full_tile-false
  %tile_loop.indvar12 = load i32, ptr %tile_loop.invar_address11, align 4
  %72 = icmp uge i32 %tile_loop.indvar12, 8
  br i1 %72, label %tile_loop.loop_exit8, label %tile_loop.loop_body10

tile_loop.loop_body10:                            ; preds = %tile_loop.loop_header9
  %invar.inc13 = add nuw nsw i32 %tile_loop.indvar12, 1
  store i32 %invar.inc13, ptr %tile_loop.invar_address11, align 4
  %73 = icmp eq i32 %tile_loop.indvar12, 0
  %74 = mul i32 %tile_loop.indvar12, 1024
  %75 = add i32 %74, 0
  %x_loc14 = add i32 %75, %71
  %76 = add i32 %tile_origin.1, %y_in_tile.indvar
  %77 = add i32 %tile_origin.2, %x_loc14
  %78 = icmp ult i32 %x_loc14, %tile_bound1
  br i1 %78, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body10
  %79 = mul i32 %tile_loop.indvar12, 1024
  %80 = add i32 %79, 1
  %x_loc18 = add i32 %80, %71
  %81 = add i32 %tile_origin.1, %y_in_tile.indvar
  %82 = add i32 %tile_origin.2, %x_loc18
  %83 = icmp ult i32 %x_loc18, %tile_bound1
  br i1 %83, label %x_in_tile-true19, label %x_in_tile-after20

x_in_tile-after20:                                ; preds = %x_in_tile-true19, %x_in_tile-after
  br label %tile_loop.loop_header9, !llvm.loop !300

tile_loop.loop_exit8:                             ; preds = %tile_loop.loop_header9
  br label %is_full_tile-after

x_in_tile-true:                                   ; preds = %tile_loop.loop_body10
  %84 = mul nuw nsw i32 %77, 1
  %85 = add nuw nsw i32 0, %84
  %86 = mul nuw nsw i32 %76, 8192
  %87 = add nuw nsw i32 %85, %86
  %88 = mul nuw nsw i32 %tile_origin.0, 8192
  %89 = add nuw nsw i32 %87, %88
  %90 = udiv i32 %89, 1
  %Arg_0.115 = getelementptr inbounds i32, ptr %arg0, i32 %89
  %Arg_0.116 = load i32, ptr %Arg_0.115, align 4, !invariant.load !297
  %91 = sitofp i32 %Arg_0.116 to float
  store float %91, ptr %reduction_input_address, align 4
  %92 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_11(ptr %92, ptr %reduction_input_address, ptr %return_buffer17)
  %93 = load float, ptr %return_buffer17, align 4
  store float %93, ptr %92, align 4
  br label %x_in_tile-after

x_in_tile-true19:                                 ; preds = %x_in_tile-after
  %94 = mul nuw nsw i32 %82, 1
  %95 = add nuw nsw i32 0, %94
  %96 = mul nuw nsw i32 %81, 8192
  %97 = add nuw nsw i32 %95, %96
  %98 = mul nuw nsw i32 %tile_origin.0, 8192
  %99 = add nuw nsw i32 %97, %98
  %100 = udiv i32 %99, 1
  %Arg_0.121 = getelementptr inbounds i32, ptr %arg0, i32 %99
  %Arg_0.122 = load i32, ptr %Arg_0.121, align 4, !invariant.load !297
  %101 = sitofp i32 %Arg_0.122 to float
  store float %101, ptr %reduction_input_address, align 4
  %102 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_11(ptr %102, ptr %reduction_input_address, ptr %return_buffer23)
  %103 = load float, ptr %return_buffer23, align 4
  store float %103, ptr %102, align 4
  br label %x_in_tile-after20

intra_warp_reduce_write-true:                     ; preds = %y_in_tile.loop_exit
  %104 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache, i32 0, i32 %12, i32 0, i32 %37
  %105 = addrspacecast ptr addrspace(3) %104 to ptr
  %106 = load float, ptr %current_output, align 4
  store float %106, ptr %105, align 4
  br label %intra_warp_reduce_write-after

inter_warp_reduce-true:                           ; preds = %intra_warp_reduce_write-after
  %107 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache, i32 0, i32 %12, i32 0, i32 %lane_id
  %108 = addrspacecast ptr addrspace(3) %107 to ptr
  store float %region_0_59_constant_10, ptr %initial_value_addr, align 4
  %109 = icmp ult i32 %thread_id.x, 16
  %110 = select i1 %109, ptr %108, ptr %initial_value_addr
  %partial_reduction_result39 = load float, ptr %110, align 4
  %111 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result39, i32 16, i32 31)
  store float %111, ptr %result_from_other_lane38, align 4
  call void @region_1_11(ptr %110, ptr %result_from_other_lane38, ptr %return_buffer40)
  %112 = load float, ptr %return_buffer40, align 4
  store float %112, ptr %110, align 4
  %partial_reduction_result42 = load float, ptr %110, align 4
  %113 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result42, i32 8, i32 31)
  store float %113, ptr %result_from_other_lane41, align 4
  call void @region_1_11(ptr %110, ptr %result_from_other_lane41, ptr %return_buffer43)
  %114 = load float, ptr %return_buffer43, align 4
  store float %114, ptr %110, align 4
  %partial_reduction_result45 = load float, ptr %110, align 4
  %115 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result45, i32 4, i32 31)
  store float %115, ptr %result_from_other_lane44, align 4
  call void @region_1_11(ptr %110, ptr %result_from_other_lane44, ptr %return_buffer46)
  %116 = load float, ptr %return_buffer46, align 4
  store float %116, ptr %110, align 4
  %partial_reduction_result48 = load float, ptr %110, align 4
  %117 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result48, i32 2, i32 31)
  store float %117, ptr %result_from_other_lane47, align 4
  call void @region_1_11(ptr %110, ptr %result_from_other_lane47, ptr %return_buffer49)
  %118 = load float, ptr %return_buffer49, align 4
  store float %118, ptr %110, align 4
  %partial_reduction_result51 = load float, ptr %110, align 4
  %119 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result51, i32 1, i32 31)
  store float %119, ptr %result_from_other_lane50, align 4
  call void @region_1_11(ptr %110, ptr %result_from_other_lane50, ptr %return_buffer52)
  %120 = load float, ptr %return_buffer52, align 4
  store float %120, ptr %110, align 4
  %121 = icmp eq i32 %thread_id.x, 0
  br i1 %121, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %inter_warp_reduce-true
  br label %inter_warp_reduce-after

reduction_write_output-true:                      ; preds = %inter_warp_reduce-true
  %122 = mul i32 %thread_id.x, 2
  %123 = add i32 %tile_origin.1, %thread_id.y
  %124 = add i32 %tile_origin.2, %122
  %125 = add i32 %124, 0
  %output = load float, ptr %110, align 4
  store float %output, ptr %arg7, align 4
  br label %reduction_write_output-after

reduce-group-1-true:                              ; preds = %reduce-group-0-after
  %region_0_59_constant_1055 = load float, ptr @0, align 4
  %126 = getelementptr inbounds float, ptr %partial_reduction_result54, i32 0
  store float %region_0_59_constant_1055, ptr %126, align 4
  %127 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !293
  %128 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %129 = urem i32 %127, 512
  %130 = udiv i32 %127, 512
  %131 = mul i32 %128, 1
  %132 = add i32 %131, %130
  %133 = icmp ult i32 %132, 1
  br i1 %133, label %134, label %early_return56

134:                                              ; preds = %reduce-group-1-true
  %thread_id.x57 = urem i32 %129, 512
  %thread_id.y58 = udiv i32 %129, 512
  %lane_id59 = urem i32 %129, 32
  %135 = udiv i32 %132, 1
  %136 = urem i32 %135, 1
  %137 = udiv i32 %132, 1
  %138 = urem i32 %137, 1
  %139 = udiv i32 %132, 1
  %140 = icmp eq i32 %138, 0
  %tile_bound60 = select i1 %140, i32 1, i32 1
  %141 = icmp eq i32 %136, 0
  %tile_bound61 = select i1 %141, i32 8192, i32 8192
  %tile_origin.062 = mul i32 %139, 1
  %tile_origin.163 = mul i32 %138, 1
  %tile_origin.264 = mul i32 %136, 8192
  store i32 %thread_id.y58, ptr %y_in_tile.invar_address68, align 4
  br label %y_in_tile.loop_header66

y_in_tile.loop_header66:                          ; preds = %is_full_tile-after73, %134
  %y_in_tile.indvar69 = load i32, ptr %y_in_tile.invar_address68, align 4
  %142 = icmp uge i32 %y_in_tile.indvar69, %tile_bound60
  br i1 %142, label %y_in_tile.loop_exit65, label %y_in_tile.loop_body67

y_in_tile.loop_body67:                            ; preds = %y_in_tile.loop_header66
  %invar.inc70 = add nuw nsw i32 %y_in_tile.indvar69, 1
  store i32 %invar.inc70, ptr %y_in_tile.invar_address68, align 4
  %143 = icmp eq i32 %y_in_tile.indvar69, %thread_id.y58
  %144 = icmp eq i32 8192, %tile_bound61
  br i1 %144, label %is_full_tile-true71, label %is_full_tile-false72

is_full_tile-after73:                             ; preds = %tile_loop.loop_exit87, %tile_loop.loop_exit74
  br label %y_in_tile.loop_header66, !llvm.loop !301

y_in_tile.loop_exit65:                            ; preds = %y_in_tile.loop_header66
  %current_output105 = getelementptr inbounds float, ptr %partial_reduction_result54, i32 0
  %partial_reduction_result107 = load float, ptr %current_output105, align 4
  %145 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result107, i32 16, i32 31)
  store float %145, ptr %result_from_other_lane106, align 4
  call void @region_2_18(ptr %current_output105, ptr %result_from_other_lane106, ptr %return_buffer108)
  %146 = load float, ptr %return_buffer108, align 4
  store float %146, ptr %current_output105, align 4
  %partial_reduction_result110 = load float, ptr %current_output105, align 4
  %147 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result110, i32 8, i32 31)
  store float %147, ptr %result_from_other_lane109, align 4
  call void @region_2_18(ptr %current_output105, ptr %result_from_other_lane109, ptr %return_buffer111)
  %148 = load float, ptr %return_buffer111, align 4
  store float %148, ptr %current_output105, align 4
  %partial_reduction_result113 = load float, ptr %current_output105, align 4
  %149 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result113, i32 4, i32 31)
  store float %149, ptr %result_from_other_lane112, align 4
  call void @region_2_18(ptr %current_output105, ptr %result_from_other_lane112, ptr %return_buffer114)
  %150 = load float, ptr %return_buffer114, align 4
  store float %150, ptr %current_output105, align 4
  %partial_reduction_result116 = load float, ptr %current_output105, align 4
  %151 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result116, i32 2, i32 31)
  store float %151, ptr %result_from_other_lane115, align 4
  call void @region_2_18(ptr %current_output105, ptr %result_from_other_lane115, ptr %return_buffer117)
  %152 = load float, ptr %return_buffer117, align 4
  store float %152, ptr %current_output105, align 4
  %partial_reduction_result119 = load float, ptr %current_output105, align 4
  %153 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result119, i32 1, i32 31)
  store float %153, ptr %result_from_other_lane118, align 4
  call void @region_2_18(ptr %current_output105, ptr %result_from_other_lane118, ptr %return_buffer120)
  %154 = load float, ptr %return_buffer120, align 4
  store float %154, ptr %current_output105, align 4
  %155 = udiv i32 %thread_id.x57, 32
  %156 = icmp eq i32 %lane_id59, 0
  br i1 %156, label %intra_warp_reduce_write-true121, label %intra_warp_reduce_write-after122

intra_warp_reduce_write-after122:                 ; preds = %intra_warp_reduce_write-true121, %y_in_tile.loop_exit65
  call void @llvm.nvvm.barrier0()
  %157 = icmp eq i32 %155, 0
  br i1 %157, label %inter_warp_reduce-true123, label %inter_warp_reduce-after124

inter_warp_reduce-after124:                       ; preds = %reduction_write_output-after142, %intra_warp_reduce_write-after122
  br label %reduce-group-1-after

early_return56:                                   ; preds = %reduce-group-1-true
  ret void

is_full_tile-true71:                              ; preds = %y_in_tile.loop_body67
  %158 = mul i32 %thread_id.x57, 2
  store i32 0, ptr %tile_loop.invar_address77, align 4
  br label %tile_loop.loop_header75

tile_loop.loop_header75:                          ; preds = %tile_loop.loop_body76, %is_full_tile-true71
  %tile_loop.indvar78 = load i32, ptr %tile_loop.invar_address77, align 4
  %159 = icmp uge i32 %tile_loop.indvar78, 8
  br i1 %159, label %tile_loop.loop_exit74, label %tile_loop.loop_body76

tile_loop.loop_body76:                            ; preds = %tile_loop.loop_header75
  %invar.inc79 = add nuw nsw i32 %tile_loop.indvar78, 1
  store i32 %invar.inc79, ptr %tile_loop.invar_address77, align 4
  %160 = icmp eq i32 %tile_loop.indvar78, 0
  %161 = mul i32 %tile_loop.indvar78, 1024
  %162 = add i32 %161, 0
  %x_loc80 = add i32 %162, %158
  %163 = add i32 %tile_origin.163, %y_in_tile.indvar69
  %164 = add i32 %tile_origin.264, %x_loc80
  %165 = mul nuw nsw i32 %164, 1
  %166 = add nuw nsw i32 0, %165
  %167 = mul nuw nsw i32 %163, 8192
  %168 = add nuw nsw i32 %166, %167
  %169 = mul nuw nsw i32 %tile_origin.062, 8192
  %170 = add nuw nsw i32 %168, %169
  %171 = udiv i32 %170, 1
  %Arg_1.2 = getelementptr inbounds i32, ptr %arg1, i32 %170
  %Arg_1.281 = load i32, ptr %Arg_1.2, align 4, !invariant.load !297
  %172 = sitofp i32 %Arg_1.281 to float
  store float %172, ptr %reduction_input_address53, align 4
  %173 = getelementptr inbounds float, ptr %partial_reduction_result54, i32 0
  call void @region_2_18(ptr %173, ptr %reduction_input_address53, ptr %return_buffer82)
  %174 = load float, ptr %return_buffer82, align 4
  store float %174, ptr %173, align 4
  %175 = mul i32 %tile_loop.indvar78, 1024
  %176 = add i32 %175, 1
  %x_loc83 = add i32 %176, %158
  %177 = add i32 %tile_origin.163, %y_in_tile.indvar69
  %178 = add i32 %tile_origin.264, %x_loc83
  %179 = mul nuw nsw i32 %178, 1
  %180 = add nuw nsw i32 0, %179
  %181 = mul nuw nsw i32 %177, 8192
  %182 = add nuw nsw i32 %180, %181
  %183 = mul nuw nsw i32 %tile_origin.062, 8192
  %184 = add nuw nsw i32 %182, %183
  %185 = udiv i32 %184, 1
  %Arg_1.284 = getelementptr inbounds i32, ptr %arg1, i32 %184
  %Arg_1.285 = load i32, ptr %Arg_1.284, align 4, !invariant.load !297
  %186 = sitofp i32 %Arg_1.285 to float
  store float %186, ptr %reduction_input_address53, align 4
  %187 = getelementptr inbounds float, ptr %partial_reduction_result54, i32 0
  call void @region_2_18(ptr %187, ptr %reduction_input_address53, ptr %return_buffer86)
  %188 = load float, ptr %return_buffer86, align 4
  store float %188, ptr %187, align 4
  br label %tile_loop.loop_header75, !llvm.loop !302

tile_loop.loop_exit74:                            ; preds = %tile_loop.loop_header75
  br label %is_full_tile-after73

is_full_tile-false72:                             ; preds = %y_in_tile.loop_body67
  %189 = mul i32 %thread_id.x57, 2
  store i32 0, ptr %tile_loop.invar_address90, align 4
  br label %tile_loop.loop_header88

tile_loop.loop_header88:                          ; preds = %x_in_tile-after101, %is_full_tile-false72
  %tile_loop.indvar91 = load i32, ptr %tile_loop.invar_address90, align 4
  %190 = icmp uge i32 %tile_loop.indvar91, 8
  br i1 %190, label %tile_loop.loop_exit87, label %tile_loop.loop_body89

tile_loop.loop_body89:                            ; preds = %tile_loop.loop_header88
  %invar.inc92 = add nuw nsw i32 %tile_loop.indvar91, 1
  store i32 %invar.inc92, ptr %tile_loop.invar_address90, align 4
  %191 = icmp eq i32 %tile_loop.indvar91, 0
  %192 = mul i32 %tile_loop.indvar91, 1024
  %193 = add i32 %192, 0
  %x_loc93 = add i32 %193, %189
  %194 = add i32 %tile_origin.163, %y_in_tile.indvar69
  %195 = add i32 %tile_origin.264, %x_loc93
  %196 = icmp ult i32 %x_loc93, %tile_bound61
  br i1 %196, label %x_in_tile-true94, label %x_in_tile-after95

x_in_tile-after95:                                ; preds = %x_in_tile-true94, %tile_loop.loop_body89
  %197 = mul i32 %tile_loop.indvar91, 1024
  %198 = add i32 %197, 1
  %x_loc99 = add i32 %198, %189
  %199 = add i32 %tile_origin.163, %y_in_tile.indvar69
  %200 = add i32 %tile_origin.264, %x_loc99
  %201 = icmp ult i32 %x_loc99, %tile_bound61
  br i1 %201, label %x_in_tile-true100, label %x_in_tile-after101

x_in_tile-after101:                               ; preds = %x_in_tile-true100, %x_in_tile-after95
  br label %tile_loop.loop_header88, !llvm.loop !303

tile_loop.loop_exit87:                            ; preds = %tile_loop.loop_header88
  br label %is_full_tile-after73

x_in_tile-true94:                                 ; preds = %tile_loop.loop_body89
  %202 = mul nuw nsw i32 %195, 1
  %203 = add nuw nsw i32 0, %202
  %204 = mul nuw nsw i32 %194, 8192
  %205 = add nuw nsw i32 %203, %204
  %206 = mul nuw nsw i32 %tile_origin.062, 8192
  %207 = add nuw nsw i32 %205, %206
  %208 = udiv i32 %207, 1
  %Arg_1.296 = getelementptr inbounds i32, ptr %arg1, i32 %207
  %Arg_1.297 = load i32, ptr %Arg_1.296, align 4, !invariant.load !297
  %209 = sitofp i32 %Arg_1.297 to float
  store float %209, ptr %reduction_input_address53, align 4
  %210 = getelementptr inbounds float, ptr %partial_reduction_result54, i32 0
  call void @region_2_18(ptr %210, ptr %reduction_input_address53, ptr %return_buffer98)
  %211 = load float, ptr %return_buffer98, align 4
  store float %211, ptr %210, align 4
  br label %x_in_tile-after95

x_in_tile-true100:                                ; preds = %x_in_tile-after95
  %212 = mul nuw nsw i32 %200, 1
  %213 = add nuw nsw i32 0, %212
  %214 = mul nuw nsw i32 %199, 8192
  %215 = add nuw nsw i32 %213, %214
  %216 = mul nuw nsw i32 %tile_origin.062, 8192
  %217 = add nuw nsw i32 %215, %216
  %218 = udiv i32 %217, 1
  %Arg_1.2102 = getelementptr inbounds i32, ptr %arg1, i32 %217
  %Arg_1.2103 = load i32, ptr %Arg_1.2102, align 4, !invariant.load !297
  %219 = sitofp i32 %Arg_1.2103 to float
  store float %219, ptr %reduction_input_address53, align 4
  %220 = getelementptr inbounds float, ptr %partial_reduction_result54, i32 0
  call void @region_2_18(ptr %220, ptr %reduction_input_address53, ptr %return_buffer104)
  %221 = load float, ptr %return_buffer104, align 4
  store float %221, ptr %220, align 4
  br label %x_in_tile-after101

intra_warp_reduce_write-true121:                  ; preds = %y_in_tile.loop_exit65
  %222 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache1, i32 0, i32 %130, i32 0, i32 %155
  %223 = addrspacecast ptr addrspace(3) %222 to ptr
  %224 = load float, ptr %current_output105, align 4
  store float %224, ptr %223, align 4
  br label %intra_warp_reduce_write-after122

inter_warp_reduce-true123:                        ; preds = %intra_warp_reduce_write-after122
  %225 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache1, i32 0, i32 %130, i32 0, i32 %lane_id59
  %226 = addrspacecast ptr addrspace(3) %225 to ptr
  store float %region_0_59_constant_1055, ptr %initial_value_addr125, align 4
  %227 = icmp ult i32 %thread_id.x57, 16
  %228 = select i1 %227, ptr %226, ptr %initial_value_addr125
  %partial_reduction_result127 = load float, ptr %228, align 4
  %229 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result127, i32 16, i32 31)
  store float %229, ptr %result_from_other_lane126, align 4
  call void @region_2_18(ptr %228, ptr %result_from_other_lane126, ptr %return_buffer128)
  %230 = load float, ptr %return_buffer128, align 4
  store float %230, ptr %228, align 4
  %partial_reduction_result130 = load float, ptr %228, align 4
  %231 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result130, i32 8, i32 31)
  store float %231, ptr %result_from_other_lane129, align 4
  call void @region_2_18(ptr %228, ptr %result_from_other_lane129, ptr %return_buffer131)
  %232 = load float, ptr %return_buffer131, align 4
  store float %232, ptr %228, align 4
  %partial_reduction_result133 = load float, ptr %228, align 4
  %233 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result133, i32 4, i32 31)
  store float %233, ptr %result_from_other_lane132, align 4
  call void @region_2_18(ptr %228, ptr %result_from_other_lane132, ptr %return_buffer134)
  %234 = load float, ptr %return_buffer134, align 4
  store float %234, ptr %228, align 4
  %partial_reduction_result136 = load float, ptr %228, align 4
  %235 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result136, i32 2, i32 31)
  store float %235, ptr %result_from_other_lane135, align 4
  call void @region_2_18(ptr %228, ptr %result_from_other_lane135, ptr %return_buffer137)
  %236 = load float, ptr %return_buffer137, align 4
  store float %236, ptr %228, align 4
  %partial_reduction_result139 = load float, ptr %228, align 4
  %237 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result139, i32 1, i32 31)
  store float %237, ptr %result_from_other_lane138, align 4
  call void @region_2_18(ptr %228, ptr %result_from_other_lane138, ptr %return_buffer140)
  %238 = load float, ptr %return_buffer140, align 4
  store float %238, ptr %228, align 4
  %239 = icmp eq i32 %thread_id.x57, 0
  br i1 %239, label %reduction_write_output-true141, label %reduction_write_output-after142

reduction_write_output-after142:                  ; preds = %reduction_write_output-true141, %inter_warp_reduce-true123
  br label %inter_warp_reduce-after124

reduction_write_output-true141:                   ; preds = %inter_warp_reduce-true123
  %240 = mul i32 %thread_id.x57, 2
  %241 = add i32 %tile_origin.163, %thread_id.y58
  %242 = add i32 %tile_origin.264, %240
  %243 = add i32 %242, 0
  %output143 = load float, ptr %228, align 4
  store float %output143, ptr %arg8, align 4
  br label %reduction_write_output-after142

reduce-group-2-true:                              ; preds = %reduce-group-1-after
  %region_0_59_constant_10146 = load float, ptr @0, align 4
  %244 = getelementptr inbounds float, ptr %partial_reduction_result145, i32 0
  store float %region_0_59_constant_10146, ptr %244, align 4
  %245 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !293
  %246 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %247 = urem i32 %245, 512
  %248 = udiv i32 %245, 512
  %249 = mul i32 %246, 1
  %250 = add i32 %249, %248
  %251 = icmp ult i32 %250, 1
  br i1 %251, label %252, label %early_return147

252:                                              ; preds = %reduce-group-2-true
  %thread_id.x148 = urem i32 %247, 512
  %thread_id.y149 = udiv i32 %247, 512
  %lane_id150 = urem i32 %247, 32
  %253 = udiv i32 %250, 1
  %254 = urem i32 %253, 1
  %255 = udiv i32 %250, 1
  %256 = urem i32 %255, 1
  %257 = udiv i32 %250, 1
  %258 = icmp eq i32 %256, 0
  %tile_bound151 = select i1 %258, i32 1, i32 1
  %259 = icmp eq i32 %254, 0
  %tile_bound152 = select i1 %259, i32 8192, i32 8192
  %tile_origin.0153 = mul i32 %257, 1
  %tile_origin.1154 = mul i32 %256, 1
  %tile_origin.2155 = mul i32 %254, 8192
  store i32 %thread_id.y149, ptr %y_in_tile.invar_address159, align 4
  br label %y_in_tile.loop_header157

y_in_tile.loop_header157:                         ; preds = %is_full_tile-after164, %252
  %y_in_tile.indvar160 = load i32, ptr %y_in_tile.invar_address159, align 4
  %260 = icmp uge i32 %y_in_tile.indvar160, %tile_bound151
  br i1 %260, label %y_in_tile.loop_exit156, label %y_in_tile.loop_body158

y_in_tile.loop_body158:                           ; preds = %y_in_tile.loop_header157
  %invar.inc161 = add nuw nsw i32 %y_in_tile.indvar160, 1
  store i32 %invar.inc161, ptr %y_in_tile.invar_address159, align 4
  %261 = icmp eq i32 %y_in_tile.indvar160, %thread_id.y149
  %262 = icmp eq i32 8192, %tile_bound152
  br i1 %262, label %is_full_tile-true162, label %is_full_tile-false163

is_full_tile-after164:                            ; preds = %tile_loop.loop_exit178, %tile_loop.loop_exit165
  br label %y_in_tile.loop_header157, !llvm.loop !304

y_in_tile.loop_exit156:                           ; preds = %y_in_tile.loop_header157
  %current_output196 = getelementptr inbounds float, ptr %partial_reduction_result145, i32 0
  %partial_reduction_result198 = load float, ptr %current_output196, align 4
  %263 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result198, i32 16, i32 31)
  store float %263, ptr %result_from_other_lane197, align 4
  call void @region_3_25(ptr %current_output196, ptr %result_from_other_lane197, ptr %return_buffer199)
  %264 = load float, ptr %return_buffer199, align 4
  store float %264, ptr %current_output196, align 4
  %partial_reduction_result201 = load float, ptr %current_output196, align 4
  %265 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result201, i32 8, i32 31)
  store float %265, ptr %result_from_other_lane200, align 4
  call void @region_3_25(ptr %current_output196, ptr %result_from_other_lane200, ptr %return_buffer202)
  %266 = load float, ptr %return_buffer202, align 4
  store float %266, ptr %current_output196, align 4
  %partial_reduction_result204 = load float, ptr %current_output196, align 4
  %267 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result204, i32 4, i32 31)
  store float %267, ptr %result_from_other_lane203, align 4
  call void @region_3_25(ptr %current_output196, ptr %result_from_other_lane203, ptr %return_buffer205)
  %268 = load float, ptr %return_buffer205, align 4
  store float %268, ptr %current_output196, align 4
  %partial_reduction_result207 = load float, ptr %current_output196, align 4
  %269 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result207, i32 2, i32 31)
  store float %269, ptr %result_from_other_lane206, align 4
  call void @region_3_25(ptr %current_output196, ptr %result_from_other_lane206, ptr %return_buffer208)
  %270 = load float, ptr %return_buffer208, align 4
  store float %270, ptr %current_output196, align 4
  %partial_reduction_result210 = load float, ptr %current_output196, align 4
  %271 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result210, i32 1, i32 31)
  store float %271, ptr %result_from_other_lane209, align 4
  call void @region_3_25(ptr %current_output196, ptr %result_from_other_lane209, ptr %return_buffer211)
  %272 = load float, ptr %return_buffer211, align 4
  store float %272, ptr %current_output196, align 4
  %273 = udiv i32 %thread_id.x148, 32
  %274 = icmp eq i32 %lane_id150, 0
  br i1 %274, label %intra_warp_reduce_write-true212, label %intra_warp_reduce_write-after213

intra_warp_reduce_write-after213:                 ; preds = %intra_warp_reduce_write-true212, %y_in_tile.loop_exit156
  call void @llvm.nvvm.barrier0()
  %275 = icmp eq i32 %273, 0
  br i1 %275, label %inter_warp_reduce-true214, label %inter_warp_reduce-after215

inter_warp_reduce-after215:                       ; preds = %reduction_write_output-after233, %intra_warp_reduce_write-after213
  br label %reduce-group-2-after

early_return147:                                  ; preds = %reduce-group-2-true
  ret void

is_full_tile-true162:                             ; preds = %y_in_tile.loop_body158
  %276 = mul i32 %thread_id.x148, 2
  store i32 0, ptr %tile_loop.invar_address168, align 4
  br label %tile_loop.loop_header166

tile_loop.loop_header166:                         ; preds = %tile_loop.loop_body167, %is_full_tile-true162
  %tile_loop.indvar169 = load i32, ptr %tile_loop.invar_address168, align 4
  %277 = icmp uge i32 %tile_loop.indvar169, 8
  br i1 %277, label %tile_loop.loop_exit165, label %tile_loop.loop_body167

tile_loop.loop_body167:                           ; preds = %tile_loop.loop_header166
  %invar.inc170 = add nuw nsw i32 %tile_loop.indvar169, 1
  store i32 %invar.inc170, ptr %tile_loop.invar_address168, align 4
  %278 = icmp eq i32 %tile_loop.indvar169, 0
  %279 = mul i32 %tile_loop.indvar169, 1024
  %280 = add i32 %279, 0
  %x_loc171 = add i32 %280, %276
  %281 = add i32 %tile_origin.1154, %y_in_tile.indvar160
  %282 = add i32 %tile_origin.2155, %x_loc171
  %283 = mul nuw nsw i32 %282, 1
  %284 = add nuw nsw i32 0, %283
  %285 = mul nuw nsw i32 %281, 8192
  %286 = add nuw nsw i32 %284, %285
  %287 = mul nuw nsw i32 %tile_origin.0153, 8192
  %288 = add nuw nsw i32 %286, %287
  %289 = udiv i32 %288, 1
  %Arg_2.3 = getelementptr inbounds i32, ptr %arg2, i32 %288
  %Arg_2.3172 = load i32, ptr %Arg_2.3, align 4, !invariant.load !297
  %290 = sitofp i32 %Arg_2.3172 to float
  store float %290, ptr %reduction_input_address144, align 4
  %291 = getelementptr inbounds float, ptr %partial_reduction_result145, i32 0
  call void @region_3_25(ptr %291, ptr %reduction_input_address144, ptr %return_buffer173)
  %292 = load float, ptr %return_buffer173, align 4
  store float %292, ptr %291, align 4
  %293 = mul i32 %tile_loop.indvar169, 1024
  %294 = add i32 %293, 1
  %x_loc174 = add i32 %294, %276
  %295 = add i32 %tile_origin.1154, %y_in_tile.indvar160
  %296 = add i32 %tile_origin.2155, %x_loc174
  %297 = mul nuw nsw i32 %296, 1
  %298 = add nuw nsw i32 0, %297
  %299 = mul nuw nsw i32 %295, 8192
  %300 = add nuw nsw i32 %298, %299
  %301 = mul nuw nsw i32 %tile_origin.0153, 8192
  %302 = add nuw nsw i32 %300, %301
  %303 = udiv i32 %302, 1
  %Arg_2.3175 = getelementptr inbounds i32, ptr %arg2, i32 %302
  %Arg_2.3176 = load i32, ptr %Arg_2.3175, align 4, !invariant.load !297
  %304 = sitofp i32 %Arg_2.3176 to float
  store float %304, ptr %reduction_input_address144, align 4
  %305 = getelementptr inbounds float, ptr %partial_reduction_result145, i32 0
  call void @region_3_25(ptr %305, ptr %reduction_input_address144, ptr %return_buffer177)
  %306 = load float, ptr %return_buffer177, align 4
  store float %306, ptr %305, align 4
  br label %tile_loop.loop_header166, !llvm.loop !305

tile_loop.loop_exit165:                           ; preds = %tile_loop.loop_header166
  br label %is_full_tile-after164

is_full_tile-false163:                            ; preds = %y_in_tile.loop_body158
  %307 = mul i32 %thread_id.x148, 2
  store i32 0, ptr %tile_loop.invar_address181, align 4
  br label %tile_loop.loop_header179

tile_loop.loop_header179:                         ; preds = %x_in_tile-after192, %is_full_tile-false163
  %tile_loop.indvar182 = load i32, ptr %tile_loop.invar_address181, align 4
  %308 = icmp uge i32 %tile_loop.indvar182, 8
  br i1 %308, label %tile_loop.loop_exit178, label %tile_loop.loop_body180

tile_loop.loop_body180:                           ; preds = %tile_loop.loop_header179
  %invar.inc183 = add nuw nsw i32 %tile_loop.indvar182, 1
  store i32 %invar.inc183, ptr %tile_loop.invar_address181, align 4
  %309 = icmp eq i32 %tile_loop.indvar182, 0
  %310 = mul i32 %tile_loop.indvar182, 1024
  %311 = add i32 %310, 0
  %x_loc184 = add i32 %311, %307
  %312 = add i32 %tile_origin.1154, %y_in_tile.indvar160
  %313 = add i32 %tile_origin.2155, %x_loc184
  %314 = icmp ult i32 %x_loc184, %tile_bound152
  br i1 %314, label %x_in_tile-true185, label %x_in_tile-after186

x_in_tile-after186:                               ; preds = %x_in_tile-true185, %tile_loop.loop_body180
  %315 = mul i32 %tile_loop.indvar182, 1024
  %316 = add i32 %315, 1
  %x_loc190 = add i32 %316, %307
  %317 = add i32 %tile_origin.1154, %y_in_tile.indvar160
  %318 = add i32 %tile_origin.2155, %x_loc190
  %319 = icmp ult i32 %x_loc190, %tile_bound152
  br i1 %319, label %x_in_tile-true191, label %x_in_tile-after192

x_in_tile-after192:                               ; preds = %x_in_tile-true191, %x_in_tile-after186
  br label %tile_loop.loop_header179, !llvm.loop !306

tile_loop.loop_exit178:                           ; preds = %tile_loop.loop_header179
  br label %is_full_tile-after164

x_in_tile-true185:                                ; preds = %tile_loop.loop_body180
  %320 = mul nuw nsw i32 %313, 1
  %321 = add nuw nsw i32 0, %320
  %322 = mul nuw nsw i32 %312, 8192
  %323 = add nuw nsw i32 %321, %322
  %324 = mul nuw nsw i32 %tile_origin.0153, 8192
  %325 = add nuw nsw i32 %323, %324
  %326 = udiv i32 %325, 1
  %Arg_2.3187 = getelementptr inbounds i32, ptr %arg2, i32 %325
  %Arg_2.3188 = load i32, ptr %Arg_2.3187, align 4, !invariant.load !297
  %327 = sitofp i32 %Arg_2.3188 to float
  store float %327, ptr %reduction_input_address144, align 4
  %328 = getelementptr inbounds float, ptr %partial_reduction_result145, i32 0
  call void @region_3_25(ptr %328, ptr %reduction_input_address144, ptr %return_buffer189)
  %329 = load float, ptr %return_buffer189, align 4
  store float %329, ptr %328, align 4
  br label %x_in_tile-after186

x_in_tile-true191:                                ; preds = %x_in_tile-after186
  %330 = mul nuw nsw i32 %318, 1
  %331 = add nuw nsw i32 0, %330
  %332 = mul nuw nsw i32 %317, 8192
  %333 = add nuw nsw i32 %331, %332
  %334 = mul nuw nsw i32 %tile_origin.0153, 8192
  %335 = add nuw nsw i32 %333, %334
  %336 = udiv i32 %335, 1
  %Arg_2.3193 = getelementptr inbounds i32, ptr %arg2, i32 %335
  %Arg_2.3194 = load i32, ptr %Arg_2.3193, align 4, !invariant.load !297
  %337 = sitofp i32 %Arg_2.3194 to float
  store float %337, ptr %reduction_input_address144, align 4
  %338 = getelementptr inbounds float, ptr %partial_reduction_result145, i32 0
  call void @region_3_25(ptr %338, ptr %reduction_input_address144, ptr %return_buffer195)
  %339 = load float, ptr %return_buffer195, align 4
  store float %339, ptr %338, align 4
  br label %x_in_tile-after192

intra_warp_reduce_write-true212:                  ; preds = %y_in_tile.loop_exit156
  %340 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache2, i32 0, i32 %248, i32 0, i32 %273
  %341 = addrspacecast ptr addrspace(3) %340 to ptr
  %342 = load float, ptr %current_output196, align 4
  store float %342, ptr %341, align 4
  br label %intra_warp_reduce_write-after213

inter_warp_reduce-true214:                        ; preds = %intra_warp_reduce_write-after213
  %343 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache2, i32 0, i32 %248, i32 0, i32 %lane_id150
  %344 = addrspacecast ptr addrspace(3) %343 to ptr
  store float %region_0_59_constant_10146, ptr %initial_value_addr216, align 4
  %345 = icmp ult i32 %thread_id.x148, 16
  %346 = select i1 %345, ptr %344, ptr %initial_value_addr216
  %partial_reduction_result218 = load float, ptr %346, align 4
  %347 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result218, i32 16, i32 31)
  store float %347, ptr %result_from_other_lane217, align 4
  call void @region_3_25(ptr %346, ptr %result_from_other_lane217, ptr %return_buffer219)
  %348 = load float, ptr %return_buffer219, align 4
  store float %348, ptr %346, align 4
  %partial_reduction_result221 = load float, ptr %346, align 4
  %349 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result221, i32 8, i32 31)
  store float %349, ptr %result_from_other_lane220, align 4
  call void @region_3_25(ptr %346, ptr %result_from_other_lane220, ptr %return_buffer222)
  %350 = load float, ptr %return_buffer222, align 4
  store float %350, ptr %346, align 4
  %partial_reduction_result224 = load float, ptr %346, align 4
  %351 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result224, i32 4, i32 31)
  store float %351, ptr %result_from_other_lane223, align 4
  call void @region_3_25(ptr %346, ptr %result_from_other_lane223, ptr %return_buffer225)
  %352 = load float, ptr %return_buffer225, align 4
  store float %352, ptr %346, align 4
  %partial_reduction_result227 = load float, ptr %346, align 4
  %353 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result227, i32 2, i32 31)
  store float %353, ptr %result_from_other_lane226, align 4
  call void @region_3_25(ptr %346, ptr %result_from_other_lane226, ptr %return_buffer228)
  %354 = load float, ptr %return_buffer228, align 4
  store float %354, ptr %346, align 4
  %partial_reduction_result230 = load float, ptr %346, align 4
  %355 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result230, i32 1, i32 31)
  store float %355, ptr %result_from_other_lane229, align 4
  call void @region_3_25(ptr %346, ptr %result_from_other_lane229, ptr %return_buffer231)
  %356 = load float, ptr %return_buffer231, align 4
  store float %356, ptr %346, align 4
  %357 = icmp eq i32 %thread_id.x148, 0
  br i1 %357, label %reduction_write_output-true232, label %reduction_write_output-after233

reduction_write_output-after233:                  ; preds = %reduction_write_output-true232, %inter_warp_reduce-true214
  br label %inter_warp_reduce-after215

reduction_write_output-true232:                   ; preds = %inter_warp_reduce-true214
  %358 = mul i32 %thread_id.x148, 2
  %359 = add i32 %tile_origin.1154, %thread_id.y149
  %360 = add i32 %tile_origin.2155, %358
  %361 = add i32 %360, 0
  %output234 = load float, ptr %346, align 4
  store float %output234, ptr %arg9, align 4
  br label %reduction_write_output-after233

reduce-group-3-true:                              ; preds = %reduce-group-2-after
  %region_0_59_constant_10237 = load float, ptr @0, align 4
  %362 = getelementptr inbounds float, ptr %partial_reduction_result236, i32 0
  store float %region_0_59_constant_10237, ptr %362, align 4
  %363 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !293
  %364 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %365 = urem i32 %363, 512
  %366 = udiv i32 %363, 512
  %367 = mul i32 %364, 1
  %368 = add i32 %367, %366
  %369 = icmp ult i32 %368, 1
  br i1 %369, label %370, label %early_return238

370:                                              ; preds = %reduce-group-3-true
  %thread_id.x239 = urem i32 %365, 512
  %thread_id.y240 = udiv i32 %365, 512
  %lane_id241 = urem i32 %365, 32
  %371 = udiv i32 %368, 1
  %372 = urem i32 %371, 1
  %373 = udiv i32 %368, 1
  %374 = urem i32 %373, 1
  %375 = udiv i32 %368, 1
  %376 = icmp eq i32 %374, 0
  %tile_bound242 = select i1 %376, i32 1, i32 1
  %377 = icmp eq i32 %372, 0
  %tile_bound243 = select i1 %377, i32 8192, i32 8192
  %tile_origin.0244 = mul i32 %375, 1
  %tile_origin.1245 = mul i32 %374, 1
  %tile_origin.2246 = mul i32 %372, 8192
  store i32 %thread_id.y240, ptr %y_in_tile.invar_address250, align 4
  br label %y_in_tile.loop_header248

y_in_tile.loop_header248:                         ; preds = %is_full_tile-after255, %370
  %y_in_tile.indvar251 = load i32, ptr %y_in_tile.invar_address250, align 4
  %378 = icmp uge i32 %y_in_tile.indvar251, %tile_bound242
  br i1 %378, label %y_in_tile.loop_exit247, label %y_in_tile.loop_body249

y_in_tile.loop_body249:                           ; preds = %y_in_tile.loop_header248
  %invar.inc252 = add nuw nsw i32 %y_in_tile.indvar251, 1
  store i32 %invar.inc252, ptr %y_in_tile.invar_address250, align 4
  %379 = icmp eq i32 %y_in_tile.indvar251, %thread_id.y240
  %380 = icmp eq i32 8192, %tile_bound243
  br i1 %380, label %is_full_tile-true253, label %is_full_tile-false254

is_full_tile-after255:                            ; preds = %tile_loop.loop_exit269, %tile_loop.loop_exit256
  br label %y_in_tile.loop_header248, !llvm.loop !307

y_in_tile.loop_exit247:                           ; preds = %y_in_tile.loop_header248
  %current_output287 = getelementptr inbounds float, ptr %partial_reduction_result236, i32 0
  %partial_reduction_result289 = load float, ptr %current_output287, align 4
  %381 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result289, i32 16, i32 31)
  store float %381, ptr %result_from_other_lane288, align 4
  call void @region_4_32(ptr %current_output287, ptr %result_from_other_lane288, ptr %return_buffer290)
  %382 = load float, ptr %return_buffer290, align 4
  store float %382, ptr %current_output287, align 4
  %partial_reduction_result292 = load float, ptr %current_output287, align 4
  %383 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result292, i32 8, i32 31)
  store float %383, ptr %result_from_other_lane291, align 4
  call void @region_4_32(ptr %current_output287, ptr %result_from_other_lane291, ptr %return_buffer293)
  %384 = load float, ptr %return_buffer293, align 4
  store float %384, ptr %current_output287, align 4
  %partial_reduction_result295 = load float, ptr %current_output287, align 4
  %385 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result295, i32 4, i32 31)
  store float %385, ptr %result_from_other_lane294, align 4
  call void @region_4_32(ptr %current_output287, ptr %result_from_other_lane294, ptr %return_buffer296)
  %386 = load float, ptr %return_buffer296, align 4
  store float %386, ptr %current_output287, align 4
  %partial_reduction_result298 = load float, ptr %current_output287, align 4
  %387 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result298, i32 2, i32 31)
  store float %387, ptr %result_from_other_lane297, align 4
  call void @region_4_32(ptr %current_output287, ptr %result_from_other_lane297, ptr %return_buffer299)
  %388 = load float, ptr %return_buffer299, align 4
  store float %388, ptr %current_output287, align 4
  %partial_reduction_result301 = load float, ptr %current_output287, align 4
  %389 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result301, i32 1, i32 31)
  store float %389, ptr %result_from_other_lane300, align 4
  call void @region_4_32(ptr %current_output287, ptr %result_from_other_lane300, ptr %return_buffer302)
  %390 = load float, ptr %return_buffer302, align 4
  store float %390, ptr %current_output287, align 4
  %391 = udiv i32 %thread_id.x239, 32
  %392 = icmp eq i32 %lane_id241, 0
  br i1 %392, label %intra_warp_reduce_write-true303, label %intra_warp_reduce_write-after304

intra_warp_reduce_write-after304:                 ; preds = %intra_warp_reduce_write-true303, %y_in_tile.loop_exit247
  call void @llvm.nvvm.barrier0()
  %393 = icmp eq i32 %391, 0
  br i1 %393, label %inter_warp_reduce-true305, label %inter_warp_reduce-after306

inter_warp_reduce-after306:                       ; preds = %reduction_write_output-after324, %intra_warp_reduce_write-after304
  br label %reduce-group-3-after

early_return238:                                  ; preds = %reduce-group-3-true
  ret void

is_full_tile-true253:                             ; preds = %y_in_tile.loop_body249
  %394 = mul i32 %thread_id.x239, 2
  store i32 0, ptr %tile_loop.invar_address259, align 4
  br label %tile_loop.loop_header257

tile_loop.loop_header257:                         ; preds = %tile_loop.loop_body258, %is_full_tile-true253
  %tile_loop.indvar260 = load i32, ptr %tile_loop.invar_address259, align 4
  %395 = icmp uge i32 %tile_loop.indvar260, 8
  br i1 %395, label %tile_loop.loop_exit256, label %tile_loop.loop_body258

tile_loop.loop_body258:                           ; preds = %tile_loop.loop_header257
  %invar.inc261 = add nuw nsw i32 %tile_loop.indvar260, 1
  store i32 %invar.inc261, ptr %tile_loop.invar_address259, align 4
  %396 = icmp eq i32 %tile_loop.indvar260, 0
  %397 = mul i32 %tile_loop.indvar260, 1024
  %398 = add i32 %397, 0
  %x_loc262 = add i32 %398, %394
  %399 = add i32 %tile_origin.1245, %y_in_tile.indvar251
  %400 = add i32 %tile_origin.2246, %x_loc262
  %401 = mul nuw nsw i32 %400, 1
  %402 = add nuw nsw i32 0, %401
  %403 = mul nuw nsw i32 %399, 8192
  %404 = add nuw nsw i32 %402, %403
  %405 = mul nuw nsw i32 %tile_origin.0244, 8192
  %406 = add nuw nsw i32 %404, %405
  %407 = udiv i32 %406, 1
  %Arg_3.4 = getelementptr inbounds i32, ptr %arg3, i32 %406
  %Arg_3.4263 = load i32, ptr %Arg_3.4, align 4, !invariant.load !297
  %408 = sitofp i32 %Arg_3.4263 to float
  store float %408, ptr %reduction_input_address235, align 4
  %409 = getelementptr inbounds float, ptr %partial_reduction_result236, i32 0
  call void @region_4_32(ptr %409, ptr %reduction_input_address235, ptr %return_buffer264)
  %410 = load float, ptr %return_buffer264, align 4
  store float %410, ptr %409, align 4
  %411 = mul i32 %tile_loop.indvar260, 1024
  %412 = add i32 %411, 1
  %x_loc265 = add i32 %412, %394
  %413 = add i32 %tile_origin.1245, %y_in_tile.indvar251
  %414 = add i32 %tile_origin.2246, %x_loc265
  %415 = mul nuw nsw i32 %414, 1
  %416 = add nuw nsw i32 0, %415
  %417 = mul nuw nsw i32 %413, 8192
  %418 = add nuw nsw i32 %416, %417
  %419 = mul nuw nsw i32 %tile_origin.0244, 8192
  %420 = add nuw nsw i32 %418, %419
  %421 = udiv i32 %420, 1
  %Arg_3.4266 = getelementptr inbounds i32, ptr %arg3, i32 %420
  %Arg_3.4267 = load i32, ptr %Arg_3.4266, align 4, !invariant.load !297
  %422 = sitofp i32 %Arg_3.4267 to float
  store float %422, ptr %reduction_input_address235, align 4
  %423 = getelementptr inbounds float, ptr %partial_reduction_result236, i32 0
  call void @region_4_32(ptr %423, ptr %reduction_input_address235, ptr %return_buffer268)
  %424 = load float, ptr %return_buffer268, align 4
  store float %424, ptr %423, align 4
  br label %tile_loop.loop_header257, !llvm.loop !308

tile_loop.loop_exit256:                           ; preds = %tile_loop.loop_header257
  br label %is_full_tile-after255

is_full_tile-false254:                            ; preds = %y_in_tile.loop_body249
  %425 = mul i32 %thread_id.x239, 2
  store i32 0, ptr %tile_loop.invar_address272, align 4
  br label %tile_loop.loop_header270

tile_loop.loop_header270:                         ; preds = %x_in_tile-after283, %is_full_tile-false254
  %tile_loop.indvar273 = load i32, ptr %tile_loop.invar_address272, align 4
  %426 = icmp uge i32 %tile_loop.indvar273, 8
  br i1 %426, label %tile_loop.loop_exit269, label %tile_loop.loop_body271

tile_loop.loop_body271:                           ; preds = %tile_loop.loop_header270
  %invar.inc274 = add nuw nsw i32 %tile_loop.indvar273, 1
  store i32 %invar.inc274, ptr %tile_loop.invar_address272, align 4
  %427 = icmp eq i32 %tile_loop.indvar273, 0
  %428 = mul i32 %tile_loop.indvar273, 1024
  %429 = add i32 %428, 0
  %x_loc275 = add i32 %429, %425
  %430 = add i32 %tile_origin.1245, %y_in_tile.indvar251
  %431 = add i32 %tile_origin.2246, %x_loc275
  %432 = icmp ult i32 %x_loc275, %tile_bound243
  br i1 %432, label %x_in_tile-true276, label %x_in_tile-after277

x_in_tile-after277:                               ; preds = %x_in_tile-true276, %tile_loop.loop_body271
  %433 = mul i32 %tile_loop.indvar273, 1024
  %434 = add i32 %433, 1
  %x_loc281 = add i32 %434, %425
  %435 = add i32 %tile_origin.1245, %y_in_tile.indvar251
  %436 = add i32 %tile_origin.2246, %x_loc281
  %437 = icmp ult i32 %x_loc281, %tile_bound243
  br i1 %437, label %x_in_tile-true282, label %x_in_tile-after283

x_in_tile-after283:                               ; preds = %x_in_tile-true282, %x_in_tile-after277
  br label %tile_loop.loop_header270, !llvm.loop !309

tile_loop.loop_exit269:                           ; preds = %tile_loop.loop_header270
  br label %is_full_tile-after255

x_in_tile-true276:                                ; preds = %tile_loop.loop_body271
  %438 = mul nuw nsw i32 %431, 1
  %439 = add nuw nsw i32 0, %438
  %440 = mul nuw nsw i32 %430, 8192
  %441 = add nuw nsw i32 %439, %440
  %442 = mul nuw nsw i32 %tile_origin.0244, 8192
  %443 = add nuw nsw i32 %441, %442
  %444 = udiv i32 %443, 1
  %Arg_3.4278 = getelementptr inbounds i32, ptr %arg3, i32 %443
  %Arg_3.4279 = load i32, ptr %Arg_3.4278, align 4, !invariant.load !297
  %445 = sitofp i32 %Arg_3.4279 to float
  store float %445, ptr %reduction_input_address235, align 4
  %446 = getelementptr inbounds float, ptr %partial_reduction_result236, i32 0
  call void @region_4_32(ptr %446, ptr %reduction_input_address235, ptr %return_buffer280)
  %447 = load float, ptr %return_buffer280, align 4
  store float %447, ptr %446, align 4
  br label %x_in_tile-after277

x_in_tile-true282:                                ; preds = %x_in_tile-after277
  %448 = mul nuw nsw i32 %436, 1
  %449 = add nuw nsw i32 0, %448
  %450 = mul nuw nsw i32 %435, 8192
  %451 = add nuw nsw i32 %449, %450
  %452 = mul nuw nsw i32 %tile_origin.0244, 8192
  %453 = add nuw nsw i32 %451, %452
  %454 = udiv i32 %453, 1
  %Arg_3.4284 = getelementptr inbounds i32, ptr %arg3, i32 %453
  %Arg_3.4285 = load i32, ptr %Arg_3.4284, align 4, !invariant.load !297
  %455 = sitofp i32 %Arg_3.4285 to float
  store float %455, ptr %reduction_input_address235, align 4
  %456 = getelementptr inbounds float, ptr %partial_reduction_result236, i32 0
  call void @region_4_32(ptr %456, ptr %reduction_input_address235, ptr %return_buffer286)
  %457 = load float, ptr %return_buffer286, align 4
  store float %457, ptr %456, align 4
  br label %x_in_tile-after283

intra_warp_reduce_write-true303:                  ; preds = %y_in_tile.loop_exit247
  %458 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache3, i32 0, i32 %366, i32 0, i32 %391
  %459 = addrspacecast ptr addrspace(3) %458 to ptr
  %460 = load float, ptr %current_output287, align 4
  store float %460, ptr %459, align 4
  br label %intra_warp_reduce_write-after304

inter_warp_reduce-true305:                        ; preds = %intra_warp_reduce_write-after304
  %461 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache3, i32 0, i32 %366, i32 0, i32 %lane_id241
  %462 = addrspacecast ptr addrspace(3) %461 to ptr
  store float %region_0_59_constant_10237, ptr %initial_value_addr307, align 4
  %463 = icmp ult i32 %thread_id.x239, 16
  %464 = select i1 %463, ptr %462, ptr %initial_value_addr307
  %partial_reduction_result309 = load float, ptr %464, align 4
  %465 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result309, i32 16, i32 31)
  store float %465, ptr %result_from_other_lane308, align 4
  call void @region_4_32(ptr %464, ptr %result_from_other_lane308, ptr %return_buffer310)
  %466 = load float, ptr %return_buffer310, align 4
  store float %466, ptr %464, align 4
  %partial_reduction_result312 = load float, ptr %464, align 4
  %467 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result312, i32 8, i32 31)
  store float %467, ptr %result_from_other_lane311, align 4
  call void @region_4_32(ptr %464, ptr %result_from_other_lane311, ptr %return_buffer313)
  %468 = load float, ptr %return_buffer313, align 4
  store float %468, ptr %464, align 4
  %partial_reduction_result315 = load float, ptr %464, align 4
  %469 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result315, i32 4, i32 31)
  store float %469, ptr %result_from_other_lane314, align 4
  call void @region_4_32(ptr %464, ptr %result_from_other_lane314, ptr %return_buffer316)
  %470 = load float, ptr %return_buffer316, align 4
  store float %470, ptr %464, align 4
  %partial_reduction_result318 = load float, ptr %464, align 4
  %471 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result318, i32 2, i32 31)
  store float %471, ptr %result_from_other_lane317, align 4
  call void @region_4_32(ptr %464, ptr %result_from_other_lane317, ptr %return_buffer319)
  %472 = load float, ptr %return_buffer319, align 4
  store float %472, ptr %464, align 4
  %partial_reduction_result321 = load float, ptr %464, align 4
  %473 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result321, i32 1, i32 31)
  store float %473, ptr %result_from_other_lane320, align 4
  call void @region_4_32(ptr %464, ptr %result_from_other_lane320, ptr %return_buffer322)
  %474 = load float, ptr %return_buffer322, align 4
  store float %474, ptr %464, align 4
  %475 = icmp eq i32 %thread_id.x239, 0
  br i1 %475, label %reduction_write_output-true323, label %reduction_write_output-after324

reduction_write_output-after324:                  ; preds = %reduction_write_output-true323, %inter_warp_reduce-true305
  br label %inter_warp_reduce-after306

reduction_write_output-true323:                   ; preds = %inter_warp_reduce-true305
  %476 = mul i32 %thread_id.x239, 2
  %477 = add i32 %tile_origin.1245, %thread_id.y240
  %478 = add i32 %tile_origin.2246, %476
  %479 = add i32 %478, 0
  %output325 = load float, ptr %464, align 4
  store float %output325, ptr %arg10, align 4
  br label %reduction_write_output-after324

reduce-group-4-true:                              ; preds = %reduce-group-3-after
  %region_0_59_constant_10328 = load float, ptr @0, align 4
  %480 = getelementptr inbounds float, ptr %partial_reduction_result327, i32 0
  store float %region_0_59_constant_10328, ptr %480, align 4
  %481 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !293
  %482 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %483 = urem i32 %481, 512
  %484 = udiv i32 %481, 512
  %485 = mul i32 %482, 1
  %486 = add i32 %485, %484
  %487 = icmp ult i32 %486, 1
  br i1 %487, label %488, label %early_return329

488:                                              ; preds = %reduce-group-4-true
  %thread_id.x330 = urem i32 %483, 512
  %thread_id.y331 = udiv i32 %483, 512
  %lane_id332 = urem i32 %483, 32
  %489 = udiv i32 %486, 1
  %490 = urem i32 %489, 1
  %491 = udiv i32 %486, 1
  %492 = urem i32 %491, 1
  %493 = udiv i32 %486, 1
  %494 = icmp eq i32 %492, 0
  %tile_bound333 = select i1 %494, i32 1, i32 1
  %495 = icmp eq i32 %490, 0
  %tile_bound334 = select i1 %495, i32 8192, i32 8192
  %tile_origin.0335 = mul i32 %493, 1
  %tile_origin.1336 = mul i32 %492, 1
  %tile_origin.2337 = mul i32 %490, 8192
  store i32 %thread_id.y331, ptr %y_in_tile.invar_address341, align 4
  br label %y_in_tile.loop_header339

y_in_tile.loop_header339:                         ; preds = %is_full_tile-after346, %488
  %y_in_tile.indvar342 = load i32, ptr %y_in_tile.invar_address341, align 4
  %496 = icmp uge i32 %y_in_tile.indvar342, %tile_bound333
  br i1 %496, label %y_in_tile.loop_exit338, label %y_in_tile.loop_body340

y_in_tile.loop_body340:                           ; preds = %y_in_tile.loop_header339
  %invar.inc343 = add nuw nsw i32 %y_in_tile.indvar342, 1
  store i32 %invar.inc343, ptr %y_in_tile.invar_address341, align 4
  %497 = icmp eq i32 %y_in_tile.indvar342, %thread_id.y331
  %498 = icmp eq i32 8192, %tile_bound334
  br i1 %498, label %is_full_tile-true344, label %is_full_tile-false345

is_full_tile-after346:                            ; preds = %tile_loop.loop_exit360, %tile_loop.loop_exit347
  br label %y_in_tile.loop_header339, !llvm.loop !310

y_in_tile.loop_exit338:                           ; preds = %y_in_tile.loop_header339
  %current_output378 = getelementptr inbounds float, ptr %partial_reduction_result327, i32 0
  %partial_reduction_result380 = load float, ptr %current_output378, align 4
  %499 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result380, i32 16, i32 31)
  store float %499, ptr %result_from_other_lane379, align 4
  call void @region_5_39(ptr %current_output378, ptr %result_from_other_lane379, ptr %return_buffer381)
  %500 = load float, ptr %return_buffer381, align 4
  store float %500, ptr %current_output378, align 4
  %partial_reduction_result383 = load float, ptr %current_output378, align 4
  %501 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result383, i32 8, i32 31)
  store float %501, ptr %result_from_other_lane382, align 4
  call void @region_5_39(ptr %current_output378, ptr %result_from_other_lane382, ptr %return_buffer384)
  %502 = load float, ptr %return_buffer384, align 4
  store float %502, ptr %current_output378, align 4
  %partial_reduction_result386 = load float, ptr %current_output378, align 4
  %503 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result386, i32 4, i32 31)
  store float %503, ptr %result_from_other_lane385, align 4
  call void @region_5_39(ptr %current_output378, ptr %result_from_other_lane385, ptr %return_buffer387)
  %504 = load float, ptr %return_buffer387, align 4
  store float %504, ptr %current_output378, align 4
  %partial_reduction_result389 = load float, ptr %current_output378, align 4
  %505 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result389, i32 2, i32 31)
  store float %505, ptr %result_from_other_lane388, align 4
  call void @region_5_39(ptr %current_output378, ptr %result_from_other_lane388, ptr %return_buffer390)
  %506 = load float, ptr %return_buffer390, align 4
  store float %506, ptr %current_output378, align 4
  %partial_reduction_result392 = load float, ptr %current_output378, align 4
  %507 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result392, i32 1, i32 31)
  store float %507, ptr %result_from_other_lane391, align 4
  call void @region_5_39(ptr %current_output378, ptr %result_from_other_lane391, ptr %return_buffer393)
  %508 = load float, ptr %return_buffer393, align 4
  store float %508, ptr %current_output378, align 4
  %509 = udiv i32 %thread_id.x330, 32
  %510 = icmp eq i32 %lane_id332, 0
  br i1 %510, label %intra_warp_reduce_write-true394, label %intra_warp_reduce_write-after395

intra_warp_reduce_write-after395:                 ; preds = %intra_warp_reduce_write-true394, %y_in_tile.loop_exit338
  call void @llvm.nvvm.barrier0()
  %511 = icmp eq i32 %509, 0
  br i1 %511, label %inter_warp_reduce-true396, label %inter_warp_reduce-after397

inter_warp_reduce-after397:                       ; preds = %reduction_write_output-after415, %intra_warp_reduce_write-after395
  br label %reduce-group-4-after

early_return329:                                  ; preds = %reduce-group-4-true
  ret void

is_full_tile-true344:                             ; preds = %y_in_tile.loop_body340
  %512 = mul i32 %thread_id.x330, 2
  store i32 0, ptr %tile_loop.invar_address350, align 4
  br label %tile_loop.loop_header348

tile_loop.loop_header348:                         ; preds = %tile_loop.loop_body349, %is_full_tile-true344
  %tile_loop.indvar351 = load i32, ptr %tile_loop.invar_address350, align 4
  %513 = icmp uge i32 %tile_loop.indvar351, 8
  br i1 %513, label %tile_loop.loop_exit347, label %tile_loop.loop_body349

tile_loop.loop_body349:                           ; preds = %tile_loop.loop_header348
  %invar.inc352 = add nuw nsw i32 %tile_loop.indvar351, 1
  store i32 %invar.inc352, ptr %tile_loop.invar_address350, align 4
  %514 = icmp eq i32 %tile_loop.indvar351, 0
  %515 = mul i32 %tile_loop.indvar351, 1024
  %516 = add i32 %515, 0
  %x_loc353 = add i32 %516, %512
  %517 = add i32 %tile_origin.1336, %y_in_tile.indvar342
  %518 = add i32 %tile_origin.2337, %x_loc353
  %519 = mul nuw nsw i32 %518, 1
  %520 = add nuw nsw i32 0, %519
  %521 = mul nuw nsw i32 %517, 8192
  %522 = add nuw nsw i32 %520, %521
  %523 = mul nuw nsw i32 %tile_origin.0335, 8192
  %524 = add nuw nsw i32 %522, %523
  %525 = udiv i32 %524, 1
  %Arg_4.5 = getelementptr inbounds i32, ptr %arg4, i32 %524
  %Arg_4.5354 = load i32, ptr %Arg_4.5, align 4, !invariant.load !297
  %526 = sitofp i32 %Arg_4.5354 to float
  store float %526, ptr %reduction_input_address326, align 4
  %527 = getelementptr inbounds float, ptr %partial_reduction_result327, i32 0
  call void @region_5_39(ptr %527, ptr %reduction_input_address326, ptr %return_buffer355)
  %528 = load float, ptr %return_buffer355, align 4
  store float %528, ptr %527, align 4
  %529 = mul i32 %tile_loop.indvar351, 1024
  %530 = add i32 %529, 1
  %x_loc356 = add i32 %530, %512
  %531 = add i32 %tile_origin.1336, %y_in_tile.indvar342
  %532 = add i32 %tile_origin.2337, %x_loc356
  %533 = mul nuw nsw i32 %532, 1
  %534 = add nuw nsw i32 0, %533
  %535 = mul nuw nsw i32 %531, 8192
  %536 = add nuw nsw i32 %534, %535
  %537 = mul nuw nsw i32 %tile_origin.0335, 8192
  %538 = add nuw nsw i32 %536, %537
  %539 = udiv i32 %538, 1
  %Arg_4.5357 = getelementptr inbounds i32, ptr %arg4, i32 %538
  %Arg_4.5358 = load i32, ptr %Arg_4.5357, align 4, !invariant.load !297
  %540 = sitofp i32 %Arg_4.5358 to float
  store float %540, ptr %reduction_input_address326, align 4
  %541 = getelementptr inbounds float, ptr %partial_reduction_result327, i32 0
  call void @region_5_39(ptr %541, ptr %reduction_input_address326, ptr %return_buffer359)
  %542 = load float, ptr %return_buffer359, align 4
  store float %542, ptr %541, align 4
  br label %tile_loop.loop_header348, !llvm.loop !311

tile_loop.loop_exit347:                           ; preds = %tile_loop.loop_header348
  br label %is_full_tile-after346

is_full_tile-false345:                            ; preds = %y_in_tile.loop_body340
  %543 = mul i32 %thread_id.x330, 2
  store i32 0, ptr %tile_loop.invar_address363, align 4
  br label %tile_loop.loop_header361

tile_loop.loop_header361:                         ; preds = %x_in_tile-after374, %is_full_tile-false345
  %tile_loop.indvar364 = load i32, ptr %tile_loop.invar_address363, align 4
  %544 = icmp uge i32 %tile_loop.indvar364, 8
  br i1 %544, label %tile_loop.loop_exit360, label %tile_loop.loop_body362

tile_loop.loop_body362:                           ; preds = %tile_loop.loop_header361
  %invar.inc365 = add nuw nsw i32 %tile_loop.indvar364, 1
  store i32 %invar.inc365, ptr %tile_loop.invar_address363, align 4
  %545 = icmp eq i32 %tile_loop.indvar364, 0
  %546 = mul i32 %tile_loop.indvar364, 1024
  %547 = add i32 %546, 0
  %x_loc366 = add i32 %547, %543
  %548 = add i32 %tile_origin.1336, %y_in_tile.indvar342
  %549 = add i32 %tile_origin.2337, %x_loc366
  %550 = icmp ult i32 %x_loc366, %tile_bound334
  br i1 %550, label %x_in_tile-true367, label %x_in_tile-after368

x_in_tile-after368:                               ; preds = %x_in_tile-true367, %tile_loop.loop_body362
  %551 = mul i32 %tile_loop.indvar364, 1024
  %552 = add i32 %551, 1
  %x_loc372 = add i32 %552, %543
  %553 = add i32 %tile_origin.1336, %y_in_tile.indvar342
  %554 = add i32 %tile_origin.2337, %x_loc372
  %555 = icmp ult i32 %x_loc372, %tile_bound334
  br i1 %555, label %x_in_tile-true373, label %x_in_tile-after374

x_in_tile-after374:                               ; preds = %x_in_tile-true373, %x_in_tile-after368
  br label %tile_loop.loop_header361, !llvm.loop !312

tile_loop.loop_exit360:                           ; preds = %tile_loop.loop_header361
  br label %is_full_tile-after346

x_in_tile-true367:                                ; preds = %tile_loop.loop_body362
  %556 = mul nuw nsw i32 %549, 1
  %557 = add nuw nsw i32 0, %556
  %558 = mul nuw nsw i32 %548, 8192
  %559 = add nuw nsw i32 %557, %558
  %560 = mul nuw nsw i32 %tile_origin.0335, 8192
  %561 = add nuw nsw i32 %559, %560
  %562 = udiv i32 %561, 1
  %Arg_4.5369 = getelementptr inbounds i32, ptr %arg4, i32 %561
  %Arg_4.5370 = load i32, ptr %Arg_4.5369, align 4, !invariant.load !297
  %563 = sitofp i32 %Arg_4.5370 to float
  store float %563, ptr %reduction_input_address326, align 4
  %564 = getelementptr inbounds float, ptr %partial_reduction_result327, i32 0
  call void @region_5_39(ptr %564, ptr %reduction_input_address326, ptr %return_buffer371)
  %565 = load float, ptr %return_buffer371, align 4
  store float %565, ptr %564, align 4
  br label %x_in_tile-after368

x_in_tile-true373:                                ; preds = %x_in_tile-after368
  %566 = mul nuw nsw i32 %554, 1
  %567 = add nuw nsw i32 0, %566
  %568 = mul nuw nsw i32 %553, 8192
  %569 = add nuw nsw i32 %567, %568
  %570 = mul nuw nsw i32 %tile_origin.0335, 8192
  %571 = add nuw nsw i32 %569, %570
  %572 = udiv i32 %571, 1
  %Arg_4.5375 = getelementptr inbounds i32, ptr %arg4, i32 %571
  %Arg_4.5376 = load i32, ptr %Arg_4.5375, align 4, !invariant.load !297
  %573 = sitofp i32 %Arg_4.5376 to float
  store float %573, ptr %reduction_input_address326, align 4
  %574 = getelementptr inbounds float, ptr %partial_reduction_result327, i32 0
  call void @region_5_39(ptr %574, ptr %reduction_input_address326, ptr %return_buffer377)
  %575 = load float, ptr %return_buffer377, align 4
  store float %575, ptr %574, align 4
  br label %x_in_tile-after374

intra_warp_reduce_write-true394:                  ; preds = %y_in_tile.loop_exit338
  %576 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache4, i32 0, i32 %484, i32 0, i32 %509
  %577 = addrspacecast ptr addrspace(3) %576 to ptr
  %578 = load float, ptr %current_output378, align 4
  store float %578, ptr %577, align 4
  br label %intra_warp_reduce_write-after395

inter_warp_reduce-true396:                        ; preds = %intra_warp_reduce_write-after395
  %579 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache4, i32 0, i32 %484, i32 0, i32 %lane_id332
  %580 = addrspacecast ptr addrspace(3) %579 to ptr
  store float %region_0_59_constant_10328, ptr %initial_value_addr398, align 4
  %581 = icmp ult i32 %thread_id.x330, 16
  %582 = select i1 %581, ptr %580, ptr %initial_value_addr398
  %partial_reduction_result400 = load float, ptr %582, align 4
  %583 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result400, i32 16, i32 31)
  store float %583, ptr %result_from_other_lane399, align 4
  call void @region_5_39(ptr %582, ptr %result_from_other_lane399, ptr %return_buffer401)
  %584 = load float, ptr %return_buffer401, align 4
  store float %584, ptr %582, align 4
  %partial_reduction_result403 = load float, ptr %582, align 4
  %585 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result403, i32 8, i32 31)
  store float %585, ptr %result_from_other_lane402, align 4
  call void @region_5_39(ptr %582, ptr %result_from_other_lane402, ptr %return_buffer404)
  %586 = load float, ptr %return_buffer404, align 4
  store float %586, ptr %582, align 4
  %partial_reduction_result406 = load float, ptr %582, align 4
  %587 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result406, i32 4, i32 31)
  store float %587, ptr %result_from_other_lane405, align 4
  call void @region_5_39(ptr %582, ptr %result_from_other_lane405, ptr %return_buffer407)
  %588 = load float, ptr %return_buffer407, align 4
  store float %588, ptr %582, align 4
  %partial_reduction_result409 = load float, ptr %582, align 4
  %589 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result409, i32 2, i32 31)
  store float %589, ptr %result_from_other_lane408, align 4
  call void @region_5_39(ptr %582, ptr %result_from_other_lane408, ptr %return_buffer410)
  %590 = load float, ptr %return_buffer410, align 4
  store float %590, ptr %582, align 4
  %partial_reduction_result412 = load float, ptr %582, align 4
  %591 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result412, i32 1, i32 31)
  store float %591, ptr %result_from_other_lane411, align 4
  call void @region_5_39(ptr %582, ptr %result_from_other_lane411, ptr %return_buffer413)
  %592 = load float, ptr %return_buffer413, align 4
  store float %592, ptr %582, align 4
  %593 = icmp eq i32 %thread_id.x330, 0
  br i1 %593, label %reduction_write_output-true414, label %reduction_write_output-after415

reduction_write_output-after415:                  ; preds = %reduction_write_output-true414, %inter_warp_reduce-true396
  br label %inter_warp_reduce-after397

reduction_write_output-true414:                   ; preds = %inter_warp_reduce-true396
  %594 = mul i32 %thread_id.x330, 2
  %595 = add i32 %tile_origin.1336, %thread_id.y331
  %596 = add i32 %tile_origin.2337, %594
  %597 = add i32 %596, 0
  %output416 = load float, ptr %582, align 4
  store float %output416, ptr %arg11, align 4
  br label %reduction_write_output-after415

reduce-group-5-true:                              ; preds = %reduce-group-4-after
  %region_0_59_constant_10419 = load float, ptr @0, align 4
  %598 = getelementptr inbounds float, ptr %partial_reduction_result418, i32 0
  store float %region_0_59_constant_10419, ptr %598, align 4
  %599 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !293
  %600 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %601 = urem i32 %599, 512
  %602 = udiv i32 %599, 512
  %603 = mul i32 %600, 1
  %604 = add i32 %603, %602
  %605 = icmp ult i32 %604, 1
  br i1 %605, label %606, label %early_return420

606:                                              ; preds = %reduce-group-5-true
  %thread_id.x421 = urem i32 %601, 512
  %thread_id.y422 = udiv i32 %601, 512
  %lane_id423 = urem i32 %601, 32
  %607 = udiv i32 %604, 1
  %608 = urem i32 %607, 1
  %609 = udiv i32 %604, 1
  %610 = urem i32 %609, 1
  %611 = udiv i32 %604, 1
  %612 = icmp eq i32 %610, 0
  %tile_bound424 = select i1 %612, i32 1, i32 1
  %613 = icmp eq i32 %608, 0
  %tile_bound425 = select i1 %613, i32 8192, i32 8192
  %tile_origin.0426 = mul i32 %611, 1
  %tile_origin.1427 = mul i32 %610, 1
  %tile_origin.2428 = mul i32 %608, 8192
  store i32 %thread_id.y422, ptr %y_in_tile.invar_address432, align 4
  br label %y_in_tile.loop_header430

y_in_tile.loop_header430:                         ; preds = %is_full_tile-after437, %606
  %y_in_tile.indvar433 = load i32, ptr %y_in_tile.invar_address432, align 4
  %614 = icmp uge i32 %y_in_tile.indvar433, %tile_bound424
  br i1 %614, label %y_in_tile.loop_exit429, label %y_in_tile.loop_body431

y_in_tile.loop_body431:                           ; preds = %y_in_tile.loop_header430
  %invar.inc434 = add nuw nsw i32 %y_in_tile.indvar433, 1
  store i32 %invar.inc434, ptr %y_in_tile.invar_address432, align 4
  %615 = icmp eq i32 %y_in_tile.indvar433, %thread_id.y422
  %616 = icmp eq i32 8192, %tile_bound425
  br i1 %616, label %is_full_tile-true435, label %is_full_tile-false436

is_full_tile-after437:                            ; preds = %tile_loop.loop_exit451, %tile_loop.loop_exit438
  br label %y_in_tile.loop_header430, !llvm.loop !313

y_in_tile.loop_exit429:                           ; preds = %y_in_tile.loop_header430
  %current_output469 = getelementptr inbounds float, ptr %partial_reduction_result418, i32 0
  %partial_reduction_result471 = load float, ptr %current_output469, align 4
  %617 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result471, i32 16, i32 31)
  store float %617, ptr %result_from_other_lane470, align 4
  call void @region_6_46(ptr %current_output469, ptr %result_from_other_lane470, ptr %return_buffer472)
  %618 = load float, ptr %return_buffer472, align 4
  store float %618, ptr %current_output469, align 4
  %partial_reduction_result474 = load float, ptr %current_output469, align 4
  %619 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result474, i32 8, i32 31)
  store float %619, ptr %result_from_other_lane473, align 4
  call void @region_6_46(ptr %current_output469, ptr %result_from_other_lane473, ptr %return_buffer475)
  %620 = load float, ptr %return_buffer475, align 4
  store float %620, ptr %current_output469, align 4
  %partial_reduction_result477 = load float, ptr %current_output469, align 4
  %621 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result477, i32 4, i32 31)
  store float %621, ptr %result_from_other_lane476, align 4
  call void @region_6_46(ptr %current_output469, ptr %result_from_other_lane476, ptr %return_buffer478)
  %622 = load float, ptr %return_buffer478, align 4
  store float %622, ptr %current_output469, align 4
  %partial_reduction_result480 = load float, ptr %current_output469, align 4
  %623 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result480, i32 2, i32 31)
  store float %623, ptr %result_from_other_lane479, align 4
  call void @region_6_46(ptr %current_output469, ptr %result_from_other_lane479, ptr %return_buffer481)
  %624 = load float, ptr %return_buffer481, align 4
  store float %624, ptr %current_output469, align 4
  %partial_reduction_result483 = load float, ptr %current_output469, align 4
  %625 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result483, i32 1, i32 31)
  store float %625, ptr %result_from_other_lane482, align 4
  call void @region_6_46(ptr %current_output469, ptr %result_from_other_lane482, ptr %return_buffer484)
  %626 = load float, ptr %return_buffer484, align 4
  store float %626, ptr %current_output469, align 4
  %627 = udiv i32 %thread_id.x421, 32
  %628 = icmp eq i32 %lane_id423, 0
  br i1 %628, label %intra_warp_reduce_write-true485, label %intra_warp_reduce_write-after486

intra_warp_reduce_write-after486:                 ; preds = %intra_warp_reduce_write-true485, %y_in_tile.loop_exit429
  call void @llvm.nvvm.barrier0()
  %629 = icmp eq i32 %627, 0
  br i1 %629, label %inter_warp_reduce-true487, label %inter_warp_reduce-after488

inter_warp_reduce-after488:                       ; preds = %reduction_write_output-after506, %intra_warp_reduce_write-after486
  br label %reduce-group-5-after

early_return420:                                  ; preds = %reduce-group-5-true
  ret void

is_full_tile-true435:                             ; preds = %y_in_tile.loop_body431
  %630 = mul i32 %thread_id.x421, 2
  store i32 0, ptr %tile_loop.invar_address441, align 4
  br label %tile_loop.loop_header439

tile_loop.loop_header439:                         ; preds = %tile_loop.loop_body440, %is_full_tile-true435
  %tile_loop.indvar442 = load i32, ptr %tile_loop.invar_address441, align 4
  %631 = icmp uge i32 %tile_loop.indvar442, 8
  br i1 %631, label %tile_loop.loop_exit438, label %tile_loop.loop_body440

tile_loop.loop_body440:                           ; preds = %tile_loop.loop_header439
  %invar.inc443 = add nuw nsw i32 %tile_loop.indvar442, 1
  store i32 %invar.inc443, ptr %tile_loop.invar_address441, align 4
  %632 = icmp eq i32 %tile_loop.indvar442, 0
  %633 = mul i32 %tile_loop.indvar442, 1024
  %634 = add i32 %633, 0
  %x_loc444 = add i32 %634, %630
  %635 = add i32 %tile_origin.1427, %y_in_tile.indvar433
  %636 = add i32 %tile_origin.2428, %x_loc444
  %637 = mul nuw nsw i32 %636, 1
  %638 = add nuw nsw i32 0, %637
  %639 = mul nuw nsw i32 %635, 8192
  %640 = add nuw nsw i32 %638, %639
  %641 = mul nuw nsw i32 %tile_origin.0426, 8192
  %642 = add nuw nsw i32 %640, %641
  %643 = udiv i32 %642, 1
  %Arg_5.6 = getelementptr inbounds i32, ptr %arg5, i32 %642
  %Arg_5.6445 = load i32, ptr %Arg_5.6, align 4, !invariant.load !297
  %644 = sitofp i32 %Arg_5.6445 to float
  store float %644, ptr %reduction_input_address417, align 4
  %645 = getelementptr inbounds float, ptr %partial_reduction_result418, i32 0
  call void @region_6_46(ptr %645, ptr %reduction_input_address417, ptr %return_buffer446)
  %646 = load float, ptr %return_buffer446, align 4
  store float %646, ptr %645, align 4
  %647 = mul i32 %tile_loop.indvar442, 1024
  %648 = add i32 %647, 1
  %x_loc447 = add i32 %648, %630
  %649 = add i32 %tile_origin.1427, %y_in_tile.indvar433
  %650 = add i32 %tile_origin.2428, %x_loc447
  %651 = mul nuw nsw i32 %650, 1
  %652 = add nuw nsw i32 0, %651
  %653 = mul nuw nsw i32 %649, 8192
  %654 = add nuw nsw i32 %652, %653
  %655 = mul nuw nsw i32 %tile_origin.0426, 8192
  %656 = add nuw nsw i32 %654, %655
  %657 = udiv i32 %656, 1
  %Arg_5.6448 = getelementptr inbounds i32, ptr %arg5, i32 %656
  %Arg_5.6449 = load i32, ptr %Arg_5.6448, align 4, !invariant.load !297
  %658 = sitofp i32 %Arg_5.6449 to float
  store float %658, ptr %reduction_input_address417, align 4
  %659 = getelementptr inbounds float, ptr %partial_reduction_result418, i32 0
  call void @region_6_46(ptr %659, ptr %reduction_input_address417, ptr %return_buffer450)
  %660 = load float, ptr %return_buffer450, align 4
  store float %660, ptr %659, align 4
  br label %tile_loop.loop_header439, !llvm.loop !314

tile_loop.loop_exit438:                           ; preds = %tile_loop.loop_header439
  br label %is_full_tile-after437

is_full_tile-false436:                            ; preds = %y_in_tile.loop_body431
  %661 = mul i32 %thread_id.x421, 2
  store i32 0, ptr %tile_loop.invar_address454, align 4
  br label %tile_loop.loop_header452

tile_loop.loop_header452:                         ; preds = %x_in_tile-after465, %is_full_tile-false436
  %tile_loop.indvar455 = load i32, ptr %tile_loop.invar_address454, align 4
  %662 = icmp uge i32 %tile_loop.indvar455, 8
  br i1 %662, label %tile_loop.loop_exit451, label %tile_loop.loop_body453

tile_loop.loop_body453:                           ; preds = %tile_loop.loop_header452
  %invar.inc456 = add nuw nsw i32 %tile_loop.indvar455, 1
  store i32 %invar.inc456, ptr %tile_loop.invar_address454, align 4
  %663 = icmp eq i32 %tile_loop.indvar455, 0
  %664 = mul i32 %tile_loop.indvar455, 1024
  %665 = add i32 %664, 0
  %x_loc457 = add i32 %665, %661
  %666 = add i32 %tile_origin.1427, %y_in_tile.indvar433
  %667 = add i32 %tile_origin.2428, %x_loc457
  %668 = icmp ult i32 %x_loc457, %tile_bound425
  br i1 %668, label %x_in_tile-true458, label %x_in_tile-after459

x_in_tile-after459:                               ; preds = %x_in_tile-true458, %tile_loop.loop_body453
  %669 = mul i32 %tile_loop.indvar455, 1024
  %670 = add i32 %669, 1
  %x_loc463 = add i32 %670, %661
  %671 = add i32 %tile_origin.1427, %y_in_tile.indvar433
  %672 = add i32 %tile_origin.2428, %x_loc463
  %673 = icmp ult i32 %x_loc463, %tile_bound425
  br i1 %673, label %x_in_tile-true464, label %x_in_tile-after465

x_in_tile-after465:                               ; preds = %x_in_tile-true464, %x_in_tile-after459
  br label %tile_loop.loop_header452, !llvm.loop !315

tile_loop.loop_exit451:                           ; preds = %tile_loop.loop_header452
  br label %is_full_tile-after437

x_in_tile-true458:                                ; preds = %tile_loop.loop_body453
  %674 = mul nuw nsw i32 %667, 1
  %675 = add nuw nsw i32 0, %674
  %676 = mul nuw nsw i32 %666, 8192
  %677 = add nuw nsw i32 %675, %676
  %678 = mul nuw nsw i32 %tile_origin.0426, 8192
  %679 = add nuw nsw i32 %677, %678
  %680 = udiv i32 %679, 1
  %Arg_5.6460 = getelementptr inbounds i32, ptr %arg5, i32 %679
  %Arg_5.6461 = load i32, ptr %Arg_5.6460, align 4, !invariant.load !297
  %681 = sitofp i32 %Arg_5.6461 to float
  store float %681, ptr %reduction_input_address417, align 4
  %682 = getelementptr inbounds float, ptr %partial_reduction_result418, i32 0
  call void @region_6_46(ptr %682, ptr %reduction_input_address417, ptr %return_buffer462)
  %683 = load float, ptr %return_buffer462, align 4
  store float %683, ptr %682, align 4
  br label %x_in_tile-after459

x_in_tile-true464:                                ; preds = %x_in_tile-after459
  %684 = mul nuw nsw i32 %672, 1
  %685 = add nuw nsw i32 0, %684
  %686 = mul nuw nsw i32 %671, 8192
  %687 = add nuw nsw i32 %685, %686
  %688 = mul nuw nsw i32 %tile_origin.0426, 8192
  %689 = add nuw nsw i32 %687, %688
  %690 = udiv i32 %689, 1
  %Arg_5.6466 = getelementptr inbounds i32, ptr %arg5, i32 %689
  %Arg_5.6467 = load i32, ptr %Arg_5.6466, align 4, !invariant.load !297
  %691 = sitofp i32 %Arg_5.6467 to float
  store float %691, ptr %reduction_input_address417, align 4
  %692 = getelementptr inbounds float, ptr %partial_reduction_result418, i32 0
  call void @region_6_46(ptr %692, ptr %reduction_input_address417, ptr %return_buffer468)
  %693 = load float, ptr %return_buffer468, align 4
  store float %693, ptr %692, align 4
  br label %x_in_tile-after465

intra_warp_reduce_write-true485:                  ; preds = %y_in_tile.loop_exit429
  %694 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache5, i32 0, i32 %602, i32 0, i32 %627
  %695 = addrspacecast ptr addrspace(3) %694 to ptr
  %696 = load float, ptr %current_output469, align 4
  store float %696, ptr %695, align 4
  br label %intra_warp_reduce_write-after486

inter_warp_reduce-true487:                        ; preds = %intra_warp_reduce_write-after486
  %697 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache5, i32 0, i32 %602, i32 0, i32 %lane_id423
  %698 = addrspacecast ptr addrspace(3) %697 to ptr
  store float %region_0_59_constant_10419, ptr %initial_value_addr489, align 4
  %699 = icmp ult i32 %thread_id.x421, 16
  %700 = select i1 %699, ptr %698, ptr %initial_value_addr489
  %partial_reduction_result491 = load float, ptr %700, align 4
  %701 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result491, i32 16, i32 31)
  store float %701, ptr %result_from_other_lane490, align 4
  call void @region_6_46(ptr %700, ptr %result_from_other_lane490, ptr %return_buffer492)
  %702 = load float, ptr %return_buffer492, align 4
  store float %702, ptr %700, align 4
  %partial_reduction_result494 = load float, ptr %700, align 4
  %703 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result494, i32 8, i32 31)
  store float %703, ptr %result_from_other_lane493, align 4
  call void @region_6_46(ptr %700, ptr %result_from_other_lane493, ptr %return_buffer495)
  %704 = load float, ptr %return_buffer495, align 4
  store float %704, ptr %700, align 4
  %partial_reduction_result497 = load float, ptr %700, align 4
  %705 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result497, i32 4, i32 31)
  store float %705, ptr %result_from_other_lane496, align 4
  call void @region_6_46(ptr %700, ptr %result_from_other_lane496, ptr %return_buffer498)
  %706 = load float, ptr %return_buffer498, align 4
  store float %706, ptr %700, align 4
  %partial_reduction_result500 = load float, ptr %700, align 4
  %707 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result500, i32 2, i32 31)
  store float %707, ptr %result_from_other_lane499, align 4
  call void @region_6_46(ptr %700, ptr %result_from_other_lane499, ptr %return_buffer501)
  %708 = load float, ptr %return_buffer501, align 4
  store float %708, ptr %700, align 4
  %partial_reduction_result503 = load float, ptr %700, align 4
  %709 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result503, i32 1, i32 31)
  store float %709, ptr %result_from_other_lane502, align 4
  call void @region_6_46(ptr %700, ptr %result_from_other_lane502, ptr %return_buffer504)
  %710 = load float, ptr %return_buffer504, align 4
  store float %710, ptr %700, align 4
  %711 = icmp eq i32 %thread_id.x421, 0
  br i1 %711, label %reduction_write_output-true505, label %reduction_write_output-after506

reduction_write_output-after506:                  ; preds = %reduction_write_output-true505, %inter_warp_reduce-true487
  br label %inter_warp_reduce-after488

reduction_write_output-true505:                   ; preds = %inter_warp_reduce-true487
  %712 = mul i32 %thread_id.x421, 2
  %713 = add i32 %tile_origin.1427, %thread_id.y422
  %714 = add i32 %tile_origin.2428, %712
  %715 = add i32 %714, 0
  %output507 = load float, ptr %700, align 4
  store float %output507, ptr %arg12, align 4
  br label %reduction_write_output-after506

reduce-group-6-true:                              ; preds = %reduce-group-5-after
  %region_0_59_constant_10510 = load float, ptr @0, align 4
  %716 = getelementptr inbounds float, ptr %partial_reduction_result509, i32 0
  store float %region_0_59_constant_10510, ptr %716, align 4
  %717 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !293
  %718 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %719 = urem i32 %717, 512
  %720 = udiv i32 %717, 512
  %721 = mul i32 %718, 1
  %722 = add i32 %721, %720
  %723 = icmp ult i32 %722, 1
  br i1 %723, label %724, label %early_return511

724:                                              ; preds = %reduce-group-6-true
  %thread_id.x512 = urem i32 %719, 512
  %thread_id.y513 = udiv i32 %719, 512
  %lane_id514 = urem i32 %719, 32
  %725 = udiv i32 %722, 1
  %726 = urem i32 %725, 1
  %727 = udiv i32 %722, 1
  %728 = urem i32 %727, 1
  %729 = udiv i32 %722, 1
  %730 = icmp eq i32 %728, 0
  %tile_bound515 = select i1 %730, i32 1, i32 1
  %731 = icmp eq i32 %726, 0
  %tile_bound516 = select i1 %731, i32 8192, i32 8192
  %tile_origin.0517 = mul i32 %729, 1
  %tile_origin.1518 = mul i32 %728, 1
  %tile_origin.2519 = mul i32 %726, 8192
  store i32 %thread_id.y513, ptr %y_in_tile.invar_address523, align 4
  br label %y_in_tile.loop_header521

y_in_tile.loop_header521:                         ; preds = %is_full_tile-after528, %724
  %y_in_tile.indvar524 = load i32, ptr %y_in_tile.invar_address523, align 4
  %732 = icmp uge i32 %y_in_tile.indvar524, %tile_bound515
  br i1 %732, label %y_in_tile.loop_exit520, label %y_in_tile.loop_body522

y_in_tile.loop_body522:                           ; preds = %y_in_tile.loop_header521
  %invar.inc525 = add nuw nsw i32 %y_in_tile.indvar524, 1
  store i32 %invar.inc525, ptr %y_in_tile.invar_address523, align 4
  %733 = icmp eq i32 %y_in_tile.indvar524, %thread_id.y513
  %734 = icmp eq i32 8192, %tile_bound516
  br i1 %734, label %is_full_tile-true526, label %is_full_tile-false527

is_full_tile-after528:                            ; preds = %tile_loop.loop_exit542, %tile_loop.loop_exit529
  br label %y_in_tile.loop_header521, !llvm.loop !316

y_in_tile.loop_exit520:                           ; preds = %y_in_tile.loop_header521
  %current_output560 = getelementptr inbounds float, ptr %partial_reduction_result509, i32 0
  %partial_reduction_result562 = load float, ptr %current_output560, align 4
  %735 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result562, i32 16, i32 31)
  store float %735, ptr %result_from_other_lane561, align 4
  call void @region_7_53(ptr %current_output560, ptr %result_from_other_lane561, ptr %return_buffer563)
  %736 = load float, ptr %return_buffer563, align 4
  store float %736, ptr %current_output560, align 4
  %partial_reduction_result565 = load float, ptr %current_output560, align 4
  %737 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result565, i32 8, i32 31)
  store float %737, ptr %result_from_other_lane564, align 4
  call void @region_7_53(ptr %current_output560, ptr %result_from_other_lane564, ptr %return_buffer566)
  %738 = load float, ptr %return_buffer566, align 4
  store float %738, ptr %current_output560, align 4
  %partial_reduction_result568 = load float, ptr %current_output560, align 4
  %739 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result568, i32 4, i32 31)
  store float %739, ptr %result_from_other_lane567, align 4
  call void @region_7_53(ptr %current_output560, ptr %result_from_other_lane567, ptr %return_buffer569)
  %740 = load float, ptr %return_buffer569, align 4
  store float %740, ptr %current_output560, align 4
  %partial_reduction_result571 = load float, ptr %current_output560, align 4
  %741 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result571, i32 2, i32 31)
  store float %741, ptr %result_from_other_lane570, align 4
  call void @region_7_53(ptr %current_output560, ptr %result_from_other_lane570, ptr %return_buffer572)
  %742 = load float, ptr %return_buffer572, align 4
  store float %742, ptr %current_output560, align 4
  %partial_reduction_result574 = load float, ptr %current_output560, align 4
  %743 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result574, i32 1, i32 31)
  store float %743, ptr %result_from_other_lane573, align 4
  call void @region_7_53(ptr %current_output560, ptr %result_from_other_lane573, ptr %return_buffer575)
  %744 = load float, ptr %return_buffer575, align 4
  store float %744, ptr %current_output560, align 4
  %745 = udiv i32 %thread_id.x512, 32
  %746 = icmp eq i32 %lane_id514, 0
  br i1 %746, label %intra_warp_reduce_write-true576, label %intra_warp_reduce_write-after577

intra_warp_reduce_write-after577:                 ; preds = %intra_warp_reduce_write-true576, %y_in_tile.loop_exit520
  call void @llvm.nvvm.barrier0()
  %747 = icmp eq i32 %745, 0
  br i1 %747, label %inter_warp_reduce-true578, label %inter_warp_reduce-after579

inter_warp_reduce-after579:                       ; preds = %reduction_write_output-after597, %intra_warp_reduce_write-after577
  br label %reduce-group-6-after

early_return511:                                  ; preds = %reduce-group-6-true
  ret void

is_full_tile-true526:                             ; preds = %y_in_tile.loop_body522
  %748 = mul i32 %thread_id.x512, 2
  store i32 0, ptr %tile_loop.invar_address532, align 4
  br label %tile_loop.loop_header530

tile_loop.loop_header530:                         ; preds = %tile_loop.loop_body531, %is_full_tile-true526
  %tile_loop.indvar533 = load i32, ptr %tile_loop.invar_address532, align 4
  %749 = icmp uge i32 %tile_loop.indvar533, 8
  br i1 %749, label %tile_loop.loop_exit529, label %tile_loop.loop_body531

tile_loop.loop_body531:                           ; preds = %tile_loop.loop_header530
  %invar.inc534 = add nuw nsw i32 %tile_loop.indvar533, 1
  store i32 %invar.inc534, ptr %tile_loop.invar_address532, align 4
  %750 = icmp eq i32 %tile_loop.indvar533, 0
  %751 = mul i32 %tile_loop.indvar533, 1024
  %752 = add i32 %751, 0
  %x_loc535 = add i32 %752, %748
  %753 = add i32 %tile_origin.1518, %y_in_tile.indvar524
  %754 = add i32 %tile_origin.2519, %x_loc535
  %755 = mul nuw nsw i32 %754, 1
  %756 = add nuw nsw i32 0, %755
  %757 = mul nuw nsw i32 %753, 8192
  %758 = add nuw nsw i32 %756, %757
  %759 = mul nuw nsw i32 %tile_origin.0517, 8192
  %760 = add nuw nsw i32 %758, %759
  %761 = udiv i32 %760, 1
  %Arg_6.7 = getelementptr inbounds i32, ptr %arg6, i32 %760
  %Arg_6.7536 = load i32, ptr %Arg_6.7, align 4, !invariant.load !297
  %762 = sitofp i32 %Arg_6.7536 to float
  store float %762, ptr %reduction_input_address508, align 4
  %763 = getelementptr inbounds float, ptr %partial_reduction_result509, i32 0
  call void @region_7_53(ptr %763, ptr %reduction_input_address508, ptr %return_buffer537)
  %764 = load float, ptr %return_buffer537, align 4
  store float %764, ptr %763, align 4
  %765 = mul i32 %tile_loop.indvar533, 1024
  %766 = add i32 %765, 1
  %x_loc538 = add i32 %766, %748
  %767 = add i32 %tile_origin.1518, %y_in_tile.indvar524
  %768 = add i32 %tile_origin.2519, %x_loc538
  %769 = mul nuw nsw i32 %768, 1
  %770 = add nuw nsw i32 0, %769
  %771 = mul nuw nsw i32 %767, 8192
  %772 = add nuw nsw i32 %770, %771
  %773 = mul nuw nsw i32 %tile_origin.0517, 8192
  %774 = add nuw nsw i32 %772, %773
  %775 = udiv i32 %774, 1
  %Arg_6.7539 = getelementptr inbounds i32, ptr %arg6, i32 %774
  %Arg_6.7540 = load i32, ptr %Arg_6.7539, align 4, !invariant.load !297
  %776 = sitofp i32 %Arg_6.7540 to float
  store float %776, ptr %reduction_input_address508, align 4
  %777 = getelementptr inbounds float, ptr %partial_reduction_result509, i32 0
  call void @region_7_53(ptr %777, ptr %reduction_input_address508, ptr %return_buffer541)
  %778 = load float, ptr %return_buffer541, align 4
  store float %778, ptr %777, align 4
  br label %tile_loop.loop_header530, !llvm.loop !317

tile_loop.loop_exit529:                           ; preds = %tile_loop.loop_header530
  br label %is_full_tile-after528

is_full_tile-false527:                            ; preds = %y_in_tile.loop_body522
  %779 = mul i32 %thread_id.x512, 2
  store i32 0, ptr %tile_loop.invar_address545, align 4
  br label %tile_loop.loop_header543

tile_loop.loop_header543:                         ; preds = %x_in_tile-after556, %is_full_tile-false527
  %tile_loop.indvar546 = load i32, ptr %tile_loop.invar_address545, align 4
  %780 = icmp uge i32 %tile_loop.indvar546, 8
  br i1 %780, label %tile_loop.loop_exit542, label %tile_loop.loop_body544

tile_loop.loop_body544:                           ; preds = %tile_loop.loop_header543
  %invar.inc547 = add nuw nsw i32 %tile_loop.indvar546, 1
  store i32 %invar.inc547, ptr %tile_loop.invar_address545, align 4
  %781 = icmp eq i32 %tile_loop.indvar546, 0
  %782 = mul i32 %tile_loop.indvar546, 1024
  %783 = add i32 %782, 0
  %x_loc548 = add i32 %783, %779
  %784 = add i32 %tile_origin.1518, %y_in_tile.indvar524
  %785 = add i32 %tile_origin.2519, %x_loc548
  %786 = icmp ult i32 %x_loc548, %tile_bound516
  br i1 %786, label %x_in_tile-true549, label %x_in_tile-after550

x_in_tile-after550:                               ; preds = %x_in_tile-true549, %tile_loop.loop_body544
  %787 = mul i32 %tile_loop.indvar546, 1024
  %788 = add i32 %787, 1
  %x_loc554 = add i32 %788, %779
  %789 = add i32 %tile_origin.1518, %y_in_tile.indvar524
  %790 = add i32 %tile_origin.2519, %x_loc554
  %791 = icmp ult i32 %x_loc554, %tile_bound516
  br i1 %791, label %x_in_tile-true555, label %x_in_tile-after556

x_in_tile-after556:                               ; preds = %x_in_tile-true555, %x_in_tile-after550
  br label %tile_loop.loop_header543, !llvm.loop !318

tile_loop.loop_exit542:                           ; preds = %tile_loop.loop_header543
  br label %is_full_tile-after528

x_in_tile-true549:                                ; preds = %tile_loop.loop_body544
  %792 = mul nuw nsw i32 %785, 1
  %793 = add nuw nsw i32 0, %792
  %794 = mul nuw nsw i32 %784, 8192
  %795 = add nuw nsw i32 %793, %794
  %796 = mul nuw nsw i32 %tile_origin.0517, 8192
  %797 = add nuw nsw i32 %795, %796
  %798 = udiv i32 %797, 1
  %Arg_6.7551 = getelementptr inbounds i32, ptr %arg6, i32 %797
  %Arg_6.7552 = load i32, ptr %Arg_6.7551, align 4, !invariant.load !297
  %799 = sitofp i32 %Arg_6.7552 to float
  store float %799, ptr %reduction_input_address508, align 4
  %800 = getelementptr inbounds float, ptr %partial_reduction_result509, i32 0
  call void @region_7_53(ptr %800, ptr %reduction_input_address508, ptr %return_buffer553)
  %801 = load float, ptr %return_buffer553, align 4
  store float %801, ptr %800, align 4
  br label %x_in_tile-after550

x_in_tile-true555:                                ; preds = %x_in_tile-after550
  %802 = mul nuw nsw i32 %790, 1
  %803 = add nuw nsw i32 0, %802
  %804 = mul nuw nsw i32 %789, 8192
  %805 = add nuw nsw i32 %803, %804
  %806 = mul nuw nsw i32 %tile_origin.0517, 8192
  %807 = add nuw nsw i32 %805, %806
  %808 = udiv i32 %807, 1
  %Arg_6.7557 = getelementptr inbounds i32, ptr %arg6, i32 %807
  %Arg_6.7558 = load i32, ptr %Arg_6.7557, align 4, !invariant.load !297
  %809 = sitofp i32 %Arg_6.7558 to float
  store float %809, ptr %reduction_input_address508, align 4
  %810 = getelementptr inbounds float, ptr %partial_reduction_result509, i32 0
  call void @region_7_53(ptr %810, ptr %reduction_input_address508, ptr %return_buffer559)
  %811 = load float, ptr %return_buffer559, align 4
  store float %811, ptr %810, align 4
  br label %x_in_tile-after556

intra_warp_reduce_write-true576:                  ; preds = %y_in_tile.loop_exit520
  %812 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache6, i32 0, i32 %720, i32 0, i32 %745
  %813 = addrspacecast ptr addrspace(3) %812 to ptr
  %814 = load float, ptr %current_output560, align 4
  store float %814, ptr %813, align 4
  br label %intra_warp_reduce_write-after577

inter_warp_reduce-true578:                        ; preds = %intra_warp_reduce_write-after577
  %815 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache6, i32 0, i32 %720, i32 0, i32 %lane_id514
  %816 = addrspacecast ptr addrspace(3) %815 to ptr
  store float %region_0_59_constant_10510, ptr %initial_value_addr580, align 4
  %817 = icmp ult i32 %thread_id.x512, 16
  %818 = select i1 %817, ptr %816, ptr %initial_value_addr580
  %partial_reduction_result582 = load float, ptr %818, align 4
  %819 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result582, i32 16, i32 31)
  store float %819, ptr %result_from_other_lane581, align 4
  call void @region_7_53(ptr %818, ptr %result_from_other_lane581, ptr %return_buffer583)
  %820 = load float, ptr %return_buffer583, align 4
  store float %820, ptr %818, align 4
  %partial_reduction_result585 = load float, ptr %818, align 4
  %821 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result585, i32 8, i32 31)
  store float %821, ptr %result_from_other_lane584, align 4
  call void @region_7_53(ptr %818, ptr %result_from_other_lane584, ptr %return_buffer586)
  %822 = load float, ptr %return_buffer586, align 4
  store float %822, ptr %818, align 4
  %partial_reduction_result588 = load float, ptr %818, align 4
  %823 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result588, i32 4, i32 31)
  store float %823, ptr %result_from_other_lane587, align 4
  call void @region_7_53(ptr %818, ptr %result_from_other_lane587, ptr %return_buffer589)
  %824 = load float, ptr %return_buffer589, align 4
  store float %824, ptr %818, align 4
  %partial_reduction_result591 = load float, ptr %818, align 4
  %825 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result591, i32 2, i32 31)
  store float %825, ptr %result_from_other_lane590, align 4
  call void @region_7_53(ptr %818, ptr %result_from_other_lane590, ptr %return_buffer592)
  %826 = load float, ptr %return_buffer592, align 4
  store float %826, ptr %818, align 4
  %partial_reduction_result594 = load float, ptr %818, align 4
  %827 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result594, i32 1, i32 31)
  store float %827, ptr %result_from_other_lane593, align 4
  call void @region_7_53(ptr %818, ptr %result_from_other_lane593, ptr %return_buffer595)
  %828 = load float, ptr %return_buffer595, align 4
  store float %828, ptr %818, align 4
  %829 = icmp eq i32 %thread_id.x512, 0
  br i1 %829, label %reduction_write_output-true596, label %reduction_write_output-after597

reduction_write_output-after597:                  ; preds = %reduction_write_output-true596, %inter_warp_reduce-true578
  br label %inter_warp_reduce-after579

reduction_write_output-true596:                   ; preds = %inter_warp_reduce-true578
  %830 = mul i32 %thread_id.x512, 2
  %831 = add i32 %tile_origin.1518, %thread_id.y513
  %832 = add i32 %tile_origin.2519, %830
  %833 = add i32 %832, 0
  %output598 = load float, ptr %818, align 4
  store float %output598, ptr %arg13, align 4
  br label %reduction_write_output-after597
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.y() #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

define internal void @region_1_11(ptr dereferenceable(4) %Arg_0.12.typed, ptr dereferenceable(4) %Arg_1.13.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %maximum.14.typed = alloca float, align 4
  %Arg_0.12 = load float, ptr %Arg_0.12.typed, align 4
  %Arg_1.13 = load float, ptr %Arg_1.13.typed, align 4
  %0 = fcmp oge float %Arg_0.12, %Arg_1.13
  %1 = fcmp une float %Arg_0.12, %Arg_0.12
  %2 = or i1 %0, %1
  %maximum.14 = select i1 %2, float %Arg_0.12, float %Arg_1.13
  store float %maximum.14, ptr %maximum.14.typed, align 4
  %load_ret_value = load float, ptr %maximum.14.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare float @llvm.nvvm.shfl.sync.down.f32(i32, float, i32, i32) #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier0() #2

define internal void @region_2_18(ptr dereferenceable(4) %Arg_0.19.typed, ptr dereferenceable(4) %Arg_1.20.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %maximum.21.typed = alloca float, align 4
  %Arg_0.19 = load float, ptr %Arg_0.19.typed, align 4
  %Arg_1.20 = load float, ptr %Arg_1.20.typed, align 4
  %0 = fcmp oge float %Arg_0.19, %Arg_1.20
  %1 = fcmp une float %Arg_0.19, %Arg_0.19
  %2 = or i1 %0, %1
  %maximum.21 = select i1 %2, float %Arg_0.19, float %Arg_1.20
  store float %maximum.21, ptr %maximum.21.typed, align 4
  %load_ret_value = load float, ptr %maximum.21.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_3_25(ptr dereferenceable(4) %Arg_0.26.typed, ptr dereferenceable(4) %Arg_1.27.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %maximum.28.typed = alloca float, align 4
  %Arg_0.26 = load float, ptr %Arg_0.26.typed, align 4
  %Arg_1.27 = load float, ptr %Arg_1.27.typed, align 4
  %0 = fcmp oge float %Arg_0.26, %Arg_1.27
  %1 = fcmp une float %Arg_0.26, %Arg_0.26
  %2 = or i1 %0, %1
  %maximum.28 = select i1 %2, float %Arg_0.26, float %Arg_1.27
  store float %maximum.28, ptr %maximum.28.typed, align 4
  %load_ret_value = load float, ptr %maximum.28.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_4_32(ptr dereferenceable(4) %Arg_0.33.typed, ptr dereferenceable(4) %Arg_1.34.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %maximum.35.typed = alloca float, align 4
  %Arg_0.33 = load float, ptr %Arg_0.33.typed, align 4
  %Arg_1.34 = load float, ptr %Arg_1.34.typed, align 4
  %0 = fcmp oge float %Arg_0.33, %Arg_1.34
  %1 = fcmp une float %Arg_0.33, %Arg_0.33
  %2 = or i1 %0, %1
  %maximum.35 = select i1 %2, float %Arg_0.33, float %Arg_1.34
  store float %maximum.35, ptr %maximum.35.typed, align 4
  %load_ret_value = load float, ptr %maximum.35.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_5_39(ptr dereferenceable(4) %Arg_0.40.typed, ptr dereferenceable(4) %Arg_1.41.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %maximum.42.typed = alloca float, align 4
  %Arg_0.40 = load float, ptr %Arg_0.40.typed, align 4
  %Arg_1.41 = load float, ptr %Arg_1.41.typed, align 4
  %0 = fcmp oge float %Arg_0.40, %Arg_1.41
  %1 = fcmp une float %Arg_0.40, %Arg_0.40
  %2 = or i1 %0, %1
  %maximum.42 = select i1 %2, float %Arg_0.40, float %Arg_1.41
  store float %maximum.42, ptr %maximum.42.typed, align 4
  %load_ret_value = load float, ptr %maximum.42.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_6_46(ptr dereferenceable(4) %Arg_0.47.typed, ptr dereferenceable(4) %Arg_1.48.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %maximum.49.typed = alloca float, align 4
  %Arg_0.47 = load float, ptr %Arg_0.47.typed, align 4
  %Arg_1.48 = load float, ptr %Arg_1.48.typed, align 4
  %0 = fcmp oge float %Arg_0.47, %Arg_1.48
  %1 = fcmp une float %Arg_0.47, %Arg_0.47
  %2 = or i1 %0, %1
  %maximum.49 = select i1 %2, float %Arg_0.47, float %Arg_1.48
  store float %maximum.49, ptr %maximum.49.typed, align 4
  %load_ret_value = load float, ptr %maximum.49.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_7_53(ptr dereferenceable(4) %Arg_0.54.typed, ptr dereferenceable(4) %Arg_1.55.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %maximum.56.typed = alloca float, align 4
  %Arg_0.54 = load float, ptr %Arg_0.54.typed, align 4
  %Arg_1.55 = load float, ptr %Arg_1.55.typed, align 4
  %0 = fcmp oge float %Arg_0.54, %Arg_1.55
  %1 = fcmp une float %Arg_0.54, %Arg_0.54
  %2 = or i1 %0, %1
  %maximum.56 = select i1 %2, float %Arg_0.54, float %Arg_1.55
  store float %maximum.56, ptr %maximum.56.typed, align 4
  %load_ret_value = load float, ptr %maximum.56.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_396(ptr noalias align 16 dereferenceable(32768) %arg0, ptr noalias align 16 dereferenceable(32768) %arg1, ptr noalias align 16 dereferenceable(32768) %arg2, ptr noalias align 16 dereferenceable(32768) %arg3, ptr noalias align 16 dereferenceable(32768) %arg4, ptr noalias align 16 dereferenceable(32768) %arg5, ptr noalias align 16 dereferenceable(32768) %arg6, ptr noalias align 16 dereferenceable(32768) %arg7, ptr noalias align 128 dereferenceable(4) %arg8, ptr noalias align 128 dereferenceable(4) %arg9, ptr noalias align 128 dereferenceable(4) %arg10, ptr noalias align 128 dereferenceable(4) %arg11, ptr noalias align 128 dereferenceable(4) %arg12, ptr noalias align 128 dereferenceable(4) %arg13, ptr noalias align 128 dereferenceable(4) %arg14, ptr noalias align 128 dereferenceable(4) %arg15) {
entry:
  %return_buffer686 = alloca float, align 4
  %result_from_other_lane684 = alloca float, align 4
  %return_buffer683 = alloca float, align 4
  %result_from_other_lane681 = alloca float, align 4
  %return_buffer680 = alloca float, align 4
  %result_from_other_lane678 = alloca float, align 4
  %return_buffer677 = alloca float, align 4
  %result_from_other_lane675 = alloca float, align 4
  %return_buffer674 = alloca float, align 4
  %result_from_other_lane672 = alloca float, align 4
  %initial_value_addr671 = alloca float, align 4
  %return_buffer666 = alloca float, align 4
  %result_from_other_lane664 = alloca float, align 4
  %return_buffer663 = alloca float, align 4
  %result_from_other_lane661 = alloca float, align 4
  %return_buffer660 = alloca float, align 4
  %result_from_other_lane658 = alloca float, align 4
  %return_buffer657 = alloca float, align 4
  %result_from_other_lane655 = alloca float, align 4
  %return_buffer654 = alloca float, align 4
  %result_from_other_lane652 = alloca float, align 4
  %return_buffer650 = alloca float, align 4
  %return_buffer644 = alloca float, align 4
  %tile_loop.invar_address636 = alloca i32, align 4
  %return_buffer632 = alloca float, align 4
  %return_buffer628 = alloca float, align 4
  %tile_loop.invar_address623 = alloca i32, align 4
  %y_in_tile.invar_address614 = alloca i32, align 4
  %partial_reduction_result600 = alloca float, align 4
  %reduction_input_address599 = alloca float, align 4
  %return_buffer595 = alloca float, align 4
  %result_from_other_lane593 = alloca float, align 4
  %return_buffer592 = alloca float, align 4
  %result_from_other_lane590 = alloca float, align 4
  %return_buffer589 = alloca float, align 4
  %result_from_other_lane587 = alloca float, align 4
  %return_buffer586 = alloca float, align 4
  %result_from_other_lane584 = alloca float, align 4
  %return_buffer583 = alloca float, align 4
  %result_from_other_lane581 = alloca float, align 4
  %initial_value_addr580 = alloca float, align 4
  %return_buffer575 = alloca float, align 4
  %result_from_other_lane573 = alloca float, align 4
  %return_buffer572 = alloca float, align 4
  %result_from_other_lane570 = alloca float, align 4
  %return_buffer569 = alloca float, align 4
  %result_from_other_lane567 = alloca float, align 4
  %return_buffer566 = alloca float, align 4
  %result_from_other_lane564 = alloca float, align 4
  %return_buffer563 = alloca float, align 4
  %result_from_other_lane561 = alloca float, align 4
  %return_buffer559 = alloca float, align 4
  %return_buffer553 = alloca float, align 4
  %tile_loop.invar_address545 = alloca i32, align 4
  %return_buffer541 = alloca float, align 4
  %return_buffer537 = alloca float, align 4
  %tile_loop.invar_address532 = alloca i32, align 4
  %y_in_tile.invar_address523 = alloca i32, align 4
  %partial_reduction_result509 = alloca float, align 4
  %reduction_input_address508 = alloca float, align 4
  %return_buffer504 = alloca float, align 4
  %result_from_other_lane502 = alloca float, align 4
  %return_buffer501 = alloca float, align 4
  %result_from_other_lane499 = alloca float, align 4
  %return_buffer498 = alloca float, align 4
  %result_from_other_lane496 = alloca float, align 4
  %return_buffer495 = alloca float, align 4
  %result_from_other_lane493 = alloca float, align 4
  %return_buffer492 = alloca float, align 4
  %result_from_other_lane490 = alloca float, align 4
  %initial_value_addr489 = alloca float, align 4
  %return_buffer484 = alloca float, align 4
  %result_from_other_lane482 = alloca float, align 4
  %return_buffer481 = alloca float, align 4
  %result_from_other_lane479 = alloca float, align 4
  %return_buffer478 = alloca float, align 4
  %result_from_other_lane476 = alloca float, align 4
  %return_buffer475 = alloca float, align 4
  %result_from_other_lane473 = alloca float, align 4
  %return_buffer472 = alloca float, align 4
  %result_from_other_lane470 = alloca float, align 4
  %return_buffer468 = alloca float, align 4
  %return_buffer462 = alloca float, align 4
  %tile_loop.invar_address454 = alloca i32, align 4
  %return_buffer450 = alloca float, align 4
  %return_buffer446 = alloca float, align 4
  %tile_loop.invar_address441 = alloca i32, align 4
  %y_in_tile.invar_address432 = alloca i32, align 4
  %partial_reduction_result418 = alloca float, align 4
  %reduction_input_address417 = alloca float, align 4
  %return_buffer413 = alloca float, align 4
  %result_from_other_lane411 = alloca float, align 4
  %return_buffer410 = alloca float, align 4
  %result_from_other_lane408 = alloca float, align 4
  %return_buffer407 = alloca float, align 4
  %result_from_other_lane405 = alloca float, align 4
  %return_buffer404 = alloca float, align 4
  %result_from_other_lane402 = alloca float, align 4
  %return_buffer401 = alloca float, align 4
  %result_from_other_lane399 = alloca float, align 4
  %initial_value_addr398 = alloca float, align 4
  %return_buffer393 = alloca float, align 4
  %result_from_other_lane391 = alloca float, align 4
  %return_buffer390 = alloca float, align 4
  %result_from_other_lane388 = alloca float, align 4
  %return_buffer387 = alloca float, align 4
  %result_from_other_lane385 = alloca float, align 4
  %return_buffer384 = alloca float, align 4
  %result_from_other_lane382 = alloca float, align 4
  %return_buffer381 = alloca float, align 4
  %result_from_other_lane379 = alloca float, align 4
  %return_buffer377 = alloca float, align 4
  %return_buffer371 = alloca float, align 4
  %tile_loop.invar_address363 = alloca i32, align 4
  %return_buffer359 = alloca float, align 4
  %return_buffer355 = alloca float, align 4
  %tile_loop.invar_address350 = alloca i32, align 4
  %y_in_tile.invar_address341 = alloca i32, align 4
  %partial_reduction_result327 = alloca float, align 4
  %reduction_input_address326 = alloca float, align 4
  %return_buffer322 = alloca float, align 4
  %result_from_other_lane320 = alloca float, align 4
  %return_buffer319 = alloca float, align 4
  %result_from_other_lane317 = alloca float, align 4
  %return_buffer316 = alloca float, align 4
  %result_from_other_lane314 = alloca float, align 4
  %return_buffer313 = alloca float, align 4
  %result_from_other_lane311 = alloca float, align 4
  %return_buffer310 = alloca float, align 4
  %result_from_other_lane308 = alloca float, align 4
  %initial_value_addr307 = alloca float, align 4
  %return_buffer302 = alloca float, align 4
  %result_from_other_lane300 = alloca float, align 4
  %return_buffer299 = alloca float, align 4
  %result_from_other_lane297 = alloca float, align 4
  %return_buffer296 = alloca float, align 4
  %result_from_other_lane294 = alloca float, align 4
  %return_buffer293 = alloca float, align 4
  %result_from_other_lane291 = alloca float, align 4
  %return_buffer290 = alloca float, align 4
  %result_from_other_lane288 = alloca float, align 4
  %return_buffer286 = alloca float, align 4
  %return_buffer280 = alloca float, align 4
  %tile_loop.invar_address272 = alloca i32, align 4
  %return_buffer268 = alloca float, align 4
  %return_buffer264 = alloca float, align 4
  %tile_loop.invar_address259 = alloca i32, align 4
  %y_in_tile.invar_address250 = alloca i32, align 4
  %partial_reduction_result236 = alloca float, align 4
  %reduction_input_address235 = alloca float, align 4
  %return_buffer231 = alloca float, align 4
  %result_from_other_lane229 = alloca float, align 4
  %return_buffer228 = alloca float, align 4
  %result_from_other_lane226 = alloca float, align 4
  %return_buffer225 = alloca float, align 4
  %result_from_other_lane223 = alloca float, align 4
  %return_buffer222 = alloca float, align 4
  %result_from_other_lane220 = alloca float, align 4
  %return_buffer219 = alloca float, align 4
  %result_from_other_lane217 = alloca float, align 4
  %initial_value_addr216 = alloca float, align 4
  %return_buffer211 = alloca float, align 4
  %result_from_other_lane209 = alloca float, align 4
  %return_buffer208 = alloca float, align 4
  %result_from_other_lane206 = alloca float, align 4
  %return_buffer205 = alloca float, align 4
  %result_from_other_lane203 = alloca float, align 4
  %return_buffer202 = alloca float, align 4
  %result_from_other_lane200 = alloca float, align 4
  %return_buffer199 = alloca float, align 4
  %result_from_other_lane197 = alloca float, align 4
  %return_buffer195 = alloca float, align 4
  %return_buffer189 = alloca float, align 4
  %tile_loop.invar_address181 = alloca i32, align 4
  %return_buffer177 = alloca float, align 4
  %return_buffer173 = alloca float, align 4
  %tile_loop.invar_address168 = alloca i32, align 4
  %y_in_tile.invar_address159 = alloca i32, align 4
  %partial_reduction_result145 = alloca float, align 4
  %reduction_input_address144 = alloca float, align 4
  %return_buffer140 = alloca float, align 4
  %result_from_other_lane138 = alloca float, align 4
  %return_buffer137 = alloca float, align 4
  %result_from_other_lane135 = alloca float, align 4
  %return_buffer134 = alloca float, align 4
  %result_from_other_lane132 = alloca float, align 4
  %return_buffer131 = alloca float, align 4
  %result_from_other_lane129 = alloca float, align 4
  %return_buffer128 = alloca float, align 4
  %result_from_other_lane126 = alloca float, align 4
  %initial_value_addr125 = alloca float, align 4
  %return_buffer120 = alloca float, align 4
  %result_from_other_lane118 = alloca float, align 4
  %return_buffer117 = alloca float, align 4
  %result_from_other_lane115 = alloca float, align 4
  %return_buffer114 = alloca float, align 4
  %result_from_other_lane112 = alloca float, align 4
  %return_buffer111 = alloca float, align 4
  %result_from_other_lane109 = alloca float, align 4
  %return_buffer108 = alloca float, align 4
  %result_from_other_lane106 = alloca float, align 4
  %return_buffer104 = alloca float, align 4
  %return_buffer98 = alloca float, align 4
  %tile_loop.invar_address90 = alloca i32, align 4
  %return_buffer86 = alloca float, align 4
  %return_buffer82 = alloca float, align 4
  %tile_loop.invar_address77 = alloca i32, align 4
  %y_in_tile.invar_address68 = alloca i32, align 4
  %partial_reduction_result54 = alloca float, align 4
  %reduction_input_address53 = alloca float, align 4
  %return_buffer52 = alloca float, align 4
  %result_from_other_lane50 = alloca float, align 4
  %return_buffer49 = alloca float, align 4
  %result_from_other_lane47 = alloca float, align 4
  %return_buffer46 = alloca float, align 4
  %result_from_other_lane44 = alloca float, align 4
  %return_buffer43 = alloca float, align 4
  %result_from_other_lane41 = alloca float, align 4
  %return_buffer40 = alloca float, align 4
  %result_from_other_lane38 = alloca float, align 4
  %initial_value_addr = alloca float, align 4
  %return_buffer37 = alloca float, align 4
  %result_from_other_lane35 = alloca float, align 4
  %return_buffer34 = alloca float, align 4
  %result_from_other_lane32 = alloca float, align 4
  %return_buffer31 = alloca float, align 4
  %result_from_other_lane29 = alloca float, align 4
  %return_buffer28 = alloca float, align 4
  %result_from_other_lane26 = alloca float, align 4
  %return_buffer25 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer23 = alloca float, align 4
  %return_buffer17 = alloca float, align 4
  %tile_loop.invar_address11 = alloca i32, align 4
  %return_buffer7 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !319
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %inter_warp_reduce-after, %entry
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %reduce-group-1-true, label %reduce-group-1-after

reduce-group-1-after:                             ; preds = %inter_warp_reduce-after124, %reduce-group-0-after
  %3 = icmp eq i32 %0, 2
  br i1 %3, label %reduce-group-2-true, label %reduce-group-2-after

reduce-group-2-after:                             ; preds = %inter_warp_reduce-after215, %reduce-group-1-after
  %4 = icmp eq i32 %0, 3
  br i1 %4, label %reduce-group-3-true, label %reduce-group-3-after

reduce-group-3-after:                             ; preds = %inter_warp_reduce-after306, %reduce-group-2-after
  %5 = icmp eq i32 %0, 4
  br i1 %5, label %reduce-group-4-true, label %reduce-group-4-after

reduce-group-4-after:                             ; preds = %inter_warp_reduce-after397, %reduce-group-3-after
  %6 = icmp eq i32 %0, 5
  br i1 %6, label %reduce-group-5-true, label %reduce-group-5-after

reduce-group-5-after:                             ; preds = %inter_warp_reduce-after488, %reduce-group-4-after
  %7 = icmp eq i32 %0, 6
  br i1 %7, label %reduce-group-6-true, label %reduce-group-6-after

reduce-group-6-after:                             ; preds = %inter_warp_reduce-after579, %reduce-group-5-after
  %8 = icmp eq i32 %0, 7
  br i1 %8, label %reduce-group-7-true, label %reduce-group-7-after

reduce-group-7-after:                             ; preds = %inter_warp_reduce-after670, %reduce-group-6-after
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_67_constant_11 = load float, ptr @1, align 4
  %9 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_67_constant_11, ptr %9, align 4
  %10 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !293
  %11 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %12 = urem i32 %10, 512
  %13 = udiv i32 %10, 512
  %14 = mul i32 %11, 1
  %15 = add i32 %14, %13
  %16 = icmp ult i32 %15, 1
  br i1 %16, label %17, label %early_return

17:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %12, 512
  %thread_id.y = udiv i32 %12, 512
  %lane_id = urem i32 %12, 32
  %18 = udiv i32 %15, 1
  %19 = urem i32 %18, 1
  %20 = udiv i32 %15, 1
  %21 = urem i32 %20, 1
  %22 = udiv i32 %15, 1
  %23 = icmp eq i32 %21, 0
  %tile_bound = select i1 %23, i32 1, i32 1
  %24 = icmp eq i32 %19, 0
  %tile_bound1 = select i1 %24, i32 8192, i32 8192
  %tile_origin.0 = mul i32 %22, 1
  %tile_origin.1 = mul i32 %21, 1
  %tile_origin.2 = mul i32 %19, 8192
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %is_full_tile-after, %17
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %25 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %25, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 1
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %26 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %27 = icmp eq i32 8192, %tile_bound1
  br i1 %27, label %is_full_tile-true, label %is_full_tile-false

is_full_tile-after:                               ; preds = %tile_loop.loop_exit8, %tile_loop.loop_exit
  br label %y_in_tile.loop_header, !llvm.loop !320

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %partial_reduction_result24 = load float, ptr %current_output, align 4
  %28 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result24, i32 16, i32 31)
  store float %28, ptr %result_from_other_lane, align 4
  call void @region_1_12(ptr %current_output, ptr %result_from_other_lane, ptr %return_buffer25)
  %29 = load float, ptr %return_buffer25, align 4
  store float %29, ptr %current_output, align 4
  %partial_reduction_result27 = load float, ptr %current_output, align 4
  %30 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result27, i32 8, i32 31)
  store float %30, ptr %result_from_other_lane26, align 4
  call void @region_1_12(ptr %current_output, ptr %result_from_other_lane26, ptr %return_buffer28)
  %31 = load float, ptr %return_buffer28, align 4
  store float %31, ptr %current_output, align 4
  %partial_reduction_result30 = load float, ptr %current_output, align 4
  %32 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result30, i32 4, i32 31)
  store float %32, ptr %result_from_other_lane29, align 4
  call void @region_1_12(ptr %current_output, ptr %result_from_other_lane29, ptr %return_buffer31)
  %33 = load float, ptr %return_buffer31, align 4
  store float %33, ptr %current_output, align 4
  %partial_reduction_result33 = load float, ptr %current_output, align 4
  %34 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result33, i32 2, i32 31)
  store float %34, ptr %result_from_other_lane32, align 4
  call void @region_1_12(ptr %current_output, ptr %result_from_other_lane32, ptr %return_buffer34)
  %35 = load float, ptr %return_buffer34, align 4
  store float %35, ptr %current_output, align 4
  %partial_reduction_result36 = load float, ptr %current_output, align 4
  %36 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result36, i32 1, i32 31)
  store float %36, ptr %result_from_other_lane35, align 4
  call void @region_1_12(ptr %current_output, ptr %result_from_other_lane35, ptr %return_buffer37)
  %37 = load float, ptr %return_buffer37, align 4
  store float %37, ptr %current_output, align 4
  %38 = udiv i32 %thread_id.x, 32
  %39 = icmp eq i32 %lane_id, 0
  br i1 %39, label %intra_warp_reduce_write-true, label %intra_warp_reduce_write-after

intra_warp_reduce_write-after:                    ; preds = %intra_warp_reduce_write-true, %y_in_tile.loop_exit
  call void @llvm.nvvm.barrier0()
  %40 = icmp eq i32 %38, 0
  br i1 %40, label %inter_warp_reduce-true, label %inter_warp_reduce-after

inter_warp_reduce-after:                          ; preds = %reduction_write_output-after, %intra_warp_reduce_write-after
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

is_full_tile-true:                                ; preds = %y_in_tile.loop_body
  %41 = mul i32 %thread_id.x, 2
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %tile_loop.loop_body, %is_full_tile-true
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %42 = icmp uge i32 %tile_loop.indvar, 8
  br i1 %42, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %43 = icmp eq i32 %tile_loop.indvar, 0
  %44 = mul i32 %tile_loop.indvar, 1024
  %45 = add i32 %44, 0
  %x_loc = add i32 %45, %41
  %46 = add i32 %tile_origin.1, %y_in_tile.indvar
  %47 = add i32 %tile_origin.2, %x_loc
  %48 = mul nuw nsw i32 %47, 1
  %49 = add nuw nsw i32 0, %48
  %50 = mul nuw nsw i32 %46, 8192
  %51 = add nuw nsw i32 %49, %50
  %52 = mul nuw nsw i32 %tile_origin.0, 8192
  %53 = add nuw nsw i32 %51, %52
  %54 = udiv i32 %53, 1
  %Arg_0.1 = getelementptr inbounds i32, ptr %arg0, i32 %53
  %Arg_0.13 = load i32, ptr %Arg_0.1, align 4, !invariant.load !297
  %55 = sitofp i32 %Arg_0.13 to float
  store float %55, ptr %reduction_input_address, align 4
  %56 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_12(ptr %56, ptr %reduction_input_address, ptr %return_buffer)
  %57 = load float, ptr %return_buffer, align 4
  store float %57, ptr %56, align 4
  %58 = mul i32 %tile_loop.indvar, 1024
  %59 = add i32 %58, 1
  %x_loc4 = add i32 %59, %41
  %60 = add i32 %tile_origin.1, %y_in_tile.indvar
  %61 = add i32 %tile_origin.2, %x_loc4
  %62 = mul nuw nsw i32 %61, 1
  %63 = add nuw nsw i32 0, %62
  %64 = mul nuw nsw i32 %60, 8192
  %65 = add nuw nsw i32 %63, %64
  %66 = mul nuw nsw i32 %tile_origin.0, 8192
  %67 = add nuw nsw i32 %65, %66
  %68 = udiv i32 %67, 1
  %Arg_0.15 = getelementptr inbounds i32, ptr %arg0, i32 %67
  %Arg_0.16 = load i32, ptr %Arg_0.15, align 4, !invariant.load !297
  %69 = sitofp i32 %Arg_0.16 to float
  store float %69, ptr %reduction_input_address, align 4
  %70 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_12(ptr %70, ptr %reduction_input_address, ptr %return_buffer7)
  %71 = load float, ptr %return_buffer7, align 4
  store float %71, ptr %70, align 4
  br label %tile_loop.loop_header, !llvm.loop !321

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %is_full_tile-after

is_full_tile-false:                               ; preds = %y_in_tile.loop_body
  %72 = mul i32 %thread_id.x, 2
  store i32 0, ptr %tile_loop.invar_address11, align 4
  br label %tile_loop.loop_header9

tile_loop.loop_header9:                           ; preds = %x_in_tile-after20, %is_full_tile-false
  %tile_loop.indvar12 = load i32, ptr %tile_loop.invar_address11, align 4
  %73 = icmp uge i32 %tile_loop.indvar12, 8
  br i1 %73, label %tile_loop.loop_exit8, label %tile_loop.loop_body10

tile_loop.loop_body10:                            ; preds = %tile_loop.loop_header9
  %invar.inc13 = add nuw nsw i32 %tile_loop.indvar12, 1
  store i32 %invar.inc13, ptr %tile_loop.invar_address11, align 4
  %74 = icmp eq i32 %tile_loop.indvar12, 0
  %75 = mul i32 %tile_loop.indvar12, 1024
  %76 = add i32 %75, 0
  %x_loc14 = add i32 %76, %72
  %77 = add i32 %tile_origin.1, %y_in_tile.indvar
  %78 = add i32 %tile_origin.2, %x_loc14
  %79 = icmp ult i32 %x_loc14, %tile_bound1
  br i1 %79, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body10
  %80 = mul i32 %tile_loop.indvar12, 1024
  %81 = add i32 %80, 1
  %x_loc18 = add i32 %81, %72
  %82 = add i32 %tile_origin.1, %y_in_tile.indvar
  %83 = add i32 %tile_origin.2, %x_loc18
  %84 = icmp ult i32 %x_loc18, %tile_bound1
  br i1 %84, label %x_in_tile-true19, label %x_in_tile-after20

x_in_tile-after20:                                ; preds = %x_in_tile-true19, %x_in_tile-after
  br label %tile_loop.loop_header9, !llvm.loop !322

tile_loop.loop_exit8:                             ; preds = %tile_loop.loop_header9
  br label %is_full_tile-after

x_in_tile-true:                                   ; preds = %tile_loop.loop_body10
  %85 = mul nuw nsw i32 %78, 1
  %86 = add nuw nsw i32 0, %85
  %87 = mul nuw nsw i32 %77, 8192
  %88 = add nuw nsw i32 %86, %87
  %89 = mul nuw nsw i32 %tile_origin.0, 8192
  %90 = add nuw nsw i32 %88, %89
  %91 = udiv i32 %90, 1
  %Arg_0.115 = getelementptr inbounds i32, ptr %arg0, i32 %90
  %Arg_0.116 = load i32, ptr %Arg_0.115, align 4, !invariant.load !297
  %92 = sitofp i32 %Arg_0.116 to float
  store float %92, ptr %reduction_input_address, align 4
  %93 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_12(ptr %93, ptr %reduction_input_address, ptr %return_buffer17)
  %94 = load float, ptr %return_buffer17, align 4
  store float %94, ptr %93, align 4
  br label %x_in_tile-after

x_in_tile-true19:                                 ; preds = %x_in_tile-after
  %95 = mul nuw nsw i32 %83, 1
  %96 = add nuw nsw i32 0, %95
  %97 = mul nuw nsw i32 %82, 8192
  %98 = add nuw nsw i32 %96, %97
  %99 = mul nuw nsw i32 %tile_origin.0, 8192
  %100 = add nuw nsw i32 %98, %99
  %101 = udiv i32 %100, 1
  %Arg_0.121 = getelementptr inbounds i32, ptr %arg0, i32 %100
  %Arg_0.122 = load i32, ptr %Arg_0.121, align 4, !invariant.load !297
  %102 = sitofp i32 %Arg_0.122 to float
  store float %102, ptr %reduction_input_address, align 4
  %103 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_12(ptr %103, ptr %reduction_input_address, ptr %return_buffer23)
  %104 = load float, ptr %return_buffer23, align 4
  store float %104, ptr %103, align 4
  br label %x_in_tile-after20

intra_warp_reduce_write-true:                     ; preds = %y_in_tile.loop_exit
  %105 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache7, i32 0, i32 %13, i32 0, i32 %38
  %106 = addrspacecast ptr addrspace(3) %105 to ptr
  %107 = load float, ptr %current_output, align 4
  store float %107, ptr %106, align 4
  br label %intra_warp_reduce_write-after

inter_warp_reduce-true:                           ; preds = %intra_warp_reduce_write-after
  %108 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache7, i32 0, i32 %13, i32 0, i32 %lane_id
  %109 = addrspacecast ptr addrspace(3) %108 to ptr
  store float %region_0_67_constant_11, ptr %initial_value_addr, align 4
  %110 = icmp ult i32 %thread_id.x, 16
  %111 = select i1 %110, ptr %109, ptr %initial_value_addr
  %partial_reduction_result39 = load float, ptr %111, align 4
  %112 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result39, i32 16, i32 31)
  store float %112, ptr %result_from_other_lane38, align 4
  call void @region_1_12(ptr %111, ptr %result_from_other_lane38, ptr %return_buffer40)
  %113 = load float, ptr %return_buffer40, align 4
  store float %113, ptr %111, align 4
  %partial_reduction_result42 = load float, ptr %111, align 4
  %114 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result42, i32 8, i32 31)
  store float %114, ptr %result_from_other_lane41, align 4
  call void @region_1_12(ptr %111, ptr %result_from_other_lane41, ptr %return_buffer43)
  %115 = load float, ptr %return_buffer43, align 4
  store float %115, ptr %111, align 4
  %partial_reduction_result45 = load float, ptr %111, align 4
  %116 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result45, i32 4, i32 31)
  store float %116, ptr %result_from_other_lane44, align 4
  call void @region_1_12(ptr %111, ptr %result_from_other_lane44, ptr %return_buffer46)
  %117 = load float, ptr %return_buffer46, align 4
  store float %117, ptr %111, align 4
  %partial_reduction_result48 = load float, ptr %111, align 4
  %118 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result48, i32 2, i32 31)
  store float %118, ptr %result_from_other_lane47, align 4
  call void @region_1_12(ptr %111, ptr %result_from_other_lane47, ptr %return_buffer49)
  %119 = load float, ptr %return_buffer49, align 4
  store float %119, ptr %111, align 4
  %partial_reduction_result51 = load float, ptr %111, align 4
  %120 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result51, i32 1, i32 31)
  store float %120, ptr %result_from_other_lane50, align 4
  call void @region_1_12(ptr %111, ptr %result_from_other_lane50, ptr %return_buffer52)
  %121 = load float, ptr %return_buffer52, align 4
  store float %121, ptr %111, align 4
  %122 = icmp eq i32 %thread_id.x, 0
  br i1 %122, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %inter_warp_reduce-true
  br label %inter_warp_reduce-after

reduction_write_output-true:                      ; preds = %inter_warp_reduce-true
  %123 = mul i32 %thread_id.x, 2
  %124 = add i32 %tile_origin.1, %thread_id.y
  %125 = add i32 %tile_origin.2, %123
  %126 = add i32 %125, 0
  %output = load float, ptr %111, align 4
  store float %output, ptr %arg8, align 4
  br label %reduction_write_output-after

reduce-group-1-true:                              ; preds = %reduce-group-0-after
  %region_0_67_constant_1155 = load float, ptr @1, align 4
  %127 = getelementptr inbounds float, ptr %partial_reduction_result54, i32 0
  store float %region_0_67_constant_1155, ptr %127, align 4
  %128 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !293
  %129 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %130 = urem i32 %128, 512
  %131 = udiv i32 %128, 512
  %132 = mul i32 %129, 1
  %133 = add i32 %132, %131
  %134 = icmp ult i32 %133, 1
  br i1 %134, label %135, label %early_return56

135:                                              ; preds = %reduce-group-1-true
  %thread_id.x57 = urem i32 %130, 512
  %thread_id.y58 = udiv i32 %130, 512
  %lane_id59 = urem i32 %130, 32
  %136 = udiv i32 %133, 1
  %137 = urem i32 %136, 1
  %138 = udiv i32 %133, 1
  %139 = urem i32 %138, 1
  %140 = udiv i32 %133, 1
  %141 = icmp eq i32 %139, 0
  %tile_bound60 = select i1 %141, i32 1, i32 1
  %142 = icmp eq i32 %137, 0
  %tile_bound61 = select i1 %142, i32 8192, i32 8192
  %tile_origin.062 = mul i32 %140, 1
  %tile_origin.163 = mul i32 %139, 1
  %tile_origin.264 = mul i32 %137, 8192
  store i32 %thread_id.y58, ptr %y_in_tile.invar_address68, align 4
  br label %y_in_tile.loop_header66

y_in_tile.loop_header66:                          ; preds = %is_full_tile-after73, %135
  %y_in_tile.indvar69 = load i32, ptr %y_in_tile.invar_address68, align 4
  %143 = icmp uge i32 %y_in_tile.indvar69, %tile_bound60
  br i1 %143, label %y_in_tile.loop_exit65, label %y_in_tile.loop_body67

y_in_tile.loop_body67:                            ; preds = %y_in_tile.loop_header66
  %invar.inc70 = add nuw nsw i32 %y_in_tile.indvar69, 1
  store i32 %invar.inc70, ptr %y_in_tile.invar_address68, align 4
  %144 = icmp eq i32 %y_in_tile.indvar69, %thread_id.y58
  %145 = icmp eq i32 8192, %tile_bound61
  br i1 %145, label %is_full_tile-true71, label %is_full_tile-false72

is_full_tile-after73:                             ; preds = %tile_loop.loop_exit87, %tile_loop.loop_exit74
  br label %y_in_tile.loop_header66, !llvm.loop !323

y_in_tile.loop_exit65:                            ; preds = %y_in_tile.loop_header66
  %current_output105 = getelementptr inbounds float, ptr %partial_reduction_result54, i32 0
  %partial_reduction_result107 = load float, ptr %current_output105, align 4
  %146 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result107, i32 16, i32 31)
  store float %146, ptr %result_from_other_lane106, align 4
  call void @region_2_19(ptr %current_output105, ptr %result_from_other_lane106, ptr %return_buffer108)
  %147 = load float, ptr %return_buffer108, align 4
  store float %147, ptr %current_output105, align 4
  %partial_reduction_result110 = load float, ptr %current_output105, align 4
  %148 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result110, i32 8, i32 31)
  store float %148, ptr %result_from_other_lane109, align 4
  call void @region_2_19(ptr %current_output105, ptr %result_from_other_lane109, ptr %return_buffer111)
  %149 = load float, ptr %return_buffer111, align 4
  store float %149, ptr %current_output105, align 4
  %partial_reduction_result113 = load float, ptr %current_output105, align 4
  %150 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result113, i32 4, i32 31)
  store float %150, ptr %result_from_other_lane112, align 4
  call void @region_2_19(ptr %current_output105, ptr %result_from_other_lane112, ptr %return_buffer114)
  %151 = load float, ptr %return_buffer114, align 4
  store float %151, ptr %current_output105, align 4
  %partial_reduction_result116 = load float, ptr %current_output105, align 4
  %152 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result116, i32 2, i32 31)
  store float %152, ptr %result_from_other_lane115, align 4
  call void @region_2_19(ptr %current_output105, ptr %result_from_other_lane115, ptr %return_buffer117)
  %153 = load float, ptr %return_buffer117, align 4
  store float %153, ptr %current_output105, align 4
  %partial_reduction_result119 = load float, ptr %current_output105, align 4
  %154 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result119, i32 1, i32 31)
  store float %154, ptr %result_from_other_lane118, align 4
  call void @region_2_19(ptr %current_output105, ptr %result_from_other_lane118, ptr %return_buffer120)
  %155 = load float, ptr %return_buffer120, align 4
  store float %155, ptr %current_output105, align 4
  %156 = udiv i32 %thread_id.x57, 32
  %157 = icmp eq i32 %lane_id59, 0
  br i1 %157, label %intra_warp_reduce_write-true121, label %intra_warp_reduce_write-after122

intra_warp_reduce_write-after122:                 ; preds = %intra_warp_reduce_write-true121, %y_in_tile.loop_exit65
  call void @llvm.nvvm.barrier0()
  %158 = icmp eq i32 %156, 0
  br i1 %158, label %inter_warp_reduce-true123, label %inter_warp_reduce-after124

inter_warp_reduce-after124:                       ; preds = %reduction_write_output-after142, %intra_warp_reduce_write-after122
  br label %reduce-group-1-after

early_return56:                                   ; preds = %reduce-group-1-true
  ret void

is_full_tile-true71:                              ; preds = %y_in_tile.loop_body67
  %159 = mul i32 %thread_id.x57, 2
  store i32 0, ptr %tile_loop.invar_address77, align 4
  br label %tile_loop.loop_header75

tile_loop.loop_header75:                          ; preds = %tile_loop.loop_body76, %is_full_tile-true71
  %tile_loop.indvar78 = load i32, ptr %tile_loop.invar_address77, align 4
  %160 = icmp uge i32 %tile_loop.indvar78, 8
  br i1 %160, label %tile_loop.loop_exit74, label %tile_loop.loop_body76

tile_loop.loop_body76:                            ; preds = %tile_loop.loop_header75
  %invar.inc79 = add nuw nsw i32 %tile_loop.indvar78, 1
  store i32 %invar.inc79, ptr %tile_loop.invar_address77, align 4
  %161 = icmp eq i32 %tile_loop.indvar78, 0
  %162 = mul i32 %tile_loop.indvar78, 1024
  %163 = add i32 %162, 0
  %x_loc80 = add i32 %163, %159
  %164 = add i32 %tile_origin.163, %y_in_tile.indvar69
  %165 = add i32 %tile_origin.264, %x_loc80
  %166 = mul nuw nsw i32 %165, 1
  %167 = add nuw nsw i32 0, %166
  %168 = mul nuw nsw i32 %164, 8192
  %169 = add nuw nsw i32 %167, %168
  %170 = mul nuw nsw i32 %tile_origin.062, 8192
  %171 = add nuw nsw i32 %169, %170
  %172 = udiv i32 %171, 1
  %Arg_1.2 = getelementptr inbounds i32, ptr %arg1, i32 %171
  %Arg_1.281 = load i32, ptr %Arg_1.2, align 4, !invariant.load !297
  %173 = sitofp i32 %Arg_1.281 to float
  store float %173, ptr %reduction_input_address53, align 4
  %174 = getelementptr inbounds float, ptr %partial_reduction_result54, i32 0
  call void @region_2_19(ptr %174, ptr %reduction_input_address53, ptr %return_buffer82)
  %175 = load float, ptr %return_buffer82, align 4
  store float %175, ptr %174, align 4
  %176 = mul i32 %tile_loop.indvar78, 1024
  %177 = add i32 %176, 1
  %x_loc83 = add i32 %177, %159
  %178 = add i32 %tile_origin.163, %y_in_tile.indvar69
  %179 = add i32 %tile_origin.264, %x_loc83
  %180 = mul nuw nsw i32 %179, 1
  %181 = add nuw nsw i32 0, %180
  %182 = mul nuw nsw i32 %178, 8192
  %183 = add nuw nsw i32 %181, %182
  %184 = mul nuw nsw i32 %tile_origin.062, 8192
  %185 = add nuw nsw i32 %183, %184
  %186 = udiv i32 %185, 1
  %Arg_1.284 = getelementptr inbounds i32, ptr %arg1, i32 %185
  %Arg_1.285 = load i32, ptr %Arg_1.284, align 4, !invariant.load !297
  %187 = sitofp i32 %Arg_1.285 to float
  store float %187, ptr %reduction_input_address53, align 4
  %188 = getelementptr inbounds float, ptr %partial_reduction_result54, i32 0
  call void @region_2_19(ptr %188, ptr %reduction_input_address53, ptr %return_buffer86)
  %189 = load float, ptr %return_buffer86, align 4
  store float %189, ptr %188, align 4
  br label %tile_loop.loop_header75, !llvm.loop !324

tile_loop.loop_exit74:                            ; preds = %tile_loop.loop_header75
  br label %is_full_tile-after73

is_full_tile-false72:                             ; preds = %y_in_tile.loop_body67
  %190 = mul i32 %thread_id.x57, 2
  store i32 0, ptr %tile_loop.invar_address90, align 4
  br label %tile_loop.loop_header88

tile_loop.loop_header88:                          ; preds = %x_in_tile-after101, %is_full_tile-false72
  %tile_loop.indvar91 = load i32, ptr %tile_loop.invar_address90, align 4
  %191 = icmp uge i32 %tile_loop.indvar91, 8
  br i1 %191, label %tile_loop.loop_exit87, label %tile_loop.loop_body89

tile_loop.loop_body89:                            ; preds = %tile_loop.loop_header88
  %invar.inc92 = add nuw nsw i32 %tile_loop.indvar91, 1
  store i32 %invar.inc92, ptr %tile_loop.invar_address90, align 4
  %192 = icmp eq i32 %tile_loop.indvar91, 0
  %193 = mul i32 %tile_loop.indvar91, 1024
  %194 = add i32 %193, 0
  %x_loc93 = add i32 %194, %190
  %195 = add i32 %tile_origin.163, %y_in_tile.indvar69
  %196 = add i32 %tile_origin.264, %x_loc93
  %197 = icmp ult i32 %x_loc93, %tile_bound61
  br i1 %197, label %x_in_tile-true94, label %x_in_tile-after95

x_in_tile-after95:                                ; preds = %x_in_tile-true94, %tile_loop.loop_body89
  %198 = mul i32 %tile_loop.indvar91, 1024
  %199 = add i32 %198, 1
  %x_loc99 = add i32 %199, %190
  %200 = add i32 %tile_origin.163, %y_in_tile.indvar69
  %201 = add i32 %tile_origin.264, %x_loc99
  %202 = icmp ult i32 %x_loc99, %tile_bound61
  br i1 %202, label %x_in_tile-true100, label %x_in_tile-after101

x_in_tile-after101:                               ; preds = %x_in_tile-true100, %x_in_tile-after95
  br label %tile_loop.loop_header88, !llvm.loop !325

tile_loop.loop_exit87:                            ; preds = %tile_loop.loop_header88
  br label %is_full_tile-after73

x_in_tile-true94:                                 ; preds = %tile_loop.loop_body89
  %203 = mul nuw nsw i32 %196, 1
  %204 = add nuw nsw i32 0, %203
  %205 = mul nuw nsw i32 %195, 8192
  %206 = add nuw nsw i32 %204, %205
  %207 = mul nuw nsw i32 %tile_origin.062, 8192
  %208 = add nuw nsw i32 %206, %207
  %209 = udiv i32 %208, 1
  %Arg_1.296 = getelementptr inbounds i32, ptr %arg1, i32 %208
  %Arg_1.297 = load i32, ptr %Arg_1.296, align 4, !invariant.load !297
  %210 = sitofp i32 %Arg_1.297 to float
  store float %210, ptr %reduction_input_address53, align 4
  %211 = getelementptr inbounds float, ptr %partial_reduction_result54, i32 0
  call void @region_2_19(ptr %211, ptr %reduction_input_address53, ptr %return_buffer98)
  %212 = load float, ptr %return_buffer98, align 4
  store float %212, ptr %211, align 4
  br label %x_in_tile-after95

x_in_tile-true100:                                ; preds = %x_in_tile-after95
  %213 = mul nuw nsw i32 %201, 1
  %214 = add nuw nsw i32 0, %213
  %215 = mul nuw nsw i32 %200, 8192
  %216 = add nuw nsw i32 %214, %215
  %217 = mul nuw nsw i32 %tile_origin.062, 8192
  %218 = add nuw nsw i32 %216, %217
  %219 = udiv i32 %218, 1
  %Arg_1.2102 = getelementptr inbounds i32, ptr %arg1, i32 %218
  %Arg_1.2103 = load i32, ptr %Arg_1.2102, align 4, !invariant.load !297
  %220 = sitofp i32 %Arg_1.2103 to float
  store float %220, ptr %reduction_input_address53, align 4
  %221 = getelementptr inbounds float, ptr %partial_reduction_result54, i32 0
  call void @region_2_19(ptr %221, ptr %reduction_input_address53, ptr %return_buffer104)
  %222 = load float, ptr %return_buffer104, align 4
  store float %222, ptr %221, align 4
  br label %x_in_tile-after101

intra_warp_reduce_write-true121:                  ; preds = %y_in_tile.loop_exit65
  %223 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache8, i32 0, i32 %131, i32 0, i32 %156
  %224 = addrspacecast ptr addrspace(3) %223 to ptr
  %225 = load float, ptr %current_output105, align 4
  store float %225, ptr %224, align 4
  br label %intra_warp_reduce_write-after122

inter_warp_reduce-true123:                        ; preds = %intra_warp_reduce_write-after122
  %226 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache8, i32 0, i32 %131, i32 0, i32 %lane_id59
  %227 = addrspacecast ptr addrspace(3) %226 to ptr
  store float %region_0_67_constant_1155, ptr %initial_value_addr125, align 4
  %228 = icmp ult i32 %thread_id.x57, 16
  %229 = select i1 %228, ptr %227, ptr %initial_value_addr125
  %partial_reduction_result127 = load float, ptr %229, align 4
  %230 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result127, i32 16, i32 31)
  store float %230, ptr %result_from_other_lane126, align 4
  call void @region_2_19(ptr %229, ptr %result_from_other_lane126, ptr %return_buffer128)
  %231 = load float, ptr %return_buffer128, align 4
  store float %231, ptr %229, align 4
  %partial_reduction_result130 = load float, ptr %229, align 4
  %232 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result130, i32 8, i32 31)
  store float %232, ptr %result_from_other_lane129, align 4
  call void @region_2_19(ptr %229, ptr %result_from_other_lane129, ptr %return_buffer131)
  %233 = load float, ptr %return_buffer131, align 4
  store float %233, ptr %229, align 4
  %partial_reduction_result133 = load float, ptr %229, align 4
  %234 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result133, i32 4, i32 31)
  store float %234, ptr %result_from_other_lane132, align 4
  call void @region_2_19(ptr %229, ptr %result_from_other_lane132, ptr %return_buffer134)
  %235 = load float, ptr %return_buffer134, align 4
  store float %235, ptr %229, align 4
  %partial_reduction_result136 = load float, ptr %229, align 4
  %236 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result136, i32 2, i32 31)
  store float %236, ptr %result_from_other_lane135, align 4
  call void @region_2_19(ptr %229, ptr %result_from_other_lane135, ptr %return_buffer137)
  %237 = load float, ptr %return_buffer137, align 4
  store float %237, ptr %229, align 4
  %partial_reduction_result139 = load float, ptr %229, align 4
  %238 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result139, i32 1, i32 31)
  store float %238, ptr %result_from_other_lane138, align 4
  call void @region_2_19(ptr %229, ptr %result_from_other_lane138, ptr %return_buffer140)
  %239 = load float, ptr %return_buffer140, align 4
  store float %239, ptr %229, align 4
  %240 = icmp eq i32 %thread_id.x57, 0
  br i1 %240, label %reduction_write_output-true141, label %reduction_write_output-after142

reduction_write_output-after142:                  ; preds = %reduction_write_output-true141, %inter_warp_reduce-true123
  br label %inter_warp_reduce-after124

reduction_write_output-true141:                   ; preds = %inter_warp_reduce-true123
  %241 = mul i32 %thread_id.x57, 2
  %242 = add i32 %tile_origin.163, %thread_id.y58
  %243 = add i32 %tile_origin.264, %241
  %244 = add i32 %243, 0
  %output143 = load float, ptr %229, align 4
  store float %output143, ptr %arg9, align 4
  br label %reduction_write_output-after142

reduce-group-2-true:                              ; preds = %reduce-group-1-after
  %region_0_67_constant_11146 = load float, ptr @1, align 4
  %245 = getelementptr inbounds float, ptr %partial_reduction_result145, i32 0
  store float %region_0_67_constant_11146, ptr %245, align 4
  %246 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !293
  %247 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %248 = urem i32 %246, 512
  %249 = udiv i32 %246, 512
  %250 = mul i32 %247, 1
  %251 = add i32 %250, %249
  %252 = icmp ult i32 %251, 1
  br i1 %252, label %253, label %early_return147

253:                                              ; preds = %reduce-group-2-true
  %thread_id.x148 = urem i32 %248, 512
  %thread_id.y149 = udiv i32 %248, 512
  %lane_id150 = urem i32 %248, 32
  %254 = udiv i32 %251, 1
  %255 = urem i32 %254, 1
  %256 = udiv i32 %251, 1
  %257 = urem i32 %256, 1
  %258 = udiv i32 %251, 1
  %259 = icmp eq i32 %257, 0
  %tile_bound151 = select i1 %259, i32 1, i32 1
  %260 = icmp eq i32 %255, 0
  %tile_bound152 = select i1 %260, i32 8192, i32 8192
  %tile_origin.0153 = mul i32 %258, 1
  %tile_origin.1154 = mul i32 %257, 1
  %tile_origin.2155 = mul i32 %255, 8192
  store i32 %thread_id.y149, ptr %y_in_tile.invar_address159, align 4
  br label %y_in_tile.loop_header157

y_in_tile.loop_header157:                         ; preds = %is_full_tile-after164, %253
  %y_in_tile.indvar160 = load i32, ptr %y_in_tile.invar_address159, align 4
  %261 = icmp uge i32 %y_in_tile.indvar160, %tile_bound151
  br i1 %261, label %y_in_tile.loop_exit156, label %y_in_tile.loop_body158

y_in_tile.loop_body158:                           ; preds = %y_in_tile.loop_header157
  %invar.inc161 = add nuw nsw i32 %y_in_tile.indvar160, 1
  store i32 %invar.inc161, ptr %y_in_tile.invar_address159, align 4
  %262 = icmp eq i32 %y_in_tile.indvar160, %thread_id.y149
  %263 = icmp eq i32 8192, %tile_bound152
  br i1 %263, label %is_full_tile-true162, label %is_full_tile-false163

is_full_tile-after164:                            ; preds = %tile_loop.loop_exit178, %tile_loop.loop_exit165
  br label %y_in_tile.loop_header157, !llvm.loop !326

y_in_tile.loop_exit156:                           ; preds = %y_in_tile.loop_header157
  %current_output196 = getelementptr inbounds float, ptr %partial_reduction_result145, i32 0
  %partial_reduction_result198 = load float, ptr %current_output196, align 4
  %264 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result198, i32 16, i32 31)
  store float %264, ptr %result_from_other_lane197, align 4
  call void @region_3_26(ptr %current_output196, ptr %result_from_other_lane197, ptr %return_buffer199)
  %265 = load float, ptr %return_buffer199, align 4
  store float %265, ptr %current_output196, align 4
  %partial_reduction_result201 = load float, ptr %current_output196, align 4
  %266 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result201, i32 8, i32 31)
  store float %266, ptr %result_from_other_lane200, align 4
  call void @region_3_26(ptr %current_output196, ptr %result_from_other_lane200, ptr %return_buffer202)
  %267 = load float, ptr %return_buffer202, align 4
  store float %267, ptr %current_output196, align 4
  %partial_reduction_result204 = load float, ptr %current_output196, align 4
  %268 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result204, i32 4, i32 31)
  store float %268, ptr %result_from_other_lane203, align 4
  call void @region_3_26(ptr %current_output196, ptr %result_from_other_lane203, ptr %return_buffer205)
  %269 = load float, ptr %return_buffer205, align 4
  store float %269, ptr %current_output196, align 4
  %partial_reduction_result207 = load float, ptr %current_output196, align 4
  %270 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result207, i32 2, i32 31)
  store float %270, ptr %result_from_other_lane206, align 4
  call void @region_3_26(ptr %current_output196, ptr %result_from_other_lane206, ptr %return_buffer208)
  %271 = load float, ptr %return_buffer208, align 4
  store float %271, ptr %current_output196, align 4
  %partial_reduction_result210 = load float, ptr %current_output196, align 4
  %272 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result210, i32 1, i32 31)
  store float %272, ptr %result_from_other_lane209, align 4
  call void @region_3_26(ptr %current_output196, ptr %result_from_other_lane209, ptr %return_buffer211)
  %273 = load float, ptr %return_buffer211, align 4
  store float %273, ptr %current_output196, align 4
  %274 = udiv i32 %thread_id.x148, 32
  %275 = icmp eq i32 %lane_id150, 0
  br i1 %275, label %intra_warp_reduce_write-true212, label %intra_warp_reduce_write-after213

intra_warp_reduce_write-after213:                 ; preds = %intra_warp_reduce_write-true212, %y_in_tile.loop_exit156
  call void @llvm.nvvm.barrier0()
  %276 = icmp eq i32 %274, 0
  br i1 %276, label %inter_warp_reduce-true214, label %inter_warp_reduce-after215

inter_warp_reduce-after215:                       ; preds = %reduction_write_output-after233, %intra_warp_reduce_write-after213
  br label %reduce-group-2-after

early_return147:                                  ; preds = %reduce-group-2-true
  ret void

is_full_tile-true162:                             ; preds = %y_in_tile.loop_body158
  %277 = mul i32 %thread_id.x148, 2
  store i32 0, ptr %tile_loop.invar_address168, align 4
  br label %tile_loop.loop_header166

tile_loop.loop_header166:                         ; preds = %tile_loop.loop_body167, %is_full_tile-true162
  %tile_loop.indvar169 = load i32, ptr %tile_loop.invar_address168, align 4
  %278 = icmp uge i32 %tile_loop.indvar169, 8
  br i1 %278, label %tile_loop.loop_exit165, label %tile_loop.loop_body167

tile_loop.loop_body167:                           ; preds = %tile_loop.loop_header166
  %invar.inc170 = add nuw nsw i32 %tile_loop.indvar169, 1
  store i32 %invar.inc170, ptr %tile_loop.invar_address168, align 4
  %279 = icmp eq i32 %tile_loop.indvar169, 0
  %280 = mul i32 %tile_loop.indvar169, 1024
  %281 = add i32 %280, 0
  %x_loc171 = add i32 %281, %277
  %282 = add i32 %tile_origin.1154, %y_in_tile.indvar160
  %283 = add i32 %tile_origin.2155, %x_loc171
  %284 = mul nuw nsw i32 %283, 1
  %285 = add nuw nsw i32 0, %284
  %286 = mul nuw nsw i32 %282, 8192
  %287 = add nuw nsw i32 %285, %286
  %288 = mul nuw nsw i32 %tile_origin.0153, 8192
  %289 = add nuw nsw i32 %287, %288
  %290 = udiv i32 %289, 1
  %Arg_2.3 = getelementptr inbounds i32, ptr %arg2, i32 %289
  %Arg_2.3172 = load i32, ptr %Arg_2.3, align 4, !invariant.load !297
  %291 = sitofp i32 %Arg_2.3172 to float
  store float %291, ptr %reduction_input_address144, align 4
  %292 = getelementptr inbounds float, ptr %partial_reduction_result145, i32 0
  call void @region_3_26(ptr %292, ptr %reduction_input_address144, ptr %return_buffer173)
  %293 = load float, ptr %return_buffer173, align 4
  store float %293, ptr %292, align 4
  %294 = mul i32 %tile_loop.indvar169, 1024
  %295 = add i32 %294, 1
  %x_loc174 = add i32 %295, %277
  %296 = add i32 %tile_origin.1154, %y_in_tile.indvar160
  %297 = add i32 %tile_origin.2155, %x_loc174
  %298 = mul nuw nsw i32 %297, 1
  %299 = add nuw nsw i32 0, %298
  %300 = mul nuw nsw i32 %296, 8192
  %301 = add nuw nsw i32 %299, %300
  %302 = mul nuw nsw i32 %tile_origin.0153, 8192
  %303 = add nuw nsw i32 %301, %302
  %304 = udiv i32 %303, 1
  %Arg_2.3175 = getelementptr inbounds i32, ptr %arg2, i32 %303
  %Arg_2.3176 = load i32, ptr %Arg_2.3175, align 4, !invariant.load !297
  %305 = sitofp i32 %Arg_2.3176 to float
  store float %305, ptr %reduction_input_address144, align 4
  %306 = getelementptr inbounds float, ptr %partial_reduction_result145, i32 0
  call void @region_3_26(ptr %306, ptr %reduction_input_address144, ptr %return_buffer177)
  %307 = load float, ptr %return_buffer177, align 4
  store float %307, ptr %306, align 4
  br label %tile_loop.loop_header166, !llvm.loop !327

tile_loop.loop_exit165:                           ; preds = %tile_loop.loop_header166
  br label %is_full_tile-after164

is_full_tile-false163:                            ; preds = %y_in_tile.loop_body158
  %308 = mul i32 %thread_id.x148, 2
  store i32 0, ptr %tile_loop.invar_address181, align 4
  br label %tile_loop.loop_header179

tile_loop.loop_header179:                         ; preds = %x_in_tile-after192, %is_full_tile-false163
  %tile_loop.indvar182 = load i32, ptr %tile_loop.invar_address181, align 4
  %309 = icmp uge i32 %tile_loop.indvar182, 8
  br i1 %309, label %tile_loop.loop_exit178, label %tile_loop.loop_body180

tile_loop.loop_body180:                           ; preds = %tile_loop.loop_header179
  %invar.inc183 = add nuw nsw i32 %tile_loop.indvar182, 1
  store i32 %invar.inc183, ptr %tile_loop.invar_address181, align 4
  %310 = icmp eq i32 %tile_loop.indvar182, 0
  %311 = mul i32 %tile_loop.indvar182, 1024
  %312 = add i32 %311, 0
  %x_loc184 = add i32 %312, %308
  %313 = add i32 %tile_origin.1154, %y_in_tile.indvar160
  %314 = add i32 %tile_origin.2155, %x_loc184
  %315 = icmp ult i32 %x_loc184, %tile_bound152
  br i1 %315, label %x_in_tile-true185, label %x_in_tile-after186

x_in_tile-after186:                               ; preds = %x_in_tile-true185, %tile_loop.loop_body180
  %316 = mul i32 %tile_loop.indvar182, 1024
  %317 = add i32 %316, 1
  %x_loc190 = add i32 %317, %308
  %318 = add i32 %tile_origin.1154, %y_in_tile.indvar160
  %319 = add i32 %tile_origin.2155, %x_loc190
  %320 = icmp ult i32 %x_loc190, %tile_bound152
  br i1 %320, label %x_in_tile-true191, label %x_in_tile-after192

x_in_tile-after192:                               ; preds = %x_in_tile-true191, %x_in_tile-after186
  br label %tile_loop.loop_header179, !llvm.loop !328

tile_loop.loop_exit178:                           ; preds = %tile_loop.loop_header179
  br label %is_full_tile-after164

x_in_tile-true185:                                ; preds = %tile_loop.loop_body180
  %321 = mul nuw nsw i32 %314, 1
  %322 = add nuw nsw i32 0, %321
  %323 = mul nuw nsw i32 %313, 8192
  %324 = add nuw nsw i32 %322, %323
  %325 = mul nuw nsw i32 %tile_origin.0153, 8192
  %326 = add nuw nsw i32 %324, %325
  %327 = udiv i32 %326, 1
  %Arg_2.3187 = getelementptr inbounds i32, ptr %arg2, i32 %326
  %Arg_2.3188 = load i32, ptr %Arg_2.3187, align 4, !invariant.load !297
  %328 = sitofp i32 %Arg_2.3188 to float
  store float %328, ptr %reduction_input_address144, align 4
  %329 = getelementptr inbounds float, ptr %partial_reduction_result145, i32 0
  call void @region_3_26(ptr %329, ptr %reduction_input_address144, ptr %return_buffer189)
  %330 = load float, ptr %return_buffer189, align 4
  store float %330, ptr %329, align 4
  br label %x_in_tile-after186

x_in_tile-true191:                                ; preds = %x_in_tile-after186
  %331 = mul nuw nsw i32 %319, 1
  %332 = add nuw nsw i32 0, %331
  %333 = mul nuw nsw i32 %318, 8192
  %334 = add nuw nsw i32 %332, %333
  %335 = mul nuw nsw i32 %tile_origin.0153, 8192
  %336 = add nuw nsw i32 %334, %335
  %337 = udiv i32 %336, 1
  %Arg_2.3193 = getelementptr inbounds i32, ptr %arg2, i32 %336
  %Arg_2.3194 = load i32, ptr %Arg_2.3193, align 4, !invariant.load !297
  %338 = sitofp i32 %Arg_2.3194 to float
  store float %338, ptr %reduction_input_address144, align 4
  %339 = getelementptr inbounds float, ptr %partial_reduction_result145, i32 0
  call void @region_3_26(ptr %339, ptr %reduction_input_address144, ptr %return_buffer195)
  %340 = load float, ptr %return_buffer195, align 4
  store float %340, ptr %339, align 4
  br label %x_in_tile-after192

intra_warp_reduce_write-true212:                  ; preds = %y_in_tile.loop_exit156
  %341 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache9, i32 0, i32 %249, i32 0, i32 %274
  %342 = addrspacecast ptr addrspace(3) %341 to ptr
  %343 = load float, ptr %current_output196, align 4
  store float %343, ptr %342, align 4
  br label %intra_warp_reduce_write-after213

inter_warp_reduce-true214:                        ; preds = %intra_warp_reduce_write-after213
  %344 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache9, i32 0, i32 %249, i32 0, i32 %lane_id150
  %345 = addrspacecast ptr addrspace(3) %344 to ptr
  store float %region_0_67_constant_11146, ptr %initial_value_addr216, align 4
  %346 = icmp ult i32 %thread_id.x148, 16
  %347 = select i1 %346, ptr %345, ptr %initial_value_addr216
  %partial_reduction_result218 = load float, ptr %347, align 4
  %348 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result218, i32 16, i32 31)
  store float %348, ptr %result_from_other_lane217, align 4
  call void @region_3_26(ptr %347, ptr %result_from_other_lane217, ptr %return_buffer219)
  %349 = load float, ptr %return_buffer219, align 4
  store float %349, ptr %347, align 4
  %partial_reduction_result221 = load float, ptr %347, align 4
  %350 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result221, i32 8, i32 31)
  store float %350, ptr %result_from_other_lane220, align 4
  call void @region_3_26(ptr %347, ptr %result_from_other_lane220, ptr %return_buffer222)
  %351 = load float, ptr %return_buffer222, align 4
  store float %351, ptr %347, align 4
  %partial_reduction_result224 = load float, ptr %347, align 4
  %352 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result224, i32 4, i32 31)
  store float %352, ptr %result_from_other_lane223, align 4
  call void @region_3_26(ptr %347, ptr %result_from_other_lane223, ptr %return_buffer225)
  %353 = load float, ptr %return_buffer225, align 4
  store float %353, ptr %347, align 4
  %partial_reduction_result227 = load float, ptr %347, align 4
  %354 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result227, i32 2, i32 31)
  store float %354, ptr %result_from_other_lane226, align 4
  call void @region_3_26(ptr %347, ptr %result_from_other_lane226, ptr %return_buffer228)
  %355 = load float, ptr %return_buffer228, align 4
  store float %355, ptr %347, align 4
  %partial_reduction_result230 = load float, ptr %347, align 4
  %356 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result230, i32 1, i32 31)
  store float %356, ptr %result_from_other_lane229, align 4
  call void @region_3_26(ptr %347, ptr %result_from_other_lane229, ptr %return_buffer231)
  %357 = load float, ptr %return_buffer231, align 4
  store float %357, ptr %347, align 4
  %358 = icmp eq i32 %thread_id.x148, 0
  br i1 %358, label %reduction_write_output-true232, label %reduction_write_output-after233

reduction_write_output-after233:                  ; preds = %reduction_write_output-true232, %inter_warp_reduce-true214
  br label %inter_warp_reduce-after215

reduction_write_output-true232:                   ; preds = %inter_warp_reduce-true214
  %359 = mul i32 %thread_id.x148, 2
  %360 = add i32 %tile_origin.1154, %thread_id.y149
  %361 = add i32 %tile_origin.2155, %359
  %362 = add i32 %361, 0
  %output234 = load float, ptr %347, align 4
  store float %output234, ptr %arg10, align 4
  br label %reduction_write_output-after233

reduce-group-3-true:                              ; preds = %reduce-group-2-after
  %region_0_67_constant_11237 = load float, ptr @1, align 4
  %363 = getelementptr inbounds float, ptr %partial_reduction_result236, i32 0
  store float %region_0_67_constant_11237, ptr %363, align 4
  %364 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !293
  %365 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %366 = urem i32 %364, 512
  %367 = udiv i32 %364, 512
  %368 = mul i32 %365, 1
  %369 = add i32 %368, %367
  %370 = icmp ult i32 %369, 1
  br i1 %370, label %371, label %early_return238

371:                                              ; preds = %reduce-group-3-true
  %thread_id.x239 = urem i32 %366, 512
  %thread_id.y240 = udiv i32 %366, 512
  %lane_id241 = urem i32 %366, 32
  %372 = udiv i32 %369, 1
  %373 = urem i32 %372, 1
  %374 = udiv i32 %369, 1
  %375 = urem i32 %374, 1
  %376 = udiv i32 %369, 1
  %377 = icmp eq i32 %375, 0
  %tile_bound242 = select i1 %377, i32 1, i32 1
  %378 = icmp eq i32 %373, 0
  %tile_bound243 = select i1 %378, i32 8192, i32 8192
  %tile_origin.0244 = mul i32 %376, 1
  %tile_origin.1245 = mul i32 %375, 1
  %tile_origin.2246 = mul i32 %373, 8192
  store i32 %thread_id.y240, ptr %y_in_tile.invar_address250, align 4
  br label %y_in_tile.loop_header248

y_in_tile.loop_header248:                         ; preds = %is_full_tile-after255, %371
  %y_in_tile.indvar251 = load i32, ptr %y_in_tile.invar_address250, align 4
  %379 = icmp uge i32 %y_in_tile.indvar251, %tile_bound242
  br i1 %379, label %y_in_tile.loop_exit247, label %y_in_tile.loop_body249

y_in_tile.loop_body249:                           ; preds = %y_in_tile.loop_header248
  %invar.inc252 = add nuw nsw i32 %y_in_tile.indvar251, 1
  store i32 %invar.inc252, ptr %y_in_tile.invar_address250, align 4
  %380 = icmp eq i32 %y_in_tile.indvar251, %thread_id.y240
  %381 = icmp eq i32 8192, %tile_bound243
  br i1 %381, label %is_full_tile-true253, label %is_full_tile-false254

is_full_tile-after255:                            ; preds = %tile_loop.loop_exit269, %tile_loop.loop_exit256
  br label %y_in_tile.loop_header248, !llvm.loop !329

y_in_tile.loop_exit247:                           ; preds = %y_in_tile.loop_header248
  %current_output287 = getelementptr inbounds float, ptr %partial_reduction_result236, i32 0
  %partial_reduction_result289 = load float, ptr %current_output287, align 4
  %382 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result289, i32 16, i32 31)
  store float %382, ptr %result_from_other_lane288, align 4
  call void @region_4_33(ptr %current_output287, ptr %result_from_other_lane288, ptr %return_buffer290)
  %383 = load float, ptr %return_buffer290, align 4
  store float %383, ptr %current_output287, align 4
  %partial_reduction_result292 = load float, ptr %current_output287, align 4
  %384 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result292, i32 8, i32 31)
  store float %384, ptr %result_from_other_lane291, align 4
  call void @region_4_33(ptr %current_output287, ptr %result_from_other_lane291, ptr %return_buffer293)
  %385 = load float, ptr %return_buffer293, align 4
  store float %385, ptr %current_output287, align 4
  %partial_reduction_result295 = load float, ptr %current_output287, align 4
  %386 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result295, i32 4, i32 31)
  store float %386, ptr %result_from_other_lane294, align 4
  call void @region_4_33(ptr %current_output287, ptr %result_from_other_lane294, ptr %return_buffer296)
  %387 = load float, ptr %return_buffer296, align 4
  store float %387, ptr %current_output287, align 4
  %partial_reduction_result298 = load float, ptr %current_output287, align 4
  %388 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result298, i32 2, i32 31)
  store float %388, ptr %result_from_other_lane297, align 4
  call void @region_4_33(ptr %current_output287, ptr %result_from_other_lane297, ptr %return_buffer299)
  %389 = load float, ptr %return_buffer299, align 4
  store float %389, ptr %current_output287, align 4
  %partial_reduction_result301 = load float, ptr %current_output287, align 4
  %390 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result301, i32 1, i32 31)
  store float %390, ptr %result_from_other_lane300, align 4
  call void @region_4_33(ptr %current_output287, ptr %result_from_other_lane300, ptr %return_buffer302)
  %391 = load float, ptr %return_buffer302, align 4
  store float %391, ptr %current_output287, align 4
  %392 = udiv i32 %thread_id.x239, 32
  %393 = icmp eq i32 %lane_id241, 0
  br i1 %393, label %intra_warp_reduce_write-true303, label %intra_warp_reduce_write-after304

intra_warp_reduce_write-after304:                 ; preds = %intra_warp_reduce_write-true303, %y_in_tile.loop_exit247
  call void @llvm.nvvm.barrier0()
  %394 = icmp eq i32 %392, 0
  br i1 %394, label %inter_warp_reduce-true305, label %inter_warp_reduce-after306

inter_warp_reduce-after306:                       ; preds = %reduction_write_output-after324, %intra_warp_reduce_write-after304
  br label %reduce-group-3-after

early_return238:                                  ; preds = %reduce-group-3-true
  ret void

is_full_tile-true253:                             ; preds = %y_in_tile.loop_body249
  %395 = mul i32 %thread_id.x239, 2
  store i32 0, ptr %tile_loop.invar_address259, align 4
  br label %tile_loop.loop_header257

tile_loop.loop_header257:                         ; preds = %tile_loop.loop_body258, %is_full_tile-true253
  %tile_loop.indvar260 = load i32, ptr %tile_loop.invar_address259, align 4
  %396 = icmp uge i32 %tile_loop.indvar260, 8
  br i1 %396, label %tile_loop.loop_exit256, label %tile_loop.loop_body258

tile_loop.loop_body258:                           ; preds = %tile_loop.loop_header257
  %invar.inc261 = add nuw nsw i32 %tile_loop.indvar260, 1
  store i32 %invar.inc261, ptr %tile_loop.invar_address259, align 4
  %397 = icmp eq i32 %tile_loop.indvar260, 0
  %398 = mul i32 %tile_loop.indvar260, 1024
  %399 = add i32 %398, 0
  %x_loc262 = add i32 %399, %395
  %400 = add i32 %tile_origin.1245, %y_in_tile.indvar251
  %401 = add i32 %tile_origin.2246, %x_loc262
  %402 = mul nuw nsw i32 %401, 1
  %403 = add nuw nsw i32 0, %402
  %404 = mul nuw nsw i32 %400, 8192
  %405 = add nuw nsw i32 %403, %404
  %406 = mul nuw nsw i32 %tile_origin.0244, 8192
  %407 = add nuw nsw i32 %405, %406
  %408 = udiv i32 %407, 1
  %Arg_3.4 = getelementptr inbounds i32, ptr %arg3, i32 %407
  %Arg_3.4263 = load i32, ptr %Arg_3.4, align 4, !invariant.load !297
  %409 = sitofp i32 %Arg_3.4263 to float
  store float %409, ptr %reduction_input_address235, align 4
  %410 = getelementptr inbounds float, ptr %partial_reduction_result236, i32 0
  call void @region_4_33(ptr %410, ptr %reduction_input_address235, ptr %return_buffer264)
  %411 = load float, ptr %return_buffer264, align 4
  store float %411, ptr %410, align 4
  %412 = mul i32 %tile_loop.indvar260, 1024
  %413 = add i32 %412, 1
  %x_loc265 = add i32 %413, %395
  %414 = add i32 %tile_origin.1245, %y_in_tile.indvar251
  %415 = add i32 %tile_origin.2246, %x_loc265
  %416 = mul nuw nsw i32 %415, 1
  %417 = add nuw nsw i32 0, %416
  %418 = mul nuw nsw i32 %414, 8192
  %419 = add nuw nsw i32 %417, %418
  %420 = mul nuw nsw i32 %tile_origin.0244, 8192
  %421 = add nuw nsw i32 %419, %420
  %422 = udiv i32 %421, 1
  %Arg_3.4266 = getelementptr inbounds i32, ptr %arg3, i32 %421
  %Arg_3.4267 = load i32, ptr %Arg_3.4266, align 4, !invariant.load !297
  %423 = sitofp i32 %Arg_3.4267 to float
  store float %423, ptr %reduction_input_address235, align 4
  %424 = getelementptr inbounds float, ptr %partial_reduction_result236, i32 0
  call void @region_4_33(ptr %424, ptr %reduction_input_address235, ptr %return_buffer268)
  %425 = load float, ptr %return_buffer268, align 4
  store float %425, ptr %424, align 4
  br label %tile_loop.loop_header257, !llvm.loop !330

tile_loop.loop_exit256:                           ; preds = %tile_loop.loop_header257
  br label %is_full_tile-after255

is_full_tile-false254:                            ; preds = %y_in_tile.loop_body249
  %426 = mul i32 %thread_id.x239, 2
  store i32 0, ptr %tile_loop.invar_address272, align 4
  br label %tile_loop.loop_header270

tile_loop.loop_header270:                         ; preds = %x_in_tile-after283, %is_full_tile-false254
  %tile_loop.indvar273 = load i32, ptr %tile_loop.invar_address272, align 4
  %427 = icmp uge i32 %tile_loop.indvar273, 8
  br i1 %427, label %tile_loop.loop_exit269, label %tile_loop.loop_body271

tile_loop.loop_body271:                           ; preds = %tile_loop.loop_header270
  %invar.inc274 = add nuw nsw i32 %tile_loop.indvar273, 1
  store i32 %invar.inc274, ptr %tile_loop.invar_address272, align 4
  %428 = icmp eq i32 %tile_loop.indvar273, 0
  %429 = mul i32 %tile_loop.indvar273, 1024
  %430 = add i32 %429, 0
  %x_loc275 = add i32 %430, %426
  %431 = add i32 %tile_origin.1245, %y_in_tile.indvar251
  %432 = add i32 %tile_origin.2246, %x_loc275
  %433 = icmp ult i32 %x_loc275, %tile_bound243
  br i1 %433, label %x_in_tile-true276, label %x_in_tile-after277

x_in_tile-after277:                               ; preds = %x_in_tile-true276, %tile_loop.loop_body271
  %434 = mul i32 %tile_loop.indvar273, 1024
  %435 = add i32 %434, 1
  %x_loc281 = add i32 %435, %426
  %436 = add i32 %tile_origin.1245, %y_in_tile.indvar251
  %437 = add i32 %tile_origin.2246, %x_loc281
  %438 = icmp ult i32 %x_loc281, %tile_bound243
  br i1 %438, label %x_in_tile-true282, label %x_in_tile-after283

x_in_tile-after283:                               ; preds = %x_in_tile-true282, %x_in_tile-after277
  br label %tile_loop.loop_header270, !llvm.loop !331

tile_loop.loop_exit269:                           ; preds = %tile_loop.loop_header270
  br label %is_full_tile-after255

x_in_tile-true276:                                ; preds = %tile_loop.loop_body271
  %439 = mul nuw nsw i32 %432, 1
  %440 = add nuw nsw i32 0, %439
  %441 = mul nuw nsw i32 %431, 8192
  %442 = add nuw nsw i32 %440, %441
  %443 = mul nuw nsw i32 %tile_origin.0244, 8192
  %444 = add nuw nsw i32 %442, %443
  %445 = udiv i32 %444, 1
  %Arg_3.4278 = getelementptr inbounds i32, ptr %arg3, i32 %444
  %Arg_3.4279 = load i32, ptr %Arg_3.4278, align 4, !invariant.load !297
  %446 = sitofp i32 %Arg_3.4279 to float
  store float %446, ptr %reduction_input_address235, align 4
  %447 = getelementptr inbounds float, ptr %partial_reduction_result236, i32 0
  call void @region_4_33(ptr %447, ptr %reduction_input_address235, ptr %return_buffer280)
  %448 = load float, ptr %return_buffer280, align 4
  store float %448, ptr %447, align 4
  br label %x_in_tile-after277

x_in_tile-true282:                                ; preds = %x_in_tile-after277
  %449 = mul nuw nsw i32 %437, 1
  %450 = add nuw nsw i32 0, %449
  %451 = mul nuw nsw i32 %436, 8192
  %452 = add nuw nsw i32 %450, %451
  %453 = mul nuw nsw i32 %tile_origin.0244, 8192
  %454 = add nuw nsw i32 %452, %453
  %455 = udiv i32 %454, 1
  %Arg_3.4284 = getelementptr inbounds i32, ptr %arg3, i32 %454
  %Arg_3.4285 = load i32, ptr %Arg_3.4284, align 4, !invariant.load !297
  %456 = sitofp i32 %Arg_3.4285 to float
  store float %456, ptr %reduction_input_address235, align 4
  %457 = getelementptr inbounds float, ptr %partial_reduction_result236, i32 0
  call void @region_4_33(ptr %457, ptr %reduction_input_address235, ptr %return_buffer286)
  %458 = load float, ptr %return_buffer286, align 4
  store float %458, ptr %457, align 4
  br label %x_in_tile-after283

intra_warp_reduce_write-true303:                  ; preds = %y_in_tile.loop_exit247
  %459 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache10, i32 0, i32 %367, i32 0, i32 %392
  %460 = addrspacecast ptr addrspace(3) %459 to ptr
  %461 = load float, ptr %current_output287, align 4
  store float %461, ptr %460, align 4
  br label %intra_warp_reduce_write-after304

inter_warp_reduce-true305:                        ; preds = %intra_warp_reduce_write-after304
  %462 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache10, i32 0, i32 %367, i32 0, i32 %lane_id241
  %463 = addrspacecast ptr addrspace(3) %462 to ptr
  store float %region_0_67_constant_11237, ptr %initial_value_addr307, align 4
  %464 = icmp ult i32 %thread_id.x239, 16
  %465 = select i1 %464, ptr %463, ptr %initial_value_addr307
  %partial_reduction_result309 = load float, ptr %465, align 4
  %466 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result309, i32 16, i32 31)
  store float %466, ptr %result_from_other_lane308, align 4
  call void @region_4_33(ptr %465, ptr %result_from_other_lane308, ptr %return_buffer310)
  %467 = load float, ptr %return_buffer310, align 4
  store float %467, ptr %465, align 4
  %partial_reduction_result312 = load float, ptr %465, align 4
  %468 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result312, i32 8, i32 31)
  store float %468, ptr %result_from_other_lane311, align 4
  call void @region_4_33(ptr %465, ptr %result_from_other_lane311, ptr %return_buffer313)
  %469 = load float, ptr %return_buffer313, align 4
  store float %469, ptr %465, align 4
  %partial_reduction_result315 = load float, ptr %465, align 4
  %470 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result315, i32 4, i32 31)
  store float %470, ptr %result_from_other_lane314, align 4
  call void @region_4_33(ptr %465, ptr %result_from_other_lane314, ptr %return_buffer316)
  %471 = load float, ptr %return_buffer316, align 4
  store float %471, ptr %465, align 4
  %partial_reduction_result318 = load float, ptr %465, align 4
  %472 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result318, i32 2, i32 31)
  store float %472, ptr %result_from_other_lane317, align 4
  call void @region_4_33(ptr %465, ptr %result_from_other_lane317, ptr %return_buffer319)
  %473 = load float, ptr %return_buffer319, align 4
  store float %473, ptr %465, align 4
  %partial_reduction_result321 = load float, ptr %465, align 4
  %474 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result321, i32 1, i32 31)
  store float %474, ptr %result_from_other_lane320, align 4
  call void @region_4_33(ptr %465, ptr %result_from_other_lane320, ptr %return_buffer322)
  %475 = load float, ptr %return_buffer322, align 4
  store float %475, ptr %465, align 4
  %476 = icmp eq i32 %thread_id.x239, 0
  br i1 %476, label %reduction_write_output-true323, label %reduction_write_output-after324

reduction_write_output-after324:                  ; preds = %reduction_write_output-true323, %inter_warp_reduce-true305
  br label %inter_warp_reduce-after306

reduction_write_output-true323:                   ; preds = %inter_warp_reduce-true305
  %477 = mul i32 %thread_id.x239, 2
  %478 = add i32 %tile_origin.1245, %thread_id.y240
  %479 = add i32 %tile_origin.2246, %477
  %480 = add i32 %479, 0
  %output325 = load float, ptr %465, align 4
  store float %output325, ptr %arg11, align 4
  br label %reduction_write_output-after324

reduce-group-4-true:                              ; preds = %reduce-group-3-after
  %region_0_67_constant_11328 = load float, ptr @1, align 4
  %481 = getelementptr inbounds float, ptr %partial_reduction_result327, i32 0
  store float %region_0_67_constant_11328, ptr %481, align 4
  %482 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !293
  %483 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %484 = urem i32 %482, 512
  %485 = udiv i32 %482, 512
  %486 = mul i32 %483, 1
  %487 = add i32 %486, %485
  %488 = icmp ult i32 %487, 1
  br i1 %488, label %489, label %early_return329

489:                                              ; preds = %reduce-group-4-true
  %thread_id.x330 = urem i32 %484, 512
  %thread_id.y331 = udiv i32 %484, 512
  %lane_id332 = urem i32 %484, 32
  %490 = udiv i32 %487, 1
  %491 = urem i32 %490, 1
  %492 = udiv i32 %487, 1
  %493 = urem i32 %492, 1
  %494 = udiv i32 %487, 1
  %495 = icmp eq i32 %493, 0
  %tile_bound333 = select i1 %495, i32 1, i32 1
  %496 = icmp eq i32 %491, 0
  %tile_bound334 = select i1 %496, i32 8192, i32 8192
  %tile_origin.0335 = mul i32 %494, 1
  %tile_origin.1336 = mul i32 %493, 1
  %tile_origin.2337 = mul i32 %491, 8192
  store i32 %thread_id.y331, ptr %y_in_tile.invar_address341, align 4
  br label %y_in_tile.loop_header339

y_in_tile.loop_header339:                         ; preds = %is_full_tile-after346, %489
  %y_in_tile.indvar342 = load i32, ptr %y_in_tile.invar_address341, align 4
  %497 = icmp uge i32 %y_in_tile.indvar342, %tile_bound333
  br i1 %497, label %y_in_tile.loop_exit338, label %y_in_tile.loop_body340

y_in_tile.loop_body340:                           ; preds = %y_in_tile.loop_header339
  %invar.inc343 = add nuw nsw i32 %y_in_tile.indvar342, 1
  store i32 %invar.inc343, ptr %y_in_tile.invar_address341, align 4
  %498 = icmp eq i32 %y_in_tile.indvar342, %thread_id.y331
  %499 = icmp eq i32 8192, %tile_bound334
  br i1 %499, label %is_full_tile-true344, label %is_full_tile-false345

is_full_tile-after346:                            ; preds = %tile_loop.loop_exit360, %tile_loop.loop_exit347
  br label %y_in_tile.loop_header339, !llvm.loop !332

y_in_tile.loop_exit338:                           ; preds = %y_in_tile.loop_header339
  %current_output378 = getelementptr inbounds float, ptr %partial_reduction_result327, i32 0
  %partial_reduction_result380 = load float, ptr %current_output378, align 4
  %500 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result380, i32 16, i32 31)
  store float %500, ptr %result_from_other_lane379, align 4
  call void @region_5_40(ptr %current_output378, ptr %result_from_other_lane379, ptr %return_buffer381)
  %501 = load float, ptr %return_buffer381, align 4
  store float %501, ptr %current_output378, align 4
  %partial_reduction_result383 = load float, ptr %current_output378, align 4
  %502 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result383, i32 8, i32 31)
  store float %502, ptr %result_from_other_lane382, align 4
  call void @region_5_40(ptr %current_output378, ptr %result_from_other_lane382, ptr %return_buffer384)
  %503 = load float, ptr %return_buffer384, align 4
  store float %503, ptr %current_output378, align 4
  %partial_reduction_result386 = load float, ptr %current_output378, align 4
  %504 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result386, i32 4, i32 31)
  store float %504, ptr %result_from_other_lane385, align 4
  call void @region_5_40(ptr %current_output378, ptr %result_from_other_lane385, ptr %return_buffer387)
  %505 = load float, ptr %return_buffer387, align 4
  store float %505, ptr %current_output378, align 4
  %partial_reduction_result389 = load float, ptr %current_output378, align 4
  %506 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result389, i32 2, i32 31)
  store float %506, ptr %result_from_other_lane388, align 4
  call void @region_5_40(ptr %current_output378, ptr %result_from_other_lane388, ptr %return_buffer390)
  %507 = load float, ptr %return_buffer390, align 4
  store float %507, ptr %current_output378, align 4
  %partial_reduction_result392 = load float, ptr %current_output378, align 4
  %508 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result392, i32 1, i32 31)
  store float %508, ptr %result_from_other_lane391, align 4
  call void @region_5_40(ptr %current_output378, ptr %result_from_other_lane391, ptr %return_buffer393)
  %509 = load float, ptr %return_buffer393, align 4
  store float %509, ptr %current_output378, align 4
  %510 = udiv i32 %thread_id.x330, 32
  %511 = icmp eq i32 %lane_id332, 0
  br i1 %511, label %intra_warp_reduce_write-true394, label %intra_warp_reduce_write-after395

intra_warp_reduce_write-after395:                 ; preds = %intra_warp_reduce_write-true394, %y_in_tile.loop_exit338
  call void @llvm.nvvm.barrier0()
  %512 = icmp eq i32 %510, 0
  br i1 %512, label %inter_warp_reduce-true396, label %inter_warp_reduce-after397

inter_warp_reduce-after397:                       ; preds = %reduction_write_output-after415, %intra_warp_reduce_write-after395
  br label %reduce-group-4-after

early_return329:                                  ; preds = %reduce-group-4-true
  ret void

is_full_tile-true344:                             ; preds = %y_in_tile.loop_body340
  %513 = mul i32 %thread_id.x330, 2
  store i32 0, ptr %tile_loop.invar_address350, align 4
  br label %tile_loop.loop_header348

tile_loop.loop_header348:                         ; preds = %tile_loop.loop_body349, %is_full_tile-true344
  %tile_loop.indvar351 = load i32, ptr %tile_loop.invar_address350, align 4
  %514 = icmp uge i32 %tile_loop.indvar351, 8
  br i1 %514, label %tile_loop.loop_exit347, label %tile_loop.loop_body349

tile_loop.loop_body349:                           ; preds = %tile_loop.loop_header348
  %invar.inc352 = add nuw nsw i32 %tile_loop.indvar351, 1
  store i32 %invar.inc352, ptr %tile_loop.invar_address350, align 4
  %515 = icmp eq i32 %tile_loop.indvar351, 0
  %516 = mul i32 %tile_loop.indvar351, 1024
  %517 = add i32 %516, 0
  %x_loc353 = add i32 %517, %513
  %518 = add i32 %tile_origin.1336, %y_in_tile.indvar342
  %519 = add i32 %tile_origin.2337, %x_loc353
  %520 = mul nuw nsw i32 %519, 1
  %521 = add nuw nsw i32 0, %520
  %522 = mul nuw nsw i32 %518, 8192
  %523 = add nuw nsw i32 %521, %522
  %524 = mul nuw nsw i32 %tile_origin.0335, 8192
  %525 = add nuw nsw i32 %523, %524
  %526 = udiv i32 %525, 1
  %Arg_4.5 = getelementptr inbounds i32, ptr %arg4, i32 %525
  %Arg_4.5354 = load i32, ptr %Arg_4.5, align 4, !invariant.load !297
  %527 = sitofp i32 %Arg_4.5354 to float
  store float %527, ptr %reduction_input_address326, align 4
  %528 = getelementptr inbounds float, ptr %partial_reduction_result327, i32 0
  call void @region_5_40(ptr %528, ptr %reduction_input_address326, ptr %return_buffer355)
  %529 = load float, ptr %return_buffer355, align 4
  store float %529, ptr %528, align 4
  %530 = mul i32 %tile_loop.indvar351, 1024
  %531 = add i32 %530, 1
  %x_loc356 = add i32 %531, %513
  %532 = add i32 %tile_origin.1336, %y_in_tile.indvar342
  %533 = add i32 %tile_origin.2337, %x_loc356
  %534 = mul nuw nsw i32 %533, 1
  %535 = add nuw nsw i32 0, %534
  %536 = mul nuw nsw i32 %532, 8192
  %537 = add nuw nsw i32 %535, %536
  %538 = mul nuw nsw i32 %tile_origin.0335, 8192
  %539 = add nuw nsw i32 %537, %538
  %540 = udiv i32 %539, 1
  %Arg_4.5357 = getelementptr inbounds i32, ptr %arg4, i32 %539
  %Arg_4.5358 = load i32, ptr %Arg_4.5357, align 4, !invariant.load !297
  %541 = sitofp i32 %Arg_4.5358 to float
  store float %541, ptr %reduction_input_address326, align 4
  %542 = getelementptr inbounds float, ptr %partial_reduction_result327, i32 0
  call void @region_5_40(ptr %542, ptr %reduction_input_address326, ptr %return_buffer359)
  %543 = load float, ptr %return_buffer359, align 4
  store float %543, ptr %542, align 4
  br label %tile_loop.loop_header348, !llvm.loop !333

tile_loop.loop_exit347:                           ; preds = %tile_loop.loop_header348
  br label %is_full_tile-after346

is_full_tile-false345:                            ; preds = %y_in_tile.loop_body340
  %544 = mul i32 %thread_id.x330, 2
  store i32 0, ptr %tile_loop.invar_address363, align 4
  br label %tile_loop.loop_header361

tile_loop.loop_header361:                         ; preds = %x_in_tile-after374, %is_full_tile-false345
  %tile_loop.indvar364 = load i32, ptr %tile_loop.invar_address363, align 4
  %545 = icmp uge i32 %tile_loop.indvar364, 8
  br i1 %545, label %tile_loop.loop_exit360, label %tile_loop.loop_body362

tile_loop.loop_body362:                           ; preds = %tile_loop.loop_header361
  %invar.inc365 = add nuw nsw i32 %tile_loop.indvar364, 1
  store i32 %invar.inc365, ptr %tile_loop.invar_address363, align 4
  %546 = icmp eq i32 %tile_loop.indvar364, 0
  %547 = mul i32 %tile_loop.indvar364, 1024
  %548 = add i32 %547, 0
  %x_loc366 = add i32 %548, %544
  %549 = add i32 %tile_origin.1336, %y_in_tile.indvar342
  %550 = add i32 %tile_origin.2337, %x_loc366
  %551 = icmp ult i32 %x_loc366, %tile_bound334
  br i1 %551, label %x_in_tile-true367, label %x_in_tile-after368

x_in_tile-after368:                               ; preds = %x_in_tile-true367, %tile_loop.loop_body362
  %552 = mul i32 %tile_loop.indvar364, 1024
  %553 = add i32 %552, 1
  %x_loc372 = add i32 %553, %544
  %554 = add i32 %tile_origin.1336, %y_in_tile.indvar342
  %555 = add i32 %tile_origin.2337, %x_loc372
  %556 = icmp ult i32 %x_loc372, %tile_bound334
  br i1 %556, label %x_in_tile-true373, label %x_in_tile-after374

x_in_tile-after374:                               ; preds = %x_in_tile-true373, %x_in_tile-after368
  br label %tile_loop.loop_header361, !llvm.loop !334

tile_loop.loop_exit360:                           ; preds = %tile_loop.loop_header361
  br label %is_full_tile-after346

x_in_tile-true367:                                ; preds = %tile_loop.loop_body362
  %557 = mul nuw nsw i32 %550, 1
  %558 = add nuw nsw i32 0, %557
  %559 = mul nuw nsw i32 %549, 8192
  %560 = add nuw nsw i32 %558, %559
  %561 = mul nuw nsw i32 %tile_origin.0335, 8192
  %562 = add nuw nsw i32 %560, %561
  %563 = udiv i32 %562, 1
  %Arg_4.5369 = getelementptr inbounds i32, ptr %arg4, i32 %562
  %Arg_4.5370 = load i32, ptr %Arg_4.5369, align 4, !invariant.load !297
  %564 = sitofp i32 %Arg_4.5370 to float
  store float %564, ptr %reduction_input_address326, align 4
  %565 = getelementptr inbounds float, ptr %partial_reduction_result327, i32 0
  call void @region_5_40(ptr %565, ptr %reduction_input_address326, ptr %return_buffer371)
  %566 = load float, ptr %return_buffer371, align 4
  store float %566, ptr %565, align 4
  br label %x_in_tile-after368

x_in_tile-true373:                                ; preds = %x_in_tile-after368
  %567 = mul nuw nsw i32 %555, 1
  %568 = add nuw nsw i32 0, %567
  %569 = mul nuw nsw i32 %554, 8192
  %570 = add nuw nsw i32 %568, %569
  %571 = mul nuw nsw i32 %tile_origin.0335, 8192
  %572 = add nuw nsw i32 %570, %571
  %573 = udiv i32 %572, 1
  %Arg_4.5375 = getelementptr inbounds i32, ptr %arg4, i32 %572
  %Arg_4.5376 = load i32, ptr %Arg_4.5375, align 4, !invariant.load !297
  %574 = sitofp i32 %Arg_4.5376 to float
  store float %574, ptr %reduction_input_address326, align 4
  %575 = getelementptr inbounds float, ptr %partial_reduction_result327, i32 0
  call void @region_5_40(ptr %575, ptr %reduction_input_address326, ptr %return_buffer377)
  %576 = load float, ptr %return_buffer377, align 4
  store float %576, ptr %575, align 4
  br label %x_in_tile-after374

intra_warp_reduce_write-true394:                  ; preds = %y_in_tile.loop_exit338
  %577 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache11, i32 0, i32 %485, i32 0, i32 %510
  %578 = addrspacecast ptr addrspace(3) %577 to ptr
  %579 = load float, ptr %current_output378, align 4
  store float %579, ptr %578, align 4
  br label %intra_warp_reduce_write-after395

inter_warp_reduce-true396:                        ; preds = %intra_warp_reduce_write-after395
  %580 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache11, i32 0, i32 %485, i32 0, i32 %lane_id332
  %581 = addrspacecast ptr addrspace(3) %580 to ptr
  store float %region_0_67_constant_11328, ptr %initial_value_addr398, align 4
  %582 = icmp ult i32 %thread_id.x330, 16
  %583 = select i1 %582, ptr %581, ptr %initial_value_addr398
  %partial_reduction_result400 = load float, ptr %583, align 4
  %584 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result400, i32 16, i32 31)
  store float %584, ptr %result_from_other_lane399, align 4
  call void @region_5_40(ptr %583, ptr %result_from_other_lane399, ptr %return_buffer401)
  %585 = load float, ptr %return_buffer401, align 4
  store float %585, ptr %583, align 4
  %partial_reduction_result403 = load float, ptr %583, align 4
  %586 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result403, i32 8, i32 31)
  store float %586, ptr %result_from_other_lane402, align 4
  call void @region_5_40(ptr %583, ptr %result_from_other_lane402, ptr %return_buffer404)
  %587 = load float, ptr %return_buffer404, align 4
  store float %587, ptr %583, align 4
  %partial_reduction_result406 = load float, ptr %583, align 4
  %588 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result406, i32 4, i32 31)
  store float %588, ptr %result_from_other_lane405, align 4
  call void @region_5_40(ptr %583, ptr %result_from_other_lane405, ptr %return_buffer407)
  %589 = load float, ptr %return_buffer407, align 4
  store float %589, ptr %583, align 4
  %partial_reduction_result409 = load float, ptr %583, align 4
  %590 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result409, i32 2, i32 31)
  store float %590, ptr %result_from_other_lane408, align 4
  call void @region_5_40(ptr %583, ptr %result_from_other_lane408, ptr %return_buffer410)
  %591 = load float, ptr %return_buffer410, align 4
  store float %591, ptr %583, align 4
  %partial_reduction_result412 = load float, ptr %583, align 4
  %592 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result412, i32 1, i32 31)
  store float %592, ptr %result_from_other_lane411, align 4
  call void @region_5_40(ptr %583, ptr %result_from_other_lane411, ptr %return_buffer413)
  %593 = load float, ptr %return_buffer413, align 4
  store float %593, ptr %583, align 4
  %594 = icmp eq i32 %thread_id.x330, 0
  br i1 %594, label %reduction_write_output-true414, label %reduction_write_output-after415

reduction_write_output-after415:                  ; preds = %reduction_write_output-true414, %inter_warp_reduce-true396
  br label %inter_warp_reduce-after397

reduction_write_output-true414:                   ; preds = %inter_warp_reduce-true396
  %595 = mul i32 %thread_id.x330, 2
  %596 = add i32 %tile_origin.1336, %thread_id.y331
  %597 = add i32 %tile_origin.2337, %595
  %598 = add i32 %597, 0
  %output416 = load float, ptr %583, align 4
  store float %output416, ptr %arg12, align 4
  br label %reduction_write_output-after415

reduce-group-5-true:                              ; preds = %reduce-group-4-after
  %region_0_67_constant_11419 = load float, ptr @1, align 4
  %599 = getelementptr inbounds float, ptr %partial_reduction_result418, i32 0
  store float %region_0_67_constant_11419, ptr %599, align 4
  %600 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !293
  %601 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %602 = urem i32 %600, 512
  %603 = udiv i32 %600, 512
  %604 = mul i32 %601, 1
  %605 = add i32 %604, %603
  %606 = icmp ult i32 %605, 1
  br i1 %606, label %607, label %early_return420

607:                                              ; preds = %reduce-group-5-true
  %thread_id.x421 = urem i32 %602, 512
  %thread_id.y422 = udiv i32 %602, 512
  %lane_id423 = urem i32 %602, 32
  %608 = udiv i32 %605, 1
  %609 = urem i32 %608, 1
  %610 = udiv i32 %605, 1
  %611 = urem i32 %610, 1
  %612 = udiv i32 %605, 1
  %613 = icmp eq i32 %611, 0
  %tile_bound424 = select i1 %613, i32 1, i32 1
  %614 = icmp eq i32 %609, 0
  %tile_bound425 = select i1 %614, i32 8192, i32 8192
  %tile_origin.0426 = mul i32 %612, 1
  %tile_origin.1427 = mul i32 %611, 1
  %tile_origin.2428 = mul i32 %609, 8192
  store i32 %thread_id.y422, ptr %y_in_tile.invar_address432, align 4
  br label %y_in_tile.loop_header430

y_in_tile.loop_header430:                         ; preds = %is_full_tile-after437, %607
  %y_in_tile.indvar433 = load i32, ptr %y_in_tile.invar_address432, align 4
  %615 = icmp uge i32 %y_in_tile.indvar433, %tile_bound424
  br i1 %615, label %y_in_tile.loop_exit429, label %y_in_tile.loop_body431

y_in_tile.loop_body431:                           ; preds = %y_in_tile.loop_header430
  %invar.inc434 = add nuw nsw i32 %y_in_tile.indvar433, 1
  store i32 %invar.inc434, ptr %y_in_tile.invar_address432, align 4
  %616 = icmp eq i32 %y_in_tile.indvar433, %thread_id.y422
  %617 = icmp eq i32 8192, %tile_bound425
  br i1 %617, label %is_full_tile-true435, label %is_full_tile-false436

is_full_tile-after437:                            ; preds = %tile_loop.loop_exit451, %tile_loop.loop_exit438
  br label %y_in_tile.loop_header430, !llvm.loop !335

y_in_tile.loop_exit429:                           ; preds = %y_in_tile.loop_header430
  %current_output469 = getelementptr inbounds float, ptr %partial_reduction_result418, i32 0
  %partial_reduction_result471 = load float, ptr %current_output469, align 4
  %618 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result471, i32 16, i32 31)
  store float %618, ptr %result_from_other_lane470, align 4
  call void @region_6_47(ptr %current_output469, ptr %result_from_other_lane470, ptr %return_buffer472)
  %619 = load float, ptr %return_buffer472, align 4
  store float %619, ptr %current_output469, align 4
  %partial_reduction_result474 = load float, ptr %current_output469, align 4
  %620 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result474, i32 8, i32 31)
  store float %620, ptr %result_from_other_lane473, align 4
  call void @region_6_47(ptr %current_output469, ptr %result_from_other_lane473, ptr %return_buffer475)
  %621 = load float, ptr %return_buffer475, align 4
  store float %621, ptr %current_output469, align 4
  %partial_reduction_result477 = load float, ptr %current_output469, align 4
  %622 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result477, i32 4, i32 31)
  store float %622, ptr %result_from_other_lane476, align 4
  call void @region_6_47(ptr %current_output469, ptr %result_from_other_lane476, ptr %return_buffer478)
  %623 = load float, ptr %return_buffer478, align 4
  store float %623, ptr %current_output469, align 4
  %partial_reduction_result480 = load float, ptr %current_output469, align 4
  %624 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result480, i32 2, i32 31)
  store float %624, ptr %result_from_other_lane479, align 4
  call void @region_6_47(ptr %current_output469, ptr %result_from_other_lane479, ptr %return_buffer481)
  %625 = load float, ptr %return_buffer481, align 4
  store float %625, ptr %current_output469, align 4
  %partial_reduction_result483 = load float, ptr %current_output469, align 4
  %626 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result483, i32 1, i32 31)
  store float %626, ptr %result_from_other_lane482, align 4
  call void @region_6_47(ptr %current_output469, ptr %result_from_other_lane482, ptr %return_buffer484)
  %627 = load float, ptr %return_buffer484, align 4
  store float %627, ptr %current_output469, align 4
  %628 = udiv i32 %thread_id.x421, 32
  %629 = icmp eq i32 %lane_id423, 0
  br i1 %629, label %intra_warp_reduce_write-true485, label %intra_warp_reduce_write-after486

intra_warp_reduce_write-after486:                 ; preds = %intra_warp_reduce_write-true485, %y_in_tile.loop_exit429
  call void @llvm.nvvm.barrier0()
  %630 = icmp eq i32 %628, 0
  br i1 %630, label %inter_warp_reduce-true487, label %inter_warp_reduce-after488

inter_warp_reduce-after488:                       ; preds = %reduction_write_output-after506, %intra_warp_reduce_write-after486
  br label %reduce-group-5-after

early_return420:                                  ; preds = %reduce-group-5-true
  ret void

is_full_tile-true435:                             ; preds = %y_in_tile.loop_body431
  %631 = mul i32 %thread_id.x421, 2
  store i32 0, ptr %tile_loop.invar_address441, align 4
  br label %tile_loop.loop_header439

tile_loop.loop_header439:                         ; preds = %tile_loop.loop_body440, %is_full_tile-true435
  %tile_loop.indvar442 = load i32, ptr %tile_loop.invar_address441, align 4
  %632 = icmp uge i32 %tile_loop.indvar442, 8
  br i1 %632, label %tile_loop.loop_exit438, label %tile_loop.loop_body440

tile_loop.loop_body440:                           ; preds = %tile_loop.loop_header439
  %invar.inc443 = add nuw nsw i32 %tile_loop.indvar442, 1
  store i32 %invar.inc443, ptr %tile_loop.invar_address441, align 4
  %633 = icmp eq i32 %tile_loop.indvar442, 0
  %634 = mul i32 %tile_loop.indvar442, 1024
  %635 = add i32 %634, 0
  %x_loc444 = add i32 %635, %631
  %636 = add i32 %tile_origin.1427, %y_in_tile.indvar433
  %637 = add i32 %tile_origin.2428, %x_loc444
  %638 = mul nuw nsw i32 %637, 1
  %639 = add nuw nsw i32 0, %638
  %640 = mul nuw nsw i32 %636, 8192
  %641 = add nuw nsw i32 %639, %640
  %642 = mul nuw nsw i32 %tile_origin.0426, 8192
  %643 = add nuw nsw i32 %641, %642
  %644 = udiv i32 %643, 1
  %Arg_5.6 = getelementptr inbounds i32, ptr %arg5, i32 %643
  %Arg_5.6445 = load i32, ptr %Arg_5.6, align 4, !invariant.load !297
  %645 = sitofp i32 %Arg_5.6445 to float
  store float %645, ptr %reduction_input_address417, align 4
  %646 = getelementptr inbounds float, ptr %partial_reduction_result418, i32 0
  call void @region_6_47(ptr %646, ptr %reduction_input_address417, ptr %return_buffer446)
  %647 = load float, ptr %return_buffer446, align 4
  store float %647, ptr %646, align 4
  %648 = mul i32 %tile_loop.indvar442, 1024
  %649 = add i32 %648, 1
  %x_loc447 = add i32 %649, %631
  %650 = add i32 %tile_origin.1427, %y_in_tile.indvar433
  %651 = add i32 %tile_origin.2428, %x_loc447
  %652 = mul nuw nsw i32 %651, 1
  %653 = add nuw nsw i32 0, %652
  %654 = mul nuw nsw i32 %650, 8192
  %655 = add nuw nsw i32 %653, %654
  %656 = mul nuw nsw i32 %tile_origin.0426, 8192
  %657 = add nuw nsw i32 %655, %656
  %658 = udiv i32 %657, 1
  %Arg_5.6448 = getelementptr inbounds i32, ptr %arg5, i32 %657
  %Arg_5.6449 = load i32, ptr %Arg_5.6448, align 4, !invariant.load !297
  %659 = sitofp i32 %Arg_5.6449 to float
  store float %659, ptr %reduction_input_address417, align 4
  %660 = getelementptr inbounds float, ptr %partial_reduction_result418, i32 0
  call void @region_6_47(ptr %660, ptr %reduction_input_address417, ptr %return_buffer450)
  %661 = load float, ptr %return_buffer450, align 4
  store float %661, ptr %660, align 4
  br label %tile_loop.loop_header439, !llvm.loop !336

tile_loop.loop_exit438:                           ; preds = %tile_loop.loop_header439
  br label %is_full_tile-after437

is_full_tile-false436:                            ; preds = %y_in_tile.loop_body431
  %662 = mul i32 %thread_id.x421, 2
  store i32 0, ptr %tile_loop.invar_address454, align 4
  br label %tile_loop.loop_header452

tile_loop.loop_header452:                         ; preds = %x_in_tile-after465, %is_full_tile-false436
  %tile_loop.indvar455 = load i32, ptr %tile_loop.invar_address454, align 4
  %663 = icmp uge i32 %tile_loop.indvar455, 8
  br i1 %663, label %tile_loop.loop_exit451, label %tile_loop.loop_body453

tile_loop.loop_body453:                           ; preds = %tile_loop.loop_header452
  %invar.inc456 = add nuw nsw i32 %tile_loop.indvar455, 1
  store i32 %invar.inc456, ptr %tile_loop.invar_address454, align 4
  %664 = icmp eq i32 %tile_loop.indvar455, 0
  %665 = mul i32 %tile_loop.indvar455, 1024
  %666 = add i32 %665, 0
  %x_loc457 = add i32 %666, %662
  %667 = add i32 %tile_origin.1427, %y_in_tile.indvar433
  %668 = add i32 %tile_origin.2428, %x_loc457
  %669 = icmp ult i32 %x_loc457, %tile_bound425
  br i1 %669, label %x_in_tile-true458, label %x_in_tile-after459

x_in_tile-after459:                               ; preds = %x_in_tile-true458, %tile_loop.loop_body453
  %670 = mul i32 %tile_loop.indvar455, 1024
  %671 = add i32 %670, 1
  %x_loc463 = add i32 %671, %662
  %672 = add i32 %tile_origin.1427, %y_in_tile.indvar433
  %673 = add i32 %tile_origin.2428, %x_loc463
  %674 = icmp ult i32 %x_loc463, %tile_bound425
  br i1 %674, label %x_in_tile-true464, label %x_in_tile-after465

x_in_tile-after465:                               ; preds = %x_in_tile-true464, %x_in_tile-after459
  br label %tile_loop.loop_header452, !llvm.loop !337

tile_loop.loop_exit451:                           ; preds = %tile_loop.loop_header452
  br label %is_full_tile-after437

x_in_tile-true458:                                ; preds = %tile_loop.loop_body453
  %675 = mul nuw nsw i32 %668, 1
  %676 = add nuw nsw i32 0, %675
  %677 = mul nuw nsw i32 %667, 8192
  %678 = add nuw nsw i32 %676, %677
  %679 = mul nuw nsw i32 %tile_origin.0426, 8192
  %680 = add nuw nsw i32 %678, %679
  %681 = udiv i32 %680, 1
  %Arg_5.6460 = getelementptr inbounds i32, ptr %arg5, i32 %680
  %Arg_5.6461 = load i32, ptr %Arg_5.6460, align 4, !invariant.load !297
  %682 = sitofp i32 %Arg_5.6461 to float
  store float %682, ptr %reduction_input_address417, align 4
  %683 = getelementptr inbounds float, ptr %partial_reduction_result418, i32 0
  call void @region_6_47(ptr %683, ptr %reduction_input_address417, ptr %return_buffer462)
  %684 = load float, ptr %return_buffer462, align 4
  store float %684, ptr %683, align 4
  br label %x_in_tile-after459

x_in_tile-true464:                                ; preds = %x_in_tile-after459
  %685 = mul nuw nsw i32 %673, 1
  %686 = add nuw nsw i32 0, %685
  %687 = mul nuw nsw i32 %672, 8192
  %688 = add nuw nsw i32 %686, %687
  %689 = mul nuw nsw i32 %tile_origin.0426, 8192
  %690 = add nuw nsw i32 %688, %689
  %691 = udiv i32 %690, 1
  %Arg_5.6466 = getelementptr inbounds i32, ptr %arg5, i32 %690
  %Arg_5.6467 = load i32, ptr %Arg_5.6466, align 4, !invariant.load !297
  %692 = sitofp i32 %Arg_5.6467 to float
  store float %692, ptr %reduction_input_address417, align 4
  %693 = getelementptr inbounds float, ptr %partial_reduction_result418, i32 0
  call void @region_6_47(ptr %693, ptr %reduction_input_address417, ptr %return_buffer468)
  %694 = load float, ptr %return_buffer468, align 4
  store float %694, ptr %693, align 4
  br label %x_in_tile-after465

intra_warp_reduce_write-true485:                  ; preds = %y_in_tile.loop_exit429
  %695 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache12, i32 0, i32 %603, i32 0, i32 %628
  %696 = addrspacecast ptr addrspace(3) %695 to ptr
  %697 = load float, ptr %current_output469, align 4
  store float %697, ptr %696, align 4
  br label %intra_warp_reduce_write-after486

inter_warp_reduce-true487:                        ; preds = %intra_warp_reduce_write-after486
  %698 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache12, i32 0, i32 %603, i32 0, i32 %lane_id423
  %699 = addrspacecast ptr addrspace(3) %698 to ptr
  store float %region_0_67_constant_11419, ptr %initial_value_addr489, align 4
  %700 = icmp ult i32 %thread_id.x421, 16
  %701 = select i1 %700, ptr %699, ptr %initial_value_addr489
  %partial_reduction_result491 = load float, ptr %701, align 4
  %702 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result491, i32 16, i32 31)
  store float %702, ptr %result_from_other_lane490, align 4
  call void @region_6_47(ptr %701, ptr %result_from_other_lane490, ptr %return_buffer492)
  %703 = load float, ptr %return_buffer492, align 4
  store float %703, ptr %701, align 4
  %partial_reduction_result494 = load float, ptr %701, align 4
  %704 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result494, i32 8, i32 31)
  store float %704, ptr %result_from_other_lane493, align 4
  call void @region_6_47(ptr %701, ptr %result_from_other_lane493, ptr %return_buffer495)
  %705 = load float, ptr %return_buffer495, align 4
  store float %705, ptr %701, align 4
  %partial_reduction_result497 = load float, ptr %701, align 4
  %706 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result497, i32 4, i32 31)
  store float %706, ptr %result_from_other_lane496, align 4
  call void @region_6_47(ptr %701, ptr %result_from_other_lane496, ptr %return_buffer498)
  %707 = load float, ptr %return_buffer498, align 4
  store float %707, ptr %701, align 4
  %partial_reduction_result500 = load float, ptr %701, align 4
  %708 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result500, i32 2, i32 31)
  store float %708, ptr %result_from_other_lane499, align 4
  call void @region_6_47(ptr %701, ptr %result_from_other_lane499, ptr %return_buffer501)
  %709 = load float, ptr %return_buffer501, align 4
  store float %709, ptr %701, align 4
  %partial_reduction_result503 = load float, ptr %701, align 4
  %710 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result503, i32 1, i32 31)
  store float %710, ptr %result_from_other_lane502, align 4
  call void @region_6_47(ptr %701, ptr %result_from_other_lane502, ptr %return_buffer504)
  %711 = load float, ptr %return_buffer504, align 4
  store float %711, ptr %701, align 4
  %712 = icmp eq i32 %thread_id.x421, 0
  br i1 %712, label %reduction_write_output-true505, label %reduction_write_output-after506

reduction_write_output-after506:                  ; preds = %reduction_write_output-true505, %inter_warp_reduce-true487
  br label %inter_warp_reduce-after488

reduction_write_output-true505:                   ; preds = %inter_warp_reduce-true487
  %713 = mul i32 %thread_id.x421, 2
  %714 = add i32 %tile_origin.1427, %thread_id.y422
  %715 = add i32 %tile_origin.2428, %713
  %716 = add i32 %715, 0
  %output507 = load float, ptr %701, align 4
  store float %output507, ptr %arg13, align 4
  br label %reduction_write_output-after506

reduce-group-6-true:                              ; preds = %reduce-group-5-after
  %region_0_67_constant_11510 = load float, ptr @1, align 4
  %717 = getelementptr inbounds float, ptr %partial_reduction_result509, i32 0
  store float %region_0_67_constant_11510, ptr %717, align 4
  %718 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !293
  %719 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %720 = urem i32 %718, 512
  %721 = udiv i32 %718, 512
  %722 = mul i32 %719, 1
  %723 = add i32 %722, %721
  %724 = icmp ult i32 %723, 1
  br i1 %724, label %725, label %early_return511

725:                                              ; preds = %reduce-group-6-true
  %thread_id.x512 = urem i32 %720, 512
  %thread_id.y513 = udiv i32 %720, 512
  %lane_id514 = urem i32 %720, 32
  %726 = udiv i32 %723, 1
  %727 = urem i32 %726, 1
  %728 = udiv i32 %723, 1
  %729 = urem i32 %728, 1
  %730 = udiv i32 %723, 1
  %731 = icmp eq i32 %729, 0
  %tile_bound515 = select i1 %731, i32 1, i32 1
  %732 = icmp eq i32 %727, 0
  %tile_bound516 = select i1 %732, i32 8192, i32 8192
  %tile_origin.0517 = mul i32 %730, 1
  %tile_origin.1518 = mul i32 %729, 1
  %tile_origin.2519 = mul i32 %727, 8192
  store i32 %thread_id.y513, ptr %y_in_tile.invar_address523, align 4
  br label %y_in_tile.loop_header521

y_in_tile.loop_header521:                         ; preds = %is_full_tile-after528, %725
  %y_in_tile.indvar524 = load i32, ptr %y_in_tile.invar_address523, align 4
  %733 = icmp uge i32 %y_in_tile.indvar524, %tile_bound515
  br i1 %733, label %y_in_tile.loop_exit520, label %y_in_tile.loop_body522

y_in_tile.loop_body522:                           ; preds = %y_in_tile.loop_header521
  %invar.inc525 = add nuw nsw i32 %y_in_tile.indvar524, 1
  store i32 %invar.inc525, ptr %y_in_tile.invar_address523, align 4
  %734 = icmp eq i32 %y_in_tile.indvar524, %thread_id.y513
  %735 = icmp eq i32 8192, %tile_bound516
  br i1 %735, label %is_full_tile-true526, label %is_full_tile-false527

is_full_tile-after528:                            ; preds = %tile_loop.loop_exit542, %tile_loop.loop_exit529
  br label %y_in_tile.loop_header521, !llvm.loop !338

y_in_tile.loop_exit520:                           ; preds = %y_in_tile.loop_header521
  %current_output560 = getelementptr inbounds float, ptr %partial_reduction_result509, i32 0
  %partial_reduction_result562 = load float, ptr %current_output560, align 4
  %736 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result562, i32 16, i32 31)
  store float %736, ptr %result_from_other_lane561, align 4
  call void @region_7_54(ptr %current_output560, ptr %result_from_other_lane561, ptr %return_buffer563)
  %737 = load float, ptr %return_buffer563, align 4
  store float %737, ptr %current_output560, align 4
  %partial_reduction_result565 = load float, ptr %current_output560, align 4
  %738 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result565, i32 8, i32 31)
  store float %738, ptr %result_from_other_lane564, align 4
  call void @region_7_54(ptr %current_output560, ptr %result_from_other_lane564, ptr %return_buffer566)
  %739 = load float, ptr %return_buffer566, align 4
  store float %739, ptr %current_output560, align 4
  %partial_reduction_result568 = load float, ptr %current_output560, align 4
  %740 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result568, i32 4, i32 31)
  store float %740, ptr %result_from_other_lane567, align 4
  call void @region_7_54(ptr %current_output560, ptr %result_from_other_lane567, ptr %return_buffer569)
  %741 = load float, ptr %return_buffer569, align 4
  store float %741, ptr %current_output560, align 4
  %partial_reduction_result571 = load float, ptr %current_output560, align 4
  %742 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result571, i32 2, i32 31)
  store float %742, ptr %result_from_other_lane570, align 4
  call void @region_7_54(ptr %current_output560, ptr %result_from_other_lane570, ptr %return_buffer572)
  %743 = load float, ptr %return_buffer572, align 4
  store float %743, ptr %current_output560, align 4
  %partial_reduction_result574 = load float, ptr %current_output560, align 4
  %744 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result574, i32 1, i32 31)
  store float %744, ptr %result_from_other_lane573, align 4
  call void @region_7_54(ptr %current_output560, ptr %result_from_other_lane573, ptr %return_buffer575)
  %745 = load float, ptr %return_buffer575, align 4
  store float %745, ptr %current_output560, align 4
  %746 = udiv i32 %thread_id.x512, 32
  %747 = icmp eq i32 %lane_id514, 0
  br i1 %747, label %intra_warp_reduce_write-true576, label %intra_warp_reduce_write-after577

intra_warp_reduce_write-after577:                 ; preds = %intra_warp_reduce_write-true576, %y_in_tile.loop_exit520
  call void @llvm.nvvm.barrier0()
  %748 = icmp eq i32 %746, 0
  br i1 %748, label %inter_warp_reduce-true578, label %inter_warp_reduce-after579

inter_warp_reduce-after579:                       ; preds = %reduction_write_output-after597, %intra_warp_reduce_write-after577
  br label %reduce-group-6-after

early_return511:                                  ; preds = %reduce-group-6-true
  ret void

is_full_tile-true526:                             ; preds = %y_in_tile.loop_body522
  %749 = mul i32 %thread_id.x512, 2
  store i32 0, ptr %tile_loop.invar_address532, align 4
  br label %tile_loop.loop_header530

tile_loop.loop_header530:                         ; preds = %tile_loop.loop_body531, %is_full_tile-true526
  %tile_loop.indvar533 = load i32, ptr %tile_loop.invar_address532, align 4
  %750 = icmp uge i32 %tile_loop.indvar533, 8
  br i1 %750, label %tile_loop.loop_exit529, label %tile_loop.loop_body531

tile_loop.loop_body531:                           ; preds = %tile_loop.loop_header530
  %invar.inc534 = add nuw nsw i32 %tile_loop.indvar533, 1
  store i32 %invar.inc534, ptr %tile_loop.invar_address532, align 4
  %751 = icmp eq i32 %tile_loop.indvar533, 0
  %752 = mul i32 %tile_loop.indvar533, 1024
  %753 = add i32 %752, 0
  %x_loc535 = add i32 %753, %749
  %754 = add i32 %tile_origin.1518, %y_in_tile.indvar524
  %755 = add i32 %tile_origin.2519, %x_loc535
  %756 = mul nuw nsw i32 %755, 1
  %757 = add nuw nsw i32 0, %756
  %758 = mul nuw nsw i32 %754, 8192
  %759 = add nuw nsw i32 %757, %758
  %760 = mul nuw nsw i32 %tile_origin.0517, 8192
  %761 = add nuw nsw i32 %759, %760
  %762 = udiv i32 %761, 1
  %Arg_6.7 = getelementptr inbounds i32, ptr %arg6, i32 %761
  %Arg_6.7536 = load i32, ptr %Arg_6.7, align 4, !invariant.load !297
  %763 = sitofp i32 %Arg_6.7536 to float
  store float %763, ptr %reduction_input_address508, align 4
  %764 = getelementptr inbounds float, ptr %partial_reduction_result509, i32 0
  call void @region_7_54(ptr %764, ptr %reduction_input_address508, ptr %return_buffer537)
  %765 = load float, ptr %return_buffer537, align 4
  store float %765, ptr %764, align 4
  %766 = mul i32 %tile_loop.indvar533, 1024
  %767 = add i32 %766, 1
  %x_loc538 = add i32 %767, %749
  %768 = add i32 %tile_origin.1518, %y_in_tile.indvar524
  %769 = add i32 %tile_origin.2519, %x_loc538
  %770 = mul nuw nsw i32 %769, 1
  %771 = add nuw nsw i32 0, %770
  %772 = mul nuw nsw i32 %768, 8192
  %773 = add nuw nsw i32 %771, %772
  %774 = mul nuw nsw i32 %tile_origin.0517, 8192
  %775 = add nuw nsw i32 %773, %774
  %776 = udiv i32 %775, 1
  %Arg_6.7539 = getelementptr inbounds i32, ptr %arg6, i32 %775
  %Arg_6.7540 = load i32, ptr %Arg_6.7539, align 4, !invariant.load !297
  %777 = sitofp i32 %Arg_6.7540 to float
  store float %777, ptr %reduction_input_address508, align 4
  %778 = getelementptr inbounds float, ptr %partial_reduction_result509, i32 0
  call void @region_7_54(ptr %778, ptr %reduction_input_address508, ptr %return_buffer541)
  %779 = load float, ptr %return_buffer541, align 4
  store float %779, ptr %778, align 4
  br label %tile_loop.loop_header530, !llvm.loop !339

tile_loop.loop_exit529:                           ; preds = %tile_loop.loop_header530
  br label %is_full_tile-after528

is_full_tile-false527:                            ; preds = %y_in_tile.loop_body522
  %780 = mul i32 %thread_id.x512, 2
  store i32 0, ptr %tile_loop.invar_address545, align 4
  br label %tile_loop.loop_header543

tile_loop.loop_header543:                         ; preds = %x_in_tile-after556, %is_full_tile-false527
  %tile_loop.indvar546 = load i32, ptr %tile_loop.invar_address545, align 4
  %781 = icmp uge i32 %tile_loop.indvar546, 8
  br i1 %781, label %tile_loop.loop_exit542, label %tile_loop.loop_body544

tile_loop.loop_body544:                           ; preds = %tile_loop.loop_header543
  %invar.inc547 = add nuw nsw i32 %tile_loop.indvar546, 1
  store i32 %invar.inc547, ptr %tile_loop.invar_address545, align 4
  %782 = icmp eq i32 %tile_loop.indvar546, 0
  %783 = mul i32 %tile_loop.indvar546, 1024
  %784 = add i32 %783, 0
  %x_loc548 = add i32 %784, %780
  %785 = add i32 %tile_origin.1518, %y_in_tile.indvar524
  %786 = add i32 %tile_origin.2519, %x_loc548
  %787 = icmp ult i32 %x_loc548, %tile_bound516
  br i1 %787, label %x_in_tile-true549, label %x_in_tile-after550

x_in_tile-after550:                               ; preds = %x_in_tile-true549, %tile_loop.loop_body544
  %788 = mul i32 %tile_loop.indvar546, 1024
  %789 = add i32 %788, 1
  %x_loc554 = add i32 %789, %780
  %790 = add i32 %tile_origin.1518, %y_in_tile.indvar524
  %791 = add i32 %tile_origin.2519, %x_loc554
  %792 = icmp ult i32 %x_loc554, %tile_bound516
  br i1 %792, label %x_in_tile-true555, label %x_in_tile-after556

x_in_tile-after556:                               ; preds = %x_in_tile-true555, %x_in_tile-after550
  br label %tile_loop.loop_header543, !llvm.loop !340

tile_loop.loop_exit542:                           ; preds = %tile_loop.loop_header543
  br label %is_full_tile-after528

x_in_tile-true549:                                ; preds = %tile_loop.loop_body544
  %793 = mul nuw nsw i32 %786, 1
  %794 = add nuw nsw i32 0, %793
  %795 = mul nuw nsw i32 %785, 8192
  %796 = add nuw nsw i32 %794, %795
  %797 = mul nuw nsw i32 %tile_origin.0517, 8192
  %798 = add nuw nsw i32 %796, %797
  %799 = udiv i32 %798, 1
  %Arg_6.7551 = getelementptr inbounds i32, ptr %arg6, i32 %798
  %Arg_6.7552 = load i32, ptr %Arg_6.7551, align 4, !invariant.load !297
  %800 = sitofp i32 %Arg_6.7552 to float
  store float %800, ptr %reduction_input_address508, align 4
  %801 = getelementptr inbounds float, ptr %partial_reduction_result509, i32 0
  call void @region_7_54(ptr %801, ptr %reduction_input_address508, ptr %return_buffer553)
  %802 = load float, ptr %return_buffer553, align 4
  store float %802, ptr %801, align 4
  br label %x_in_tile-after550

x_in_tile-true555:                                ; preds = %x_in_tile-after550
  %803 = mul nuw nsw i32 %791, 1
  %804 = add nuw nsw i32 0, %803
  %805 = mul nuw nsw i32 %790, 8192
  %806 = add nuw nsw i32 %804, %805
  %807 = mul nuw nsw i32 %tile_origin.0517, 8192
  %808 = add nuw nsw i32 %806, %807
  %809 = udiv i32 %808, 1
  %Arg_6.7557 = getelementptr inbounds i32, ptr %arg6, i32 %808
  %Arg_6.7558 = load i32, ptr %Arg_6.7557, align 4, !invariant.load !297
  %810 = sitofp i32 %Arg_6.7558 to float
  store float %810, ptr %reduction_input_address508, align 4
  %811 = getelementptr inbounds float, ptr %partial_reduction_result509, i32 0
  call void @region_7_54(ptr %811, ptr %reduction_input_address508, ptr %return_buffer559)
  %812 = load float, ptr %return_buffer559, align 4
  store float %812, ptr %811, align 4
  br label %x_in_tile-after556

intra_warp_reduce_write-true576:                  ; preds = %y_in_tile.loop_exit520
  %813 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache13, i32 0, i32 %721, i32 0, i32 %746
  %814 = addrspacecast ptr addrspace(3) %813 to ptr
  %815 = load float, ptr %current_output560, align 4
  store float %815, ptr %814, align 4
  br label %intra_warp_reduce_write-after577

inter_warp_reduce-true578:                        ; preds = %intra_warp_reduce_write-after577
  %816 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache13, i32 0, i32 %721, i32 0, i32 %lane_id514
  %817 = addrspacecast ptr addrspace(3) %816 to ptr
  store float %region_0_67_constant_11510, ptr %initial_value_addr580, align 4
  %818 = icmp ult i32 %thread_id.x512, 16
  %819 = select i1 %818, ptr %817, ptr %initial_value_addr580
  %partial_reduction_result582 = load float, ptr %819, align 4
  %820 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result582, i32 16, i32 31)
  store float %820, ptr %result_from_other_lane581, align 4
  call void @region_7_54(ptr %819, ptr %result_from_other_lane581, ptr %return_buffer583)
  %821 = load float, ptr %return_buffer583, align 4
  store float %821, ptr %819, align 4
  %partial_reduction_result585 = load float, ptr %819, align 4
  %822 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result585, i32 8, i32 31)
  store float %822, ptr %result_from_other_lane584, align 4
  call void @region_7_54(ptr %819, ptr %result_from_other_lane584, ptr %return_buffer586)
  %823 = load float, ptr %return_buffer586, align 4
  store float %823, ptr %819, align 4
  %partial_reduction_result588 = load float, ptr %819, align 4
  %824 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result588, i32 4, i32 31)
  store float %824, ptr %result_from_other_lane587, align 4
  call void @region_7_54(ptr %819, ptr %result_from_other_lane587, ptr %return_buffer589)
  %825 = load float, ptr %return_buffer589, align 4
  store float %825, ptr %819, align 4
  %partial_reduction_result591 = load float, ptr %819, align 4
  %826 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result591, i32 2, i32 31)
  store float %826, ptr %result_from_other_lane590, align 4
  call void @region_7_54(ptr %819, ptr %result_from_other_lane590, ptr %return_buffer592)
  %827 = load float, ptr %return_buffer592, align 4
  store float %827, ptr %819, align 4
  %partial_reduction_result594 = load float, ptr %819, align 4
  %828 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result594, i32 1, i32 31)
  store float %828, ptr %result_from_other_lane593, align 4
  call void @region_7_54(ptr %819, ptr %result_from_other_lane593, ptr %return_buffer595)
  %829 = load float, ptr %return_buffer595, align 4
  store float %829, ptr %819, align 4
  %830 = icmp eq i32 %thread_id.x512, 0
  br i1 %830, label %reduction_write_output-true596, label %reduction_write_output-after597

reduction_write_output-after597:                  ; preds = %reduction_write_output-true596, %inter_warp_reduce-true578
  br label %inter_warp_reduce-after579

reduction_write_output-true596:                   ; preds = %inter_warp_reduce-true578
  %831 = mul i32 %thread_id.x512, 2
  %832 = add i32 %tile_origin.1518, %thread_id.y513
  %833 = add i32 %tile_origin.2519, %831
  %834 = add i32 %833, 0
  %output598 = load float, ptr %819, align 4
  store float %output598, ptr %arg14, align 4
  br label %reduction_write_output-after597

reduce-group-7-true:                              ; preds = %reduce-group-6-after
  %region_0_67_constant_11601 = load float, ptr @1, align 4
  %835 = getelementptr inbounds float, ptr %partial_reduction_result600, i32 0
  store float %region_0_67_constant_11601, ptr %835, align 4
  %836 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !293
  %837 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %838 = urem i32 %836, 512
  %839 = udiv i32 %836, 512
  %840 = mul i32 %837, 1
  %841 = add i32 %840, %839
  %842 = icmp ult i32 %841, 1
  br i1 %842, label %843, label %early_return602

843:                                              ; preds = %reduce-group-7-true
  %thread_id.x603 = urem i32 %838, 512
  %thread_id.y604 = udiv i32 %838, 512
  %lane_id605 = urem i32 %838, 32
  %844 = udiv i32 %841, 1
  %845 = urem i32 %844, 1
  %846 = udiv i32 %841, 1
  %847 = urem i32 %846, 1
  %848 = udiv i32 %841, 1
  %849 = icmp eq i32 %847, 0
  %tile_bound606 = select i1 %849, i32 1, i32 1
  %850 = icmp eq i32 %845, 0
  %tile_bound607 = select i1 %850, i32 8192, i32 8192
  %tile_origin.0608 = mul i32 %848, 1
  %tile_origin.1609 = mul i32 %847, 1
  %tile_origin.2610 = mul i32 %845, 8192
  store i32 %thread_id.y604, ptr %y_in_tile.invar_address614, align 4
  br label %y_in_tile.loop_header612

y_in_tile.loop_header612:                         ; preds = %is_full_tile-after619, %843
  %y_in_tile.indvar615 = load i32, ptr %y_in_tile.invar_address614, align 4
  %851 = icmp uge i32 %y_in_tile.indvar615, %tile_bound606
  br i1 %851, label %y_in_tile.loop_exit611, label %y_in_tile.loop_body613

y_in_tile.loop_body613:                           ; preds = %y_in_tile.loop_header612
  %invar.inc616 = add nuw nsw i32 %y_in_tile.indvar615, 1
  store i32 %invar.inc616, ptr %y_in_tile.invar_address614, align 4
  %852 = icmp eq i32 %y_in_tile.indvar615, %thread_id.y604
  %853 = icmp eq i32 8192, %tile_bound607
  br i1 %853, label %is_full_tile-true617, label %is_full_tile-false618

is_full_tile-after619:                            ; preds = %tile_loop.loop_exit633, %tile_loop.loop_exit620
  br label %y_in_tile.loop_header612, !llvm.loop !341

y_in_tile.loop_exit611:                           ; preds = %y_in_tile.loop_header612
  %current_output651 = getelementptr inbounds float, ptr %partial_reduction_result600, i32 0
  %partial_reduction_result653 = load float, ptr %current_output651, align 4
  %854 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result653, i32 16, i32 31)
  store float %854, ptr %result_from_other_lane652, align 4
  call void @region_8_61(ptr %current_output651, ptr %result_from_other_lane652, ptr %return_buffer654)
  %855 = load float, ptr %return_buffer654, align 4
  store float %855, ptr %current_output651, align 4
  %partial_reduction_result656 = load float, ptr %current_output651, align 4
  %856 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result656, i32 8, i32 31)
  store float %856, ptr %result_from_other_lane655, align 4
  call void @region_8_61(ptr %current_output651, ptr %result_from_other_lane655, ptr %return_buffer657)
  %857 = load float, ptr %return_buffer657, align 4
  store float %857, ptr %current_output651, align 4
  %partial_reduction_result659 = load float, ptr %current_output651, align 4
  %858 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result659, i32 4, i32 31)
  store float %858, ptr %result_from_other_lane658, align 4
  call void @region_8_61(ptr %current_output651, ptr %result_from_other_lane658, ptr %return_buffer660)
  %859 = load float, ptr %return_buffer660, align 4
  store float %859, ptr %current_output651, align 4
  %partial_reduction_result662 = load float, ptr %current_output651, align 4
  %860 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result662, i32 2, i32 31)
  store float %860, ptr %result_from_other_lane661, align 4
  call void @region_8_61(ptr %current_output651, ptr %result_from_other_lane661, ptr %return_buffer663)
  %861 = load float, ptr %return_buffer663, align 4
  store float %861, ptr %current_output651, align 4
  %partial_reduction_result665 = load float, ptr %current_output651, align 4
  %862 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result665, i32 1, i32 31)
  store float %862, ptr %result_from_other_lane664, align 4
  call void @region_8_61(ptr %current_output651, ptr %result_from_other_lane664, ptr %return_buffer666)
  %863 = load float, ptr %return_buffer666, align 4
  store float %863, ptr %current_output651, align 4
  %864 = udiv i32 %thread_id.x603, 32
  %865 = icmp eq i32 %lane_id605, 0
  br i1 %865, label %intra_warp_reduce_write-true667, label %intra_warp_reduce_write-after668

intra_warp_reduce_write-after668:                 ; preds = %intra_warp_reduce_write-true667, %y_in_tile.loop_exit611
  call void @llvm.nvvm.barrier0()
  %866 = icmp eq i32 %864, 0
  br i1 %866, label %inter_warp_reduce-true669, label %inter_warp_reduce-after670

inter_warp_reduce-after670:                       ; preds = %reduction_write_output-after688, %intra_warp_reduce_write-after668
  br label %reduce-group-7-after

early_return602:                                  ; preds = %reduce-group-7-true
  ret void

is_full_tile-true617:                             ; preds = %y_in_tile.loop_body613
  %867 = mul i32 %thread_id.x603, 2
  store i32 0, ptr %tile_loop.invar_address623, align 4
  br label %tile_loop.loop_header621

tile_loop.loop_header621:                         ; preds = %tile_loop.loop_body622, %is_full_tile-true617
  %tile_loop.indvar624 = load i32, ptr %tile_loop.invar_address623, align 4
  %868 = icmp uge i32 %tile_loop.indvar624, 8
  br i1 %868, label %tile_loop.loop_exit620, label %tile_loop.loop_body622

tile_loop.loop_body622:                           ; preds = %tile_loop.loop_header621
  %invar.inc625 = add nuw nsw i32 %tile_loop.indvar624, 1
  store i32 %invar.inc625, ptr %tile_loop.invar_address623, align 4
  %869 = icmp eq i32 %tile_loop.indvar624, 0
  %870 = mul i32 %tile_loop.indvar624, 1024
  %871 = add i32 %870, 0
  %x_loc626 = add i32 %871, %867
  %872 = add i32 %tile_origin.1609, %y_in_tile.indvar615
  %873 = add i32 %tile_origin.2610, %x_loc626
  %874 = mul nuw nsw i32 %873, 1
  %875 = add nuw nsw i32 0, %874
  %876 = mul nuw nsw i32 %872, 8192
  %877 = add nuw nsw i32 %875, %876
  %878 = mul nuw nsw i32 %tile_origin.0608, 8192
  %879 = add nuw nsw i32 %877, %878
  %880 = udiv i32 %879, 1
  %Arg_7.8 = getelementptr inbounds i32, ptr %arg7, i32 %879
  %Arg_7.8627 = load i32, ptr %Arg_7.8, align 4, !invariant.load !297
  %881 = sitofp i32 %Arg_7.8627 to float
  store float %881, ptr %reduction_input_address599, align 4
  %882 = getelementptr inbounds float, ptr %partial_reduction_result600, i32 0
  call void @region_8_61(ptr %882, ptr %reduction_input_address599, ptr %return_buffer628)
  %883 = load float, ptr %return_buffer628, align 4
  store float %883, ptr %882, align 4
  %884 = mul i32 %tile_loop.indvar624, 1024
  %885 = add i32 %884, 1
  %x_loc629 = add i32 %885, %867
  %886 = add i32 %tile_origin.1609, %y_in_tile.indvar615
  %887 = add i32 %tile_origin.2610, %x_loc629
  %888 = mul nuw nsw i32 %887, 1
  %889 = add nuw nsw i32 0, %888
  %890 = mul nuw nsw i32 %886, 8192
  %891 = add nuw nsw i32 %889, %890
  %892 = mul nuw nsw i32 %tile_origin.0608, 8192
  %893 = add nuw nsw i32 %891, %892
  %894 = udiv i32 %893, 1
  %Arg_7.8630 = getelementptr inbounds i32, ptr %arg7, i32 %893
  %Arg_7.8631 = load i32, ptr %Arg_7.8630, align 4, !invariant.load !297
  %895 = sitofp i32 %Arg_7.8631 to float
  store float %895, ptr %reduction_input_address599, align 4
  %896 = getelementptr inbounds float, ptr %partial_reduction_result600, i32 0
  call void @region_8_61(ptr %896, ptr %reduction_input_address599, ptr %return_buffer632)
  %897 = load float, ptr %return_buffer632, align 4
  store float %897, ptr %896, align 4
  br label %tile_loop.loop_header621, !llvm.loop !342

tile_loop.loop_exit620:                           ; preds = %tile_loop.loop_header621
  br label %is_full_tile-after619

is_full_tile-false618:                            ; preds = %y_in_tile.loop_body613
  %898 = mul i32 %thread_id.x603, 2
  store i32 0, ptr %tile_loop.invar_address636, align 4
  br label %tile_loop.loop_header634

tile_loop.loop_header634:                         ; preds = %x_in_tile-after647, %is_full_tile-false618
  %tile_loop.indvar637 = load i32, ptr %tile_loop.invar_address636, align 4
  %899 = icmp uge i32 %tile_loop.indvar637, 8
  br i1 %899, label %tile_loop.loop_exit633, label %tile_loop.loop_body635

tile_loop.loop_body635:                           ; preds = %tile_loop.loop_header634
  %invar.inc638 = add nuw nsw i32 %tile_loop.indvar637, 1
  store i32 %invar.inc638, ptr %tile_loop.invar_address636, align 4
  %900 = icmp eq i32 %tile_loop.indvar637, 0
  %901 = mul i32 %tile_loop.indvar637, 1024
  %902 = add i32 %901, 0
  %x_loc639 = add i32 %902, %898
  %903 = add i32 %tile_origin.1609, %y_in_tile.indvar615
  %904 = add i32 %tile_origin.2610, %x_loc639
  %905 = icmp ult i32 %x_loc639, %tile_bound607
  br i1 %905, label %x_in_tile-true640, label %x_in_tile-after641

x_in_tile-after641:                               ; preds = %x_in_tile-true640, %tile_loop.loop_body635
  %906 = mul i32 %tile_loop.indvar637, 1024
  %907 = add i32 %906, 1
  %x_loc645 = add i32 %907, %898
  %908 = add i32 %tile_origin.1609, %y_in_tile.indvar615
  %909 = add i32 %tile_origin.2610, %x_loc645
  %910 = icmp ult i32 %x_loc645, %tile_bound607
  br i1 %910, label %x_in_tile-true646, label %x_in_tile-after647

x_in_tile-after647:                               ; preds = %x_in_tile-true646, %x_in_tile-after641
  br label %tile_loop.loop_header634, !llvm.loop !343

tile_loop.loop_exit633:                           ; preds = %tile_loop.loop_header634
  br label %is_full_tile-after619

x_in_tile-true640:                                ; preds = %tile_loop.loop_body635
  %911 = mul nuw nsw i32 %904, 1
  %912 = add nuw nsw i32 0, %911
  %913 = mul nuw nsw i32 %903, 8192
  %914 = add nuw nsw i32 %912, %913
  %915 = mul nuw nsw i32 %tile_origin.0608, 8192
  %916 = add nuw nsw i32 %914, %915
  %917 = udiv i32 %916, 1
  %Arg_7.8642 = getelementptr inbounds i32, ptr %arg7, i32 %916
  %Arg_7.8643 = load i32, ptr %Arg_7.8642, align 4, !invariant.load !297
  %918 = sitofp i32 %Arg_7.8643 to float
  store float %918, ptr %reduction_input_address599, align 4
  %919 = getelementptr inbounds float, ptr %partial_reduction_result600, i32 0
  call void @region_8_61(ptr %919, ptr %reduction_input_address599, ptr %return_buffer644)
  %920 = load float, ptr %return_buffer644, align 4
  store float %920, ptr %919, align 4
  br label %x_in_tile-after641

x_in_tile-true646:                                ; preds = %x_in_tile-after641
  %921 = mul nuw nsw i32 %909, 1
  %922 = add nuw nsw i32 0, %921
  %923 = mul nuw nsw i32 %908, 8192
  %924 = add nuw nsw i32 %922, %923
  %925 = mul nuw nsw i32 %tile_origin.0608, 8192
  %926 = add nuw nsw i32 %924, %925
  %927 = udiv i32 %926, 1
  %Arg_7.8648 = getelementptr inbounds i32, ptr %arg7, i32 %926
  %Arg_7.8649 = load i32, ptr %Arg_7.8648, align 4, !invariant.load !297
  %928 = sitofp i32 %Arg_7.8649 to float
  store float %928, ptr %reduction_input_address599, align 4
  %929 = getelementptr inbounds float, ptr %partial_reduction_result600, i32 0
  call void @region_8_61(ptr %929, ptr %reduction_input_address599, ptr %return_buffer650)
  %930 = load float, ptr %return_buffer650, align 4
  store float %930, ptr %929, align 4
  br label %x_in_tile-after647

intra_warp_reduce_write-true667:                  ; preds = %y_in_tile.loop_exit611
  %931 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache14, i32 0, i32 %839, i32 0, i32 %864
  %932 = addrspacecast ptr addrspace(3) %931 to ptr
  %933 = load float, ptr %current_output651, align 4
  store float %933, ptr %932, align 4
  br label %intra_warp_reduce_write-after668

inter_warp_reduce-true669:                        ; preds = %intra_warp_reduce_write-after668
  %934 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache14, i32 0, i32 %839, i32 0, i32 %lane_id605
  %935 = addrspacecast ptr addrspace(3) %934 to ptr
  store float %region_0_67_constant_11601, ptr %initial_value_addr671, align 4
  %936 = icmp ult i32 %thread_id.x603, 16
  %937 = select i1 %936, ptr %935, ptr %initial_value_addr671
  %partial_reduction_result673 = load float, ptr %937, align 4
  %938 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result673, i32 16, i32 31)
  store float %938, ptr %result_from_other_lane672, align 4
  call void @region_8_61(ptr %937, ptr %result_from_other_lane672, ptr %return_buffer674)
  %939 = load float, ptr %return_buffer674, align 4
  store float %939, ptr %937, align 4
  %partial_reduction_result676 = load float, ptr %937, align 4
  %940 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result676, i32 8, i32 31)
  store float %940, ptr %result_from_other_lane675, align 4
  call void @region_8_61(ptr %937, ptr %result_from_other_lane675, ptr %return_buffer677)
  %941 = load float, ptr %return_buffer677, align 4
  store float %941, ptr %937, align 4
  %partial_reduction_result679 = load float, ptr %937, align 4
  %942 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result679, i32 4, i32 31)
  store float %942, ptr %result_from_other_lane678, align 4
  call void @region_8_61(ptr %937, ptr %result_from_other_lane678, ptr %return_buffer680)
  %943 = load float, ptr %return_buffer680, align 4
  store float %943, ptr %937, align 4
  %partial_reduction_result682 = load float, ptr %937, align 4
  %944 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result682, i32 2, i32 31)
  store float %944, ptr %result_from_other_lane681, align 4
  call void @region_8_61(ptr %937, ptr %result_from_other_lane681, ptr %return_buffer683)
  %945 = load float, ptr %return_buffer683, align 4
  store float %945, ptr %937, align 4
  %partial_reduction_result685 = load float, ptr %937, align 4
  %946 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result685, i32 1, i32 31)
  store float %946, ptr %result_from_other_lane684, align 4
  call void @region_8_61(ptr %937, ptr %result_from_other_lane684, ptr %return_buffer686)
  %947 = load float, ptr %return_buffer686, align 4
  store float %947, ptr %937, align 4
  %948 = icmp eq i32 %thread_id.x603, 0
  br i1 %948, label %reduction_write_output-true687, label %reduction_write_output-after688

reduction_write_output-after688:                  ; preds = %reduction_write_output-true687, %inter_warp_reduce-true669
  br label %inter_warp_reduce-after670

reduction_write_output-true687:                   ; preds = %inter_warp_reduce-true669
  %949 = mul i32 %thread_id.x603, 2
  %950 = add i32 %tile_origin.1609, %thread_id.y604
  %951 = add i32 %tile_origin.2610, %949
  %952 = add i32 %951, 0
  %output689 = load float, ptr %937, align 4
  store float %output689, ptr %arg15, align 4
  br label %reduction_write_output-after688
}

define internal void @region_1_12(ptr dereferenceable(4) %Arg_0.13.typed, ptr dereferenceable(4) %Arg_1.14.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %maximum.15.typed = alloca float, align 4
  %Arg_0.13 = load float, ptr %Arg_0.13.typed, align 4
  %Arg_1.14 = load float, ptr %Arg_1.14.typed, align 4
  %0 = fcmp oge float %Arg_0.13, %Arg_1.14
  %1 = fcmp une float %Arg_0.13, %Arg_0.13
  %2 = or i1 %0, %1
  %maximum.15 = select i1 %2, float %Arg_0.13, float %Arg_1.14
  store float %maximum.15, ptr %maximum.15.typed, align 4
  %load_ret_value = load float, ptr %maximum.15.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_19(ptr dereferenceable(4) %Arg_0.20.typed, ptr dereferenceable(4) %Arg_1.21.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %maximum.22.typed = alloca float, align 4
  %Arg_0.20 = load float, ptr %Arg_0.20.typed, align 4
  %Arg_1.21 = load float, ptr %Arg_1.21.typed, align 4
  %0 = fcmp oge float %Arg_0.20, %Arg_1.21
  %1 = fcmp une float %Arg_0.20, %Arg_0.20
  %2 = or i1 %0, %1
  %maximum.22 = select i1 %2, float %Arg_0.20, float %Arg_1.21
  store float %maximum.22, ptr %maximum.22.typed, align 4
  %load_ret_value = load float, ptr %maximum.22.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_3_26(ptr dereferenceable(4) %Arg_0.27.typed, ptr dereferenceable(4) %Arg_1.28.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %maximum.29.typed = alloca float, align 4
  %Arg_0.27 = load float, ptr %Arg_0.27.typed, align 4
  %Arg_1.28 = load float, ptr %Arg_1.28.typed, align 4
  %0 = fcmp oge float %Arg_0.27, %Arg_1.28
  %1 = fcmp une float %Arg_0.27, %Arg_0.27
  %2 = or i1 %0, %1
  %maximum.29 = select i1 %2, float %Arg_0.27, float %Arg_1.28
  store float %maximum.29, ptr %maximum.29.typed, align 4
  %load_ret_value = load float, ptr %maximum.29.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_4_33(ptr dereferenceable(4) %Arg_0.34.typed, ptr dereferenceable(4) %Arg_1.35.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %maximum.36.typed = alloca float, align 4
  %Arg_0.34 = load float, ptr %Arg_0.34.typed, align 4
  %Arg_1.35 = load float, ptr %Arg_1.35.typed, align 4
  %0 = fcmp oge float %Arg_0.34, %Arg_1.35
  %1 = fcmp une float %Arg_0.34, %Arg_0.34
  %2 = or i1 %0, %1
  %maximum.36 = select i1 %2, float %Arg_0.34, float %Arg_1.35
  store float %maximum.36, ptr %maximum.36.typed, align 4
  %load_ret_value = load float, ptr %maximum.36.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_5_40(ptr dereferenceable(4) %Arg_0.41.typed, ptr dereferenceable(4) %Arg_1.42.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %maximum.43.typed = alloca float, align 4
  %Arg_0.41 = load float, ptr %Arg_0.41.typed, align 4
  %Arg_1.42 = load float, ptr %Arg_1.42.typed, align 4
  %0 = fcmp oge float %Arg_0.41, %Arg_1.42
  %1 = fcmp une float %Arg_0.41, %Arg_0.41
  %2 = or i1 %0, %1
  %maximum.43 = select i1 %2, float %Arg_0.41, float %Arg_1.42
  store float %maximum.43, ptr %maximum.43.typed, align 4
  %load_ret_value = load float, ptr %maximum.43.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_6_47(ptr dereferenceable(4) %Arg_0.48.typed, ptr dereferenceable(4) %Arg_1.49.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %maximum.50.typed = alloca float, align 4
  %Arg_0.48 = load float, ptr %Arg_0.48.typed, align 4
  %Arg_1.49 = load float, ptr %Arg_1.49.typed, align 4
  %0 = fcmp oge float %Arg_0.48, %Arg_1.49
  %1 = fcmp une float %Arg_0.48, %Arg_0.48
  %2 = or i1 %0, %1
  %maximum.50 = select i1 %2, float %Arg_0.48, float %Arg_1.49
  store float %maximum.50, ptr %maximum.50.typed, align 4
  %load_ret_value = load float, ptr %maximum.50.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_7_54(ptr dereferenceable(4) %Arg_0.55.typed, ptr dereferenceable(4) %Arg_1.56.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %maximum.57.typed = alloca float, align 4
  %Arg_0.55 = load float, ptr %Arg_0.55.typed, align 4
  %Arg_1.56 = load float, ptr %Arg_1.56.typed, align 4
  %0 = fcmp oge float %Arg_0.55, %Arg_1.56
  %1 = fcmp une float %Arg_0.55, %Arg_0.55
  %2 = or i1 %0, %1
  %maximum.57 = select i1 %2, float %Arg_0.55, float %Arg_1.56
  store float %maximum.57, ptr %maximum.57.typed, align 4
  %load_ret_value = load float, ptr %maximum.57.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_8_61(ptr dereferenceable(4) %Arg_0.62.typed, ptr dereferenceable(4) %Arg_1.63.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %maximum.64.typed = alloca float, align 4
  %Arg_0.62 = load float, ptr %Arg_0.62.typed, align 4
  %Arg_1.63 = load float, ptr %Arg_1.63.typed, align 4
  %0 = fcmp oge float %Arg_0.62, %Arg_1.63
  %1 = fcmp une float %Arg_0.62, %Arg_0.62
  %2 = or i1 %0, %1
  %maximum.64 = select i1 %2, float %Arg_0.62, float %Arg_1.63
  store float %maximum.64, ptr %maximum.64.typed, align 4
  %load_ret_value = load float, ptr %maximum.64.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @concatenate_103(ptr noalias align 16 dereferenceable(4096) %arg0, ptr noalias align 16 dereferenceable(4096) %arg1, ptr noalias align 128 dereferenceable(8192) %arg2) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !344
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 2048
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 128
  %5 = udiv i32 %linear_index, 128
  %6 = icmp ult i32 %linear_index, 2048
  br i1 %6, label %concatenate_103.in_bounds-true, label %concatenate_103.in_bounds-after

concatenate_103.in_bounds-after:                  ; preds = %concatenate.3.merge, %entry
  ret void

concatenate_103.in_bounds-true:                   ; preds = %entry
  br label %concatenate.pivot.8.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %7 = phi i32 [ 0, %concatenate.pivot.0. ]
  %8 = sub nsw i32 %5, %7
  %9 = getelementptr inbounds [8 x [128 x float]], ptr %arg0, i32 0, i32 %8, i32 %4
  %10 = load float, ptr %9, align 4, !invariant.load !297
  br label %concatenate.3.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.8.1
  %11 = phi i32 [ 8, %concatenate.pivot.8.1 ]
  %12 = sub nsw i32 %5, %11
  %13 = getelementptr inbounds [8 x [128 x float]], ptr %arg1, i32 0, i32 %12, i32 %4
  %14 = load float, ptr %13, align 4, !invariant.load !297
  br label %concatenate.3.merge

concatenate.pivot.8.:                             ; preds = %concatenate_103.in_bounds-true
  %15 = icmp ult i32 %5, 8
  br i1 %15, label %concatenate.pivot.0., label %concatenate.pivot.8.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.8.
  br label %concat_index_from_operand_id0

concatenate.pivot.8.1:                            ; preds = %concatenate.pivot.8.
  br label %concat_index_from_operand_id1

concatenate.3.merge:                              ; preds = %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %16 = phi float [ %10, %concat_index_from_operand_id0 ], [ %14, %concat_index_from_operand_id1 ]
  %17 = getelementptr inbounds float, ptr %arg2, i32 %linear_index
  store float %16, ptr %17, align 4
  br label %concatenate_103.in_bounds-after
}

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.assume(i1 noundef) #3

define void @concatenate_105(ptr noalias align 16 dereferenceable(8192) %arg0, ptr noalias align 16 dereferenceable(4096) %arg1, ptr noalias align 128 dereferenceable(12288) %arg2) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !346
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 3072
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 128
  %5 = udiv i32 %linear_index, 128
  %6 = icmp ult i32 %linear_index, 3072
  br i1 %6, label %concatenate_105.in_bounds-true, label %concatenate_105.in_bounds-after

concatenate_105.in_bounds-after:                  ; preds = %concatenate.3.merge, %entry
  ret void

concatenate_105.in_bounds-true:                   ; preds = %entry
  br label %concatenate.pivot.16.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %7 = phi i32 [ 0, %concatenate.pivot.0. ]
  %8 = sub nsw i32 %5, %7
  %9 = getelementptr inbounds [16 x [128 x float]], ptr %arg0, i32 0, i32 %8, i32 %4
  %10 = load float, ptr %9, align 4, !invariant.load !297
  br label %concatenate.3.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.16.1
  %11 = phi i32 [ 16, %concatenate.pivot.16.1 ]
  %12 = sub nsw i32 %5, %11
  %13 = getelementptr inbounds [8 x [128 x float]], ptr %arg1, i32 0, i32 %12, i32 %4
  %14 = load float, ptr %13, align 4, !invariant.load !297
  br label %concatenate.3.merge

concatenate.pivot.16.:                            ; preds = %concatenate_105.in_bounds-true
  %15 = icmp ult i32 %5, 16
  br i1 %15, label %concatenate.pivot.0., label %concatenate.pivot.16.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.16.
  br label %concat_index_from_operand_id0

concatenate.pivot.16.1:                           ; preds = %concatenate.pivot.16.
  br label %concat_index_from_operand_id1

concatenate.3.merge:                              ; preds = %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %16 = phi float [ %10, %concat_index_from_operand_id0 ], [ %14, %concat_index_from_operand_id1 ]
  %17 = getelementptr inbounds float, ptr %arg2, i32 %linear_index
  store float %16, ptr %17, align 4
  br label %concatenate_105.in_bounds-after
}

define void @fusion_395(ptr noalias align 16 dereferenceable(32768) %arg0, ptr noalias align 128 dereferenceable(4) %arg1, ptr noalias align 128 dereferenceable(32768) %arg2) {
entry:
  %return_buffer70 = alloca float, align 4
  %result_from_other_lane68 = alloca float, align 4
  %return_buffer67 = alloca float, align 4
  %result_from_other_lane65 = alloca float, align 4
  %return_buffer64 = alloca float, align 4
  %result_from_other_lane62 = alloca float, align 4
  %return_buffer61 = alloca float, align 4
  %result_from_other_lane59 = alloca float, align 4
  %return_buffer58 = alloca float, align 4
  %result_from_other_lane56 = alloca float, align 4
  %initial_value_addr = alloca float, align 4
  %return_buffer55 = alloca float, align 4
  %result_from_other_lane53 = alloca float, align 4
  %return_buffer52 = alloca float, align 4
  %result_from_other_lane50 = alloca float, align 4
  %return_buffer49 = alloca float, align 4
  %result_from_other_lane47 = alloca float, align 4
  %return_buffer46 = alloca float, align 4
  %result_from_other_lane44 = alloca float, align 4
  %return_buffer43 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer41 = alloca float, align 4
  %return_buffer29 = alloca float, align 4
  %tile_loop.invar_address17 = alloca i32, align 4
  %return_buffer13 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %inter_warp_reduce-after, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_29_constant_22 = load float, ptr @7, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_29_constant_22, ptr %2, align 4
  %3 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !293
  %4 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %5 = urem i32 %3, 512
  %6 = udiv i32 %3, 512
  %7 = mul i32 %4, 1
  %8 = add i32 %7, %6
  %9 = icmp ult i32 %8, 1
  br i1 %9, label %10, label %early_return

10:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %5, 512
  %thread_id.y = udiv i32 %5, 512
  %lane_id = urem i32 %5, 32
  %11 = udiv i32 %8, 1
  %12 = urem i32 %11, 1
  %13 = udiv i32 %8, 1
  %14 = urem i32 %13, 1
  %15 = udiv i32 %8, 1
  %16 = icmp eq i32 %14, 0
  %tile_bound = select i1 %16, i32 1, i32 1
  %17 = icmp eq i32 %12, 0
  %tile_bound1 = select i1 %17, i32 8192, i32 8192
  %tile_origin.0 = mul i32 %15, 1
  %tile_origin.1 = mul i32 %14, 1
  %tile_origin.2 = mul i32 %12, 8192
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %is_full_tile-after, %10
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %18 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %18, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 1
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %19 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %20 = icmp eq i32 8192, %tile_bound1
  br i1 %20, label %is_full_tile-true, label %is_full_tile-false

is_full_tile-after:                               ; preds = %tile_loop.loop_exit14, %tile_loop.loop_exit
  br label %y_in_tile.loop_header, !llvm.loop !347

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %partial_reduction_result42 = load float, ptr %current_output, align 4
  %21 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result42, i32 16, i32 31)
  store float %21, ptr %result_from_other_lane, align 4
  call void @region_1_23(ptr %current_output, ptr %result_from_other_lane, ptr %return_buffer43)
  %22 = load float, ptr %return_buffer43, align 4
  store float %22, ptr %current_output, align 4
  %partial_reduction_result45 = load float, ptr %current_output, align 4
  %23 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result45, i32 8, i32 31)
  store float %23, ptr %result_from_other_lane44, align 4
  call void @region_1_23(ptr %current_output, ptr %result_from_other_lane44, ptr %return_buffer46)
  %24 = load float, ptr %return_buffer46, align 4
  store float %24, ptr %current_output, align 4
  %partial_reduction_result48 = load float, ptr %current_output, align 4
  %25 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result48, i32 4, i32 31)
  store float %25, ptr %result_from_other_lane47, align 4
  call void @region_1_23(ptr %current_output, ptr %result_from_other_lane47, ptr %return_buffer49)
  %26 = load float, ptr %return_buffer49, align 4
  store float %26, ptr %current_output, align 4
  %partial_reduction_result51 = load float, ptr %current_output, align 4
  %27 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result51, i32 2, i32 31)
  store float %27, ptr %result_from_other_lane50, align 4
  call void @region_1_23(ptr %current_output, ptr %result_from_other_lane50, ptr %return_buffer52)
  %28 = load float, ptr %return_buffer52, align 4
  store float %28, ptr %current_output, align 4
  %partial_reduction_result54 = load float, ptr %current_output, align 4
  %29 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result54, i32 1, i32 31)
  store float %29, ptr %result_from_other_lane53, align 4
  call void @region_1_23(ptr %current_output, ptr %result_from_other_lane53, ptr %return_buffer55)
  %30 = load float, ptr %return_buffer55, align 4
  store float %30, ptr %current_output, align 4
  %31 = udiv i32 %thread_id.x, 32
  %32 = icmp eq i32 %lane_id, 0
  br i1 %32, label %intra_warp_reduce_write-true, label %intra_warp_reduce_write-after

intra_warp_reduce_write-after:                    ; preds = %intra_warp_reduce_write-true, %y_in_tile.loop_exit
  call void @llvm.nvvm.barrier0()
  %33 = icmp eq i32 %31, 0
  br i1 %33, label %inter_warp_reduce-true, label %inter_warp_reduce-after

inter_warp_reduce-after:                          ; preds = %reduction_write_output-after, %intra_warp_reduce_write-after
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

is_full_tile-true:                                ; preds = %y_in_tile.loop_body
  %34 = mul i32 %thread_id.x, 2
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %tile_loop.loop_body, %is_full_tile-true
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %35 = icmp uge i32 %tile_loop.indvar, 8
  br i1 %35, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %36 = icmp eq i32 %tile_loop.indvar, 0
  %37 = mul i32 %tile_loop.indvar, 1024
  %38 = add i32 %37, 0
  %x_loc = add i32 %38, %34
  %39 = add i32 %tile_origin.1, %y_in_tile.indvar
  %40 = add i32 %tile_origin.2, %x_loc
  %41 = mul nuw nsw i32 %40, 1
  %42 = add nuw nsw i32 0, %41
  %43 = mul nuw nsw i32 %39, 8192
  %44 = add nuw nsw i32 %42, %43
  %45 = mul nuw nsw i32 %tile_origin.0, 8192
  %46 = add nuw nsw i32 %44, %45
  %47 = udiv i32 %46, 1
  %Arg_0.1 = getelementptr inbounds i32, ptr %arg0, i32 %46
  %Arg_0.13 = load i32, ptr %Arg_0.1, align 4, !invariant.load !297
  %48 = sitofp i32 %Arg_0.13 to float
  %49 = fptosi float %48 to i32
  %50 = fcmp ole float %48, 0xC1E0000000000000
  %51 = select i1 %50, i32 -2147483648, i32 %49
  %52 = fcmp oge float %48, 0x41E0000000000000
  %53 = select i1 %52, i32 2147483647, i32 %51
  %54 = fcmp uno float %48, %48
  %55 = select i1 %54, i32 0, i32 %53
  %region_0_29_constant_4 = load i32, ptr @6, align 4
  %56 = and i32 %55, %region_0_29_constant_4
  %region_0_29_constant_7 = load i32, ptr @4, align 4
  %57 = icmp eq i32 %56, %region_0_29_constant_7
  %58 = zext i1 %57 to i8
  %region_0_29_constant_10 = load float, ptr @3, align 4
  %region_0_29_constant_12 = load float, ptr @2, align 4
  %59 = trunc i8 %58 to i1
  %60 = select i1 %59, float %region_0_29_constant_10, float %region_0_29_constant_12
  %region_0_29_constant_15 = load i32, ptr @5, align 4
  %61 = and i32 %55, %region_0_29_constant_15
  %62 = icmp eq i32 %61, %region_0_29_constant_7
  %63 = zext i1 %62 to i8
  %64 = trunc i8 %63 to i1
  %65 = select i1 %64, float %region_0_29_constant_10, float %region_0_29_constant_12
  %66 = fcmp oge float %60, %65
  %67 = fcmp une float %60, %60
  %68 = or i1 %66, %67
  %maximum.20 = select i1 %68, float %60, float %65
  store float %maximum.20, ptr %reduction_input_address, align 4
  %69 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_23(ptr %69, ptr %reduction_input_address, ptr %return_buffer)
  %70 = load float, ptr %return_buffer, align 4
  store float %70, ptr %69, align 4
  %71 = getelementptr inbounds float, ptr %arg2, i32 %46
  store float %maximum.20, ptr %71, align 4
  %72 = mul i32 %tile_loop.indvar, 1024
  %73 = add i32 %72, 1
  %x_loc4 = add i32 %73, %34
  %74 = add i32 %tile_origin.1, %y_in_tile.indvar
  %75 = add i32 %tile_origin.2, %x_loc4
  %76 = mul nuw nsw i32 %75, 1
  %77 = add nuw nsw i32 0, %76
  %78 = mul nuw nsw i32 %74, 8192
  %79 = add nuw nsw i32 %77, %78
  %80 = mul nuw nsw i32 %tile_origin.0, 8192
  %81 = add nuw nsw i32 %79, %80
  %82 = udiv i32 %81, 1
  %Arg_0.15 = getelementptr inbounds i32, ptr %arg0, i32 %81
  %Arg_0.16 = load i32, ptr %Arg_0.15, align 4, !invariant.load !297
  %83 = sitofp i32 %Arg_0.16 to float
  %84 = fptosi float %83 to i32
  %85 = fcmp ole float %83, 0xC1E0000000000000
  %86 = select i1 %85, i32 -2147483648, i32 %84
  %87 = fcmp oge float %83, 0x41E0000000000000
  %88 = select i1 %87, i32 2147483647, i32 %86
  %89 = fcmp uno float %83, %83
  %90 = select i1 %89, i32 0, i32 %88
  %region_0_29_constant_47 = load i32, ptr @6, align 4
  %91 = and i32 %90, %region_0_29_constant_47
  %region_0_29_constant_78 = load i32, ptr @4, align 4
  %92 = icmp eq i32 %91, %region_0_29_constant_78
  %93 = zext i1 %92 to i8
  %region_0_29_constant_109 = load float, ptr @3, align 4
  %region_0_29_constant_1210 = load float, ptr @2, align 4
  %94 = trunc i8 %93 to i1
  %95 = select i1 %94, float %region_0_29_constant_109, float %region_0_29_constant_1210
  %region_0_29_constant_1511 = load i32, ptr @5, align 4
  %96 = and i32 %90, %region_0_29_constant_1511
  %97 = icmp eq i32 %96, %region_0_29_constant_78
  %98 = zext i1 %97 to i8
  %99 = trunc i8 %98 to i1
  %100 = select i1 %99, float %region_0_29_constant_109, float %region_0_29_constant_1210
  %101 = fcmp oge float %95, %100
  %102 = fcmp une float %95, %95
  %103 = or i1 %101, %102
  %maximum.2012 = select i1 %103, float %95, float %100
  store float %maximum.2012, ptr %reduction_input_address, align 4
  %104 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_23(ptr %104, ptr %reduction_input_address, ptr %return_buffer13)
  %105 = load float, ptr %return_buffer13, align 4
  store float %105, ptr %104, align 4
  %106 = getelementptr inbounds float, ptr %arg2, i32 %81
  store float %maximum.2012, ptr %106, align 4
  br label %tile_loop.loop_header, !llvm.loop !348

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %is_full_tile-after

is_full_tile-false:                               ; preds = %y_in_tile.loop_body
  %107 = mul i32 %thread_id.x, 2
  store i32 0, ptr %tile_loop.invar_address17, align 4
  br label %tile_loop.loop_header15

tile_loop.loop_header15:                          ; preds = %x_in_tile-after32, %is_full_tile-false
  %tile_loop.indvar18 = load i32, ptr %tile_loop.invar_address17, align 4
  %108 = icmp uge i32 %tile_loop.indvar18, 8
  br i1 %108, label %tile_loop.loop_exit14, label %tile_loop.loop_body16

tile_loop.loop_body16:                            ; preds = %tile_loop.loop_header15
  %invar.inc19 = add nuw nsw i32 %tile_loop.indvar18, 1
  store i32 %invar.inc19, ptr %tile_loop.invar_address17, align 4
  %109 = icmp eq i32 %tile_loop.indvar18, 0
  %110 = mul i32 %tile_loop.indvar18, 1024
  %111 = add i32 %110, 0
  %x_loc20 = add i32 %111, %107
  %112 = add i32 %tile_origin.1, %y_in_tile.indvar
  %113 = add i32 %tile_origin.2, %x_loc20
  %114 = icmp ult i32 %x_loc20, %tile_bound1
  br i1 %114, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body16
  %115 = mul i32 %tile_loop.indvar18, 1024
  %116 = add i32 %115, 1
  %x_loc30 = add i32 %116, %107
  %117 = add i32 %tile_origin.1, %y_in_tile.indvar
  %118 = add i32 %tile_origin.2, %x_loc30
  %119 = icmp ult i32 %x_loc30, %tile_bound1
  br i1 %119, label %x_in_tile-true31, label %x_in_tile-after32

x_in_tile-after32:                                ; preds = %x_in_tile-true31, %x_in_tile-after
  br label %tile_loop.loop_header15, !llvm.loop !349

tile_loop.loop_exit14:                            ; preds = %tile_loop.loop_header15
  br label %is_full_tile-after

x_in_tile-true:                                   ; preds = %tile_loop.loop_body16
  %120 = mul nuw nsw i32 %113, 1
  %121 = add nuw nsw i32 0, %120
  %122 = mul nuw nsw i32 %112, 8192
  %123 = add nuw nsw i32 %121, %122
  %124 = mul nuw nsw i32 %tile_origin.0, 8192
  %125 = add nuw nsw i32 %123, %124
  %126 = udiv i32 %125, 1
  %Arg_0.121 = getelementptr inbounds i32, ptr %arg0, i32 %125
  %Arg_0.122 = load i32, ptr %Arg_0.121, align 4, !invariant.load !297
  %127 = sitofp i32 %Arg_0.122 to float
  %128 = fptosi float %127 to i32
  %129 = fcmp ole float %127, 0xC1E0000000000000
  %130 = select i1 %129, i32 -2147483648, i32 %128
  %131 = fcmp oge float %127, 0x41E0000000000000
  %132 = select i1 %131, i32 2147483647, i32 %130
  %133 = fcmp uno float %127, %127
  %134 = select i1 %133, i32 0, i32 %132
  %region_0_29_constant_423 = load i32, ptr @6, align 4
  %135 = and i32 %134, %region_0_29_constant_423
  %region_0_29_constant_724 = load i32, ptr @4, align 4
  %136 = icmp eq i32 %135, %region_0_29_constant_724
  %137 = zext i1 %136 to i8
  %region_0_29_constant_1025 = load float, ptr @3, align 4
  %region_0_29_constant_1226 = load float, ptr @2, align 4
  %138 = trunc i8 %137 to i1
  %139 = select i1 %138, float %region_0_29_constant_1025, float %region_0_29_constant_1226
  %region_0_29_constant_1527 = load i32, ptr @5, align 4
  %140 = and i32 %134, %region_0_29_constant_1527
  %141 = icmp eq i32 %140, %region_0_29_constant_724
  %142 = zext i1 %141 to i8
  %143 = trunc i8 %142 to i1
  %144 = select i1 %143, float %region_0_29_constant_1025, float %region_0_29_constant_1226
  %145 = fcmp oge float %139, %144
  %146 = fcmp une float %139, %139
  %147 = or i1 %145, %146
  %maximum.2028 = select i1 %147, float %139, float %144
  store float %maximum.2028, ptr %reduction_input_address, align 4
  %148 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_23(ptr %148, ptr %reduction_input_address, ptr %return_buffer29)
  %149 = load float, ptr %return_buffer29, align 4
  store float %149, ptr %148, align 4
  %150 = getelementptr inbounds float, ptr %arg2, i32 %125
  store float %maximum.2028, ptr %150, align 4
  br label %x_in_tile-after

x_in_tile-true31:                                 ; preds = %x_in_tile-after
  %151 = mul nuw nsw i32 %118, 1
  %152 = add nuw nsw i32 0, %151
  %153 = mul nuw nsw i32 %117, 8192
  %154 = add nuw nsw i32 %152, %153
  %155 = mul nuw nsw i32 %tile_origin.0, 8192
  %156 = add nuw nsw i32 %154, %155
  %157 = udiv i32 %156, 1
  %Arg_0.133 = getelementptr inbounds i32, ptr %arg0, i32 %156
  %Arg_0.134 = load i32, ptr %Arg_0.133, align 4, !invariant.load !297
  %158 = sitofp i32 %Arg_0.134 to float
  %159 = fptosi float %158 to i32
  %160 = fcmp ole float %158, 0xC1E0000000000000
  %161 = select i1 %160, i32 -2147483648, i32 %159
  %162 = fcmp oge float %158, 0x41E0000000000000
  %163 = select i1 %162, i32 2147483647, i32 %161
  %164 = fcmp uno float %158, %158
  %165 = select i1 %164, i32 0, i32 %163
  %region_0_29_constant_435 = load i32, ptr @6, align 4
  %166 = and i32 %165, %region_0_29_constant_435
  %region_0_29_constant_736 = load i32, ptr @4, align 4
  %167 = icmp eq i32 %166, %region_0_29_constant_736
  %168 = zext i1 %167 to i8
  %region_0_29_constant_1037 = load float, ptr @3, align 4
  %region_0_29_constant_1238 = load float, ptr @2, align 4
  %169 = trunc i8 %168 to i1
  %170 = select i1 %169, float %region_0_29_constant_1037, float %region_0_29_constant_1238
  %region_0_29_constant_1539 = load i32, ptr @5, align 4
  %171 = and i32 %165, %region_0_29_constant_1539
  %172 = icmp eq i32 %171, %region_0_29_constant_736
  %173 = zext i1 %172 to i8
  %174 = trunc i8 %173 to i1
  %175 = select i1 %174, float %region_0_29_constant_1037, float %region_0_29_constant_1238
  %176 = fcmp oge float %170, %175
  %177 = fcmp une float %170, %170
  %178 = or i1 %176, %177
  %maximum.2040 = select i1 %178, float %170, float %175
  store float %maximum.2040, ptr %reduction_input_address, align 4
  %179 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_23(ptr %179, ptr %reduction_input_address, ptr %return_buffer41)
  %180 = load float, ptr %return_buffer41, align 4
  store float %180, ptr %179, align 4
  %181 = getelementptr inbounds float, ptr %arg2, i32 %156
  store float %maximum.2040, ptr %181, align 4
  br label %x_in_tile-after32

intra_warp_reduce_write-true:                     ; preds = %y_in_tile.loop_exit
  %182 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache15, i32 0, i32 %6, i32 0, i32 %31
  %183 = addrspacecast ptr addrspace(3) %182 to ptr
  %184 = load float, ptr %current_output, align 4
  store float %184, ptr %183, align 4
  br label %intra_warp_reduce_write-after

inter_warp_reduce-true:                           ; preds = %intra_warp_reduce_write-after
  %185 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache15, i32 0, i32 %6, i32 0, i32 %lane_id
  %186 = addrspacecast ptr addrspace(3) %185 to ptr
  store float %region_0_29_constant_22, ptr %initial_value_addr, align 4
  %187 = icmp ult i32 %thread_id.x, 16
  %188 = select i1 %187, ptr %186, ptr %initial_value_addr
  %partial_reduction_result57 = load float, ptr %188, align 4
  %189 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result57, i32 16, i32 31)
  store float %189, ptr %result_from_other_lane56, align 4
  call void @region_1_23(ptr %188, ptr %result_from_other_lane56, ptr %return_buffer58)
  %190 = load float, ptr %return_buffer58, align 4
  store float %190, ptr %188, align 4
  %partial_reduction_result60 = load float, ptr %188, align 4
  %191 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result60, i32 8, i32 31)
  store float %191, ptr %result_from_other_lane59, align 4
  call void @region_1_23(ptr %188, ptr %result_from_other_lane59, ptr %return_buffer61)
  %192 = load float, ptr %return_buffer61, align 4
  store float %192, ptr %188, align 4
  %partial_reduction_result63 = load float, ptr %188, align 4
  %193 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result63, i32 4, i32 31)
  store float %193, ptr %result_from_other_lane62, align 4
  call void @region_1_23(ptr %188, ptr %result_from_other_lane62, ptr %return_buffer64)
  %194 = load float, ptr %return_buffer64, align 4
  store float %194, ptr %188, align 4
  %partial_reduction_result66 = load float, ptr %188, align 4
  %195 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result66, i32 2, i32 31)
  store float %195, ptr %result_from_other_lane65, align 4
  call void @region_1_23(ptr %188, ptr %result_from_other_lane65, ptr %return_buffer67)
  %196 = load float, ptr %return_buffer67, align 4
  store float %196, ptr %188, align 4
  %partial_reduction_result69 = load float, ptr %188, align 4
  %197 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result69, i32 1, i32 31)
  store float %197, ptr %result_from_other_lane68, align 4
  call void @region_1_23(ptr %188, ptr %result_from_other_lane68, ptr %return_buffer70)
  %198 = load float, ptr %return_buffer70, align 4
  store float %198, ptr %188, align 4
  %199 = icmp eq i32 %thread_id.x, 0
  br i1 %199, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %inter_warp_reduce-true
  br label %inter_warp_reduce-after

reduction_write_output-true:                      ; preds = %inter_warp_reduce-true
  %200 = mul i32 %thread_id.x, 2
  %201 = add i32 %tile_origin.1, %thread_id.y
  %202 = add i32 %tile_origin.2, %200
  %203 = add i32 %202, 0
  %output = load float, ptr %188, align 4
  store float %output, ptr %arg1, align 4
  br label %reduction_write_output-after
}

define internal void @region_1_23(ptr dereferenceable(4) %Arg_0.24.typed, ptr dereferenceable(4) %Arg_1.25.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %maximum.26.typed = alloca float, align 4
  %Arg_0.24 = load float, ptr %Arg_0.24.typed, align 4
  %Arg_1.25 = load float, ptr %Arg_1.25.typed, align 4
  %0 = fcmp oge float %Arg_0.24, %Arg_1.25
  %1 = fcmp une float %Arg_0.24, %Arg_0.24
  %2 = or i1 %0, %1
  %maximum.26 = select i1 %2, float %Arg_0.24, float %Arg_1.25
  store float %maximum.26, ptr %maximum.26.typed, align 4
  %load_ret_value = load float, ptr %maximum.26.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @concatenate_68(ptr noalias align 16 dereferenceable(16384) %arg0, ptr noalias align 16 dereferenceable(32768) %arg1, ptr noalias align 128 dereferenceable(49152) %arg2) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !350
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 12288
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 768
  %5 = udiv i32 %linear_index, 768
  %6 = icmp ult i32 %linear_index, 12288
  br i1 %6, label %concatenate_68.in_bounds-true, label %concatenate_68.in_bounds-after

concatenate_68.in_bounds-after:                   ; preds = %concatenate.3.merge, %entry
  ret void

concatenate_68.in_bounds-true:                    ; preds = %entry
  br label %concatenate.pivot.256.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %7 = phi i32 [ 0, %concatenate.pivot.0. ]
  %8 = sub nsw i32 %4, %7
  %9 = udiv i32 %linear_index, 768
  %10 = mul i32 %9, 256
  %11 = add i32 %10, %8
  %12 = udiv i32 %11, 1
  %13 = urem i32 %12, 256
  %14 = udiv i32 %11, 256
  %15 = getelementptr inbounds float, ptr %arg0, i32 %11
  %16 = load float, ptr %15, align 4, !invariant.load !297
  br label %concatenate.3.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.256.1
  %17 = phi i32 [ 256, %concatenate.pivot.256.1 ]
  %18 = sub nsw i32 %4, %17
  %19 = udiv i32 %linear_index, 768
  %20 = mul i32 %19, 512
  %21 = add i32 %20, %18
  %22 = udiv i32 %21, 1
  %23 = urem i32 %22, 512
  %24 = udiv i32 %21, 512
  %25 = getelementptr inbounds float, ptr %arg1, i32 %21
  %26 = load float, ptr %25, align 4, !invariant.load !297
  br label %concatenate.3.merge

concatenate.pivot.256.:                           ; preds = %concatenate_68.in_bounds-true
  %27 = icmp ult i32 %4, 256
  br i1 %27, label %concatenate.pivot.0., label %concatenate.pivot.256.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.256.
  br label %concat_index_from_operand_id0

concatenate.pivot.256.1:                          ; preds = %concatenate.pivot.256.
  br label %concat_index_from_operand_id1

concatenate.3.merge:                              ; preds = %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %28 = phi float [ %16, %concat_index_from_operand_id0 ], [ %26, %concat_index_from_operand_id1 ]
  %29 = getelementptr inbounds float, ptr %arg2, i32 %linear_index
  store float %28, ptr %29, align 4
  br label %concatenate_68.in_bounds-after
}

define void @concatenate_70(ptr noalias align 16 dereferenceable(32768) %arg0, ptr noalias align 16 dereferenceable(16384) %arg1, ptr noalias align 16 dereferenceable(16384) %arg2, ptr noalias align 128 dereferenceable(65536) %arg3) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !351
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 16384
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 512
  %5 = udiv i32 %linear_index, 512
  %6 = icmp ult i32 %linear_index, 16384
  br i1 %6, label %concatenate_70.in_bounds-true, label %concatenate_70.in_bounds-after

concatenate_70.in_bounds-after:                   ; preds = %concatenate.4.merge, %entry
  ret void

concatenate_70.in_bounds-true:                    ; preds = %entry
  br label %concatenate.pivot.256.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %7 = phi i32 [ 0, %concatenate.pivot.0. ]
  %8 = sub nsw i32 %4, %7
  %9 = udiv i32 %linear_index, 512
  %10 = mul i32 %9, 256
  %11 = add i32 %10, %8
  %12 = udiv i32 %11, 1
  %13 = urem i32 %12, 256
  %14 = udiv i32 %11, 256
  %15 = getelementptr inbounds float, ptr %arg0, i32 %11
  %16 = load float, ptr %15, align 4, !invariant.load !297
  br label %concatenate.4.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.256.1
  %17 = phi i32 [ 256, %concatenate.pivot.256.1 ]
  %18 = sub nsw i32 %4, %17
  %19 = udiv i32 %linear_index, 512
  %20 = mul i32 %19, 128
  %21 = add i32 %20, %18
  %22 = udiv i32 %21, 1
  %23 = urem i32 %22, 128
  %24 = udiv i32 %21, 128
  %25 = getelementptr inbounds float, ptr %arg1, i32 %21
  %26 = load float, ptr %25, align 4, !invariant.load !297
  br label %concatenate.4.merge

concat_index_from_operand_id2:                    ; preds = %concatenate.pivot.384.2
  %27 = phi i32 [ 384, %concatenate.pivot.384.2 ]
  %28 = sub nsw i32 %4, %27
  %29 = udiv i32 %linear_index, 512
  %30 = mul i32 %29, 128
  %31 = add i32 %30, %28
  %32 = udiv i32 %31, 1
  %33 = urem i32 %32, 128
  %34 = udiv i32 %31, 128
  %35 = getelementptr inbounds float, ptr %arg2, i32 %31
  %36 = load float, ptr %35, align 4, !invariant.load !297
  br label %concatenate.4.merge

concatenate.pivot.256.:                           ; preds = %concatenate_70.in_bounds-true
  %37 = icmp ult i32 %4, 256
  br i1 %37, label %concatenate.pivot.0., label %concatenate.pivot.384.

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.256.
  br label %concat_index_from_operand_id0

concatenate.pivot.384.:                           ; preds = %concatenate.pivot.256.
  %38 = icmp ult i32 %4, 384
  br i1 %38, label %concatenate.pivot.256.1, label %concatenate.pivot.384.2

concatenate.pivot.256.1:                          ; preds = %concatenate.pivot.384.
  br label %concat_index_from_operand_id1

concatenate.pivot.384.2:                          ; preds = %concatenate.pivot.384.
  br label %concat_index_from_operand_id2

concatenate.4.merge:                              ; preds = %concat_index_from_operand_id2, %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %39 = phi float [ %16, %concat_index_from_operand_id0 ], [ %26, %concat_index_from_operand_id1 ], [ %36, %concat_index_from_operand_id2 ]
  %40 = getelementptr inbounds float, ptr %arg3, i32 %linear_index
  store float %39, ptr %40, align 4
  br label %concatenate_70.in_bounds-after
}

define void @fusion_465(ptr noalias align 16 dereferenceable(524288) %arg0, ptr noalias align 16 dereferenceable(64) %arg1, ptr noalias align 16 dereferenceable(64) %arg2, ptr noalias align 128 dereferenceable(32768) %arg3, ptr noalias align 128 dereferenceable(32768) %arg4) {
entry:
  %return_buffer54 = alloca float, align 4
  %result_from_other_lane52 = alloca float, align 4
  %return_buffer51 = alloca float, align 4
  %result_from_other_lane49 = alloca float, align 4
  %return_buffer48 = alloca float, align 4
  %result_from_other_lane46 = alloca float, align 4
  %return_buffer45 = alloca float, align 4
  %result_from_other_lane43 = alloca float, align 4
  %return_buffer41 = alloca float, align 4
  %result_from_other_lane39 = alloca float, align 4
  %return_buffer38 = alloca float, align 4
  %result_from_other_lane36 = alloca float, align 4
  %return_buffer35 = alloca float, align 4
  %result_from_other_lane33 = alloca float, align 4
  %return_buffer32 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer30 = alloca float, align 4
  %return_buffer24 = alloca float, align 4
  %tile_loop.invar_address15 = alloca i32, align 4
  %return_buffer11 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result2 = alloca float, align 4
  %reduction_input_address1 = alloca float, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after56, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_22_constant_7 = load float, ptr @8, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_22_constant_7, ptr %2, align 4
  %region_0_22_constant_73 = load float, ptr @8, align 4
  %3 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  store float %region_0_22_constant_73, ptr %3, align 4
  %4 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !352
  %5 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !353
  %6 = urem i32 %4, 16
  %7 = udiv i32 %4, 16
  %8 = mul i32 %5, 6
  %9 = add i32 %8, %7
  %10 = icmp ult i32 %9, 8192
  br i1 %10, label %11, label %early_return

11:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %6, 16
  %thread_id.y = udiv i32 %6, 16
  %lane_id = urem i32 %6, 32
  %12 = udiv i32 %9, 1
  %13 = urem i32 %12, 1
  %14 = udiv i32 %9, 1
  %15 = urem i32 %14, 8192
  %16 = udiv i32 %9, 8192
  %17 = icmp eq i32 %15, 8191
  %tile_bound = select i1 %17, i32 1, i32 1
  %18 = icmp eq i32 %13, 0
  %tile_bound4 = select i1 %18, i32 16, i32 256
  %tile_origin.0 = mul i32 %16, 1
  %tile_origin.1 = mul i32 %15, 1
  %tile_origin.2 = mul i32 %13, 256
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %is_full_tile-after, %11
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %19 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %19, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 1
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %20 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %21 = icmp eq i32 256, %tile_bound4
  br i1 %21, label %is_full_tile-true, label %is_full_tile-false

is_full_tile-after:                               ; preds = %tile_loop.loop_exit12, %tile_loop.loop_exit
  br label %y_in_tile.loop_header, !llvm.loop !354

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %partial_reduction_result31 = load float, ptr %current_output, align 4
  %22 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result31, i32 8, i32 31)
  store float %22, ptr %result_from_other_lane, align 4
  call void @region_1_8(ptr %current_output, ptr %result_from_other_lane, ptr %return_buffer32)
  %23 = load float, ptr %return_buffer32, align 4
  store float %23, ptr %current_output, align 4
  %partial_reduction_result34 = load float, ptr %current_output, align 4
  %24 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result34, i32 4, i32 31)
  store float %24, ptr %result_from_other_lane33, align 4
  call void @region_1_8(ptr %current_output, ptr %result_from_other_lane33, ptr %return_buffer35)
  %25 = load float, ptr %return_buffer35, align 4
  store float %25, ptr %current_output, align 4
  %partial_reduction_result37 = load float, ptr %current_output, align 4
  %26 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result37, i32 2, i32 31)
  store float %26, ptr %result_from_other_lane36, align 4
  call void @region_1_8(ptr %current_output, ptr %result_from_other_lane36, ptr %return_buffer38)
  %27 = load float, ptr %return_buffer38, align 4
  store float %27, ptr %current_output, align 4
  %partial_reduction_result40 = load float, ptr %current_output, align 4
  %28 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result40, i32 1, i32 31)
  store float %28, ptr %result_from_other_lane39, align 4
  call void @region_1_8(ptr %current_output, ptr %result_from_other_lane39, ptr %return_buffer41)
  %29 = load float, ptr %return_buffer41, align 4
  store float %29, ptr %current_output, align 4
  %30 = udiv i32 %thread_id.x, 32
  %31 = and i32 %thread_id.x, 15
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %current_output42 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  %partial_reduction_result44 = load float, ptr %current_output42, align 4
  %33 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result44, i32 8, i32 31)
  store float %33, ptr %result_from_other_lane43, align 4
  call void @region_2_16(ptr %current_output42, ptr %result_from_other_lane43, ptr %return_buffer45)
  %34 = load float, ptr %return_buffer45, align 4
  store float %34, ptr %current_output42, align 4
  %partial_reduction_result47 = load float, ptr %current_output42, align 4
  %35 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result47, i32 4, i32 31)
  store float %35, ptr %result_from_other_lane46, align 4
  call void @region_2_16(ptr %current_output42, ptr %result_from_other_lane46, ptr %return_buffer48)
  %36 = load float, ptr %return_buffer48, align 4
  store float %36, ptr %current_output42, align 4
  %partial_reduction_result50 = load float, ptr %current_output42, align 4
  %37 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result50, i32 2, i32 31)
  store float %37, ptr %result_from_other_lane49, align 4
  call void @region_2_16(ptr %current_output42, ptr %result_from_other_lane49, ptr %return_buffer51)
  %38 = load float, ptr %return_buffer51, align 4
  store float %38, ptr %current_output42, align 4
  %partial_reduction_result53 = load float, ptr %current_output42, align 4
  %39 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result53, i32 1, i32 31)
  store float %39, ptr %result_from_other_lane52, align 4
  call void @region_2_16(ptr %current_output42, ptr %result_from_other_lane52, ptr %return_buffer54)
  %40 = load float, ptr %return_buffer54, align 4
  store float %40, ptr %current_output42, align 4
  %41 = udiv i32 %thread_id.x, 32
  %42 = and i32 %thread_id.x, 15
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %reduction_write_output-true55, label %reduction_write_output-after56

reduction_write_output-after56:                   ; preds = %reduction_write_output-true55, %reduction_write_output-after
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

is_full_tile-true:                                ; preds = %y_in_tile.loop_body
  %44 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %tile_loop.loop_body, %is_full_tile-true
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %45 = icmp uge i32 %tile_loop.indvar, 16
  br i1 %45, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc5 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc5, ptr %tile_loop.invar_address, align 4
  %46 = icmp eq i32 %tile_loop.indvar, 0
  %47 = mul i32 %tile_loop.indvar, 16
  %48 = add i32 %47, 0
  %x_loc = add i32 %48, %44
  %49 = add i32 %tile_origin.1, %y_in_tile.indvar
  %50 = add i32 %tile_origin.2, %x_loc
  %Arg_0.1 = getelementptr inbounds [8192 x [16 x float]], ptr %arg0, i32 0, i32 %49, i32 %50
  %Arg_0.16 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %Arg_1.2 = getelementptr inbounds [16 x [1 x float]], ptr %arg1, i32 0, i32 %50, i32 0
  %Arg_1.27 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %multiply.6 = fmul float %Arg_0.16, %Arg_1.27
  store float %multiply.6, ptr %reduction_input_address, align 4
  %51 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_8(ptr %51, ptr %reduction_input_address, ptr %return_buffer)
  %52 = load float, ptr %return_buffer, align 4
  store float %52, ptr %51, align 4
  %Arg_0.18 = getelementptr inbounds [8192 x [16 x float]], ptr %arg0, i32 0, i32 %49, i32 %50
  %Arg_0.19 = load float, ptr %Arg_0.18, align 4, !invariant.load !297
  %Arg_2.3 = getelementptr inbounds [16 x [1 x float]], ptr %arg2, i32 0, i32 %50, i32 0
  %Arg_2.310 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %multiply.15 = fmul float %Arg_0.19, %Arg_2.310
  store float %multiply.15, ptr %reduction_input_address1, align 4
  %53 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_16(ptr %53, ptr %reduction_input_address1, ptr %return_buffer11)
  %54 = load float, ptr %return_buffer11, align 4
  store float %54, ptr %53, align 4
  br label %tile_loop.loop_header, !llvm.loop !355

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %is_full_tile-after

is_full_tile-false:                               ; preds = %y_in_tile.loop_body
  %55 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address15, align 4
  br label %tile_loop.loop_header13

tile_loop.loop_header13:                          ; preds = %x_in_tile-after, %is_full_tile-false
  %tile_loop.indvar16 = load i32, ptr %tile_loop.invar_address15, align 4
  %56 = icmp uge i32 %tile_loop.indvar16, 16
  br i1 %56, label %tile_loop.loop_exit12, label %tile_loop.loop_body14

tile_loop.loop_body14:                            ; preds = %tile_loop.loop_header13
  %invar.inc17 = add nuw nsw i32 %tile_loop.indvar16, 1
  store i32 %invar.inc17, ptr %tile_loop.invar_address15, align 4
  %57 = icmp eq i32 %tile_loop.indvar16, 0
  %58 = mul i32 %tile_loop.indvar16, 16
  %59 = add i32 %58, 0
  %x_loc18 = add i32 %59, %55
  %60 = add i32 %tile_origin.1, %y_in_tile.indvar
  %61 = add i32 %tile_origin.2, %x_loc18
  %62 = icmp ult i32 %x_loc18, %tile_bound4
  br i1 %62, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body14
  br label %tile_loop.loop_header13, !llvm.loop !356

tile_loop.loop_exit12:                            ; preds = %tile_loop.loop_header13
  br label %is_full_tile-after

x_in_tile-true:                                   ; preds = %tile_loop.loop_body14
  %Arg_0.119 = getelementptr inbounds [8192 x [16 x float]], ptr %arg0, i32 0, i32 %60, i32 %61
  %Arg_0.120 = load float, ptr %Arg_0.119, align 4, !invariant.load !297
  %Arg_1.221 = getelementptr inbounds [16 x [1 x float]], ptr %arg1, i32 0, i32 %61, i32 0
  %Arg_1.222 = load float, ptr %Arg_1.221, align 4, !invariant.load !297
  %multiply.623 = fmul float %Arg_0.120, %Arg_1.222
  store float %multiply.623, ptr %reduction_input_address, align 4
  %63 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_8(ptr %63, ptr %reduction_input_address, ptr %return_buffer24)
  %64 = load float, ptr %return_buffer24, align 4
  store float %64, ptr %63, align 4
  %Arg_0.125 = getelementptr inbounds [8192 x [16 x float]], ptr %arg0, i32 0, i32 %60, i32 %61
  %Arg_0.126 = load float, ptr %Arg_0.125, align 4, !invariant.load !297
  %Arg_2.327 = getelementptr inbounds [16 x [1 x float]], ptr %arg2, i32 0, i32 %61, i32 0
  %Arg_2.328 = load float, ptr %Arg_2.327, align 4, !invariant.load !297
  %multiply.1529 = fmul float %Arg_0.126, %Arg_2.328
  store float %multiply.1529, ptr %reduction_input_address1, align 4
  %65 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_16(ptr %65, ptr %reduction_input_address1, ptr %return_buffer30)
  %66 = load float, ptr %return_buffer30, align 4
  store float %66, ptr %65, align 4
  br label %x_in_tile-after

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %67 = mul i32 %thread_id.x, 1
  %68 = add i32 %tile_origin.1, %thread_id.y
  %69 = add i32 %tile_origin.2, %67
  %70 = add i32 %69, 0
  %71 = udiv i32 %68, 1
  %output_element_address = getelementptr inbounds [8192 x float], ptr %arg3, i32 0, i32 %71
  %output = load float, ptr %current_output, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

reduction_write_output-true55:                    ; preds = %reduction_write_output-after
  %72 = mul i32 %thread_id.x, 1
  %73 = add i32 %tile_origin.1, %thread_id.y
  %74 = add i32 %tile_origin.2, %72
  %75 = add i32 %74, 0
  %76 = udiv i32 %73, 1
  %output_element_address57 = getelementptr inbounds [8192 x float], ptr %arg4, i32 0, i32 %76
  %output58 = load float, ptr %current_output42, align 4
  store float %output58, ptr %output_element_address57, align 4
  br label %reduction_write_output-after56
}

define internal void @region_1_8(ptr dereferenceable(4) %Arg_0.9.typed, ptr dereferenceable(4) %Arg_1.10.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.11.typed = alloca float, align 4
  %Arg_0.9 = load float, ptr %Arg_0.9.typed, align 4
  %Arg_1.10 = load float, ptr %Arg_1.10.typed, align 4
  %add.11 = fadd float %Arg_0.9, %Arg_1.10
  store float %add.11, ptr %add.11.typed, align 4
  %load_ret_value = load float, ptr %add.11.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_16(ptr dereferenceable(4) %Arg_0.17.typed, ptr dereferenceable(4) %Arg_1.18.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.19.typed = alloca float, align 4
  %Arg_0.17 = load float, ptr %Arg_0.17.typed, align 4
  %Arg_1.18 = load float, ptr %Arg_1.18.typed, align 4
  %add.19 = fadd float %Arg_0.17, %Arg_1.18
  store float %add.19, ptr %add.19.typed, align 4
  %load_ret_value = load float, ptr %add.19.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @concatenate_85(ptr noalias align 16 dereferenceable(49152) %arg0, ptr noalias align 16 dereferenceable(49152) %arg1, ptr noalias align 128 dereferenceable(98304) %arg2) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !357
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 24576
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 256
  %5 = udiv i32 %linear_index, 256
  %6 = icmp ult i32 %linear_index, 24576
  br i1 %6, label %concatenate_85.in_bounds-true, label %concatenate_85.in_bounds-after

concatenate_85.in_bounds-after:                   ; preds = %concatenate.3.merge, %entry
  ret void

concatenate_85.in_bounds-true:                    ; preds = %entry
  br label %concatenate.pivot.128.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %7 = phi i32 [ 0, %concatenate.pivot.0. ]
  %8 = sub nsw i32 %4, %7
  %9 = udiv i32 %linear_index, 256
  %10 = mul i32 %9, 128
  %11 = add i32 %10, %8
  %12 = udiv i32 %11, 1
  %13 = urem i32 %12, 128
  %14 = udiv i32 %11, 128
  %15 = getelementptr inbounds float, ptr %arg0, i32 %11
  %16 = load float, ptr %15, align 4, !invariant.load !297
  br label %concatenate.3.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.128.1
  %17 = phi i32 [ 128, %concatenate.pivot.128.1 ]
  %18 = sub nsw i32 %4, %17
  %19 = udiv i32 %linear_index, 256
  %20 = mul i32 %19, 128
  %21 = add i32 %20, %18
  %22 = udiv i32 %21, 1
  %23 = urem i32 %22, 128
  %24 = udiv i32 %21, 128
  %25 = getelementptr inbounds float, ptr %arg1, i32 %21
  %26 = load float, ptr %25, align 4, !invariant.load !297
  br label %concatenate.3.merge

concatenate.pivot.128.:                           ; preds = %concatenate_85.in_bounds-true
  %27 = icmp ult i32 %4, 128
  br i1 %27, label %concatenate.pivot.0., label %concatenate.pivot.128.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.128.
  br label %concat_index_from_operand_id0

concatenate.pivot.128.1:                          ; preds = %concatenate.pivot.128.
  br label %concat_index_from_operand_id1

concatenate.3.merge:                              ; preds = %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %28 = phi float [ %16, %concat_index_from_operand_id0 ], [ %26, %concat_index_from_operand_id1 ]
  %29 = getelementptr inbounds float, ptr %arg2, i32 %linear_index
  store float %28, ptr %29, align 4
  br label %concatenate_85.in_bounds-after
}

define void @concatenate_69(ptr noalias align 16 dereferenceable(32768) %arg0, ptr noalias align 16 dereferenceable(65536) %arg1, ptr noalias align 128 dereferenceable(98304) %arg2) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !357
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 24576
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 768
  %5 = udiv i32 %linear_index, 768
  %6 = icmp ult i32 %linear_index, 24576
  br i1 %6, label %concatenate_69.in_bounds-true, label %concatenate_69.in_bounds-after

concatenate_69.in_bounds-after:                   ; preds = %concatenate.3.merge, %entry
  ret void

concatenate_69.in_bounds-true:                    ; preds = %entry
  br label %concatenate.pivot.256.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %7 = phi i32 [ 0, %concatenate.pivot.0. ]
  %8 = sub nsw i32 %4, %7
  %9 = udiv i32 %linear_index, 768
  %10 = mul i32 %9, 256
  %11 = add i32 %10, %8
  %12 = udiv i32 %11, 1
  %13 = urem i32 %12, 256
  %14 = udiv i32 %11, 256
  %15 = getelementptr inbounds float, ptr %arg0, i32 %11
  %16 = load float, ptr %15, align 4, !invariant.load !297
  br label %concatenate.3.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.256.1
  %17 = phi i32 [ 256, %concatenate.pivot.256.1 ]
  %18 = sub nsw i32 %4, %17
  %19 = udiv i32 %linear_index, 768
  %20 = mul i32 %19, 512
  %21 = add i32 %20, %18
  %22 = udiv i32 %21, 1
  %23 = urem i32 %22, 512
  %24 = udiv i32 %21, 512
  %25 = getelementptr inbounds float, ptr %arg1, i32 %21
  %26 = load float, ptr %25, align 4, !invariant.load !297
  br label %concatenate.3.merge

concatenate.pivot.256.:                           ; preds = %concatenate_69.in_bounds-true
  %27 = icmp ult i32 %4, 256
  br i1 %27, label %concatenate.pivot.0., label %concatenate.pivot.256.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.256.
  br label %concat_index_from_operand_id0

concatenate.pivot.256.1:                          ; preds = %concatenate.pivot.256.
  br label %concat_index_from_operand_id1

concatenate.3.merge:                              ; preds = %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %28 = phi float [ %16, %concat_index_from_operand_id0 ], [ %26, %concat_index_from_operand_id1 ]
  %29 = getelementptr inbounds float, ptr %arg2, i32 %linear_index
  store float %28, ptr %29, align 4
  br label %concatenate_69.in_bounds-after
}

define void @concatenate_71(ptr noalias align 16 dereferenceable(65536) %arg0, ptr noalias align 16 dereferenceable(32768) %arg1, ptr noalias align 16 dereferenceable(32768) %arg2, ptr noalias align 128 dereferenceable(131072) %arg3) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !358
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 32768
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 512
  %5 = udiv i32 %linear_index, 512
  %6 = icmp ult i32 %linear_index, 32768
  br i1 %6, label %concatenate_71.in_bounds-true, label %concatenate_71.in_bounds-after

concatenate_71.in_bounds-after:                   ; preds = %concatenate.4.merge, %entry
  ret void

concatenate_71.in_bounds-true:                    ; preds = %entry
  br label %concatenate.pivot.256.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %7 = phi i32 [ 0, %concatenate.pivot.0. ]
  %8 = sub nsw i32 %4, %7
  %9 = udiv i32 %linear_index, 512
  %10 = mul i32 %9, 256
  %11 = add i32 %10, %8
  %12 = udiv i32 %11, 1
  %13 = urem i32 %12, 256
  %14 = udiv i32 %11, 256
  %15 = getelementptr inbounds float, ptr %arg0, i32 %11
  %16 = load float, ptr %15, align 4, !invariant.load !297
  br label %concatenate.4.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.256.1
  %17 = phi i32 [ 256, %concatenate.pivot.256.1 ]
  %18 = sub nsw i32 %4, %17
  %19 = udiv i32 %linear_index, 512
  %20 = mul i32 %19, 128
  %21 = add i32 %20, %18
  %22 = udiv i32 %21, 1
  %23 = urem i32 %22, 128
  %24 = udiv i32 %21, 128
  %25 = getelementptr inbounds float, ptr %arg1, i32 %21
  %26 = load float, ptr %25, align 4, !invariant.load !297
  br label %concatenate.4.merge

concat_index_from_operand_id2:                    ; preds = %concatenate.pivot.384.2
  %27 = phi i32 [ 384, %concatenate.pivot.384.2 ]
  %28 = sub nsw i32 %4, %27
  %29 = udiv i32 %linear_index, 512
  %30 = mul i32 %29, 128
  %31 = add i32 %30, %28
  %32 = udiv i32 %31, 1
  %33 = urem i32 %32, 128
  %34 = udiv i32 %31, 128
  %35 = getelementptr inbounds float, ptr %arg2, i32 %31
  %36 = load float, ptr %35, align 4, !invariant.load !297
  br label %concatenate.4.merge

concatenate.pivot.256.:                           ; preds = %concatenate_71.in_bounds-true
  %37 = icmp ult i32 %4, 256
  br i1 %37, label %concatenate.pivot.0., label %concatenate.pivot.384.

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.256.
  br label %concat_index_from_operand_id0

concatenate.pivot.384.:                           ; preds = %concatenate.pivot.256.
  %38 = icmp ult i32 %4, 384
  br i1 %38, label %concatenate.pivot.256.1, label %concatenate.pivot.384.2

concatenate.pivot.256.1:                          ; preds = %concatenate.pivot.384.
  br label %concat_index_from_operand_id1

concatenate.pivot.384.2:                          ; preds = %concatenate.pivot.384.
  br label %concat_index_from_operand_id2

concatenate.4.merge:                              ; preds = %concat_index_from_operand_id2, %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %39 = phi float [ %16, %concat_index_from_operand_id0 ], [ %26, %concat_index_from_operand_id1 ], [ %36, %concat_index_from_operand_id2 ]
  %40 = getelementptr inbounds float, ptr %arg3, i32 %linear_index
  store float %39, ptr %40, align 4
  br label %concatenate_71.in_bounds-after
}

define void @concatenate_60(ptr noalias align 16 dereferenceable(65536) %arg0, ptr noalias align 16 dereferenceable(32768) %arg1, ptr noalias align 16 dereferenceable(32768) %arg2, ptr noalias align 16 dereferenceable(65536) %arg3, ptr noalias align 128 dereferenceable(196608) %arg4) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !359
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 49152
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 768
  %5 = udiv i32 %linear_index, 768
  %6 = icmp ult i32 %linear_index, 49152
  br i1 %6, label %concatenate_60.in_bounds-true, label %concatenate_60.in_bounds-after

concatenate_60.in_bounds-after:                   ; preds = %concatenate.5.merge, %entry
  ret void

concatenate_60.in_bounds-true:                    ; preds = %entry
  br label %concatenate.pivot.384.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %7 = phi i32 [ 0, %concatenate.pivot.0. ]
  %8 = sub nsw i32 %4, %7
  %9 = udiv i32 %linear_index, 768
  %10 = mul i32 %9, 256
  %11 = add i32 %10, %8
  %12 = udiv i32 %11, 1
  %13 = urem i32 %12, 256
  %14 = udiv i32 %11, 256
  %15 = getelementptr inbounds float, ptr %arg0, i32 %11
  %16 = load float, ptr %15, align 4, !invariant.load !297
  br label %concatenate.5.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.256.1
  %17 = phi i32 [ 256, %concatenate.pivot.256.1 ]
  %18 = sub nsw i32 %4, %17
  %19 = udiv i32 %linear_index, 768
  %20 = mul i32 %19, 128
  %21 = add i32 %20, %18
  %22 = udiv i32 %21, 1
  %23 = urem i32 %22, 128
  %24 = udiv i32 %21, 128
  %25 = getelementptr inbounds float, ptr %arg1, i32 %21
  %26 = load float, ptr %25, align 4, !invariant.load !297
  br label %concatenate.5.merge

concat_index_from_operand_id2:                    ; preds = %concatenate.pivot.384.2
  %27 = phi i32 [ 384, %concatenate.pivot.384.2 ]
  %28 = sub nsw i32 %4, %27
  %29 = udiv i32 %linear_index, 768
  %30 = mul i32 %29, 128
  %31 = add i32 %30, %28
  %32 = udiv i32 %31, 1
  %33 = urem i32 %32, 128
  %34 = udiv i32 %31, 128
  %35 = getelementptr inbounds float, ptr %arg2, i32 %31
  %36 = load float, ptr %35, align 4, !invariant.load !297
  br label %concatenate.5.merge

concat_index_from_operand_id3:                    ; preds = %concatenate.pivot.512.3
  %37 = phi i32 [ 512, %concatenate.pivot.512.3 ]
  %38 = sub nsw i32 %4, %37
  %39 = udiv i32 %linear_index, 768
  %40 = mul i32 %39, 256
  %41 = add i32 %40, %38
  %42 = udiv i32 %41, 1
  %43 = urem i32 %42, 256
  %44 = udiv i32 %41, 256
  %45 = getelementptr inbounds float, ptr %arg3, i32 %41
  %46 = load float, ptr %45, align 4, !invariant.load !297
  br label %concatenate.5.merge

concatenate.pivot.384.:                           ; preds = %concatenate_60.in_bounds-true
  %47 = icmp ult i32 %4, 384
  br i1 %47, label %concatenate.pivot.256., label %concatenate.pivot.512.

concatenate.pivot.256.:                           ; preds = %concatenate.pivot.384.
  %48 = icmp ult i32 %4, 256
  br i1 %48, label %concatenate.pivot.0., label %concatenate.pivot.256.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.256.
  br label %concat_index_from_operand_id0

concatenate.pivot.256.1:                          ; preds = %concatenate.pivot.256.
  br label %concat_index_from_operand_id1

concatenate.pivot.512.:                           ; preds = %concatenate.pivot.384.
  %49 = icmp ult i32 %4, 512
  br i1 %49, label %concatenate.pivot.384.2, label %concatenate.pivot.512.3

concatenate.pivot.384.2:                          ; preds = %concatenate.pivot.512.
  br label %concat_index_from_operand_id2

concatenate.pivot.512.3:                          ; preds = %concatenate.pivot.512.
  br label %concat_index_from_operand_id3

concatenate.5.merge:                              ; preds = %concat_index_from_operand_id3, %concat_index_from_operand_id2, %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %50 = phi float [ %16, %concat_index_from_operand_id0 ], [ %26, %concat_index_from_operand_id1 ], [ %36, %concat_index_from_operand_id2 ], [ %46, %concat_index_from_operand_id3 ]
  %51 = getelementptr inbounds float, ptr %arg4, i32 %linear_index
  store float %50, ptr %51, align 4
  br label %concatenate_60.in_bounds-after
}

define void @concatenate_76(ptr noalias align 16 dereferenceable(65536) %arg0, ptr noalias align 16 dereferenceable(65536) %arg1, ptr noalias align 16 dereferenceable(65536) %arg2, ptr noalias align 128 dereferenceable(196608) %arg3) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !359
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 49152
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 768
  %5 = udiv i32 %linear_index, 768
  %6 = icmp ult i32 %linear_index, 49152
  br i1 %6, label %concatenate_76.in_bounds-true, label %concatenate_76.in_bounds-after

concatenate_76.in_bounds-after:                   ; preds = %concatenate.4.merge, %entry
  ret void

concatenate_76.in_bounds-true:                    ; preds = %entry
  br label %concatenate.pivot.256.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %7 = phi i32 [ 0, %concatenate.pivot.0. ]
  %8 = sub nsw i32 %4, %7
  %9 = udiv i32 %linear_index, 768
  %10 = mul i32 %9, 256
  %11 = add i32 %10, %8
  %12 = udiv i32 %11, 1
  %13 = urem i32 %12, 256
  %14 = udiv i32 %11, 256
  %15 = getelementptr inbounds float, ptr %arg0, i32 %11
  %16 = load float, ptr %15, align 4, !invariant.load !297
  br label %concatenate.4.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.256.1
  %17 = phi i32 [ 256, %concatenate.pivot.256.1 ]
  %18 = sub nsw i32 %4, %17
  %19 = udiv i32 %linear_index, 768
  %20 = mul i32 %19, 256
  %21 = add i32 %20, %18
  %22 = udiv i32 %21, 1
  %23 = urem i32 %22, 256
  %24 = udiv i32 %21, 256
  %25 = getelementptr inbounds float, ptr %arg1, i32 %21
  %26 = load float, ptr %25, align 4, !invariant.load !297
  br label %concatenate.4.merge

concat_index_from_operand_id2:                    ; preds = %concatenate.pivot.512.2
  %27 = phi i32 [ 512, %concatenate.pivot.512.2 ]
  %28 = sub nsw i32 %4, %27
  %29 = udiv i32 %linear_index, 768
  %30 = mul i32 %29, 256
  %31 = add i32 %30, %28
  %32 = udiv i32 %31, 1
  %33 = urem i32 %32, 256
  %34 = udiv i32 %31, 256
  %35 = getelementptr inbounds float, ptr %arg2, i32 %31
  %36 = load float, ptr %35, align 4, !invariant.load !297
  br label %concatenate.4.merge

concatenate.pivot.256.:                           ; preds = %concatenate_76.in_bounds-true
  %37 = icmp ult i32 %4, 256
  br i1 %37, label %concatenate.pivot.0., label %concatenate.pivot.512.

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.256.
  br label %concat_index_from_operand_id0

concatenate.pivot.512.:                           ; preds = %concatenate.pivot.256.
  %38 = icmp ult i32 %4, 512
  br i1 %38, label %concatenate.pivot.256.1, label %concatenate.pivot.512.2

concatenate.pivot.256.1:                          ; preds = %concatenate.pivot.512.
  br label %concat_index_from_operand_id1

concatenate.pivot.512.2:                          ; preds = %concatenate.pivot.512.
  br label %concat_index_from_operand_id2

concatenate.4.merge:                              ; preds = %concat_index_from_operand_id2, %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %39 = phi float [ %16, %concat_index_from_operand_id0 ], [ %26, %concat_index_from_operand_id1 ], [ %36, %concat_index_from_operand_id2 ]
  %40 = getelementptr inbounds float, ptr %arg3, i32 %linear_index
  store float %39, ptr %40, align 4
  br label %concatenate_76.in_bounds-after
}

define void @concatenate_73(ptr noalias align 16 dereferenceable(131072) %arg0, ptr noalias align 16 dereferenceable(65536) %arg1, ptr noalias align 16 dereferenceable(65536) %arg2, ptr noalias align 128 dereferenceable(262144) %arg3) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !360
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 65536
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 512
  %5 = udiv i32 %linear_index, 512
  %6 = icmp ult i32 %linear_index, 65536
  br i1 %6, label %concatenate_73.in_bounds-true, label %concatenate_73.in_bounds-after

concatenate_73.in_bounds-after:                   ; preds = %concatenate.4.merge, %entry
  ret void

concatenate_73.in_bounds-true:                    ; preds = %entry
  br label %concatenate.pivot.256.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %7 = phi i32 [ 0, %concatenate.pivot.0. ]
  %8 = sub nsw i32 %4, %7
  %9 = udiv i32 %linear_index, 512
  %10 = mul i32 %9, 256
  %11 = add i32 %10, %8
  %12 = udiv i32 %11, 1
  %13 = urem i32 %12, 256
  %14 = udiv i32 %11, 256
  %15 = getelementptr inbounds float, ptr %arg0, i32 %11
  %16 = load float, ptr %15, align 4, !invariant.load !297
  br label %concatenate.4.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.256.1
  %17 = phi i32 [ 256, %concatenate.pivot.256.1 ]
  %18 = sub nsw i32 %4, %17
  %19 = udiv i32 %linear_index, 512
  %20 = mul i32 %19, 128
  %21 = add i32 %20, %18
  %22 = udiv i32 %21, 1
  %23 = urem i32 %22, 128
  %24 = udiv i32 %21, 128
  %25 = getelementptr inbounds float, ptr %arg1, i32 %21
  %26 = load float, ptr %25, align 4, !invariant.load !297
  br label %concatenate.4.merge

concat_index_from_operand_id2:                    ; preds = %concatenate.pivot.384.2
  %27 = phi i32 [ 384, %concatenate.pivot.384.2 ]
  %28 = sub nsw i32 %4, %27
  %29 = udiv i32 %linear_index, 512
  %30 = mul i32 %29, 128
  %31 = add i32 %30, %28
  %32 = udiv i32 %31, 1
  %33 = urem i32 %32, 128
  %34 = udiv i32 %31, 128
  %35 = getelementptr inbounds float, ptr %arg2, i32 %31
  %36 = load float, ptr %35, align 4, !invariant.load !297
  br label %concatenate.4.merge

concatenate.pivot.256.:                           ; preds = %concatenate_73.in_bounds-true
  %37 = icmp ult i32 %4, 256
  br i1 %37, label %concatenate.pivot.0., label %concatenate.pivot.384.

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.256.
  br label %concat_index_from_operand_id0

concatenate.pivot.384.:                           ; preds = %concatenate.pivot.256.
  %38 = icmp ult i32 %4, 384
  br i1 %38, label %concatenate.pivot.256.1, label %concatenate.pivot.384.2

concatenate.pivot.256.1:                          ; preds = %concatenate.pivot.384.
  br label %concat_index_from_operand_id1

concatenate.pivot.384.2:                          ; preds = %concatenate.pivot.384.
  br label %concat_index_from_operand_id2

concatenate.4.merge:                              ; preds = %concat_index_from_operand_id2, %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %39 = phi float [ %16, %concat_index_from_operand_id0 ], [ %26, %concat_index_from_operand_id1 ], [ %36, %concat_index_from_operand_id2 ]
  %40 = getelementptr inbounds float, ptr %arg3, i32 %linear_index
  store float %39, ptr %40, align 4
  br label %concatenate_73.in_bounds-after
}

define void @concatenate_61(ptr noalias align 16 dereferenceable(131072) %arg0, ptr noalias align 16 dereferenceable(65536) %arg1, ptr noalias align 16 dereferenceable(65536) %arg2, ptr noalias align 16 dereferenceable(131072) %arg3, ptr noalias align 128 dereferenceable(393216) %arg4) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !352
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 98304
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 768
  %5 = udiv i32 %linear_index, 768
  %6 = icmp ult i32 %linear_index, 98304
  br i1 %6, label %concatenate_61.in_bounds-true, label %concatenate_61.in_bounds-after

concatenate_61.in_bounds-after:                   ; preds = %concatenate.5.merge, %entry
  ret void

concatenate_61.in_bounds-true:                    ; preds = %entry
  br label %concatenate.pivot.384.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %7 = phi i32 [ 0, %concatenate.pivot.0. ]
  %8 = sub nsw i32 %4, %7
  %9 = udiv i32 %linear_index, 768
  %10 = mul i32 %9, 256
  %11 = add i32 %10, %8
  %12 = udiv i32 %11, 1
  %13 = urem i32 %12, 256
  %14 = udiv i32 %11, 256
  %15 = getelementptr inbounds float, ptr %arg0, i32 %11
  %16 = load float, ptr %15, align 4, !invariant.load !297
  br label %concatenate.5.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.256.1
  %17 = phi i32 [ 256, %concatenate.pivot.256.1 ]
  %18 = sub nsw i32 %4, %17
  %19 = udiv i32 %linear_index, 768
  %20 = mul i32 %19, 128
  %21 = add i32 %20, %18
  %22 = udiv i32 %21, 1
  %23 = urem i32 %22, 128
  %24 = udiv i32 %21, 128
  %25 = getelementptr inbounds float, ptr %arg1, i32 %21
  %26 = load float, ptr %25, align 4, !invariant.load !297
  br label %concatenate.5.merge

concat_index_from_operand_id2:                    ; preds = %concatenate.pivot.384.2
  %27 = phi i32 [ 384, %concatenate.pivot.384.2 ]
  %28 = sub nsw i32 %4, %27
  %29 = udiv i32 %linear_index, 768
  %30 = mul i32 %29, 128
  %31 = add i32 %30, %28
  %32 = udiv i32 %31, 1
  %33 = urem i32 %32, 128
  %34 = udiv i32 %31, 128
  %35 = getelementptr inbounds float, ptr %arg2, i32 %31
  %36 = load float, ptr %35, align 4, !invariant.load !297
  br label %concatenate.5.merge

concat_index_from_operand_id3:                    ; preds = %concatenate.pivot.512.3
  %37 = phi i32 [ 512, %concatenate.pivot.512.3 ]
  %38 = sub nsw i32 %4, %37
  %39 = udiv i32 %linear_index, 768
  %40 = mul i32 %39, 256
  %41 = add i32 %40, %38
  %42 = udiv i32 %41, 1
  %43 = urem i32 %42, 256
  %44 = udiv i32 %41, 256
  %45 = getelementptr inbounds float, ptr %arg3, i32 %41
  %46 = load float, ptr %45, align 4, !invariant.load !297
  br label %concatenate.5.merge

concatenate.pivot.384.:                           ; preds = %concatenate_61.in_bounds-true
  %47 = icmp ult i32 %4, 384
  br i1 %47, label %concatenate.pivot.256., label %concatenate.pivot.512.

concatenate.pivot.256.:                           ; preds = %concatenate.pivot.384.
  %48 = icmp ult i32 %4, 256
  br i1 %48, label %concatenate.pivot.0., label %concatenate.pivot.256.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.256.
  br label %concat_index_from_operand_id0

concatenate.pivot.256.1:                          ; preds = %concatenate.pivot.256.
  br label %concat_index_from_operand_id1

concatenate.pivot.512.:                           ; preds = %concatenate.pivot.384.
  %49 = icmp ult i32 %4, 512
  br i1 %49, label %concatenate.pivot.384.2, label %concatenate.pivot.512.3

concatenate.pivot.384.2:                          ; preds = %concatenate.pivot.512.
  br label %concat_index_from_operand_id2

concatenate.pivot.512.3:                          ; preds = %concatenate.pivot.512.
  br label %concat_index_from_operand_id3

concatenate.5.merge:                              ; preds = %concat_index_from_operand_id3, %concat_index_from_operand_id2, %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %50 = phi float [ %16, %concat_index_from_operand_id0 ], [ %26, %concat_index_from_operand_id1 ], [ %36, %concat_index_from_operand_id2 ], [ %46, %concat_index_from_operand_id3 ]
  %51 = getelementptr inbounds float, ptr %arg4, i32 %linear_index
  store float %50, ptr %51, align 4
  br label %concatenate_61.in_bounds-after
}

define void @concatenate_77(ptr noalias align 16 dereferenceable(131072) %arg0, ptr noalias align 16 dereferenceable(131072) %arg1, ptr noalias align 16 dereferenceable(131072) %arg2, ptr noalias align 128 dereferenceable(393216) %arg3) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !352
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 98304
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 768
  %5 = udiv i32 %linear_index, 768
  %6 = icmp ult i32 %linear_index, 98304
  br i1 %6, label %concatenate_77.in_bounds-true, label %concatenate_77.in_bounds-after

concatenate_77.in_bounds-after:                   ; preds = %concatenate.4.merge, %entry
  ret void

concatenate_77.in_bounds-true:                    ; preds = %entry
  br label %concatenate.pivot.256.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %7 = phi i32 [ 0, %concatenate.pivot.0. ]
  %8 = sub nsw i32 %4, %7
  %9 = udiv i32 %linear_index, 768
  %10 = mul i32 %9, 256
  %11 = add i32 %10, %8
  %12 = udiv i32 %11, 1
  %13 = urem i32 %12, 256
  %14 = udiv i32 %11, 256
  %15 = getelementptr inbounds float, ptr %arg0, i32 %11
  %16 = load float, ptr %15, align 4, !invariant.load !297
  br label %concatenate.4.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.256.1
  %17 = phi i32 [ 256, %concatenate.pivot.256.1 ]
  %18 = sub nsw i32 %4, %17
  %19 = udiv i32 %linear_index, 768
  %20 = mul i32 %19, 256
  %21 = add i32 %20, %18
  %22 = udiv i32 %21, 1
  %23 = urem i32 %22, 256
  %24 = udiv i32 %21, 256
  %25 = getelementptr inbounds float, ptr %arg1, i32 %21
  %26 = load float, ptr %25, align 4, !invariant.load !297
  br label %concatenate.4.merge

concat_index_from_operand_id2:                    ; preds = %concatenate.pivot.512.2
  %27 = phi i32 [ 512, %concatenate.pivot.512.2 ]
  %28 = sub nsw i32 %4, %27
  %29 = udiv i32 %linear_index, 768
  %30 = mul i32 %29, 256
  %31 = add i32 %30, %28
  %32 = udiv i32 %31, 1
  %33 = urem i32 %32, 256
  %34 = udiv i32 %31, 256
  %35 = getelementptr inbounds float, ptr %arg2, i32 %31
  %36 = load float, ptr %35, align 4, !invariant.load !297
  br label %concatenate.4.merge

concatenate.pivot.256.:                           ; preds = %concatenate_77.in_bounds-true
  %37 = icmp ult i32 %4, 256
  br i1 %37, label %concatenate.pivot.0., label %concatenate.pivot.512.

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.256.
  br label %concat_index_from_operand_id0

concatenate.pivot.512.:                           ; preds = %concatenate.pivot.256.
  %38 = icmp ult i32 %4, 512
  br i1 %38, label %concatenate.pivot.256.1, label %concatenate.pivot.512.2

concatenate.pivot.256.1:                          ; preds = %concatenate.pivot.512.
  br label %concat_index_from_operand_id1

concatenate.pivot.512.2:                          ; preds = %concatenate.pivot.512.
  br label %concat_index_from_operand_id2

concatenate.4.merge:                              ; preds = %concat_index_from_operand_id2, %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %39 = phi float [ %16, %concat_index_from_operand_id0 ], [ %26, %concat_index_from_operand_id1 ], [ %36, %concat_index_from_operand_id2 ]
  %40 = getelementptr inbounds float, ptr %arg3, i32 %linear_index
  store float %39, ptr %40, align 4
  br label %concatenate_77.in_bounds-after
}

define void @concatenate_104(ptr noalias align 16 dereferenceable(262144) %arg0, ptr noalias align 16 dereferenceable(262144) %arg1, ptr noalias align 128 dereferenceable(524288) %arg2) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !361
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 32768
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 16
  %5 = udiv i32 %linear_index_base, 16
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 16
  %8 = udiv i32 %linear_index1, 16
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 16
  %11 = udiv i32 %linear_index2, 16
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 16
  %14 = udiv i32 %linear_index3, 16
  %15 = icmp ult i32 %linear_index_base, 131072
  br i1 %15, label %concatenate_104.in_bounds-true, label %concatenate_104.in_bounds-after

concatenate_104.in_bounds-after:                  ; preds = %concatenate.3.merge14, %entry
  ret void

concatenate_104.in_bounds-true:                   ; preds = %entry
  br label %concatenate.pivot.8.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %16 = phi i32 [ 0, %concatenate.pivot.0. ]
  %17 = sub nsw i32 %4, %16
  %18 = udiv i32 %linear_index_base, 16
  %19 = mul i32 %18, 8
  %20 = add i32 %19, %17
  %21 = udiv i32 %20, 1
  %22 = urem i32 %21, 8
  %23 = udiv i32 %20, 8
  %24 = getelementptr inbounds float, ptr %arg0, i32 %20
  %25 = load float, ptr %24, align 4, !invariant.load !297
  br label %concatenate.3.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.8.1
  %26 = phi i32 [ 8, %concatenate.pivot.8.1 ]
  %27 = sub nsw i32 %4, %26
  %28 = udiv i32 %linear_index_base, 16
  %29 = mul i32 %28, 8
  %30 = add i32 %29, %27
  %31 = udiv i32 %30, 1
  %32 = urem i32 %31, 8
  %33 = udiv i32 %30, 8
  %34 = getelementptr inbounds float, ptr %arg1, i32 %30
  %35 = load float, ptr %34, align 4, !invariant.load !297
  br label %concatenate.3.merge

concatenate.pivot.8.:                             ; preds = %concatenate_104.in_bounds-true
  %36 = icmp ult i32 %4, 8
  br i1 %36, label %concatenate.pivot.0., label %concatenate.pivot.8.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.8.
  br label %concat_index_from_operand_id0

concatenate.pivot.8.1:                            ; preds = %concatenate.pivot.8.
  br label %concat_index_from_operand_id1

concatenate.3.merge:                              ; preds = %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %37 = phi float [ %25, %concat_index_from_operand_id0 ], [ %35, %concat_index_from_operand_id1 ]
  %38 = getelementptr inbounds float, ptr %arg2, i32 %linear_index_base
  store float %37, ptr %38, align 4
  br label %concatenate.pivot.8.5

concat_index_from_operand_id03:                   ; preds = %concatenate.pivot.0.6
  %39 = phi i32 [ 0, %concatenate.pivot.0.6 ]
  %40 = sub nsw i32 %7, %39
  %41 = udiv i32 %linear_index1, 16
  %42 = mul i32 %41, 8
  %43 = add i32 %42, %40
  %44 = udiv i32 %43, 1
  %45 = urem i32 %44, 8
  %46 = udiv i32 %43, 8
  %47 = getelementptr inbounds float, ptr %arg0, i32 %43
  %48 = load float, ptr %47, align 4, !invariant.load !297
  br label %concatenate.3.merge2

concat_index_from_operand_id14:                   ; preds = %concatenate.pivot.8.7
  %49 = phi i32 [ 8, %concatenate.pivot.8.7 ]
  %50 = sub nsw i32 %7, %49
  %51 = udiv i32 %linear_index1, 16
  %52 = mul i32 %51, 8
  %53 = add i32 %52, %50
  %54 = udiv i32 %53, 1
  %55 = urem i32 %54, 8
  %56 = udiv i32 %53, 8
  %57 = getelementptr inbounds float, ptr %arg1, i32 %53
  %58 = load float, ptr %57, align 4, !invariant.load !297
  br label %concatenate.3.merge2

concatenate.pivot.8.5:                            ; preds = %concatenate.3.merge
  %59 = icmp ult i32 %7, 8
  br i1 %59, label %concatenate.pivot.0.6, label %concatenate.pivot.8.7

concatenate.pivot.0.6:                            ; preds = %concatenate.pivot.8.5
  br label %concat_index_from_operand_id03

concatenate.pivot.8.7:                            ; preds = %concatenate.pivot.8.5
  br label %concat_index_from_operand_id14

concatenate.3.merge2:                             ; preds = %concat_index_from_operand_id14, %concat_index_from_operand_id03
  %60 = phi float [ %48, %concat_index_from_operand_id03 ], [ %58, %concat_index_from_operand_id14 ]
  %61 = getelementptr inbounds float, ptr %arg2, i32 %linear_index1
  store float %60, ptr %61, align 4
  br label %concatenate.pivot.8.11

concat_index_from_operand_id09:                   ; preds = %concatenate.pivot.0.12
  %62 = phi i32 [ 0, %concatenate.pivot.0.12 ]
  %63 = sub nsw i32 %10, %62
  %64 = udiv i32 %linear_index2, 16
  %65 = mul i32 %64, 8
  %66 = add i32 %65, %63
  %67 = udiv i32 %66, 1
  %68 = urem i32 %67, 8
  %69 = udiv i32 %66, 8
  %70 = getelementptr inbounds float, ptr %arg0, i32 %66
  %71 = load float, ptr %70, align 4, !invariant.load !297
  br label %concatenate.3.merge8

concat_index_from_operand_id110:                  ; preds = %concatenate.pivot.8.13
  %72 = phi i32 [ 8, %concatenate.pivot.8.13 ]
  %73 = sub nsw i32 %10, %72
  %74 = udiv i32 %linear_index2, 16
  %75 = mul i32 %74, 8
  %76 = add i32 %75, %73
  %77 = udiv i32 %76, 1
  %78 = urem i32 %77, 8
  %79 = udiv i32 %76, 8
  %80 = getelementptr inbounds float, ptr %arg1, i32 %76
  %81 = load float, ptr %80, align 4, !invariant.load !297
  br label %concatenate.3.merge8

concatenate.pivot.8.11:                           ; preds = %concatenate.3.merge2
  %82 = icmp ult i32 %10, 8
  br i1 %82, label %concatenate.pivot.0.12, label %concatenate.pivot.8.13

concatenate.pivot.0.12:                           ; preds = %concatenate.pivot.8.11
  br label %concat_index_from_operand_id09

concatenate.pivot.8.13:                           ; preds = %concatenate.pivot.8.11
  br label %concat_index_from_operand_id110

concatenate.3.merge8:                             ; preds = %concat_index_from_operand_id110, %concat_index_from_operand_id09
  %83 = phi float [ %71, %concat_index_from_operand_id09 ], [ %81, %concat_index_from_operand_id110 ]
  %84 = getelementptr inbounds float, ptr %arg2, i32 %linear_index2
  store float %83, ptr %84, align 4
  br label %concatenate.pivot.8.17

concat_index_from_operand_id015:                  ; preds = %concatenate.pivot.0.18
  %85 = phi i32 [ 0, %concatenate.pivot.0.18 ]
  %86 = sub nsw i32 %13, %85
  %87 = udiv i32 %linear_index3, 16
  %88 = mul i32 %87, 8
  %89 = add i32 %88, %86
  %90 = udiv i32 %89, 1
  %91 = urem i32 %90, 8
  %92 = udiv i32 %89, 8
  %93 = getelementptr inbounds float, ptr %arg0, i32 %89
  %94 = load float, ptr %93, align 4, !invariant.load !297
  br label %concatenate.3.merge14

concat_index_from_operand_id116:                  ; preds = %concatenate.pivot.8.19
  %95 = phi i32 [ 8, %concatenate.pivot.8.19 ]
  %96 = sub nsw i32 %13, %95
  %97 = udiv i32 %linear_index3, 16
  %98 = mul i32 %97, 8
  %99 = add i32 %98, %96
  %100 = udiv i32 %99, 1
  %101 = urem i32 %100, 8
  %102 = udiv i32 %99, 8
  %103 = getelementptr inbounds float, ptr %arg1, i32 %99
  %104 = load float, ptr %103, align 4, !invariant.load !297
  br label %concatenate.3.merge14

concatenate.pivot.8.17:                           ; preds = %concatenate.3.merge8
  %105 = icmp ult i32 %13, 8
  br i1 %105, label %concatenate.pivot.0.18, label %concatenate.pivot.8.19

concatenate.pivot.0.18:                           ; preds = %concatenate.pivot.8.17
  br label %concat_index_from_operand_id015

concatenate.pivot.8.19:                           ; preds = %concatenate.pivot.8.17
  br label %concat_index_from_operand_id116

concatenate.3.merge14:                            ; preds = %concat_index_from_operand_id116, %concat_index_from_operand_id015
  %106 = phi float [ %94, %concat_index_from_operand_id015 ], [ %104, %concat_index_from_operand_id116 ]
  %107 = getelementptr inbounds float, ptr %arg2, i32 %linear_index3
  store float %106, ptr %107, align 4
  br label %concatenate_104.in_bounds-after
}

define void @concatenate_106(ptr noalias align 16 dereferenceable(524288) %arg0, ptr noalias align 16 dereferenceable(262144) %arg1, ptr noalias align 128 dereferenceable(786432) %arg2) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !363
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 49152
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 24
  %5 = udiv i32 %linear_index_base, 24
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 24
  %8 = udiv i32 %linear_index1, 24
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 24
  %11 = udiv i32 %linear_index2, 24
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 24
  %14 = udiv i32 %linear_index3, 24
  %15 = icmp ult i32 %linear_index_base, 196608
  br i1 %15, label %concatenate_106.in_bounds-true, label %concatenate_106.in_bounds-after

concatenate_106.in_bounds-after:                  ; preds = %concatenate.3.merge14, %entry
  ret void

concatenate_106.in_bounds-true:                   ; preds = %entry
  br label %concatenate.pivot.16.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %16 = phi i32 [ 0, %concatenate.pivot.0. ]
  %17 = sub nsw i32 %4, %16
  %18 = udiv i32 %linear_index_base, 24
  %19 = mul i32 %18, 16
  %20 = add i32 %19, %17
  %21 = udiv i32 %20, 1
  %22 = urem i32 %21, 16
  %23 = udiv i32 %20, 16
  %24 = getelementptr inbounds float, ptr %arg0, i32 %20
  %25 = load float, ptr %24, align 4, !invariant.load !297
  br label %concatenate.3.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.16.1
  %26 = phi i32 [ 16, %concatenate.pivot.16.1 ]
  %27 = sub nsw i32 %4, %26
  %28 = udiv i32 %linear_index_base, 24
  %29 = mul i32 %28, 8
  %30 = add i32 %29, %27
  %31 = udiv i32 %30, 1
  %32 = urem i32 %31, 8
  %33 = udiv i32 %30, 8
  %34 = getelementptr inbounds float, ptr %arg1, i32 %30
  %35 = load float, ptr %34, align 4, !invariant.load !297
  br label %concatenate.3.merge

concatenate.pivot.16.:                            ; preds = %concatenate_106.in_bounds-true
  %36 = icmp ult i32 %4, 16
  br i1 %36, label %concatenate.pivot.0., label %concatenate.pivot.16.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.16.
  br label %concat_index_from_operand_id0

concatenate.pivot.16.1:                           ; preds = %concatenate.pivot.16.
  br label %concat_index_from_operand_id1

concatenate.3.merge:                              ; preds = %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %37 = phi float [ %25, %concat_index_from_operand_id0 ], [ %35, %concat_index_from_operand_id1 ]
  %38 = getelementptr inbounds float, ptr %arg2, i32 %linear_index_base
  store float %37, ptr %38, align 4
  br label %concatenate.pivot.16.5

concat_index_from_operand_id03:                   ; preds = %concatenate.pivot.0.6
  %39 = phi i32 [ 0, %concatenate.pivot.0.6 ]
  %40 = sub nsw i32 %7, %39
  %41 = udiv i32 %linear_index1, 24
  %42 = mul i32 %41, 16
  %43 = add i32 %42, %40
  %44 = udiv i32 %43, 1
  %45 = urem i32 %44, 16
  %46 = udiv i32 %43, 16
  %47 = getelementptr inbounds float, ptr %arg0, i32 %43
  %48 = load float, ptr %47, align 4, !invariant.load !297
  br label %concatenate.3.merge2

concat_index_from_operand_id14:                   ; preds = %concatenate.pivot.16.7
  %49 = phi i32 [ 16, %concatenate.pivot.16.7 ]
  %50 = sub nsw i32 %7, %49
  %51 = udiv i32 %linear_index1, 24
  %52 = mul i32 %51, 8
  %53 = add i32 %52, %50
  %54 = udiv i32 %53, 1
  %55 = urem i32 %54, 8
  %56 = udiv i32 %53, 8
  %57 = getelementptr inbounds float, ptr %arg1, i32 %53
  %58 = load float, ptr %57, align 4, !invariant.load !297
  br label %concatenate.3.merge2

concatenate.pivot.16.5:                           ; preds = %concatenate.3.merge
  %59 = icmp ult i32 %7, 16
  br i1 %59, label %concatenate.pivot.0.6, label %concatenate.pivot.16.7

concatenate.pivot.0.6:                            ; preds = %concatenate.pivot.16.5
  br label %concat_index_from_operand_id03

concatenate.pivot.16.7:                           ; preds = %concatenate.pivot.16.5
  br label %concat_index_from_operand_id14

concatenate.3.merge2:                             ; preds = %concat_index_from_operand_id14, %concat_index_from_operand_id03
  %60 = phi float [ %48, %concat_index_from_operand_id03 ], [ %58, %concat_index_from_operand_id14 ]
  %61 = getelementptr inbounds float, ptr %arg2, i32 %linear_index1
  store float %60, ptr %61, align 4
  br label %concatenate.pivot.16.11

concat_index_from_operand_id09:                   ; preds = %concatenate.pivot.0.12
  %62 = phi i32 [ 0, %concatenate.pivot.0.12 ]
  %63 = sub nsw i32 %10, %62
  %64 = udiv i32 %linear_index2, 24
  %65 = mul i32 %64, 16
  %66 = add i32 %65, %63
  %67 = udiv i32 %66, 1
  %68 = urem i32 %67, 16
  %69 = udiv i32 %66, 16
  %70 = getelementptr inbounds float, ptr %arg0, i32 %66
  %71 = load float, ptr %70, align 4, !invariant.load !297
  br label %concatenate.3.merge8

concat_index_from_operand_id110:                  ; preds = %concatenate.pivot.16.13
  %72 = phi i32 [ 16, %concatenate.pivot.16.13 ]
  %73 = sub nsw i32 %10, %72
  %74 = udiv i32 %linear_index2, 24
  %75 = mul i32 %74, 8
  %76 = add i32 %75, %73
  %77 = udiv i32 %76, 1
  %78 = urem i32 %77, 8
  %79 = udiv i32 %76, 8
  %80 = getelementptr inbounds float, ptr %arg1, i32 %76
  %81 = load float, ptr %80, align 4, !invariant.load !297
  br label %concatenate.3.merge8

concatenate.pivot.16.11:                          ; preds = %concatenate.3.merge2
  %82 = icmp ult i32 %10, 16
  br i1 %82, label %concatenate.pivot.0.12, label %concatenate.pivot.16.13

concatenate.pivot.0.12:                           ; preds = %concatenate.pivot.16.11
  br label %concat_index_from_operand_id09

concatenate.pivot.16.13:                          ; preds = %concatenate.pivot.16.11
  br label %concat_index_from_operand_id110

concatenate.3.merge8:                             ; preds = %concat_index_from_operand_id110, %concat_index_from_operand_id09
  %83 = phi float [ %71, %concat_index_from_operand_id09 ], [ %81, %concat_index_from_operand_id110 ]
  %84 = getelementptr inbounds float, ptr %arg2, i32 %linear_index2
  store float %83, ptr %84, align 4
  br label %concatenate.pivot.16.17

concat_index_from_operand_id015:                  ; preds = %concatenate.pivot.0.18
  %85 = phi i32 [ 0, %concatenate.pivot.0.18 ]
  %86 = sub nsw i32 %13, %85
  %87 = udiv i32 %linear_index3, 24
  %88 = mul i32 %87, 16
  %89 = add i32 %88, %86
  %90 = udiv i32 %89, 1
  %91 = urem i32 %90, 16
  %92 = udiv i32 %89, 16
  %93 = getelementptr inbounds float, ptr %arg0, i32 %89
  %94 = load float, ptr %93, align 4, !invariant.load !297
  br label %concatenate.3.merge14

concat_index_from_operand_id116:                  ; preds = %concatenate.pivot.16.19
  %95 = phi i32 [ 16, %concatenate.pivot.16.19 ]
  %96 = sub nsw i32 %13, %95
  %97 = udiv i32 %linear_index3, 24
  %98 = mul i32 %97, 8
  %99 = add i32 %98, %96
  %100 = udiv i32 %99, 1
  %101 = urem i32 %100, 8
  %102 = udiv i32 %99, 8
  %103 = getelementptr inbounds float, ptr %arg1, i32 %99
  %104 = load float, ptr %103, align 4, !invariant.load !297
  br label %concatenate.3.merge14

concatenate.pivot.16.17:                          ; preds = %concatenate.3.merge8
  %105 = icmp ult i32 %13, 16
  br i1 %105, label %concatenate.pivot.0.18, label %concatenate.pivot.16.19

concatenate.pivot.0.18:                           ; preds = %concatenate.pivot.16.17
  br label %concat_index_from_operand_id015

concatenate.pivot.16.19:                          ; preds = %concatenate.pivot.16.17
  br label %concat_index_from_operand_id116

concatenate.3.merge14:                            ; preds = %concat_index_from_operand_id116, %concat_index_from_operand_id015
  %106 = phi float [ %94, %concat_index_from_operand_id015 ], [ %104, %concat_index_from_operand_id116 ]
  %107 = getelementptr inbounds float, ptr %arg2, i32 %linear_index3
  store float %106, ptr %107, align 4
  br label %concatenate_106.in_bounds-after
}

define void @fusion_380(ptr noalias align 16 dereferenceable(32768) %arg0, ptr noalias align 16 dereferenceable(32768) %arg1, ptr noalias align 16 dereferenceable(32768) %arg2, ptr noalias align 16 dereferenceable(32768) %arg3, ptr noalias align 16 dereferenceable(32768) %arg4, ptr noalias align 16 dereferenceable(32768) %arg5, ptr noalias align 16 dereferenceable(32768) %arg6, ptr noalias align 16 dereferenceable(32768) %arg7, ptr noalias align 128 dereferenceable(4) %arg8, ptr noalias align 128 dereferenceable(4) %arg9, ptr noalias align 128 dereferenceable(4) %arg10, ptr noalias align 128 dereferenceable(4) %arg11, ptr noalias align 128 dereferenceable(4) %arg12, ptr noalias align 128 dereferenceable(4) %arg13, ptr noalias align 128 dereferenceable(4) %arg14, ptr noalias align 128 dereferenceable(4) %arg15, ptr noalias align 128 dereferenceable(4) %arg16, ptr noalias align 128 dereferenceable(4) %arg17, ptr noalias align 128 dereferenceable(4) %arg18, ptr noalias align 16 dereferenceable(32768) %arg19, ptr noalias align 128 dereferenceable(4) %arg20, ptr noalias align 128 dereferenceable(32768) %arg21, ptr noalias align 128 dereferenceable(4) %arg22, ptr noalias align 128 dereferenceable(4) %arg23, ptr noalias align 128 dereferenceable(4) %arg24, ptr noalias align 128 dereferenceable(4) %arg25, ptr noalias align 16 dereferenceable(32768) %arg26, ptr noalias align 16 dereferenceable(32768) %arg27, ptr noalias align 16 dereferenceable(32768) %arg28, ptr noalias align 16 dereferenceable(32768) %arg29, ptr noalias align 128 dereferenceable(4) %arg30, ptr noalias align 16 dereferenceable(32768) %arg31, ptr noalias align 16 dereferenceable(32768) %arg32, ptr noalias align 16 dereferenceable(32768) %arg33, ptr noalias align 16 dereferenceable(32768) %arg34, ptr noalias align 16 dereferenceable(32768) %arg35, ptr noalias align 16 dereferenceable(32768) %arg36, ptr noalias align 16 dereferenceable(32768) %arg37, ptr noalias align 16 dereferenceable(32768) %arg38, ptr noalias align 16 dereferenceable(32768) %arg39, ptr noalias align 16 dereferenceable(32768) %arg40, ptr noalias align 16 dereferenceable(32768) %arg41, ptr noalias align 16 dereferenceable(32768) %arg42, ptr noalias align 16 dereferenceable(32768) %arg43, ptr noalias align 16 dereferenceable(32768) %arg44, ptr noalias align 16 dereferenceable(32768) %arg45, ptr noalias align 16 dereferenceable(32768) %arg46, ptr noalias align 128 dereferenceable(1966080) %arg47) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !364
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 491520
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 1
  %5 = udiv i32 %linear_index, 1
  %6 = urem i32 %5, 8192
  %7 = udiv i32 %linear_index, 8192
  %8 = icmp ult i32 %linear_index, 491520
  br i1 %8, label %fusion_380.in_bounds-true, label %fusion_380.in_bounds-after

fusion_380.in_bounds-after:                       ; preds = %concatenate.270.merge, %entry
  ret void

fusion_380.in_bounds-true:                        ; preds = %entry
  br label %concatenate.pivot.30.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.8.69, %concatenate.pivot.5.66, %concatenate.pivot.3.64, %concatenate.pivot.2.63, %concatenate.pivot.1.62, %concatenate.pivot.0.
  %9 = phi i32 [ 0, %concatenate.pivot.0. ], [ 1, %concatenate.pivot.1.62 ], [ 2, %concatenate.pivot.2.63 ], [ 3, %concatenate.pivot.3.64 ], [ 5, %concatenate.pivot.5.66 ], [ 8, %concatenate.pivot.8.69 ]
  %10 = sub nsw i32 %7, %9
  %11 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg31, i32 0, i32 %6, i32 0
  %12 = load i32, ptr %11, align 4, !invariant.load !297
  %13 = sitofp i32 %12 to float
  %14 = load float, ptr %arg30, align 4, !invariant.load !297
  %compare.50 = fcmp ogt float %13, %14
  %15 = zext i1 %compare.50 to i8
  %region_0_271_constant_51 = load float, ptr @9, align 4
  %16 = trunc i8 %15 to i1
  %17 = select i1 %16, float %region_0_271_constant_51, float %14
  br label %concatenate.270.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.4.65
  %18 = phi i32 [ 4, %concatenate.pivot.4.65 ]
  %19 = sub nsw i32 %7, %18
  %20 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg31, i32 0, i32 %6, i32 0
  %21 = load i32, ptr %20, align 4, !invariant.load !297
  %22 = sitofp i32 %21 to float
  %23 = load float, ptr %arg30, align 4, !invariant.load !297
  %compare.501 = fcmp ogt float %22, %23
  %24 = zext i1 %compare.501 to i8
  %region_0_271_constant_512 = load float, ptr @9, align 4
  %25 = trunc i8 %24 to i1
  %26 = select i1 %25, float %region_0_271_constant_512, float %23
  %27 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg29, i32 0, i32 %6, i32 0
  %28 = load i32, ptr %27, align 4, !invariant.load !297
  %29 = sitofp i32 %28 to float
  %region_0_271_constant_56 = load float, ptr @20, align 4
  %compare.58 = fcmp ogt float %29, %region_0_271_constant_56
  %30 = zext i1 %compare.58 to i8
  %31 = trunc i8 %30 to i1
  %32 = select i1 %31, float %region_0_271_constant_512, float %23
  %add.60 = fadd float %26, %32
  %compare.61 = fcmp ogt float %add.60, %region_0_271_constant_512
  %33 = zext i1 %compare.61 to i8
  %34 = trunc i8 %33 to i1
  %35 = select i1 %34, float %region_0_271_constant_512, float %23
  br label %concatenate.270.merge

concat_index_from_operand_id2:                    ; preds = %concatenate.pivot.6.67
  %36 = phi i32 [ 6, %concatenate.pivot.6.67 ]
  %37 = sub nsw i32 %7, %36
  %38 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg31, i32 0, i32 %6, i32 0
  %39 = load i32, ptr %38, align 4, !invariant.load !297
  %40 = sitofp i32 %39 to float
  %41 = load float, ptr %arg30, align 4, !invariant.load !297
  %compare.503 = fcmp ogt float %40, %41
  %42 = zext i1 %compare.503 to i8
  %region_0_271_constant_514 = load float, ptr @9, align 4
  %43 = trunc i8 %42 to i1
  %44 = select i1 %43, float %region_0_271_constant_514, float %41
  %45 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg45, i32 0, i32 %6, i32 0
  %46 = load i32, ptr %45, align 4, !invariant.load !297
  %47 = sitofp i32 %46 to float
  %48 = fptosi float %47 to i32
  %49 = fcmp ole float %47, 0xC1E0000000000000
  %50 = select i1 %49, i32 -2147483648, i32 %48
  %51 = fcmp oge float %47, 0x41E0000000000000
  %52 = select i1 %51, i32 2147483647, i32 %50
  %53 = fcmp uno float %47, %47
  %54 = select i1 %53, i32 0, i32 %52
  %region_0_271_constant_66 = load i32, ptr @19, align 4
  %55 = and i32 %54, %region_0_271_constant_66
  %region_0_271_constant_69 = load i32, ptr @11, align 4
  %56 = icmp eq i32 %55, %region_0_271_constant_69
  %57 = zext i1 %56 to i8
  %region_0_271_constant_72 = load float, ptr @10, align 4
  %58 = trunc i8 %57 to i1
  %59 = select i1 %58, float %region_0_271_constant_72, float %region_0_271_constant_514
  %60 = fcmp ole float %44, %59
  %61 = fcmp une float %44, %44
  %62 = or i1 %60, %61
  %minimum.75 = select i1 %62, float %44, float %59
  br label %concatenate.270.merge

concat_index_from_operand_id3:                    ; preds = %concatenate.pivot.7.68
  %63 = phi i32 [ 7, %concatenate.pivot.7.68 ]
  %64 = sub nsw i32 %7, %63
  %65 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg31, i32 0, i32 %6, i32 0
  %66 = load i32, ptr %65, align 4, !invariant.load !297
  %67 = sitofp i32 %66 to float
  %68 = load float, ptr %arg30, align 4, !invariant.load !297
  %compare.505 = fcmp ogt float %67, %68
  %69 = zext i1 %compare.505 to i8
  %region_0_271_constant_516 = load float, ptr @9, align 4
  %70 = trunc i8 %69 to i1
  %71 = select i1 %70, float %region_0_271_constant_516, float %68
  %72 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg40, i32 0, i32 %6, i32 0
  %73 = load i32, ptr %72, align 4, !invariant.load !297
  %74 = sitofp i32 %73 to float
  %75 = fcmp ole float %71, %74
  %76 = fcmp une float %71, %71
  %77 = or i1 %75, %76
  %minimum.78 = select i1 %77, float %71, float %74
  br label %concatenate.270.merge

concat_index_from_operand_id4:                    ; preds = %concatenate.pivot.11.72, %concatenate.pivot.9.70
  %78 = phi i32 [ 9, %concatenate.pivot.9.70 ], [ 11, %concatenate.pivot.11.72 ]
  %79 = sub nsw i32 %7, %78
  %80 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg45, i32 0, i32 %6, i32 0
  %81 = load i32, ptr %80, align 4, !invariant.load !297
  %82 = sitofp i32 %81 to float
  %83 = fptosi float %82 to i32
  %84 = fcmp ole float %82, 0xC1E0000000000000
  %85 = select i1 %84, i32 -2147483648, i32 %83
  %86 = fcmp oge float %82, 0x41E0000000000000
  %87 = select i1 %86, i32 2147483647, i32 %85
  %88 = fcmp uno float %82, %82
  %89 = select i1 %88, i32 0, i32 %87
  %region_0_271_constant_80 = load i32, ptr @14, align 4
  %90 = and i32 %89, %region_0_271_constant_80
  %region_0_271_constant_697 = load i32, ptr @11, align 4
  %91 = icmp eq i32 %90, %region_0_271_constant_697
  %92 = zext i1 %91 to i8
  %region_0_271_constant_728 = load float, ptr @10, align 4
  %region_0_271_constant_519 = load float, ptr @9, align 4
  %93 = trunc i8 %92 to i1
  %94 = select i1 %93, float %region_0_271_constant_728, float %region_0_271_constant_519
  br label %concatenate.270.merge

concat_index_from_operand_id5:                    ; preds = %concatenate.pivot.10.71
  %95 = phi i32 [ 10, %concatenate.pivot.10.71 ]
  %96 = sub nsw i32 %7, %95
  %97 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg45, i32 0, i32 %6, i32 0
  %98 = load i32, ptr %97, align 4, !invariant.load !297
  %99 = sitofp i32 %98 to float
  %100 = fptosi float %99 to i32
  %101 = fcmp ole float %99, 0xC1E0000000000000
  %102 = select i1 %101, i32 -2147483648, i32 %100
  %103 = fcmp oge float %99, 0x41E0000000000000
  %104 = select i1 %103, i32 2147483647, i32 %102
  %105 = fcmp uno float %99, %99
  %106 = select i1 %105, i32 0, i32 %104
  %region_0_271_constant_8010 = load i32, ptr @14, align 4
  %107 = and i32 %106, %region_0_271_constant_8010
  %region_0_271_constant_6911 = load i32, ptr @11, align 4
  %108 = icmp eq i32 %107, %region_0_271_constant_6911
  %109 = zext i1 %108 to i8
  %region_0_271_constant_7212 = load float, ptr @10, align 4
  %region_0_271_constant_5113 = load float, ptr @9, align 4
  %110 = trunc i8 %109 to i1
  %111 = select i1 %110, float %region_0_271_constant_7212, float %region_0_271_constant_5113
  %region_0_271_constant_86 = load float, ptr @13, align 4
  %multiply.88 = fmul float %111, %region_0_271_constant_86
  br label %concatenate.270.merge

concat_index_from_operand_id6:                    ; preds = %concatenate.pivot.31.92, %concatenate.pivot.20.81, %concatenate.pivot.19.80, %concatenate.pivot.18.79, %concatenate.pivot.12.73
  %112 = phi i32 [ 12, %concatenate.pivot.12.73 ], [ 18, %concatenate.pivot.18.79 ], [ 19, %concatenate.pivot.19.80 ], [ 20, %concatenate.pivot.20.81 ], [ 31, %concatenate.pivot.31.92 ]
  %113 = sub nsw i32 %7, %112
  %114 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg40, i32 0, i32 %6, i32 0
  %115 = load i32, ptr %114, align 4, !invariant.load !297
  %116 = sitofp i32 %115 to float
  %117 = getelementptr inbounds [8192 x [1 x float]], ptr %arg21, i32 0, i32 %6, i32 0
  %118 = load float, ptr %117, align 4, !invariant.load !297
  %119 = fcmp oge float %116, %118
  %120 = fcmp une float %116, %116
  %121 = or i1 %119, %120
  %maximum.90 = select i1 %121, float %116, float %118
  br label %concatenate.270.merge

concat_index_from_operand_id7:                    ; preds = %concatenate.pivot.13.74
  %122 = phi i32 [ 13, %concatenate.pivot.13.74 ]
  %123 = sub nsw i32 %7, %122
  %124 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg34, i32 0, i32 %6, i32 0
  %125 = load i32, ptr %124, align 4, !invariant.load !297
  %126 = sitofp i32 %125 to float
  %127 = load float, ptr %arg30, align 4, !invariant.load !297
  %compare.93 = fcmp ogt float %126, %127
  %128 = zext i1 %compare.93 to i8
  %129 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg40, i32 0, i32 %6, i32 0
  %130 = load i32, ptr %129, align 4, !invariant.load !297
  %131 = sitofp i32 %130 to float
  %132 = getelementptr inbounds [8192 x [1 x float]], ptr %arg21, i32 0, i32 %6, i32 0
  %133 = load float, ptr %132, align 4, !invariant.load !297
  %134 = fcmp oge float %131, %133
  %135 = fcmp une float %131, %131
  %136 = or i1 %134, %135
  %maximum.9014 = select i1 %136, float %131, float %133
  %region_0_271_constant_94 = load float, ptr @18, align 4
  %multiply.96 = fmul float %maximum.9014, %region_0_271_constant_94
  %137 = trunc i8 %128 to i1
  %138 = select i1 %137, float %multiply.96, float %maximum.9014
  br label %concatenate.270.merge

concat_index_from_operand_id8:                    ; preds = %concatenate.pivot.14.75
  %139 = phi i32 [ 14, %concatenate.pivot.14.75 ]
  %140 = sub nsw i32 %7, %139
  %141 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg35, i32 0, i32 %6, i32 0
  %142 = load i32, ptr %141, align 4, !invariant.load !297
  %143 = sitofp i32 %142 to float
  %144 = load float, ptr %arg30, align 4, !invariant.load !297
  %compare.100 = fcmp ogt float %143, %144
  %145 = zext i1 %compare.100 to i8
  %146 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg40, i32 0, i32 %6, i32 0
  %147 = load i32, ptr %146, align 4, !invariant.load !297
  %148 = sitofp i32 %147 to float
  %149 = getelementptr inbounds [8192 x [1 x float]], ptr %arg21, i32 0, i32 %6, i32 0
  %150 = load float, ptr %149, align 4, !invariant.load !297
  %151 = fcmp oge float %148, %150
  %152 = fcmp une float %148, %148
  %153 = or i1 %151, %152
  %maximum.9015 = select i1 %153, float %148, float %150
  %region_0_271_constant_101 = load float, ptr @17, align 4
  %multiply.103 = fmul float %maximum.9015, %region_0_271_constant_101
  %154 = trunc i8 %145 to i1
  %155 = select i1 %154, float %multiply.103, float %maximum.9015
  br label %concatenate.270.merge

concat_index_from_operand_id9:                    ; preds = %concatenate.pivot.15.76
  %156 = phi i32 [ 15, %concatenate.pivot.15.76 ]
  %157 = sub nsw i32 %7, %156
  %158 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg36, i32 0, i32 %6, i32 0
  %159 = load i32, ptr %158, align 4, !invariant.load !297
  %160 = sitofp i32 %159 to float
  %161 = load float, ptr %arg30, align 4, !invariant.load !297
  %compare.107 = fcmp ogt float %160, %161
  %162 = zext i1 %compare.107 to i8
  %163 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg40, i32 0, i32 %6, i32 0
  %164 = load i32, ptr %163, align 4, !invariant.load !297
  %165 = sitofp i32 %164 to float
  %166 = getelementptr inbounds [8192 x [1 x float]], ptr %arg21, i32 0, i32 %6, i32 0
  %167 = load float, ptr %166, align 4, !invariant.load !297
  %168 = fcmp oge float %165, %167
  %169 = fcmp une float %165, %165
  %170 = or i1 %168, %169
  %maximum.9016 = select i1 %170, float %165, float %167
  %region_0_271_constant_10117 = load float, ptr @17, align 4
  %multiply.10318 = fmul float %maximum.9016, %region_0_271_constant_10117
  %171 = trunc i8 %162 to i1
  %172 = select i1 %171, float %multiply.10318, float %maximum.9016
  br label %concatenate.270.merge

concat_index_from_operand_id10:                   ; preds = %concatenate.pivot.16.77
  %173 = phi i32 [ 16, %concatenate.pivot.16.77 ]
  %174 = sub nsw i32 %7, %173
  %175 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg37, i32 0, i32 %6, i32 0
  %176 = load i32, ptr %175, align 4, !invariant.load !297
  %177 = sitofp i32 %176 to float
  %178 = load float, ptr %arg30, align 4, !invariant.load !297
  %compare.111 = fcmp ogt float %177, %178
  %179 = zext i1 %compare.111 to i8
  %180 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg40, i32 0, i32 %6, i32 0
  %181 = load i32, ptr %180, align 4, !invariant.load !297
  %182 = sitofp i32 %181 to float
  %183 = getelementptr inbounds [8192 x [1 x float]], ptr %arg21, i32 0, i32 %6, i32 0
  %184 = load float, ptr %183, align 4, !invariant.load !297
  %185 = fcmp oge float %182, %184
  %186 = fcmp une float %182, %182
  %187 = or i1 %185, %186
  %maximum.9019 = select i1 %187, float %182, float %184
  %region_0_271_constant_10120 = load float, ptr @17, align 4
  %multiply.10321 = fmul float %maximum.9019, %region_0_271_constant_10120
  %188 = trunc i8 %179 to i1
  %189 = select i1 %188, float %multiply.10321, float %maximum.9019
  br label %concatenate.270.merge

concat_index_from_operand_id11:                   ; preds = %concatenate.pivot.17.78
  %190 = phi i32 [ 17, %concatenate.pivot.17.78 ]
  %191 = sub nsw i32 %7, %190
  %192 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg28, i32 0, i32 %6, i32 0
  %193 = load i32, ptr %192, align 4, !invariant.load !297
  %194 = sitofp i32 %193 to float
  br label %concatenate.270.merge

concat_index_from_operand_id12:                   ; preds = %concatenate.pivot.21.82
  %195 = phi i32 [ 21, %concatenate.pivot.21.82 ]
  %196 = sub nsw i32 %7, %195
  %197 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg38, i32 0, i32 %6, i32 0
  %198 = load i32, ptr %197, align 4, !invariant.load !297
  %199 = sitofp i32 %198 to float
  %200 = load float, ptr %arg30, align 4, !invariant.load !297
  %compare.117 = fcmp ogt float %199, %200
  %201 = zext i1 %compare.117 to i8
  %202 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg33, i32 0, i32 %6, i32 0
  %203 = load i32, ptr %202, align 4, !invariant.load !297
  %204 = sitofp i32 %203 to float
  %205 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg34, i32 0, i32 %6, i32 0
  %206 = load i32, ptr %205, align 4, !invariant.load !297
  %207 = sitofp i32 %206 to float
  %add.119 = fadd float %204, %207
  %208 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg37, i32 0, i32 %6, i32 0
  %209 = load i32, ptr %208, align 4, !invariant.load !297
  %210 = sitofp i32 %209 to float
  %add.120 = fadd float %add.119, %210
  %211 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg32, i32 0, i32 %6, i32 0
  %212 = load i32, ptr %211, align 4, !invariant.load !297
  %213 = sitofp i32 %212 to float
  %add.122 = fadd float %add.120, %213
  %add.123 = fadd float %add.122, %199
  %compare.124 = fcmp ogt float %add.123, %200
  %214 = zext i1 %compare.124 to i8
  %region_0_271_constant_5122 = load float, ptr @9, align 4
  %215 = trunc i8 %214 to i1
  %216 = select i1 %215, float %region_0_271_constant_5122, float %200
  %region_0_271_constant_126 = load float, ptr @16, align 4
  %multiply.128 = fmul float %216, %region_0_271_constant_126
  %region_0_271_constant_129 = load float, ptr @15, align 4
  %multiply.131 = fmul float %216, %region_0_271_constant_129
  %217 = trunc i8 %201 to i1
  %218 = select i1 %217, float %multiply.128, float %multiply.131
  br label %concatenate.270.merge

concat_index_from_operand_id13:                   ; preds = %concatenate.pivot.22.83
  %219 = phi i32 [ 22, %concatenate.pivot.22.83 ]
  %220 = sub nsw i32 %7, %219
  %221 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg39, i32 0, i32 %6, i32 0
  %222 = load i32, ptr %221, align 4, !invariant.load !297
  %223 = sitofp i32 %222 to float
  %224 = load float, ptr %arg30, align 4, !invariant.load !297
  %compare.135 = fcmp ogt float %223, %224
  %225 = zext i1 %compare.135 to i8
  %226 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg33, i32 0, i32 %6, i32 0
  %227 = load i32, ptr %226, align 4, !invariant.load !297
  %228 = sitofp i32 %227 to float
  %229 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg34, i32 0, i32 %6, i32 0
  %230 = load i32, ptr %229, align 4, !invariant.load !297
  %231 = sitofp i32 %230 to float
  %add.11923 = fadd float %228, %231
  %232 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg37, i32 0, i32 %6, i32 0
  %233 = load i32, ptr %232, align 4, !invariant.load !297
  %234 = sitofp i32 %233 to float
  %add.12024 = fadd float %add.11923, %234
  %235 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg32, i32 0, i32 %6, i32 0
  %236 = load i32, ptr %235, align 4, !invariant.load !297
  %237 = sitofp i32 %236 to float
  %add.12225 = fadd float %add.12024, %237
  %add.136 = fadd float %add.12225, %223
  %compare.137 = fcmp ogt float %add.136, %224
  %238 = zext i1 %compare.137 to i8
  %region_0_271_constant_5126 = load float, ptr @9, align 4
  %239 = trunc i8 %238 to i1
  %240 = select i1 %239, float %region_0_271_constant_5126, float %224
  %region_0_271_constant_12627 = load float, ptr @16, align 4
  %multiply.139 = fmul float %240, %region_0_271_constant_12627
  %region_0_271_constant_12928 = load float, ptr @15, align 4
  %multiply.140 = fmul float %240, %region_0_271_constant_12928
  %241 = trunc i8 %225 to i1
  %242 = select i1 %241, float %multiply.139, float %multiply.140
  br label %concatenate.270.merge

concat_index_from_operand_id14:                   ; preds = %concatenate.pivot.23.84
  %243 = phi i32 [ 23, %concatenate.pivot.23.84 ]
  %244 = sub nsw i32 %7, %243
  %245 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg27, i32 0, i32 %6, i32 0
  %246 = load i32, ptr %245, align 4, !invariant.load !297
  %247 = sitofp i32 %246 to float
  %248 = load float, ptr %arg30, align 4, !invariant.load !297
  %compare.144 = fcmp ogt float %247, %248
  %249 = zext i1 %compare.144 to i8
  %region_0_271_constant_5129 = load float, ptr @9, align 4
  %250 = trunc i8 %249 to i1
  %251 = select i1 %250, float %region_0_271_constant_5129, float %248
  br label %concatenate.270.merge

concat_index_from_operand_id15:                   ; preds = %concatenate.pivot.24.85
  %252 = phi i32 [ 24, %concatenate.pivot.24.85 ]
  %253 = sub nsw i32 %7, %252
  %254 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg41, i32 0, i32 %6, i32 0
  %255 = load i32, ptr %254, align 4, !invariant.load !297
  %256 = sitofp i32 %255 to float
  br label %concatenate.270.merge

concat_index_from_operand_id16:                   ; preds = %concatenate.pivot.35.96, %concatenate.pivot.27.88, %concatenate.pivot.26.87, %concatenate.pivot.25.86
  %257 = phi i32 [ 25, %concatenate.pivot.25.86 ], [ 26, %concatenate.pivot.26.87 ], [ 27, %concatenate.pivot.27.88 ], [ 35, %concatenate.pivot.35.96 ]
  %258 = sub nsw i32 %7, %257
  %259 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg26, i32 0, i32 %6, i32 0
  %260 = load i32, ptr %259, align 4, !invariant.load !297
  %261 = sitofp i32 %260 to float
  %262 = load float, ptr %arg24, align 4, !invariant.load !297
  %263 = load float, ptr %arg25, align 4, !invariant.load !297
  %264 = fcmp oge float %262, %263
  %265 = fcmp une float %262, %262
  %266 = or i1 %264, %265
  %maximum.150 = select i1 %266, float %262, float %263
  %267 = load float, ptr %arg23, align 4, !invariant.load !297
  %268 = fcmp oge float %maximum.150, %267
  %269 = fcmp une float %maximum.150, %maximum.150
  %270 = or i1 %268, %269
  %maximum.151 = select i1 %270, float %maximum.150, float %267
  %271 = load float, ptr %arg12, align 4, !invariant.load !297
  %272 = fcmp oge float %maximum.151, %271
  %273 = fcmp une float %maximum.151, %maximum.151
  %274 = or i1 %272, %273
  %maximum.152 = select i1 %274, float %maximum.151, float %271
  %275 = load float, ptr %arg10, align 4, !invariant.load !297
  %276 = fcmp oge float %maximum.152, %275
  %277 = fcmp une float %maximum.152, %maximum.152
  %278 = or i1 %276, %277
  %maximum.153 = select i1 %278, float %maximum.152, float %275
  %279 = load float, ptr %arg9, align 4, !invariant.load !297
  %280 = fcmp oge float %maximum.153, %279
  %281 = fcmp une float %maximum.153, %maximum.153
  %282 = or i1 %280, %281
  %maximum.154 = select i1 %282, float %maximum.153, float %279
  %283 = load float, ptr %arg8, align 4, !invariant.load !297
  %284 = fcmp oge float %maximum.154, %283
  %285 = fcmp une float %maximum.154, %maximum.154
  %286 = or i1 %284, %285
  %maximum.155 = select i1 %286, float %maximum.154, float %283
  %287 = fcmp ole float %261, %maximum.155
  %288 = fcmp une float %261, %261
  %289 = or i1 %287, %288
  %minimum.157 = select i1 %289, float %261, float %maximum.155
  br label %concatenate.270.merge

concat_index_from_operand_id17:                   ; preds = %concatenate.pivot.40.101, %concatenate.pivot.28.89
  %290 = phi i32 [ 28, %concatenate.pivot.28.89 ], [ 40, %concatenate.pivot.40.101 ]
  %291 = sub nsw i32 %7, %290
  %292 = getelementptr inbounds [8192 x [1 x float]], ptr %arg21, i32 0, i32 %6, i32 0
  %293 = load float, ptr %292, align 4, !invariant.load !297
  %294 = load float, ptr %arg22, align 4, !invariant.load !297
  %295 = load float, ptr %arg12, align 4, !invariant.load !297
  %296 = fcmp oge float %294, %295
  %297 = fcmp une float %294, %294
  %298 = or i1 %296, %297
  %maximum.159 = select i1 %298, float %294, float %295
  %299 = load float, ptr %arg10, align 4, !invariant.load !297
  %300 = fcmp oge float %maximum.159, %299
  %301 = fcmp une float %maximum.159, %maximum.159
  %302 = or i1 %300, %301
  %maximum.160 = select i1 %302, float %maximum.159, float %299
  %303 = load float, ptr %arg9, align 4, !invariant.load !297
  %304 = fcmp oge float %maximum.160, %303
  %305 = fcmp une float %maximum.160, %maximum.160
  %306 = or i1 %304, %305
  %maximum.161 = select i1 %306, float %maximum.160, float %303
  %307 = load float, ptr %arg8, align 4, !invariant.load !297
  %308 = fcmp oge float %maximum.161, %307
  %309 = fcmp une float %maximum.161, %maximum.161
  %310 = or i1 %308, %309
  %maximum.162 = select i1 %310, float %maximum.161, float %307
  %311 = fcmp ole float %293, %maximum.162
  %312 = fcmp une float %293, %293
  %313 = or i1 %311, %312
  %minimum.164 = select i1 %313, float %293, float %maximum.162
  br label %concatenate.270.merge

concat_index_from_operand_id18:                   ; preds = %concatenate.pivot.29.90
  %314 = phi i32 [ 29, %concatenate.pivot.29.90 ]
  %315 = sub nsw i32 %7, %314
  %316 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg40, i32 0, i32 %6, i32 0
  %317 = load i32, ptr %316, align 4, !invariant.load !297
  %318 = sitofp i32 %317 to float
  %319 = getelementptr inbounds [8192 x [1 x float]], ptr %arg21, i32 0, i32 %6, i32 0
  %320 = load float, ptr %319, align 4, !invariant.load !297
  %321 = fcmp oge float %318, %320
  %322 = fcmp une float %318, %318
  %323 = or i1 %321, %322
  %maximum.9030 = select i1 %323, float %318, float %320
  %324 = load float, ptr %arg20, align 4, !invariant.load !297
  %325 = load float, ptr %arg12, align 4, !invariant.load !297
  %326 = fcmp oge float %324, %325
  %327 = fcmp une float %324, %324
  %328 = or i1 %326, %327
  %maximum.166 = select i1 %328, float %324, float %325
  %329 = load float, ptr %arg10, align 4, !invariant.load !297
  %330 = fcmp oge float %maximum.166, %329
  %331 = fcmp une float %maximum.166, %maximum.166
  %332 = or i1 %330, %331
  %maximum.167 = select i1 %332, float %maximum.166, float %329
  %333 = load float, ptr %arg9, align 4, !invariant.load !297
  %334 = fcmp oge float %maximum.167, %333
  %335 = fcmp une float %maximum.167, %maximum.167
  %336 = or i1 %334, %335
  %maximum.168 = select i1 %336, float %maximum.167, float %333
  %337 = load float, ptr %arg8, align 4, !invariant.load !297
  %338 = fcmp oge float %maximum.168, %337
  %339 = fcmp une float %maximum.168, %maximum.168
  %340 = or i1 %338, %339
  %maximum.169 = select i1 %340, float %maximum.168, float %337
  %341 = fcmp ole float %maximum.9030, %maximum.169
  %342 = fcmp une float %maximum.9030, %maximum.9030
  %343 = or i1 %341, %342
  %minimum.171 = select i1 %343, float %maximum.9030, float %maximum.169
  br label %concatenate.270.merge

concat_index_from_operand_id19:                   ; preds = %concatenate.pivot.30.91
  %344 = phi i32 [ 30, %concatenate.pivot.30.91 ]
  %345 = sub nsw i32 %7, %344
  %346 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg45, i32 0, i32 %6, i32 0
  %347 = load i32, ptr %346, align 4, !invariant.load !297
  %348 = sitofp i32 %347 to float
  %349 = fptosi float %348 to i32
  %350 = fcmp ole float %348, 0xC1E0000000000000
  %351 = select i1 %350, i32 -2147483648, i32 %349
  %352 = fcmp oge float %348, 0x41E0000000000000
  %353 = select i1 %352, i32 2147483647, i32 %351
  %354 = fcmp uno float %348, %348
  %355 = select i1 %354, i32 0, i32 %353
  %region_0_271_constant_173 = load i32, ptr @12, align 4
  %356 = and i32 %355, %region_0_271_constant_173
  %region_0_271_constant_6931 = load i32, ptr @11, align 4
  %357 = icmp eq i32 %356, %region_0_271_constant_6931
  %358 = zext i1 %357 to i8
  %region_0_271_constant_7232 = load float, ptr @10, align 4
  %region_0_271_constant_5133 = load float, ptr @9, align 4
  %359 = trunc i8 %358 to i1
  %360 = select i1 %359, float %region_0_271_constant_7232, float %region_0_271_constant_5133
  %region_0_271_constant_8034 = load i32, ptr @14, align 4
  %361 = and i32 %355, %region_0_271_constant_8034
  %362 = icmp eq i32 %361, %region_0_271_constant_6931
  %363 = zext i1 %362 to i8
  %364 = trunc i8 %363 to i1
  %365 = select i1 %364, float %region_0_271_constant_7232, float %region_0_271_constant_5133
  %366 = fcmp oge float %360, %365
  %367 = fcmp une float %360, %360
  %368 = or i1 %366, %367
  %maximum.178 = select i1 %368, float %360, float %365
  br label %concatenate.270.merge

concat_index_from_operand_id20:                   ; preds = %concatenate.pivot.32.93
  %369 = phi i32 [ 32, %concatenate.pivot.32.93 ]
  %370 = sub nsw i32 %7, %369
  %371 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg19, i32 0, i32 %6, i32 0
  %372 = load i32, ptr %371, align 4, !invariant.load !297
  %373 = sitofp i32 %372 to float
  br label %concatenate.270.merge

concat_index_from_operand_id21:                   ; preds = %concatenate.pivot.33.94
  %374 = phi i32 [ 33, %concatenate.pivot.33.94 ]
  %375 = sub nsw i32 %7, %374
  %376 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg44, i32 0, i32 %6, i32 0
  %377 = load i32, ptr %376, align 4, !invariant.load !297
  %378 = sitofp i32 %377 to float
  br label %concatenate.270.merge

concat_index_from_operand_id22:                   ; preds = %concatenate.pivot.34.95
  %379 = phi i32 [ 34, %concatenate.pivot.34.95 ]
  %380 = sub nsw i32 %7, %379
  %381 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg45, i32 0, i32 %6, i32 0
  %382 = load i32, ptr %381, align 4, !invariant.load !297
  %383 = sitofp i32 %382 to float
  %384 = fptosi float %383 to i32
  %385 = fcmp ole float %383, 0xC1E0000000000000
  %386 = select i1 %385, i32 -2147483648, i32 %384
  %387 = fcmp oge float %383, 0x41E0000000000000
  %388 = select i1 %387, i32 2147483647, i32 %386
  %389 = fcmp uno float %383, %383
  %390 = select i1 %389, i32 0, i32 %388
  %region_0_271_constant_17335 = load i32, ptr @12, align 4
  %391 = and i32 %390, %region_0_271_constant_17335
  %region_0_271_constant_6936 = load i32, ptr @11, align 4
  %392 = icmp eq i32 %391, %region_0_271_constant_6936
  %393 = zext i1 %392 to i8
  %region_0_271_constant_7237 = load float, ptr @10, align 4
  %region_0_271_constant_5138 = load float, ptr @9, align 4
  %394 = trunc i8 %393 to i1
  %395 = select i1 %394, float %region_0_271_constant_7237, float %region_0_271_constant_5138
  %396 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg31, i32 0, i32 %6, i32 0
  %397 = load i32, ptr %396, align 4, !invariant.load !297
  %398 = sitofp i32 %397 to float
  %399 = load float, ptr %arg30, align 4, !invariant.load !297
  %compare.5039 = fcmp ogt float %398, %399
  %400 = zext i1 %compare.5039 to i8
  %401 = trunc i8 %400 to i1
  %402 = select i1 %401, float %region_0_271_constant_5138, float %399
  %403 = fcmp ole float %395, %402
  %404 = fcmp une float %395, %395
  %405 = or i1 %403, %404
  %minimum.184 = select i1 %405, float %395, float %402
  br label %concatenate.270.merge

concat_index_from_operand_id23:                   ; preds = %concatenate.pivot.36.97
  %406 = phi i32 [ 36, %concatenate.pivot.36.97 ]
  %407 = sub nsw i32 %7, %406
  %408 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg40, i32 0, i32 %6, i32 0
  %409 = load i32, ptr %408, align 4, !invariant.load !297
  %410 = sitofp i32 %409 to float
  %411 = getelementptr inbounds [8192 x [1 x float]], ptr %arg21, i32 0, i32 %6, i32 0
  %412 = load float, ptr %411, align 4, !invariant.load !297
  %413 = fcmp oge float %410, %412
  %414 = fcmp une float %410, %410
  %415 = or i1 %413, %414
  %maximum.9040 = select i1 %415, float %410, float %412
  %416 = load float, ptr %arg18, align 4, !invariant.load !297
  %417 = load float, ptr %arg12, align 4, !invariant.load !297
  %418 = fcmp oge float %416, %417
  %419 = fcmp une float %416, %416
  %420 = or i1 %418, %419
  %maximum.186 = select i1 %420, float %416, float %417
  %421 = load float, ptr %arg10, align 4, !invariant.load !297
  %422 = fcmp oge float %maximum.186, %421
  %423 = fcmp une float %maximum.186, %maximum.186
  %424 = or i1 %422, %423
  %maximum.187 = select i1 %424, float %maximum.186, float %421
  %425 = load float, ptr %arg9, align 4, !invariant.load !297
  %426 = fcmp oge float %maximum.187, %425
  %427 = fcmp une float %maximum.187, %maximum.187
  %428 = or i1 %426, %427
  %maximum.188 = select i1 %428, float %maximum.187, float %425
  %429 = load float, ptr %arg8, align 4, !invariant.load !297
  %430 = fcmp oge float %maximum.188, %429
  %431 = fcmp une float %maximum.188, %maximum.188
  %432 = or i1 %430, %431
  %maximum.189 = select i1 %432, float %maximum.188, float %429
  %433 = fcmp ole float %maximum.9040, %maximum.189
  %434 = fcmp une float %maximum.9040, %maximum.9040
  %435 = or i1 %433, %434
  %minimum.191 = select i1 %435, float %maximum.9040, float %maximum.189
  br label %concatenate.270.merge

concat_index_from_operand_id24:                   ; preds = %concatenate.pivot.37.98
  %436 = phi i32 [ 37, %concatenate.pivot.37.98 ]
  %437 = sub nsw i32 %7, %436
  %438 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg40, i32 0, i32 %6, i32 0
  %439 = load i32, ptr %438, align 4, !invariant.load !297
  %440 = sitofp i32 %439 to float
  %441 = getelementptr inbounds [8192 x [1 x float]], ptr %arg21, i32 0, i32 %6, i32 0
  %442 = load float, ptr %441, align 4, !invariant.load !297
  %443 = fcmp oge float %440, %442
  %444 = fcmp une float %440, %440
  %445 = or i1 %443, %444
  %maximum.9041 = select i1 %445, float %440, float %442
  %446 = load float, ptr %arg17, align 4, !invariant.load !297
  %447 = load float, ptr %arg12, align 4, !invariant.load !297
  %448 = fcmp oge float %446, %447
  %449 = fcmp une float %446, %446
  %450 = or i1 %448, %449
  %maximum.193 = select i1 %450, float %446, float %447
  %451 = load float, ptr %arg10, align 4, !invariant.load !297
  %452 = fcmp oge float %maximum.193, %451
  %453 = fcmp une float %maximum.193, %maximum.193
  %454 = or i1 %452, %453
  %maximum.194 = select i1 %454, float %maximum.193, float %451
  %455 = load float, ptr %arg9, align 4, !invariant.load !297
  %456 = fcmp oge float %maximum.194, %455
  %457 = fcmp une float %maximum.194, %maximum.194
  %458 = or i1 %456, %457
  %maximum.195 = select i1 %458, float %maximum.194, float %455
  %459 = load float, ptr %arg8, align 4, !invariant.load !297
  %460 = fcmp oge float %maximum.195, %459
  %461 = fcmp une float %maximum.195, %maximum.195
  %462 = or i1 %460, %461
  %maximum.196 = select i1 %462, float %maximum.195, float %459
  %463 = fcmp ole float %maximum.9041, %maximum.196
  %464 = fcmp une float %maximum.9041, %maximum.9041
  %465 = or i1 %463, %464
  %minimum.198 = select i1 %465, float %maximum.9041, float %maximum.196
  br label %concatenate.270.merge

concat_index_from_operand_id25:                   ; preds = %concatenate.pivot.38.99
  %466 = phi i32 [ 38, %concatenate.pivot.38.99 ]
  %467 = sub nsw i32 %7, %466
  %468 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg40, i32 0, i32 %6, i32 0
  %469 = load i32, ptr %468, align 4, !invariant.load !297
  %470 = sitofp i32 %469 to float
  %471 = getelementptr inbounds [8192 x [1 x float]], ptr %arg21, i32 0, i32 %6, i32 0
  %472 = load float, ptr %471, align 4, !invariant.load !297
  %473 = fcmp oge float %470, %472
  %474 = fcmp une float %470, %470
  %475 = or i1 %473, %474
  %maximum.9042 = select i1 %475, float %470, float %472
  %476 = load float, ptr %arg16, align 4, !invariant.load !297
  %477 = load float, ptr %arg12, align 4, !invariant.load !297
  %478 = fcmp oge float %476, %477
  %479 = fcmp une float %476, %476
  %480 = or i1 %478, %479
  %maximum.200 = select i1 %480, float %476, float %477
  %481 = load float, ptr %arg10, align 4, !invariant.load !297
  %482 = fcmp oge float %maximum.200, %481
  %483 = fcmp une float %maximum.200, %maximum.200
  %484 = or i1 %482, %483
  %maximum.201 = select i1 %484, float %maximum.200, float %481
  %485 = load float, ptr %arg9, align 4, !invariant.load !297
  %486 = fcmp oge float %maximum.201, %485
  %487 = fcmp une float %maximum.201, %maximum.201
  %488 = or i1 %486, %487
  %maximum.202 = select i1 %488, float %maximum.201, float %485
  %489 = load float, ptr %arg8, align 4, !invariant.load !297
  %490 = fcmp oge float %maximum.202, %489
  %491 = fcmp une float %maximum.202, %maximum.202
  %492 = or i1 %490, %491
  %maximum.203 = select i1 %492, float %maximum.202, float %489
  %493 = fcmp ole float %maximum.9042, %maximum.203
  %494 = fcmp une float %maximum.9042, %maximum.9042
  %495 = or i1 %493, %494
  %minimum.205 = select i1 %495, float %maximum.9042, float %maximum.203
  br label %concatenate.270.merge

concat_index_from_operand_id26:                   ; preds = %concatenate.pivot.39.100
  %496 = phi i32 [ 39, %concatenate.pivot.39.100 ]
  %497 = sub nsw i32 %7, %496
  %498 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg40, i32 0, i32 %6, i32 0
  %499 = load i32, ptr %498, align 4, !invariant.load !297
  %500 = sitofp i32 %499 to float
  %501 = getelementptr inbounds [8192 x [1 x float]], ptr %arg21, i32 0, i32 %6, i32 0
  %502 = load float, ptr %501, align 4, !invariant.load !297
  %503 = fcmp oge float %500, %502
  %504 = fcmp une float %500, %500
  %505 = or i1 %503, %504
  %maximum.9043 = select i1 %505, float %500, float %502
  %506 = load float, ptr %arg15, align 4, !invariant.load !297
  %507 = load float, ptr %arg12, align 4, !invariant.load !297
  %508 = fcmp oge float %506, %507
  %509 = fcmp une float %506, %506
  %510 = or i1 %508, %509
  %maximum.207 = select i1 %510, float %506, float %507
  %511 = load float, ptr %arg10, align 4, !invariant.load !297
  %512 = fcmp oge float %maximum.207, %511
  %513 = fcmp une float %maximum.207, %maximum.207
  %514 = or i1 %512, %513
  %maximum.208 = select i1 %514, float %maximum.207, float %511
  %515 = load float, ptr %arg9, align 4, !invariant.load !297
  %516 = fcmp oge float %maximum.208, %515
  %517 = fcmp une float %maximum.208, %maximum.208
  %518 = or i1 %516, %517
  %maximum.209 = select i1 %518, float %maximum.208, float %515
  %519 = load float, ptr %arg8, align 4, !invariant.load !297
  %520 = fcmp oge float %maximum.209, %519
  %521 = fcmp une float %maximum.209, %maximum.209
  %522 = or i1 %520, %521
  %maximum.210 = select i1 %522, float %maximum.209, float %519
  %523 = fcmp ole float %maximum.9043, %maximum.210
  %524 = fcmp une float %maximum.9043, %maximum.9043
  %525 = or i1 %523, %524
  %minimum.212 = select i1 %525, float %maximum.9043, float %maximum.210
  br label %concatenate.270.merge

concat_index_from_operand_id27:                   ; preds = %concatenate.pivot.41.102
  %526 = phi i32 [ 41, %concatenate.pivot.41.102 ]
  %527 = sub nsw i32 %7, %526
  %528 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg40, i32 0, i32 %6, i32 0
  %529 = load i32, ptr %528, align 4, !invariant.load !297
  %530 = sitofp i32 %529 to float
  %531 = getelementptr inbounds [8192 x [1 x float]], ptr %arg21, i32 0, i32 %6, i32 0
  %532 = load float, ptr %531, align 4, !invariant.load !297
  %533 = fcmp oge float %530, %532
  %534 = fcmp une float %530, %530
  %535 = or i1 %533, %534
  %maximum.9044 = select i1 %535, float %530, float %532
  %536 = load float, ptr %arg14, align 4, !invariant.load !297
  %537 = load float, ptr %arg12, align 4, !invariant.load !297
  %538 = fcmp oge float %536, %537
  %539 = fcmp une float %536, %536
  %540 = or i1 %538, %539
  %maximum.214 = select i1 %540, float %536, float %537
  %541 = load float, ptr %arg10, align 4, !invariant.load !297
  %542 = fcmp oge float %maximum.214, %541
  %543 = fcmp une float %maximum.214, %maximum.214
  %544 = or i1 %542, %543
  %maximum.215 = select i1 %544, float %maximum.214, float %541
  %545 = load float, ptr %arg9, align 4, !invariant.load !297
  %546 = fcmp oge float %maximum.215, %545
  %547 = fcmp une float %maximum.215, %maximum.215
  %548 = or i1 %546, %547
  %maximum.216 = select i1 %548, float %maximum.215, float %545
  %549 = load float, ptr %arg8, align 4, !invariant.load !297
  %550 = fcmp oge float %maximum.216, %549
  %551 = fcmp une float %maximum.216, %maximum.216
  %552 = or i1 %550, %551
  %maximum.217 = select i1 %552, float %maximum.216, float %549
  %553 = fcmp ole float %maximum.9044, %maximum.217
  %554 = fcmp une float %maximum.9044, %maximum.9044
  %555 = or i1 %553, %554
  %minimum.219 = select i1 %555, float %maximum.9044, float %maximum.217
  br label %concatenate.270.merge

concat_index_from_operand_id28:                   ; preds = %concatenate.pivot.42.103
  %556 = phi i32 [ 42, %concatenate.pivot.42.103 ]
  %557 = sub nsw i32 %7, %556
  %558 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg40, i32 0, i32 %6, i32 0
  %559 = load i32, ptr %558, align 4, !invariant.load !297
  %560 = sitofp i32 %559 to float
  %561 = getelementptr inbounds [8192 x [1 x float]], ptr %arg21, i32 0, i32 %6, i32 0
  %562 = load float, ptr %561, align 4, !invariant.load !297
  %563 = fcmp oge float %560, %562
  %564 = fcmp une float %560, %560
  %565 = or i1 %563, %564
  %maximum.9045 = select i1 %565, float %560, float %562
  %566 = load float, ptr %arg13, align 4, !invariant.load !297
  %567 = load float, ptr %arg12, align 4, !invariant.load !297
  %568 = fcmp oge float %566, %567
  %569 = fcmp une float %566, %566
  %570 = or i1 %568, %569
  %maximum.221 = select i1 %570, float %566, float %567
  %571 = load float, ptr %arg10, align 4, !invariant.load !297
  %572 = fcmp oge float %maximum.221, %571
  %573 = fcmp une float %maximum.221, %maximum.221
  %574 = or i1 %572, %573
  %maximum.222 = select i1 %574, float %maximum.221, float %571
  %575 = load float, ptr %arg9, align 4, !invariant.load !297
  %576 = fcmp oge float %maximum.222, %575
  %577 = fcmp une float %maximum.222, %maximum.222
  %578 = or i1 %576, %577
  %maximum.223 = select i1 %578, float %maximum.222, float %575
  %579 = load float, ptr %arg8, align 4, !invariant.load !297
  %580 = fcmp oge float %maximum.223, %579
  %581 = fcmp une float %maximum.223, %maximum.223
  %582 = or i1 %580, %581
  %maximum.224 = select i1 %582, float %maximum.223, float %579
  %583 = fcmp ole float %maximum.9045, %maximum.224
  %584 = fcmp une float %maximum.9045, %maximum.9045
  %585 = or i1 %583, %584
  %minimum.226 = select i1 %585, float %maximum.9045, float %maximum.224
  br label %concatenate.270.merge

concat_index_from_operand_id29:                   ; preds = %concatenate.pivot.43.104
  %586 = phi i32 [ 43, %concatenate.pivot.43.104 ]
  %587 = sub nsw i32 %7, %586
  %588 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg40, i32 0, i32 %6, i32 0
  %589 = load i32, ptr %588, align 4, !invariant.load !297
  %590 = sitofp i32 %589 to float
  %591 = getelementptr inbounds [8192 x [1 x float]], ptr %arg21, i32 0, i32 %6, i32 0
  %592 = load float, ptr %591, align 4, !invariant.load !297
  %593 = fcmp oge float %590, %592
  %594 = fcmp une float %590, %590
  %595 = or i1 %593, %594
  %maximum.9046 = select i1 %595, float %590, float %592
  %596 = load float, ptr %arg11, align 4, !invariant.load !297
  %597 = load float, ptr %arg12, align 4, !invariant.load !297
  %598 = fcmp oge float %596, %597
  %599 = fcmp une float %596, %596
  %600 = or i1 %598, %599
  %maximum.228 = select i1 %600, float %596, float %597
  %601 = load float, ptr %arg10, align 4, !invariant.load !297
  %602 = fcmp oge float %maximum.228, %601
  %603 = fcmp une float %maximum.228, %maximum.228
  %604 = or i1 %602, %603
  %maximum.229 = select i1 %604, float %maximum.228, float %601
  %605 = load float, ptr %arg9, align 4, !invariant.load !297
  %606 = fcmp oge float %maximum.229, %605
  %607 = fcmp une float %maximum.229, %maximum.229
  %608 = or i1 %606, %607
  %maximum.230 = select i1 %608, float %maximum.229, float %605
  %609 = load float, ptr %arg8, align 4, !invariant.load !297
  %610 = fcmp oge float %maximum.230, %609
  %611 = fcmp une float %maximum.230, %maximum.230
  %612 = or i1 %610, %611
  %maximum.231 = select i1 %612, float %maximum.230, float %609
  %613 = fcmp ole float %maximum.9046, %maximum.231
  %614 = fcmp une float %maximum.9046, %maximum.9046
  %615 = or i1 %613, %614
  %minimum.233 = select i1 %615, float %maximum.9046, float %maximum.231
  br label %concatenate.270.merge

concat_index_from_operand_id30:                   ; preds = %concatenate.pivot.44.105
  %616 = phi i32 [ 44, %concatenate.pivot.44.105 ]
  %617 = sub nsw i32 %7, %616
  %618 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg40, i32 0, i32 %6, i32 0
  %619 = load i32, ptr %618, align 4, !invariant.load !297
  %620 = sitofp i32 %619 to float
  %621 = getelementptr inbounds [8192 x [1 x float]], ptr %arg21, i32 0, i32 %6, i32 0
  %622 = load float, ptr %621, align 4, !invariant.load !297
  %623 = fcmp oge float %620, %622
  %624 = fcmp une float %620, %620
  %625 = or i1 %623, %624
  %maximum.9047 = select i1 %625, float %620, float %622
  %626 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg45, i32 0, i32 %6, i32 0
  %627 = load i32, ptr %626, align 4, !invariant.load !297
  %628 = sitofp i32 %627 to float
  %629 = fptosi float %628 to i32
  %630 = fcmp ole float %628, 0xC1E0000000000000
  %631 = select i1 %630, i32 -2147483648, i32 %629
  %632 = fcmp oge float %628, 0x41E0000000000000
  %633 = select i1 %632, i32 2147483647, i32 %631
  %634 = fcmp uno float %628, %628
  %635 = select i1 %634, i32 0, i32 %633
  %region_0_271_constant_17348 = load i32, ptr @12, align 4
  %636 = and i32 %635, %region_0_271_constant_17348
  %region_0_271_constant_6949 = load i32, ptr @11, align 4
  %637 = icmp eq i32 %636, %region_0_271_constant_6949
  %638 = zext i1 %637 to i8
  %region_0_271_constant_7250 = load float, ptr @10, align 4
  %region_0_271_constant_5151 = load float, ptr @9, align 4
  %639 = trunc i8 %638 to i1
  %640 = select i1 %639, float %region_0_271_constant_7250, float %region_0_271_constant_5151
  %641 = fcmp oge float %maximum.9047, %640
  %642 = fcmp une float %maximum.9047, %maximum.9047
  %643 = or i1 %641, %642
  %maximum.235 = select i1 %643, float %maximum.9047, float %640
  %compare.236 = fcmp ogt float %maximum.235, %region_0_271_constant_7250
  %644 = zext i1 %compare.236 to i8
  %645 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg46, i32 0, i32 %6, i32 0
  %646 = load i32, ptr %645, align 4, !invariant.load !297
  %647 = sitofp i32 %646 to float
  %648 = trunc i8 %644 to i1
  %649 = select i1 %648, float %647, float %region_0_271_constant_7250
  %650 = load float, ptr %arg30, align 4, !invariant.load !297
  %compare.239 = fcmp ogt float %649, %650
  %651 = zext i1 %compare.239 to i8
  %652 = trunc i8 %651 to i1
  %653 = select i1 %652, float %region_0_271_constant_5151, float %650
  %region_0_271_constant_8652 = load float, ptr @13, align 4
  %multiply.241 = fmul float %653, %region_0_271_constant_8652
  br label %concatenate.270.merge

concat_index_from_operand_id31:                   ; preds = %concatenate.pivot.45.106
  %654 = phi i32 [ 45, %concatenate.pivot.45.106 ]
  %655 = sub nsw i32 %7, %654
  %656 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg40, i32 0, i32 %6, i32 0
  %657 = load i32, ptr %656, align 4, !invariant.load !297
  %658 = sitofp i32 %657 to float
  %659 = getelementptr inbounds [8192 x [1 x float]], ptr %arg21, i32 0, i32 %6, i32 0
  %660 = load float, ptr %659, align 4, !invariant.load !297
  %661 = fcmp oge float %658, %660
  %662 = fcmp une float %658, %658
  %663 = or i1 %661, %662
  %maximum.9053 = select i1 %663, float %658, float %660
  %664 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg45, i32 0, i32 %6, i32 0
  %665 = load i32, ptr %664, align 4, !invariant.load !297
  %666 = sitofp i32 %665 to float
  %667 = fptosi float %666 to i32
  %668 = fcmp ole float %666, 0xC1E0000000000000
  %669 = select i1 %668, i32 -2147483648, i32 %667
  %670 = fcmp oge float %666, 0x41E0000000000000
  %671 = select i1 %670, i32 2147483647, i32 %669
  %672 = fcmp uno float %666, %666
  %673 = select i1 %672, i32 0, i32 %671
  %region_0_271_constant_17354 = load i32, ptr @12, align 4
  %674 = and i32 %673, %region_0_271_constant_17354
  %region_0_271_constant_6955 = load i32, ptr @11, align 4
  %675 = icmp eq i32 %674, %region_0_271_constant_6955
  %676 = zext i1 %675 to i8
  %region_0_271_constant_7256 = load float, ptr @10, align 4
  %region_0_271_constant_5157 = load float, ptr @9, align 4
  %677 = trunc i8 %676 to i1
  %678 = select i1 %677, float %region_0_271_constant_7256, float %region_0_271_constant_5157
  %679 = fcmp oge float %maximum.9053, %678
  %680 = fcmp une float %maximum.9053, %maximum.9053
  %681 = or i1 %679, %680
  %maximum.23558 = select i1 %681, float %maximum.9053, float %678
  %compare.23659 = fcmp ogt float %maximum.23558, %region_0_271_constant_7256
  %682 = zext i1 %compare.23659 to i8
  %683 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg7, i32 0, i32 %6, i32 0
  %684 = load i32, ptr %683, align 4, !invariant.load !297
  %685 = sitofp i32 %684 to float
  %686 = load float, ptr %arg30, align 4, !invariant.load !297
  %687 = trunc i8 %682 to i1
  %688 = select i1 %687, float %685, float %686
  br label %concatenate.270.merge

concat_index_from_operand_id32:                   ; preds = %concatenate.pivot.46.107
  %689 = phi i32 [ 46, %concatenate.pivot.46.107 ]
  %690 = sub nsw i32 %7, %689
  %691 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg6, i32 0, i32 %6, i32 0
  %692 = load i32, ptr %691, align 4, !invariant.load !297
  %693 = sitofp i32 %692 to float
  br label %concatenate.270.merge

concat_index_from_operand_id33:                   ; preds = %concatenate.pivot.47.108
  %694 = phi i32 [ 47, %concatenate.pivot.47.108 ]
  %695 = sub nsw i32 %7, %694
  %696 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg42, i32 0, i32 %6, i32 0
  %697 = load i32, ptr %696, align 4, !invariant.load !297
  %698 = sitofp i32 %697 to float
  br label %concatenate.270.merge

concat_index_from_operand_id34:                   ; preds = %concatenate.pivot.48.109
  %699 = phi i32 [ 48, %concatenate.pivot.48.109 ]
  %700 = sub nsw i32 %7, %699
  %701 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg5, i32 0, i32 %6, i32 0
  %702 = load i32, ptr %701, align 4, !invariant.load !297
  %703 = sitofp i32 %702 to float
  br label %concatenate.270.merge

concat_index_from_operand_id35:                   ; preds = %concatenate.pivot.53.114, %concatenate.pivot.51.112, %concatenate.pivot.49.110
  %704 = phi i32 [ 49, %concatenate.pivot.49.110 ], [ 51, %concatenate.pivot.51.112 ], [ 53, %concatenate.pivot.53.114 ]
  %705 = sub nsw i32 %7, %704
  %706 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg43, i32 0, i32 %6, i32 0
  %707 = load i32, ptr %706, align 4, !invariant.load !297
  %708 = sitofp i32 %707 to float
  br label %concatenate.270.merge

concat_index_from_operand_id36:                   ; preds = %concatenate.pivot.50.111
  %709 = phi i32 [ 50, %concatenate.pivot.50.111 ]
  %710 = sub nsw i32 %7, %709
  %711 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg4, i32 0, i32 %6, i32 0
  %712 = load i32, ptr %711, align 4, !invariant.load !297
  %713 = sitofp i32 %712 to float
  br label %concatenate.270.merge

concat_index_from_operand_id37:                   ; preds = %concatenate.pivot.52.113
  %714 = phi i32 [ 52, %concatenate.pivot.52.113 ]
  %715 = sub nsw i32 %7, %714
  %716 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg3, i32 0, i32 %6, i32 0
  %717 = load i32, ptr %716, align 4, !invariant.load !297
  %718 = sitofp i32 %717 to float
  br label %concatenate.270.merge

concat_index_from_operand_id38:                   ; preds = %concatenate.pivot.54.115
  %719 = phi i32 [ 54, %concatenate.pivot.54.115 ]
  %720 = sub nsw i32 %7, %719
  %721 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg2, i32 0, i32 %6, i32 0
  %722 = load i32, ptr %721, align 4, !invariant.load !297
  %723 = sitofp i32 %722 to float
  br label %concatenate.270.merge

concat_index_from_operand_id39:                   ; preds = %concatenate.pivot.59.120, %concatenate.pivot.55.116
  %724 = phi i32 [ 55, %concatenate.pivot.55.116 ], [ 59, %concatenate.pivot.59.120 ]
  %725 = sub nsw i32 %7, %724
  %726 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg2, i32 0, i32 %6, i32 0
  %727 = load i32, ptr %726, align 4, !invariant.load !297
  %728 = sitofp i32 %727 to float
  %729 = load float, ptr %arg30, align 4, !invariant.load !297
  %compare.260 = fcmp ogt float %728, %729
  %730 = zext i1 %compare.260 to i8
  %region_0_271_constant_5160 = load float, ptr @9, align 4
  %731 = trunc i8 %730 to i1
  %732 = select i1 %731, float %region_0_271_constant_5160, float %729
  br label %concatenate.270.merge

concat_index_from_operand_id40:                   ; preds = %concatenate.pivot.56.117
  %733 = phi i32 [ 56, %concatenate.pivot.56.117 ]
  %734 = sub nsw i32 %7, %733
  %735 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg1, i32 0, i32 %6, i32 0
  %736 = load i32, ptr %735, align 4, !invariant.load !297
  %737 = sitofp i32 %736 to float
  br label %concatenate.270.merge

concat_index_from_operand_id41:                   ; preds = %concatenate.pivot.57.118
  %738 = phi i32 [ 57, %concatenate.pivot.57.118 ]
  %739 = sub nsw i32 %7, %738
  %740 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg1, i32 0, i32 %6, i32 0
  %741 = load i32, ptr %740, align 4, !invariant.load !297
  %742 = sitofp i32 %741 to float
  %743 = load float, ptr %arg30, align 4, !invariant.load !297
  %compare.265 = fcmp ogt float %742, %743
  %744 = zext i1 %compare.265 to i8
  %region_0_271_constant_5161 = load float, ptr @9, align 4
  %745 = trunc i8 %744 to i1
  %746 = select i1 %745, float %region_0_271_constant_5161, float %743
  br label %concatenate.270.merge

concat_index_from_operand_id42:                   ; preds = %concatenate.pivot.58.119
  %747 = phi i32 [ 58, %concatenate.pivot.58.119 ]
  %748 = sub nsw i32 %7, %747
  %749 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg0, i32 0, i32 %6, i32 0
  %750 = load i32, ptr %749, align 4, !invariant.load !297
  %751 = sitofp i32 %750 to float
  br label %concatenate.270.merge

concatenate.pivot.30.:                            ; preds = %fusion_380.in_bounds-true
  %752 = icmp ult i32 %7, 30
  br i1 %752, label %concatenate.pivot.15., label %concatenate.pivot.45.

concatenate.pivot.15.:                            ; preds = %concatenate.pivot.30.
  %753 = icmp ult i32 %7, 15
  br i1 %753, label %concatenate.pivot.7., label %concatenate.pivot.22.

concatenate.pivot.7.:                             ; preds = %concatenate.pivot.15.
  %754 = icmp ult i32 %7, 7
  br i1 %754, label %concatenate.pivot.3., label %concatenate.pivot.11.

concatenate.pivot.3.:                             ; preds = %concatenate.pivot.7.
  %755 = icmp ult i32 %7, 3
  br i1 %755, label %concatenate.pivot.1., label %concatenate.pivot.5.

concatenate.pivot.1.:                             ; preds = %concatenate.pivot.3.
  %756 = icmp ult i32 %7, 1
  br i1 %756, label %concatenate.pivot.0., label %concatenate.pivot.2.

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.1.
  br label %concat_index_from_operand_id0

concatenate.pivot.2.:                             ; preds = %concatenate.pivot.1.
  %757 = icmp ult i32 %7, 2
  br i1 %757, label %concatenate.pivot.1.62, label %concatenate.pivot.2.63

concatenate.pivot.1.62:                           ; preds = %concatenate.pivot.2.
  br label %concat_index_from_operand_id0

concatenate.pivot.2.63:                           ; preds = %concatenate.pivot.2.
  br label %concat_index_from_operand_id0

concatenate.pivot.5.:                             ; preds = %concatenate.pivot.3.
  %758 = icmp ult i32 %7, 5
  br i1 %758, label %concatenate.pivot.4., label %concatenate.pivot.6.

concatenate.pivot.4.:                             ; preds = %concatenate.pivot.5.
  %759 = icmp ult i32 %7, 4
  br i1 %759, label %concatenate.pivot.3.64, label %concatenate.pivot.4.65

concatenate.pivot.3.64:                           ; preds = %concatenate.pivot.4.
  br label %concat_index_from_operand_id0

concatenate.pivot.4.65:                           ; preds = %concatenate.pivot.4.
  br label %concat_index_from_operand_id1

concatenate.pivot.6.:                             ; preds = %concatenate.pivot.5.
  %760 = icmp ult i32 %7, 6
  br i1 %760, label %concatenate.pivot.5.66, label %concatenate.pivot.6.67

concatenate.pivot.5.66:                           ; preds = %concatenate.pivot.6.
  br label %concat_index_from_operand_id0

concatenate.pivot.6.67:                           ; preds = %concatenate.pivot.6.
  br label %concat_index_from_operand_id2

concatenate.pivot.11.:                            ; preds = %concatenate.pivot.7.
  %761 = icmp ult i32 %7, 11
  br i1 %761, label %concatenate.pivot.9., label %concatenate.pivot.13.

concatenate.pivot.9.:                             ; preds = %concatenate.pivot.11.
  %762 = icmp ult i32 %7, 9
  br i1 %762, label %concatenate.pivot.8., label %concatenate.pivot.10.

concatenate.pivot.8.:                             ; preds = %concatenate.pivot.9.
  %763 = icmp ult i32 %7, 8
  br i1 %763, label %concatenate.pivot.7.68, label %concatenate.pivot.8.69

concatenate.pivot.7.68:                           ; preds = %concatenate.pivot.8.
  br label %concat_index_from_operand_id3

concatenate.pivot.8.69:                           ; preds = %concatenate.pivot.8.
  br label %concat_index_from_operand_id0

concatenate.pivot.10.:                            ; preds = %concatenate.pivot.9.
  %764 = icmp ult i32 %7, 10
  br i1 %764, label %concatenate.pivot.9.70, label %concatenate.pivot.10.71

concatenate.pivot.9.70:                           ; preds = %concatenate.pivot.10.
  br label %concat_index_from_operand_id4

concatenate.pivot.10.71:                          ; preds = %concatenate.pivot.10.
  br label %concat_index_from_operand_id5

concatenate.pivot.13.:                            ; preds = %concatenate.pivot.11.
  %765 = icmp ult i32 %7, 13
  br i1 %765, label %concatenate.pivot.12., label %concatenate.pivot.14.

concatenate.pivot.12.:                            ; preds = %concatenate.pivot.13.
  %766 = icmp ult i32 %7, 12
  br i1 %766, label %concatenate.pivot.11.72, label %concatenate.pivot.12.73

concatenate.pivot.11.72:                          ; preds = %concatenate.pivot.12.
  br label %concat_index_from_operand_id4

concatenate.pivot.12.73:                          ; preds = %concatenate.pivot.12.
  br label %concat_index_from_operand_id6

concatenate.pivot.14.:                            ; preds = %concatenate.pivot.13.
  %767 = icmp ult i32 %7, 14
  br i1 %767, label %concatenate.pivot.13.74, label %concatenate.pivot.14.75

concatenate.pivot.13.74:                          ; preds = %concatenate.pivot.14.
  br label %concat_index_from_operand_id7

concatenate.pivot.14.75:                          ; preds = %concatenate.pivot.14.
  br label %concat_index_from_operand_id8

concatenate.pivot.22.:                            ; preds = %concatenate.pivot.15.
  %768 = icmp ult i32 %7, 22
  br i1 %768, label %concatenate.pivot.18., label %concatenate.pivot.26.

concatenate.pivot.18.:                            ; preds = %concatenate.pivot.22.
  %769 = icmp ult i32 %7, 18
  br i1 %769, label %concatenate.pivot.16., label %concatenate.pivot.20.

concatenate.pivot.16.:                            ; preds = %concatenate.pivot.18.
  %770 = icmp ult i32 %7, 16
  br i1 %770, label %concatenate.pivot.15.76, label %concatenate.pivot.17.

concatenate.pivot.15.76:                          ; preds = %concatenate.pivot.16.
  br label %concat_index_from_operand_id9

concatenate.pivot.17.:                            ; preds = %concatenate.pivot.16.
  %771 = icmp ult i32 %7, 17
  br i1 %771, label %concatenate.pivot.16.77, label %concatenate.pivot.17.78

concatenate.pivot.16.77:                          ; preds = %concatenate.pivot.17.
  br label %concat_index_from_operand_id10

concatenate.pivot.17.78:                          ; preds = %concatenate.pivot.17.
  br label %concat_index_from_operand_id11

concatenate.pivot.20.:                            ; preds = %concatenate.pivot.18.
  %772 = icmp ult i32 %7, 20
  br i1 %772, label %concatenate.pivot.19., label %concatenate.pivot.21.

concatenate.pivot.19.:                            ; preds = %concatenate.pivot.20.
  %773 = icmp ult i32 %7, 19
  br i1 %773, label %concatenate.pivot.18.79, label %concatenate.pivot.19.80

concatenate.pivot.18.79:                          ; preds = %concatenate.pivot.19.
  br label %concat_index_from_operand_id6

concatenate.pivot.19.80:                          ; preds = %concatenate.pivot.19.
  br label %concat_index_from_operand_id6

concatenate.pivot.21.:                            ; preds = %concatenate.pivot.20.
  %774 = icmp ult i32 %7, 21
  br i1 %774, label %concatenate.pivot.20.81, label %concatenate.pivot.21.82

concatenate.pivot.20.81:                          ; preds = %concatenate.pivot.21.
  br label %concat_index_from_operand_id6

concatenate.pivot.21.82:                          ; preds = %concatenate.pivot.21.
  br label %concat_index_from_operand_id12

concatenate.pivot.26.:                            ; preds = %concatenate.pivot.22.
  %775 = icmp ult i32 %7, 26
  br i1 %775, label %concatenate.pivot.24., label %concatenate.pivot.28.

concatenate.pivot.24.:                            ; preds = %concatenate.pivot.26.
  %776 = icmp ult i32 %7, 24
  br i1 %776, label %concatenate.pivot.23., label %concatenate.pivot.25.

concatenate.pivot.23.:                            ; preds = %concatenate.pivot.24.
  %777 = icmp ult i32 %7, 23
  br i1 %777, label %concatenate.pivot.22.83, label %concatenate.pivot.23.84

concatenate.pivot.22.83:                          ; preds = %concatenate.pivot.23.
  br label %concat_index_from_operand_id13

concatenate.pivot.23.84:                          ; preds = %concatenate.pivot.23.
  br label %concat_index_from_operand_id14

concatenate.pivot.25.:                            ; preds = %concatenate.pivot.24.
  %778 = icmp ult i32 %7, 25
  br i1 %778, label %concatenate.pivot.24.85, label %concatenate.pivot.25.86

concatenate.pivot.24.85:                          ; preds = %concatenate.pivot.25.
  br label %concat_index_from_operand_id15

concatenate.pivot.25.86:                          ; preds = %concatenate.pivot.25.
  br label %concat_index_from_operand_id16

concatenate.pivot.28.:                            ; preds = %concatenate.pivot.26.
  %779 = icmp ult i32 %7, 28
  br i1 %779, label %concatenate.pivot.27., label %concatenate.pivot.29.

concatenate.pivot.27.:                            ; preds = %concatenate.pivot.28.
  %780 = icmp ult i32 %7, 27
  br i1 %780, label %concatenate.pivot.26.87, label %concatenate.pivot.27.88

concatenate.pivot.26.87:                          ; preds = %concatenate.pivot.27.
  br label %concat_index_from_operand_id16

concatenate.pivot.27.88:                          ; preds = %concatenate.pivot.27.
  br label %concat_index_from_operand_id16

concatenate.pivot.29.:                            ; preds = %concatenate.pivot.28.
  %781 = icmp ult i32 %7, 29
  br i1 %781, label %concatenate.pivot.28.89, label %concatenate.pivot.29.90

concatenate.pivot.28.89:                          ; preds = %concatenate.pivot.29.
  br label %concat_index_from_operand_id17

concatenate.pivot.29.90:                          ; preds = %concatenate.pivot.29.
  br label %concat_index_from_operand_id18

concatenate.pivot.45.:                            ; preds = %concatenate.pivot.30.
  %782 = icmp ult i32 %7, 45
  br i1 %782, label %concatenate.pivot.37., label %concatenate.pivot.52.

concatenate.pivot.37.:                            ; preds = %concatenate.pivot.45.
  %783 = icmp ult i32 %7, 37
  br i1 %783, label %concatenate.pivot.33., label %concatenate.pivot.41.

concatenate.pivot.33.:                            ; preds = %concatenate.pivot.37.
  %784 = icmp ult i32 %7, 33
  br i1 %784, label %concatenate.pivot.31., label %concatenate.pivot.35.

concatenate.pivot.31.:                            ; preds = %concatenate.pivot.33.
  %785 = icmp ult i32 %7, 31
  br i1 %785, label %concatenate.pivot.30.91, label %concatenate.pivot.32.

concatenate.pivot.30.91:                          ; preds = %concatenate.pivot.31.
  br label %concat_index_from_operand_id19

concatenate.pivot.32.:                            ; preds = %concatenate.pivot.31.
  %786 = icmp ult i32 %7, 32
  br i1 %786, label %concatenate.pivot.31.92, label %concatenate.pivot.32.93

concatenate.pivot.31.92:                          ; preds = %concatenate.pivot.32.
  br label %concat_index_from_operand_id6

concatenate.pivot.32.93:                          ; preds = %concatenate.pivot.32.
  br label %concat_index_from_operand_id20

concatenate.pivot.35.:                            ; preds = %concatenate.pivot.33.
  %787 = icmp ult i32 %7, 35
  br i1 %787, label %concatenate.pivot.34., label %concatenate.pivot.36.

concatenate.pivot.34.:                            ; preds = %concatenate.pivot.35.
  %788 = icmp ult i32 %7, 34
  br i1 %788, label %concatenate.pivot.33.94, label %concatenate.pivot.34.95

concatenate.pivot.33.94:                          ; preds = %concatenate.pivot.34.
  br label %concat_index_from_operand_id21

concatenate.pivot.34.95:                          ; preds = %concatenate.pivot.34.
  br label %concat_index_from_operand_id22

concatenate.pivot.36.:                            ; preds = %concatenate.pivot.35.
  %789 = icmp ult i32 %7, 36
  br i1 %789, label %concatenate.pivot.35.96, label %concatenate.pivot.36.97

concatenate.pivot.35.96:                          ; preds = %concatenate.pivot.36.
  br label %concat_index_from_operand_id16

concatenate.pivot.36.97:                          ; preds = %concatenate.pivot.36.
  br label %concat_index_from_operand_id23

concatenate.pivot.41.:                            ; preds = %concatenate.pivot.37.
  %790 = icmp ult i32 %7, 41
  br i1 %790, label %concatenate.pivot.39., label %concatenate.pivot.43.

concatenate.pivot.39.:                            ; preds = %concatenate.pivot.41.
  %791 = icmp ult i32 %7, 39
  br i1 %791, label %concatenate.pivot.38., label %concatenate.pivot.40.

concatenate.pivot.38.:                            ; preds = %concatenate.pivot.39.
  %792 = icmp ult i32 %7, 38
  br i1 %792, label %concatenate.pivot.37.98, label %concatenate.pivot.38.99

concatenate.pivot.37.98:                          ; preds = %concatenate.pivot.38.
  br label %concat_index_from_operand_id24

concatenate.pivot.38.99:                          ; preds = %concatenate.pivot.38.
  br label %concat_index_from_operand_id25

concatenate.pivot.40.:                            ; preds = %concatenate.pivot.39.
  %793 = icmp ult i32 %7, 40
  br i1 %793, label %concatenate.pivot.39.100, label %concatenate.pivot.40.101

concatenate.pivot.39.100:                         ; preds = %concatenate.pivot.40.
  br label %concat_index_from_operand_id26

concatenate.pivot.40.101:                         ; preds = %concatenate.pivot.40.
  br label %concat_index_from_operand_id17

concatenate.pivot.43.:                            ; preds = %concatenate.pivot.41.
  %794 = icmp ult i32 %7, 43
  br i1 %794, label %concatenate.pivot.42., label %concatenate.pivot.44.

concatenate.pivot.42.:                            ; preds = %concatenate.pivot.43.
  %795 = icmp ult i32 %7, 42
  br i1 %795, label %concatenate.pivot.41.102, label %concatenate.pivot.42.103

concatenate.pivot.41.102:                         ; preds = %concatenate.pivot.42.
  br label %concat_index_from_operand_id27

concatenate.pivot.42.103:                         ; preds = %concatenate.pivot.42.
  br label %concat_index_from_operand_id28

concatenate.pivot.44.:                            ; preds = %concatenate.pivot.43.
  %796 = icmp ult i32 %7, 44
  br i1 %796, label %concatenate.pivot.43.104, label %concatenate.pivot.44.105

concatenate.pivot.43.104:                         ; preds = %concatenate.pivot.44.
  br label %concat_index_from_operand_id29

concatenate.pivot.44.105:                         ; preds = %concatenate.pivot.44.
  br label %concat_index_from_operand_id30

concatenate.pivot.52.:                            ; preds = %concatenate.pivot.45.
  %797 = icmp ult i32 %7, 52
  br i1 %797, label %concatenate.pivot.48., label %concatenate.pivot.56.

concatenate.pivot.48.:                            ; preds = %concatenate.pivot.52.
  %798 = icmp ult i32 %7, 48
  br i1 %798, label %concatenate.pivot.46., label %concatenate.pivot.50.

concatenate.pivot.46.:                            ; preds = %concatenate.pivot.48.
  %799 = icmp ult i32 %7, 46
  br i1 %799, label %concatenate.pivot.45.106, label %concatenate.pivot.47.

concatenate.pivot.45.106:                         ; preds = %concatenate.pivot.46.
  br label %concat_index_from_operand_id31

concatenate.pivot.47.:                            ; preds = %concatenate.pivot.46.
  %800 = icmp ult i32 %7, 47
  br i1 %800, label %concatenate.pivot.46.107, label %concatenate.pivot.47.108

concatenate.pivot.46.107:                         ; preds = %concatenate.pivot.47.
  br label %concat_index_from_operand_id32

concatenate.pivot.47.108:                         ; preds = %concatenate.pivot.47.
  br label %concat_index_from_operand_id33

concatenate.pivot.50.:                            ; preds = %concatenate.pivot.48.
  %801 = icmp ult i32 %7, 50
  br i1 %801, label %concatenate.pivot.49., label %concatenate.pivot.51.

concatenate.pivot.49.:                            ; preds = %concatenate.pivot.50.
  %802 = icmp ult i32 %7, 49
  br i1 %802, label %concatenate.pivot.48.109, label %concatenate.pivot.49.110

concatenate.pivot.48.109:                         ; preds = %concatenate.pivot.49.
  br label %concat_index_from_operand_id34

concatenate.pivot.49.110:                         ; preds = %concatenate.pivot.49.
  br label %concat_index_from_operand_id35

concatenate.pivot.51.:                            ; preds = %concatenate.pivot.50.
  %803 = icmp ult i32 %7, 51
  br i1 %803, label %concatenate.pivot.50.111, label %concatenate.pivot.51.112

concatenate.pivot.50.111:                         ; preds = %concatenate.pivot.51.
  br label %concat_index_from_operand_id36

concatenate.pivot.51.112:                         ; preds = %concatenate.pivot.51.
  br label %concat_index_from_operand_id35

concatenate.pivot.56.:                            ; preds = %concatenate.pivot.52.
  %804 = icmp ult i32 %7, 56
  br i1 %804, label %concatenate.pivot.54., label %concatenate.pivot.58.

concatenate.pivot.54.:                            ; preds = %concatenate.pivot.56.
  %805 = icmp ult i32 %7, 54
  br i1 %805, label %concatenate.pivot.53., label %concatenate.pivot.55.

concatenate.pivot.53.:                            ; preds = %concatenate.pivot.54.
  %806 = icmp ult i32 %7, 53
  br i1 %806, label %concatenate.pivot.52.113, label %concatenate.pivot.53.114

concatenate.pivot.52.113:                         ; preds = %concatenate.pivot.53.
  br label %concat_index_from_operand_id37

concatenate.pivot.53.114:                         ; preds = %concatenate.pivot.53.
  br label %concat_index_from_operand_id35

concatenate.pivot.55.:                            ; preds = %concatenate.pivot.54.
  %807 = icmp ult i32 %7, 55
  br i1 %807, label %concatenate.pivot.54.115, label %concatenate.pivot.55.116

concatenate.pivot.54.115:                         ; preds = %concatenate.pivot.55.
  br label %concat_index_from_operand_id38

concatenate.pivot.55.116:                         ; preds = %concatenate.pivot.55.
  br label %concat_index_from_operand_id39

concatenate.pivot.58.:                            ; preds = %concatenate.pivot.56.
  %808 = icmp ult i32 %7, 58
  br i1 %808, label %concatenate.pivot.57., label %concatenate.pivot.59.

concatenate.pivot.57.:                            ; preds = %concatenate.pivot.58.
  %809 = icmp ult i32 %7, 57
  br i1 %809, label %concatenate.pivot.56.117, label %concatenate.pivot.57.118

concatenate.pivot.56.117:                         ; preds = %concatenate.pivot.57.
  br label %concat_index_from_operand_id40

concatenate.pivot.57.118:                         ; preds = %concatenate.pivot.57.
  br label %concat_index_from_operand_id41

concatenate.pivot.59.:                            ; preds = %concatenate.pivot.58.
  %810 = icmp ult i32 %7, 59
  br i1 %810, label %concatenate.pivot.58.119, label %concatenate.pivot.59.120

concatenate.pivot.58.119:                         ; preds = %concatenate.pivot.59.
  br label %concat_index_from_operand_id42

concatenate.pivot.59.120:                         ; preds = %concatenate.pivot.59.
  br label %concat_index_from_operand_id39

concatenate.270.merge:                            ; preds = %concat_index_from_operand_id42, %concat_index_from_operand_id41, %concat_index_from_operand_id40, %concat_index_from_operand_id39, %concat_index_from_operand_id38, %concat_index_from_operand_id37, %concat_index_from_operand_id36, %concat_index_from_operand_id35, %concat_index_from_operand_id34, %concat_index_from_operand_id33, %concat_index_from_operand_id32, %concat_index_from_operand_id31, %concat_index_from_operand_id30, %concat_index_from_operand_id29, %concat_index_from_operand_id28, %concat_index_from_operand_id27, %concat_index_from_operand_id26, %concat_index_from_operand_id25, %concat_index_from_operand_id24, %concat_index_from_operand_id23, %concat_index_from_operand_id22, %concat_index_from_operand_id21, %concat_index_from_operand_id20, %concat_index_from_operand_id19, %concat_index_from_operand_id18, %concat_index_from_operand_id17, %concat_index_from_operand_id16, %concat_index_from_operand_id15, %concat_index_from_operand_id14, %concat_index_from_operand_id13, %concat_index_from_operand_id12, %concat_index_from_operand_id11, %concat_index_from_operand_id10, %concat_index_from_operand_id9, %concat_index_from_operand_id8, %concat_index_from_operand_id7, %concat_index_from_operand_id6, %concat_index_from_operand_id5, %concat_index_from_operand_id4, %concat_index_from_operand_id3, %concat_index_from_operand_id2, %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %811 = phi float [ %17, %concat_index_from_operand_id0 ], [ %35, %concat_index_from_operand_id1 ], [ %minimum.75, %concat_index_from_operand_id2 ], [ %minimum.78, %concat_index_from_operand_id3 ], [ %94, %concat_index_from_operand_id4 ], [ %multiply.88, %concat_index_from_operand_id5 ], [ %maximum.90, %concat_index_from_operand_id6 ], [ %138, %concat_index_from_operand_id7 ], [ %155, %concat_index_from_operand_id8 ], [ %172, %concat_index_from_operand_id9 ], [ %189, %concat_index_from_operand_id10 ], [ %194, %concat_index_from_operand_id11 ], [ %218, %concat_index_from_operand_id12 ], [ %242, %concat_index_from_operand_id13 ], [ %251, %concat_index_from_operand_id14 ], [ %256, %concat_index_from_operand_id15 ], [ %minimum.157, %concat_index_from_operand_id16 ], [ %minimum.164, %concat_index_from_operand_id17 ], [ %minimum.171, %concat_index_from_operand_id18 ], [ %maximum.178, %concat_index_from_operand_id19 ], [ %373, %concat_index_from_operand_id20 ], [ %378, %concat_index_from_operand_id21 ], [ %minimum.184, %concat_index_from_operand_id22 ], [ %minimum.191, %concat_index_from_operand_id23 ], [ %minimum.198, %concat_index_from_operand_id24 ], [ %minimum.205, %concat_index_from_operand_id25 ], [ %minimum.212, %concat_index_from_operand_id26 ], [ %minimum.219, %concat_index_from_operand_id27 ], [ %minimum.226, %concat_index_from_operand_id28 ], [ %minimum.233, %concat_index_from_operand_id29 ], [ %multiply.241, %concat_index_from_operand_id30 ], [ %688, %concat_index_from_operand_id31 ], [ %693, %concat_index_from_operand_id32 ], [ %698, %concat_index_from_operand_id33 ], [ %703, %concat_index_from_operand_id34 ], [ %708, %concat_index_from_operand_id35 ], [ %713, %concat_index_from_operand_id36 ], [ %718, %concat_index_from_operand_id37 ], [ %723, %concat_index_from_operand_id38 ], [ %732, %concat_index_from_operand_id39 ], [ %737, %concat_index_from_operand_id40 ], [ %746, %concat_index_from_operand_id41 ], [ %751, %concat_index_from_operand_id42 ]
  %812 = getelementptr inbounds float, ptr %arg47, i32 %linear_index
  store float %811, ptr %812, align 4
  br label %fusion_380.in_bounds-after
}

define void @concatenate_101(ptr noalias align 16 dereferenceable(1048576) %arg0, ptr noalias align 16 dereferenceable(2097152) %arg1, ptr noalias align 128 dereferenceable(3145728) %arg2) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !365
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 196608
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 96
  %5 = udiv i32 %linear_index_base, 96
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 96
  %8 = udiv i32 %linear_index1, 96
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 96
  %11 = udiv i32 %linear_index2, 96
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 96
  %14 = udiv i32 %linear_index3, 96
  %15 = icmp ult i32 %linear_index_base, 786432
  br i1 %15, label %concatenate_101.in_bounds-true, label %concatenate_101.in_bounds-after

concatenate_101.in_bounds-after:                  ; preds = %concatenate.3.merge14, %entry
  ret void

concatenate_101.in_bounds-true:                   ; preds = %entry
  br label %concatenate.pivot.32.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %16 = phi i32 [ 0, %concatenate.pivot.0. ]
  %17 = sub nsw i32 %4, %16
  %18 = udiv i32 %linear_index_base, 96
  %19 = mul i32 %18, 32
  %20 = add i32 %19, %17
  %21 = udiv i32 %20, 1
  %22 = urem i32 %21, 32
  %23 = udiv i32 %20, 32
  %24 = getelementptr inbounds float, ptr %arg0, i32 %20
  %25 = load float, ptr %24, align 4, !invariant.load !297
  br label %concatenate.3.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.32.1
  %26 = phi i32 [ 32, %concatenate.pivot.32.1 ]
  %27 = sub nsw i32 %4, %26
  %28 = udiv i32 %linear_index_base, 96
  %29 = mul i32 %28, 64
  %30 = add i32 %29, %27
  %31 = udiv i32 %30, 1
  %32 = urem i32 %31, 64
  %33 = udiv i32 %30, 64
  %34 = getelementptr inbounds float, ptr %arg1, i32 %30
  %35 = load float, ptr %34, align 4, !invariant.load !297
  br label %concatenate.3.merge

concatenate.pivot.32.:                            ; preds = %concatenate_101.in_bounds-true
  %36 = icmp ult i32 %4, 32
  br i1 %36, label %concatenate.pivot.0., label %concatenate.pivot.32.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.32.
  br label %concat_index_from_operand_id0

concatenate.pivot.32.1:                           ; preds = %concatenate.pivot.32.
  br label %concat_index_from_operand_id1

concatenate.3.merge:                              ; preds = %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %37 = phi float [ %25, %concat_index_from_operand_id0 ], [ %35, %concat_index_from_operand_id1 ]
  %38 = getelementptr inbounds float, ptr %arg2, i32 %linear_index_base
  store float %37, ptr %38, align 4
  br label %concatenate.pivot.32.5

concat_index_from_operand_id03:                   ; preds = %concatenate.pivot.0.6
  %39 = phi i32 [ 0, %concatenate.pivot.0.6 ]
  %40 = sub nsw i32 %7, %39
  %41 = udiv i32 %linear_index1, 96
  %42 = mul i32 %41, 32
  %43 = add i32 %42, %40
  %44 = udiv i32 %43, 1
  %45 = urem i32 %44, 32
  %46 = udiv i32 %43, 32
  %47 = getelementptr inbounds float, ptr %arg0, i32 %43
  %48 = load float, ptr %47, align 4, !invariant.load !297
  br label %concatenate.3.merge2

concat_index_from_operand_id14:                   ; preds = %concatenate.pivot.32.7
  %49 = phi i32 [ 32, %concatenate.pivot.32.7 ]
  %50 = sub nsw i32 %7, %49
  %51 = udiv i32 %linear_index1, 96
  %52 = mul i32 %51, 64
  %53 = add i32 %52, %50
  %54 = udiv i32 %53, 1
  %55 = urem i32 %54, 64
  %56 = udiv i32 %53, 64
  %57 = getelementptr inbounds float, ptr %arg1, i32 %53
  %58 = load float, ptr %57, align 4, !invariant.load !297
  br label %concatenate.3.merge2

concatenate.pivot.32.5:                           ; preds = %concatenate.3.merge
  %59 = icmp ult i32 %7, 32
  br i1 %59, label %concatenate.pivot.0.6, label %concatenate.pivot.32.7

concatenate.pivot.0.6:                            ; preds = %concatenate.pivot.32.5
  br label %concat_index_from_operand_id03

concatenate.pivot.32.7:                           ; preds = %concatenate.pivot.32.5
  br label %concat_index_from_operand_id14

concatenate.3.merge2:                             ; preds = %concat_index_from_operand_id14, %concat_index_from_operand_id03
  %60 = phi float [ %48, %concat_index_from_operand_id03 ], [ %58, %concat_index_from_operand_id14 ]
  %61 = getelementptr inbounds float, ptr %arg2, i32 %linear_index1
  store float %60, ptr %61, align 4
  br label %concatenate.pivot.32.11

concat_index_from_operand_id09:                   ; preds = %concatenate.pivot.0.12
  %62 = phi i32 [ 0, %concatenate.pivot.0.12 ]
  %63 = sub nsw i32 %10, %62
  %64 = udiv i32 %linear_index2, 96
  %65 = mul i32 %64, 32
  %66 = add i32 %65, %63
  %67 = udiv i32 %66, 1
  %68 = urem i32 %67, 32
  %69 = udiv i32 %66, 32
  %70 = getelementptr inbounds float, ptr %arg0, i32 %66
  %71 = load float, ptr %70, align 4, !invariant.load !297
  br label %concatenate.3.merge8

concat_index_from_operand_id110:                  ; preds = %concatenate.pivot.32.13
  %72 = phi i32 [ 32, %concatenate.pivot.32.13 ]
  %73 = sub nsw i32 %10, %72
  %74 = udiv i32 %linear_index2, 96
  %75 = mul i32 %74, 64
  %76 = add i32 %75, %73
  %77 = udiv i32 %76, 1
  %78 = urem i32 %77, 64
  %79 = udiv i32 %76, 64
  %80 = getelementptr inbounds float, ptr %arg1, i32 %76
  %81 = load float, ptr %80, align 4, !invariant.load !297
  br label %concatenate.3.merge8

concatenate.pivot.32.11:                          ; preds = %concatenate.3.merge2
  %82 = icmp ult i32 %10, 32
  br i1 %82, label %concatenate.pivot.0.12, label %concatenate.pivot.32.13

concatenate.pivot.0.12:                           ; preds = %concatenate.pivot.32.11
  br label %concat_index_from_operand_id09

concatenate.pivot.32.13:                          ; preds = %concatenate.pivot.32.11
  br label %concat_index_from_operand_id110

concatenate.3.merge8:                             ; preds = %concat_index_from_operand_id110, %concat_index_from_operand_id09
  %83 = phi float [ %71, %concat_index_from_operand_id09 ], [ %81, %concat_index_from_operand_id110 ]
  %84 = getelementptr inbounds float, ptr %arg2, i32 %linear_index2
  store float %83, ptr %84, align 4
  br label %concatenate.pivot.32.17

concat_index_from_operand_id015:                  ; preds = %concatenate.pivot.0.18
  %85 = phi i32 [ 0, %concatenate.pivot.0.18 ]
  %86 = sub nsw i32 %13, %85
  %87 = udiv i32 %linear_index3, 96
  %88 = mul i32 %87, 32
  %89 = add i32 %88, %86
  %90 = udiv i32 %89, 1
  %91 = urem i32 %90, 32
  %92 = udiv i32 %89, 32
  %93 = getelementptr inbounds float, ptr %arg0, i32 %89
  %94 = load float, ptr %93, align 4, !invariant.load !297
  br label %concatenate.3.merge14

concat_index_from_operand_id116:                  ; preds = %concatenate.pivot.32.19
  %95 = phi i32 [ 32, %concatenate.pivot.32.19 ]
  %96 = sub nsw i32 %13, %95
  %97 = udiv i32 %linear_index3, 96
  %98 = mul i32 %97, 64
  %99 = add i32 %98, %96
  %100 = udiv i32 %99, 1
  %101 = urem i32 %100, 64
  %102 = udiv i32 %99, 64
  %103 = getelementptr inbounds float, ptr %arg1, i32 %99
  %104 = load float, ptr %103, align 4, !invariant.load !297
  br label %concatenate.3.merge14

concatenate.pivot.32.17:                          ; preds = %concatenate.3.merge8
  %105 = icmp ult i32 %13, 32
  br i1 %105, label %concatenate.pivot.0.18, label %concatenate.pivot.32.19

concatenate.pivot.0.18:                           ; preds = %concatenate.pivot.32.17
  br label %concat_index_from_operand_id015

concatenate.pivot.32.19:                          ; preds = %concatenate.pivot.32.17
  br label %concat_index_from_operand_id116

concatenate.3.merge14:                            ; preds = %concat_index_from_operand_id116, %concat_index_from_operand_id015
  %106 = phi float [ %94, %concat_index_from_operand_id015 ], [ %104, %concat_index_from_operand_id116 ]
  %107 = getelementptr inbounds float, ptr %arg2, i32 %linear_index3
  store float %106, ptr %107, align 4
  br label %concatenate_101.in_bounds-after
}

define void @fusion_441(ptr noalias align 128 dereferenceable(4194304) %arg0, ptr noalias align 16 dereferenceable(512) %arg1, ptr noalias align 128 dereferenceable(4194304) %arg2) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !366
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !358
  %2 = mul nuw nsw i32 %0, 128
  %3 = call i32 @llvm.nvvm.read.ptx.sreg.tid.y(), !range !367
  %4 = mul nuw nsw i32 %3, 32
  %5 = add nuw nsw i32 %2, %4
  %linear_index = add nuw nsw i32 %5, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 262144
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %row_index = mul nuw nsw i32 %1, 4
  %6 = udiv i32 %linear_index_base, 1
  %7 = urem i32 %6, 128
  %8 = udiv i32 %linear_index_base, 128
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %row_index_plus1 = add nuw nsw i32 %row_index, 1
  %9 = udiv i32 %linear_index1, 1
  %10 = urem i32 %9, 128
  %11 = udiv i32 %linear_index1, 128
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %row_index_plus2 = add nuw nsw i32 %row_index, 2
  %12 = udiv i32 %linear_index2, 1
  %13 = urem i32 %12, 128
  %14 = udiv i32 %linear_index2, 128
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %row_index_plus3 = add nuw nsw i32 %row_index, 3
  %15 = udiv i32 %linear_index3, 1
  %16 = urem i32 %15, 128
  %17 = udiv i32 %linear_index3, 128
  %18 = icmp ult i32 %linear_index_base, 1048576
  br i1 %18, label %fusion_441.in_bounds-true, label %fusion_441.in_bounds-after

fusion_441.in_bounds-after:                       ; preds = %fusion_441.in_bounds-true, %entry
  ret void

fusion_441.in_bounds-true:                        ; preds = %entry
  %19 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_base
  %20 = load float, ptr %19, align 4, !invariant.load !297
  %21 = getelementptr inbounds [128 x float], ptr %arg1, i32 0, i32 %row_index
  %22 = load float, ptr %21, align 4, !invariant.load !297
  %add.4 = fadd float %20, %22
  %region_0_8_constant_5 = load float, ptr @21, align 4
  %23 = fcmp oge float %add.4, %region_0_8_constant_5
  %24 = fcmp une float %add.4, %add.4
  %25 = or i1 %23, %24
  %maximum.7 = select i1 %25, float %add.4, float %region_0_8_constant_5
  %26 = getelementptr inbounds float, ptr %arg2, i32 %linear_index_base
  store float %maximum.7, ptr %26, align 4
  %27 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  %28 = load float, ptr %27, align 4, !invariant.load !297
  %29 = getelementptr inbounds [128 x float], ptr %arg1, i32 0, i32 %row_index_plus1
  %30 = load float, ptr %29, align 4, !invariant.load !297
  %add.41 = fadd float %28, %30
  %region_0_8_constant_52 = load float, ptr @21, align 4
  %31 = fcmp oge float %add.41, %region_0_8_constant_52
  %32 = fcmp une float %add.41, %add.41
  %33 = or i1 %31, %32
  %maximum.73 = select i1 %33, float %add.41, float %region_0_8_constant_52
  %34 = getelementptr inbounds float, ptr %arg2, i32 %linear_index1
  store float %maximum.73, ptr %34, align 4
  %35 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  %36 = load float, ptr %35, align 4, !invariant.load !297
  %37 = getelementptr inbounds [128 x float], ptr %arg1, i32 0, i32 %row_index_plus2
  %38 = load float, ptr %37, align 4, !invariant.load !297
  %add.44 = fadd float %36, %38
  %region_0_8_constant_55 = load float, ptr @21, align 4
  %39 = fcmp oge float %add.44, %region_0_8_constant_55
  %40 = fcmp une float %add.44, %add.44
  %41 = or i1 %39, %40
  %maximum.76 = select i1 %41, float %add.44, float %region_0_8_constant_55
  %42 = getelementptr inbounds float, ptr %arg2, i32 %linear_index2
  store float %maximum.76, ptr %42, align 4
  %43 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  %44 = load float, ptr %43, align 4, !invariant.load !297
  %45 = getelementptr inbounds [128 x float], ptr %arg1, i32 0, i32 %row_index_plus3
  %46 = load float, ptr %45, align 4, !invariant.load !297
  %add.47 = fadd float %44, %46
  %region_0_8_constant_58 = load float, ptr @21, align 4
  %47 = fcmp oge float %add.47, %region_0_8_constant_58
  %48 = fcmp une float %add.47, %add.47
  %49 = or i1 %47, %48
  %maximum.79 = select i1 %49, float %add.47, float %region_0_8_constant_58
  %50 = getelementptr inbounds float, ptr %arg2, i32 %linear_index3
  store float %maximum.79, ptr %50, align 4
  br label %fusion_441.in_bounds-after
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.nvvm.read.ptx.sreg.tid.y() #0

define void @slice_175(ptr noalias align 128 dereferenceable(8388608) %arg0, ptr noalias align 128 dereferenceable(4194304) %arg1) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !345
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 262144
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 128
  %5 = udiv i32 %linear_index_base, 128
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 128
  %8 = udiv i32 %linear_index1, 128
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 128
  %11 = udiv i32 %linear_index2, 128
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 128
  %14 = udiv i32 %linear_index3, 128
  %15 = icmp ult i32 %linear_index_base, 1048576
  br i1 %15, label %slice_175.in_bounds-true, label %slice_175.in_bounds-after

slice_175.in_bounds-after:                        ; preds = %slice_175.in_bounds-true, %entry
  ret void

slice_175.in_bounds-true:                         ; preds = %entry
  %16 = add i32 %5, 0
  %17 = add i32 %4, 128
  %18 = getelementptr inbounds [8192 x [256 x float]], ptr %arg0, i32 0, i32 %16, i32 %17
  %19 = load float, ptr %18, align 4, !invariant.load !297
  %20 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  store float %19, ptr %20, align 4
  %21 = add i32 %8, 0
  %22 = add i32 %7, 128
  %23 = getelementptr inbounds [8192 x [256 x float]], ptr %arg0, i32 0, i32 %21, i32 %22
  %24 = load float, ptr %23, align 4, !invariant.load !297
  %25 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  store float %24, ptr %25, align 4
  %26 = add i32 %11, 0
  %27 = add i32 %10, 128
  %28 = getelementptr inbounds [8192 x [256 x float]], ptr %arg0, i32 0, i32 %26, i32 %27
  %29 = load float, ptr %28, align 4, !invariant.load !297
  %30 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  store float %29, ptr %30, align 4
  %31 = add i32 %14, 0
  %32 = add i32 %13, 128
  %33 = getelementptr inbounds [8192 x [256 x float]], ptr %arg0, i32 0, i32 %31, i32 %32
  %34 = load float, ptr %33, align 4, !invariant.load !297
  %35 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  store float %34, ptr %35, align 4
  br label %slice_175.in_bounds-after
}

define void @slice_174(ptr noalias align 128 dereferenceable(8388608) %arg0, ptr noalias align 128 dereferenceable(4194304) %arg1) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !345
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 262144
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 128
  %5 = udiv i32 %linear_index_base, 128
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 128
  %8 = udiv i32 %linear_index1, 128
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 128
  %11 = udiv i32 %linear_index2, 128
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 128
  %14 = udiv i32 %linear_index3, 128
  %15 = icmp ult i32 %linear_index_base, 1048576
  br i1 %15, label %slice_174.in_bounds-true, label %slice_174.in_bounds-after

slice_174.in_bounds-after:                        ; preds = %slice_174.in_bounds-true, %entry
  ret void

slice_174.in_bounds-true:                         ; preds = %entry
  %16 = add i32 %5, 0
  %17 = add i32 %4, 0
  %18 = getelementptr inbounds [8192 x [256 x float]], ptr %arg0, i32 0, i32 %16, i32 %17
  %19 = load float, ptr %18, align 4, !invariant.load !297
  %20 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  store float %19, ptr %20, align 4
  %21 = add i32 %8, 0
  %22 = add i32 %7, 0
  %23 = getelementptr inbounds [8192 x [256 x float]], ptr %arg0, i32 0, i32 %21, i32 %22
  %24 = load float, ptr %23, align 4, !invariant.load !297
  %25 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  store float %24, ptr %25, align 4
  %26 = add i32 %11, 0
  %27 = add i32 %10, 0
  %28 = getelementptr inbounds [8192 x [256 x float]], ptr %arg0, i32 0, i32 %26, i32 %27
  %29 = load float, ptr %28, align 4, !invariant.load !297
  %30 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  store float %29, ptr %30, align 4
  %31 = add i32 %14, 0
  %32 = add i32 %13, 0
  %33 = getelementptr inbounds [8192 x [256 x float]], ptr %arg0, i32 0, i32 %31, i32 %32
  %34 = load float, ptr %33, align 4, !invariant.load !297
  %35 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  store float %34, ptr %35, align 4
  br label %slice_174.in_bounds-after
}

define void @fusion_508(ptr noalias align 16 dereferenceable(1024) %arg0, ptr noalias align 128 dereferenceable(8388608) %arg1, ptr noalias align 128 dereferenceable(8388608) %arg2) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !366
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 524288
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 256
  %5 = udiv i32 %linear_index_base, 256
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 256
  %8 = udiv i32 %linear_index1, 256
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 256
  %11 = udiv i32 %linear_index2, 256
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 256
  %14 = udiv i32 %linear_index3, 256
  %15 = icmp ult i32 %linear_index_base, 2097152
  br i1 %15, label %fusion_508.in_bounds-true, label %fusion_508.in_bounds-after

fusion_508.in_bounds-after:                       ; preds = %fusion_508.in_bounds-true, %entry
  ret void

fusion_508.in_bounds-true:                        ; preds = %entry
  %16 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  %17 = load float, ptr %16, align 4
  %18 = getelementptr inbounds float, ptr %arg2, i32 %linear_index_base
  %19 = load float, ptr %18, align 4, !invariant.load !297
  %add.4 = fadd float %17, %19
  %20 = getelementptr inbounds [256 x float], ptr %arg0, i32 0, i32 %4
  %21 = load float, ptr %20, align 4, !invariant.load !297
  %add.6 = fadd float %add.4, %21
  %region_0_10_constant_7 = load float, ptr @22, align 4
  %22 = fcmp oge float %add.6, %region_0_10_constant_7
  %23 = fcmp une float %add.6, %add.6
  %24 = or i1 %22, %23
  %maximum.9 = select i1 %24, float %add.6, float %region_0_10_constant_7
  %25 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  store float %maximum.9, ptr %25, align 4
  %26 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  %27 = load float, ptr %26, align 4
  %28 = getelementptr inbounds float, ptr %arg2, i32 %linear_index1
  %29 = load float, ptr %28, align 4, !invariant.load !297
  %add.41 = fadd float %27, %29
  %30 = getelementptr inbounds [256 x float], ptr %arg0, i32 0, i32 %7
  %31 = load float, ptr %30, align 4, !invariant.load !297
  %add.62 = fadd float %add.41, %31
  %region_0_10_constant_73 = load float, ptr @22, align 4
  %32 = fcmp oge float %add.62, %region_0_10_constant_73
  %33 = fcmp une float %add.62, %add.62
  %34 = or i1 %32, %33
  %maximum.94 = select i1 %34, float %add.62, float %region_0_10_constant_73
  %35 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  store float %maximum.94, ptr %35, align 4
  %36 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  %37 = load float, ptr %36, align 4
  %38 = getelementptr inbounds float, ptr %arg2, i32 %linear_index2
  %39 = load float, ptr %38, align 4, !invariant.load !297
  %add.45 = fadd float %37, %39
  %40 = getelementptr inbounds [256 x float], ptr %arg0, i32 0, i32 %10
  %41 = load float, ptr %40, align 4, !invariant.load !297
  %add.66 = fadd float %add.45, %41
  %region_0_10_constant_77 = load float, ptr @22, align 4
  %42 = fcmp oge float %add.66, %region_0_10_constant_77
  %43 = fcmp une float %add.66, %add.66
  %44 = or i1 %42, %43
  %maximum.98 = select i1 %44, float %add.66, float %region_0_10_constant_77
  %45 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  store float %maximum.98, ptr %45, align 4
  %46 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  %47 = load float, ptr %46, align 4
  %48 = getelementptr inbounds float, ptr %arg2, i32 %linear_index3
  %49 = load float, ptr %48, align 4, !invariant.load !297
  %add.49 = fadd float %47, %49
  %50 = getelementptr inbounds [256 x float], ptr %arg0, i32 0, i32 %13
  %51 = load float, ptr %50, align 4, !invariant.load !297
  %add.610 = fadd float %add.49, %51
  %region_0_10_constant_711 = load float, ptr @22, align 4
  %52 = fcmp oge float %add.610, %region_0_10_constant_711
  %53 = fcmp une float %add.610, %add.610
  %54 = or i1 %52, %53
  %maximum.912 = select i1 %54, float %add.610, float %region_0_10_constant_711
  %55 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  store float %maximum.912, ptr %55, align 4
  br label %fusion_508.in_bounds-after
}

define void @fusion_505(ptr noalias align 16 dereferenceable(512) %arg0, ptr noalias align 128 dereferenceable(4194304) %arg1, ptr noalias align 16 dereferenceable(512) %arg2, ptr noalias align 128 dereferenceable(32768) %arg3, ptr noalias align 128 dereferenceable(4194304) %arg4) {
entry:
  %initial_value_addr = alloca float, align 4
  %return_buffer38 = alloca float, align 4
  %result_from_other_lane36 = alloca float, align 4
  %return_buffer35 = alloca float, align 4
  %result_from_other_lane33 = alloca float, align 4
  %return_buffer32 = alloca float, align 4
  %result_from_other_lane30 = alloca float, align 4
  %return_buffer29 = alloca float, align 4
  %result_from_other_lane27 = alloca float, align 4
  %return_buffer26 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer24 = alloca float, align 4
  %tile_loop.invar_address10 = alloca i32, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %inter_warp_reduce-after, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_18_constant_6 = load float, ptr @23, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_18_constant_6, ptr %2, align 4
  %3 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !352
  %4 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !368
  %5 = urem i32 %3, 32
  %6 = udiv i32 %3, 32
  %7 = mul i32 %4, 3
  %8 = add i32 %7, %6
  %9 = icmp ult i32 %8, 8192
  br i1 %9, label %10, label %early_return

10:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %5, 32
  %thread_id.y = udiv i32 %5, 32
  %lane_id = urem i32 %5, 32
  %11 = udiv i32 %8, 1
  %12 = urem i32 %11, 1
  %13 = udiv i32 %8, 1
  %14 = urem i32 %13, 8192
  %15 = udiv i32 %8, 8192
  %16 = icmp eq i32 %14, 8191
  %tile_bound = select i1 %16, i32 1, i32 1
  %17 = icmp eq i32 %12, 0
  %tile_bound1 = select i1 %17, i32 128, i32 512
  %tile_origin.0 = mul i32 %15, 1
  %tile_origin.1 = mul i32 %14, 1
  %tile_origin.2 = mul i32 %12, 512
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %is_full_tile-after, %10
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %18 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %18, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 1
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %19 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %20 = icmp eq i32 512, %tile_bound1
  br i1 %20, label %is_full_tile-true, label %is_full_tile-false

is_full_tile-after:                               ; preds = %tile_loop.loop_exit7, %tile_loop.loop_exit
  br label %y_in_tile.loop_header, !llvm.loop !369

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %partial_reduction_result25 = load float, ptr %current_output, align 4
  %21 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result25, i32 16, i32 31)
  store float %21, ptr %result_from_other_lane, align 4
  call void @region_1_12__1(ptr %current_output, ptr %result_from_other_lane, ptr %return_buffer26)
  %22 = load float, ptr %return_buffer26, align 4
  store float %22, ptr %current_output, align 4
  %partial_reduction_result28 = load float, ptr %current_output, align 4
  %23 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result28, i32 8, i32 31)
  store float %23, ptr %result_from_other_lane27, align 4
  call void @region_1_12__1(ptr %current_output, ptr %result_from_other_lane27, ptr %return_buffer29)
  %24 = load float, ptr %return_buffer29, align 4
  store float %24, ptr %current_output, align 4
  %partial_reduction_result31 = load float, ptr %current_output, align 4
  %25 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result31, i32 4, i32 31)
  store float %25, ptr %result_from_other_lane30, align 4
  call void @region_1_12__1(ptr %current_output, ptr %result_from_other_lane30, ptr %return_buffer32)
  %26 = load float, ptr %return_buffer32, align 4
  store float %26, ptr %current_output, align 4
  %partial_reduction_result34 = load float, ptr %current_output, align 4
  %27 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result34, i32 2, i32 31)
  store float %27, ptr %result_from_other_lane33, align 4
  call void @region_1_12__1(ptr %current_output, ptr %result_from_other_lane33, ptr %return_buffer35)
  %28 = load float, ptr %return_buffer35, align 4
  store float %28, ptr %current_output, align 4
  %partial_reduction_result37 = load float, ptr %current_output, align 4
  %29 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result37, i32 1, i32 31)
  store float %29, ptr %result_from_other_lane36, align 4
  call void @region_1_12__1(ptr %current_output, ptr %result_from_other_lane36, ptr %return_buffer38)
  %30 = load float, ptr %return_buffer38, align 4
  store float %30, ptr %current_output, align 4
  %31 = udiv i32 %thread_id.x, 32
  %32 = icmp eq i32 %lane_id, 0
  br i1 %32, label %intra_warp_reduce_write-true, label %intra_warp_reduce_write-after

intra_warp_reduce_write-after:                    ; preds = %intra_warp_reduce_write-true, %y_in_tile.loop_exit
  call void @llvm.nvvm.barrier0()
  %33 = icmp eq i32 %31, 0
  br i1 %33, label %inter_warp_reduce-true, label %inter_warp_reduce-after

inter_warp_reduce-after:                          ; preds = %reduction_write_output-after, %intra_warp_reduce_write-after
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

is_full_tile-true:                                ; preds = %y_in_tile.loop_body
  %34 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %tile_loop.loop_body, %is_full_tile-true
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %35 = icmp uge i32 %tile_loop.indvar, 16
  br i1 %35, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %36 = icmp eq i32 %tile_loop.indvar, 0
  %37 = mul i32 %tile_loop.indvar, 32
  %38 = add i32 %37, 0
  %x_loc = add i32 %38, %34
  %39 = add i32 %tile_origin.1, %y_in_tile.indvar
  %40 = add i32 %tile_origin.2, %x_loc
  %Arg_1.2 = getelementptr inbounds [8192 x [128 x float]], ptr %arg1, i32 0, i32 %39, i32 %40
  %Arg_1.23 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %Arg_2.3 = getelementptr inbounds [128 x float], ptr %arg2, i32 0, i32 %40
  %Arg_2.34 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %add.5 = fadd float %Arg_1.23, %Arg_2.34
  %region_0_18_constant_65 = load float, ptr @23, align 4
  %41 = fcmp oge float %add.5, %region_0_18_constant_65
  %42 = fcmp une float %add.5, %add.5
  %43 = or i1 %41, %42
  %maximum.8 = select i1 %43, float %add.5, float %region_0_18_constant_65
  %Arg_0.1 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %40, i32 0
  %Arg_0.16 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %multiply.11 = fmul float %maximum.8, %Arg_0.16
  store float %multiply.11, ptr %reduction_input_address, align 4
  %44 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_12__1(ptr %44, ptr %reduction_input_address, ptr %return_buffer)
  %45 = load float, ptr %return_buffer, align 4
  store float %45, ptr %44, align 4
  %46 = getelementptr inbounds [8192 x [128 x float]], ptr %arg4, i32 0, i32 %39, i32 %40
  store float %maximum.8, ptr %46, align 4
  br label %tile_loop.loop_header, !llvm.loop !370

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %is_full_tile-after

is_full_tile-false:                               ; preds = %y_in_tile.loop_body
  %47 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address10, align 4
  br label %tile_loop.loop_header8

tile_loop.loop_header8:                           ; preds = %x_in_tile-after, %is_full_tile-false
  %tile_loop.indvar11 = load i32, ptr %tile_loop.invar_address10, align 4
  %48 = icmp uge i32 %tile_loop.indvar11, 16
  br i1 %48, label %tile_loop.loop_exit7, label %tile_loop.loop_body9

tile_loop.loop_body9:                             ; preds = %tile_loop.loop_header8
  %invar.inc12 = add nuw nsw i32 %tile_loop.indvar11, 1
  store i32 %invar.inc12, ptr %tile_loop.invar_address10, align 4
  %49 = icmp eq i32 %tile_loop.indvar11, 0
  %50 = mul i32 %tile_loop.indvar11, 32
  %51 = add i32 %50, 0
  %x_loc13 = add i32 %51, %47
  %52 = add i32 %tile_origin.1, %y_in_tile.indvar
  %53 = add i32 %tile_origin.2, %x_loc13
  %54 = icmp ult i32 %x_loc13, %tile_bound1
  br i1 %54, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body9
  br label %tile_loop.loop_header8, !llvm.loop !371

tile_loop.loop_exit7:                             ; preds = %tile_loop.loop_header8
  br label %is_full_tile-after

x_in_tile-true:                                   ; preds = %tile_loop.loop_body9
  %Arg_1.214 = getelementptr inbounds [8192 x [128 x float]], ptr %arg1, i32 0, i32 %52, i32 %53
  %Arg_1.215 = load float, ptr %Arg_1.214, align 4, !invariant.load !297
  %Arg_2.316 = getelementptr inbounds [128 x float], ptr %arg2, i32 0, i32 %53
  %Arg_2.317 = load float, ptr %Arg_2.316, align 4, !invariant.load !297
  %add.518 = fadd float %Arg_1.215, %Arg_2.317
  %region_0_18_constant_619 = load float, ptr @23, align 4
  %55 = fcmp oge float %add.518, %region_0_18_constant_619
  %56 = fcmp une float %add.518, %add.518
  %57 = or i1 %55, %56
  %maximum.820 = select i1 %57, float %add.518, float %region_0_18_constant_619
  %Arg_0.121 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %53, i32 0
  %Arg_0.122 = load float, ptr %Arg_0.121, align 4, !invariant.load !297
  %multiply.1123 = fmul float %maximum.820, %Arg_0.122
  store float %multiply.1123, ptr %reduction_input_address, align 4
  %58 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_12__1(ptr %58, ptr %reduction_input_address, ptr %return_buffer24)
  %59 = load float, ptr %return_buffer24, align 4
  store float %59, ptr %58, align 4
  %60 = getelementptr inbounds [8192 x [128 x float]], ptr %arg4, i32 0, i32 %52, i32 %53
  store float %maximum.820, ptr %60, align 4
  br label %x_in_tile-after

intra_warp_reduce_write-true:                     ; preds = %y_in_tile.loop_exit
  %61 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache16, i32 0, i32 %6, i32 0, i32 %31
  %62 = addrspacecast ptr addrspace(3) %61 to ptr
  %63 = load float, ptr %current_output, align 4
  store float %63, ptr %62, align 4
  br label %intra_warp_reduce_write-after

inter_warp_reduce-true:                           ; preds = %intra_warp_reduce_write-after
  %64 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache16, i32 0, i32 %6, i32 0, i32 %lane_id
  %65 = addrspacecast ptr addrspace(3) %64 to ptr
  store float %region_0_18_constant_6, ptr %initial_value_addr, align 4
  %66 = icmp ult i32 %thread_id.x, 1
  %67 = select i1 %66, ptr %65, ptr %initial_value_addr
  %68 = icmp eq i32 %thread_id.x, 0
  br i1 %68, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %inter_warp_reduce-true
  br label %inter_warp_reduce-after

reduction_write_output-true:                      ; preds = %inter_warp_reduce-true
  %69 = mul i32 %thread_id.x, 1
  %70 = add i32 %tile_origin.1, %thread_id.y
  %71 = add i32 %tile_origin.2, %69
  %72 = add i32 %71, 0
  %73 = udiv i32 %70, 1
  %output_element_address = getelementptr inbounds [8192 x float], ptr %arg3, i32 0, i32 %73
  %output = load float, ptr %67, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after
}

define internal void @region_1_12__1(ptr dereferenceable(4) %Arg_0.13.typed, ptr dereferenceable(4) %Arg_1.14.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.15.typed = alloca float, align 4
  %Arg_0.13 = load float, ptr %Arg_0.13.typed, align 4
  %Arg_1.14 = load float, ptr %Arg_1.14.typed, align 4
  %add.15 = fadd float %Arg_0.13, %Arg_1.14
  store float %add.15, ptr %add.15.typed, align 4
  %load_ret_value = load float, ptr %add.15.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_504(ptr noalias align 128 dereferenceable(32768) %arg0, ptr noalias align 16 dereferenceable(4) %arg1, ptr noalias align 128 dereferenceable(32768) %arg2) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !319
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 8192
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = icmp ult i32 %linear_index, 8192
  br i1 %4, label %fusion_504.in_bounds-true, label %fusion_504.in_bounds-after

fusion_504.in_bounds-after:                       ; preds = %fusion_504.in_bounds-true, %entry
  ret void

fusion_504.in_bounds-true:                        ; preds = %entry
  %region_0_12_constant_3 = load float, ptr @24, align 4
  %5 = getelementptr inbounds float, ptr %arg0, i32 %linear_index
  %6 = load float, ptr %5, align 4, !invariant.load !297
  %7 = getelementptr inbounds [1 x float], ptr %arg1, i32 0, i32 0
  %8 = load float, ptr %7, align 4, !invariant.load !297
  %add.7 = fadd float %6, %8
  %9 = fneg float %add.7
  %10 = call float @__nv_expf(float %9)
  %add.10 = fadd float %region_0_12_constant_3, %10
  %divide.11 = fdiv float %region_0_12_constant_3, %add.10
  %11 = getelementptr inbounds float, ptr %arg2, i32 %linear_index
  store float %divide.11, ptr %11, align 4
  br label %fusion_504.in_bounds-after
}

; Function Attrs: nounwind memory(none)
declare float @__nv_expf(float) #4

define void @fusion_497(ptr noalias align 16 dereferenceable(512) %arg0, ptr noalias align 16 dereferenceable(512) %arg1, ptr noalias align 128 dereferenceable(4194304) %arg2, ptr noalias align 16 dereferenceable(512) %arg3, ptr noalias align 128 dereferenceable(32768) %arg4, ptr noalias align 128 dereferenceable(32768) %arg5, ptr noalias align 128 dereferenceable(4194304) %arg6) {
entry:
  %initial_value_addr68 = alloca float, align 4
  %return_buffer63 = alloca float, align 4
  %result_from_other_lane61 = alloca float, align 4
  %return_buffer60 = alloca float, align 4
  %result_from_other_lane58 = alloca float, align 4
  %return_buffer57 = alloca float, align 4
  %result_from_other_lane55 = alloca float, align 4
  %return_buffer54 = alloca float, align 4
  %result_from_other_lane52 = alloca float, align 4
  %return_buffer51 = alloca float, align 4
  %result_from_other_lane49 = alloca float, align 4
  %initial_value_addr = alloca float, align 4
  %return_buffer47 = alloca float, align 4
  %result_from_other_lane45 = alloca float, align 4
  %return_buffer44 = alloca float, align 4
  %result_from_other_lane42 = alloca float, align 4
  %return_buffer41 = alloca float, align 4
  %result_from_other_lane39 = alloca float, align 4
  %return_buffer38 = alloca float, align 4
  %result_from_other_lane36 = alloca float, align 4
  %return_buffer35 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer33 = alloca float, align 4
  %return_buffer29 = alloca float, align 4
  %tile_loop.invar_address15 = alloca i32, align 4
  %return_buffer11 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result2 = alloca float, align 4
  %reduction_input_address1 = alloca float, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %inter_warp_reduce-after67, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_27_constant_7 = load float, ptr @25, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_27_constant_7, ptr %2, align 4
  %region_0_27_constant_73 = load float, ptr @25, align 4
  %3 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  store float %region_0_27_constant_73, ptr %3, align 4
  %4 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !352
  %5 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !368
  %6 = urem i32 %4, 32
  %7 = udiv i32 %4, 32
  %8 = mul i32 %5, 3
  %9 = add i32 %8, %7
  %10 = icmp ult i32 %9, 8192
  br i1 %10, label %11, label %early_return

11:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %6, 32
  %thread_id.y = udiv i32 %6, 32
  %lane_id = urem i32 %6, 32
  %12 = udiv i32 %9, 1
  %13 = urem i32 %12, 1
  %14 = udiv i32 %9, 1
  %15 = urem i32 %14, 8192
  %16 = udiv i32 %9, 8192
  %17 = icmp eq i32 %15, 8191
  %tile_bound = select i1 %17, i32 1, i32 1
  %18 = icmp eq i32 %13, 0
  %tile_bound4 = select i1 %18, i32 128, i32 512
  %tile_origin.0 = mul i32 %16, 1
  %tile_origin.1 = mul i32 %15, 1
  %tile_origin.2 = mul i32 %13, 512
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %is_full_tile-after, %11
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %19 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %19, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 1
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %20 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %21 = icmp eq i32 512, %tile_bound4
  br i1 %21, label %is_full_tile-true, label %is_full_tile-false

is_full_tile-after:                               ; preds = %tile_loop.loop_exit12, %tile_loop.loop_exit
  br label %y_in_tile.loop_header, !llvm.loop !372

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %partial_reduction_result34 = load float, ptr %current_output, align 4
  %22 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result34, i32 16, i32 31)
  store float %22, ptr %result_from_other_lane, align 4
  call void @region_1_13(ptr %current_output, ptr %result_from_other_lane, ptr %return_buffer35)
  %23 = load float, ptr %return_buffer35, align 4
  store float %23, ptr %current_output, align 4
  %partial_reduction_result37 = load float, ptr %current_output, align 4
  %24 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result37, i32 8, i32 31)
  store float %24, ptr %result_from_other_lane36, align 4
  call void @region_1_13(ptr %current_output, ptr %result_from_other_lane36, ptr %return_buffer38)
  %25 = load float, ptr %return_buffer38, align 4
  store float %25, ptr %current_output, align 4
  %partial_reduction_result40 = load float, ptr %current_output, align 4
  %26 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result40, i32 4, i32 31)
  store float %26, ptr %result_from_other_lane39, align 4
  call void @region_1_13(ptr %current_output, ptr %result_from_other_lane39, ptr %return_buffer41)
  %27 = load float, ptr %return_buffer41, align 4
  store float %27, ptr %current_output, align 4
  %partial_reduction_result43 = load float, ptr %current_output, align 4
  %28 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result43, i32 2, i32 31)
  store float %28, ptr %result_from_other_lane42, align 4
  call void @region_1_13(ptr %current_output, ptr %result_from_other_lane42, ptr %return_buffer44)
  %29 = load float, ptr %return_buffer44, align 4
  store float %29, ptr %current_output, align 4
  %partial_reduction_result46 = load float, ptr %current_output, align 4
  %30 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result46, i32 1, i32 31)
  store float %30, ptr %result_from_other_lane45, align 4
  call void @region_1_13(ptr %current_output, ptr %result_from_other_lane45, ptr %return_buffer47)
  %31 = load float, ptr %return_buffer47, align 4
  store float %31, ptr %current_output, align 4
  %32 = udiv i32 %thread_id.x, 32
  %33 = icmp eq i32 %lane_id, 0
  br i1 %33, label %intra_warp_reduce_write-true, label %intra_warp_reduce_write-after

intra_warp_reduce_write-after:                    ; preds = %intra_warp_reduce_write-true, %y_in_tile.loop_exit
  call void @llvm.nvvm.barrier0()
  %34 = icmp eq i32 %32, 0
  br i1 %34, label %inter_warp_reduce-true, label %inter_warp_reduce-after

inter_warp_reduce-after:                          ; preds = %reduction_write_output-after, %intra_warp_reduce_write-after
  %current_output48 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  %partial_reduction_result50 = load float, ptr %current_output48, align 4
  %35 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result50, i32 16, i32 31)
  store float %35, ptr %result_from_other_lane49, align 4
  call void @region_2_21(ptr %current_output48, ptr %result_from_other_lane49, ptr %return_buffer51)
  %36 = load float, ptr %return_buffer51, align 4
  store float %36, ptr %current_output48, align 4
  %partial_reduction_result53 = load float, ptr %current_output48, align 4
  %37 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result53, i32 8, i32 31)
  store float %37, ptr %result_from_other_lane52, align 4
  call void @region_2_21(ptr %current_output48, ptr %result_from_other_lane52, ptr %return_buffer54)
  %38 = load float, ptr %return_buffer54, align 4
  store float %38, ptr %current_output48, align 4
  %partial_reduction_result56 = load float, ptr %current_output48, align 4
  %39 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result56, i32 4, i32 31)
  store float %39, ptr %result_from_other_lane55, align 4
  call void @region_2_21(ptr %current_output48, ptr %result_from_other_lane55, ptr %return_buffer57)
  %40 = load float, ptr %return_buffer57, align 4
  store float %40, ptr %current_output48, align 4
  %partial_reduction_result59 = load float, ptr %current_output48, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result59, i32 2, i32 31)
  store float %41, ptr %result_from_other_lane58, align 4
  call void @region_2_21(ptr %current_output48, ptr %result_from_other_lane58, ptr %return_buffer60)
  %42 = load float, ptr %return_buffer60, align 4
  store float %42, ptr %current_output48, align 4
  %partial_reduction_result62 = load float, ptr %current_output48, align 4
  %43 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result62, i32 1, i32 31)
  store float %43, ptr %result_from_other_lane61, align 4
  call void @region_2_21(ptr %current_output48, ptr %result_from_other_lane61, ptr %return_buffer63)
  %44 = load float, ptr %return_buffer63, align 4
  store float %44, ptr %current_output48, align 4
  %45 = udiv i32 %thread_id.x, 32
  %46 = icmp eq i32 %lane_id, 0
  br i1 %46, label %intra_warp_reduce_write-true64, label %intra_warp_reduce_write-after65

intra_warp_reduce_write-after65:                  ; preds = %intra_warp_reduce_write-true64, %inter_warp_reduce-after
  call void @llvm.nvvm.barrier0()
  %47 = icmp eq i32 %45, 0
  br i1 %47, label %inter_warp_reduce-true66, label %inter_warp_reduce-after67

inter_warp_reduce-after67:                        ; preds = %reduction_write_output-after70, %intra_warp_reduce_write-after65
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

is_full_tile-true:                                ; preds = %y_in_tile.loop_body
  %48 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %tile_loop.loop_body, %is_full_tile-true
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %49 = icmp uge i32 %tile_loop.indvar, 16
  br i1 %49, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc5 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc5, ptr %tile_loop.invar_address, align 4
  %50 = icmp eq i32 %tile_loop.indvar, 0
  %51 = mul i32 %tile_loop.indvar, 32
  %52 = add i32 %51, 0
  %x_loc = add i32 %52, %48
  %53 = add i32 %tile_origin.1, %y_in_tile.indvar
  %54 = add i32 %tile_origin.2, %x_loc
  %Arg_2.3 = getelementptr inbounds [8192 x [128 x float]], ptr %arg2, i32 0, i32 %53, i32 %54
  %Arg_2.36 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %Arg_3.4 = getelementptr inbounds [128 x float], ptr %arg3, i32 0, i32 %54
  %Arg_3.47 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  %add.6 = fadd float %Arg_2.36, %Arg_3.47
  %region_0_27_constant_78 = load float, ptr @25, align 4
  %55 = fcmp oge float %add.6, %region_0_27_constant_78
  %56 = fcmp une float %add.6, %add.6
  %57 = or i1 %55, %56
  %maximum.9 = select i1 %57, float %add.6, float %region_0_27_constant_78
  %Arg_0.1 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %54, i32 0
  %Arg_0.19 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %multiply.12 = fmul float %maximum.9, %Arg_0.19
  store float %multiply.12, ptr %reduction_input_address, align 4
  %58 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_13(ptr %58, ptr %reduction_input_address, ptr %return_buffer)
  %59 = load float, ptr %return_buffer, align 4
  store float %59, ptr %58, align 4
  %Arg_1.2 = getelementptr inbounds [128 x [1 x float]], ptr %arg1, i32 0, i32 %54, i32 0
  %Arg_1.210 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %multiply.20 = fmul float %maximum.9, %Arg_1.210
  store float %multiply.20, ptr %reduction_input_address1, align 4
  %60 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_21(ptr %60, ptr %reduction_input_address1, ptr %return_buffer11)
  %61 = load float, ptr %return_buffer11, align 4
  store float %61, ptr %60, align 4
  %62 = getelementptr inbounds [8192 x [128 x float]], ptr %arg6, i32 0, i32 %53, i32 %54
  store float %maximum.9, ptr %62, align 4
  br label %tile_loop.loop_header, !llvm.loop !373

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %is_full_tile-after

is_full_tile-false:                               ; preds = %y_in_tile.loop_body
  %63 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address15, align 4
  br label %tile_loop.loop_header13

tile_loop.loop_header13:                          ; preds = %x_in_tile-after, %is_full_tile-false
  %tile_loop.indvar16 = load i32, ptr %tile_loop.invar_address15, align 4
  %64 = icmp uge i32 %tile_loop.indvar16, 16
  br i1 %64, label %tile_loop.loop_exit12, label %tile_loop.loop_body14

tile_loop.loop_body14:                            ; preds = %tile_loop.loop_header13
  %invar.inc17 = add nuw nsw i32 %tile_loop.indvar16, 1
  store i32 %invar.inc17, ptr %tile_loop.invar_address15, align 4
  %65 = icmp eq i32 %tile_loop.indvar16, 0
  %66 = mul i32 %tile_loop.indvar16, 32
  %67 = add i32 %66, 0
  %x_loc18 = add i32 %67, %63
  %68 = add i32 %tile_origin.1, %y_in_tile.indvar
  %69 = add i32 %tile_origin.2, %x_loc18
  %70 = icmp ult i32 %x_loc18, %tile_bound4
  br i1 %70, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body14
  br label %tile_loop.loop_header13, !llvm.loop !374

tile_loop.loop_exit12:                            ; preds = %tile_loop.loop_header13
  br label %is_full_tile-after

x_in_tile-true:                                   ; preds = %tile_loop.loop_body14
  %Arg_2.319 = getelementptr inbounds [8192 x [128 x float]], ptr %arg2, i32 0, i32 %68, i32 %69
  %Arg_2.320 = load float, ptr %Arg_2.319, align 4, !invariant.load !297
  %Arg_3.421 = getelementptr inbounds [128 x float], ptr %arg3, i32 0, i32 %69
  %Arg_3.422 = load float, ptr %Arg_3.421, align 4, !invariant.load !297
  %add.623 = fadd float %Arg_2.320, %Arg_3.422
  %region_0_27_constant_724 = load float, ptr @25, align 4
  %71 = fcmp oge float %add.623, %region_0_27_constant_724
  %72 = fcmp une float %add.623, %add.623
  %73 = or i1 %71, %72
  %maximum.925 = select i1 %73, float %add.623, float %region_0_27_constant_724
  %Arg_0.126 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %69, i32 0
  %Arg_0.127 = load float, ptr %Arg_0.126, align 4, !invariant.load !297
  %multiply.1228 = fmul float %maximum.925, %Arg_0.127
  store float %multiply.1228, ptr %reduction_input_address, align 4
  %74 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_13(ptr %74, ptr %reduction_input_address, ptr %return_buffer29)
  %75 = load float, ptr %return_buffer29, align 4
  store float %75, ptr %74, align 4
  %Arg_1.230 = getelementptr inbounds [128 x [1 x float]], ptr %arg1, i32 0, i32 %69, i32 0
  %Arg_1.231 = load float, ptr %Arg_1.230, align 4, !invariant.load !297
  %multiply.2032 = fmul float %maximum.925, %Arg_1.231
  store float %multiply.2032, ptr %reduction_input_address1, align 4
  %76 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_21(ptr %76, ptr %reduction_input_address1, ptr %return_buffer33)
  %77 = load float, ptr %return_buffer33, align 4
  store float %77, ptr %76, align 4
  %78 = getelementptr inbounds [8192 x [128 x float]], ptr %arg6, i32 0, i32 %68, i32 %69
  store float %maximum.925, ptr %78, align 4
  br label %x_in_tile-after

intra_warp_reduce_write-true:                     ; preds = %y_in_tile.loop_exit
  %79 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache17, i32 0, i32 %7, i32 0, i32 %32
  %80 = addrspacecast ptr addrspace(3) %79 to ptr
  %81 = load float, ptr %current_output, align 4
  store float %81, ptr %80, align 4
  br label %intra_warp_reduce_write-after

inter_warp_reduce-true:                           ; preds = %intra_warp_reduce_write-after
  %82 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache17, i32 0, i32 %7, i32 0, i32 %lane_id
  %83 = addrspacecast ptr addrspace(3) %82 to ptr
  store float %region_0_27_constant_7, ptr %initial_value_addr, align 4
  %84 = icmp ult i32 %thread_id.x, 1
  %85 = select i1 %84, ptr %83, ptr %initial_value_addr
  %86 = icmp eq i32 %thread_id.x, 0
  br i1 %86, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %inter_warp_reduce-true
  br label %inter_warp_reduce-after

reduction_write_output-true:                      ; preds = %inter_warp_reduce-true
  %87 = mul i32 %thread_id.x, 1
  %88 = add i32 %tile_origin.1, %thread_id.y
  %89 = add i32 %tile_origin.2, %87
  %90 = add i32 %89, 0
  %91 = udiv i32 %88, 1
  %output_element_address = getelementptr inbounds [8192 x float], ptr %arg4, i32 0, i32 %91
  %output = load float, ptr %85, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

intra_warp_reduce_write-true64:                   ; preds = %inter_warp_reduce-after
  %92 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache18, i32 0, i32 %7, i32 0, i32 %45
  %93 = addrspacecast ptr addrspace(3) %92 to ptr
  %94 = load float, ptr %current_output48, align 4
  store float %94, ptr %93, align 4
  br label %intra_warp_reduce_write-after65

inter_warp_reduce-true66:                         ; preds = %intra_warp_reduce_write-after65
  %95 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache18, i32 0, i32 %7, i32 0, i32 %lane_id
  %96 = addrspacecast ptr addrspace(3) %95 to ptr
  store float %region_0_27_constant_73, ptr %initial_value_addr68, align 4
  %97 = icmp ult i32 %thread_id.x, 1
  %98 = select i1 %97, ptr %96, ptr %initial_value_addr68
  %99 = icmp eq i32 %thread_id.x, 0
  br i1 %99, label %reduction_write_output-true69, label %reduction_write_output-after70

reduction_write_output-after70:                   ; preds = %reduction_write_output-true69, %inter_warp_reduce-true66
  br label %inter_warp_reduce-after67

reduction_write_output-true69:                    ; preds = %inter_warp_reduce-true66
  %100 = mul i32 %thread_id.x, 1
  %101 = add i32 %tile_origin.1, %thread_id.y
  %102 = add i32 %tile_origin.2, %100
  %103 = add i32 %102, 0
  %104 = udiv i32 %101, 1
  %output_element_address71 = getelementptr inbounds [8192 x float], ptr %arg5, i32 0, i32 %104
  %output72 = load float, ptr %98, align 4
  store float %output72, ptr %output_element_address71, align 4
  br label %reduction_write_output-after70
}

define internal void @region_1_13(ptr dereferenceable(4) %Arg_0.14.typed, ptr dereferenceable(4) %Arg_1.15.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.16.typed = alloca float, align 4
  %Arg_0.14 = load float, ptr %Arg_0.14.typed, align 4
  %Arg_1.15 = load float, ptr %Arg_1.15.typed, align 4
  %add.16 = fadd float %Arg_0.14, %Arg_1.15
  store float %add.16, ptr %add.16.typed, align 4
  %load_ret_value = load float, ptr %add.16.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_21(ptr dereferenceable(4) %Arg_0.22.typed, ptr dereferenceable(4) %Arg_1.23.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.24.typed = alloca float, align 4
  %Arg_0.22 = load float, ptr %Arg_0.22.typed, align 4
  %Arg_1.23 = load float, ptr %Arg_1.23.typed, align 4
  %add.24 = fadd float %Arg_0.22, %Arg_1.23
  store float %add.24, ptr %add.24.typed, align 4
  %load_ret_value = load float, ptr %add.24.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_616(ptr noalias align 16 dereferenceable(1024) %arg0, ptr noalias align 128 dereferenceable(8388608) %arg1, ptr noalias align 128 dereferenceable(8388608) %arg2, ptr noalias align 128 dereferenceable(8388608) %arg3) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !366
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 524288
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 256
  %5 = udiv i32 %linear_index_base, 256
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 256
  %8 = udiv i32 %linear_index1, 256
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 256
  %11 = udiv i32 %linear_index2, 256
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 256
  %14 = udiv i32 %linear_index3, 256
  %15 = icmp ult i32 %linear_index_base, 2097152
  br i1 %15, label %fusion_616.in_bounds-true, label %fusion_616.in_bounds-after

fusion_616.in_bounds-after:                       ; preds = %fusion_616.in_bounds-true, %entry
  ret void

fusion_616.in_bounds-true:                        ; preds = %entry
  %16 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  %17 = load float, ptr %16, align 4, !invariant.load !297
  %18 = getelementptr inbounds float, ptr %arg2, i32 %linear_index_base
  %19 = load float, ptr %18, align 4, !invariant.load !297
  %add.4 = fadd float %17, %19
  %20 = getelementptr inbounds [256 x float], ptr %arg0, i32 0, i32 %4
  %21 = load float, ptr %20, align 4, !invariant.load !297
  %add.6 = fadd float %add.4, %21
  %region_0_10_constant_7 = load float, ptr @26, align 4
  %22 = fcmp oge float %add.6, %region_0_10_constant_7
  %23 = fcmp une float %add.6, %add.6
  %24 = or i1 %22, %23
  %maximum.9 = select i1 %24, float %add.6, float %region_0_10_constant_7
  %25 = getelementptr inbounds float, ptr %arg3, i32 %linear_index_base
  store float %maximum.9, ptr %25, align 4
  %26 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  %27 = load float, ptr %26, align 4, !invariant.load !297
  %28 = getelementptr inbounds float, ptr %arg2, i32 %linear_index1
  %29 = load float, ptr %28, align 4, !invariant.load !297
  %add.41 = fadd float %27, %29
  %30 = getelementptr inbounds [256 x float], ptr %arg0, i32 0, i32 %7
  %31 = load float, ptr %30, align 4, !invariant.load !297
  %add.62 = fadd float %add.41, %31
  %region_0_10_constant_73 = load float, ptr @26, align 4
  %32 = fcmp oge float %add.62, %region_0_10_constant_73
  %33 = fcmp une float %add.62, %add.62
  %34 = or i1 %32, %33
  %maximum.94 = select i1 %34, float %add.62, float %region_0_10_constant_73
  %35 = getelementptr inbounds float, ptr %arg3, i32 %linear_index1
  store float %maximum.94, ptr %35, align 4
  %36 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  %37 = load float, ptr %36, align 4, !invariant.load !297
  %38 = getelementptr inbounds float, ptr %arg2, i32 %linear_index2
  %39 = load float, ptr %38, align 4, !invariant.load !297
  %add.45 = fadd float %37, %39
  %40 = getelementptr inbounds [256 x float], ptr %arg0, i32 0, i32 %10
  %41 = load float, ptr %40, align 4, !invariant.load !297
  %add.66 = fadd float %add.45, %41
  %region_0_10_constant_77 = load float, ptr @26, align 4
  %42 = fcmp oge float %add.66, %region_0_10_constant_77
  %43 = fcmp une float %add.66, %add.66
  %44 = or i1 %42, %43
  %maximum.98 = select i1 %44, float %add.66, float %region_0_10_constant_77
  %45 = getelementptr inbounds float, ptr %arg3, i32 %linear_index2
  store float %maximum.98, ptr %45, align 4
  %46 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  %47 = load float, ptr %46, align 4, !invariant.load !297
  %48 = getelementptr inbounds float, ptr %arg2, i32 %linear_index3
  %49 = load float, ptr %48, align 4, !invariant.load !297
  %add.49 = fadd float %47, %49
  %50 = getelementptr inbounds [256 x float], ptr %arg0, i32 0, i32 %13
  %51 = load float, ptr %50, align 4, !invariant.load !297
  %add.610 = fadd float %add.49, %51
  %region_0_10_constant_711 = load float, ptr @26, align 4
  %52 = fcmp oge float %add.610, %region_0_10_constant_711
  %53 = fcmp une float %add.610, %add.610
  %54 = or i1 %52, %53
  %maximum.912 = select i1 %54, float %add.610, float %region_0_10_constant_711
  %55 = getelementptr inbounds float, ptr %arg3, i32 %linear_index3
  store float %maximum.912, ptr %55, align 4
  br label %fusion_616.in_bounds-after
}

define void @concatenate_100(ptr noalias align 16 dereferenceable(8388608) %arg0, ptr noalias align 16 dereferenceable(1048576) %arg1, ptr noalias align 16 dereferenceable(2097152) %arg2, ptr noalias align 16 dereferenceable(262144) %arg3, ptr noalias align 128 dereferenceable(11796480) %arg4) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !375
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 737280
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 360
  %5 = udiv i32 %linear_index_base, 360
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 360
  %8 = udiv i32 %linear_index1, 360
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 360
  %11 = udiv i32 %linear_index2, 360
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 360
  %14 = udiv i32 %linear_index3, 360
  %15 = icmp ult i32 %linear_index_base, 2949120
  br i1 %15, label %concatenate_100.in_bounds-true, label %concatenate_100.in_bounds-after

concatenate_100.in_bounds-after:                  ; preds = %concatenate.5.merge28, %entry
  ret void

concatenate_100.in_bounds-true:                   ; preds = %entry
  br label %concatenate.pivot.288.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %16 = phi i32 [ 0, %concatenate.pivot.0. ]
  %17 = sub nsw i32 %4, %16
  %18 = udiv i32 %linear_index_base, 360
  %19 = mul i32 %18, 256
  %20 = add i32 %19, %17
  %21 = udiv i32 %20, 1
  %22 = urem i32 %21, 256
  %23 = udiv i32 %20, 256
  %24 = getelementptr inbounds float, ptr %arg0, i32 %20
  %25 = load float, ptr %24, align 4, !invariant.load !297
  br label %concatenate.5.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.256.1
  %26 = phi i32 [ 256, %concatenate.pivot.256.1 ]
  %27 = sub nsw i32 %4, %26
  %28 = udiv i32 %linear_index_base, 360
  %29 = mul i32 %28, 32
  %30 = add i32 %29, %27
  %31 = udiv i32 %30, 1
  %32 = urem i32 %31, 32
  %33 = udiv i32 %30, 32
  %34 = getelementptr inbounds float, ptr %arg1, i32 %30
  %35 = load float, ptr %34, align 4, !invariant.load !297
  br label %concatenate.5.merge

concat_index_from_operand_id2:                    ; preds = %concatenate.pivot.288.2
  %36 = phi i32 [ 288, %concatenate.pivot.288.2 ]
  %37 = sub nsw i32 %4, %36
  %38 = udiv i32 %linear_index_base, 360
  %39 = mul i32 %38, 64
  %40 = add i32 %39, %37
  %41 = udiv i32 %40, 1
  %42 = urem i32 %41, 64
  %43 = udiv i32 %40, 64
  %44 = getelementptr inbounds float, ptr %arg2, i32 %40
  %45 = load float, ptr %44, align 4, !invariant.load !297
  br label %concatenate.5.merge

concat_index_from_operand_id3:                    ; preds = %concatenate.pivot.352.3
  %46 = phi i32 [ 352, %concatenate.pivot.352.3 ]
  %47 = sub nsw i32 %4, %46
  %48 = udiv i32 %linear_index_base, 360
  %49 = mul i32 %48, 8
  %50 = add i32 %49, %47
  %51 = udiv i32 %50, 1
  %52 = urem i32 %51, 8
  %53 = udiv i32 %50, 8
  %54 = getelementptr inbounds float, ptr %arg3, i32 %50
  %55 = load float, ptr %54, align 4, !invariant.load !297
  br label %concatenate.5.merge

concatenate.pivot.288.:                           ; preds = %concatenate_100.in_bounds-true
  %56 = icmp ult i32 %4, 288
  br i1 %56, label %concatenate.pivot.256., label %concatenate.pivot.352.

concatenate.pivot.256.:                           ; preds = %concatenate.pivot.288.
  %57 = icmp ult i32 %4, 256
  br i1 %57, label %concatenate.pivot.0., label %concatenate.pivot.256.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.256.
  br label %concat_index_from_operand_id0

concatenate.pivot.256.1:                          ; preds = %concatenate.pivot.256.
  br label %concat_index_from_operand_id1

concatenate.pivot.352.:                           ; preds = %concatenate.pivot.288.
  %58 = icmp ult i32 %4, 352
  br i1 %58, label %concatenate.pivot.288.2, label %concatenate.pivot.352.3

concatenate.pivot.288.2:                          ; preds = %concatenate.pivot.352.
  br label %concat_index_from_operand_id2

concatenate.pivot.352.3:                          ; preds = %concatenate.pivot.352.
  br label %concat_index_from_operand_id3

concatenate.5.merge:                              ; preds = %concat_index_from_operand_id3, %concat_index_from_operand_id2, %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %59 = phi float [ %25, %concat_index_from_operand_id0 ], [ %35, %concat_index_from_operand_id1 ], [ %45, %concat_index_from_operand_id2 ], [ %55, %concat_index_from_operand_id3 ]
  %60 = getelementptr inbounds float, ptr %arg4, i32 %linear_index_base
  store float %59, ptr %60, align 4
  br label %concatenate.pivot.288.9

concat_index_from_operand_id05:                   ; preds = %concatenate.pivot.0.11
  %61 = phi i32 [ 0, %concatenate.pivot.0.11 ]
  %62 = sub nsw i32 %7, %61
  %63 = udiv i32 %linear_index1, 360
  %64 = mul i32 %63, 256
  %65 = add i32 %64, %62
  %66 = udiv i32 %65, 1
  %67 = urem i32 %66, 256
  %68 = udiv i32 %65, 256
  %69 = getelementptr inbounds float, ptr %arg0, i32 %65
  %70 = load float, ptr %69, align 4, !invariant.load !297
  br label %concatenate.5.merge4

concat_index_from_operand_id16:                   ; preds = %concatenate.pivot.256.12
  %71 = phi i32 [ 256, %concatenate.pivot.256.12 ]
  %72 = sub nsw i32 %7, %71
  %73 = udiv i32 %linear_index1, 360
  %74 = mul i32 %73, 32
  %75 = add i32 %74, %72
  %76 = udiv i32 %75, 1
  %77 = urem i32 %76, 32
  %78 = udiv i32 %75, 32
  %79 = getelementptr inbounds float, ptr %arg1, i32 %75
  %80 = load float, ptr %79, align 4, !invariant.load !297
  br label %concatenate.5.merge4

concat_index_from_operand_id27:                   ; preds = %concatenate.pivot.288.14
  %81 = phi i32 [ 288, %concatenate.pivot.288.14 ]
  %82 = sub nsw i32 %7, %81
  %83 = udiv i32 %linear_index1, 360
  %84 = mul i32 %83, 64
  %85 = add i32 %84, %82
  %86 = udiv i32 %85, 1
  %87 = urem i32 %86, 64
  %88 = udiv i32 %85, 64
  %89 = getelementptr inbounds float, ptr %arg2, i32 %85
  %90 = load float, ptr %89, align 4, !invariant.load !297
  br label %concatenate.5.merge4

concat_index_from_operand_id38:                   ; preds = %concatenate.pivot.352.15
  %91 = phi i32 [ 352, %concatenate.pivot.352.15 ]
  %92 = sub nsw i32 %7, %91
  %93 = udiv i32 %linear_index1, 360
  %94 = mul i32 %93, 8
  %95 = add i32 %94, %92
  %96 = udiv i32 %95, 1
  %97 = urem i32 %96, 8
  %98 = udiv i32 %95, 8
  %99 = getelementptr inbounds float, ptr %arg3, i32 %95
  %100 = load float, ptr %99, align 4, !invariant.load !297
  br label %concatenate.5.merge4

concatenate.pivot.288.9:                          ; preds = %concatenate.5.merge
  %101 = icmp ult i32 %7, 288
  br i1 %101, label %concatenate.pivot.256.10, label %concatenate.pivot.352.13

concatenate.pivot.256.10:                         ; preds = %concatenate.pivot.288.9
  %102 = icmp ult i32 %7, 256
  br i1 %102, label %concatenate.pivot.0.11, label %concatenate.pivot.256.12

concatenate.pivot.0.11:                           ; preds = %concatenate.pivot.256.10
  br label %concat_index_from_operand_id05

concatenate.pivot.256.12:                         ; preds = %concatenate.pivot.256.10
  br label %concat_index_from_operand_id16

concatenate.pivot.352.13:                         ; preds = %concatenate.pivot.288.9
  %103 = icmp ult i32 %7, 352
  br i1 %103, label %concatenate.pivot.288.14, label %concatenate.pivot.352.15

concatenate.pivot.288.14:                         ; preds = %concatenate.pivot.352.13
  br label %concat_index_from_operand_id27

concatenate.pivot.352.15:                         ; preds = %concatenate.pivot.352.13
  br label %concat_index_from_operand_id38

concatenate.5.merge4:                             ; preds = %concat_index_from_operand_id38, %concat_index_from_operand_id27, %concat_index_from_operand_id16, %concat_index_from_operand_id05
  %104 = phi float [ %70, %concat_index_from_operand_id05 ], [ %80, %concat_index_from_operand_id16 ], [ %90, %concat_index_from_operand_id27 ], [ %100, %concat_index_from_operand_id38 ]
  %105 = getelementptr inbounds float, ptr %arg4, i32 %linear_index1
  store float %104, ptr %105, align 4
  br label %concatenate.pivot.288.21

concat_index_from_operand_id017:                  ; preds = %concatenate.pivot.0.23
  %106 = phi i32 [ 0, %concatenate.pivot.0.23 ]
  %107 = sub nsw i32 %10, %106
  %108 = udiv i32 %linear_index2, 360
  %109 = mul i32 %108, 256
  %110 = add i32 %109, %107
  %111 = udiv i32 %110, 1
  %112 = urem i32 %111, 256
  %113 = udiv i32 %110, 256
  %114 = getelementptr inbounds float, ptr %arg0, i32 %110
  %115 = load float, ptr %114, align 4, !invariant.load !297
  br label %concatenate.5.merge16

concat_index_from_operand_id118:                  ; preds = %concatenate.pivot.256.24
  %116 = phi i32 [ 256, %concatenate.pivot.256.24 ]
  %117 = sub nsw i32 %10, %116
  %118 = udiv i32 %linear_index2, 360
  %119 = mul i32 %118, 32
  %120 = add i32 %119, %117
  %121 = udiv i32 %120, 1
  %122 = urem i32 %121, 32
  %123 = udiv i32 %120, 32
  %124 = getelementptr inbounds float, ptr %arg1, i32 %120
  %125 = load float, ptr %124, align 4, !invariant.load !297
  br label %concatenate.5.merge16

concat_index_from_operand_id219:                  ; preds = %concatenate.pivot.288.26
  %126 = phi i32 [ 288, %concatenate.pivot.288.26 ]
  %127 = sub nsw i32 %10, %126
  %128 = udiv i32 %linear_index2, 360
  %129 = mul i32 %128, 64
  %130 = add i32 %129, %127
  %131 = udiv i32 %130, 1
  %132 = urem i32 %131, 64
  %133 = udiv i32 %130, 64
  %134 = getelementptr inbounds float, ptr %arg2, i32 %130
  %135 = load float, ptr %134, align 4, !invariant.load !297
  br label %concatenate.5.merge16

concat_index_from_operand_id320:                  ; preds = %concatenate.pivot.352.27
  %136 = phi i32 [ 352, %concatenate.pivot.352.27 ]
  %137 = sub nsw i32 %10, %136
  %138 = udiv i32 %linear_index2, 360
  %139 = mul i32 %138, 8
  %140 = add i32 %139, %137
  %141 = udiv i32 %140, 1
  %142 = urem i32 %141, 8
  %143 = udiv i32 %140, 8
  %144 = getelementptr inbounds float, ptr %arg3, i32 %140
  %145 = load float, ptr %144, align 4, !invariant.load !297
  br label %concatenate.5.merge16

concatenate.pivot.288.21:                         ; preds = %concatenate.5.merge4
  %146 = icmp ult i32 %10, 288
  br i1 %146, label %concatenate.pivot.256.22, label %concatenate.pivot.352.25

concatenate.pivot.256.22:                         ; preds = %concatenate.pivot.288.21
  %147 = icmp ult i32 %10, 256
  br i1 %147, label %concatenate.pivot.0.23, label %concatenate.pivot.256.24

concatenate.pivot.0.23:                           ; preds = %concatenate.pivot.256.22
  br label %concat_index_from_operand_id017

concatenate.pivot.256.24:                         ; preds = %concatenate.pivot.256.22
  br label %concat_index_from_operand_id118

concatenate.pivot.352.25:                         ; preds = %concatenate.pivot.288.21
  %148 = icmp ult i32 %10, 352
  br i1 %148, label %concatenate.pivot.288.26, label %concatenate.pivot.352.27

concatenate.pivot.288.26:                         ; preds = %concatenate.pivot.352.25
  br label %concat_index_from_operand_id219

concatenate.pivot.352.27:                         ; preds = %concatenate.pivot.352.25
  br label %concat_index_from_operand_id320

concatenate.5.merge16:                            ; preds = %concat_index_from_operand_id320, %concat_index_from_operand_id219, %concat_index_from_operand_id118, %concat_index_from_operand_id017
  %149 = phi float [ %115, %concat_index_from_operand_id017 ], [ %125, %concat_index_from_operand_id118 ], [ %135, %concat_index_from_operand_id219 ], [ %145, %concat_index_from_operand_id320 ]
  %150 = getelementptr inbounds float, ptr %arg4, i32 %linear_index2
  store float %149, ptr %150, align 4
  br label %concatenate.pivot.288.33

concat_index_from_operand_id029:                  ; preds = %concatenate.pivot.0.35
  %151 = phi i32 [ 0, %concatenate.pivot.0.35 ]
  %152 = sub nsw i32 %13, %151
  %153 = udiv i32 %linear_index3, 360
  %154 = mul i32 %153, 256
  %155 = add i32 %154, %152
  %156 = udiv i32 %155, 1
  %157 = urem i32 %156, 256
  %158 = udiv i32 %155, 256
  %159 = getelementptr inbounds float, ptr %arg0, i32 %155
  %160 = load float, ptr %159, align 4, !invariant.load !297
  br label %concatenate.5.merge28

concat_index_from_operand_id130:                  ; preds = %concatenate.pivot.256.36
  %161 = phi i32 [ 256, %concatenate.pivot.256.36 ]
  %162 = sub nsw i32 %13, %161
  %163 = udiv i32 %linear_index3, 360
  %164 = mul i32 %163, 32
  %165 = add i32 %164, %162
  %166 = udiv i32 %165, 1
  %167 = urem i32 %166, 32
  %168 = udiv i32 %165, 32
  %169 = getelementptr inbounds float, ptr %arg1, i32 %165
  %170 = load float, ptr %169, align 4, !invariant.load !297
  br label %concatenate.5.merge28

concat_index_from_operand_id231:                  ; preds = %concatenate.pivot.288.38
  %171 = phi i32 [ 288, %concatenate.pivot.288.38 ]
  %172 = sub nsw i32 %13, %171
  %173 = udiv i32 %linear_index3, 360
  %174 = mul i32 %173, 64
  %175 = add i32 %174, %172
  %176 = udiv i32 %175, 1
  %177 = urem i32 %176, 64
  %178 = udiv i32 %175, 64
  %179 = getelementptr inbounds float, ptr %arg2, i32 %175
  %180 = load float, ptr %179, align 4, !invariant.load !297
  br label %concatenate.5.merge28

concat_index_from_operand_id332:                  ; preds = %concatenate.pivot.352.39
  %181 = phi i32 [ 352, %concatenate.pivot.352.39 ]
  %182 = sub nsw i32 %13, %181
  %183 = udiv i32 %linear_index3, 360
  %184 = mul i32 %183, 8
  %185 = add i32 %184, %182
  %186 = udiv i32 %185, 1
  %187 = urem i32 %186, 8
  %188 = udiv i32 %185, 8
  %189 = getelementptr inbounds float, ptr %arg3, i32 %185
  %190 = load float, ptr %189, align 4, !invariant.load !297
  br label %concatenate.5.merge28

concatenate.pivot.288.33:                         ; preds = %concatenate.5.merge16
  %191 = icmp ult i32 %13, 288
  br i1 %191, label %concatenate.pivot.256.34, label %concatenate.pivot.352.37

concatenate.pivot.256.34:                         ; preds = %concatenate.pivot.288.33
  %192 = icmp ult i32 %13, 256
  br i1 %192, label %concatenate.pivot.0.35, label %concatenate.pivot.256.36

concatenate.pivot.0.35:                           ; preds = %concatenate.pivot.256.34
  br label %concat_index_from_operand_id029

concatenate.pivot.256.36:                         ; preds = %concatenate.pivot.256.34
  br label %concat_index_from_operand_id130

concatenate.pivot.352.37:                         ; preds = %concatenate.pivot.288.33
  %193 = icmp ult i32 %13, 352
  br i1 %193, label %concatenate.pivot.288.38, label %concatenate.pivot.352.39

concatenate.pivot.288.38:                         ; preds = %concatenate.pivot.352.37
  br label %concat_index_from_operand_id231

concatenate.pivot.352.39:                         ; preds = %concatenate.pivot.352.37
  br label %concat_index_from_operand_id332

concatenate.5.merge28:                            ; preds = %concat_index_from_operand_id332, %concat_index_from_operand_id231, %concat_index_from_operand_id130, %concat_index_from_operand_id029
  %194 = phi float [ %160, %concat_index_from_operand_id029 ], [ %170, %concat_index_from_operand_id130 ], [ %180, %concat_index_from_operand_id231 ], [ %190, %concat_index_from_operand_id332 ]
  %195 = getelementptr inbounds float, ptr %arg4, i32 %linear_index3
  store float %194, ptr %195, align 4
  br label %concatenate_100.in_bounds-after
}

define void @fusion_523(ptr noalias align 128 dereferenceable(8388608) %arg0, ptr noalias align 16 dereferenceable(1024) %arg1, ptr noalias align 128 dereferenceable(8388608) %arg2) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !366
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 524288
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 256
  %5 = udiv i32 %linear_index_base, 256
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 256
  %8 = udiv i32 %linear_index1, 256
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 256
  %11 = udiv i32 %linear_index2, 256
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 256
  %14 = udiv i32 %linear_index3, 256
  %15 = icmp ult i32 %linear_index_base, 2097152
  br i1 %15, label %fusion_523.in_bounds-true, label %fusion_523.in_bounds-after

fusion_523.in_bounds-after:                       ; preds = %fusion_523.in_bounds-true, %entry
  ret void

fusion_523.in_bounds-true:                        ; preds = %entry
  %16 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_base
  %17 = load float, ptr %16, align 4, !invariant.load !297
  %18 = getelementptr inbounds [256 x float], ptr %arg1, i32 0, i32 %4
  %19 = load float, ptr %18, align 4, !invariant.load !297
  %add.4 = fadd float %17, %19
  %region_0_8_constant_5 = load float, ptr @27, align 4
  %20 = fcmp oge float %add.4, %region_0_8_constant_5
  %21 = fcmp une float %add.4, %add.4
  %22 = or i1 %20, %21
  %maximum.7 = select i1 %22, float %add.4, float %region_0_8_constant_5
  %23 = getelementptr inbounds float, ptr %arg2, i32 %linear_index_base
  store float %maximum.7, ptr %23, align 4
  %24 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  %25 = load float, ptr %24, align 4, !invariant.load !297
  %26 = getelementptr inbounds [256 x float], ptr %arg1, i32 0, i32 %7
  %27 = load float, ptr %26, align 4, !invariant.load !297
  %add.41 = fadd float %25, %27
  %region_0_8_constant_52 = load float, ptr @27, align 4
  %28 = fcmp oge float %add.41, %region_0_8_constant_52
  %29 = fcmp une float %add.41, %add.41
  %30 = or i1 %28, %29
  %maximum.73 = select i1 %30, float %add.41, float %region_0_8_constant_52
  %31 = getelementptr inbounds float, ptr %arg2, i32 %linear_index1
  store float %maximum.73, ptr %31, align 4
  %32 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  %33 = load float, ptr %32, align 4, !invariant.load !297
  %34 = getelementptr inbounds [256 x float], ptr %arg1, i32 0, i32 %10
  %35 = load float, ptr %34, align 4, !invariant.load !297
  %add.44 = fadd float %33, %35
  %region_0_8_constant_55 = load float, ptr @27, align 4
  %36 = fcmp oge float %add.44, %region_0_8_constant_55
  %37 = fcmp une float %add.44, %add.44
  %38 = or i1 %36, %37
  %maximum.76 = select i1 %38, float %add.44, float %region_0_8_constant_55
  %39 = getelementptr inbounds float, ptr %arg2, i32 %linear_index2
  store float %maximum.76, ptr %39, align 4
  %40 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  %41 = load float, ptr %40, align 4, !invariant.load !297
  %42 = getelementptr inbounds [256 x float], ptr %arg1, i32 0, i32 %13
  %43 = load float, ptr %42, align 4, !invariant.load !297
  %add.47 = fadd float %41, %43
  %region_0_8_constant_58 = load float, ptr @27, align 4
  %44 = fcmp oge float %add.47, %region_0_8_constant_58
  %45 = fcmp une float %add.47, %add.47
  %46 = or i1 %44, %45
  %maximum.79 = select i1 %46, float %add.47, float %region_0_8_constant_58
  %47 = getelementptr inbounds float, ptr %arg2, i32 %linear_index3
  store float %maximum.79, ptr %47, align 4
  br label %fusion_523.in_bounds-after
}

define void @fusion_520(ptr noalias align 16 dereferenceable(512) %arg0, ptr noalias align 128 dereferenceable(4194304) %arg1, ptr noalias align 16 dereferenceable(512) %arg2, ptr noalias align 128 dereferenceable(32768) %arg3) {
entry:
  %initial_value_addr = alloca float, align 4
  %return_buffer38 = alloca float, align 4
  %result_from_other_lane36 = alloca float, align 4
  %return_buffer35 = alloca float, align 4
  %result_from_other_lane33 = alloca float, align 4
  %return_buffer32 = alloca float, align 4
  %result_from_other_lane30 = alloca float, align 4
  %return_buffer29 = alloca float, align 4
  %result_from_other_lane27 = alloca float, align 4
  %return_buffer26 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer24 = alloca float, align 4
  %tile_loop.invar_address10 = alloca i32, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %inter_warp_reduce-after, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_17_constant_6 = load float, ptr @28, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_17_constant_6, ptr %2, align 4
  %3 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !352
  %4 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !368
  %5 = urem i32 %3, 32
  %6 = udiv i32 %3, 32
  %7 = mul i32 %4, 3
  %8 = add i32 %7, %6
  %9 = icmp ult i32 %8, 8192
  br i1 %9, label %10, label %early_return

10:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %5, 32
  %thread_id.y = udiv i32 %5, 32
  %lane_id = urem i32 %5, 32
  %11 = udiv i32 %8, 1
  %12 = urem i32 %11, 1
  %13 = udiv i32 %8, 1
  %14 = urem i32 %13, 8192
  %15 = udiv i32 %8, 8192
  %16 = icmp eq i32 %14, 8191
  %tile_bound = select i1 %16, i32 1, i32 1
  %17 = icmp eq i32 %12, 0
  %tile_bound1 = select i1 %17, i32 128, i32 512
  %tile_origin.0 = mul i32 %15, 1
  %tile_origin.1 = mul i32 %14, 1
  %tile_origin.2 = mul i32 %12, 512
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %is_full_tile-after, %10
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %18 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %18, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 1
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %19 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %20 = icmp eq i32 512, %tile_bound1
  br i1 %20, label %is_full_tile-true, label %is_full_tile-false

is_full_tile-after:                               ; preds = %tile_loop.loop_exit7, %tile_loop.loop_exit
  br label %y_in_tile.loop_header, !llvm.loop !376

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %partial_reduction_result25 = load float, ptr %current_output, align 4
  %21 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result25, i32 16, i32 31)
  store float %21, ptr %result_from_other_lane, align 4
  call void @region_1_12__2(ptr %current_output, ptr %result_from_other_lane, ptr %return_buffer26)
  %22 = load float, ptr %return_buffer26, align 4
  store float %22, ptr %current_output, align 4
  %partial_reduction_result28 = load float, ptr %current_output, align 4
  %23 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result28, i32 8, i32 31)
  store float %23, ptr %result_from_other_lane27, align 4
  call void @region_1_12__2(ptr %current_output, ptr %result_from_other_lane27, ptr %return_buffer29)
  %24 = load float, ptr %return_buffer29, align 4
  store float %24, ptr %current_output, align 4
  %partial_reduction_result31 = load float, ptr %current_output, align 4
  %25 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result31, i32 4, i32 31)
  store float %25, ptr %result_from_other_lane30, align 4
  call void @region_1_12__2(ptr %current_output, ptr %result_from_other_lane30, ptr %return_buffer32)
  %26 = load float, ptr %return_buffer32, align 4
  store float %26, ptr %current_output, align 4
  %partial_reduction_result34 = load float, ptr %current_output, align 4
  %27 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result34, i32 2, i32 31)
  store float %27, ptr %result_from_other_lane33, align 4
  call void @region_1_12__2(ptr %current_output, ptr %result_from_other_lane33, ptr %return_buffer35)
  %28 = load float, ptr %return_buffer35, align 4
  store float %28, ptr %current_output, align 4
  %partial_reduction_result37 = load float, ptr %current_output, align 4
  %29 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result37, i32 1, i32 31)
  store float %29, ptr %result_from_other_lane36, align 4
  call void @region_1_12__2(ptr %current_output, ptr %result_from_other_lane36, ptr %return_buffer38)
  %30 = load float, ptr %return_buffer38, align 4
  store float %30, ptr %current_output, align 4
  %31 = udiv i32 %thread_id.x, 32
  %32 = icmp eq i32 %lane_id, 0
  br i1 %32, label %intra_warp_reduce_write-true, label %intra_warp_reduce_write-after

intra_warp_reduce_write-after:                    ; preds = %intra_warp_reduce_write-true, %y_in_tile.loop_exit
  call void @llvm.nvvm.barrier0()
  %33 = icmp eq i32 %31, 0
  br i1 %33, label %inter_warp_reduce-true, label %inter_warp_reduce-after

inter_warp_reduce-after:                          ; preds = %reduction_write_output-after, %intra_warp_reduce_write-after
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

is_full_tile-true:                                ; preds = %y_in_tile.loop_body
  %34 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %tile_loop.loop_body, %is_full_tile-true
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %35 = icmp uge i32 %tile_loop.indvar, 16
  br i1 %35, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %36 = icmp eq i32 %tile_loop.indvar, 0
  %37 = mul i32 %tile_loop.indvar, 32
  %38 = add i32 %37, 0
  %x_loc = add i32 %38, %34
  %39 = add i32 %tile_origin.1, %y_in_tile.indvar
  %40 = add i32 %tile_origin.2, %x_loc
  %Arg_1.2 = getelementptr inbounds [8192 x [128 x float]], ptr %arg1, i32 0, i32 %39, i32 %40
  %Arg_1.23 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %Arg_2.3 = getelementptr inbounds [128 x float], ptr %arg2, i32 0, i32 %40
  %Arg_2.34 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %add.5 = fadd float %Arg_1.23, %Arg_2.34
  %region_0_17_constant_65 = load float, ptr @28, align 4
  %41 = fcmp oge float %add.5, %region_0_17_constant_65
  %42 = fcmp une float %add.5, %add.5
  %43 = or i1 %41, %42
  %maximum.8 = select i1 %43, float %add.5, float %region_0_17_constant_65
  %Arg_0.1 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %40, i32 0
  %Arg_0.16 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %multiply.11 = fmul float %maximum.8, %Arg_0.16
  store float %multiply.11, ptr %reduction_input_address, align 4
  %44 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_12__2(ptr %44, ptr %reduction_input_address, ptr %return_buffer)
  %45 = load float, ptr %return_buffer, align 4
  store float %45, ptr %44, align 4
  br label %tile_loop.loop_header, !llvm.loop !377

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %is_full_tile-after

is_full_tile-false:                               ; preds = %y_in_tile.loop_body
  %46 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address10, align 4
  br label %tile_loop.loop_header8

tile_loop.loop_header8:                           ; preds = %x_in_tile-after, %is_full_tile-false
  %tile_loop.indvar11 = load i32, ptr %tile_loop.invar_address10, align 4
  %47 = icmp uge i32 %tile_loop.indvar11, 16
  br i1 %47, label %tile_loop.loop_exit7, label %tile_loop.loop_body9

tile_loop.loop_body9:                             ; preds = %tile_loop.loop_header8
  %invar.inc12 = add nuw nsw i32 %tile_loop.indvar11, 1
  store i32 %invar.inc12, ptr %tile_loop.invar_address10, align 4
  %48 = icmp eq i32 %tile_loop.indvar11, 0
  %49 = mul i32 %tile_loop.indvar11, 32
  %50 = add i32 %49, 0
  %x_loc13 = add i32 %50, %46
  %51 = add i32 %tile_origin.1, %y_in_tile.indvar
  %52 = add i32 %tile_origin.2, %x_loc13
  %53 = icmp ult i32 %x_loc13, %tile_bound1
  br i1 %53, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body9
  br label %tile_loop.loop_header8, !llvm.loop !378

tile_loop.loop_exit7:                             ; preds = %tile_loop.loop_header8
  br label %is_full_tile-after

x_in_tile-true:                                   ; preds = %tile_loop.loop_body9
  %Arg_1.214 = getelementptr inbounds [8192 x [128 x float]], ptr %arg1, i32 0, i32 %51, i32 %52
  %Arg_1.215 = load float, ptr %Arg_1.214, align 4, !invariant.load !297
  %Arg_2.316 = getelementptr inbounds [128 x float], ptr %arg2, i32 0, i32 %52
  %Arg_2.317 = load float, ptr %Arg_2.316, align 4, !invariant.load !297
  %add.518 = fadd float %Arg_1.215, %Arg_2.317
  %region_0_17_constant_619 = load float, ptr @28, align 4
  %54 = fcmp oge float %add.518, %region_0_17_constant_619
  %55 = fcmp une float %add.518, %add.518
  %56 = or i1 %54, %55
  %maximum.820 = select i1 %56, float %add.518, float %region_0_17_constant_619
  %Arg_0.121 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %52, i32 0
  %Arg_0.122 = load float, ptr %Arg_0.121, align 4, !invariant.load !297
  %multiply.1123 = fmul float %maximum.820, %Arg_0.122
  store float %multiply.1123, ptr %reduction_input_address, align 4
  %57 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_12__2(ptr %57, ptr %reduction_input_address, ptr %return_buffer24)
  %58 = load float, ptr %return_buffer24, align 4
  store float %58, ptr %57, align 4
  br label %x_in_tile-after

intra_warp_reduce_write-true:                     ; preds = %y_in_tile.loop_exit
  %59 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache19, i32 0, i32 %6, i32 0, i32 %31
  %60 = addrspacecast ptr addrspace(3) %59 to ptr
  %61 = load float, ptr %current_output, align 4
  store float %61, ptr %60, align 4
  br label %intra_warp_reduce_write-after

inter_warp_reduce-true:                           ; preds = %intra_warp_reduce_write-after
  %62 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache19, i32 0, i32 %6, i32 0, i32 %lane_id
  %63 = addrspacecast ptr addrspace(3) %62 to ptr
  store float %region_0_17_constant_6, ptr %initial_value_addr, align 4
  %64 = icmp ult i32 %thread_id.x, 1
  %65 = select i1 %64, ptr %63, ptr %initial_value_addr
  %66 = icmp eq i32 %thread_id.x, 0
  br i1 %66, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %inter_warp_reduce-true
  br label %inter_warp_reduce-after

reduction_write_output-true:                      ; preds = %inter_warp_reduce-true
  %67 = mul i32 %thread_id.x, 1
  %68 = add i32 %tile_origin.1, %thread_id.y
  %69 = add i32 %tile_origin.2, %67
  %70 = add i32 %69, 0
  %71 = udiv i32 %68, 1
  %output_element_address = getelementptr inbounds [8192 x float], ptr %arg3, i32 0, i32 %71
  %output = load float, ptr %65, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after
}

define internal void @region_1_12__2(ptr dereferenceable(4) %Arg_0.13.typed, ptr dereferenceable(4) %Arg_1.14.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.15.typed = alloca float, align 4
  %Arg_0.13 = load float, ptr %Arg_0.13.typed, align 4
  %Arg_1.14 = load float, ptr %Arg_1.14.typed, align 4
  %add.15 = fadd float %Arg_0.13, %Arg_1.14
  store float %add.15, ptr %add.15.typed, align 4
  %load_ret_value = load float, ptr %add.15.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @slice_166(ptr noalias align 128 dereferenceable(16777216) %arg0, ptr noalias align 128 dereferenceable(4194304) %arg1) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !345
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 262144
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 128
  %5 = udiv i32 %linear_index_base, 128
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 128
  %8 = udiv i32 %linear_index1, 128
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 128
  %11 = udiv i32 %linear_index2, 128
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 128
  %14 = udiv i32 %linear_index3, 128
  %15 = icmp ult i32 %linear_index_base, 1048576
  br i1 %15, label %slice_166.in_bounds-true, label %slice_166.in_bounds-after

slice_166.in_bounds-after:                        ; preds = %slice_166.in_bounds-true, %entry
  ret void

slice_166.in_bounds-true:                         ; preds = %entry
  %16 = add i32 %5, 0
  %17 = add i32 %4, 384
  %18 = getelementptr inbounds [8192 x [512 x float]], ptr %arg0, i32 0, i32 %16, i32 %17
  %19 = load float, ptr %18, align 4, !invariant.load !297
  %20 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  store float %19, ptr %20, align 4
  %21 = add i32 %8, 0
  %22 = add i32 %7, 384
  %23 = getelementptr inbounds [8192 x [512 x float]], ptr %arg0, i32 0, i32 %21, i32 %22
  %24 = load float, ptr %23, align 4, !invariant.load !297
  %25 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  store float %24, ptr %25, align 4
  %26 = add i32 %11, 0
  %27 = add i32 %10, 384
  %28 = getelementptr inbounds [8192 x [512 x float]], ptr %arg0, i32 0, i32 %26, i32 %27
  %29 = load float, ptr %28, align 4, !invariant.load !297
  %30 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  store float %29, ptr %30, align 4
  %31 = add i32 %14, 0
  %32 = add i32 %13, 384
  %33 = getelementptr inbounds [8192 x [512 x float]], ptr %arg0, i32 0, i32 %31, i32 %32
  %34 = load float, ptr %33, align 4, !invariant.load !297
  %35 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  store float %34, ptr %35, align 4
  br label %slice_166.in_bounds-after
}

define void @slice_164(ptr noalias align 128 dereferenceable(16777216) %arg0, ptr noalias align 128 dereferenceable(4194304) %arg1) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !345
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 262144
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 128
  %5 = udiv i32 %linear_index_base, 128
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 128
  %8 = udiv i32 %linear_index1, 128
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 128
  %11 = udiv i32 %linear_index2, 128
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 128
  %14 = udiv i32 %linear_index3, 128
  %15 = icmp ult i32 %linear_index_base, 1048576
  br i1 %15, label %slice_164.in_bounds-true, label %slice_164.in_bounds-after

slice_164.in_bounds-after:                        ; preds = %slice_164.in_bounds-true, %entry
  ret void

slice_164.in_bounds-true:                         ; preds = %entry
  %16 = add i32 %5, 0
  %17 = add i32 %4, 256
  %18 = getelementptr inbounds [8192 x [512 x float]], ptr %arg0, i32 0, i32 %16, i32 %17
  %19 = load float, ptr %18, align 4, !invariant.load !297
  %20 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  store float %19, ptr %20, align 4
  %21 = add i32 %8, 0
  %22 = add i32 %7, 256
  %23 = getelementptr inbounds [8192 x [512 x float]], ptr %arg0, i32 0, i32 %21, i32 %22
  %24 = load float, ptr %23, align 4, !invariant.load !297
  %25 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  store float %24, ptr %25, align 4
  %26 = add i32 %11, 0
  %27 = add i32 %10, 256
  %28 = getelementptr inbounds [8192 x [512 x float]], ptr %arg0, i32 0, i32 %26, i32 %27
  %29 = load float, ptr %28, align 4, !invariant.load !297
  %30 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  store float %29, ptr %30, align 4
  %31 = add i32 %14, 0
  %32 = add i32 %13, 256
  %33 = getelementptr inbounds [8192 x [512 x float]], ptr %arg0, i32 0, i32 %31, i32 %32
  %34 = load float, ptr %33, align 4, !invariant.load !297
  %35 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  store float %34, ptr %35, align 4
  br label %slice_164.in_bounds-after
}

define void @slice_162(ptr noalias align 128 dereferenceable(16777216) %arg0, ptr noalias align 128 dereferenceable(8388608) %arg1) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !366
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 524288
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 256
  %5 = udiv i32 %linear_index_base, 256
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 256
  %8 = udiv i32 %linear_index1, 256
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 256
  %11 = udiv i32 %linear_index2, 256
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 256
  %14 = udiv i32 %linear_index3, 256
  %15 = icmp ult i32 %linear_index_base, 2097152
  br i1 %15, label %slice_162.in_bounds-true, label %slice_162.in_bounds-after

slice_162.in_bounds-after:                        ; preds = %slice_162.in_bounds-true, %entry
  ret void

slice_162.in_bounds-true:                         ; preds = %entry
  %16 = add i32 %5, 0
  %17 = add i32 %4, 0
  %18 = getelementptr inbounds [8192 x [512 x float]], ptr %arg0, i32 0, i32 %16, i32 %17
  %19 = load float, ptr %18, align 4, !invariant.load !297
  %20 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  store float %19, ptr %20, align 4
  %21 = add i32 %8, 0
  %22 = add i32 %7, 0
  %23 = getelementptr inbounds [8192 x [512 x float]], ptr %arg0, i32 0, i32 %21, i32 %22
  %24 = load float, ptr %23, align 4, !invariant.load !297
  %25 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  store float %24, ptr %25, align 4
  %26 = add i32 %11, 0
  %27 = add i32 %10, 0
  %28 = getelementptr inbounds [8192 x [512 x float]], ptr %arg0, i32 0, i32 %26, i32 %27
  %29 = load float, ptr %28, align 4, !invariant.load !297
  %30 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  store float %29, ptr %30, align 4
  %31 = add i32 %14, 0
  %32 = add i32 %13, 0
  %33 = getelementptr inbounds [8192 x [512 x float]], ptr %arg0, i32 0, i32 %31, i32 %32
  %34 = load float, ptr %33, align 4, !invariant.load !297
  %35 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  store float %34, ptr %35, align 4
  br label %slice_162.in_bounds-after
}

define void @fusion_565(ptr noalias align 128 dereferenceable(8388608) %arg0, ptr noalias align 128 dereferenceable(16777216) %arg1) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !366
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 524288
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 256
  %5 = udiv i32 %linear_index_base, 256
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 256
  %8 = udiv i32 %linear_index1, 256
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 256
  %11 = udiv i32 %linear_index2, 256
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 256
  %14 = udiv i32 %linear_index3, 256
  %15 = icmp ult i32 %linear_index_base, 2097152
  br i1 %15, label %fusion_565.in_bounds-true, label %fusion_565.in_bounds-after

fusion_565.in_bounds-after:                       ; preds = %fusion_565.in_bounds-true, %entry
  ret void

fusion_565.in_bounds-true:                        ; preds = %entry
  %16 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_base
  %17 = load float, ptr %16, align 4
  %18 = add i32 %5, 0
  %19 = add i32 %4, 0
  %20 = getelementptr inbounds [8192 x [512 x float]], ptr %arg1, i32 0, i32 %18, i32 %19
  %21 = load float, ptr %20, align 4, !invariant.load !297
  %add.4 = fadd float %17, %21
  %22 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_base
  store float %add.4, ptr %22, align 4
  %23 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  %24 = load float, ptr %23, align 4
  %25 = add i32 %8, 0
  %26 = add i32 %7, 0
  %27 = getelementptr inbounds [8192 x [512 x float]], ptr %arg1, i32 0, i32 %25, i32 %26
  %28 = load float, ptr %27, align 4, !invariant.load !297
  %add.41 = fadd float %24, %28
  %29 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  store float %add.41, ptr %29, align 4
  %30 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  %31 = load float, ptr %30, align 4
  %32 = add i32 %11, 0
  %33 = add i32 %10, 0
  %34 = getelementptr inbounds [8192 x [512 x float]], ptr %arg1, i32 0, i32 %32, i32 %33
  %35 = load float, ptr %34, align 4, !invariant.load !297
  %add.42 = fadd float %31, %35
  %36 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  store float %add.42, ptr %36, align 4
  %37 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  %38 = load float, ptr %37, align 4
  %39 = add i32 %14, 0
  %40 = add i32 %13, 0
  %41 = getelementptr inbounds [8192 x [512 x float]], ptr %arg1, i32 0, i32 %39, i32 %40
  %42 = load float, ptr %41, align 4, !invariant.load !297
  %add.43 = fadd float %38, %42
  %43 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  store float %add.43, ptr %43, align 4
  br label %fusion_565.in_bounds-after
}

define void @add_344(ptr noalias align 128 dereferenceable(8388608) %arg0, ptr noalias align 128 dereferenceable(8388608) %arg1) {
entry:
  %loop.invar_address = alloca i32, align 4
  store i32 0, ptr %loop.invar_address, align 4
  br label %loop.loop_header

loop.loop_header:                                 ; preds = %add_344.in_bounds-after, %entry
  %loop.indvar = load i32, ptr %loop.invar_address, align 4
  %0 = icmp uge i32 %loop.indvar, 2097152
  br i1 %0, label %loop.loop_exit, label %loop.loop_body

loop.loop_body:                                   ; preds = %loop.loop_header
  %invar.inc = add nuw nsw i32 %loop.indvar, 442368
  store i32 %invar.inc, ptr %loop.invar_address, align 4
  %1 = icmp eq i32 %loop.indvar, 0
  %2 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !379
  %3 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !361
  %4 = mul nuw nsw i32 %2, 128
  %linear_index = add nuw nsw i32 %4, %3
  %linear_index_in_range = icmp ult i32 %linear_index, 110592
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %linear_index_plus_base = add nuw nsw i32 %linear_index_base, %loop.indvar
  %5 = udiv i32 %linear_index_plus_base, 1
  %6 = urem i32 %5, 256
  %7 = udiv i32 %linear_index_plus_base, 256
  %linear_index1 = add nuw nsw i32 %linear_index_plus_base, 1
  %8 = udiv i32 %linear_index1, 1
  %9 = urem i32 %8, 256
  %10 = udiv i32 %linear_index1, 256
  %linear_index2 = add nuw nsw i32 %linear_index_plus_base, 2
  %11 = udiv i32 %linear_index2, 1
  %12 = urem i32 %11, 256
  %13 = udiv i32 %linear_index2, 256
  %linear_index3 = add nuw nsw i32 %linear_index_plus_base, 3
  %14 = udiv i32 %linear_index3, 1
  %15 = urem i32 %14, 256
  %16 = udiv i32 %linear_index3, 256
  %17 = icmp ult i32 %linear_index_plus_base, 2097152
  br i1 %17, label %add_344.in_bounds-true, label %add_344.in_bounds-after

add_344.in_bounds-after:                          ; preds = %add_344.in_bounds-true, %loop.loop_body
  br label %loop.loop_header, !llvm.loop !380

loop.loop_exit:                                   ; preds = %loop.loop_header
  ret void

add_344.in_bounds-true:                           ; preds = %loop.loop_body
  %18 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_plus_base
  %19 = load float, ptr %18, align 4
  %20 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_plus_base
  %21 = load float, ptr %20, align 4, !invariant.load !297
  %add.3 = fadd float %19, %21
  %22 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_plus_base
  store float %add.3, ptr %22, align 4
  %23 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  %24 = load float, ptr %23, align 4
  %25 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  %26 = load float, ptr %25, align 4, !invariant.load !297
  %add.31 = fadd float %24, %26
  %27 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  store float %add.31, ptr %27, align 4
  %28 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  %29 = load float, ptr %28, align 4
  %30 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  %31 = load float, ptr %30, align 4, !invariant.load !297
  %add.32 = fadd float %29, %31
  %32 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  store float %add.32, ptr %32, align 4
  %33 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  %34 = load float, ptr %33, align 4
  %35 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  %36 = load float, ptr %35, align 4, !invariant.load !297
  %add.33 = fadd float %34, %36
  %37 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  store float %add.33, ptr %37, align 4
  br label %add_344.in_bounds-after
}

define void @fusion_564(ptr noalias align 128 dereferenceable(8388608) %arg0, ptr noalias align 16 dereferenceable(1024) %arg1) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !366
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 524288
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 256
  %5 = udiv i32 %linear_index_base, 256
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 256
  %8 = udiv i32 %linear_index1, 256
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 256
  %11 = udiv i32 %linear_index2, 256
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 256
  %14 = udiv i32 %linear_index3, 256
  %15 = icmp ult i32 %linear_index_base, 2097152
  br i1 %15, label %fusion_564.in_bounds-true, label %fusion_564.in_bounds-after

fusion_564.in_bounds-after:                       ; preds = %fusion_564.in_bounds-true, %entry
  ret void

fusion_564.in_bounds-true:                        ; preds = %entry
  %16 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_base
  %17 = load float, ptr %16, align 4
  %18 = getelementptr inbounds [256 x float], ptr %arg1, i32 0, i32 %4
  %19 = load float, ptr %18, align 4, !invariant.load !297
  %add.4 = fadd float %17, %19
  %region_0_8_constant_5 = load float, ptr @29, align 4
  %20 = fcmp oge float %add.4, %region_0_8_constant_5
  %21 = fcmp une float %add.4, %add.4
  %22 = or i1 %20, %21
  %maximum.7 = select i1 %22, float %add.4, float %region_0_8_constant_5
  %23 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_base
  store float %maximum.7, ptr %23, align 4
  %24 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  %25 = load float, ptr %24, align 4
  %26 = getelementptr inbounds [256 x float], ptr %arg1, i32 0, i32 %7
  %27 = load float, ptr %26, align 4, !invariant.load !297
  %add.41 = fadd float %25, %27
  %region_0_8_constant_52 = load float, ptr @29, align 4
  %28 = fcmp oge float %add.41, %region_0_8_constant_52
  %29 = fcmp une float %add.41, %add.41
  %30 = or i1 %28, %29
  %maximum.73 = select i1 %30, float %add.41, float %region_0_8_constant_52
  %31 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  store float %maximum.73, ptr %31, align 4
  %32 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  %33 = load float, ptr %32, align 4
  %34 = getelementptr inbounds [256 x float], ptr %arg1, i32 0, i32 %10
  %35 = load float, ptr %34, align 4, !invariant.load !297
  %add.44 = fadd float %33, %35
  %region_0_8_constant_55 = load float, ptr @29, align 4
  %36 = fcmp oge float %add.44, %region_0_8_constant_55
  %37 = fcmp une float %add.44, %add.44
  %38 = or i1 %36, %37
  %maximum.76 = select i1 %38, float %add.44, float %region_0_8_constant_55
  %39 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  store float %maximum.76, ptr %39, align 4
  %40 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  %41 = load float, ptr %40, align 4
  %42 = getelementptr inbounds [256 x float], ptr %arg1, i32 0, i32 %13
  %43 = load float, ptr %42, align 4, !invariant.load !297
  %add.47 = fadd float %41, %43
  %region_0_8_constant_58 = load float, ptr @29, align 4
  %44 = fcmp oge float %add.47, %region_0_8_constant_58
  %45 = fcmp une float %add.47, %add.47
  %46 = or i1 %44, %45
  %maximum.79 = select i1 %46, float %add.47, float %region_0_8_constant_58
  %47 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  store float %maximum.79, ptr %47, align 4
  br label %fusion_564.in_bounds-after
}

define void @fusion_563(ptr noalias align 16 dereferenceable(512) %arg0, ptr noalias align 128 dereferenceable(4194304) %arg1, ptr noalias align 128 dereferenceable(16777216) %arg2, ptr noalias align 128 dereferenceable(4194304) %arg3) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !345
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 262144
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 128
  %5 = udiv i32 %linear_index_base, 128
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 128
  %8 = udiv i32 %linear_index1, 128
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 128
  %11 = udiv i32 %linear_index2, 128
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 128
  %14 = udiv i32 %linear_index3, 128
  %15 = icmp ult i32 %linear_index_base, 1048576
  br i1 %15, label %fusion_563.in_bounds-true, label %fusion_563.in_bounds-after

fusion_563.in_bounds-after:                       ; preds = %fusion_563.in_bounds-true, %entry
  ret void

fusion_563.in_bounds-true:                        ; preds = %entry
  %16 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  %17 = load float, ptr %16, align 4, !invariant.load !297
  %18 = add i32 %5, 0
  %19 = add i32 %4, 256
  %20 = getelementptr inbounds [8192 x [512 x float]], ptr %arg2, i32 0, i32 %18, i32 %19
  %21 = load float, ptr %20, align 4, !invariant.load !297
  %add.5 = fadd float %17, %21
  %22 = getelementptr inbounds [128 x float], ptr %arg0, i32 0, i32 %4
  %23 = load float, ptr %22, align 4, !invariant.load !297
  %add.7 = fadd float %add.5, %23
  %region_0_11_constant_8 = load float, ptr @30, align 4
  %24 = fcmp oge float %add.7, %region_0_11_constant_8
  %25 = fcmp une float %add.7, %add.7
  %26 = or i1 %24, %25
  %maximum.10 = select i1 %26, float %add.7, float %region_0_11_constant_8
  %27 = getelementptr inbounds float, ptr %arg3, i32 %linear_index_base
  store float %maximum.10, ptr %27, align 4
  %28 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  %29 = load float, ptr %28, align 4, !invariant.load !297
  %30 = add i32 %8, 0
  %31 = add i32 %7, 256
  %32 = getelementptr inbounds [8192 x [512 x float]], ptr %arg2, i32 0, i32 %30, i32 %31
  %33 = load float, ptr %32, align 4, !invariant.load !297
  %add.51 = fadd float %29, %33
  %34 = getelementptr inbounds [128 x float], ptr %arg0, i32 0, i32 %7
  %35 = load float, ptr %34, align 4, !invariant.load !297
  %add.72 = fadd float %add.51, %35
  %region_0_11_constant_83 = load float, ptr @30, align 4
  %36 = fcmp oge float %add.72, %region_0_11_constant_83
  %37 = fcmp une float %add.72, %add.72
  %38 = or i1 %36, %37
  %maximum.104 = select i1 %38, float %add.72, float %region_0_11_constant_83
  %39 = getelementptr inbounds float, ptr %arg3, i32 %linear_index1
  store float %maximum.104, ptr %39, align 4
  %40 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  %41 = load float, ptr %40, align 4, !invariant.load !297
  %42 = add i32 %11, 0
  %43 = add i32 %10, 256
  %44 = getelementptr inbounds [8192 x [512 x float]], ptr %arg2, i32 0, i32 %42, i32 %43
  %45 = load float, ptr %44, align 4, !invariant.load !297
  %add.55 = fadd float %41, %45
  %46 = getelementptr inbounds [128 x float], ptr %arg0, i32 0, i32 %10
  %47 = load float, ptr %46, align 4, !invariant.load !297
  %add.76 = fadd float %add.55, %47
  %region_0_11_constant_87 = load float, ptr @30, align 4
  %48 = fcmp oge float %add.76, %region_0_11_constant_87
  %49 = fcmp une float %add.76, %add.76
  %50 = or i1 %48, %49
  %maximum.108 = select i1 %50, float %add.76, float %region_0_11_constant_87
  %51 = getelementptr inbounds float, ptr %arg3, i32 %linear_index2
  store float %maximum.108, ptr %51, align 4
  %52 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  %53 = load float, ptr %52, align 4, !invariant.load !297
  %54 = add i32 %14, 0
  %55 = add i32 %13, 256
  %56 = getelementptr inbounds [8192 x [512 x float]], ptr %arg2, i32 0, i32 %54, i32 %55
  %57 = load float, ptr %56, align 4, !invariant.load !297
  %add.59 = fadd float %53, %57
  %58 = getelementptr inbounds [128 x float], ptr %arg0, i32 0, i32 %13
  %59 = load float, ptr %58, align 4, !invariant.load !297
  %add.710 = fadd float %add.59, %59
  %region_0_11_constant_811 = load float, ptr @30, align 4
  %60 = fcmp oge float %add.710, %region_0_11_constant_811
  %61 = fcmp une float %add.710, %add.710
  %62 = or i1 %60, %61
  %maximum.1012 = select i1 %62, float %add.710, float %region_0_11_constant_811
  %63 = getelementptr inbounds float, ptr %arg3, i32 %linear_index3
  store float %maximum.1012, ptr %63, align 4
  br label %fusion_563.in_bounds-after
}

define void @fusion_561(ptr noalias align 16 dereferenceable(512) %arg0, ptr noalias align 16 dereferenceable(512) %arg1, ptr noalias align 128 dereferenceable(4194304) %arg2, ptr noalias align 128 dereferenceable(16777216) %arg3, ptr noalias align 128 dereferenceable(32768) %arg4, ptr noalias align 128 dereferenceable(4194304) %arg5) {
entry:
  %initial_value_addr = alloca float, align 4
  %return_buffer42 = alloca float, align 4
  %result_from_other_lane40 = alloca float, align 4
  %return_buffer39 = alloca float, align 4
  %result_from_other_lane37 = alloca float, align 4
  %return_buffer36 = alloca float, align 4
  %result_from_other_lane34 = alloca float, align 4
  %return_buffer33 = alloca float, align 4
  %result_from_other_lane31 = alloca float, align 4
  %return_buffer30 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer28 = alloca float, align 4
  %tile_loop.invar_address11 = alloca i32, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %inter_warp_reduce-after, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_21_constant_9 = load float, ptr @31, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_21_constant_9, ptr %2, align 4
  %3 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !352
  %4 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !368
  %5 = urem i32 %3, 32
  %6 = udiv i32 %3, 32
  %7 = mul i32 %4, 3
  %8 = add i32 %7, %6
  %9 = icmp ult i32 %8, 8192
  br i1 %9, label %10, label %early_return

10:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %5, 32
  %thread_id.y = udiv i32 %5, 32
  %lane_id = urem i32 %5, 32
  %11 = udiv i32 %8, 1
  %12 = urem i32 %11, 1
  %13 = udiv i32 %8, 1
  %14 = urem i32 %13, 8192
  %15 = udiv i32 %8, 8192
  %16 = icmp eq i32 %14, 8191
  %tile_bound = select i1 %16, i32 1, i32 1
  %17 = icmp eq i32 %12, 0
  %tile_bound1 = select i1 %17, i32 128, i32 512
  %tile_origin.0 = mul i32 %15, 1
  %tile_origin.1 = mul i32 %14, 1
  %tile_origin.2 = mul i32 %12, 512
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %is_full_tile-after, %10
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %18 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %18, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 1
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %19 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %20 = icmp eq i32 512, %tile_bound1
  br i1 %20, label %is_full_tile-true, label %is_full_tile-false

is_full_tile-after:                               ; preds = %tile_loop.loop_exit8, %tile_loop.loop_exit
  br label %y_in_tile.loop_header, !llvm.loop !381

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %partial_reduction_result29 = load float, ptr %current_output, align 4
  %21 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result29, i32 16, i32 31)
  store float %21, ptr %result_from_other_lane, align 4
  call void @region_1_15(ptr %current_output, ptr %result_from_other_lane, ptr %return_buffer30)
  %22 = load float, ptr %return_buffer30, align 4
  store float %22, ptr %current_output, align 4
  %partial_reduction_result32 = load float, ptr %current_output, align 4
  %23 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result32, i32 8, i32 31)
  store float %23, ptr %result_from_other_lane31, align 4
  call void @region_1_15(ptr %current_output, ptr %result_from_other_lane31, ptr %return_buffer33)
  %24 = load float, ptr %return_buffer33, align 4
  store float %24, ptr %current_output, align 4
  %partial_reduction_result35 = load float, ptr %current_output, align 4
  %25 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result35, i32 4, i32 31)
  store float %25, ptr %result_from_other_lane34, align 4
  call void @region_1_15(ptr %current_output, ptr %result_from_other_lane34, ptr %return_buffer36)
  %26 = load float, ptr %return_buffer36, align 4
  store float %26, ptr %current_output, align 4
  %partial_reduction_result38 = load float, ptr %current_output, align 4
  %27 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result38, i32 2, i32 31)
  store float %27, ptr %result_from_other_lane37, align 4
  call void @region_1_15(ptr %current_output, ptr %result_from_other_lane37, ptr %return_buffer39)
  %28 = load float, ptr %return_buffer39, align 4
  store float %28, ptr %current_output, align 4
  %partial_reduction_result41 = load float, ptr %current_output, align 4
  %29 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result41, i32 1, i32 31)
  store float %29, ptr %result_from_other_lane40, align 4
  call void @region_1_15(ptr %current_output, ptr %result_from_other_lane40, ptr %return_buffer42)
  %30 = load float, ptr %return_buffer42, align 4
  store float %30, ptr %current_output, align 4
  %31 = udiv i32 %thread_id.x, 32
  %32 = icmp eq i32 %lane_id, 0
  br i1 %32, label %intra_warp_reduce_write-true, label %intra_warp_reduce_write-after

intra_warp_reduce_write-after:                    ; preds = %intra_warp_reduce_write-true, %y_in_tile.loop_exit
  call void @llvm.nvvm.barrier0()
  %33 = icmp eq i32 %31, 0
  br i1 %33, label %inter_warp_reduce-true, label %inter_warp_reduce-after

inter_warp_reduce-after:                          ; preds = %reduction_write_output-after, %intra_warp_reduce_write-after
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

is_full_tile-true:                                ; preds = %y_in_tile.loop_body
  %34 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %tile_loop.loop_body, %is_full_tile-true
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %35 = icmp uge i32 %tile_loop.indvar, 16
  br i1 %35, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %36 = icmp eq i32 %tile_loop.indvar, 0
  %37 = mul i32 %tile_loop.indvar, 32
  %38 = add i32 %37, 0
  %x_loc = add i32 %38, %34
  %39 = add i32 %tile_origin.1, %y_in_tile.indvar
  %40 = add i32 %tile_origin.2, %x_loc
  %Arg_2.3 = getelementptr inbounds [8192 x [128 x float]], ptr %arg2, i32 0, i32 %39, i32 %40
  %Arg_2.33 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %41 = add i32 %39, 0
  %42 = add i32 %40, 384
  %Arg_3.4 = getelementptr inbounds [8192 x [512 x float]], ptr %arg3, i32 0, i32 %41, i32 %42
  %Arg_3.44 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  %add.6 = fadd float %Arg_2.33, %Arg_3.44
  %Arg_1.2 = getelementptr inbounds [128 x float], ptr %arg1, i32 0, i32 %40
  %Arg_1.25 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %add.8 = fadd float %add.6, %Arg_1.25
  %region_0_21_constant_96 = load float, ptr @31, align 4
  %43 = fcmp oge float %add.8, %region_0_21_constant_96
  %44 = fcmp une float %add.8, %add.8
  %45 = or i1 %43, %44
  %maximum.11 = select i1 %45, float %add.8, float %region_0_21_constant_96
  %Arg_0.1 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %40, i32 0
  %Arg_0.17 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %multiply.14 = fmul float %maximum.11, %Arg_0.17
  store float %multiply.14, ptr %reduction_input_address, align 4
  %46 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_15(ptr %46, ptr %reduction_input_address, ptr %return_buffer)
  %47 = load float, ptr %return_buffer, align 4
  store float %47, ptr %46, align 4
  %48 = getelementptr inbounds [8192 x [128 x float]], ptr %arg5, i32 0, i32 %39, i32 %40
  store float %maximum.11, ptr %48, align 4
  br label %tile_loop.loop_header, !llvm.loop !382

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %is_full_tile-after

is_full_tile-false:                               ; preds = %y_in_tile.loop_body
  %49 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address11, align 4
  br label %tile_loop.loop_header9

tile_loop.loop_header9:                           ; preds = %x_in_tile-after, %is_full_tile-false
  %tile_loop.indvar12 = load i32, ptr %tile_loop.invar_address11, align 4
  %50 = icmp uge i32 %tile_loop.indvar12, 16
  br i1 %50, label %tile_loop.loop_exit8, label %tile_loop.loop_body10

tile_loop.loop_body10:                            ; preds = %tile_loop.loop_header9
  %invar.inc13 = add nuw nsw i32 %tile_loop.indvar12, 1
  store i32 %invar.inc13, ptr %tile_loop.invar_address11, align 4
  %51 = icmp eq i32 %tile_loop.indvar12, 0
  %52 = mul i32 %tile_loop.indvar12, 32
  %53 = add i32 %52, 0
  %x_loc14 = add i32 %53, %49
  %54 = add i32 %tile_origin.1, %y_in_tile.indvar
  %55 = add i32 %tile_origin.2, %x_loc14
  %56 = icmp ult i32 %x_loc14, %tile_bound1
  br i1 %56, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body10
  br label %tile_loop.loop_header9, !llvm.loop !383

tile_loop.loop_exit8:                             ; preds = %tile_loop.loop_header9
  br label %is_full_tile-after

x_in_tile-true:                                   ; preds = %tile_loop.loop_body10
  %Arg_2.315 = getelementptr inbounds [8192 x [128 x float]], ptr %arg2, i32 0, i32 %54, i32 %55
  %Arg_2.316 = load float, ptr %Arg_2.315, align 4, !invariant.load !297
  %57 = add i32 %54, 0
  %58 = add i32 %55, 384
  %Arg_3.417 = getelementptr inbounds [8192 x [512 x float]], ptr %arg3, i32 0, i32 %57, i32 %58
  %Arg_3.418 = load float, ptr %Arg_3.417, align 4, !invariant.load !297
  %add.619 = fadd float %Arg_2.316, %Arg_3.418
  %Arg_1.220 = getelementptr inbounds [128 x float], ptr %arg1, i32 0, i32 %55
  %Arg_1.221 = load float, ptr %Arg_1.220, align 4, !invariant.load !297
  %add.822 = fadd float %add.619, %Arg_1.221
  %region_0_21_constant_923 = load float, ptr @31, align 4
  %59 = fcmp oge float %add.822, %region_0_21_constant_923
  %60 = fcmp une float %add.822, %add.822
  %61 = or i1 %59, %60
  %maximum.1124 = select i1 %61, float %add.822, float %region_0_21_constant_923
  %Arg_0.125 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %55, i32 0
  %Arg_0.126 = load float, ptr %Arg_0.125, align 4, !invariant.load !297
  %multiply.1427 = fmul float %maximum.1124, %Arg_0.126
  store float %multiply.1427, ptr %reduction_input_address, align 4
  %62 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_15(ptr %62, ptr %reduction_input_address, ptr %return_buffer28)
  %63 = load float, ptr %return_buffer28, align 4
  store float %63, ptr %62, align 4
  %64 = getelementptr inbounds [8192 x [128 x float]], ptr %arg5, i32 0, i32 %54, i32 %55
  store float %maximum.1124, ptr %64, align 4
  br label %x_in_tile-after

intra_warp_reduce_write-true:                     ; preds = %y_in_tile.loop_exit
  %65 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache20, i32 0, i32 %6, i32 0, i32 %31
  %66 = addrspacecast ptr addrspace(3) %65 to ptr
  %67 = load float, ptr %current_output, align 4
  store float %67, ptr %66, align 4
  br label %intra_warp_reduce_write-after

inter_warp_reduce-true:                           ; preds = %intra_warp_reduce_write-after
  %68 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache20, i32 0, i32 %6, i32 0, i32 %lane_id
  %69 = addrspacecast ptr addrspace(3) %68 to ptr
  store float %region_0_21_constant_9, ptr %initial_value_addr, align 4
  %70 = icmp ult i32 %thread_id.x, 1
  %71 = select i1 %70, ptr %69, ptr %initial_value_addr
  %72 = icmp eq i32 %thread_id.x, 0
  br i1 %72, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %inter_warp_reduce-true
  br label %inter_warp_reduce-after

reduction_write_output-true:                      ; preds = %inter_warp_reduce-true
  %73 = mul i32 %thread_id.x, 1
  %74 = add i32 %tile_origin.1, %thread_id.y
  %75 = add i32 %tile_origin.2, %73
  %76 = add i32 %75, 0
  %77 = udiv i32 %74, 1
  %output_element_address = getelementptr inbounds [8192 x float], ptr %arg4, i32 0, i32 %77
  %output = load float, ptr %71, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after
}

define internal void @region_1_15(ptr dereferenceable(4) %Arg_0.16.typed, ptr dereferenceable(4) %Arg_1.17.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.18.typed = alloca float, align 4
  %Arg_0.16 = load float, ptr %Arg_0.16.typed, align 4
  %Arg_1.17 = load float, ptr %Arg_1.17.typed, align 4
  %add.18 = fadd float %Arg_0.16, %Arg_1.17
  store float %add.18, ptr %add.18.typed, align 4
  %load_ret_value = load float, ptr %add.18.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_599(ptr noalias align 16 dereferenceable(1024) %arg0, ptr noalias align 128 dereferenceable(8388608) %arg1, ptr noalias align 128 dereferenceable(16777216) %arg2, ptr noalias align 128 dereferenceable(8388608) %arg3) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !366
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 524288
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 256
  %5 = udiv i32 %linear_index_base, 256
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 256
  %8 = udiv i32 %linear_index1, 256
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 256
  %11 = udiv i32 %linear_index2, 256
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 256
  %14 = udiv i32 %linear_index3, 256
  %15 = icmp ult i32 %linear_index_base, 2097152
  br i1 %15, label %fusion_599.in_bounds-true, label %fusion_599.in_bounds-after

fusion_599.in_bounds-after:                       ; preds = %fusion_599.in_bounds-true, %entry
  ret void

fusion_599.in_bounds-true:                        ; preds = %entry
  %16 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  %17 = load float, ptr %16, align 4, !invariant.load !297
  %18 = add i32 %5, 0
  %19 = add i32 %4, 0
  %20 = getelementptr inbounds [8192 x [512 x float]], ptr %arg2, i32 0, i32 %18, i32 %19
  %21 = load float, ptr %20, align 4, !invariant.load !297
  %add.5 = fadd float %17, %21
  %22 = getelementptr inbounds [256 x float], ptr %arg0, i32 0, i32 %4
  %23 = load float, ptr %22, align 4, !invariant.load !297
  %add.7 = fadd float %add.5, %23
  %region_0_11_constant_8 = load float, ptr @32, align 4
  %24 = fcmp oge float %add.7, %region_0_11_constant_8
  %25 = fcmp une float %add.7, %add.7
  %26 = or i1 %24, %25
  %maximum.10 = select i1 %26, float %add.7, float %region_0_11_constant_8
  %27 = getelementptr inbounds float, ptr %arg3, i32 %linear_index_base
  store float %maximum.10, ptr %27, align 4
  %28 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  %29 = load float, ptr %28, align 4, !invariant.load !297
  %30 = add i32 %8, 0
  %31 = add i32 %7, 0
  %32 = getelementptr inbounds [8192 x [512 x float]], ptr %arg2, i32 0, i32 %30, i32 %31
  %33 = load float, ptr %32, align 4, !invariant.load !297
  %add.51 = fadd float %29, %33
  %34 = getelementptr inbounds [256 x float], ptr %arg0, i32 0, i32 %7
  %35 = load float, ptr %34, align 4, !invariant.load !297
  %add.72 = fadd float %add.51, %35
  %region_0_11_constant_83 = load float, ptr @32, align 4
  %36 = fcmp oge float %add.72, %region_0_11_constant_83
  %37 = fcmp une float %add.72, %add.72
  %38 = or i1 %36, %37
  %maximum.104 = select i1 %38, float %add.72, float %region_0_11_constant_83
  %39 = getelementptr inbounds float, ptr %arg3, i32 %linear_index1
  store float %maximum.104, ptr %39, align 4
  %40 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  %41 = load float, ptr %40, align 4, !invariant.load !297
  %42 = add i32 %11, 0
  %43 = add i32 %10, 0
  %44 = getelementptr inbounds [8192 x [512 x float]], ptr %arg2, i32 0, i32 %42, i32 %43
  %45 = load float, ptr %44, align 4, !invariant.load !297
  %add.55 = fadd float %41, %45
  %46 = getelementptr inbounds [256 x float], ptr %arg0, i32 0, i32 %10
  %47 = load float, ptr %46, align 4, !invariant.load !297
  %add.76 = fadd float %add.55, %47
  %region_0_11_constant_87 = load float, ptr @32, align 4
  %48 = fcmp oge float %add.76, %region_0_11_constant_87
  %49 = fcmp une float %add.76, %add.76
  %50 = or i1 %48, %49
  %maximum.108 = select i1 %50, float %add.76, float %region_0_11_constant_87
  %51 = getelementptr inbounds float, ptr %arg3, i32 %linear_index2
  store float %maximum.108, ptr %51, align 4
  %52 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  %53 = load float, ptr %52, align 4, !invariant.load !297
  %54 = add i32 %14, 0
  %55 = add i32 %13, 0
  %56 = getelementptr inbounds [8192 x [512 x float]], ptr %arg2, i32 0, i32 %54, i32 %55
  %57 = load float, ptr %56, align 4, !invariant.load !297
  %add.59 = fadd float %53, %57
  %58 = getelementptr inbounds [256 x float], ptr %arg0, i32 0, i32 %13
  %59 = load float, ptr %58, align 4, !invariant.load !297
  %add.710 = fadd float %add.59, %59
  %region_0_11_constant_811 = load float, ptr @32, align 4
  %60 = fcmp oge float %add.710, %region_0_11_constant_811
  %61 = fcmp une float %add.710, %add.710
  %62 = or i1 %60, %61
  %maximum.1012 = select i1 %62, float %add.710, float %region_0_11_constant_811
  %63 = getelementptr inbounds float, ptr %arg3, i32 %linear_index3
  store float %maximum.1012, ptr %63, align 4
  br label %fusion_599.in_bounds-after
}

define void @fusion_633(ptr noalias align 16 dereferenceable(512) %arg0, ptr noalias align 16 dereferenceable(512) %arg1, ptr noalias align 16 dereferenceable(512) %arg2, ptr noalias align 128 dereferenceable(4194304) %arg3, ptr noalias align 128 dereferenceable(16777216) %arg4, ptr noalias align 128 dereferenceable(32768) %arg5, ptr noalias align 128 dereferenceable(32768) %arg6, ptr noalias align 128 dereferenceable(4194304) %arg7) {
entry:
  %initial_value_addr72 = alloca float, align 4
  %return_buffer67 = alloca float, align 4
  %result_from_other_lane65 = alloca float, align 4
  %return_buffer64 = alloca float, align 4
  %result_from_other_lane62 = alloca float, align 4
  %return_buffer61 = alloca float, align 4
  %result_from_other_lane59 = alloca float, align 4
  %return_buffer58 = alloca float, align 4
  %result_from_other_lane56 = alloca float, align 4
  %return_buffer55 = alloca float, align 4
  %result_from_other_lane53 = alloca float, align 4
  %initial_value_addr = alloca float, align 4
  %return_buffer51 = alloca float, align 4
  %result_from_other_lane49 = alloca float, align 4
  %return_buffer48 = alloca float, align 4
  %result_from_other_lane46 = alloca float, align 4
  %return_buffer45 = alloca float, align 4
  %result_from_other_lane43 = alloca float, align 4
  %return_buffer42 = alloca float, align 4
  %result_from_other_lane40 = alloca float, align 4
  %return_buffer39 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer37 = alloca float, align 4
  %return_buffer33 = alloca float, align 4
  %tile_loop.invar_address16 = alloca i32, align 4
  %return_buffer12 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result2 = alloca float, align 4
  %reduction_input_address1 = alloca float, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %inter_warp_reduce-after71, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_30_constant_10 = load float, ptr @33, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_30_constant_10, ptr %2, align 4
  %region_0_30_constant_103 = load float, ptr @33, align 4
  %3 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  store float %region_0_30_constant_103, ptr %3, align 4
  %4 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !352
  %5 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !368
  %6 = urem i32 %4, 32
  %7 = udiv i32 %4, 32
  %8 = mul i32 %5, 3
  %9 = add i32 %8, %7
  %10 = icmp ult i32 %9, 8192
  br i1 %10, label %11, label %early_return

11:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %6, 32
  %thread_id.y = udiv i32 %6, 32
  %lane_id = urem i32 %6, 32
  %12 = udiv i32 %9, 1
  %13 = urem i32 %12, 1
  %14 = udiv i32 %9, 1
  %15 = urem i32 %14, 8192
  %16 = udiv i32 %9, 8192
  %17 = icmp eq i32 %15, 8191
  %tile_bound = select i1 %17, i32 1, i32 1
  %18 = icmp eq i32 %13, 0
  %tile_bound4 = select i1 %18, i32 128, i32 512
  %tile_origin.0 = mul i32 %16, 1
  %tile_origin.1 = mul i32 %15, 1
  %tile_origin.2 = mul i32 %13, 512
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %is_full_tile-after, %11
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %19 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %19, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 1
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %20 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %21 = icmp eq i32 512, %tile_bound4
  br i1 %21, label %is_full_tile-true, label %is_full_tile-false

is_full_tile-after:                               ; preds = %tile_loop.loop_exit13, %tile_loop.loop_exit
  br label %y_in_tile.loop_header, !llvm.loop !384

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %partial_reduction_result38 = load float, ptr %current_output, align 4
  %22 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result38, i32 16, i32 31)
  store float %22, ptr %result_from_other_lane, align 4
  call void @region_1_16(ptr %current_output, ptr %result_from_other_lane, ptr %return_buffer39)
  %23 = load float, ptr %return_buffer39, align 4
  store float %23, ptr %current_output, align 4
  %partial_reduction_result41 = load float, ptr %current_output, align 4
  %24 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result41, i32 8, i32 31)
  store float %24, ptr %result_from_other_lane40, align 4
  call void @region_1_16(ptr %current_output, ptr %result_from_other_lane40, ptr %return_buffer42)
  %25 = load float, ptr %return_buffer42, align 4
  store float %25, ptr %current_output, align 4
  %partial_reduction_result44 = load float, ptr %current_output, align 4
  %26 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result44, i32 4, i32 31)
  store float %26, ptr %result_from_other_lane43, align 4
  call void @region_1_16(ptr %current_output, ptr %result_from_other_lane43, ptr %return_buffer45)
  %27 = load float, ptr %return_buffer45, align 4
  store float %27, ptr %current_output, align 4
  %partial_reduction_result47 = load float, ptr %current_output, align 4
  %28 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result47, i32 2, i32 31)
  store float %28, ptr %result_from_other_lane46, align 4
  call void @region_1_16(ptr %current_output, ptr %result_from_other_lane46, ptr %return_buffer48)
  %29 = load float, ptr %return_buffer48, align 4
  store float %29, ptr %current_output, align 4
  %partial_reduction_result50 = load float, ptr %current_output, align 4
  %30 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result50, i32 1, i32 31)
  store float %30, ptr %result_from_other_lane49, align 4
  call void @region_1_16(ptr %current_output, ptr %result_from_other_lane49, ptr %return_buffer51)
  %31 = load float, ptr %return_buffer51, align 4
  store float %31, ptr %current_output, align 4
  %32 = udiv i32 %thread_id.x, 32
  %33 = icmp eq i32 %lane_id, 0
  br i1 %33, label %intra_warp_reduce_write-true, label %intra_warp_reduce_write-after

intra_warp_reduce_write-after:                    ; preds = %intra_warp_reduce_write-true, %y_in_tile.loop_exit
  call void @llvm.nvvm.barrier0()
  %34 = icmp eq i32 %32, 0
  br i1 %34, label %inter_warp_reduce-true, label %inter_warp_reduce-after

inter_warp_reduce-after:                          ; preds = %reduction_write_output-after, %intra_warp_reduce_write-after
  %current_output52 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  %partial_reduction_result54 = load float, ptr %current_output52, align 4
  %35 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result54, i32 16, i32 31)
  store float %35, ptr %result_from_other_lane53, align 4
  call void @region_2_24(ptr %current_output52, ptr %result_from_other_lane53, ptr %return_buffer55)
  %36 = load float, ptr %return_buffer55, align 4
  store float %36, ptr %current_output52, align 4
  %partial_reduction_result57 = load float, ptr %current_output52, align 4
  %37 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result57, i32 8, i32 31)
  store float %37, ptr %result_from_other_lane56, align 4
  call void @region_2_24(ptr %current_output52, ptr %result_from_other_lane56, ptr %return_buffer58)
  %38 = load float, ptr %return_buffer58, align 4
  store float %38, ptr %current_output52, align 4
  %partial_reduction_result60 = load float, ptr %current_output52, align 4
  %39 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result60, i32 4, i32 31)
  store float %39, ptr %result_from_other_lane59, align 4
  call void @region_2_24(ptr %current_output52, ptr %result_from_other_lane59, ptr %return_buffer61)
  %40 = load float, ptr %return_buffer61, align 4
  store float %40, ptr %current_output52, align 4
  %partial_reduction_result63 = load float, ptr %current_output52, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result63, i32 2, i32 31)
  store float %41, ptr %result_from_other_lane62, align 4
  call void @region_2_24(ptr %current_output52, ptr %result_from_other_lane62, ptr %return_buffer64)
  %42 = load float, ptr %return_buffer64, align 4
  store float %42, ptr %current_output52, align 4
  %partial_reduction_result66 = load float, ptr %current_output52, align 4
  %43 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result66, i32 1, i32 31)
  store float %43, ptr %result_from_other_lane65, align 4
  call void @region_2_24(ptr %current_output52, ptr %result_from_other_lane65, ptr %return_buffer67)
  %44 = load float, ptr %return_buffer67, align 4
  store float %44, ptr %current_output52, align 4
  %45 = udiv i32 %thread_id.x, 32
  %46 = icmp eq i32 %lane_id, 0
  br i1 %46, label %intra_warp_reduce_write-true68, label %intra_warp_reduce_write-after69

intra_warp_reduce_write-after69:                  ; preds = %intra_warp_reduce_write-true68, %inter_warp_reduce-after
  call void @llvm.nvvm.barrier0()
  %47 = icmp eq i32 %45, 0
  br i1 %47, label %inter_warp_reduce-true70, label %inter_warp_reduce-after71

inter_warp_reduce-after71:                        ; preds = %reduction_write_output-after74, %intra_warp_reduce_write-after69
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

is_full_tile-true:                                ; preds = %y_in_tile.loop_body
  %48 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %tile_loop.loop_body, %is_full_tile-true
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %49 = icmp uge i32 %tile_loop.indvar, 16
  br i1 %49, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc5 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc5, ptr %tile_loop.invar_address, align 4
  %50 = icmp eq i32 %tile_loop.indvar, 0
  %51 = mul i32 %tile_loop.indvar, 32
  %52 = add i32 %51, 0
  %x_loc = add i32 %52, %48
  %53 = add i32 %tile_origin.1, %y_in_tile.indvar
  %54 = add i32 %tile_origin.2, %x_loc
  %Arg_3.4 = getelementptr inbounds [8192 x [128 x float]], ptr %arg3, i32 0, i32 %53, i32 %54
  %Arg_3.46 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  %55 = add i32 %53, 0
  %56 = add i32 %54, 384
  %Arg_4.5 = getelementptr inbounds [8192 x [512 x float]], ptr %arg4, i32 0, i32 %55, i32 %56
  %Arg_4.57 = load float, ptr %Arg_4.5, align 4, !invariant.load !297
  %add.7 = fadd float %Arg_3.46, %Arg_4.57
  %Arg_2.3 = getelementptr inbounds [128 x float], ptr %arg2, i32 0, i32 %54
  %Arg_2.38 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %add.9 = fadd float %add.7, %Arg_2.38
  %region_0_30_constant_109 = load float, ptr @33, align 4
  %57 = fcmp oge float %add.9, %region_0_30_constant_109
  %58 = fcmp une float %add.9, %add.9
  %59 = or i1 %57, %58
  %maximum.12 = select i1 %59, float %add.9, float %region_0_30_constant_109
  %Arg_0.1 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %54, i32 0
  %Arg_0.110 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %multiply.15 = fmul float %maximum.12, %Arg_0.110
  store float %multiply.15, ptr %reduction_input_address, align 4
  %60 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_16(ptr %60, ptr %reduction_input_address, ptr %return_buffer)
  %61 = load float, ptr %return_buffer, align 4
  store float %61, ptr %60, align 4
  %Arg_1.2 = getelementptr inbounds [128 x [1 x float]], ptr %arg1, i32 0, i32 %54, i32 0
  %Arg_1.211 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %multiply.23 = fmul float %maximum.12, %Arg_1.211
  store float %multiply.23, ptr %reduction_input_address1, align 4
  %62 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_24(ptr %62, ptr %reduction_input_address1, ptr %return_buffer12)
  %63 = load float, ptr %return_buffer12, align 4
  store float %63, ptr %62, align 4
  %64 = getelementptr inbounds [8192 x [128 x float]], ptr %arg7, i32 0, i32 %53, i32 %54
  store float %maximum.12, ptr %64, align 4
  br label %tile_loop.loop_header, !llvm.loop !385

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %is_full_tile-after

is_full_tile-false:                               ; preds = %y_in_tile.loop_body
  %65 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address16, align 4
  br label %tile_loop.loop_header14

tile_loop.loop_header14:                          ; preds = %x_in_tile-after, %is_full_tile-false
  %tile_loop.indvar17 = load i32, ptr %tile_loop.invar_address16, align 4
  %66 = icmp uge i32 %tile_loop.indvar17, 16
  br i1 %66, label %tile_loop.loop_exit13, label %tile_loop.loop_body15

tile_loop.loop_body15:                            ; preds = %tile_loop.loop_header14
  %invar.inc18 = add nuw nsw i32 %tile_loop.indvar17, 1
  store i32 %invar.inc18, ptr %tile_loop.invar_address16, align 4
  %67 = icmp eq i32 %tile_loop.indvar17, 0
  %68 = mul i32 %tile_loop.indvar17, 32
  %69 = add i32 %68, 0
  %x_loc19 = add i32 %69, %65
  %70 = add i32 %tile_origin.1, %y_in_tile.indvar
  %71 = add i32 %tile_origin.2, %x_loc19
  %72 = icmp ult i32 %x_loc19, %tile_bound4
  br i1 %72, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body15
  br label %tile_loop.loop_header14, !llvm.loop !386

tile_loop.loop_exit13:                            ; preds = %tile_loop.loop_header14
  br label %is_full_tile-after

x_in_tile-true:                                   ; preds = %tile_loop.loop_body15
  %Arg_3.420 = getelementptr inbounds [8192 x [128 x float]], ptr %arg3, i32 0, i32 %70, i32 %71
  %Arg_3.421 = load float, ptr %Arg_3.420, align 4, !invariant.load !297
  %73 = add i32 %70, 0
  %74 = add i32 %71, 384
  %Arg_4.522 = getelementptr inbounds [8192 x [512 x float]], ptr %arg4, i32 0, i32 %73, i32 %74
  %Arg_4.523 = load float, ptr %Arg_4.522, align 4, !invariant.load !297
  %add.724 = fadd float %Arg_3.421, %Arg_4.523
  %Arg_2.325 = getelementptr inbounds [128 x float], ptr %arg2, i32 0, i32 %71
  %Arg_2.326 = load float, ptr %Arg_2.325, align 4, !invariant.load !297
  %add.927 = fadd float %add.724, %Arg_2.326
  %region_0_30_constant_1028 = load float, ptr @33, align 4
  %75 = fcmp oge float %add.927, %region_0_30_constant_1028
  %76 = fcmp une float %add.927, %add.927
  %77 = or i1 %75, %76
  %maximum.1229 = select i1 %77, float %add.927, float %region_0_30_constant_1028
  %Arg_0.130 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %71, i32 0
  %Arg_0.131 = load float, ptr %Arg_0.130, align 4, !invariant.load !297
  %multiply.1532 = fmul float %maximum.1229, %Arg_0.131
  store float %multiply.1532, ptr %reduction_input_address, align 4
  %78 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_16(ptr %78, ptr %reduction_input_address, ptr %return_buffer33)
  %79 = load float, ptr %return_buffer33, align 4
  store float %79, ptr %78, align 4
  %Arg_1.234 = getelementptr inbounds [128 x [1 x float]], ptr %arg1, i32 0, i32 %71, i32 0
  %Arg_1.235 = load float, ptr %Arg_1.234, align 4, !invariant.load !297
  %multiply.2336 = fmul float %maximum.1229, %Arg_1.235
  store float %multiply.2336, ptr %reduction_input_address1, align 4
  %80 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_24(ptr %80, ptr %reduction_input_address1, ptr %return_buffer37)
  %81 = load float, ptr %return_buffer37, align 4
  store float %81, ptr %80, align 4
  %82 = getelementptr inbounds [8192 x [128 x float]], ptr %arg7, i32 0, i32 %70, i32 %71
  store float %maximum.1229, ptr %82, align 4
  br label %x_in_tile-after

intra_warp_reduce_write-true:                     ; preds = %y_in_tile.loop_exit
  %83 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache21, i32 0, i32 %7, i32 0, i32 %32
  %84 = addrspacecast ptr addrspace(3) %83 to ptr
  %85 = load float, ptr %current_output, align 4
  store float %85, ptr %84, align 4
  br label %intra_warp_reduce_write-after

inter_warp_reduce-true:                           ; preds = %intra_warp_reduce_write-after
  %86 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache21, i32 0, i32 %7, i32 0, i32 %lane_id
  %87 = addrspacecast ptr addrspace(3) %86 to ptr
  store float %region_0_30_constant_10, ptr %initial_value_addr, align 4
  %88 = icmp ult i32 %thread_id.x, 1
  %89 = select i1 %88, ptr %87, ptr %initial_value_addr
  %90 = icmp eq i32 %thread_id.x, 0
  br i1 %90, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %inter_warp_reduce-true
  br label %inter_warp_reduce-after

reduction_write_output-true:                      ; preds = %inter_warp_reduce-true
  %91 = mul i32 %thread_id.x, 1
  %92 = add i32 %tile_origin.1, %thread_id.y
  %93 = add i32 %tile_origin.2, %91
  %94 = add i32 %93, 0
  %95 = udiv i32 %92, 1
  %output_element_address = getelementptr inbounds [8192 x float], ptr %arg5, i32 0, i32 %95
  %output = load float, ptr %89, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

intra_warp_reduce_write-true68:                   ; preds = %inter_warp_reduce-after
  %96 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache22, i32 0, i32 %7, i32 0, i32 %45
  %97 = addrspacecast ptr addrspace(3) %96 to ptr
  %98 = load float, ptr %current_output52, align 4
  store float %98, ptr %97, align 4
  br label %intra_warp_reduce_write-after69

inter_warp_reduce-true70:                         ; preds = %intra_warp_reduce_write-after69
  %99 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache22, i32 0, i32 %7, i32 0, i32 %lane_id
  %100 = addrspacecast ptr addrspace(3) %99 to ptr
  store float %region_0_30_constant_103, ptr %initial_value_addr72, align 4
  %101 = icmp ult i32 %thread_id.x, 1
  %102 = select i1 %101, ptr %100, ptr %initial_value_addr72
  %103 = icmp eq i32 %thread_id.x, 0
  br i1 %103, label %reduction_write_output-true73, label %reduction_write_output-after74

reduction_write_output-after74:                   ; preds = %reduction_write_output-true73, %inter_warp_reduce-true70
  br label %inter_warp_reduce-after71

reduction_write_output-true73:                    ; preds = %inter_warp_reduce-true70
  %104 = mul i32 %thread_id.x, 1
  %105 = add i32 %tile_origin.1, %thread_id.y
  %106 = add i32 %tile_origin.2, %104
  %107 = add i32 %106, 0
  %108 = udiv i32 %105, 1
  %output_element_address75 = getelementptr inbounds [8192 x float], ptr %arg6, i32 0, i32 %108
  %output76 = load float, ptr %102, align 4
  store float %output76, ptr %output_element_address75, align 4
  br label %reduction_write_output-after74
}

define internal void @region_1_16(ptr dereferenceable(4) %Arg_0.17.typed, ptr dereferenceable(4) %Arg_1.18.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.19.typed = alloca float, align 4
  %Arg_0.17 = load float, ptr %Arg_0.17.typed, align 4
  %Arg_1.18 = load float, ptr %Arg_1.18.typed, align 4
  %add.19 = fadd float %Arg_0.17, %Arg_1.18
  store float %add.19, ptr %add.19.typed, align 4
  %load_ret_value = load float, ptr %add.19.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_24(ptr dereferenceable(4) %Arg_0.25.typed, ptr dereferenceable(4) %Arg_1.26.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.27.typed = alloca float, align 4
  %Arg_0.25 = load float, ptr %Arg_0.25.typed, align 4
  %Arg_1.26 = load float, ptr %Arg_1.26.typed, align 4
  %add.27 = fadd float %Arg_0.25, %Arg_1.26
  store float %add.27, ptr %add.27.typed, align 4
  %load_ret_value = load float, ptr %add.27.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_463(ptr noalias align 128 dereferenceable(4194304) %arg0, ptr noalias align 16 dereferenceable(512) %arg1, ptr noalias align 16 dereferenceable(512) %arg2, ptr noalias align 16 dereferenceable(512) %arg3, ptr noalias align 16 dereferenceable(512) %arg4, ptr noalias align 16 dereferenceable(512) %arg5, ptr noalias align 16 dereferenceable(512) %arg6, ptr noalias align 16 dereferenceable(512) %arg7, ptr noalias align 16 dereferenceable(512) %arg8, ptr noalias align 128 dereferenceable(32768) %arg9, ptr noalias align 128 dereferenceable(32768) %arg10, ptr noalias align 128 dereferenceable(32768) %arg11, ptr noalias align 128 dereferenceable(32768) %arg12, ptr noalias align 128 dereferenceable(32768) %arg13, ptr noalias align 128 dereferenceable(32768) %arg14, ptr noalias align 128 dereferenceable(32768) %arg15, ptr noalias align 128 dereferenceable(32768) %arg16) {
entry:
  %initial_value_addr293 = alloca float, align 4
  %return_buffer288 = alloca float, align 4
  %result_from_other_lane286 = alloca float, align 4
  %return_buffer285 = alloca float, align 4
  %result_from_other_lane283 = alloca float, align 4
  %return_buffer282 = alloca float, align 4
  %result_from_other_lane280 = alloca float, align 4
  %return_buffer279 = alloca float, align 4
  %result_from_other_lane277 = alloca float, align 4
  %return_buffer276 = alloca float, align 4
  %result_from_other_lane274 = alloca float, align 4
  %initial_value_addr268 = alloca float, align 4
  %return_buffer263 = alloca float, align 4
  %result_from_other_lane261 = alloca float, align 4
  %return_buffer260 = alloca float, align 4
  %result_from_other_lane258 = alloca float, align 4
  %return_buffer257 = alloca float, align 4
  %result_from_other_lane255 = alloca float, align 4
  %return_buffer254 = alloca float, align 4
  %result_from_other_lane252 = alloca float, align 4
  %return_buffer251 = alloca float, align 4
  %result_from_other_lane249 = alloca float, align 4
  %initial_value_addr243 = alloca float, align 4
  %return_buffer238 = alloca float, align 4
  %result_from_other_lane236 = alloca float, align 4
  %return_buffer235 = alloca float, align 4
  %result_from_other_lane233 = alloca float, align 4
  %return_buffer232 = alloca float, align 4
  %result_from_other_lane230 = alloca float, align 4
  %return_buffer229 = alloca float, align 4
  %result_from_other_lane227 = alloca float, align 4
  %return_buffer226 = alloca float, align 4
  %result_from_other_lane224 = alloca float, align 4
  %initial_value_addr218 = alloca float, align 4
  %return_buffer213 = alloca float, align 4
  %result_from_other_lane211 = alloca float, align 4
  %return_buffer210 = alloca float, align 4
  %result_from_other_lane208 = alloca float, align 4
  %return_buffer207 = alloca float, align 4
  %result_from_other_lane205 = alloca float, align 4
  %return_buffer204 = alloca float, align 4
  %result_from_other_lane202 = alloca float, align 4
  %return_buffer201 = alloca float, align 4
  %result_from_other_lane199 = alloca float, align 4
  %initial_value_addr193 = alloca float, align 4
  %return_buffer188 = alloca float, align 4
  %result_from_other_lane186 = alloca float, align 4
  %return_buffer185 = alloca float, align 4
  %result_from_other_lane183 = alloca float, align 4
  %return_buffer182 = alloca float, align 4
  %result_from_other_lane180 = alloca float, align 4
  %return_buffer179 = alloca float, align 4
  %result_from_other_lane177 = alloca float, align 4
  %return_buffer176 = alloca float, align 4
  %result_from_other_lane174 = alloca float, align 4
  %initial_value_addr168 = alloca float, align 4
  %return_buffer163 = alloca float, align 4
  %result_from_other_lane161 = alloca float, align 4
  %return_buffer160 = alloca float, align 4
  %result_from_other_lane158 = alloca float, align 4
  %return_buffer157 = alloca float, align 4
  %result_from_other_lane155 = alloca float, align 4
  %return_buffer154 = alloca float, align 4
  %result_from_other_lane152 = alloca float, align 4
  %return_buffer151 = alloca float, align 4
  %result_from_other_lane149 = alloca float, align 4
  %initial_value_addr143 = alloca float, align 4
  %return_buffer138 = alloca float, align 4
  %result_from_other_lane136 = alloca float, align 4
  %return_buffer135 = alloca float, align 4
  %result_from_other_lane133 = alloca float, align 4
  %return_buffer132 = alloca float, align 4
  %result_from_other_lane130 = alloca float, align 4
  %return_buffer129 = alloca float, align 4
  %result_from_other_lane127 = alloca float, align 4
  %return_buffer126 = alloca float, align 4
  %result_from_other_lane124 = alloca float, align 4
  %initial_value_addr = alloca float, align 4
  %return_buffer122 = alloca float, align 4
  %result_from_other_lane120 = alloca float, align 4
  %return_buffer119 = alloca float, align 4
  %result_from_other_lane117 = alloca float, align 4
  %return_buffer116 = alloca float, align 4
  %result_from_other_lane114 = alloca float, align 4
  %return_buffer113 = alloca float, align 4
  %result_from_other_lane111 = alloca float, align 4
  %return_buffer110 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer108 = alloca float, align 4
  %return_buffer102 = alloca float, align 4
  %return_buffer96 = alloca float, align 4
  %return_buffer90 = alloca float, align 4
  %return_buffer84 = alloca float, align 4
  %return_buffer78 = alloca float, align 4
  %return_buffer72 = alloca float, align 4
  %return_buffer66 = alloca float, align 4
  %tile_loop.invar_address57 = alloca i32, align 4
  %return_buffer53 = alloca float, align 4
  %return_buffer49 = alloca float, align 4
  %return_buffer45 = alloca float, align 4
  %return_buffer41 = alloca float, align 4
  %return_buffer37 = alloca float, align 4
  %return_buffer33 = alloca float, align 4
  %return_buffer29 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result20 = alloca float, align 4
  %reduction_input_address19 = alloca float, align 4
  %partial_reduction_result17 = alloca float, align 4
  %reduction_input_address16 = alloca float, align 4
  %partial_reduction_result14 = alloca float, align 4
  %reduction_input_address13 = alloca float, align 4
  %partial_reduction_result11 = alloca float, align 4
  %reduction_input_address10 = alloca float, align 4
  %partial_reduction_result8 = alloca float, align 4
  %reduction_input_address7 = alloca float, align 4
  %partial_reduction_result5 = alloca float, align 4
  %reduction_input_address4 = alloca float, align 4
  %partial_reduction_result2 = alloca float, align 4
  %reduction_input_address1 = alloca float, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %inter_warp_reduce-after292, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_76_constant_13 = load float, ptr @34, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_76_constant_13, ptr %2, align 4
  %region_0_76_constant_133 = load float, ptr @34, align 4
  %3 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  store float %region_0_76_constant_133, ptr %3, align 4
  %region_0_76_constant_136 = load float, ptr @34, align 4
  %4 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  store float %region_0_76_constant_136, ptr %4, align 4
  %region_0_76_constant_139 = load float, ptr @34, align 4
  %5 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  store float %region_0_76_constant_139, ptr %5, align 4
  %region_0_76_constant_1312 = load float, ptr @34, align 4
  %6 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  store float %region_0_76_constant_1312, ptr %6, align 4
  %region_0_76_constant_1315 = load float, ptr @34, align 4
  %7 = getelementptr inbounds float, ptr %partial_reduction_result14, i32 0
  store float %region_0_76_constant_1315, ptr %7, align 4
  %region_0_76_constant_1318 = load float, ptr @34, align 4
  %8 = getelementptr inbounds float, ptr %partial_reduction_result17, i32 0
  store float %region_0_76_constant_1318, ptr %8, align 4
  %region_0_76_constant_1321 = load float, ptr @34, align 4
  %9 = getelementptr inbounds float, ptr %partial_reduction_result20, i32 0
  store float %region_0_76_constant_1321, ptr %9, align 4
  %10 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !352
  %11 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !368
  %12 = urem i32 %10, 32
  %13 = udiv i32 %10, 32
  %14 = mul i32 %11, 3
  %15 = add i32 %14, %13
  %16 = icmp ult i32 %15, 8192
  br i1 %16, label %17, label %early_return

17:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %12, 32
  %thread_id.y = udiv i32 %12, 32
  %lane_id = urem i32 %12, 32
  %18 = udiv i32 %15, 1
  %19 = urem i32 %18, 1
  %20 = udiv i32 %15, 1
  %21 = urem i32 %20, 8192
  %22 = udiv i32 %15, 8192
  %23 = icmp eq i32 %21, 8191
  %tile_bound = select i1 %23, i32 1, i32 1
  %24 = icmp eq i32 %19, 0
  %tile_bound22 = select i1 %24, i32 128, i32 512
  %tile_origin.0 = mul i32 %22, 1
  %tile_origin.1 = mul i32 %21, 1
  %tile_origin.2 = mul i32 %19, 512
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %is_full_tile-after, %17
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %25 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %25, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 1
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %26 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %27 = icmp eq i32 512, %tile_bound22
  br i1 %27, label %is_full_tile-true, label %is_full_tile-false

is_full_tile-after:                               ; preds = %tile_loop.loop_exit54, %tile_loop.loop_exit
  br label %y_in_tile.loop_header, !llvm.loop !387

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %partial_reduction_result109 = load float, ptr %current_output, align 4
  %28 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result109, i32 16, i32 31)
  store float %28, ptr %result_from_other_lane, align 4
  call void @region_1_14(ptr %current_output, ptr %result_from_other_lane, ptr %return_buffer110)
  %29 = load float, ptr %return_buffer110, align 4
  store float %29, ptr %current_output, align 4
  %partial_reduction_result112 = load float, ptr %current_output, align 4
  %30 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result112, i32 8, i32 31)
  store float %30, ptr %result_from_other_lane111, align 4
  call void @region_1_14(ptr %current_output, ptr %result_from_other_lane111, ptr %return_buffer113)
  %31 = load float, ptr %return_buffer113, align 4
  store float %31, ptr %current_output, align 4
  %partial_reduction_result115 = load float, ptr %current_output, align 4
  %32 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result115, i32 4, i32 31)
  store float %32, ptr %result_from_other_lane114, align 4
  call void @region_1_14(ptr %current_output, ptr %result_from_other_lane114, ptr %return_buffer116)
  %33 = load float, ptr %return_buffer116, align 4
  store float %33, ptr %current_output, align 4
  %partial_reduction_result118 = load float, ptr %current_output, align 4
  %34 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result118, i32 2, i32 31)
  store float %34, ptr %result_from_other_lane117, align 4
  call void @region_1_14(ptr %current_output, ptr %result_from_other_lane117, ptr %return_buffer119)
  %35 = load float, ptr %return_buffer119, align 4
  store float %35, ptr %current_output, align 4
  %partial_reduction_result121 = load float, ptr %current_output, align 4
  %36 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result121, i32 1, i32 31)
  store float %36, ptr %result_from_other_lane120, align 4
  call void @region_1_14(ptr %current_output, ptr %result_from_other_lane120, ptr %return_buffer122)
  %37 = load float, ptr %return_buffer122, align 4
  store float %37, ptr %current_output, align 4
  %38 = udiv i32 %thread_id.x, 32
  %39 = icmp eq i32 %lane_id, 0
  br i1 %39, label %intra_warp_reduce_write-true, label %intra_warp_reduce_write-after

intra_warp_reduce_write-after:                    ; preds = %intra_warp_reduce_write-true, %y_in_tile.loop_exit
  call void @llvm.nvvm.barrier0()
  %40 = icmp eq i32 %38, 0
  br i1 %40, label %inter_warp_reduce-true, label %inter_warp_reduce-after

inter_warp_reduce-after:                          ; preds = %reduction_write_output-after, %intra_warp_reduce_write-after
  %current_output123 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  %partial_reduction_result125 = load float, ptr %current_output123, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result125, i32 16, i32 31)
  store float %41, ptr %result_from_other_lane124, align 4
  call void @region_2_22(ptr %current_output123, ptr %result_from_other_lane124, ptr %return_buffer126)
  %42 = load float, ptr %return_buffer126, align 4
  store float %42, ptr %current_output123, align 4
  %partial_reduction_result128 = load float, ptr %current_output123, align 4
  %43 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result128, i32 8, i32 31)
  store float %43, ptr %result_from_other_lane127, align 4
  call void @region_2_22(ptr %current_output123, ptr %result_from_other_lane127, ptr %return_buffer129)
  %44 = load float, ptr %return_buffer129, align 4
  store float %44, ptr %current_output123, align 4
  %partial_reduction_result131 = load float, ptr %current_output123, align 4
  %45 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result131, i32 4, i32 31)
  store float %45, ptr %result_from_other_lane130, align 4
  call void @region_2_22(ptr %current_output123, ptr %result_from_other_lane130, ptr %return_buffer132)
  %46 = load float, ptr %return_buffer132, align 4
  store float %46, ptr %current_output123, align 4
  %partial_reduction_result134 = load float, ptr %current_output123, align 4
  %47 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result134, i32 2, i32 31)
  store float %47, ptr %result_from_other_lane133, align 4
  call void @region_2_22(ptr %current_output123, ptr %result_from_other_lane133, ptr %return_buffer135)
  %48 = load float, ptr %return_buffer135, align 4
  store float %48, ptr %current_output123, align 4
  %partial_reduction_result137 = load float, ptr %current_output123, align 4
  %49 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result137, i32 1, i32 31)
  store float %49, ptr %result_from_other_lane136, align 4
  call void @region_2_22(ptr %current_output123, ptr %result_from_other_lane136, ptr %return_buffer138)
  %50 = load float, ptr %return_buffer138, align 4
  store float %50, ptr %current_output123, align 4
  %51 = udiv i32 %thread_id.x, 32
  %52 = icmp eq i32 %lane_id, 0
  br i1 %52, label %intra_warp_reduce_write-true139, label %intra_warp_reduce_write-after140

intra_warp_reduce_write-after140:                 ; preds = %intra_warp_reduce_write-true139, %inter_warp_reduce-after
  call void @llvm.nvvm.barrier0()
  %53 = icmp eq i32 %51, 0
  br i1 %53, label %inter_warp_reduce-true141, label %inter_warp_reduce-after142

inter_warp_reduce-after142:                       ; preds = %reduction_write_output-after145, %intra_warp_reduce_write-after140
  %current_output148 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  %partial_reduction_result150 = load float, ptr %current_output148, align 4
  %54 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result150, i32 16, i32 31)
  store float %54, ptr %result_from_other_lane149, align 4
  call void @region_3_30(ptr %current_output148, ptr %result_from_other_lane149, ptr %return_buffer151)
  %55 = load float, ptr %return_buffer151, align 4
  store float %55, ptr %current_output148, align 4
  %partial_reduction_result153 = load float, ptr %current_output148, align 4
  %56 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result153, i32 8, i32 31)
  store float %56, ptr %result_from_other_lane152, align 4
  call void @region_3_30(ptr %current_output148, ptr %result_from_other_lane152, ptr %return_buffer154)
  %57 = load float, ptr %return_buffer154, align 4
  store float %57, ptr %current_output148, align 4
  %partial_reduction_result156 = load float, ptr %current_output148, align 4
  %58 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result156, i32 4, i32 31)
  store float %58, ptr %result_from_other_lane155, align 4
  call void @region_3_30(ptr %current_output148, ptr %result_from_other_lane155, ptr %return_buffer157)
  %59 = load float, ptr %return_buffer157, align 4
  store float %59, ptr %current_output148, align 4
  %partial_reduction_result159 = load float, ptr %current_output148, align 4
  %60 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result159, i32 2, i32 31)
  store float %60, ptr %result_from_other_lane158, align 4
  call void @region_3_30(ptr %current_output148, ptr %result_from_other_lane158, ptr %return_buffer160)
  %61 = load float, ptr %return_buffer160, align 4
  store float %61, ptr %current_output148, align 4
  %partial_reduction_result162 = load float, ptr %current_output148, align 4
  %62 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result162, i32 1, i32 31)
  store float %62, ptr %result_from_other_lane161, align 4
  call void @region_3_30(ptr %current_output148, ptr %result_from_other_lane161, ptr %return_buffer163)
  %63 = load float, ptr %return_buffer163, align 4
  store float %63, ptr %current_output148, align 4
  %64 = udiv i32 %thread_id.x, 32
  %65 = icmp eq i32 %lane_id, 0
  br i1 %65, label %intra_warp_reduce_write-true164, label %intra_warp_reduce_write-after165

intra_warp_reduce_write-after165:                 ; preds = %intra_warp_reduce_write-true164, %inter_warp_reduce-after142
  call void @llvm.nvvm.barrier0()
  %66 = icmp eq i32 %64, 0
  br i1 %66, label %inter_warp_reduce-true166, label %inter_warp_reduce-after167

inter_warp_reduce-after167:                       ; preds = %reduction_write_output-after170, %intra_warp_reduce_write-after165
  %current_output173 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  %partial_reduction_result175 = load float, ptr %current_output173, align 4
  %67 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result175, i32 16, i32 31)
  store float %67, ptr %result_from_other_lane174, align 4
  call void @region_4_38(ptr %current_output173, ptr %result_from_other_lane174, ptr %return_buffer176)
  %68 = load float, ptr %return_buffer176, align 4
  store float %68, ptr %current_output173, align 4
  %partial_reduction_result178 = load float, ptr %current_output173, align 4
  %69 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result178, i32 8, i32 31)
  store float %69, ptr %result_from_other_lane177, align 4
  call void @region_4_38(ptr %current_output173, ptr %result_from_other_lane177, ptr %return_buffer179)
  %70 = load float, ptr %return_buffer179, align 4
  store float %70, ptr %current_output173, align 4
  %partial_reduction_result181 = load float, ptr %current_output173, align 4
  %71 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result181, i32 4, i32 31)
  store float %71, ptr %result_from_other_lane180, align 4
  call void @region_4_38(ptr %current_output173, ptr %result_from_other_lane180, ptr %return_buffer182)
  %72 = load float, ptr %return_buffer182, align 4
  store float %72, ptr %current_output173, align 4
  %partial_reduction_result184 = load float, ptr %current_output173, align 4
  %73 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result184, i32 2, i32 31)
  store float %73, ptr %result_from_other_lane183, align 4
  call void @region_4_38(ptr %current_output173, ptr %result_from_other_lane183, ptr %return_buffer185)
  %74 = load float, ptr %return_buffer185, align 4
  store float %74, ptr %current_output173, align 4
  %partial_reduction_result187 = load float, ptr %current_output173, align 4
  %75 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result187, i32 1, i32 31)
  store float %75, ptr %result_from_other_lane186, align 4
  call void @region_4_38(ptr %current_output173, ptr %result_from_other_lane186, ptr %return_buffer188)
  %76 = load float, ptr %return_buffer188, align 4
  store float %76, ptr %current_output173, align 4
  %77 = udiv i32 %thread_id.x, 32
  %78 = icmp eq i32 %lane_id, 0
  br i1 %78, label %intra_warp_reduce_write-true189, label %intra_warp_reduce_write-after190

intra_warp_reduce_write-after190:                 ; preds = %intra_warp_reduce_write-true189, %inter_warp_reduce-after167
  call void @llvm.nvvm.barrier0()
  %79 = icmp eq i32 %77, 0
  br i1 %79, label %inter_warp_reduce-true191, label %inter_warp_reduce-after192

inter_warp_reduce-after192:                       ; preds = %reduction_write_output-after195, %intra_warp_reduce_write-after190
  %current_output198 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  %partial_reduction_result200 = load float, ptr %current_output198, align 4
  %80 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result200, i32 16, i32 31)
  store float %80, ptr %result_from_other_lane199, align 4
  call void @region_5_46(ptr %current_output198, ptr %result_from_other_lane199, ptr %return_buffer201)
  %81 = load float, ptr %return_buffer201, align 4
  store float %81, ptr %current_output198, align 4
  %partial_reduction_result203 = load float, ptr %current_output198, align 4
  %82 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result203, i32 8, i32 31)
  store float %82, ptr %result_from_other_lane202, align 4
  call void @region_5_46(ptr %current_output198, ptr %result_from_other_lane202, ptr %return_buffer204)
  %83 = load float, ptr %return_buffer204, align 4
  store float %83, ptr %current_output198, align 4
  %partial_reduction_result206 = load float, ptr %current_output198, align 4
  %84 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result206, i32 4, i32 31)
  store float %84, ptr %result_from_other_lane205, align 4
  call void @region_5_46(ptr %current_output198, ptr %result_from_other_lane205, ptr %return_buffer207)
  %85 = load float, ptr %return_buffer207, align 4
  store float %85, ptr %current_output198, align 4
  %partial_reduction_result209 = load float, ptr %current_output198, align 4
  %86 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result209, i32 2, i32 31)
  store float %86, ptr %result_from_other_lane208, align 4
  call void @region_5_46(ptr %current_output198, ptr %result_from_other_lane208, ptr %return_buffer210)
  %87 = load float, ptr %return_buffer210, align 4
  store float %87, ptr %current_output198, align 4
  %partial_reduction_result212 = load float, ptr %current_output198, align 4
  %88 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result212, i32 1, i32 31)
  store float %88, ptr %result_from_other_lane211, align 4
  call void @region_5_46(ptr %current_output198, ptr %result_from_other_lane211, ptr %return_buffer213)
  %89 = load float, ptr %return_buffer213, align 4
  store float %89, ptr %current_output198, align 4
  %90 = udiv i32 %thread_id.x, 32
  %91 = icmp eq i32 %lane_id, 0
  br i1 %91, label %intra_warp_reduce_write-true214, label %intra_warp_reduce_write-after215

intra_warp_reduce_write-after215:                 ; preds = %intra_warp_reduce_write-true214, %inter_warp_reduce-after192
  call void @llvm.nvvm.barrier0()
  %92 = icmp eq i32 %90, 0
  br i1 %92, label %inter_warp_reduce-true216, label %inter_warp_reduce-after217

inter_warp_reduce-after217:                       ; preds = %reduction_write_output-after220, %intra_warp_reduce_write-after215
  %current_output223 = getelementptr inbounds float, ptr %partial_reduction_result14, i32 0
  %partial_reduction_result225 = load float, ptr %current_output223, align 4
  %93 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result225, i32 16, i32 31)
  store float %93, ptr %result_from_other_lane224, align 4
  call void @region_6_54(ptr %current_output223, ptr %result_from_other_lane224, ptr %return_buffer226)
  %94 = load float, ptr %return_buffer226, align 4
  store float %94, ptr %current_output223, align 4
  %partial_reduction_result228 = load float, ptr %current_output223, align 4
  %95 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result228, i32 8, i32 31)
  store float %95, ptr %result_from_other_lane227, align 4
  call void @region_6_54(ptr %current_output223, ptr %result_from_other_lane227, ptr %return_buffer229)
  %96 = load float, ptr %return_buffer229, align 4
  store float %96, ptr %current_output223, align 4
  %partial_reduction_result231 = load float, ptr %current_output223, align 4
  %97 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result231, i32 4, i32 31)
  store float %97, ptr %result_from_other_lane230, align 4
  call void @region_6_54(ptr %current_output223, ptr %result_from_other_lane230, ptr %return_buffer232)
  %98 = load float, ptr %return_buffer232, align 4
  store float %98, ptr %current_output223, align 4
  %partial_reduction_result234 = load float, ptr %current_output223, align 4
  %99 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result234, i32 2, i32 31)
  store float %99, ptr %result_from_other_lane233, align 4
  call void @region_6_54(ptr %current_output223, ptr %result_from_other_lane233, ptr %return_buffer235)
  %100 = load float, ptr %return_buffer235, align 4
  store float %100, ptr %current_output223, align 4
  %partial_reduction_result237 = load float, ptr %current_output223, align 4
  %101 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result237, i32 1, i32 31)
  store float %101, ptr %result_from_other_lane236, align 4
  call void @region_6_54(ptr %current_output223, ptr %result_from_other_lane236, ptr %return_buffer238)
  %102 = load float, ptr %return_buffer238, align 4
  store float %102, ptr %current_output223, align 4
  %103 = udiv i32 %thread_id.x, 32
  %104 = icmp eq i32 %lane_id, 0
  br i1 %104, label %intra_warp_reduce_write-true239, label %intra_warp_reduce_write-after240

intra_warp_reduce_write-after240:                 ; preds = %intra_warp_reduce_write-true239, %inter_warp_reduce-after217
  call void @llvm.nvvm.barrier0()
  %105 = icmp eq i32 %103, 0
  br i1 %105, label %inter_warp_reduce-true241, label %inter_warp_reduce-after242

inter_warp_reduce-after242:                       ; preds = %reduction_write_output-after245, %intra_warp_reduce_write-after240
  %current_output248 = getelementptr inbounds float, ptr %partial_reduction_result17, i32 0
  %partial_reduction_result250 = load float, ptr %current_output248, align 4
  %106 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result250, i32 16, i32 31)
  store float %106, ptr %result_from_other_lane249, align 4
  call void @region_7_62(ptr %current_output248, ptr %result_from_other_lane249, ptr %return_buffer251)
  %107 = load float, ptr %return_buffer251, align 4
  store float %107, ptr %current_output248, align 4
  %partial_reduction_result253 = load float, ptr %current_output248, align 4
  %108 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result253, i32 8, i32 31)
  store float %108, ptr %result_from_other_lane252, align 4
  call void @region_7_62(ptr %current_output248, ptr %result_from_other_lane252, ptr %return_buffer254)
  %109 = load float, ptr %return_buffer254, align 4
  store float %109, ptr %current_output248, align 4
  %partial_reduction_result256 = load float, ptr %current_output248, align 4
  %110 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result256, i32 4, i32 31)
  store float %110, ptr %result_from_other_lane255, align 4
  call void @region_7_62(ptr %current_output248, ptr %result_from_other_lane255, ptr %return_buffer257)
  %111 = load float, ptr %return_buffer257, align 4
  store float %111, ptr %current_output248, align 4
  %partial_reduction_result259 = load float, ptr %current_output248, align 4
  %112 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result259, i32 2, i32 31)
  store float %112, ptr %result_from_other_lane258, align 4
  call void @region_7_62(ptr %current_output248, ptr %result_from_other_lane258, ptr %return_buffer260)
  %113 = load float, ptr %return_buffer260, align 4
  store float %113, ptr %current_output248, align 4
  %partial_reduction_result262 = load float, ptr %current_output248, align 4
  %114 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result262, i32 1, i32 31)
  store float %114, ptr %result_from_other_lane261, align 4
  call void @region_7_62(ptr %current_output248, ptr %result_from_other_lane261, ptr %return_buffer263)
  %115 = load float, ptr %return_buffer263, align 4
  store float %115, ptr %current_output248, align 4
  %116 = udiv i32 %thread_id.x, 32
  %117 = icmp eq i32 %lane_id, 0
  br i1 %117, label %intra_warp_reduce_write-true264, label %intra_warp_reduce_write-after265

intra_warp_reduce_write-after265:                 ; preds = %intra_warp_reduce_write-true264, %inter_warp_reduce-after242
  call void @llvm.nvvm.barrier0()
  %118 = icmp eq i32 %116, 0
  br i1 %118, label %inter_warp_reduce-true266, label %inter_warp_reduce-after267

inter_warp_reduce-after267:                       ; preds = %reduction_write_output-after270, %intra_warp_reduce_write-after265
  %current_output273 = getelementptr inbounds float, ptr %partial_reduction_result20, i32 0
  %partial_reduction_result275 = load float, ptr %current_output273, align 4
  %119 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result275, i32 16, i32 31)
  store float %119, ptr %result_from_other_lane274, align 4
  call void @region_8_70(ptr %current_output273, ptr %result_from_other_lane274, ptr %return_buffer276)
  %120 = load float, ptr %return_buffer276, align 4
  store float %120, ptr %current_output273, align 4
  %partial_reduction_result278 = load float, ptr %current_output273, align 4
  %121 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result278, i32 8, i32 31)
  store float %121, ptr %result_from_other_lane277, align 4
  call void @region_8_70(ptr %current_output273, ptr %result_from_other_lane277, ptr %return_buffer279)
  %122 = load float, ptr %return_buffer279, align 4
  store float %122, ptr %current_output273, align 4
  %partial_reduction_result281 = load float, ptr %current_output273, align 4
  %123 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result281, i32 4, i32 31)
  store float %123, ptr %result_from_other_lane280, align 4
  call void @region_8_70(ptr %current_output273, ptr %result_from_other_lane280, ptr %return_buffer282)
  %124 = load float, ptr %return_buffer282, align 4
  store float %124, ptr %current_output273, align 4
  %partial_reduction_result284 = load float, ptr %current_output273, align 4
  %125 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result284, i32 2, i32 31)
  store float %125, ptr %result_from_other_lane283, align 4
  call void @region_8_70(ptr %current_output273, ptr %result_from_other_lane283, ptr %return_buffer285)
  %126 = load float, ptr %return_buffer285, align 4
  store float %126, ptr %current_output273, align 4
  %partial_reduction_result287 = load float, ptr %current_output273, align 4
  %127 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result287, i32 1, i32 31)
  store float %127, ptr %result_from_other_lane286, align 4
  call void @region_8_70(ptr %current_output273, ptr %result_from_other_lane286, ptr %return_buffer288)
  %128 = load float, ptr %return_buffer288, align 4
  store float %128, ptr %current_output273, align 4
  %129 = udiv i32 %thread_id.x, 32
  %130 = icmp eq i32 %lane_id, 0
  br i1 %130, label %intra_warp_reduce_write-true289, label %intra_warp_reduce_write-after290

intra_warp_reduce_write-after290:                 ; preds = %intra_warp_reduce_write-true289, %inter_warp_reduce-after267
  call void @llvm.nvvm.barrier0()
  %131 = icmp eq i32 %129, 0
  br i1 %131, label %inter_warp_reduce-true291, label %inter_warp_reduce-after292

inter_warp_reduce-after292:                       ; preds = %reduction_write_output-after295, %intra_warp_reduce_write-after290
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

is_full_tile-true:                                ; preds = %y_in_tile.loop_body
  %132 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %tile_loop.loop_body, %is_full_tile-true
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %133 = icmp uge i32 %tile_loop.indvar, 16
  br i1 %133, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc23 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc23, ptr %tile_loop.invar_address, align 4
  %134 = icmp eq i32 %tile_loop.indvar, 0
  %135 = mul i32 %tile_loop.indvar, 32
  %136 = add i32 %135, 0
  %x_loc = add i32 %136, %132
  %137 = add i32 %tile_origin.1, %y_in_tile.indvar
  %138 = add i32 %tile_origin.2, %x_loc
  %Arg_0.1 = getelementptr inbounds [8192 x [128 x float]], ptr %arg0, i32 0, i32 %137, i32 %138
  %Arg_0.124 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %Arg_1.2 = getelementptr inbounds [128 x [1 x float]], ptr %arg1, i32 0, i32 %138, i32 0
  %Arg_1.225 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %multiply.12 = fmul float %Arg_0.124, %Arg_1.225
  store float %multiply.12, ptr %reduction_input_address, align 4
  %139 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_14(ptr %139, ptr %reduction_input_address, ptr %return_buffer)
  %140 = load float, ptr %return_buffer, align 4
  store float %140, ptr %139, align 4
  %Arg_0.126 = getelementptr inbounds [8192 x [128 x float]], ptr %arg0, i32 0, i32 %137, i32 %138
  %Arg_0.127 = load float, ptr %Arg_0.126, align 4, !invariant.load !297
  %Arg_2.3 = getelementptr inbounds [128 x [1 x float]], ptr %arg2, i32 0, i32 %138, i32 0
  %Arg_2.328 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %multiply.21 = fmul float %Arg_0.127, %Arg_2.328
  store float %multiply.21, ptr %reduction_input_address1, align 4
  %141 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_22(ptr %141, ptr %reduction_input_address1, ptr %return_buffer29)
  %142 = load float, ptr %return_buffer29, align 4
  store float %142, ptr %141, align 4
  %Arg_0.130 = getelementptr inbounds [8192 x [128 x float]], ptr %arg0, i32 0, i32 %137, i32 %138
  %Arg_0.131 = load float, ptr %Arg_0.130, align 4, !invariant.load !297
  %Arg_3.4 = getelementptr inbounds [128 x [1 x float]], ptr %arg3, i32 0, i32 %138, i32 0
  %Arg_3.432 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  %multiply.29 = fmul float %Arg_0.131, %Arg_3.432
  store float %multiply.29, ptr %reduction_input_address4, align 4
  %143 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  call void @region_3_30(ptr %143, ptr %reduction_input_address4, ptr %return_buffer33)
  %144 = load float, ptr %return_buffer33, align 4
  store float %144, ptr %143, align 4
  %Arg_0.134 = getelementptr inbounds [8192 x [128 x float]], ptr %arg0, i32 0, i32 %137, i32 %138
  %Arg_0.135 = load float, ptr %Arg_0.134, align 4, !invariant.load !297
  %Arg_4.5 = getelementptr inbounds [128 x [1 x float]], ptr %arg4, i32 0, i32 %138, i32 0
  %Arg_4.536 = load float, ptr %Arg_4.5, align 4, !invariant.load !297
  %multiply.37 = fmul float %Arg_0.135, %Arg_4.536
  store float %multiply.37, ptr %reduction_input_address7, align 4
  %145 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  call void @region_4_38(ptr %145, ptr %reduction_input_address7, ptr %return_buffer37)
  %146 = load float, ptr %return_buffer37, align 4
  store float %146, ptr %145, align 4
  %Arg_0.138 = getelementptr inbounds [8192 x [128 x float]], ptr %arg0, i32 0, i32 %137, i32 %138
  %Arg_0.139 = load float, ptr %Arg_0.138, align 4, !invariant.load !297
  %Arg_5.6 = getelementptr inbounds [128 x [1 x float]], ptr %arg5, i32 0, i32 %138, i32 0
  %Arg_5.640 = load float, ptr %Arg_5.6, align 4, !invariant.load !297
  %multiply.45 = fmul float %Arg_0.139, %Arg_5.640
  store float %multiply.45, ptr %reduction_input_address10, align 4
  %147 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  call void @region_5_46(ptr %147, ptr %reduction_input_address10, ptr %return_buffer41)
  %148 = load float, ptr %return_buffer41, align 4
  store float %148, ptr %147, align 4
  %Arg_0.142 = getelementptr inbounds [8192 x [128 x float]], ptr %arg0, i32 0, i32 %137, i32 %138
  %Arg_0.143 = load float, ptr %Arg_0.142, align 4, !invariant.load !297
  %Arg_6.7 = getelementptr inbounds [128 x [1 x float]], ptr %arg6, i32 0, i32 %138, i32 0
  %Arg_6.744 = load float, ptr %Arg_6.7, align 4, !invariant.load !297
  %multiply.53 = fmul float %Arg_0.143, %Arg_6.744
  store float %multiply.53, ptr %reduction_input_address13, align 4
  %149 = getelementptr inbounds float, ptr %partial_reduction_result14, i32 0
  call void @region_6_54(ptr %149, ptr %reduction_input_address13, ptr %return_buffer45)
  %150 = load float, ptr %return_buffer45, align 4
  store float %150, ptr %149, align 4
  %Arg_0.146 = getelementptr inbounds [8192 x [128 x float]], ptr %arg0, i32 0, i32 %137, i32 %138
  %Arg_0.147 = load float, ptr %Arg_0.146, align 4, !invariant.load !297
  %Arg_7.8 = getelementptr inbounds [128 x [1 x float]], ptr %arg7, i32 0, i32 %138, i32 0
  %Arg_7.848 = load float, ptr %Arg_7.8, align 4, !invariant.load !297
  %multiply.61 = fmul float %Arg_0.147, %Arg_7.848
  store float %multiply.61, ptr %reduction_input_address16, align 4
  %151 = getelementptr inbounds float, ptr %partial_reduction_result17, i32 0
  call void @region_7_62(ptr %151, ptr %reduction_input_address16, ptr %return_buffer49)
  %152 = load float, ptr %return_buffer49, align 4
  store float %152, ptr %151, align 4
  %Arg_0.150 = getelementptr inbounds [8192 x [128 x float]], ptr %arg0, i32 0, i32 %137, i32 %138
  %Arg_0.151 = load float, ptr %Arg_0.150, align 4, !invariant.load !297
  %Arg_8.9 = getelementptr inbounds [128 x [1 x float]], ptr %arg8, i32 0, i32 %138, i32 0
  %Arg_8.952 = load float, ptr %Arg_8.9, align 4, !invariant.load !297
  %multiply.69 = fmul float %Arg_0.151, %Arg_8.952
  store float %multiply.69, ptr %reduction_input_address19, align 4
  %153 = getelementptr inbounds float, ptr %partial_reduction_result20, i32 0
  call void @region_8_70(ptr %153, ptr %reduction_input_address19, ptr %return_buffer53)
  %154 = load float, ptr %return_buffer53, align 4
  store float %154, ptr %153, align 4
  br label %tile_loop.loop_header, !llvm.loop !388

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %is_full_tile-after

is_full_tile-false:                               ; preds = %y_in_tile.loop_body
  %155 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address57, align 4
  br label %tile_loop.loop_header55

tile_loop.loop_header55:                          ; preds = %x_in_tile-after, %is_full_tile-false
  %tile_loop.indvar58 = load i32, ptr %tile_loop.invar_address57, align 4
  %156 = icmp uge i32 %tile_loop.indvar58, 16
  br i1 %156, label %tile_loop.loop_exit54, label %tile_loop.loop_body56

tile_loop.loop_body56:                            ; preds = %tile_loop.loop_header55
  %invar.inc59 = add nuw nsw i32 %tile_loop.indvar58, 1
  store i32 %invar.inc59, ptr %tile_loop.invar_address57, align 4
  %157 = icmp eq i32 %tile_loop.indvar58, 0
  %158 = mul i32 %tile_loop.indvar58, 32
  %159 = add i32 %158, 0
  %x_loc60 = add i32 %159, %155
  %160 = add i32 %tile_origin.1, %y_in_tile.indvar
  %161 = add i32 %tile_origin.2, %x_loc60
  %162 = icmp ult i32 %x_loc60, %tile_bound22
  br i1 %162, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body56
  br label %tile_loop.loop_header55, !llvm.loop !389

tile_loop.loop_exit54:                            ; preds = %tile_loop.loop_header55
  br label %is_full_tile-after

x_in_tile-true:                                   ; preds = %tile_loop.loop_body56
  %Arg_0.161 = getelementptr inbounds [8192 x [128 x float]], ptr %arg0, i32 0, i32 %160, i32 %161
  %Arg_0.162 = load float, ptr %Arg_0.161, align 4, !invariant.load !297
  %Arg_1.263 = getelementptr inbounds [128 x [1 x float]], ptr %arg1, i32 0, i32 %161, i32 0
  %Arg_1.264 = load float, ptr %Arg_1.263, align 4, !invariant.load !297
  %multiply.1265 = fmul float %Arg_0.162, %Arg_1.264
  store float %multiply.1265, ptr %reduction_input_address, align 4
  %163 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_14(ptr %163, ptr %reduction_input_address, ptr %return_buffer66)
  %164 = load float, ptr %return_buffer66, align 4
  store float %164, ptr %163, align 4
  %Arg_0.167 = getelementptr inbounds [8192 x [128 x float]], ptr %arg0, i32 0, i32 %160, i32 %161
  %Arg_0.168 = load float, ptr %Arg_0.167, align 4, !invariant.load !297
  %Arg_2.369 = getelementptr inbounds [128 x [1 x float]], ptr %arg2, i32 0, i32 %161, i32 0
  %Arg_2.370 = load float, ptr %Arg_2.369, align 4, !invariant.load !297
  %multiply.2171 = fmul float %Arg_0.168, %Arg_2.370
  store float %multiply.2171, ptr %reduction_input_address1, align 4
  %165 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_22(ptr %165, ptr %reduction_input_address1, ptr %return_buffer72)
  %166 = load float, ptr %return_buffer72, align 4
  store float %166, ptr %165, align 4
  %Arg_0.173 = getelementptr inbounds [8192 x [128 x float]], ptr %arg0, i32 0, i32 %160, i32 %161
  %Arg_0.174 = load float, ptr %Arg_0.173, align 4, !invariant.load !297
  %Arg_3.475 = getelementptr inbounds [128 x [1 x float]], ptr %arg3, i32 0, i32 %161, i32 0
  %Arg_3.476 = load float, ptr %Arg_3.475, align 4, !invariant.load !297
  %multiply.2977 = fmul float %Arg_0.174, %Arg_3.476
  store float %multiply.2977, ptr %reduction_input_address4, align 4
  %167 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  call void @region_3_30(ptr %167, ptr %reduction_input_address4, ptr %return_buffer78)
  %168 = load float, ptr %return_buffer78, align 4
  store float %168, ptr %167, align 4
  %Arg_0.179 = getelementptr inbounds [8192 x [128 x float]], ptr %arg0, i32 0, i32 %160, i32 %161
  %Arg_0.180 = load float, ptr %Arg_0.179, align 4, !invariant.load !297
  %Arg_4.581 = getelementptr inbounds [128 x [1 x float]], ptr %arg4, i32 0, i32 %161, i32 0
  %Arg_4.582 = load float, ptr %Arg_4.581, align 4, !invariant.load !297
  %multiply.3783 = fmul float %Arg_0.180, %Arg_4.582
  store float %multiply.3783, ptr %reduction_input_address7, align 4
  %169 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  call void @region_4_38(ptr %169, ptr %reduction_input_address7, ptr %return_buffer84)
  %170 = load float, ptr %return_buffer84, align 4
  store float %170, ptr %169, align 4
  %Arg_0.185 = getelementptr inbounds [8192 x [128 x float]], ptr %arg0, i32 0, i32 %160, i32 %161
  %Arg_0.186 = load float, ptr %Arg_0.185, align 4, !invariant.load !297
  %Arg_5.687 = getelementptr inbounds [128 x [1 x float]], ptr %arg5, i32 0, i32 %161, i32 0
  %Arg_5.688 = load float, ptr %Arg_5.687, align 4, !invariant.load !297
  %multiply.4589 = fmul float %Arg_0.186, %Arg_5.688
  store float %multiply.4589, ptr %reduction_input_address10, align 4
  %171 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  call void @region_5_46(ptr %171, ptr %reduction_input_address10, ptr %return_buffer90)
  %172 = load float, ptr %return_buffer90, align 4
  store float %172, ptr %171, align 4
  %Arg_0.191 = getelementptr inbounds [8192 x [128 x float]], ptr %arg0, i32 0, i32 %160, i32 %161
  %Arg_0.192 = load float, ptr %Arg_0.191, align 4, !invariant.load !297
  %Arg_6.793 = getelementptr inbounds [128 x [1 x float]], ptr %arg6, i32 0, i32 %161, i32 0
  %Arg_6.794 = load float, ptr %Arg_6.793, align 4, !invariant.load !297
  %multiply.5395 = fmul float %Arg_0.192, %Arg_6.794
  store float %multiply.5395, ptr %reduction_input_address13, align 4
  %173 = getelementptr inbounds float, ptr %partial_reduction_result14, i32 0
  call void @region_6_54(ptr %173, ptr %reduction_input_address13, ptr %return_buffer96)
  %174 = load float, ptr %return_buffer96, align 4
  store float %174, ptr %173, align 4
  %Arg_0.197 = getelementptr inbounds [8192 x [128 x float]], ptr %arg0, i32 0, i32 %160, i32 %161
  %Arg_0.198 = load float, ptr %Arg_0.197, align 4, !invariant.load !297
  %Arg_7.899 = getelementptr inbounds [128 x [1 x float]], ptr %arg7, i32 0, i32 %161, i32 0
  %Arg_7.8100 = load float, ptr %Arg_7.899, align 4, !invariant.load !297
  %multiply.61101 = fmul float %Arg_0.198, %Arg_7.8100
  store float %multiply.61101, ptr %reduction_input_address16, align 4
  %175 = getelementptr inbounds float, ptr %partial_reduction_result17, i32 0
  call void @region_7_62(ptr %175, ptr %reduction_input_address16, ptr %return_buffer102)
  %176 = load float, ptr %return_buffer102, align 4
  store float %176, ptr %175, align 4
  %Arg_0.1103 = getelementptr inbounds [8192 x [128 x float]], ptr %arg0, i32 0, i32 %160, i32 %161
  %Arg_0.1104 = load float, ptr %Arg_0.1103, align 4, !invariant.load !297
  %Arg_8.9105 = getelementptr inbounds [128 x [1 x float]], ptr %arg8, i32 0, i32 %161, i32 0
  %Arg_8.9106 = load float, ptr %Arg_8.9105, align 4, !invariant.load !297
  %multiply.69107 = fmul float %Arg_0.1104, %Arg_8.9106
  store float %multiply.69107, ptr %reduction_input_address19, align 4
  %177 = getelementptr inbounds float, ptr %partial_reduction_result20, i32 0
  call void @region_8_70(ptr %177, ptr %reduction_input_address19, ptr %return_buffer108)
  %178 = load float, ptr %return_buffer108, align 4
  store float %178, ptr %177, align 4
  br label %x_in_tile-after

intra_warp_reduce_write-true:                     ; preds = %y_in_tile.loop_exit
  %179 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache23, i32 0, i32 %13, i32 0, i32 %38
  %180 = addrspacecast ptr addrspace(3) %179 to ptr
  %181 = load float, ptr %current_output, align 4
  store float %181, ptr %180, align 4
  br label %intra_warp_reduce_write-after

inter_warp_reduce-true:                           ; preds = %intra_warp_reduce_write-after
  %182 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache23, i32 0, i32 %13, i32 0, i32 %lane_id
  %183 = addrspacecast ptr addrspace(3) %182 to ptr
  store float %region_0_76_constant_13, ptr %initial_value_addr, align 4
  %184 = icmp ult i32 %thread_id.x, 1
  %185 = select i1 %184, ptr %183, ptr %initial_value_addr
  %186 = icmp eq i32 %thread_id.x, 0
  br i1 %186, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %inter_warp_reduce-true
  br label %inter_warp_reduce-after

reduction_write_output-true:                      ; preds = %inter_warp_reduce-true
  %187 = mul i32 %thread_id.x, 1
  %188 = add i32 %tile_origin.1, %thread_id.y
  %189 = add i32 %tile_origin.2, %187
  %190 = add i32 %189, 0
  %191 = udiv i32 %188, 1
  %output_element_address = getelementptr inbounds [8192 x float], ptr %arg9, i32 0, i32 %191
  %output = load float, ptr %185, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

intra_warp_reduce_write-true139:                  ; preds = %inter_warp_reduce-after
  %192 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache24, i32 0, i32 %13, i32 0, i32 %51
  %193 = addrspacecast ptr addrspace(3) %192 to ptr
  %194 = load float, ptr %current_output123, align 4
  store float %194, ptr %193, align 4
  br label %intra_warp_reduce_write-after140

inter_warp_reduce-true141:                        ; preds = %intra_warp_reduce_write-after140
  %195 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache24, i32 0, i32 %13, i32 0, i32 %lane_id
  %196 = addrspacecast ptr addrspace(3) %195 to ptr
  store float %region_0_76_constant_133, ptr %initial_value_addr143, align 4
  %197 = icmp ult i32 %thread_id.x, 1
  %198 = select i1 %197, ptr %196, ptr %initial_value_addr143
  %199 = icmp eq i32 %thread_id.x, 0
  br i1 %199, label %reduction_write_output-true144, label %reduction_write_output-after145

reduction_write_output-after145:                  ; preds = %reduction_write_output-true144, %inter_warp_reduce-true141
  br label %inter_warp_reduce-after142

reduction_write_output-true144:                   ; preds = %inter_warp_reduce-true141
  %200 = mul i32 %thread_id.x, 1
  %201 = add i32 %tile_origin.1, %thread_id.y
  %202 = add i32 %tile_origin.2, %200
  %203 = add i32 %202, 0
  %204 = udiv i32 %201, 1
  %output_element_address146 = getelementptr inbounds [8192 x float], ptr %arg10, i32 0, i32 %204
  %output147 = load float, ptr %198, align 4
  store float %output147, ptr %output_element_address146, align 4
  br label %reduction_write_output-after145

intra_warp_reduce_write-true164:                  ; preds = %inter_warp_reduce-after142
  %205 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache25, i32 0, i32 %13, i32 0, i32 %64
  %206 = addrspacecast ptr addrspace(3) %205 to ptr
  %207 = load float, ptr %current_output148, align 4
  store float %207, ptr %206, align 4
  br label %intra_warp_reduce_write-after165

inter_warp_reduce-true166:                        ; preds = %intra_warp_reduce_write-after165
  %208 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache25, i32 0, i32 %13, i32 0, i32 %lane_id
  %209 = addrspacecast ptr addrspace(3) %208 to ptr
  store float %region_0_76_constant_136, ptr %initial_value_addr168, align 4
  %210 = icmp ult i32 %thread_id.x, 1
  %211 = select i1 %210, ptr %209, ptr %initial_value_addr168
  %212 = icmp eq i32 %thread_id.x, 0
  br i1 %212, label %reduction_write_output-true169, label %reduction_write_output-after170

reduction_write_output-after170:                  ; preds = %reduction_write_output-true169, %inter_warp_reduce-true166
  br label %inter_warp_reduce-after167

reduction_write_output-true169:                   ; preds = %inter_warp_reduce-true166
  %213 = mul i32 %thread_id.x, 1
  %214 = add i32 %tile_origin.1, %thread_id.y
  %215 = add i32 %tile_origin.2, %213
  %216 = add i32 %215, 0
  %217 = udiv i32 %214, 1
  %output_element_address171 = getelementptr inbounds [8192 x float], ptr %arg11, i32 0, i32 %217
  %output172 = load float, ptr %211, align 4
  store float %output172, ptr %output_element_address171, align 4
  br label %reduction_write_output-after170

intra_warp_reduce_write-true189:                  ; preds = %inter_warp_reduce-after167
  %218 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache26, i32 0, i32 %13, i32 0, i32 %77
  %219 = addrspacecast ptr addrspace(3) %218 to ptr
  %220 = load float, ptr %current_output173, align 4
  store float %220, ptr %219, align 4
  br label %intra_warp_reduce_write-after190

inter_warp_reduce-true191:                        ; preds = %intra_warp_reduce_write-after190
  %221 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache26, i32 0, i32 %13, i32 0, i32 %lane_id
  %222 = addrspacecast ptr addrspace(3) %221 to ptr
  store float %region_0_76_constant_139, ptr %initial_value_addr193, align 4
  %223 = icmp ult i32 %thread_id.x, 1
  %224 = select i1 %223, ptr %222, ptr %initial_value_addr193
  %225 = icmp eq i32 %thread_id.x, 0
  br i1 %225, label %reduction_write_output-true194, label %reduction_write_output-after195

reduction_write_output-after195:                  ; preds = %reduction_write_output-true194, %inter_warp_reduce-true191
  br label %inter_warp_reduce-after192

reduction_write_output-true194:                   ; preds = %inter_warp_reduce-true191
  %226 = mul i32 %thread_id.x, 1
  %227 = add i32 %tile_origin.1, %thread_id.y
  %228 = add i32 %tile_origin.2, %226
  %229 = add i32 %228, 0
  %230 = udiv i32 %227, 1
  %output_element_address196 = getelementptr inbounds [8192 x float], ptr %arg12, i32 0, i32 %230
  %output197 = load float, ptr %224, align 4
  store float %output197, ptr %output_element_address196, align 4
  br label %reduction_write_output-after195

intra_warp_reduce_write-true214:                  ; preds = %inter_warp_reduce-after192
  %231 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache27, i32 0, i32 %13, i32 0, i32 %90
  %232 = addrspacecast ptr addrspace(3) %231 to ptr
  %233 = load float, ptr %current_output198, align 4
  store float %233, ptr %232, align 4
  br label %intra_warp_reduce_write-after215

inter_warp_reduce-true216:                        ; preds = %intra_warp_reduce_write-after215
  %234 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache27, i32 0, i32 %13, i32 0, i32 %lane_id
  %235 = addrspacecast ptr addrspace(3) %234 to ptr
  store float %region_0_76_constant_1312, ptr %initial_value_addr218, align 4
  %236 = icmp ult i32 %thread_id.x, 1
  %237 = select i1 %236, ptr %235, ptr %initial_value_addr218
  %238 = icmp eq i32 %thread_id.x, 0
  br i1 %238, label %reduction_write_output-true219, label %reduction_write_output-after220

reduction_write_output-after220:                  ; preds = %reduction_write_output-true219, %inter_warp_reduce-true216
  br label %inter_warp_reduce-after217

reduction_write_output-true219:                   ; preds = %inter_warp_reduce-true216
  %239 = mul i32 %thread_id.x, 1
  %240 = add i32 %tile_origin.1, %thread_id.y
  %241 = add i32 %tile_origin.2, %239
  %242 = add i32 %241, 0
  %243 = udiv i32 %240, 1
  %output_element_address221 = getelementptr inbounds [8192 x float], ptr %arg13, i32 0, i32 %243
  %output222 = load float, ptr %237, align 4
  store float %output222, ptr %output_element_address221, align 4
  br label %reduction_write_output-after220

intra_warp_reduce_write-true239:                  ; preds = %inter_warp_reduce-after217
  %244 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache28, i32 0, i32 %13, i32 0, i32 %103
  %245 = addrspacecast ptr addrspace(3) %244 to ptr
  %246 = load float, ptr %current_output223, align 4
  store float %246, ptr %245, align 4
  br label %intra_warp_reduce_write-after240

inter_warp_reduce-true241:                        ; preds = %intra_warp_reduce_write-after240
  %247 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache28, i32 0, i32 %13, i32 0, i32 %lane_id
  %248 = addrspacecast ptr addrspace(3) %247 to ptr
  store float %region_0_76_constant_1315, ptr %initial_value_addr243, align 4
  %249 = icmp ult i32 %thread_id.x, 1
  %250 = select i1 %249, ptr %248, ptr %initial_value_addr243
  %251 = icmp eq i32 %thread_id.x, 0
  br i1 %251, label %reduction_write_output-true244, label %reduction_write_output-after245

reduction_write_output-after245:                  ; preds = %reduction_write_output-true244, %inter_warp_reduce-true241
  br label %inter_warp_reduce-after242

reduction_write_output-true244:                   ; preds = %inter_warp_reduce-true241
  %252 = mul i32 %thread_id.x, 1
  %253 = add i32 %tile_origin.1, %thread_id.y
  %254 = add i32 %tile_origin.2, %252
  %255 = add i32 %254, 0
  %256 = udiv i32 %253, 1
  %output_element_address246 = getelementptr inbounds [8192 x float], ptr %arg14, i32 0, i32 %256
  %output247 = load float, ptr %250, align 4
  store float %output247, ptr %output_element_address246, align 4
  br label %reduction_write_output-after245

intra_warp_reduce_write-true264:                  ; preds = %inter_warp_reduce-after242
  %257 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache29, i32 0, i32 %13, i32 0, i32 %116
  %258 = addrspacecast ptr addrspace(3) %257 to ptr
  %259 = load float, ptr %current_output248, align 4
  store float %259, ptr %258, align 4
  br label %intra_warp_reduce_write-after265

inter_warp_reduce-true266:                        ; preds = %intra_warp_reduce_write-after265
  %260 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache29, i32 0, i32 %13, i32 0, i32 %lane_id
  %261 = addrspacecast ptr addrspace(3) %260 to ptr
  store float %region_0_76_constant_1318, ptr %initial_value_addr268, align 4
  %262 = icmp ult i32 %thread_id.x, 1
  %263 = select i1 %262, ptr %261, ptr %initial_value_addr268
  %264 = icmp eq i32 %thread_id.x, 0
  br i1 %264, label %reduction_write_output-true269, label %reduction_write_output-after270

reduction_write_output-after270:                  ; preds = %reduction_write_output-true269, %inter_warp_reduce-true266
  br label %inter_warp_reduce-after267

reduction_write_output-true269:                   ; preds = %inter_warp_reduce-true266
  %265 = mul i32 %thread_id.x, 1
  %266 = add i32 %tile_origin.1, %thread_id.y
  %267 = add i32 %tile_origin.2, %265
  %268 = add i32 %267, 0
  %269 = udiv i32 %266, 1
  %output_element_address271 = getelementptr inbounds [8192 x float], ptr %arg15, i32 0, i32 %269
  %output272 = load float, ptr %263, align 4
  store float %output272, ptr %output_element_address271, align 4
  br label %reduction_write_output-after270

intra_warp_reduce_write-true289:                  ; preds = %inter_warp_reduce-after267
  %270 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache30, i32 0, i32 %13, i32 0, i32 %129
  %271 = addrspacecast ptr addrspace(3) %270 to ptr
  %272 = load float, ptr %current_output273, align 4
  store float %272, ptr %271, align 4
  br label %intra_warp_reduce_write-after290

inter_warp_reduce-true291:                        ; preds = %intra_warp_reduce_write-after290
  %273 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache30, i32 0, i32 %13, i32 0, i32 %lane_id
  %274 = addrspacecast ptr addrspace(3) %273 to ptr
  store float %region_0_76_constant_1321, ptr %initial_value_addr293, align 4
  %275 = icmp ult i32 %thread_id.x, 1
  %276 = select i1 %275, ptr %274, ptr %initial_value_addr293
  %277 = icmp eq i32 %thread_id.x, 0
  br i1 %277, label %reduction_write_output-true294, label %reduction_write_output-after295

reduction_write_output-after295:                  ; preds = %reduction_write_output-true294, %inter_warp_reduce-true291
  br label %inter_warp_reduce-after292

reduction_write_output-true294:                   ; preds = %inter_warp_reduce-true291
  %278 = mul i32 %thread_id.x, 1
  %279 = add i32 %tile_origin.1, %thread_id.y
  %280 = add i32 %tile_origin.2, %278
  %281 = add i32 %280, 0
  %282 = udiv i32 %279, 1
  %output_element_address296 = getelementptr inbounds [8192 x float], ptr %arg16, i32 0, i32 %282
  %output297 = load float, ptr %276, align 4
  store float %output297, ptr %output_element_address296, align 4
  br label %reduction_write_output-after295
}

define internal void @region_1_14(ptr dereferenceable(4) %Arg_0.15.typed, ptr dereferenceable(4) %Arg_1.16.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.17.typed = alloca float, align 4
  %Arg_0.15 = load float, ptr %Arg_0.15.typed, align 4
  %Arg_1.16 = load float, ptr %Arg_1.16.typed, align 4
  %add.17 = fadd float %Arg_0.15, %Arg_1.16
  store float %add.17, ptr %add.17.typed, align 4
  %load_ret_value = load float, ptr %add.17.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_22(ptr dereferenceable(4) %Arg_0.23.typed, ptr dereferenceable(4) %Arg_1.24.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.25.typed = alloca float, align 4
  %Arg_0.23 = load float, ptr %Arg_0.23.typed, align 4
  %Arg_1.24 = load float, ptr %Arg_1.24.typed, align 4
  %add.25 = fadd float %Arg_0.23, %Arg_1.24
  store float %add.25, ptr %add.25.typed, align 4
  %load_ret_value = load float, ptr %add.25.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_3_30(ptr dereferenceable(4) %Arg_0.31.typed, ptr dereferenceable(4) %Arg_1.32.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.33.typed = alloca float, align 4
  %Arg_0.31 = load float, ptr %Arg_0.31.typed, align 4
  %Arg_1.32 = load float, ptr %Arg_1.32.typed, align 4
  %add.33 = fadd float %Arg_0.31, %Arg_1.32
  store float %add.33, ptr %add.33.typed, align 4
  %load_ret_value = load float, ptr %add.33.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_4_38(ptr dereferenceable(4) %Arg_0.39.typed, ptr dereferenceable(4) %Arg_1.40.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.41.typed = alloca float, align 4
  %Arg_0.39 = load float, ptr %Arg_0.39.typed, align 4
  %Arg_1.40 = load float, ptr %Arg_1.40.typed, align 4
  %add.41 = fadd float %Arg_0.39, %Arg_1.40
  store float %add.41, ptr %add.41.typed, align 4
  %load_ret_value = load float, ptr %add.41.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_5_46(ptr dereferenceable(4) %Arg_0.47.typed, ptr dereferenceable(4) %Arg_1.48.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.49.typed = alloca float, align 4
  %Arg_0.47 = load float, ptr %Arg_0.47.typed, align 4
  %Arg_1.48 = load float, ptr %Arg_1.48.typed, align 4
  %add.49 = fadd float %Arg_0.47, %Arg_1.48
  store float %add.49, ptr %add.49.typed, align 4
  %load_ret_value = load float, ptr %add.49.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_6_54(ptr dereferenceable(4) %Arg_0.55.typed, ptr dereferenceable(4) %Arg_1.56.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.57.typed = alloca float, align 4
  %Arg_0.55 = load float, ptr %Arg_0.55.typed, align 4
  %Arg_1.56 = load float, ptr %Arg_1.56.typed, align 4
  %add.57 = fadd float %Arg_0.55, %Arg_1.56
  store float %add.57, ptr %add.57.typed, align 4
  %load_ret_value = load float, ptr %add.57.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_7_62(ptr dereferenceable(4) %Arg_0.63.typed, ptr dereferenceable(4) %Arg_1.64.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.65.typed = alloca float, align 4
  %Arg_0.63 = load float, ptr %Arg_0.63.typed, align 4
  %Arg_1.64 = load float, ptr %Arg_1.64.typed, align 4
  %add.65 = fadd float %Arg_0.63, %Arg_1.64
  store float %add.65, ptr %add.65.typed, align 4
  %load_ret_value = load float, ptr %add.65.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_8_70(ptr dereferenceable(4) %Arg_0.71.typed, ptr dereferenceable(4) %Arg_1.72.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.73.typed = alloca float, align 4
  %Arg_0.71 = load float, ptr %Arg_0.71.typed, align 4
  %Arg_1.72 = load float, ptr %Arg_1.72.typed, align 4
  %add.73 = fadd float %Arg_0.71, %Arg_1.72
  store float %add.73, ptr %add.73.typed, align 4
  %load_ret_value = load float, ptr %add.73.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_461(ptr noalias align 16 dereferenceable(4) %arg0, ptr noalias align 128 dereferenceable(32768) %arg1, ptr noalias align 128 dereferenceable(32768) %arg2, ptr noalias align 128 dereferenceable(32768) %arg3) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !319
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 8192
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = icmp ult i32 %linear_index, 8192
  br i1 %4, label %fusion_461.in_bounds-true, label %fusion_461.in_bounds-after

fusion_461.in_bounds-after:                       ; preds = %fusion_461.in_bounds-true, %entry
  ret void

fusion_461.in_bounds-true:                        ; preds = %entry
  %region_0_14_constant_4 = load float, ptr @35, align 4
  %5 = getelementptr inbounds float, ptr %arg1, i32 %linear_index
  %6 = load float, ptr %5, align 4, !invariant.load !297
  %7 = getelementptr inbounds float, ptr %arg2, i32 %linear_index
  %8 = load float, ptr %7, align 4, !invariant.load !297
  %add.6 = fadd float %6, %8
  %9 = getelementptr inbounds [1 x float], ptr %arg0, i32 0, i32 0
  %10 = load float, ptr %9, align 4, !invariant.load !297
  %add.9 = fadd float %add.6, %10
  %11 = fneg float %add.9
  %12 = call float @__nv_expf(float %11)
  %add.12 = fadd float %region_0_14_constant_4, %12
  %divide.13 = fdiv float %region_0_14_constant_4, %add.12
  %13 = getelementptr inbounds float, ptr %arg3, i32 %linear_index
  store float %divide.13, ptr %13, align 4
  br label %fusion_461.in_bounds-after
}

define void @slice_124(ptr noalias align 128 dereferenceable(25165824) %arg0, ptr noalias align 128 dereferenceable(4194304) %arg1) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !345
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 262144
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 128
  %5 = udiv i32 %linear_index_base, 128
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 128
  %8 = udiv i32 %linear_index1, 128
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 128
  %11 = udiv i32 %linear_index2, 128
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 128
  %14 = udiv i32 %linear_index3, 128
  %15 = icmp ult i32 %linear_index_base, 1048576
  br i1 %15, label %slice_124.in_bounds-true, label %slice_124.in_bounds-after

slice_124.in_bounds-after:                        ; preds = %slice_124.in_bounds-true, %entry
  ret void

slice_124.in_bounds-true:                         ; preds = %entry
  %16 = add i32 %5, 0
  %17 = add i32 %4, 384
  %18 = getelementptr inbounds [8192 x [768 x float]], ptr %arg0, i32 0, i32 %16, i32 %17
  %19 = load float, ptr %18, align 4, !invariant.load !297
  %20 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  store float %19, ptr %20, align 4
  %21 = add i32 %8, 0
  %22 = add i32 %7, 384
  %23 = getelementptr inbounds [8192 x [768 x float]], ptr %arg0, i32 0, i32 %21, i32 %22
  %24 = load float, ptr %23, align 4, !invariant.load !297
  %25 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  store float %24, ptr %25, align 4
  %26 = add i32 %11, 0
  %27 = add i32 %10, 384
  %28 = getelementptr inbounds [8192 x [768 x float]], ptr %arg0, i32 0, i32 %26, i32 %27
  %29 = load float, ptr %28, align 4, !invariant.load !297
  %30 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  store float %29, ptr %30, align 4
  %31 = add i32 %14, 0
  %32 = add i32 %13, 384
  %33 = getelementptr inbounds [8192 x [768 x float]], ptr %arg0, i32 0, i32 %31, i32 %32
  %34 = load float, ptr %33, align 4, !invariant.load !297
  %35 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  store float %34, ptr %35, align 4
  br label %slice_124.in_bounds-after
}

define void @slice_122(ptr noalias align 128 dereferenceable(25165824) %arg0, ptr noalias align 128 dereferenceable(4194304) %arg1) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !345
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 262144
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 128
  %5 = udiv i32 %linear_index_base, 128
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 128
  %8 = udiv i32 %linear_index1, 128
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 128
  %11 = udiv i32 %linear_index2, 128
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 128
  %14 = udiv i32 %linear_index3, 128
  %15 = icmp ult i32 %linear_index_base, 1048576
  br i1 %15, label %slice_122.in_bounds-true, label %slice_122.in_bounds-after

slice_122.in_bounds-after:                        ; preds = %slice_122.in_bounds-true, %entry
  ret void

slice_122.in_bounds-true:                         ; preds = %entry
  %16 = add i32 %5, 0
  %17 = add i32 %4, 256
  %18 = getelementptr inbounds [8192 x [768 x float]], ptr %arg0, i32 0, i32 %16, i32 %17
  %19 = load float, ptr %18, align 4, !invariant.load !297
  %20 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  store float %19, ptr %20, align 4
  %21 = add i32 %8, 0
  %22 = add i32 %7, 256
  %23 = getelementptr inbounds [8192 x [768 x float]], ptr %arg0, i32 0, i32 %21, i32 %22
  %24 = load float, ptr %23, align 4, !invariant.load !297
  %25 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  store float %24, ptr %25, align 4
  %26 = add i32 %11, 0
  %27 = add i32 %10, 256
  %28 = getelementptr inbounds [8192 x [768 x float]], ptr %arg0, i32 0, i32 %26, i32 %27
  %29 = load float, ptr %28, align 4, !invariant.load !297
  %30 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  store float %29, ptr %30, align 4
  %31 = add i32 %14, 0
  %32 = add i32 %13, 256
  %33 = getelementptr inbounds [8192 x [768 x float]], ptr %arg0, i32 0, i32 %31, i32 %32
  %34 = load float, ptr %33, align 4, !invariant.load !297
  %35 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  store float %34, ptr %35, align 4
  br label %slice_122.in_bounds-after
}

define void @slice_189(ptr noalias align 128 dereferenceable(25165824) %arg0, ptr noalias align 128 dereferenceable(8388608) %arg1) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !366
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 524288
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 256
  %5 = udiv i32 %linear_index_base, 256
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 256
  %8 = udiv i32 %linear_index1, 256
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 256
  %11 = udiv i32 %linear_index2, 256
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 256
  %14 = udiv i32 %linear_index3, 256
  %15 = icmp ult i32 %linear_index_base, 2097152
  br i1 %15, label %slice_189.in_bounds-true, label %slice_189.in_bounds-after

slice_189.in_bounds-after:                        ; preds = %slice_189.in_bounds-true, %entry
  ret void

slice_189.in_bounds-true:                         ; preds = %entry
  %16 = add i32 %5, 0
  %17 = add i32 %4, 512
  %18 = getelementptr inbounds [8192 x [768 x float]], ptr %arg0, i32 0, i32 %16, i32 %17
  %19 = load float, ptr %18, align 4, !invariant.load !297
  %20 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  store float %19, ptr %20, align 4
  %21 = add i32 %8, 0
  %22 = add i32 %7, 512
  %23 = getelementptr inbounds [8192 x [768 x float]], ptr %arg0, i32 0, i32 %21, i32 %22
  %24 = load float, ptr %23, align 4, !invariant.load !297
  %25 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  store float %24, ptr %25, align 4
  %26 = add i32 %11, 0
  %27 = add i32 %10, 512
  %28 = getelementptr inbounds [8192 x [768 x float]], ptr %arg0, i32 0, i32 %26, i32 %27
  %29 = load float, ptr %28, align 4, !invariant.load !297
  %30 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  store float %29, ptr %30, align 4
  %31 = add i32 %14, 0
  %32 = add i32 %13, 512
  %33 = getelementptr inbounds [8192 x [768 x float]], ptr %arg0, i32 0, i32 %31, i32 %32
  %34 = load float, ptr %33, align 4, !invariant.load !297
  %35 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  store float %34, ptr %35, align 4
  br label %slice_189.in_bounds-after
}

define void @slice_120(ptr noalias align 128 dereferenceable(25165824) %arg0, ptr noalias align 128 dereferenceable(8388608) %arg1) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !366
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 524288
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 256
  %5 = udiv i32 %linear_index_base, 256
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 256
  %8 = udiv i32 %linear_index1, 256
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 256
  %11 = udiv i32 %linear_index2, 256
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 256
  %14 = udiv i32 %linear_index3, 256
  %15 = icmp ult i32 %linear_index_base, 2097152
  br i1 %15, label %slice_120.in_bounds-true, label %slice_120.in_bounds-after

slice_120.in_bounds-after:                        ; preds = %slice_120.in_bounds-true, %entry
  ret void

slice_120.in_bounds-true:                         ; preds = %entry
  %16 = add i32 %5, 0
  %17 = add i32 %4, 0
  %18 = getelementptr inbounds [8192 x [768 x float]], ptr %arg0, i32 0, i32 %16, i32 %17
  %19 = load float, ptr %18, align 4, !invariant.load !297
  %20 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  store float %19, ptr %20, align 4
  %21 = add i32 %8, 0
  %22 = add i32 %7, 0
  %23 = getelementptr inbounds [8192 x [768 x float]], ptr %arg0, i32 0, i32 %21, i32 %22
  %24 = load float, ptr %23, align 4, !invariant.load !297
  %25 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  store float %24, ptr %25, align 4
  %26 = add i32 %11, 0
  %27 = add i32 %10, 0
  %28 = getelementptr inbounds [8192 x [768 x float]], ptr %arg0, i32 0, i32 %26, i32 %27
  %29 = load float, ptr %28, align 4, !invariant.load !297
  %30 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  store float %29, ptr %30, align 4
  %31 = add i32 %14, 0
  %32 = add i32 %13, 0
  %33 = getelementptr inbounds [8192 x [768 x float]], ptr %arg0, i32 0, i32 %31, i32 %32
  %34 = load float, ptr %33, align 4, !invariant.load !297
  %35 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  store float %34, ptr %35, align 4
  br label %slice_120.in_bounds-after
}

define void @fusion_650(ptr noalias align 128 dereferenceable(8388608) %arg0, ptr noalias align 128 dereferenceable(25165824) %arg1, ptr noalias align 16 dereferenceable(1024) %arg2, ptr noalias align 128 dereferenceable(8388608) %arg3, ptr noalias align 128 dereferenceable(8388608) %arg4) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !366
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 524288
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 256
  %5 = udiv i32 %linear_index_base, 256
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 256
  %8 = udiv i32 %linear_index1, 256
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 256
  %11 = udiv i32 %linear_index2, 256
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 256
  %14 = udiv i32 %linear_index3, 256
  %15 = icmp ult i32 %linear_index_base, 2097152
  br i1 %15, label %fusion_650.in_bounds-true, label %fusion_650.in_bounds-after

fusion_650.in_bounds-after:                       ; preds = %fusion_650.in_bounds-true, %entry
  ret void

fusion_650.in_bounds-true:                        ; preds = %entry
  %16 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_base
  %17 = load float, ptr %16, align 4
  %18 = add i32 %5, 0
  %19 = add i32 %4, 0
  %20 = getelementptr inbounds [8192 x [768 x float]], ptr %arg1, i32 0, i32 %18, i32 %19
  %21 = load float, ptr %20, align 4, !invariant.load !297
  %add.6 = fadd float %17, %21
  %22 = insertvalue { float, float } undef, float %add.6, 0
  %23 = getelementptr inbounds float, ptr %arg3, i32 %linear_index_base
  %24 = load float, ptr %23, align 4, !invariant.load !297
  %25 = add i32 %5, 0
  %26 = add i32 %4, 512
  %27 = getelementptr inbounds [8192 x [768 x float]], ptr %arg1, i32 0, i32 %25, i32 %26
  %28 = load float, ptr %27, align 4, !invariant.load !297
  %add.8 = fadd float %24, %28
  %29 = getelementptr inbounds [256 x float], ptr %arg2, i32 0, i32 %4
  %30 = load float, ptr %29, align 4, !invariant.load !297
  %add.10 = fadd float %add.8, %30
  %region_0_15_constant_11 = load float, ptr @36, align 4
  %31 = fcmp oge float %add.10, %region_0_15_constant_11
  %32 = fcmp une float %add.10, %add.10
  %33 = or i1 %31, %32
  %maximum.13 = select i1 %33, float %add.10, float %region_0_15_constant_11
  %34 = insertvalue { float, float } %22, float %maximum.13, 1
  %35 = extractvalue { float, float } %34, 0
  %36 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_base
  store float %35, ptr %36, align 4
  %37 = extractvalue { float, float } %34, 1
  %38 = getelementptr inbounds float, ptr %arg4, i32 %linear_index_base
  store float %37, ptr %38, align 4
  %39 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  %40 = load float, ptr %39, align 4
  %41 = add i32 %8, 0
  %42 = add i32 %7, 0
  %43 = getelementptr inbounds [8192 x [768 x float]], ptr %arg1, i32 0, i32 %41, i32 %42
  %44 = load float, ptr %43, align 4, !invariant.load !297
  %add.61 = fadd float %40, %44
  %45 = insertvalue { float, float } undef, float %add.61, 0
  %46 = getelementptr inbounds float, ptr %arg3, i32 %linear_index1
  %47 = load float, ptr %46, align 4, !invariant.load !297
  %48 = add i32 %8, 0
  %49 = add i32 %7, 512
  %50 = getelementptr inbounds [8192 x [768 x float]], ptr %arg1, i32 0, i32 %48, i32 %49
  %51 = load float, ptr %50, align 4, !invariant.load !297
  %add.82 = fadd float %47, %51
  %52 = getelementptr inbounds [256 x float], ptr %arg2, i32 0, i32 %7
  %53 = load float, ptr %52, align 4, !invariant.load !297
  %add.103 = fadd float %add.82, %53
  %region_0_15_constant_114 = load float, ptr @36, align 4
  %54 = fcmp oge float %add.103, %region_0_15_constant_114
  %55 = fcmp une float %add.103, %add.103
  %56 = or i1 %54, %55
  %maximum.135 = select i1 %56, float %add.103, float %region_0_15_constant_114
  %57 = insertvalue { float, float } %45, float %maximum.135, 1
  %58 = extractvalue { float, float } %57, 0
  %59 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  store float %58, ptr %59, align 4
  %60 = extractvalue { float, float } %57, 1
  %61 = getelementptr inbounds float, ptr %arg4, i32 %linear_index1
  store float %60, ptr %61, align 4
  %62 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  %63 = load float, ptr %62, align 4
  %64 = add i32 %11, 0
  %65 = add i32 %10, 0
  %66 = getelementptr inbounds [8192 x [768 x float]], ptr %arg1, i32 0, i32 %64, i32 %65
  %67 = load float, ptr %66, align 4, !invariant.load !297
  %add.66 = fadd float %63, %67
  %68 = insertvalue { float, float } undef, float %add.66, 0
  %69 = getelementptr inbounds float, ptr %arg3, i32 %linear_index2
  %70 = load float, ptr %69, align 4, !invariant.load !297
  %71 = add i32 %11, 0
  %72 = add i32 %10, 512
  %73 = getelementptr inbounds [8192 x [768 x float]], ptr %arg1, i32 0, i32 %71, i32 %72
  %74 = load float, ptr %73, align 4, !invariant.load !297
  %add.87 = fadd float %70, %74
  %75 = getelementptr inbounds [256 x float], ptr %arg2, i32 0, i32 %10
  %76 = load float, ptr %75, align 4, !invariant.load !297
  %add.108 = fadd float %add.87, %76
  %region_0_15_constant_119 = load float, ptr @36, align 4
  %77 = fcmp oge float %add.108, %region_0_15_constant_119
  %78 = fcmp une float %add.108, %add.108
  %79 = or i1 %77, %78
  %maximum.1310 = select i1 %79, float %add.108, float %region_0_15_constant_119
  %80 = insertvalue { float, float } %68, float %maximum.1310, 1
  %81 = extractvalue { float, float } %80, 0
  %82 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  store float %81, ptr %82, align 4
  %83 = extractvalue { float, float } %80, 1
  %84 = getelementptr inbounds float, ptr %arg4, i32 %linear_index2
  store float %83, ptr %84, align 4
  %85 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  %86 = load float, ptr %85, align 4
  %87 = add i32 %14, 0
  %88 = add i32 %13, 0
  %89 = getelementptr inbounds [8192 x [768 x float]], ptr %arg1, i32 0, i32 %87, i32 %88
  %90 = load float, ptr %89, align 4, !invariant.load !297
  %add.611 = fadd float %86, %90
  %91 = insertvalue { float, float } undef, float %add.611, 0
  %92 = getelementptr inbounds float, ptr %arg3, i32 %linear_index3
  %93 = load float, ptr %92, align 4, !invariant.load !297
  %94 = add i32 %14, 0
  %95 = add i32 %13, 512
  %96 = getelementptr inbounds [8192 x [768 x float]], ptr %arg1, i32 0, i32 %94, i32 %95
  %97 = load float, ptr %96, align 4, !invariant.load !297
  %add.812 = fadd float %93, %97
  %98 = getelementptr inbounds [256 x float], ptr %arg2, i32 0, i32 %13
  %99 = load float, ptr %98, align 4, !invariant.load !297
  %add.1013 = fadd float %add.812, %99
  %region_0_15_constant_1114 = load float, ptr @36, align 4
  %100 = fcmp oge float %add.1013, %region_0_15_constant_1114
  %101 = fcmp une float %add.1013, %add.1013
  %102 = or i1 %100, %101
  %maximum.1315 = select i1 %102, float %add.1013, float %region_0_15_constant_1114
  %103 = insertvalue { float, float } %91, float %maximum.1315, 1
  %104 = extractvalue { float, float } %103, 0
  %105 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  store float %104, ptr %105, align 4
  %106 = extractvalue { float, float } %103, 1
  %107 = getelementptr inbounds float, ptr %arg4, i32 %linear_index3
  store float %106, ptr %107, align 4
  br label %fusion_650.in_bounds-after
}

define void @fusion_648(ptr noalias align 16 dereferenceable(512) %arg0, ptr noalias align 128 dereferenceable(4194304) %arg1, ptr noalias align 128 dereferenceable(25165824) %arg2, ptr noalias align 128 dereferenceable(4194304) %arg3) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !345
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 262144
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 128
  %5 = udiv i32 %linear_index_base, 128
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 128
  %8 = udiv i32 %linear_index1, 128
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 128
  %11 = udiv i32 %linear_index2, 128
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 128
  %14 = udiv i32 %linear_index3, 128
  %15 = icmp ult i32 %linear_index_base, 1048576
  br i1 %15, label %fusion_648.in_bounds-true, label %fusion_648.in_bounds-after

fusion_648.in_bounds-after:                       ; preds = %fusion_648.in_bounds-true, %entry
  ret void

fusion_648.in_bounds-true:                        ; preds = %entry
  %16 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  %17 = load float, ptr %16, align 4, !invariant.load !297
  %18 = add i32 %5, 0
  %19 = add i32 %4, 256
  %20 = getelementptr inbounds [8192 x [768 x float]], ptr %arg2, i32 0, i32 %18, i32 %19
  %21 = load float, ptr %20, align 4, !invariant.load !297
  %add.5 = fadd float %17, %21
  %22 = getelementptr inbounds [128 x float], ptr %arg0, i32 0, i32 %4
  %23 = load float, ptr %22, align 4, !invariant.load !297
  %add.7 = fadd float %add.5, %23
  %region_0_11_constant_8 = load float, ptr @37, align 4
  %24 = fcmp oge float %add.7, %region_0_11_constant_8
  %25 = fcmp une float %add.7, %add.7
  %26 = or i1 %24, %25
  %maximum.10 = select i1 %26, float %add.7, float %region_0_11_constant_8
  %27 = getelementptr inbounds float, ptr %arg3, i32 %linear_index_base
  store float %maximum.10, ptr %27, align 4
  %28 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  %29 = load float, ptr %28, align 4, !invariant.load !297
  %30 = add i32 %8, 0
  %31 = add i32 %7, 256
  %32 = getelementptr inbounds [8192 x [768 x float]], ptr %arg2, i32 0, i32 %30, i32 %31
  %33 = load float, ptr %32, align 4, !invariant.load !297
  %add.51 = fadd float %29, %33
  %34 = getelementptr inbounds [128 x float], ptr %arg0, i32 0, i32 %7
  %35 = load float, ptr %34, align 4, !invariant.load !297
  %add.72 = fadd float %add.51, %35
  %region_0_11_constant_83 = load float, ptr @37, align 4
  %36 = fcmp oge float %add.72, %region_0_11_constant_83
  %37 = fcmp une float %add.72, %add.72
  %38 = or i1 %36, %37
  %maximum.104 = select i1 %38, float %add.72, float %region_0_11_constant_83
  %39 = getelementptr inbounds float, ptr %arg3, i32 %linear_index1
  store float %maximum.104, ptr %39, align 4
  %40 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  %41 = load float, ptr %40, align 4, !invariant.load !297
  %42 = add i32 %11, 0
  %43 = add i32 %10, 256
  %44 = getelementptr inbounds [8192 x [768 x float]], ptr %arg2, i32 0, i32 %42, i32 %43
  %45 = load float, ptr %44, align 4, !invariant.load !297
  %add.55 = fadd float %41, %45
  %46 = getelementptr inbounds [128 x float], ptr %arg0, i32 0, i32 %10
  %47 = load float, ptr %46, align 4, !invariant.load !297
  %add.76 = fadd float %add.55, %47
  %region_0_11_constant_87 = load float, ptr @37, align 4
  %48 = fcmp oge float %add.76, %region_0_11_constant_87
  %49 = fcmp une float %add.76, %add.76
  %50 = or i1 %48, %49
  %maximum.108 = select i1 %50, float %add.76, float %region_0_11_constant_87
  %51 = getelementptr inbounds float, ptr %arg3, i32 %linear_index2
  store float %maximum.108, ptr %51, align 4
  %52 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  %53 = load float, ptr %52, align 4, !invariant.load !297
  %54 = add i32 %14, 0
  %55 = add i32 %13, 256
  %56 = getelementptr inbounds [8192 x [768 x float]], ptr %arg2, i32 0, i32 %54, i32 %55
  %57 = load float, ptr %56, align 4, !invariant.load !297
  %add.59 = fadd float %53, %57
  %58 = getelementptr inbounds [128 x float], ptr %arg0, i32 0, i32 %13
  %59 = load float, ptr %58, align 4, !invariant.load !297
  %add.710 = fadd float %add.59, %59
  %region_0_11_constant_811 = load float, ptr @37, align 4
  %60 = fcmp oge float %add.710, %region_0_11_constant_811
  %61 = fcmp une float %add.710, %add.710
  %62 = or i1 %60, %61
  %maximum.1012 = select i1 %62, float %add.710, float %region_0_11_constant_811
  %63 = getelementptr inbounds float, ptr %arg3, i32 %linear_index3
  store float %maximum.1012, ptr %63, align 4
  br label %fusion_648.in_bounds-after
}

define void @fusion_646(ptr noalias align 16 dereferenceable(512) %arg0, ptr noalias align 16 dereferenceable(512) %arg1, ptr noalias align 128 dereferenceable(4194304) %arg2, ptr noalias align 128 dereferenceable(25165824) %arg3, ptr noalias align 128 dereferenceable(32768) %arg4, ptr noalias align 128 dereferenceable(4194304) %arg5) {
entry:
  %initial_value_addr = alloca float, align 4
  %return_buffer42 = alloca float, align 4
  %result_from_other_lane40 = alloca float, align 4
  %return_buffer39 = alloca float, align 4
  %result_from_other_lane37 = alloca float, align 4
  %return_buffer36 = alloca float, align 4
  %result_from_other_lane34 = alloca float, align 4
  %return_buffer33 = alloca float, align 4
  %result_from_other_lane31 = alloca float, align 4
  %return_buffer30 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer28 = alloca float, align 4
  %tile_loop.invar_address11 = alloca i32, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %inter_warp_reduce-after, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_21_constant_9 = load float, ptr @38, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_21_constant_9, ptr %2, align 4
  %3 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !352
  %4 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !368
  %5 = urem i32 %3, 32
  %6 = udiv i32 %3, 32
  %7 = mul i32 %4, 3
  %8 = add i32 %7, %6
  %9 = icmp ult i32 %8, 8192
  br i1 %9, label %10, label %early_return

10:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %5, 32
  %thread_id.y = udiv i32 %5, 32
  %lane_id = urem i32 %5, 32
  %11 = udiv i32 %8, 1
  %12 = urem i32 %11, 1
  %13 = udiv i32 %8, 1
  %14 = urem i32 %13, 8192
  %15 = udiv i32 %8, 8192
  %16 = icmp eq i32 %14, 8191
  %tile_bound = select i1 %16, i32 1, i32 1
  %17 = icmp eq i32 %12, 0
  %tile_bound1 = select i1 %17, i32 128, i32 512
  %tile_origin.0 = mul i32 %15, 1
  %tile_origin.1 = mul i32 %14, 1
  %tile_origin.2 = mul i32 %12, 512
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %is_full_tile-after, %10
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %18 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %18, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 1
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %19 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %20 = icmp eq i32 512, %tile_bound1
  br i1 %20, label %is_full_tile-true, label %is_full_tile-false

is_full_tile-after:                               ; preds = %tile_loop.loop_exit8, %tile_loop.loop_exit
  br label %y_in_tile.loop_header, !llvm.loop !390

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %partial_reduction_result29 = load float, ptr %current_output, align 4
  %21 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result29, i32 16, i32 31)
  store float %21, ptr %result_from_other_lane, align 4
  call void @region_1_15__1(ptr %current_output, ptr %result_from_other_lane, ptr %return_buffer30)
  %22 = load float, ptr %return_buffer30, align 4
  store float %22, ptr %current_output, align 4
  %partial_reduction_result32 = load float, ptr %current_output, align 4
  %23 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result32, i32 8, i32 31)
  store float %23, ptr %result_from_other_lane31, align 4
  call void @region_1_15__1(ptr %current_output, ptr %result_from_other_lane31, ptr %return_buffer33)
  %24 = load float, ptr %return_buffer33, align 4
  store float %24, ptr %current_output, align 4
  %partial_reduction_result35 = load float, ptr %current_output, align 4
  %25 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result35, i32 4, i32 31)
  store float %25, ptr %result_from_other_lane34, align 4
  call void @region_1_15__1(ptr %current_output, ptr %result_from_other_lane34, ptr %return_buffer36)
  %26 = load float, ptr %return_buffer36, align 4
  store float %26, ptr %current_output, align 4
  %partial_reduction_result38 = load float, ptr %current_output, align 4
  %27 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result38, i32 2, i32 31)
  store float %27, ptr %result_from_other_lane37, align 4
  call void @region_1_15__1(ptr %current_output, ptr %result_from_other_lane37, ptr %return_buffer39)
  %28 = load float, ptr %return_buffer39, align 4
  store float %28, ptr %current_output, align 4
  %partial_reduction_result41 = load float, ptr %current_output, align 4
  %29 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result41, i32 1, i32 31)
  store float %29, ptr %result_from_other_lane40, align 4
  call void @region_1_15__1(ptr %current_output, ptr %result_from_other_lane40, ptr %return_buffer42)
  %30 = load float, ptr %return_buffer42, align 4
  store float %30, ptr %current_output, align 4
  %31 = udiv i32 %thread_id.x, 32
  %32 = icmp eq i32 %lane_id, 0
  br i1 %32, label %intra_warp_reduce_write-true, label %intra_warp_reduce_write-after

intra_warp_reduce_write-after:                    ; preds = %intra_warp_reduce_write-true, %y_in_tile.loop_exit
  call void @llvm.nvvm.barrier0()
  %33 = icmp eq i32 %31, 0
  br i1 %33, label %inter_warp_reduce-true, label %inter_warp_reduce-after

inter_warp_reduce-after:                          ; preds = %reduction_write_output-after, %intra_warp_reduce_write-after
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

is_full_tile-true:                                ; preds = %y_in_tile.loop_body
  %34 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %tile_loop.loop_body, %is_full_tile-true
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %35 = icmp uge i32 %tile_loop.indvar, 16
  br i1 %35, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %36 = icmp eq i32 %tile_loop.indvar, 0
  %37 = mul i32 %tile_loop.indvar, 32
  %38 = add i32 %37, 0
  %x_loc = add i32 %38, %34
  %39 = add i32 %tile_origin.1, %y_in_tile.indvar
  %40 = add i32 %tile_origin.2, %x_loc
  %Arg_2.3 = getelementptr inbounds [8192 x [128 x float]], ptr %arg2, i32 0, i32 %39, i32 %40
  %Arg_2.33 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %41 = add i32 %39, 0
  %42 = add i32 %40, 384
  %Arg_3.4 = getelementptr inbounds [8192 x [768 x float]], ptr %arg3, i32 0, i32 %41, i32 %42
  %Arg_3.44 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  %add.6 = fadd float %Arg_2.33, %Arg_3.44
  %Arg_1.2 = getelementptr inbounds [128 x float], ptr %arg1, i32 0, i32 %40
  %Arg_1.25 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %add.8 = fadd float %add.6, %Arg_1.25
  %region_0_21_constant_96 = load float, ptr @38, align 4
  %43 = fcmp oge float %add.8, %region_0_21_constant_96
  %44 = fcmp une float %add.8, %add.8
  %45 = or i1 %43, %44
  %maximum.11 = select i1 %45, float %add.8, float %region_0_21_constant_96
  %Arg_0.1 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %40, i32 0
  %Arg_0.17 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %multiply.14 = fmul float %maximum.11, %Arg_0.17
  store float %multiply.14, ptr %reduction_input_address, align 4
  %46 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_15__1(ptr %46, ptr %reduction_input_address, ptr %return_buffer)
  %47 = load float, ptr %return_buffer, align 4
  store float %47, ptr %46, align 4
  %48 = getelementptr inbounds [8192 x [128 x float]], ptr %arg5, i32 0, i32 %39, i32 %40
  store float %maximum.11, ptr %48, align 4
  br label %tile_loop.loop_header, !llvm.loop !391

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %is_full_tile-after

is_full_tile-false:                               ; preds = %y_in_tile.loop_body
  %49 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address11, align 4
  br label %tile_loop.loop_header9

tile_loop.loop_header9:                           ; preds = %x_in_tile-after, %is_full_tile-false
  %tile_loop.indvar12 = load i32, ptr %tile_loop.invar_address11, align 4
  %50 = icmp uge i32 %tile_loop.indvar12, 16
  br i1 %50, label %tile_loop.loop_exit8, label %tile_loop.loop_body10

tile_loop.loop_body10:                            ; preds = %tile_loop.loop_header9
  %invar.inc13 = add nuw nsw i32 %tile_loop.indvar12, 1
  store i32 %invar.inc13, ptr %tile_loop.invar_address11, align 4
  %51 = icmp eq i32 %tile_loop.indvar12, 0
  %52 = mul i32 %tile_loop.indvar12, 32
  %53 = add i32 %52, 0
  %x_loc14 = add i32 %53, %49
  %54 = add i32 %tile_origin.1, %y_in_tile.indvar
  %55 = add i32 %tile_origin.2, %x_loc14
  %56 = icmp ult i32 %x_loc14, %tile_bound1
  br i1 %56, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body10
  br label %tile_loop.loop_header9, !llvm.loop !392

tile_loop.loop_exit8:                             ; preds = %tile_loop.loop_header9
  br label %is_full_tile-after

x_in_tile-true:                                   ; preds = %tile_loop.loop_body10
  %Arg_2.315 = getelementptr inbounds [8192 x [128 x float]], ptr %arg2, i32 0, i32 %54, i32 %55
  %Arg_2.316 = load float, ptr %Arg_2.315, align 4, !invariant.load !297
  %57 = add i32 %54, 0
  %58 = add i32 %55, 384
  %Arg_3.417 = getelementptr inbounds [8192 x [768 x float]], ptr %arg3, i32 0, i32 %57, i32 %58
  %Arg_3.418 = load float, ptr %Arg_3.417, align 4, !invariant.load !297
  %add.619 = fadd float %Arg_2.316, %Arg_3.418
  %Arg_1.220 = getelementptr inbounds [128 x float], ptr %arg1, i32 0, i32 %55
  %Arg_1.221 = load float, ptr %Arg_1.220, align 4, !invariant.load !297
  %add.822 = fadd float %add.619, %Arg_1.221
  %region_0_21_constant_923 = load float, ptr @38, align 4
  %59 = fcmp oge float %add.822, %region_0_21_constant_923
  %60 = fcmp une float %add.822, %add.822
  %61 = or i1 %59, %60
  %maximum.1124 = select i1 %61, float %add.822, float %region_0_21_constant_923
  %Arg_0.125 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %55, i32 0
  %Arg_0.126 = load float, ptr %Arg_0.125, align 4, !invariant.load !297
  %multiply.1427 = fmul float %maximum.1124, %Arg_0.126
  store float %multiply.1427, ptr %reduction_input_address, align 4
  %62 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_15__1(ptr %62, ptr %reduction_input_address, ptr %return_buffer28)
  %63 = load float, ptr %return_buffer28, align 4
  store float %63, ptr %62, align 4
  %64 = getelementptr inbounds [8192 x [128 x float]], ptr %arg5, i32 0, i32 %54, i32 %55
  store float %maximum.1124, ptr %64, align 4
  br label %x_in_tile-after

intra_warp_reduce_write-true:                     ; preds = %y_in_tile.loop_exit
  %65 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache31, i32 0, i32 %6, i32 0, i32 %31
  %66 = addrspacecast ptr addrspace(3) %65 to ptr
  %67 = load float, ptr %current_output, align 4
  store float %67, ptr %66, align 4
  br label %intra_warp_reduce_write-after

inter_warp_reduce-true:                           ; preds = %intra_warp_reduce_write-after
  %68 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache31, i32 0, i32 %6, i32 0, i32 %lane_id
  %69 = addrspacecast ptr addrspace(3) %68 to ptr
  store float %region_0_21_constant_9, ptr %initial_value_addr, align 4
  %70 = icmp ult i32 %thread_id.x, 1
  %71 = select i1 %70, ptr %69, ptr %initial_value_addr
  %72 = icmp eq i32 %thread_id.x, 0
  br i1 %72, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %inter_warp_reduce-true
  br label %inter_warp_reduce-after

reduction_write_output-true:                      ; preds = %inter_warp_reduce-true
  %73 = mul i32 %thread_id.x, 1
  %74 = add i32 %tile_origin.1, %thread_id.y
  %75 = add i32 %tile_origin.2, %73
  %76 = add i32 %75, 0
  %77 = udiv i32 %74, 1
  %output_element_address = getelementptr inbounds [8192 x float], ptr %arg4, i32 0, i32 %77
  %output = load float, ptr %71, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after
}

define internal void @region_1_15__1(ptr dereferenceable(4) %Arg_0.16.typed, ptr dereferenceable(4) %Arg_1.17.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.18.typed = alloca float, align 4
  %Arg_0.16 = load float, ptr %Arg_0.16.typed, align 4
  %Arg_1.17 = load float, ptr %Arg_1.17.typed, align 4
  %add.18 = fadd float %Arg_0.16, %Arg_1.17
  store float %add.18, ptr %add.18.typed, align 4
  %load_ret_value = load float, ptr %add.18.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @slice_160(ptr noalias align 128 dereferenceable(25165824) %arg0, ptr noalias align 128 dereferenceable(8388608) %arg1) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !366
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 524288
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 256
  %5 = udiv i32 %linear_index_base, 256
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 256
  %8 = udiv i32 %linear_index1, 256
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 256
  %11 = udiv i32 %linear_index2, 256
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 256
  %14 = udiv i32 %linear_index3, 256
  %15 = icmp ult i32 %linear_index_base, 2097152
  br i1 %15, label %slice_160.in_bounds-true, label %slice_160.in_bounds-after

slice_160.in_bounds-after:                        ; preds = %slice_160.in_bounds-true, %entry
  ret void

slice_160.in_bounds-true:                         ; preds = %entry
  %16 = add i32 %5, 0
  %17 = add i32 %4, 256
  %18 = getelementptr inbounds [8192 x [768 x float]], ptr %arg0, i32 0, i32 %16, i32 %17
  %19 = load float, ptr %18, align 4, !invariant.load !297
  %20 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  store float %19, ptr %20, align 4
  %21 = add i32 %8, 0
  %22 = add i32 %7, 256
  %23 = getelementptr inbounds [8192 x [768 x float]], ptr %arg0, i32 0, i32 %21, i32 %22
  %24 = load float, ptr %23, align 4, !invariant.load !297
  %25 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  store float %24, ptr %25, align 4
  %26 = add i32 %11, 0
  %27 = add i32 %10, 256
  %28 = getelementptr inbounds [8192 x [768 x float]], ptr %arg0, i32 0, i32 %26, i32 %27
  %29 = load float, ptr %28, align 4, !invariant.load !297
  %30 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  store float %29, ptr %30, align 4
  %31 = add i32 %14, 0
  %32 = add i32 %13, 256
  %33 = getelementptr inbounds [8192 x [768 x float]], ptr %arg0, i32 0, i32 %31, i32 %32
  %34 = load float, ptr %33, align 4, !invariant.load !297
  %35 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  store float %34, ptr %35, align 4
  br label %slice_160.in_bounds-after
}

define void @fusion_580(ptr noalias align 16 dereferenceable(1024) %arg0, ptr noalias align 128 dereferenceable(8388608) %arg1, ptr noalias align 128 dereferenceable(25165824) %arg2, ptr noalias align 16 dereferenceable(1024) %arg3, ptr noalias align 128 dereferenceable(8388608) %arg4, ptr noalias align 16 dereferenceable(1024) %arg5, ptr noalias align 128 dereferenceable(8388608) %arg6) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !366
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 524288
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 256
  %5 = udiv i32 %linear_index_base, 256
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 256
  %8 = udiv i32 %linear_index1, 256
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 256
  %11 = udiv i32 %linear_index2, 256
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 256
  %14 = udiv i32 %linear_index3, 256
  %15 = icmp ult i32 %linear_index_base, 2097152
  br i1 %15, label %fusion_580.in_bounds-true, label %fusion_580.in_bounds-after

fusion_580.in_bounds-after:                       ; preds = %fusion_580.in_bounds-true, %entry
  ret void

fusion_580.in_bounds-true:                        ; preds = %entry
  %16 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  %17 = load float, ptr %16, align 4
  %18 = add i32 %5, 0
  %19 = add i32 %4, 256
  %20 = getelementptr inbounds [8192 x [768 x float]], ptr %arg2, i32 0, i32 %18, i32 %19
  %21 = load float, ptr %20, align 4, !invariant.load !297
  %add.9 = fadd float %17, %21
  %22 = getelementptr inbounds [256 x float], ptr %arg0, i32 0, i32 %4
  %23 = load float, ptr %22, align 4, !invariant.load !297
  %add.11 = fadd float %add.9, %23
  %region_0_26_constant_12 = load float, ptr @39, align 4
  %24 = fcmp oge float %add.11, %region_0_26_constant_12
  %25 = fcmp une float %add.11, %add.11
  %26 = or i1 %24, %25
  %maximum.14 = select i1 %26, float %add.11, float %region_0_26_constant_12
  %27 = insertvalue { float, float, float } undef, float %maximum.14, 0
  %28 = getelementptr inbounds float, ptr %arg4, i32 %linear_index_base
  %29 = load float, ptr %28, align 4
  %30 = add i32 %5, 0
  %31 = add i32 %4, 0
  %32 = getelementptr inbounds [8192 x [768 x float]], ptr %arg2, i32 0, i32 %30, i32 %31
  %33 = load float, ptr %32, align 4, !invariant.load !297
  %add.16 = fadd float %29, %33
  %34 = getelementptr inbounds [256 x float], ptr %arg3, i32 0, i32 %4
  %35 = load float, ptr %34, align 4, !invariant.load !297
  %add.18 = fadd float %add.16, %35
  %36 = fcmp oge float %add.18, %region_0_26_constant_12
  %37 = fcmp une float %add.18, %add.18
  %38 = or i1 %36, %37
  %maximum.19 = select i1 %38, float %add.18, float %region_0_26_constant_12
  %39 = insertvalue { float, float, float } %27, float %maximum.19, 1
  %40 = getelementptr inbounds float, ptr %arg6, i32 %linear_index_base
  %41 = load float, ptr %40, align 4
  %42 = add i32 %5, 0
  %43 = add i32 %4, 512
  %44 = getelementptr inbounds [8192 x [768 x float]], ptr %arg2, i32 0, i32 %42, i32 %43
  %45 = load float, ptr %44, align 4, !invariant.load !297
  %add.21 = fadd float %41, %45
  %46 = getelementptr inbounds [256 x float], ptr %arg5, i32 0, i32 %4
  %47 = load float, ptr %46, align 4, !invariant.load !297
  %add.23 = fadd float %add.21, %47
  %48 = fcmp oge float %add.23, %region_0_26_constant_12
  %49 = fcmp une float %add.23, %add.23
  %50 = or i1 %48, %49
  %maximum.24 = select i1 %50, float %add.23, float %region_0_26_constant_12
  %51 = insertvalue { float, float, float } %39, float %maximum.24, 2
  %52 = extractvalue { float, float, float } %51, 0
  %53 = getelementptr inbounds float, ptr %arg6, i32 %linear_index_base
  store float %52, ptr %53, align 4
  %54 = extractvalue { float, float, float } %51, 1
  %55 = getelementptr inbounds float, ptr %arg4, i32 %linear_index_base
  store float %54, ptr %55, align 4
  %56 = extractvalue { float, float, float } %51, 2
  %57 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  store float %56, ptr %57, align 4
  %58 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  %59 = load float, ptr %58, align 4
  %60 = add i32 %8, 0
  %61 = add i32 %7, 256
  %62 = getelementptr inbounds [8192 x [768 x float]], ptr %arg2, i32 0, i32 %60, i32 %61
  %63 = load float, ptr %62, align 4, !invariant.load !297
  %add.91 = fadd float %59, %63
  %64 = getelementptr inbounds [256 x float], ptr %arg0, i32 0, i32 %7
  %65 = load float, ptr %64, align 4, !invariant.load !297
  %add.112 = fadd float %add.91, %65
  %region_0_26_constant_123 = load float, ptr @39, align 4
  %66 = fcmp oge float %add.112, %region_0_26_constant_123
  %67 = fcmp une float %add.112, %add.112
  %68 = or i1 %66, %67
  %maximum.144 = select i1 %68, float %add.112, float %region_0_26_constant_123
  %69 = insertvalue { float, float, float } undef, float %maximum.144, 0
  %70 = getelementptr inbounds float, ptr %arg4, i32 %linear_index1
  %71 = load float, ptr %70, align 4
  %72 = add i32 %8, 0
  %73 = add i32 %7, 0
  %74 = getelementptr inbounds [8192 x [768 x float]], ptr %arg2, i32 0, i32 %72, i32 %73
  %75 = load float, ptr %74, align 4, !invariant.load !297
  %add.165 = fadd float %71, %75
  %76 = getelementptr inbounds [256 x float], ptr %arg3, i32 0, i32 %7
  %77 = load float, ptr %76, align 4, !invariant.load !297
  %add.186 = fadd float %add.165, %77
  %78 = fcmp oge float %add.186, %region_0_26_constant_123
  %79 = fcmp une float %add.186, %add.186
  %80 = or i1 %78, %79
  %maximum.197 = select i1 %80, float %add.186, float %region_0_26_constant_123
  %81 = insertvalue { float, float, float } %69, float %maximum.197, 1
  %82 = getelementptr inbounds float, ptr %arg6, i32 %linear_index1
  %83 = load float, ptr %82, align 4
  %84 = add i32 %8, 0
  %85 = add i32 %7, 512
  %86 = getelementptr inbounds [8192 x [768 x float]], ptr %arg2, i32 0, i32 %84, i32 %85
  %87 = load float, ptr %86, align 4, !invariant.load !297
  %add.218 = fadd float %83, %87
  %88 = getelementptr inbounds [256 x float], ptr %arg5, i32 0, i32 %7
  %89 = load float, ptr %88, align 4, !invariant.load !297
  %add.239 = fadd float %add.218, %89
  %90 = fcmp oge float %add.239, %region_0_26_constant_123
  %91 = fcmp une float %add.239, %add.239
  %92 = or i1 %90, %91
  %maximum.2410 = select i1 %92, float %add.239, float %region_0_26_constant_123
  %93 = insertvalue { float, float, float } %81, float %maximum.2410, 2
  %94 = extractvalue { float, float, float } %93, 0
  %95 = getelementptr inbounds float, ptr %arg6, i32 %linear_index1
  store float %94, ptr %95, align 4
  %96 = extractvalue { float, float, float } %93, 1
  %97 = getelementptr inbounds float, ptr %arg4, i32 %linear_index1
  store float %96, ptr %97, align 4
  %98 = extractvalue { float, float, float } %93, 2
  %99 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  store float %98, ptr %99, align 4
  %100 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  %101 = load float, ptr %100, align 4
  %102 = add i32 %11, 0
  %103 = add i32 %10, 256
  %104 = getelementptr inbounds [8192 x [768 x float]], ptr %arg2, i32 0, i32 %102, i32 %103
  %105 = load float, ptr %104, align 4, !invariant.load !297
  %add.911 = fadd float %101, %105
  %106 = getelementptr inbounds [256 x float], ptr %arg0, i32 0, i32 %10
  %107 = load float, ptr %106, align 4, !invariant.load !297
  %add.1112 = fadd float %add.911, %107
  %region_0_26_constant_1213 = load float, ptr @39, align 4
  %108 = fcmp oge float %add.1112, %region_0_26_constant_1213
  %109 = fcmp une float %add.1112, %add.1112
  %110 = or i1 %108, %109
  %maximum.1414 = select i1 %110, float %add.1112, float %region_0_26_constant_1213
  %111 = insertvalue { float, float, float } undef, float %maximum.1414, 0
  %112 = getelementptr inbounds float, ptr %arg4, i32 %linear_index2
  %113 = load float, ptr %112, align 4
  %114 = add i32 %11, 0
  %115 = add i32 %10, 0
  %116 = getelementptr inbounds [8192 x [768 x float]], ptr %arg2, i32 0, i32 %114, i32 %115
  %117 = load float, ptr %116, align 4, !invariant.load !297
  %add.1615 = fadd float %113, %117
  %118 = getelementptr inbounds [256 x float], ptr %arg3, i32 0, i32 %10
  %119 = load float, ptr %118, align 4, !invariant.load !297
  %add.1816 = fadd float %add.1615, %119
  %120 = fcmp oge float %add.1816, %region_0_26_constant_1213
  %121 = fcmp une float %add.1816, %add.1816
  %122 = or i1 %120, %121
  %maximum.1917 = select i1 %122, float %add.1816, float %region_0_26_constant_1213
  %123 = insertvalue { float, float, float } %111, float %maximum.1917, 1
  %124 = getelementptr inbounds float, ptr %arg6, i32 %linear_index2
  %125 = load float, ptr %124, align 4
  %126 = add i32 %11, 0
  %127 = add i32 %10, 512
  %128 = getelementptr inbounds [8192 x [768 x float]], ptr %arg2, i32 0, i32 %126, i32 %127
  %129 = load float, ptr %128, align 4, !invariant.load !297
  %add.2118 = fadd float %125, %129
  %130 = getelementptr inbounds [256 x float], ptr %arg5, i32 0, i32 %10
  %131 = load float, ptr %130, align 4, !invariant.load !297
  %add.2319 = fadd float %add.2118, %131
  %132 = fcmp oge float %add.2319, %region_0_26_constant_1213
  %133 = fcmp une float %add.2319, %add.2319
  %134 = or i1 %132, %133
  %maximum.2420 = select i1 %134, float %add.2319, float %region_0_26_constant_1213
  %135 = insertvalue { float, float, float } %123, float %maximum.2420, 2
  %136 = extractvalue { float, float, float } %135, 0
  %137 = getelementptr inbounds float, ptr %arg6, i32 %linear_index2
  store float %136, ptr %137, align 4
  %138 = extractvalue { float, float, float } %135, 1
  %139 = getelementptr inbounds float, ptr %arg4, i32 %linear_index2
  store float %138, ptr %139, align 4
  %140 = extractvalue { float, float, float } %135, 2
  %141 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  store float %140, ptr %141, align 4
  %142 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  %143 = load float, ptr %142, align 4
  %144 = add i32 %14, 0
  %145 = add i32 %13, 256
  %146 = getelementptr inbounds [8192 x [768 x float]], ptr %arg2, i32 0, i32 %144, i32 %145
  %147 = load float, ptr %146, align 4, !invariant.load !297
  %add.921 = fadd float %143, %147
  %148 = getelementptr inbounds [256 x float], ptr %arg0, i32 0, i32 %13
  %149 = load float, ptr %148, align 4, !invariant.load !297
  %add.1122 = fadd float %add.921, %149
  %region_0_26_constant_1223 = load float, ptr @39, align 4
  %150 = fcmp oge float %add.1122, %region_0_26_constant_1223
  %151 = fcmp une float %add.1122, %add.1122
  %152 = or i1 %150, %151
  %maximum.1424 = select i1 %152, float %add.1122, float %region_0_26_constant_1223
  %153 = insertvalue { float, float, float } undef, float %maximum.1424, 0
  %154 = getelementptr inbounds float, ptr %arg4, i32 %linear_index3
  %155 = load float, ptr %154, align 4
  %156 = add i32 %14, 0
  %157 = add i32 %13, 0
  %158 = getelementptr inbounds [8192 x [768 x float]], ptr %arg2, i32 0, i32 %156, i32 %157
  %159 = load float, ptr %158, align 4, !invariant.load !297
  %add.1625 = fadd float %155, %159
  %160 = getelementptr inbounds [256 x float], ptr %arg3, i32 0, i32 %13
  %161 = load float, ptr %160, align 4, !invariant.load !297
  %add.1826 = fadd float %add.1625, %161
  %162 = fcmp oge float %add.1826, %region_0_26_constant_1223
  %163 = fcmp une float %add.1826, %add.1826
  %164 = or i1 %162, %163
  %maximum.1927 = select i1 %164, float %add.1826, float %region_0_26_constant_1223
  %165 = insertvalue { float, float, float } %153, float %maximum.1927, 1
  %166 = getelementptr inbounds float, ptr %arg6, i32 %linear_index3
  %167 = load float, ptr %166, align 4
  %168 = add i32 %14, 0
  %169 = add i32 %13, 512
  %170 = getelementptr inbounds [8192 x [768 x float]], ptr %arg2, i32 0, i32 %168, i32 %169
  %171 = load float, ptr %170, align 4, !invariant.load !297
  %add.2128 = fadd float %167, %171
  %172 = getelementptr inbounds [256 x float], ptr %arg5, i32 0, i32 %13
  %173 = load float, ptr %172, align 4, !invariant.load !297
  %add.2329 = fadd float %add.2128, %173
  %174 = fcmp oge float %add.2329, %region_0_26_constant_1223
  %175 = fcmp une float %add.2329, %add.2329
  %176 = or i1 %174, %175
  %maximum.2430 = select i1 %176, float %add.2329, float %region_0_26_constant_1223
  %177 = insertvalue { float, float, float } %165, float %maximum.2430, 2
  %178 = extractvalue { float, float, float } %177, 0
  %179 = getelementptr inbounds float, ptr %arg6, i32 %linear_index3
  store float %178, ptr %179, align 4
  %180 = extractvalue { float, float, float } %177, 1
  %181 = getelementptr inbounds float, ptr %arg4, i32 %linear_index3
  store float %180, ptr %181, align 4
  %182 = extractvalue { float, float, float } %177, 2
  %183 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  store float %182, ptr %183, align 4
  br label %fusion_580.in_bounds-after
}

define void @fusion_621(ptr noalias align 16 dereferenceable(1024) %arg0, ptr noalias align 128 dereferenceable(8388608) %arg1, ptr noalias align 128 dereferenceable(25165824) %arg2) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !366
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 524288
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 256
  %5 = udiv i32 %linear_index_base, 256
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 256
  %8 = udiv i32 %linear_index1, 256
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 256
  %11 = udiv i32 %linear_index2, 256
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 256
  %14 = udiv i32 %linear_index3, 256
  %15 = icmp ult i32 %linear_index_base, 2097152
  br i1 %15, label %fusion_621.in_bounds-true, label %fusion_621.in_bounds-after

fusion_621.in_bounds-after:                       ; preds = %fusion_621.in_bounds-true, %entry
  ret void

fusion_621.in_bounds-true:                        ; preds = %entry
  %16 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  %17 = load float, ptr %16, align 4
  %18 = add i32 %5, 0
  %19 = add i32 %4, 0
  %20 = getelementptr inbounds [8192 x [768 x float]], ptr %arg2, i32 0, i32 %18, i32 %19
  %21 = load float, ptr %20, align 4, !invariant.load !297
  %add.5 = fadd float %17, %21
  %22 = getelementptr inbounds [256 x float], ptr %arg0, i32 0, i32 %4
  %23 = load float, ptr %22, align 4, !invariant.load !297
  %add.7 = fadd float %add.5, %23
  %region_0_11_constant_8 = load float, ptr @40, align 4
  %24 = fcmp oge float %add.7, %region_0_11_constant_8
  %25 = fcmp une float %add.7, %add.7
  %26 = or i1 %24, %25
  %maximum.10 = select i1 %26, float %add.7, float %region_0_11_constant_8
  %27 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  store float %maximum.10, ptr %27, align 4
  %28 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  %29 = load float, ptr %28, align 4
  %30 = add i32 %8, 0
  %31 = add i32 %7, 0
  %32 = getelementptr inbounds [8192 x [768 x float]], ptr %arg2, i32 0, i32 %30, i32 %31
  %33 = load float, ptr %32, align 4, !invariant.load !297
  %add.51 = fadd float %29, %33
  %34 = getelementptr inbounds [256 x float], ptr %arg0, i32 0, i32 %7
  %35 = load float, ptr %34, align 4, !invariant.load !297
  %add.72 = fadd float %add.51, %35
  %region_0_11_constant_83 = load float, ptr @40, align 4
  %36 = fcmp oge float %add.72, %region_0_11_constant_83
  %37 = fcmp une float %add.72, %add.72
  %38 = or i1 %36, %37
  %maximum.104 = select i1 %38, float %add.72, float %region_0_11_constant_83
  %39 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  store float %maximum.104, ptr %39, align 4
  %40 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  %41 = load float, ptr %40, align 4
  %42 = add i32 %11, 0
  %43 = add i32 %10, 0
  %44 = getelementptr inbounds [8192 x [768 x float]], ptr %arg2, i32 0, i32 %42, i32 %43
  %45 = load float, ptr %44, align 4, !invariant.load !297
  %add.55 = fadd float %41, %45
  %46 = getelementptr inbounds [256 x float], ptr %arg0, i32 0, i32 %10
  %47 = load float, ptr %46, align 4, !invariant.load !297
  %add.76 = fadd float %add.55, %47
  %region_0_11_constant_87 = load float, ptr @40, align 4
  %48 = fcmp oge float %add.76, %region_0_11_constant_87
  %49 = fcmp une float %add.76, %add.76
  %50 = or i1 %48, %49
  %maximum.108 = select i1 %50, float %add.76, float %region_0_11_constant_87
  %51 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  store float %maximum.108, ptr %51, align 4
  %52 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  %53 = load float, ptr %52, align 4
  %54 = add i32 %14, 0
  %55 = add i32 %13, 0
  %56 = getelementptr inbounds [8192 x [768 x float]], ptr %arg2, i32 0, i32 %54, i32 %55
  %57 = load float, ptr %56, align 4, !invariant.load !297
  %add.59 = fadd float %53, %57
  %58 = getelementptr inbounds [256 x float], ptr %arg0, i32 0, i32 %13
  %59 = load float, ptr %58, align 4, !invariant.load !297
  %add.710 = fadd float %add.59, %59
  %region_0_11_constant_811 = load float, ptr @40, align 4
  %60 = fcmp oge float %add.710, %region_0_11_constant_811
  %61 = fcmp une float %add.710, %add.710
  %62 = or i1 %60, %61
  %maximum.1012 = select i1 %62, float %add.710, float %region_0_11_constant_811
  %63 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  store float %maximum.1012, ptr %63, align 4
  br label %fusion_621.in_bounds-after
}

define void @concatenate_112(ptr noalias align 16 dereferenceable(4194304) %arg0, ptr noalias align 16 dereferenceable(4194304) %arg1, ptr noalias align 16 dereferenceable(1572864) %arg2, ptr noalias align 16 dereferenceable(2883584) %arg3, ptr noalias align 16 dereferenceable(8388608) %arg4, ptr noalias align 16 dereferenceable(8388608) %arg5, ptr noalias align 128 dereferenceable(29622272) %arg6) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !393
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 1851392
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 904
  %5 = udiv i32 %linear_index_base, 904
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 904
  %8 = udiv i32 %linear_index1, 904
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 904
  %11 = udiv i32 %linear_index2, 904
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 904
  %14 = udiv i32 %linear_index3, 904
  %15 = icmp ult i32 %linear_index_base, 7405568
  br i1 %15, label %concatenate_112.in_bounds-true, label %concatenate_112.in_bounds-after

concatenate_112.in_bounds-after:                  ; preds = %concatenate.7.merge42, %entry
  ret void

concatenate_112.in_bounds-true:                   ; preds = %entry
  br label %concatenate.pivot.304.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %16 = phi i32 [ 0, %concatenate.pivot.0. ]
  %17 = sub nsw i32 %4, %16
  %18 = udiv i32 %linear_index_base, 904
  %19 = mul i32 %18, 128
  %20 = add i32 %19, %17
  %21 = udiv i32 %20, 1
  %22 = urem i32 %21, 128
  %23 = udiv i32 %20, 128
  %24 = getelementptr inbounds float, ptr %arg0, i32 %20
  %25 = load float, ptr %24, align 4, !invariant.load !297
  br label %concatenate.7.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.128.1
  %26 = phi i32 [ 128, %concatenate.pivot.128.1 ]
  %27 = sub nsw i32 %4, %26
  %28 = udiv i32 %linear_index_base, 904
  %29 = mul i32 %28, 128
  %30 = add i32 %29, %27
  %31 = udiv i32 %30, 1
  %32 = urem i32 %31, 128
  %33 = udiv i32 %30, 128
  %34 = getelementptr inbounds float, ptr %arg1, i32 %30
  %35 = load float, ptr %34, align 4, !invariant.load !297
  br label %concatenate.7.merge

concat_index_from_operand_id2:                    ; preds = %concatenate.pivot.256.2
  %36 = phi i32 [ 256, %concatenate.pivot.256.2 ]
  %37 = sub nsw i32 %4, %36
  %38 = udiv i32 %linear_index_base, 904
  %39 = mul i32 %38, 48
  %40 = add i32 %39, %37
  %41 = udiv i32 %40, 1
  %42 = urem i32 %41, 48
  %43 = udiv i32 %40, 48
  %44 = getelementptr inbounds float, ptr %arg2, i32 %40
  %45 = load float, ptr %44, align 4, !invariant.load !297
  br label %concatenate.7.merge

concat_index_from_operand_id3:                    ; preds = %concatenate.pivot.304.3
  %46 = phi i32 [ 304, %concatenate.pivot.304.3 ]
  %47 = sub nsw i32 %4, %46
  %48 = udiv i32 %linear_index_base, 904
  %49 = mul i32 %48, 88
  %50 = add i32 %49, %47
  %51 = udiv i32 %50, 1
  %52 = urem i32 %51, 88
  %53 = udiv i32 %50, 88
  %54 = getelementptr inbounds float, ptr %arg3, i32 %50
  %55 = load float, ptr %54, align 4, !invariant.load !297
  br label %concatenate.7.merge

concat_index_from_operand_id4:                    ; preds = %concatenate.pivot.392.4
  %56 = phi i32 [ 392, %concatenate.pivot.392.4 ]
  %57 = sub nsw i32 %4, %56
  %58 = udiv i32 %linear_index_base, 904
  %59 = mul i32 %58, 256
  %60 = add i32 %59, %57
  %61 = udiv i32 %60, 1
  %62 = urem i32 %61, 256
  %63 = udiv i32 %60, 256
  %64 = getelementptr inbounds float, ptr %arg4, i32 %60
  %65 = load float, ptr %64, align 4, !invariant.load !297
  br label %concatenate.7.merge

concat_index_from_operand_id5:                    ; preds = %concatenate.pivot.648.5
  %66 = phi i32 [ 648, %concatenate.pivot.648.5 ]
  %67 = sub nsw i32 %4, %66
  %68 = udiv i32 %linear_index_base, 904
  %69 = mul i32 %68, 256
  %70 = add i32 %69, %67
  %71 = udiv i32 %70, 1
  %72 = urem i32 %71, 256
  %73 = udiv i32 %70, 256
  %74 = getelementptr inbounds float, ptr %arg5, i32 %70
  %75 = load float, ptr %74, align 4, !invariant.load !297
  br label %concatenate.7.merge

concatenate.pivot.304.:                           ; preds = %concatenate_112.in_bounds-true
  %76 = icmp ult i32 %4, 304
  br i1 %76, label %concatenate.pivot.128., label %concatenate.pivot.392.

concatenate.pivot.128.:                           ; preds = %concatenate.pivot.304.
  %77 = icmp ult i32 %4, 128
  br i1 %77, label %concatenate.pivot.0., label %concatenate.pivot.256.

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.128.
  br label %concat_index_from_operand_id0

concatenate.pivot.256.:                           ; preds = %concatenate.pivot.128.
  %78 = icmp ult i32 %4, 256
  br i1 %78, label %concatenate.pivot.128.1, label %concatenate.pivot.256.2

concatenate.pivot.128.1:                          ; preds = %concatenate.pivot.256.
  br label %concat_index_from_operand_id1

concatenate.pivot.256.2:                          ; preds = %concatenate.pivot.256.
  br label %concat_index_from_operand_id2

concatenate.pivot.392.:                           ; preds = %concatenate.pivot.304.
  %79 = icmp ult i32 %4, 392
  br i1 %79, label %concatenate.pivot.304.3, label %concatenate.pivot.648.

concatenate.pivot.304.3:                          ; preds = %concatenate.pivot.392.
  br label %concat_index_from_operand_id3

concatenate.pivot.648.:                           ; preds = %concatenate.pivot.392.
  %80 = icmp ult i32 %4, 648
  br i1 %80, label %concatenate.pivot.392.4, label %concatenate.pivot.648.5

concatenate.pivot.392.4:                          ; preds = %concatenate.pivot.648.
  br label %concat_index_from_operand_id4

concatenate.pivot.648.5:                          ; preds = %concatenate.pivot.648.
  br label %concat_index_from_operand_id5

concatenate.7.merge:                              ; preds = %concat_index_from_operand_id5, %concat_index_from_operand_id4, %concat_index_from_operand_id3, %concat_index_from_operand_id2, %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %81 = phi float [ %25, %concat_index_from_operand_id0 ], [ %35, %concat_index_from_operand_id1 ], [ %45, %concat_index_from_operand_id2 ], [ %55, %concat_index_from_operand_id3 ], [ %65, %concat_index_from_operand_id4 ], [ %75, %concat_index_from_operand_id5 ]
  %82 = getelementptr inbounds float, ptr %arg6, i32 %linear_index_base
  store float %81, ptr %82, align 4
  br label %concatenate.pivot.304.13

concat_index_from_operand_id07:                   ; preds = %concatenate.pivot.0.15
  %83 = phi i32 [ 0, %concatenate.pivot.0.15 ]
  %84 = sub nsw i32 %7, %83
  %85 = udiv i32 %linear_index1, 904
  %86 = mul i32 %85, 128
  %87 = add i32 %86, %84
  %88 = udiv i32 %87, 1
  %89 = urem i32 %88, 128
  %90 = udiv i32 %87, 128
  %91 = getelementptr inbounds float, ptr %arg0, i32 %87
  %92 = load float, ptr %91, align 4, !invariant.load !297
  br label %concatenate.7.merge6

concat_index_from_operand_id18:                   ; preds = %concatenate.pivot.128.17
  %93 = phi i32 [ 128, %concatenate.pivot.128.17 ]
  %94 = sub nsw i32 %7, %93
  %95 = udiv i32 %linear_index1, 904
  %96 = mul i32 %95, 128
  %97 = add i32 %96, %94
  %98 = udiv i32 %97, 1
  %99 = urem i32 %98, 128
  %100 = udiv i32 %97, 128
  %101 = getelementptr inbounds float, ptr %arg1, i32 %97
  %102 = load float, ptr %101, align 4, !invariant.load !297
  br label %concatenate.7.merge6

concat_index_from_operand_id29:                   ; preds = %concatenate.pivot.256.18
  %103 = phi i32 [ 256, %concatenate.pivot.256.18 ]
  %104 = sub nsw i32 %7, %103
  %105 = udiv i32 %linear_index1, 904
  %106 = mul i32 %105, 48
  %107 = add i32 %106, %104
  %108 = udiv i32 %107, 1
  %109 = urem i32 %108, 48
  %110 = udiv i32 %107, 48
  %111 = getelementptr inbounds float, ptr %arg2, i32 %107
  %112 = load float, ptr %111, align 4, !invariant.load !297
  br label %concatenate.7.merge6

concat_index_from_operand_id310:                  ; preds = %concatenate.pivot.304.20
  %113 = phi i32 [ 304, %concatenate.pivot.304.20 ]
  %114 = sub nsw i32 %7, %113
  %115 = udiv i32 %linear_index1, 904
  %116 = mul i32 %115, 88
  %117 = add i32 %116, %114
  %118 = udiv i32 %117, 1
  %119 = urem i32 %118, 88
  %120 = udiv i32 %117, 88
  %121 = getelementptr inbounds float, ptr %arg3, i32 %117
  %122 = load float, ptr %121, align 4, !invariant.load !297
  br label %concatenate.7.merge6

concat_index_from_operand_id411:                  ; preds = %concatenate.pivot.392.22
  %123 = phi i32 [ 392, %concatenate.pivot.392.22 ]
  %124 = sub nsw i32 %7, %123
  %125 = udiv i32 %linear_index1, 904
  %126 = mul i32 %125, 256
  %127 = add i32 %126, %124
  %128 = udiv i32 %127, 1
  %129 = urem i32 %128, 256
  %130 = udiv i32 %127, 256
  %131 = getelementptr inbounds float, ptr %arg4, i32 %127
  %132 = load float, ptr %131, align 4, !invariant.load !297
  br label %concatenate.7.merge6

concat_index_from_operand_id512:                  ; preds = %concatenate.pivot.648.23
  %133 = phi i32 [ 648, %concatenate.pivot.648.23 ]
  %134 = sub nsw i32 %7, %133
  %135 = udiv i32 %linear_index1, 904
  %136 = mul i32 %135, 256
  %137 = add i32 %136, %134
  %138 = udiv i32 %137, 1
  %139 = urem i32 %138, 256
  %140 = udiv i32 %137, 256
  %141 = getelementptr inbounds float, ptr %arg5, i32 %137
  %142 = load float, ptr %141, align 4, !invariant.load !297
  br label %concatenate.7.merge6

concatenate.pivot.304.13:                         ; preds = %concatenate.7.merge
  %143 = icmp ult i32 %7, 304
  br i1 %143, label %concatenate.pivot.128.14, label %concatenate.pivot.392.19

concatenate.pivot.128.14:                         ; preds = %concatenate.pivot.304.13
  %144 = icmp ult i32 %7, 128
  br i1 %144, label %concatenate.pivot.0.15, label %concatenate.pivot.256.16

concatenate.pivot.0.15:                           ; preds = %concatenate.pivot.128.14
  br label %concat_index_from_operand_id07

concatenate.pivot.256.16:                         ; preds = %concatenate.pivot.128.14
  %145 = icmp ult i32 %7, 256
  br i1 %145, label %concatenate.pivot.128.17, label %concatenate.pivot.256.18

concatenate.pivot.128.17:                         ; preds = %concatenate.pivot.256.16
  br label %concat_index_from_operand_id18

concatenate.pivot.256.18:                         ; preds = %concatenate.pivot.256.16
  br label %concat_index_from_operand_id29

concatenate.pivot.392.19:                         ; preds = %concatenate.pivot.304.13
  %146 = icmp ult i32 %7, 392
  br i1 %146, label %concatenate.pivot.304.20, label %concatenate.pivot.648.21

concatenate.pivot.304.20:                         ; preds = %concatenate.pivot.392.19
  br label %concat_index_from_operand_id310

concatenate.pivot.648.21:                         ; preds = %concatenate.pivot.392.19
  %147 = icmp ult i32 %7, 648
  br i1 %147, label %concatenate.pivot.392.22, label %concatenate.pivot.648.23

concatenate.pivot.392.22:                         ; preds = %concatenate.pivot.648.21
  br label %concat_index_from_operand_id411

concatenate.pivot.648.23:                         ; preds = %concatenate.pivot.648.21
  br label %concat_index_from_operand_id512

concatenate.7.merge6:                             ; preds = %concat_index_from_operand_id512, %concat_index_from_operand_id411, %concat_index_from_operand_id310, %concat_index_from_operand_id29, %concat_index_from_operand_id18, %concat_index_from_operand_id07
  %148 = phi float [ %92, %concat_index_from_operand_id07 ], [ %102, %concat_index_from_operand_id18 ], [ %112, %concat_index_from_operand_id29 ], [ %122, %concat_index_from_operand_id310 ], [ %132, %concat_index_from_operand_id411 ], [ %142, %concat_index_from_operand_id512 ]
  %149 = getelementptr inbounds float, ptr %arg6, i32 %linear_index1
  store float %148, ptr %149, align 4
  br label %concatenate.pivot.304.31

concat_index_from_operand_id025:                  ; preds = %concatenate.pivot.0.33
  %150 = phi i32 [ 0, %concatenate.pivot.0.33 ]
  %151 = sub nsw i32 %10, %150
  %152 = udiv i32 %linear_index2, 904
  %153 = mul i32 %152, 128
  %154 = add i32 %153, %151
  %155 = udiv i32 %154, 1
  %156 = urem i32 %155, 128
  %157 = udiv i32 %154, 128
  %158 = getelementptr inbounds float, ptr %arg0, i32 %154
  %159 = load float, ptr %158, align 4, !invariant.load !297
  br label %concatenate.7.merge24

concat_index_from_operand_id126:                  ; preds = %concatenate.pivot.128.35
  %160 = phi i32 [ 128, %concatenate.pivot.128.35 ]
  %161 = sub nsw i32 %10, %160
  %162 = udiv i32 %linear_index2, 904
  %163 = mul i32 %162, 128
  %164 = add i32 %163, %161
  %165 = udiv i32 %164, 1
  %166 = urem i32 %165, 128
  %167 = udiv i32 %164, 128
  %168 = getelementptr inbounds float, ptr %arg1, i32 %164
  %169 = load float, ptr %168, align 4, !invariant.load !297
  br label %concatenate.7.merge24

concat_index_from_operand_id227:                  ; preds = %concatenate.pivot.256.36
  %170 = phi i32 [ 256, %concatenate.pivot.256.36 ]
  %171 = sub nsw i32 %10, %170
  %172 = udiv i32 %linear_index2, 904
  %173 = mul i32 %172, 48
  %174 = add i32 %173, %171
  %175 = udiv i32 %174, 1
  %176 = urem i32 %175, 48
  %177 = udiv i32 %174, 48
  %178 = getelementptr inbounds float, ptr %arg2, i32 %174
  %179 = load float, ptr %178, align 4, !invariant.load !297
  br label %concatenate.7.merge24

concat_index_from_operand_id328:                  ; preds = %concatenate.pivot.304.38
  %180 = phi i32 [ 304, %concatenate.pivot.304.38 ]
  %181 = sub nsw i32 %10, %180
  %182 = udiv i32 %linear_index2, 904
  %183 = mul i32 %182, 88
  %184 = add i32 %183, %181
  %185 = udiv i32 %184, 1
  %186 = urem i32 %185, 88
  %187 = udiv i32 %184, 88
  %188 = getelementptr inbounds float, ptr %arg3, i32 %184
  %189 = load float, ptr %188, align 4, !invariant.load !297
  br label %concatenate.7.merge24

concat_index_from_operand_id429:                  ; preds = %concatenate.pivot.392.40
  %190 = phi i32 [ 392, %concatenate.pivot.392.40 ]
  %191 = sub nsw i32 %10, %190
  %192 = udiv i32 %linear_index2, 904
  %193 = mul i32 %192, 256
  %194 = add i32 %193, %191
  %195 = udiv i32 %194, 1
  %196 = urem i32 %195, 256
  %197 = udiv i32 %194, 256
  %198 = getelementptr inbounds float, ptr %arg4, i32 %194
  %199 = load float, ptr %198, align 4, !invariant.load !297
  br label %concatenate.7.merge24

concat_index_from_operand_id530:                  ; preds = %concatenate.pivot.648.41
  %200 = phi i32 [ 648, %concatenate.pivot.648.41 ]
  %201 = sub nsw i32 %10, %200
  %202 = udiv i32 %linear_index2, 904
  %203 = mul i32 %202, 256
  %204 = add i32 %203, %201
  %205 = udiv i32 %204, 1
  %206 = urem i32 %205, 256
  %207 = udiv i32 %204, 256
  %208 = getelementptr inbounds float, ptr %arg5, i32 %204
  %209 = load float, ptr %208, align 4, !invariant.load !297
  br label %concatenate.7.merge24

concatenate.pivot.304.31:                         ; preds = %concatenate.7.merge6
  %210 = icmp ult i32 %10, 304
  br i1 %210, label %concatenate.pivot.128.32, label %concatenate.pivot.392.37

concatenate.pivot.128.32:                         ; preds = %concatenate.pivot.304.31
  %211 = icmp ult i32 %10, 128
  br i1 %211, label %concatenate.pivot.0.33, label %concatenate.pivot.256.34

concatenate.pivot.0.33:                           ; preds = %concatenate.pivot.128.32
  br label %concat_index_from_operand_id025

concatenate.pivot.256.34:                         ; preds = %concatenate.pivot.128.32
  %212 = icmp ult i32 %10, 256
  br i1 %212, label %concatenate.pivot.128.35, label %concatenate.pivot.256.36

concatenate.pivot.128.35:                         ; preds = %concatenate.pivot.256.34
  br label %concat_index_from_operand_id126

concatenate.pivot.256.36:                         ; preds = %concatenate.pivot.256.34
  br label %concat_index_from_operand_id227

concatenate.pivot.392.37:                         ; preds = %concatenate.pivot.304.31
  %213 = icmp ult i32 %10, 392
  br i1 %213, label %concatenate.pivot.304.38, label %concatenate.pivot.648.39

concatenate.pivot.304.38:                         ; preds = %concatenate.pivot.392.37
  br label %concat_index_from_operand_id328

concatenate.pivot.648.39:                         ; preds = %concatenate.pivot.392.37
  %214 = icmp ult i32 %10, 648
  br i1 %214, label %concatenate.pivot.392.40, label %concatenate.pivot.648.41

concatenate.pivot.392.40:                         ; preds = %concatenate.pivot.648.39
  br label %concat_index_from_operand_id429

concatenate.pivot.648.41:                         ; preds = %concatenate.pivot.648.39
  br label %concat_index_from_operand_id530

concatenate.7.merge24:                            ; preds = %concat_index_from_operand_id530, %concat_index_from_operand_id429, %concat_index_from_operand_id328, %concat_index_from_operand_id227, %concat_index_from_operand_id126, %concat_index_from_operand_id025
  %215 = phi float [ %159, %concat_index_from_operand_id025 ], [ %169, %concat_index_from_operand_id126 ], [ %179, %concat_index_from_operand_id227 ], [ %189, %concat_index_from_operand_id328 ], [ %199, %concat_index_from_operand_id429 ], [ %209, %concat_index_from_operand_id530 ]
  %216 = getelementptr inbounds float, ptr %arg6, i32 %linear_index2
  store float %215, ptr %216, align 4
  br label %concatenate.pivot.304.49

concat_index_from_operand_id043:                  ; preds = %concatenate.pivot.0.51
  %217 = phi i32 [ 0, %concatenate.pivot.0.51 ]
  %218 = sub nsw i32 %13, %217
  %219 = udiv i32 %linear_index3, 904
  %220 = mul i32 %219, 128
  %221 = add i32 %220, %218
  %222 = udiv i32 %221, 1
  %223 = urem i32 %222, 128
  %224 = udiv i32 %221, 128
  %225 = getelementptr inbounds float, ptr %arg0, i32 %221
  %226 = load float, ptr %225, align 4, !invariant.load !297
  br label %concatenate.7.merge42

concat_index_from_operand_id144:                  ; preds = %concatenate.pivot.128.53
  %227 = phi i32 [ 128, %concatenate.pivot.128.53 ]
  %228 = sub nsw i32 %13, %227
  %229 = udiv i32 %linear_index3, 904
  %230 = mul i32 %229, 128
  %231 = add i32 %230, %228
  %232 = udiv i32 %231, 1
  %233 = urem i32 %232, 128
  %234 = udiv i32 %231, 128
  %235 = getelementptr inbounds float, ptr %arg1, i32 %231
  %236 = load float, ptr %235, align 4, !invariant.load !297
  br label %concatenate.7.merge42

concat_index_from_operand_id245:                  ; preds = %concatenate.pivot.256.54
  %237 = phi i32 [ 256, %concatenate.pivot.256.54 ]
  %238 = sub nsw i32 %13, %237
  %239 = udiv i32 %linear_index3, 904
  %240 = mul i32 %239, 48
  %241 = add i32 %240, %238
  %242 = udiv i32 %241, 1
  %243 = urem i32 %242, 48
  %244 = udiv i32 %241, 48
  %245 = getelementptr inbounds float, ptr %arg2, i32 %241
  %246 = load float, ptr %245, align 4, !invariant.load !297
  br label %concatenate.7.merge42

concat_index_from_operand_id346:                  ; preds = %concatenate.pivot.304.56
  %247 = phi i32 [ 304, %concatenate.pivot.304.56 ]
  %248 = sub nsw i32 %13, %247
  %249 = udiv i32 %linear_index3, 904
  %250 = mul i32 %249, 88
  %251 = add i32 %250, %248
  %252 = udiv i32 %251, 1
  %253 = urem i32 %252, 88
  %254 = udiv i32 %251, 88
  %255 = getelementptr inbounds float, ptr %arg3, i32 %251
  %256 = load float, ptr %255, align 4, !invariant.load !297
  br label %concatenate.7.merge42

concat_index_from_operand_id447:                  ; preds = %concatenate.pivot.392.58
  %257 = phi i32 [ 392, %concatenate.pivot.392.58 ]
  %258 = sub nsw i32 %13, %257
  %259 = udiv i32 %linear_index3, 904
  %260 = mul i32 %259, 256
  %261 = add i32 %260, %258
  %262 = udiv i32 %261, 1
  %263 = urem i32 %262, 256
  %264 = udiv i32 %261, 256
  %265 = getelementptr inbounds float, ptr %arg4, i32 %261
  %266 = load float, ptr %265, align 4, !invariant.load !297
  br label %concatenate.7.merge42

concat_index_from_operand_id548:                  ; preds = %concatenate.pivot.648.59
  %267 = phi i32 [ 648, %concatenate.pivot.648.59 ]
  %268 = sub nsw i32 %13, %267
  %269 = udiv i32 %linear_index3, 904
  %270 = mul i32 %269, 256
  %271 = add i32 %270, %268
  %272 = udiv i32 %271, 1
  %273 = urem i32 %272, 256
  %274 = udiv i32 %271, 256
  %275 = getelementptr inbounds float, ptr %arg5, i32 %271
  %276 = load float, ptr %275, align 4, !invariant.load !297
  br label %concatenate.7.merge42

concatenate.pivot.304.49:                         ; preds = %concatenate.7.merge24
  %277 = icmp ult i32 %13, 304
  br i1 %277, label %concatenate.pivot.128.50, label %concatenate.pivot.392.55

concatenate.pivot.128.50:                         ; preds = %concatenate.pivot.304.49
  %278 = icmp ult i32 %13, 128
  br i1 %278, label %concatenate.pivot.0.51, label %concatenate.pivot.256.52

concatenate.pivot.0.51:                           ; preds = %concatenate.pivot.128.50
  br label %concat_index_from_operand_id043

concatenate.pivot.256.52:                         ; preds = %concatenate.pivot.128.50
  %279 = icmp ult i32 %13, 256
  br i1 %279, label %concatenate.pivot.128.53, label %concatenate.pivot.256.54

concatenate.pivot.128.53:                         ; preds = %concatenate.pivot.256.52
  br label %concat_index_from_operand_id144

concatenate.pivot.256.54:                         ; preds = %concatenate.pivot.256.52
  br label %concat_index_from_operand_id245

concatenate.pivot.392.55:                         ; preds = %concatenate.pivot.304.49
  %280 = icmp ult i32 %13, 392
  br i1 %280, label %concatenate.pivot.304.56, label %concatenate.pivot.648.57

concatenate.pivot.304.56:                         ; preds = %concatenate.pivot.392.55
  br label %concat_index_from_operand_id346

concatenate.pivot.648.57:                         ; preds = %concatenate.pivot.392.55
  %281 = icmp ult i32 %13, 648
  br i1 %281, label %concatenate.pivot.392.58, label %concatenate.pivot.648.59

concatenate.pivot.392.58:                         ; preds = %concatenate.pivot.648.57
  br label %concat_index_from_operand_id447

concatenate.pivot.648.59:                         ; preds = %concatenate.pivot.648.57
  br label %concat_index_from_operand_id548

concatenate.7.merge42:                            ; preds = %concat_index_from_operand_id548, %concat_index_from_operand_id447, %concat_index_from_operand_id346, %concat_index_from_operand_id245, %concat_index_from_operand_id144, %concat_index_from_operand_id043
  %282 = phi float [ %226, %concat_index_from_operand_id043 ], [ %236, %concat_index_from_operand_id144 ], [ %246, %concat_index_from_operand_id245 ], [ %256, %concat_index_from_operand_id346 ], [ %266, %concat_index_from_operand_id447 ], [ %276, %concat_index_from_operand_id548 ]
  %283 = getelementptr inbounds float, ptr %arg6, i32 %linear_index3
  store float %282, ptr %283, align 4
  br label %concatenate_112.in_bounds-after
}

define void @fusion_642(ptr noalias align 128 dereferenceable(29622272) %arg0, ptr noalias align 128 dereferenceable(29622272) %arg1, ptr noalias align 16 dereferenceable(3616) %arg2, ptr noalias align 128 dereferenceable(29622272) %arg3) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !394
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !395
  %2 = mul nuw nsw i32 %0, 226
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 1851392
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %row_index = mul nuw nsw i32 %1, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 904
  %5 = udiv i32 %linear_index_base, 904
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %row_index_plus1 = add nuw nsw i32 %row_index, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 904
  %8 = udiv i32 %linear_index1, 904
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %row_index_plus2 = add nuw nsw i32 %row_index, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 904
  %11 = udiv i32 %linear_index2, 904
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %row_index_plus3 = add nuw nsw i32 %row_index, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 904
  %14 = udiv i32 %linear_index3, 904
  %15 = icmp ult i32 %linear_index_base, 7405568
  br i1 %15, label %fusion_642.in_bounds-true, label %fusion_642.in_bounds-after

fusion_642.in_bounds-after:                       ; preds = %fusion_642.in_bounds-true, %entry
  ret void

fusion_642.in_bounds-true:                        ; preds = %entry
  %16 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  %17 = load float, ptr %16, align 4, !invariant.load !297
  %18 = getelementptr inbounds [904 x float], ptr %arg2, i32 0, i32 %row_index
  %19 = load float, ptr %18, align 4, !invariant.load !297
  %add.5 = fadd float %17, %19
  %20 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_base
  %21 = load float, ptr %20, align 4, !invariant.load !297
  %multiply.6 = fmul float %add.5, %21
  %22 = call float @llvm.fabs.f32(float %multiply.6)
  %23 = call float @llvm.fabs.f32(float %multiply.6)
  %24 = fcmp olt float %23, 0x3F3A36E2E0000000
  %25 = fcmp uge float %multiply.6, -9.000000e+00
  %26 = select i1 %25, float %multiply.6, float -9.000000e+00
  %27 = fcmp ule float %26, 9.000000e+00
  %28 = select i1 %27, float %26, float 9.000000e+00
  %29 = fmul float %28, %28
  %30 = fmul float %29, 0xBCB3E4B800000000
  %31 = fadd float %30, 0x3D4C266FC0000000
  %32 = fmul float %29, %31
  %33 = fadd float %32, 0xBDD7A6FFE0000000
  %34 = fmul float %29, %33
  %35 = fadd float %34, 0x3E6B800820000000
  %36 = fmul float %29, %35
  %37 = fadd float %36, 0x3EEF286940000000
  %38 = fmul float %29, %37
  %39 = fadd float %38, 0x3F44E1BDA0000000
  %40 = fmul float %29, %39
  %41 = fadd float %40, 0x3F740B3B80000000
  %42 = fmul float %28, %41
  %43 = fmul float %29, 0x3EB41A7B00000000
  %44 = fadd float %43, 0x3F1F12BAC0000000
  %45 = fmul float %29, %44
  %46 = fadd float %45, 0x3F629540A0000000
  %47 = fmul float %29, %46
  %48 = fadd float %47, 0x3F740B3BA0000000
  %49 = fdiv float %42, %48
  %50 = select i1 %24, float %multiply.6, float %49
  %51 = call float @llvm.copysign.f32(float 1.000000e+00, float %multiply.6)
  %52 = fcmp ult float %22, 2.000000e+01
  %53 = select i1 %52, float %50, float %51
  %54 = getelementptr inbounds float, ptr %arg3, i32 %linear_index_base
  store float %53, ptr %54, align 4
  %55 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  %56 = load float, ptr %55, align 4, !invariant.load !297
  %57 = getelementptr inbounds [904 x float], ptr %arg2, i32 0, i32 %row_index_plus1
  %58 = load float, ptr %57, align 4, !invariant.load !297
  %add.51 = fadd float %56, %58
  %59 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  %60 = load float, ptr %59, align 4, !invariant.load !297
  %multiply.62 = fmul float %add.51, %60
  %61 = call float @llvm.fabs.f32(float %multiply.62)
  %62 = call float @llvm.fabs.f32(float %multiply.62)
  %63 = fcmp olt float %62, 0x3F3A36E2E0000000
  %64 = fcmp uge float %multiply.62, -9.000000e+00
  %65 = select i1 %64, float %multiply.62, float -9.000000e+00
  %66 = fcmp ule float %65, 9.000000e+00
  %67 = select i1 %66, float %65, float 9.000000e+00
  %68 = fmul float %67, %67
  %69 = fmul float %68, 0xBCB3E4B800000000
  %70 = fadd float %69, 0x3D4C266FC0000000
  %71 = fmul float %68, %70
  %72 = fadd float %71, 0xBDD7A6FFE0000000
  %73 = fmul float %68, %72
  %74 = fadd float %73, 0x3E6B800820000000
  %75 = fmul float %68, %74
  %76 = fadd float %75, 0x3EEF286940000000
  %77 = fmul float %68, %76
  %78 = fadd float %77, 0x3F44E1BDA0000000
  %79 = fmul float %68, %78
  %80 = fadd float %79, 0x3F740B3B80000000
  %81 = fmul float %67, %80
  %82 = fmul float %68, 0x3EB41A7B00000000
  %83 = fadd float %82, 0x3F1F12BAC0000000
  %84 = fmul float %68, %83
  %85 = fadd float %84, 0x3F629540A0000000
  %86 = fmul float %68, %85
  %87 = fadd float %86, 0x3F740B3BA0000000
  %88 = fdiv float %81, %87
  %89 = select i1 %63, float %multiply.62, float %88
  %90 = call float @llvm.copysign.f32(float 1.000000e+00, float %multiply.62)
  %91 = fcmp ult float %61, 2.000000e+01
  %92 = select i1 %91, float %89, float %90
  %93 = getelementptr inbounds float, ptr %arg3, i32 %linear_index1
  store float %92, ptr %93, align 4
  %94 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  %95 = load float, ptr %94, align 4, !invariant.load !297
  %96 = getelementptr inbounds [904 x float], ptr %arg2, i32 0, i32 %row_index_plus2
  %97 = load float, ptr %96, align 4, !invariant.load !297
  %add.53 = fadd float %95, %97
  %98 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  %99 = load float, ptr %98, align 4, !invariant.load !297
  %multiply.64 = fmul float %add.53, %99
  %100 = call float @llvm.fabs.f32(float %multiply.64)
  %101 = call float @llvm.fabs.f32(float %multiply.64)
  %102 = fcmp olt float %101, 0x3F3A36E2E0000000
  %103 = fcmp uge float %multiply.64, -9.000000e+00
  %104 = select i1 %103, float %multiply.64, float -9.000000e+00
  %105 = fcmp ule float %104, 9.000000e+00
  %106 = select i1 %105, float %104, float 9.000000e+00
  %107 = fmul float %106, %106
  %108 = fmul float %107, 0xBCB3E4B800000000
  %109 = fadd float %108, 0x3D4C266FC0000000
  %110 = fmul float %107, %109
  %111 = fadd float %110, 0xBDD7A6FFE0000000
  %112 = fmul float %107, %111
  %113 = fadd float %112, 0x3E6B800820000000
  %114 = fmul float %107, %113
  %115 = fadd float %114, 0x3EEF286940000000
  %116 = fmul float %107, %115
  %117 = fadd float %116, 0x3F44E1BDA0000000
  %118 = fmul float %107, %117
  %119 = fadd float %118, 0x3F740B3B80000000
  %120 = fmul float %106, %119
  %121 = fmul float %107, 0x3EB41A7B00000000
  %122 = fadd float %121, 0x3F1F12BAC0000000
  %123 = fmul float %107, %122
  %124 = fadd float %123, 0x3F629540A0000000
  %125 = fmul float %107, %124
  %126 = fadd float %125, 0x3F740B3BA0000000
  %127 = fdiv float %120, %126
  %128 = select i1 %102, float %multiply.64, float %127
  %129 = call float @llvm.copysign.f32(float 1.000000e+00, float %multiply.64)
  %130 = fcmp ult float %100, 2.000000e+01
  %131 = select i1 %130, float %128, float %129
  %132 = getelementptr inbounds float, ptr %arg3, i32 %linear_index2
  store float %131, ptr %132, align 4
  %133 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  %134 = load float, ptr %133, align 4, !invariant.load !297
  %135 = getelementptr inbounds [904 x float], ptr %arg2, i32 0, i32 %row_index_plus3
  %136 = load float, ptr %135, align 4, !invariant.load !297
  %add.55 = fadd float %134, %136
  %137 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  %138 = load float, ptr %137, align 4, !invariant.load !297
  %multiply.66 = fmul float %add.55, %138
  %139 = call float @llvm.fabs.f32(float %multiply.66)
  %140 = call float @llvm.fabs.f32(float %multiply.66)
  %141 = fcmp olt float %140, 0x3F3A36E2E0000000
  %142 = fcmp uge float %multiply.66, -9.000000e+00
  %143 = select i1 %142, float %multiply.66, float -9.000000e+00
  %144 = fcmp ule float %143, 9.000000e+00
  %145 = select i1 %144, float %143, float 9.000000e+00
  %146 = fmul float %145, %145
  %147 = fmul float %146, 0xBCB3E4B800000000
  %148 = fadd float %147, 0x3D4C266FC0000000
  %149 = fmul float %146, %148
  %150 = fadd float %149, 0xBDD7A6FFE0000000
  %151 = fmul float %146, %150
  %152 = fadd float %151, 0x3E6B800820000000
  %153 = fmul float %146, %152
  %154 = fadd float %153, 0x3EEF286940000000
  %155 = fmul float %146, %154
  %156 = fadd float %155, 0x3F44E1BDA0000000
  %157 = fmul float %146, %156
  %158 = fadd float %157, 0x3F740B3B80000000
  %159 = fmul float %145, %158
  %160 = fmul float %146, 0x3EB41A7B00000000
  %161 = fadd float %160, 0x3F1F12BAC0000000
  %162 = fmul float %146, %161
  %163 = fadd float %162, 0x3F629540A0000000
  %164 = fmul float %146, %163
  %165 = fadd float %164, 0x3F740B3BA0000000
  %166 = fdiv float %159, %165
  %167 = select i1 %141, float %multiply.66, float %166
  %168 = call float @llvm.copysign.f32(float 1.000000e+00, float %multiply.66)
  %169 = fcmp ult float %139, 2.000000e+01
  %170 = select i1 %169, float %167, float %168
  %171 = getelementptr inbounds float, ptr %arg3, i32 %linear_index3
  store float %170, ptr %171, align 4
  br label %fusion_642.in_bounds-after
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.copysign.f32(float, float) #0

define void @fusion_533(ptr noalias align 128 dereferenceable(1048576) %arg0, ptr noalias align 16 dereferenceable(128) %arg1, ptr noalias align 16 dereferenceable(128) %arg2, ptr noalias align 128 dereferenceable(32768) %arg3, ptr noalias align 128 dereferenceable(32768) %arg4) {
entry:
  %initial_value_addr65 = alloca float, align 4
  %return_buffer60 = alloca float, align 4
  %result_from_other_lane58 = alloca float, align 4
  %return_buffer57 = alloca float, align 4
  %result_from_other_lane55 = alloca float, align 4
  %return_buffer54 = alloca float, align 4
  %result_from_other_lane52 = alloca float, align 4
  %return_buffer51 = alloca float, align 4
  %result_from_other_lane49 = alloca float, align 4
  %return_buffer48 = alloca float, align 4
  %result_from_other_lane46 = alloca float, align 4
  %initial_value_addr = alloca float, align 4
  %return_buffer44 = alloca float, align 4
  %result_from_other_lane42 = alloca float, align 4
  %return_buffer41 = alloca float, align 4
  %result_from_other_lane39 = alloca float, align 4
  %return_buffer38 = alloca float, align 4
  %result_from_other_lane36 = alloca float, align 4
  %return_buffer35 = alloca float, align 4
  %result_from_other_lane33 = alloca float, align 4
  %return_buffer32 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer30 = alloca float, align 4
  %return_buffer24 = alloca float, align 4
  %tile_loop.invar_address15 = alloca i32, align 4
  %return_buffer11 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result2 = alloca float, align 4
  %reduction_input_address1 = alloca float, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %inter_warp_reduce-after64, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_22_constant_7 = load float, ptr @41, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_22_constant_7, ptr %2, align 4
  %region_0_22_constant_73 = load float, ptr @41, align 4
  %3 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  store float %region_0_22_constant_73, ptr %3, align 4
  %4 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !352
  %5 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !368
  %6 = urem i32 %4, 32
  %7 = udiv i32 %4, 32
  %8 = mul i32 %5, 3
  %9 = add i32 %8, %7
  %10 = icmp ult i32 %9, 8192
  br i1 %10, label %11, label %early_return

11:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %6, 32
  %thread_id.y = udiv i32 %6, 32
  %lane_id = urem i32 %6, 32
  %12 = udiv i32 %9, 1
  %13 = urem i32 %12, 1
  %14 = udiv i32 %9, 1
  %15 = urem i32 %14, 8192
  %16 = udiv i32 %9, 8192
  %17 = icmp eq i32 %15, 8191
  %tile_bound = select i1 %17, i32 1, i32 1
  %18 = icmp eq i32 %13, 0
  %tile_bound4 = select i1 %18, i32 32, i32 512
  %tile_origin.0 = mul i32 %16, 1
  %tile_origin.1 = mul i32 %15, 1
  %tile_origin.2 = mul i32 %13, 512
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %is_full_tile-after, %11
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %19 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %19, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 1
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %20 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %21 = icmp eq i32 512, %tile_bound4
  br i1 %21, label %is_full_tile-true, label %is_full_tile-false

is_full_tile-after:                               ; preds = %tile_loop.loop_exit12, %tile_loop.loop_exit
  br label %y_in_tile.loop_header, !llvm.loop !396

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %partial_reduction_result31 = load float, ptr %current_output, align 4
  %22 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result31, i32 16, i32 31)
  store float %22, ptr %result_from_other_lane, align 4
  call void @region_1_8__1(ptr %current_output, ptr %result_from_other_lane, ptr %return_buffer32)
  %23 = load float, ptr %return_buffer32, align 4
  store float %23, ptr %current_output, align 4
  %partial_reduction_result34 = load float, ptr %current_output, align 4
  %24 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result34, i32 8, i32 31)
  store float %24, ptr %result_from_other_lane33, align 4
  call void @region_1_8__1(ptr %current_output, ptr %result_from_other_lane33, ptr %return_buffer35)
  %25 = load float, ptr %return_buffer35, align 4
  store float %25, ptr %current_output, align 4
  %partial_reduction_result37 = load float, ptr %current_output, align 4
  %26 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result37, i32 4, i32 31)
  store float %26, ptr %result_from_other_lane36, align 4
  call void @region_1_8__1(ptr %current_output, ptr %result_from_other_lane36, ptr %return_buffer38)
  %27 = load float, ptr %return_buffer38, align 4
  store float %27, ptr %current_output, align 4
  %partial_reduction_result40 = load float, ptr %current_output, align 4
  %28 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result40, i32 2, i32 31)
  store float %28, ptr %result_from_other_lane39, align 4
  call void @region_1_8__1(ptr %current_output, ptr %result_from_other_lane39, ptr %return_buffer41)
  %29 = load float, ptr %return_buffer41, align 4
  store float %29, ptr %current_output, align 4
  %partial_reduction_result43 = load float, ptr %current_output, align 4
  %30 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result43, i32 1, i32 31)
  store float %30, ptr %result_from_other_lane42, align 4
  call void @region_1_8__1(ptr %current_output, ptr %result_from_other_lane42, ptr %return_buffer44)
  %31 = load float, ptr %return_buffer44, align 4
  store float %31, ptr %current_output, align 4
  %32 = udiv i32 %thread_id.x, 32
  %33 = icmp eq i32 %lane_id, 0
  br i1 %33, label %intra_warp_reduce_write-true, label %intra_warp_reduce_write-after

intra_warp_reduce_write-after:                    ; preds = %intra_warp_reduce_write-true, %y_in_tile.loop_exit
  call void @llvm.nvvm.barrier0()
  %34 = icmp eq i32 %32, 0
  br i1 %34, label %inter_warp_reduce-true, label %inter_warp_reduce-after

inter_warp_reduce-after:                          ; preds = %reduction_write_output-after, %intra_warp_reduce_write-after
  %current_output45 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  %partial_reduction_result47 = load float, ptr %current_output45, align 4
  %35 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result47, i32 16, i32 31)
  store float %35, ptr %result_from_other_lane46, align 4
  call void @region_2_16__1(ptr %current_output45, ptr %result_from_other_lane46, ptr %return_buffer48)
  %36 = load float, ptr %return_buffer48, align 4
  store float %36, ptr %current_output45, align 4
  %partial_reduction_result50 = load float, ptr %current_output45, align 4
  %37 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result50, i32 8, i32 31)
  store float %37, ptr %result_from_other_lane49, align 4
  call void @region_2_16__1(ptr %current_output45, ptr %result_from_other_lane49, ptr %return_buffer51)
  %38 = load float, ptr %return_buffer51, align 4
  store float %38, ptr %current_output45, align 4
  %partial_reduction_result53 = load float, ptr %current_output45, align 4
  %39 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result53, i32 4, i32 31)
  store float %39, ptr %result_from_other_lane52, align 4
  call void @region_2_16__1(ptr %current_output45, ptr %result_from_other_lane52, ptr %return_buffer54)
  %40 = load float, ptr %return_buffer54, align 4
  store float %40, ptr %current_output45, align 4
  %partial_reduction_result56 = load float, ptr %current_output45, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result56, i32 2, i32 31)
  store float %41, ptr %result_from_other_lane55, align 4
  call void @region_2_16__1(ptr %current_output45, ptr %result_from_other_lane55, ptr %return_buffer57)
  %42 = load float, ptr %return_buffer57, align 4
  store float %42, ptr %current_output45, align 4
  %partial_reduction_result59 = load float, ptr %current_output45, align 4
  %43 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result59, i32 1, i32 31)
  store float %43, ptr %result_from_other_lane58, align 4
  call void @region_2_16__1(ptr %current_output45, ptr %result_from_other_lane58, ptr %return_buffer60)
  %44 = load float, ptr %return_buffer60, align 4
  store float %44, ptr %current_output45, align 4
  %45 = udiv i32 %thread_id.x, 32
  %46 = icmp eq i32 %lane_id, 0
  br i1 %46, label %intra_warp_reduce_write-true61, label %intra_warp_reduce_write-after62

intra_warp_reduce_write-after62:                  ; preds = %intra_warp_reduce_write-true61, %inter_warp_reduce-after
  call void @llvm.nvvm.barrier0()
  %47 = icmp eq i32 %45, 0
  br i1 %47, label %inter_warp_reduce-true63, label %inter_warp_reduce-after64

inter_warp_reduce-after64:                        ; preds = %reduction_write_output-after67, %intra_warp_reduce_write-after62
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

is_full_tile-true:                                ; preds = %y_in_tile.loop_body
  %48 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %tile_loop.loop_body, %is_full_tile-true
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %49 = icmp uge i32 %tile_loop.indvar, 16
  br i1 %49, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc5 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc5, ptr %tile_loop.invar_address, align 4
  %50 = icmp eq i32 %tile_loop.indvar, 0
  %51 = mul i32 %tile_loop.indvar, 32
  %52 = add i32 %51, 0
  %x_loc = add i32 %52, %48
  %53 = add i32 %tile_origin.1, %y_in_tile.indvar
  %54 = add i32 %tile_origin.2, %x_loc
  %Arg_0.1 = getelementptr inbounds [8192 x [32 x float]], ptr %arg0, i32 0, i32 %53, i32 %54
  %Arg_0.16 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %Arg_1.2 = getelementptr inbounds [32 x [1 x float]], ptr %arg1, i32 0, i32 %54, i32 0
  %Arg_1.27 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %multiply.6 = fmul float %Arg_0.16, %Arg_1.27
  store float %multiply.6, ptr %reduction_input_address, align 4
  %55 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_8__1(ptr %55, ptr %reduction_input_address, ptr %return_buffer)
  %56 = load float, ptr %return_buffer, align 4
  store float %56, ptr %55, align 4
  %Arg_0.18 = getelementptr inbounds [8192 x [32 x float]], ptr %arg0, i32 0, i32 %53, i32 %54
  %Arg_0.19 = load float, ptr %Arg_0.18, align 4, !invariant.load !297
  %Arg_2.3 = getelementptr inbounds [32 x [1 x float]], ptr %arg2, i32 0, i32 %54, i32 0
  %Arg_2.310 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %multiply.15 = fmul float %Arg_0.19, %Arg_2.310
  store float %multiply.15, ptr %reduction_input_address1, align 4
  %57 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_16__1(ptr %57, ptr %reduction_input_address1, ptr %return_buffer11)
  %58 = load float, ptr %return_buffer11, align 4
  store float %58, ptr %57, align 4
  br label %tile_loop.loop_header, !llvm.loop !397

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %is_full_tile-after

is_full_tile-false:                               ; preds = %y_in_tile.loop_body
  %59 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address15, align 4
  br label %tile_loop.loop_header13

tile_loop.loop_header13:                          ; preds = %x_in_tile-after, %is_full_tile-false
  %tile_loop.indvar16 = load i32, ptr %tile_loop.invar_address15, align 4
  %60 = icmp uge i32 %tile_loop.indvar16, 16
  br i1 %60, label %tile_loop.loop_exit12, label %tile_loop.loop_body14

tile_loop.loop_body14:                            ; preds = %tile_loop.loop_header13
  %invar.inc17 = add nuw nsw i32 %tile_loop.indvar16, 1
  store i32 %invar.inc17, ptr %tile_loop.invar_address15, align 4
  %61 = icmp eq i32 %tile_loop.indvar16, 0
  %62 = mul i32 %tile_loop.indvar16, 32
  %63 = add i32 %62, 0
  %x_loc18 = add i32 %63, %59
  %64 = add i32 %tile_origin.1, %y_in_tile.indvar
  %65 = add i32 %tile_origin.2, %x_loc18
  %66 = icmp ult i32 %x_loc18, %tile_bound4
  br i1 %66, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body14
  br label %tile_loop.loop_header13, !llvm.loop !398

tile_loop.loop_exit12:                            ; preds = %tile_loop.loop_header13
  br label %is_full_tile-after

x_in_tile-true:                                   ; preds = %tile_loop.loop_body14
  %Arg_0.119 = getelementptr inbounds [8192 x [32 x float]], ptr %arg0, i32 0, i32 %64, i32 %65
  %Arg_0.120 = load float, ptr %Arg_0.119, align 4, !invariant.load !297
  %Arg_1.221 = getelementptr inbounds [32 x [1 x float]], ptr %arg1, i32 0, i32 %65, i32 0
  %Arg_1.222 = load float, ptr %Arg_1.221, align 4, !invariant.load !297
  %multiply.623 = fmul float %Arg_0.120, %Arg_1.222
  store float %multiply.623, ptr %reduction_input_address, align 4
  %67 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_8__1(ptr %67, ptr %reduction_input_address, ptr %return_buffer24)
  %68 = load float, ptr %return_buffer24, align 4
  store float %68, ptr %67, align 4
  %Arg_0.125 = getelementptr inbounds [8192 x [32 x float]], ptr %arg0, i32 0, i32 %64, i32 %65
  %Arg_0.126 = load float, ptr %Arg_0.125, align 4, !invariant.load !297
  %Arg_2.327 = getelementptr inbounds [32 x [1 x float]], ptr %arg2, i32 0, i32 %65, i32 0
  %Arg_2.328 = load float, ptr %Arg_2.327, align 4, !invariant.load !297
  %multiply.1529 = fmul float %Arg_0.126, %Arg_2.328
  store float %multiply.1529, ptr %reduction_input_address1, align 4
  %69 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_16__1(ptr %69, ptr %reduction_input_address1, ptr %return_buffer30)
  %70 = load float, ptr %return_buffer30, align 4
  store float %70, ptr %69, align 4
  br label %x_in_tile-after

intra_warp_reduce_write-true:                     ; preds = %y_in_tile.loop_exit
  %71 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache32, i32 0, i32 %7, i32 0, i32 %32
  %72 = addrspacecast ptr addrspace(3) %71 to ptr
  %73 = load float, ptr %current_output, align 4
  store float %73, ptr %72, align 4
  br label %intra_warp_reduce_write-after

inter_warp_reduce-true:                           ; preds = %intra_warp_reduce_write-after
  %74 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache32, i32 0, i32 %7, i32 0, i32 %lane_id
  %75 = addrspacecast ptr addrspace(3) %74 to ptr
  store float %region_0_22_constant_7, ptr %initial_value_addr, align 4
  %76 = icmp ult i32 %thread_id.x, 1
  %77 = select i1 %76, ptr %75, ptr %initial_value_addr
  %78 = icmp eq i32 %thread_id.x, 0
  br i1 %78, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %inter_warp_reduce-true
  br label %inter_warp_reduce-after

reduction_write_output-true:                      ; preds = %inter_warp_reduce-true
  %79 = mul i32 %thread_id.x, 1
  %80 = add i32 %tile_origin.1, %thread_id.y
  %81 = add i32 %tile_origin.2, %79
  %82 = add i32 %81, 0
  %83 = udiv i32 %80, 1
  %output_element_address = getelementptr inbounds [8192 x float], ptr %arg3, i32 0, i32 %83
  %output = load float, ptr %77, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

intra_warp_reduce_write-true61:                   ; preds = %inter_warp_reduce-after
  %84 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache33, i32 0, i32 %7, i32 0, i32 %45
  %85 = addrspacecast ptr addrspace(3) %84 to ptr
  %86 = load float, ptr %current_output45, align 4
  store float %86, ptr %85, align 4
  br label %intra_warp_reduce_write-after62

inter_warp_reduce-true63:                         ; preds = %intra_warp_reduce_write-after62
  %87 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache33, i32 0, i32 %7, i32 0, i32 %lane_id
  %88 = addrspacecast ptr addrspace(3) %87 to ptr
  store float %region_0_22_constant_73, ptr %initial_value_addr65, align 4
  %89 = icmp ult i32 %thread_id.x, 1
  %90 = select i1 %89, ptr %88, ptr %initial_value_addr65
  %91 = icmp eq i32 %thread_id.x, 0
  br i1 %91, label %reduction_write_output-true66, label %reduction_write_output-after67

reduction_write_output-after67:                   ; preds = %reduction_write_output-true66, %inter_warp_reduce-true63
  br label %inter_warp_reduce-after64

reduction_write_output-true66:                    ; preds = %inter_warp_reduce-true63
  %92 = mul i32 %thread_id.x, 1
  %93 = add i32 %tile_origin.1, %thread_id.y
  %94 = add i32 %tile_origin.2, %92
  %95 = add i32 %94, 0
  %96 = udiv i32 %93, 1
  %output_element_address68 = getelementptr inbounds [8192 x float], ptr %arg4, i32 0, i32 %96
  %output69 = load float, ptr %90, align 4
  store float %output69, ptr %output_element_address68, align 4
  br label %reduction_write_output-after67
}

define internal void @region_1_8__1(ptr dereferenceable(4) %Arg_0.9.typed, ptr dereferenceable(4) %Arg_1.10.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.11.typed = alloca float, align 4
  %Arg_0.9 = load float, ptr %Arg_0.9.typed, align 4
  %Arg_1.10 = load float, ptr %Arg_1.10.typed, align 4
  %add.11 = fadd float %Arg_0.9, %Arg_1.10
  store float %add.11, ptr %add.11.typed, align 4
  %load_ret_value = load float, ptr %add.11.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_16__1(ptr dereferenceable(4) %Arg_0.17.typed, ptr dereferenceable(4) %Arg_1.18.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.19.typed = alloca float, align 4
  %Arg_0.17 = load float, ptr %Arg_0.17.typed, align 4
  %Arg_1.18 = load float, ptr %Arg_1.18.typed, align 4
  %add.19 = fadd float %Arg_0.17, %Arg_1.18
  store float %add.19, ptr %add.19.typed, align 4
  %load_ret_value = load float, ptr %add.19.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_639(ptr noalias align 128 dereferenceable(1048576) %arg0, ptr noalias align 16 dereferenceable(128) %arg1, ptr noalias align 16 dereferenceable(128) %arg2, ptr noalias align 16 dereferenceable(128) %arg3, ptr noalias align 16 dereferenceable(128) %arg4, ptr noalias align 16 dereferenceable(128) %arg5, ptr noalias align 16 dereferenceable(128) %arg6, ptr noalias align 16 dereferenceable(128) %arg7, ptr noalias align 16 dereferenceable(128) %arg8, ptr noalias align 128 dereferenceable(32768) %arg9, ptr noalias align 128 dereferenceable(32768) %arg10, ptr noalias align 128 dereferenceable(32768) %arg11, ptr noalias align 128 dereferenceable(32768) %arg12, ptr noalias align 128 dereferenceable(32768) %arg13, ptr noalias align 128 dereferenceable(32768) %arg14, ptr noalias align 128 dereferenceable(32768) %arg15, ptr noalias align 128 dereferenceable(32768) %arg16) {
entry:
  %initial_value_addr293 = alloca float, align 4
  %return_buffer288 = alloca float, align 4
  %result_from_other_lane286 = alloca float, align 4
  %return_buffer285 = alloca float, align 4
  %result_from_other_lane283 = alloca float, align 4
  %return_buffer282 = alloca float, align 4
  %result_from_other_lane280 = alloca float, align 4
  %return_buffer279 = alloca float, align 4
  %result_from_other_lane277 = alloca float, align 4
  %return_buffer276 = alloca float, align 4
  %result_from_other_lane274 = alloca float, align 4
  %initial_value_addr268 = alloca float, align 4
  %return_buffer263 = alloca float, align 4
  %result_from_other_lane261 = alloca float, align 4
  %return_buffer260 = alloca float, align 4
  %result_from_other_lane258 = alloca float, align 4
  %return_buffer257 = alloca float, align 4
  %result_from_other_lane255 = alloca float, align 4
  %return_buffer254 = alloca float, align 4
  %result_from_other_lane252 = alloca float, align 4
  %return_buffer251 = alloca float, align 4
  %result_from_other_lane249 = alloca float, align 4
  %initial_value_addr243 = alloca float, align 4
  %return_buffer238 = alloca float, align 4
  %result_from_other_lane236 = alloca float, align 4
  %return_buffer235 = alloca float, align 4
  %result_from_other_lane233 = alloca float, align 4
  %return_buffer232 = alloca float, align 4
  %result_from_other_lane230 = alloca float, align 4
  %return_buffer229 = alloca float, align 4
  %result_from_other_lane227 = alloca float, align 4
  %return_buffer226 = alloca float, align 4
  %result_from_other_lane224 = alloca float, align 4
  %initial_value_addr218 = alloca float, align 4
  %return_buffer213 = alloca float, align 4
  %result_from_other_lane211 = alloca float, align 4
  %return_buffer210 = alloca float, align 4
  %result_from_other_lane208 = alloca float, align 4
  %return_buffer207 = alloca float, align 4
  %result_from_other_lane205 = alloca float, align 4
  %return_buffer204 = alloca float, align 4
  %result_from_other_lane202 = alloca float, align 4
  %return_buffer201 = alloca float, align 4
  %result_from_other_lane199 = alloca float, align 4
  %initial_value_addr193 = alloca float, align 4
  %return_buffer188 = alloca float, align 4
  %result_from_other_lane186 = alloca float, align 4
  %return_buffer185 = alloca float, align 4
  %result_from_other_lane183 = alloca float, align 4
  %return_buffer182 = alloca float, align 4
  %result_from_other_lane180 = alloca float, align 4
  %return_buffer179 = alloca float, align 4
  %result_from_other_lane177 = alloca float, align 4
  %return_buffer176 = alloca float, align 4
  %result_from_other_lane174 = alloca float, align 4
  %initial_value_addr168 = alloca float, align 4
  %return_buffer163 = alloca float, align 4
  %result_from_other_lane161 = alloca float, align 4
  %return_buffer160 = alloca float, align 4
  %result_from_other_lane158 = alloca float, align 4
  %return_buffer157 = alloca float, align 4
  %result_from_other_lane155 = alloca float, align 4
  %return_buffer154 = alloca float, align 4
  %result_from_other_lane152 = alloca float, align 4
  %return_buffer151 = alloca float, align 4
  %result_from_other_lane149 = alloca float, align 4
  %initial_value_addr143 = alloca float, align 4
  %return_buffer138 = alloca float, align 4
  %result_from_other_lane136 = alloca float, align 4
  %return_buffer135 = alloca float, align 4
  %result_from_other_lane133 = alloca float, align 4
  %return_buffer132 = alloca float, align 4
  %result_from_other_lane130 = alloca float, align 4
  %return_buffer129 = alloca float, align 4
  %result_from_other_lane127 = alloca float, align 4
  %return_buffer126 = alloca float, align 4
  %result_from_other_lane124 = alloca float, align 4
  %initial_value_addr = alloca float, align 4
  %return_buffer122 = alloca float, align 4
  %result_from_other_lane120 = alloca float, align 4
  %return_buffer119 = alloca float, align 4
  %result_from_other_lane117 = alloca float, align 4
  %return_buffer116 = alloca float, align 4
  %result_from_other_lane114 = alloca float, align 4
  %return_buffer113 = alloca float, align 4
  %result_from_other_lane111 = alloca float, align 4
  %return_buffer110 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer108 = alloca float, align 4
  %return_buffer102 = alloca float, align 4
  %return_buffer96 = alloca float, align 4
  %return_buffer90 = alloca float, align 4
  %return_buffer84 = alloca float, align 4
  %return_buffer78 = alloca float, align 4
  %return_buffer72 = alloca float, align 4
  %return_buffer66 = alloca float, align 4
  %tile_loop.invar_address57 = alloca i32, align 4
  %return_buffer53 = alloca float, align 4
  %return_buffer49 = alloca float, align 4
  %return_buffer45 = alloca float, align 4
  %return_buffer41 = alloca float, align 4
  %return_buffer37 = alloca float, align 4
  %return_buffer33 = alloca float, align 4
  %return_buffer29 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result20 = alloca float, align 4
  %reduction_input_address19 = alloca float, align 4
  %partial_reduction_result17 = alloca float, align 4
  %reduction_input_address16 = alloca float, align 4
  %partial_reduction_result14 = alloca float, align 4
  %reduction_input_address13 = alloca float, align 4
  %partial_reduction_result11 = alloca float, align 4
  %reduction_input_address10 = alloca float, align 4
  %partial_reduction_result8 = alloca float, align 4
  %reduction_input_address7 = alloca float, align 4
  %partial_reduction_result5 = alloca float, align 4
  %reduction_input_address4 = alloca float, align 4
  %partial_reduction_result2 = alloca float, align 4
  %reduction_input_address1 = alloca float, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %inter_warp_reduce-after292, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_76_constant_13 = load float, ptr @42, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_76_constant_13, ptr %2, align 4
  %region_0_76_constant_133 = load float, ptr @42, align 4
  %3 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  store float %region_0_76_constant_133, ptr %3, align 4
  %region_0_76_constant_136 = load float, ptr @42, align 4
  %4 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  store float %region_0_76_constant_136, ptr %4, align 4
  %region_0_76_constant_139 = load float, ptr @42, align 4
  %5 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  store float %region_0_76_constant_139, ptr %5, align 4
  %region_0_76_constant_1312 = load float, ptr @42, align 4
  %6 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  store float %region_0_76_constant_1312, ptr %6, align 4
  %region_0_76_constant_1315 = load float, ptr @42, align 4
  %7 = getelementptr inbounds float, ptr %partial_reduction_result14, i32 0
  store float %region_0_76_constant_1315, ptr %7, align 4
  %region_0_76_constant_1318 = load float, ptr @42, align 4
  %8 = getelementptr inbounds float, ptr %partial_reduction_result17, i32 0
  store float %region_0_76_constant_1318, ptr %8, align 4
  %region_0_76_constant_1321 = load float, ptr @42, align 4
  %9 = getelementptr inbounds float, ptr %partial_reduction_result20, i32 0
  store float %region_0_76_constant_1321, ptr %9, align 4
  %10 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !352
  %11 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !368
  %12 = urem i32 %10, 32
  %13 = udiv i32 %10, 32
  %14 = mul i32 %11, 3
  %15 = add i32 %14, %13
  %16 = icmp ult i32 %15, 8192
  br i1 %16, label %17, label %early_return

17:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %12, 32
  %thread_id.y = udiv i32 %12, 32
  %lane_id = urem i32 %12, 32
  %18 = udiv i32 %15, 1
  %19 = urem i32 %18, 1
  %20 = udiv i32 %15, 1
  %21 = urem i32 %20, 8192
  %22 = udiv i32 %15, 8192
  %23 = icmp eq i32 %21, 8191
  %tile_bound = select i1 %23, i32 1, i32 1
  %24 = icmp eq i32 %19, 0
  %tile_bound22 = select i1 %24, i32 32, i32 512
  %tile_origin.0 = mul i32 %22, 1
  %tile_origin.1 = mul i32 %21, 1
  %tile_origin.2 = mul i32 %19, 512
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %is_full_tile-after, %17
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %25 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %25, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 1
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %26 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %27 = icmp eq i32 512, %tile_bound22
  br i1 %27, label %is_full_tile-true, label %is_full_tile-false

is_full_tile-after:                               ; preds = %tile_loop.loop_exit54, %tile_loop.loop_exit
  br label %y_in_tile.loop_header, !llvm.loop !399

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %partial_reduction_result109 = load float, ptr %current_output, align 4
  %28 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result109, i32 16, i32 31)
  store float %28, ptr %result_from_other_lane, align 4
  call void @region_1_14__1(ptr %current_output, ptr %result_from_other_lane, ptr %return_buffer110)
  %29 = load float, ptr %return_buffer110, align 4
  store float %29, ptr %current_output, align 4
  %partial_reduction_result112 = load float, ptr %current_output, align 4
  %30 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result112, i32 8, i32 31)
  store float %30, ptr %result_from_other_lane111, align 4
  call void @region_1_14__1(ptr %current_output, ptr %result_from_other_lane111, ptr %return_buffer113)
  %31 = load float, ptr %return_buffer113, align 4
  store float %31, ptr %current_output, align 4
  %partial_reduction_result115 = load float, ptr %current_output, align 4
  %32 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result115, i32 4, i32 31)
  store float %32, ptr %result_from_other_lane114, align 4
  call void @region_1_14__1(ptr %current_output, ptr %result_from_other_lane114, ptr %return_buffer116)
  %33 = load float, ptr %return_buffer116, align 4
  store float %33, ptr %current_output, align 4
  %partial_reduction_result118 = load float, ptr %current_output, align 4
  %34 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result118, i32 2, i32 31)
  store float %34, ptr %result_from_other_lane117, align 4
  call void @region_1_14__1(ptr %current_output, ptr %result_from_other_lane117, ptr %return_buffer119)
  %35 = load float, ptr %return_buffer119, align 4
  store float %35, ptr %current_output, align 4
  %partial_reduction_result121 = load float, ptr %current_output, align 4
  %36 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result121, i32 1, i32 31)
  store float %36, ptr %result_from_other_lane120, align 4
  call void @region_1_14__1(ptr %current_output, ptr %result_from_other_lane120, ptr %return_buffer122)
  %37 = load float, ptr %return_buffer122, align 4
  store float %37, ptr %current_output, align 4
  %38 = udiv i32 %thread_id.x, 32
  %39 = icmp eq i32 %lane_id, 0
  br i1 %39, label %intra_warp_reduce_write-true, label %intra_warp_reduce_write-after

intra_warp_reduce_write-after:                    ; preds = %intra_warp_reduce_write-true, %y_in_tile.loop_exit
  call void @llvm.nvvm.barrier0()
  %40 = icmp eq i32 %38, 0
  br i1 %40, label %inter_warp_reduce-true, label %inter_warp_reduce-after

inter_warp_reduce-after:                          ; preds = %reduction_write_output-after, %intra_warp_reduce_write-after
  %current_output123 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  %partial_reduction_result125 = load float, ptr %current_output123, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result125, i32 16, i32 31)
  store float %41, ptr %result_from_other_lane124, align 4
  call void @region_2_22__1(ptr %current_output123, ptr %result_from_other_lane124, ptr %return_buffer126)
  %42 = load float, ptr %return_buffer126, align 4
  store float %42, ptr %current_output123, align 4
  %partial_reduction_result128 = load float, ptr %current_output123, align 4
  %43 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result128, i32 8, i32 31)
  store float %43, ptr %result_from_other_lane127, align 4
  call void @region_2_22__1(ptr %current_output123, ptr %result_from_other_lane127, ptr %return_buffer129)
  %44 = load float, ptr %return_buffer129, align 4
  store float %44, ptr %current_output123, align 4
  %partial_reduction_result131 = load float, ptr %current_output123, align 4
  %45 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result131, i32 4, i32 31)
  store float %45, ptr %result_from_other_lane130, align 4
  call void @region_2_22__1(ptr %current_output123, ptr %result_from_other_lane130, ptr %return_buffer132)
  %46 = load float, ptr %return_buffer132, align 4
  store float %46, ptr %current_output123, align 4
  %partial_reduction_result134 = load float, ptr %current_output123, align 4
  %47 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result134, i32 2, i32 31)
  store float %47, ptr %result_from_other_lane133, align 4
  call void @region_2_22__1(ptr %current_output123, ptr %result_from_other_lane133, ptr %return_buffer135)
  %48 = load float, ptr %return_buffer135, align 4
  store float %48, ptr %current_output123, align 4
  %partial_reduction_result137 = load float, ptr %current_output123, align 4
  %49 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result137, i32 1, i32 31)
  store float %49, ptr %result_from_other_lane136, align 4
  call void @region_2_22__1(ptr %current_output123, ptr %result_from_other_lane136, ptr %return_buffer138)
  %50 = load float, ptr %return_buffer138, align 4
  store float %50, ptr %current_output123, align 4
  %51 = udiv i32 %thread_id.x, 32
  %52 = icmp eq i32 %lane_id, 0
  br i1 %52, label %intra_warp_reduce_write-true139, label %intra_warp_reduce_write-after140

intra_warp_reduce_write-after140:                 ; preds = %intra_warp_reduce_write-true139, %inter_warp_reduce-after
  call void @llvm.nvvm.barrier0()
  %53 = icmp eq i32 %51, 0
  br i1 %53, label %inter_warp_reduce-true141, label %inter_warp_reduce-after142

inter_warp_reduce-after142:                       ; preds = %reduction_write_output-after145, %intra_warp_reduce_write-after140
  %current_output148 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  %partial_reduction_result150 = load float, ptr %current_output148, align 4
  %54 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result150, i32 16, i32 31)
  store float %54, ptr %result_from_other_lane149, align 4
  call void @region_3_30__1(ptr %current_output148, ptr %result_from_other_lane149, ptr %return_buffer151)
  %55 = load float, ptr %return_buffer151, align 4
  store float %55, ptr %current_output148, align 4
  %partial_reduction_result153 = load float, ptr %current_output148, align 4
  %56 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result153, i32 8, i32 31)
  store float %56, ptr %result_from_other_lane152, align 4
  call void @region_3_30__1(ptr %current_output148, ptr %result_from_other_lane152, ptr %return_buffer154)
  %57 = load float, ptr %return_buffer154, align 4
  store float %57, ptr %current_output148, align 4
  %partial_reduction_result156 = load float, ptr %current_output148, align 4
  %58 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result156, i32 4, i32 31)
  store float %58, ptr %result_from_other_lane155, align 4
  call void @region_3_30__1(ptr %current_output148, ptr %result_from_other_lane155, ptr %return_buffer157)
  %59 = load float, ptr %return_buffer157, align 4
  store float %59, ptr %current_output148, align 4
  %partial_reduction_result159 = load float, ptr %current_output148, align 4
  %60 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result159, i32 2, i32 31)
  store float %60, ptr %result_from_other_lane158, align 4
  call void @region_3_30__1(ptr %current_output148, ptr %result_from_other_lane158, ptr %return_buffer160)
  %61 = load float, ptr %return_buffer160, align 4
  store float %61, ptr %current_output148, align 4
  %partial_reduction_result162 = load float, ptr %current_output148, align 4
  %62 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result162, i32 1, i32 31)
  store float %62, ptr %result_from_other_lane161, align 4
  call void @region_3_30__1(ptr %current_output148, ptr %result_from_other_lane161, ptr %return_buffer163)
  %63 = load float, ptr %return_buffer163, align 4
  store float %63, ptr %current_output148, align 4
  %64 = udiv i32 %thread_id.x, 32
  %65 = icmp eq i32 %lane_id, 0
  br i1 %65, label %intra_warp_reduce_write-true164, label %intra_warp_reduce_write-after165

intra_warp_reduce_write-after165:                 ; preds = %intra_warp_reduce_write-true164, %inter_warp_reduce-after142
  call void @llvm.nvvm.barrier0()
  %66 = icmp eq i32 %64, 0
  br i1 %66, label %inter_warp_reduce-true166, label %inter_warp_reduce-after167

inter_warp_reduce-after167:                       ; preds = %reduction_write_output-after170, %intra_warp_reduce_write-after165
  %current_output173 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  %partial_reduction_result175 = load float, ptr %current_output173, align 4
  %67 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result175, i32 16, i32 31)
  store float %67, ptr %result_from_other_lane174, align 4
  call void @region_4_38__1(ptr %current_output173, ptr %result_from_other_lane174, ptr %return_buffer176)
  %68 = load float, ptr %return_buffer176, align 4
  store float %68, ptr %current_output173, align 4
  %partial_reduction_result178 = load float, ptr %current_output173, align 4
  %69 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result178, i32 8, i32 31)
  store float %69, ptr %result_from_other_lane177, align 4
  call void @region_4_38__1(ptr %current_output173, ptr %result_from_other_lane177, ptr %return_buffer179)
  %70 = load float, ptr %return_buffer179, align 4
  store float %70, ptr %current_output173, align 4
  %partial_reduction_result181 = load float, ptr %current_output173, align 4
  %71 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result181, i32 4, i32 31)
  store float %71, ptr %result_from_other_lane180, align 4
  call void @region_4_38__1(ptr %current_output173, ptr %result_from_other_lane180, ptr %return_buffer182)
  %72 = load float, ptr %return_buffer182, align 4
  store float %72, ptr %current_output173, align 4
  %partial_reduction_result184 = load float, ptr %current_output173, align 4
  %73 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result184, i32 2, i32 31)
  store float %73, ptr %result_from_other_lane183, align 4
  call void @region_4_38__1(ptr %current_output173, ptr %result_from_other_lane183, ptr %return_buffer185)
  %74 = load float, ptr %return_buffer185, align 4
  store float %74, ptr %current_output173, align 4
  %partial_reduction_result187 = load float, ptr %current_output173, align 4
  %75 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result187, i32 1, i32 31)
  store float %75, ptr %result_from_other_lane186, align 4
  call void @region_4_38__1(ptr %current_output173, ptr %result_from_other_lane186, ptr %return_buffer188)
  %76 = load float, ptr %return_buffer188, align 4
  store float %76, ptr %current_output173, align 4
  %77 = udiv i32 %thread_id.x, 32
  %78 = icmp eq i32 %lane_id, 0
  br i1 %78, label %intra_warp_reduce_write-true189, label %intra_warp_reduce_write-after190

intra_warp_reduce_write-after190:                 ; preds = %intra_warp_reduce_write-true189, %inter_warp_reduce-after167
  call void @llvm.nvvm.barrier0()
  %79 = icmp eq i32 %77, 0
  br i1 %79, label %inter_warp_reduce-true191, label %inter_warp_reduce-after192

inter_warp_reduce-after192:                       ; preds = %reduction_write_output-after195, %intra_warp_reduce_write-after190
  %current_output198 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  %partial_reduction_result200 = load float, ptr %current_output198, align 4
  %80 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result200, i32 16, i32 31)
  store float %80, ptr %result_from_other_lane199, align 4
  call void @region_5_46__1(ptr %current_output198, ptr %result_from_other_lane199, ptr %return_buffer201)
  %81 = load float, ptr %return_buffer201, align 4
  store float %81, ptr %current_output198, align 4
  %partial_reduction_result203 = load float, ptr %current_output198, align 4
  %82 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result203, i32 8, i32 31)
  store float %82, ptr %result_from_other_lane202, align 4
  call void @region_5_46__1(ptr %current_output198, ptr %result_from_other_lane202, ptr %return_buffer204)
  %83 = load float, ptr %return_buffer204, align 4
  store float %83, ptr %current_output198, align 4
  %partial_reduction_result206 = load float, ptr %current_output198, align 4
  %84 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result206, i32 4, i32 31)
  store float %84, ptr %result_from_other_lane205, align 4
  call void @region_5_46__1(ptr %current_output198, ptr %result_from_other_lane205, ptr %return_buffer207)
  %85 = load float, ptr %return_buffer207, align 4
  store float %85, ptr %current_output198, align 4
  %partial_reduction_result209 = load float, ptr %current_output198, align 4
  %86 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result209, i32 2, i32 31)
  store float %86, ptr %result_from_other_lane208, align 4
  call void @region_5_46__1(ptr %current_output198, ptr %result_from_other_lane208, ptr %return_buffer210)
  %87 = load float, ptr %return_buffer210, align 4
  store float %87, ptr %current_output198, align 4
  %partial_reduction_result212 = load float, ptr %current_output198, align 4
  %88 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result212, i32 1, i32 31)
  store float %88, ptr %result_from_other_lane211, align 4
  call void @region_5_46__1(ptr %current_output198, ptr %result_from_other_lane211, ptr %return_buffer213)
  %89 = load float, ptr %return_buffer213, align 4
  store float %89, ptr %current_output198, align 4
  %90 = udiv i32 %thread_id.x, 32
  %91 = icmp eq i32 %lane_id, 0
  br i1 %91, label %intra_warp_reduce_write-true214, label %intra_warp_reduce_write-after215

intra_warp_reduce_write-after215:                 ; preds = %intra_warp_reduce_write-true214, %inter_warp_reduce-after192
  call void @llvm.nvvm.barrier0()
  %92 = icmp eq i32 %90, 0
  br i1 %92, label %inter_warp_reduce-true216, label %inter_warp_reduce-after217

inter_warp_reduce-after217:                       ; preds = %reduction_write_output-after220, %intra_warp_reduce_write-after215
  %current_output223 = getelementptr inbounds float, ptr %partial_reduction_result14, i32 0
  %partial_reduction_result225 = load float, ptr %current_output223, align 4
  %93 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result225, i32 16, i32 31)
  store float %93, ptr %result_from_other_lane224, align 4
  call void @region_6_54__1(ptr %current_output223, ptr %result_from_other_lane224, ptr %return_buffer226)
  %94 = load float, ptr %return_buffer226, align 4
  store float %94, ptr %current_output223, align 4
  %partial_reduction_result228 = load float, ptr %current_output223, align 4
  %95 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result228, i32 8, i32 31)
  store float %95, ptr %result_from_other_lane227, align 4
  call void @region_6_54__1(ptr %current_output223, ptr %result_from_other_lane227, ptr %return_buffer229)
  %96 = load float, ptr %return_buffer229, align 4
  store float %96, ptr %current_output223, align 4
  %partial_reduction_result231 = load float, ptr %current_output223, align 4
  %97 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result231, i32 4, i32 31)
  store float %97, ptr %result_from_other_lane230, align 4
  call void @region_6_54__1(ptr %current_output223, ptr %result_from_other_lane230, ptr %return_buffer232)
  %98 = load float, ptr %return_buffer232, align 4
  store float %98, ptr %current_output223, align 4
  %partial_reduction_result234 = load float, ptr %current_output223, align 4
  %99 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result234, i32 2, i32 31)
  store float %99, ptr %result_from_other_lane233, align 4
  call void @region_6_54__1(ptr %current_output223, ptr %result_from_other_lane233, ptr %return_buffer235)
  %100 = load float, ptr %return_buffer235, align 4
  store float %100, ptr %current_output223, align 4
  %partial_reduction_result237 = load float, ptr %current_output223, align 4
  %101 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result237, i32 1, i32 31)
  store float %101, ptr %result_from_other_lane236, align 4
  call void @region_6_54__1(ptr %current_output223, ptr %result_from_other_lane236, ptr %return_buffer238)
  %102 = load float, ptr %return_buffer238, align 4
  store float %102, ptr %current_output223, align 4
  %103 = udiv i32 %thread_id.x, 32
  %104 = icmp eq i32 %lane_id, 0
  br i1 %104, label %intra_warp_reduce_write-true239, label %intra_warp_reduce_write-after240

intra_warp_reduce_write-after240:                 ; preds = %intra_warp_reduce_write-true239, %inter_warp_reduce-after217
  call void @llvm.nvvm.barrier0()
  %105 = icmp eq i32 %103, 0
  br i1 %105, label %inter_warp_reduce-true241, label %inter_warp_reduce-after242

inter_warp_reduce-after242:                       ; preds = %reduction_write_output-after245, %intra_warp_reduce_write-after240
  %current_output248 = getelementptr inbounds float, ptr %partial_reduction_result17, i32 0
  %partial_reduction_result250 = load float, ptr %current_output248, align 4
  %106 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result250, i32 16, i32 31)
  store float %106, ptr %result_from_other_lane249, align 4
  call void @region_7_62__1(ptr %current_output248, ptr %result_from_other_lane249, ptr %return_buffer251)
  %107 = load float, ptr %return_buffer251, align 4
  store float %107, ptr %current_output248, align 4
  %partial_reduction_result253 = load float, ptr %current_output248, align 4
  %108 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result253, i32 8, i32 31)
  store float %108, ptr %result_from_other_lane252, align 4
  call void @region_7_62__1(ptr %current_output248, ptr %result_from_other_lane252, ptr %return_buffer254)
  %109 = load float, ptr %return_buffer254, align 4
  store float %109, ptr %current_output248, align 4
  %partial_reduction_result256 = load float, ptr %current_output248, align 4
  %110 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result256, i32 4, i32 31)
  store float %110, ptr %result_from_other_lane255, align 4
  call void @region_7_62__1(ptr %current_output248, ptr %result_from_other_lane255, ptr %return_buffer257)
  %111 = load float, ptr %return_buffer257, align 4
  store float %111, ptr %current_output248, align 4
  %partial_reduction_result259 = load float, ptr %current_output248, align 4
  %112 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result259, i32 2, i32 31)
  store float %112, ptr %result_from_other_lane258, align 4
  call void @region_7_62__1(ptr %current_output248, ptr %result_from_other_lane258, ptr %return_buffer260)
  %113 = load float, ptr %return_buffer260, align 4
  store float %113, ptr %current_output248, align 4
  %partial_reduction_result262 = load float, ptr %current_output248, align 4
  %114 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result262, i32 1, i32 31)
  store float %114, ptr %result_from_other_lane261, align 4
  call void @region_7_62__1(ptr %current_output248, ptr %result_from_other_lane261, ptr %return_buffer263)
  %115 = load float, ptr %return_buffer263, align 4
  store float %115, ptr %current_output248, align 4
  %116 = udiv i32 %thread_id.x, 32
  %117 = icmp eq i32 %lane_id, 0
  br i1 %117, label %intra_warp_reduce_write-true264, label %intra_warp_reduce_write-after265

intra_warp_reduce_write-after265:                 ; preds = %intra_warp_reduce_write-true264, %inter_warp_reduce-after242
  call void @llvm.nvvm.barrier0()
  %118 = icmp eq i32 %116, 0
  br i1 %118, label %inter_warp_reduce-true266, label %inter_warp_reduce-after267

inter_warp_reduce-after267:                       ; preds = %reduction_write_output-after270, %intra_warp_reduce_write-after265
  %current_output273 = getelementptr inbounds float, ptr %partial_reduction_result20, i32 0
  %partial_reduction_result275 = load float, ptr %current_output273, align 4
  %119 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result275, i32 16, i32 31)
  store float %119, ptr %result_from_other_lane274, align 4
  call void @region_8_70__1(ptr %current_output273, ptr %result_from_other_lane274, ptr %return_buffer276)
  %120 = load float, ptr %return_buffer276, align 4
  store float %120, ptr %current_output273, align 4
  %partial_reduction_result278 = load float, ptr %current_output273, align 4
  %121 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result278, i32 8, i32 31)
  store float %121, ptr %result_from_other_lane277, align 4
  call void @region_8_70__1(ptr %current_output273, ptr %result_from_other_lane277, ptr %return_buffer279)
  %122 = load float, ptr %return_buffer279, align 4
  store float %122, ptr %current_output273, align 4
  %partial_reduction_result281 = load float, ptr %current_output273, align 4
  %123 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result281, i32 4, i32 31)
  store float %123, ptr %result_from_other_lane280, align 4
  call void @region_8_70__1(ptr %current_output273, ptr %result_from_other_lane280, ptr %return_buffer282)
  %124 = load float, ptr %return_buffer282, align 4
  store float %124, ptr %current_output273, align 4
  %partial_reduction_result284 = load float, ptr %current_output273, align 4
  %125 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result284, i32 2, i32 31)
  store float %125, ptr %result_from_other_lane283, align 4
  call void @region_8_70__1(ptr %current_output273, ptr %result_from_other_lane283, ptr %return_buffer285)
  %126 = load float, ptr %return_buffer285, align 4
  store float %126, ptr %current_output273, align 4
  %partial_reduction_result287 = load float, ptr %current_output273, align 4
  %127 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result287, i32 1, i32 31)
  store float %127, ptr %result_from_other_lane286, align 4
  call void @region_8_70__1(ptr %current_output273, ptr %result_from_other_lane286, ptr %return_buffer288)
  %128 = load float, ptr %return_buffer288, align 4
  store float %128, ptr %current_output273, align 4
  %129 = udiv i32 %thread_id.x, 32
  %130 = icmp eq i32 %lane_id, 0
  br i1 %130, label %intra_warp_reduce_write-true289, label %intra_warp_reduce_write-after290

intra_warp_reduce_write-after290:                 ; preds = %intra_warp_reduce_write-true289, %inter_warp_reduce-after267
  call void @llvm.nvvm.barrier0()
  %131 = icmp eq i32 %129, 0
  br i1 %131, label %inter_warp_reduce-true291, label %inter_warp_reduce-after292

inter_warp_reduce-after292:                       ; preds = %reduction_write_output-after295, %intra_warp_reduce_write-after290
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

is_full_tile-true:                                ; preds = %y_in_tile.loop_body
  %132 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %tile_loop.loop_body, %is_full_tile-true
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %133 = icmp uge i32 %tile_loop.indvar, 16
  br i1 %133, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc23 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc23, ptr %tile_loop.invar_address, align 4
  %134 = icmp eq i32 %tile_loop.indvar, 0
  %135 = mul i32 %tile_loop.indvar, 32
  %136 = add i32 %135, 0
  %x_loc = add i32 %136, %132
  %137 = add i32 %tile_origin.1, %y_in_tile.indvar
  %138 = add i32 %tile_origin.2, %x_loc
  %Arg_0.1 = getelementptr inbounds [8192 x [32 x float]], ptr %arg0, i32 0, i32 %137, i32 %138
  %Arg_0.124 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %Arg_1.2 = getelementptr inbounds [32 x [1 x float]], ptr %arg1, i32 0, i32 %138, i32 0
  %Arg_1.225 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %multiply.12 = fmul float %Arg_0.124, %Arg_1.225
  store float %multiply.12, ptr %reduction_input_address, align 4
  %139 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_14__1(ptr %139, ptr %reduction_input_address, ptr %return_buffer)
  %140 = load float, ptr %return_buffer, align 4
  store float %140, ptr %139, align 4
  %Arg_0.126 = getelementptr inbounds [8192 x [32 x float]], ptr %arg0, i32 0, i32 %137, i32 %138
  %Arg_0.127 = load float, ptr %Arg_0.126, align 4, !invariant.load !297
  %Arg_2.3 = getelementptr inbounds [32 x [1 x float]], ptr %arg2, i32 0, i32 %138, i32 0
  %Arg_2.328 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %multiply.21 = fmul float %Arg_0.127, %Arg_2.328
  store float %multiply.21, ptr %reduction_input_address1, align 4
  %141 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_22__1(ptr %141, ptr %reduction_input_address1, ptr %return_buffer29)
  %142 = load float, ptr %return_buffer29, align 4
  store float %142, ptr %141, align 4
  %Arg_0.130 = getelementptr inbounds [8192 x [32 x float]], ptr %arg0, i32 0, i32 %137, i32 %138
  %Arg_0.131 = load float, ptr %Arg_0.130, align 4, !invariant.load !297
  %Arg_3.4 = getelementptr inbounds [32 x [1 x float]], ptr %arg3, i32 0, i32 %138, i32 0
  %Arg_3.432 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  %multiply.29 = fmul float %Arg_0.131, %Arg_3.432
  store float %multiply.29, ptr %reduction_input_address4, align 4
  %143 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  call void @region_3_30__1(ptr %143, ptr %reduction_input_address4, ptr %return_buffer33)
  %144 = load float, ptr %return_buffer33, align 4
  store float %144, ptr %143, align 4
  %Arg_0.134 = getelementptr inbounds [8192 x [32 x float]], ptr %arg0, i32 0, i32 %137, i32 %138
  %Arg_0.135 = load float, ptr %Arg_0.134, align 4, !invariant.load !297
  %Arg_4.5 = getelementptr inbounds [32 x [1 x float]], ptr %arg4, i32 0, i32 %138, i32 0
  %Arg_4.536 = load float, ptr %Arg_4.5, align 4, !invariant.load !297
  %multiply.37 = fmul float %Arg_0.135, %Arg_4.536
  store float %multiply.37, ptr %reduction_input_address7, align 4
  %145 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  call void @region_4_38__1(ptr %145, ptr %reduction_input_address7, ptr %return_buffer37)
  %146 = load float, ptr %return_buffer37, align 4
  store float %146, ptr %145, align 4
  %Arg_0.138 = getelementptr inbounds [8192 x [32 x float]], ptr %arg0, i32 0, i32 %137, i32 %138
  %Arg_0.139 = load float, ptr %Arg_0.138, align 4, !invariant.load !297
  %Arg_5.6 = getelementptr inbounds [32 x [1 x float]], ptr %arg5, i32 0, i32 %138, i32 0
  %Arg_5.640 = load float, ptr %Arg_5.6, align 4, !invariant.load !297
  %multiply.45 = fmul float %Arg_0.139, %Arg_5.640
  store float %multiply.45, ptr %reduction_input_address10, align 4
  %147 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  call void @region_5_46__1(ptr %147, ptr %reduction_input_address10, ptr %return_buffer41)
  %148 = load float, ptr %return_buffer41, align 4
  store float %148, ptr %147, align 4
  %Arg_0.142 = getelementptr inbounds [8192 x [32 x float]], ptr %arg0, i32 0, i32 %137, i32 %138
  %Arg_0.143 = load float, ptr %Arg_0.142, align 4, !invariant.load !297
  %Arg_6.7 = getelementptr inbounds [32 x [1 x float]], ptr %arg6, i32 0, i32 %138, i32 0
  %Arg_6.744 = load float, ptr %Arg_6.7, align 4, !invariant.load !297
  %multiply.53 = fmul float %Arg_0.143, %Arg_6.744
  store float %multiply.53, ptr %reduction_input_address13, align 4
  %149 = getelementptr inbounds float, ptr %partial_reduction_result14, i32 0
  call void @region_6_54__1(ptr %149, ptr %reduction_input_address13, ptr %return_buffer45)
  %150 = load float, ptr %return_buffer45, align 4
  store float %150, ptr %149, align 4
  %Arg_0.146 = getelementptr inbounds [8192 x [32 x float]], ptr %arg0, i32 0, i32 %137, i32 %138
  %Arg_0.147 = load float, ptr %Arg_0.146, align 4, !invariant.load !297
  %Arg_7.8 = getelementptr inbounds [32 x [1 x float]], ptr %arg7, i32 0, i32 %138, i32 0
  %Arg_7.848 = load float, ptr %Arg_7.8, align 4, !invariant.load !297
  %multiply.61 = fmul float %Arg_0.147, %Arg_7.848
  store float %multiply.61, ptr %reduction_input_address16, align 4
  %151 = getelementptr inbounds float, ptr %partial_reduction_result17, i32 0
  call void @region_7_62__1(ptr %151, ptr %reduction_input_address16, ptr %return_buffer49)
  %152 = load float, ptr %return_buffer49, align 4
  store float %152, ptr %151, align 4
  %Arg_0.150 = getelementptr inbounds [8192 x [32 x float]], ptr %arg0, i32 0, i32 %137, i32 %138
  %Arg_0.151 = load float, ptr %Arg_0.150, align 4, !invariant.load !297
  %Arg_8.9 = getelementptr inbounds [32 x [1 x float]], ptr %arg8, i32 0, i32 %138, i32 0
  %Arg_8.952 = load float, ptr %Arg_8.9, align 4, !invariant.load !297
  %multiply.69 = fmul float %Arg_0.151, %Arg_8.952
  store float %multiply.69, ptr %reduction_input_address19, align 4
  %153 = getelementptr inbounds float, ptr %partial_reduction_result20, i32 0
  call void @region_8_70__1(ptr %153, ptr %reduction_input_address19, ptr %return_buffer53)
  %154 = load float, ptr %return_buffer53, align 4
  store float %154, ptr %153, align 4
  br label %tile_loop.loop_header, !llvm.loop !400

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %is_full_tile-after

is_full_tile-false:                               ; preds = %y_in_tile.loop_body
  %155 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address57, align 4
  br label %tile_loop.loop_header55

tile_loop.loop_header55:                          ; preds = %x_in_tile-after, %is_full_tile-false
  %tile_loop.indvar58 = load i32, ptr %tile_loop.invar_address57, align 4
  %156 = icmp uge i32 %tile_loop.indvar58, 16
  br i1 %156, label %tile_loop.loop_exit54, label %tile_loop.loop_body56

tile_loop.loop_body56:                            ; preds = %tile_loop.loop_header55
  %invar.inc59 = add nuw nsw i32 %tile_loop.indvar58, 1
  store i32 %invar.inc59, ptr %tile_loop.invar_address57, align 4
  %157 = icmp eq i32 %tile_loop.indvar58, 0
  %158 = mul i32 %tile_loop.indvar58, 32
  %159 = add i32 %158, 0
  %x_loc60 = add i32 %159, %155
  %160 = add i32 %tile_origin.1, %y_in_tile.indvar
  %161 = add i32 %tile_origin.2, %x_loc60
  %162 = icmp ult i32 %x_loc60, %tile_bound22
  br i1 %162, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body56
  br label %tile_loop.loop_header55, !llvm.loop !401

tile_loop.loop_exit54:                            ; preds = %tile_loop.loop_header55
  br label %is_full_tile-after

x_in_tile-true:                                   ; preds = %tile_loop.loop_body56
  %Arg_0.161 = getelementptr inbounds [8192 x [32 x float]], ptr %arg0, i32 0, i32 %160, i32 %161
  %Arg_0.162 = load float, ptr %Arg_0.161, align 4, !invariant.load !297
  %Arg_1.263 = getelementptr inbounds [32 x [1 x float]], ptr %arg1, i32 0, i32 %161, i32 0
  %Arg_1.264 = load float, ptr %Arg_1.263, align 4, !invariant.load !297
  %multiply.1265 = fmul float %Arg_0.162, %Arg_1.264
  store float %multiply.1265, ptr %reduction_input_address, align 4
  %163 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_14__1(ptr %163, ptr %reduction_input_address, ptr %return_buffer66)
  %164 = load float, ptr %return_buffer66, align 4
  store float %164, ptr %163, align 4
  %Arg_0.167 = getelementptr inbounds [8192 x [32 x float]], ptr %arg0, i32 0, i32 %160, i32 %161
  %Arg_0.168 = load float, ptr %Arg_0.167, align 4, !invariant.load !297
  %Arg_2.369 = getelementptr inbounds [32 x [1 x float]], ptr %arg2, i32 0, i32 %161, i32 0
  %Arg_2.370 = load float, ptr %Arg_2.369, align 4, !invariant.load !297
  %multiply.2171 = fmul float %Arg_0.168, %Arg_2.370
  store float %multiply.2171, ptr %reduction_input_address1, align 4
  %165 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_22__1(ptr %165, ptr %reduction_input_address1, ptr %return_buffer72)
  %166 = load float, ptr %return_buffer72, align 4
  store float %166, ptr %165, align 4
  %Arg_0.173 = getelementptr inbounds [8192 x [32 x float]], ptr %arg0, i32 0, i32 %160, i32 %161
  %Arg_0.174 = load float, ptr %Arg_0.173, align 4, !invariant.load !297
  %Arg_3.475 = getelementptr inbounds [32 x [1 x float]], ptr %arg3, i32 0, i32 %161, i32 0
  %Arg_3.476 = load float, ptr %Arg_3.475, align 4, !invariant.load !297
  %multiply.2977 = fmul float %Arg_0.174, %Arg_3.476
  store float %multiply.2977, ptr %reduction_input_address4, align 4
  %167 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  call void @region_3_30__1(ptr %167, ptr %reduction_input_address4, ptr %return_buffer78)
  %168 = load float, ptr %return_buffer78, align 4
  store float %168, ptr %167, align 4
  %Arg_0.179 = getelementptr inbounds [8192 x [32 x float]], ptr %arg0, i32 0, i32 %160, i32 %161
  %Arg_0.180 = load float, ptr %Arg_0.179, align 4, !invariant.load !297
  %Arg_4.581 = getelementptr inbounds [32 x [1 x float]], ptr %arg4, i32 0, i32 %161, i32 0
  %Arg_4.582 = load float, ptr %Arg_4.581, align 4, !invariant.load !297
  %multiply.3783 = fmul float %Arg_0.180, %Arg_4.582
  store float %multiply.3783, ptr %reduction_input_address7, align 4
  %169 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  call void @region_4_38__1(ptr %169, ptr %reduction_input_address7, ptr %return_buffer84)
  %170 = load float, ptr %return_buffer84, align 4
  store float %170, ptr %169, align 4
  %Arg_0.185 = getelementptr inbounds [8192 x [32 x float]], ptr %arg0, i32 0, i32 %160, i32 %161
  %Arg_0.186 = load float, ptr %Arg_0.185, align 4, !invariant.load !297
  %Arg_5.687 = getelementptr inbounds [32 x [1 x float]], ptr %arg5, i32 0, i32 %161, i32 0
  %Arg_5.688 = load float, ptr %Arg_5.687, align 4, !invariant.load !297
  %multiply.4589 = fmul float %Arg_0.186, %Arg_5.688
  store float %multiply.4589, ptr %reduction_input_address10, align 4
  %171 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  call void @region_5_46__1(ptr %171, ptr %reduction_input_address10, ptr %return_buffer90)
  %172 = load float, ptr %return_buffer90, align 4
  store float %172, ptr %171, align 4
  %Arg_0.191 = getelementptr inbounds [8192 x [32 x float]], ptr %arg0, i32 0, i32 %160, i32 %161
  %Arg_0.192 = load float, ptr %Arg_0.191, align 4, !invariant.load !297
  %Arg_6.793 = getelementptr inbounds [32 x [1 x float]], ptr %arg6, i32 0, i32 %161, i32 0
  %Arg_6.794 = load float, ptr %Arg_6.793, align 4, !invariant.load !297
  %multiply.5395 = fmul float %Arg_0.192, %Arg_6.794
  store float %multiply.5395, ptr %reduction_input_address13, align 4
  %173 = getelementptr inbounds float, ptr %partial_reduction_result14, i32 0
  call void @region_6_54__1(ptr %173, ptr %reduction_input_address13, ptr %return_buffer96)
  %174 = load float, ptr %return_buffer96, align 4
  store float %174, ptr %173, align 4
  %Arg_0.197 = getelementptr inbounds [8192 x [32 x float]], ptr %arg0, i32 0, i32 %160, i32 %161
  %Arg_0.198 = load float, ptr %Arg_0.197, align 4, !invariant.load !297
  %Arg_7.899 = getelementptr inbounds [32 x [1 x float]], ptr %arg7, i32 0, i32 %161, i32 0
  %Arg_7.8100 = load float, ptr %Arg_7.899, align 4, !invariant.load !297
  %multiply.61101 = fmul float %Arg_0.198, %Arg_7.8100
  store float %multiply.61101, ptr %reduction_input_address16, align 4
  %175 = getelementptr inbounds float, ptr %partial_reduction_result17, i32 0
  call void @region_7_62__1(ptr %175, ptr %reduction_input_address16, ptr %return_buffer102)
  %176 = load float, ptr %return_buffer102, align 4
  store float %176, ptr %175, align 4
  %Arg_0.1103 = getelementptr inbounds [8192 x [32 x float]], ptr %arg0, i32 0, i32 %160, i32 %161
  %Arg_0.1104 = load float, ptr %Arg_0.1103, align 4, !invariant.load !297
  %Arg_8.9105 = getelementptr inbounds [32 x [1 x float]], ptr %arg8, i32 0, i32 %161, i32 0
  %Arg_8.9106 = load float, ptr %Arg_8.9105, align 4, !invariant.load !297
  %multiply.69107 = fmul float %Arg_0.1104, %Arg_8.9106
  store float %multiply.69107, ptr %reduction_input_address19, align 4
  %177 = getelementptr inbounds float, ptr %partial_reduction_result20, i32 0
  call void @region_8_70__1(ptr %177, ptr %reduction_input_address19, ptr %return_buffer108)
  %178 = load float, ptr %return_buffer108, align 4
  store float %178, ptr %177, align 4
  br label %x_in_tile-after

intra_warp_reduce_write-true:                     ; preds = %y_in_tile.loop_exit
  %179 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache34, i32 0, i32 %13, i32 0, i32 %38
  %180 = addrspacecast ptr addrspace(3) %179 to ptr
  %181 = load float, ptr %current_output, align 4
  store float %181, ptr %180, align 4
  br label %intra_warp_reduce_write-after

inter_warp_reduce-true:                           ; preds = %intra_warp_reduce_write-after
  %182 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache34, i32 0, i32 %13, i32 0, i32 %lane_id
  %183 = addrspacecast ptr addrspace(3) %182 to ptr
  store float %region_0_76_constant_13, ptr %initial_value_addr, align 4
  %184 = icmp ult i32 %thread_id.x, 1
  %185 = select i1 %184, ptr %183, ptr %initial_value_addr
  %186 = icmp eq i32 %thread_id.x, 0
  br i1 %186, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %inter_warp_reduce-true
  br label %inter_warp_reduce-after

reduction_write_output-true:                      ; preds = %inter_warp_reduce-true
  %187 = mul i32 %thread_id.x, 1
  %188 = add i32 %tile_origin.1, %thread_id.y
  %189 = add i32 %tile_origin.2, %187
  %190 = add i32 %189, 0
  %191 = udiv i32 %188, 1
  %output_element_address = getelementptr inbounds [8192 x float], ptr %arg9, i32 0, i32 %191
  %output = load float, ptr %185, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

intra_warp_reduce_write-true139:                  ; preds = %inter_warp_reduce-after
  %192 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache35, i32 0, i32 %13, i32 0, i32 %51
  %193 = addrspacecast ptr addrspace(3) %192 to ptr
  %194 = load float, ptr %current_output123, align 4
  store float %194, ptr %193, align 4
  br label %intra_warp_reduce_write-after140

inter_warp_reduce-true141:                        ; preds = %intra_warp_reduce_write-after140
  %195 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache35, i32 0, i32 %13, i32 0, i32 %lane_id
  %196 = addrspacecast ptr addrspace(3) %195 to ptr
  store float %region_0_76_constant_133, ptr %initial_value_addr143, align 4
  %197 = icmp ult i32 %thread_id.x, 1
  %198 = select i1 %197, ptr %196, ptr %initial_value_addr143
  %199 = icmp eq i32 %thread_id.x, 0
  br i1 %199, label %reduction_write_output-true144, label %reduction_write_output-after145

reduction_write_output-after145:                  ; preds = %reduction_write_output-true144, %inter_warp_reduce-true141
  br label %inter_warp_reduce-after142

reduction_write_output-true144:                   ; preds = %inter_warp_reduce-true141
  %200 = mul i32 %thread_id.x, 1
  %201 = add i32 %tile_origin.1, %thread_id.y
  %202 = add i32 %tile_origin.2, %200
  %203 = add i32 %202, 0
  %204 = udiv i32 %201, 1
  %output_element_address146 = getelementptr inbounds [8192 x float], ptr %arg10, i32 0, i32 %204
  %output147 = load float, ptr %198, align 4
  store float %output147, ptr %output_element_address146, align 4
  br label %reduction_write_output-after145

intra_warp_reduce_write-true164:                  ; preds = %inter_warp_reduce-after142
  %205 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache36, i32 0, i32 %13, i32 0, i32 %64
  %206 = addrspacecast ptr addrspace(3) %205 to ptr
  %207 = load float, ptr %current_output148, align 4
  store float %207, ptr %206, align 4
  br label %intra_warp_reduce_write-after165

inter_warp_reduce-true166:                        ; preds = %intra_warp_reduce_write-after165
  %208 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache36, i32 0, i32 %13, i32 0, i32 %lane_id
  %209 = addrspacecast ptr addrspace(3) %208 to ptr
  store float %region_0_76_constant_136, ptr %initial_value_addr168, align 4
  %210 = icmp ult i32 %thread_id.x, 1
  %211 = select i1 %210, ptr %209, ptr %initial_value_addr168
  %212 = icmp eq i32 %thread_id.x, 0
  br i1 %212, label %reduction_write_output-true169, label %reduction_write_output-after170

reduction_write_output-after170:                  ; preds = %reduction_write_output-true169, %inter_warp_reduce-true166
  br label %inter_warp_reduce-after167

reduction_write_output-true169:                   ; preds = %inter_warp_reduce-true166
  %213 = mul i32 %thread_id.x, 1
  %214 = add i32 %tile_origin.1, %thread_id.y
  %215 = add i32 %tile_origin.2, %213
  %216 = add i32 %215, 0
  %217 = udiv i32 %214, 1
  %output_element_address171 = getelementptr inbounds [8192 x float], ptr %arg11, i32 0, i32 %217
  %output172 = load float, ptr %211, align 4
  store float %output172, ptr %output_element_address171, align 4
  br label %reduction_write_output-after170

intra_warp_reduce_write-true189:                  ; preds = %inter_warp_reduce-after167
  %218 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache37, i32 0, i32 %13, i32 0, i32 %77
  %219 = addrspacecast ptr addrspace(3) %218 to ptr
  %220 = load float, ptr %current_output173, align 4
  store float %220, ptr %219, align 4
  br label %intra_warp_reduce_write-after190

inter_warp_reduce-true191:                        ; preds = %intra_warp_reduce_write-after190
  %221 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache37, i32 0, i32 %13, i32 0, i32 %lane_id
  %222 = addrspacecast ptr addrspace(3) %221 to ptr
  store float %region_0_76_constant_139, ptr %initial_value_addr193, align 4
  %223 = icmp ult i32 %thread_id.x, 1
  %224 = select i1 %223, ptr %222, ptr %initial_value_addr193
  %225 = icmp eq i32 %thread_id.x, 0
  br i1 %225, label %reduction_write_output-true194, label %reduction_write_output-after195

reduction_write_output-after195:                  ; preds = %reduction_write_output-true194, %inter_warp_reduce-true191
  br label %inter_warp_reduce-after192

reduction_write_output-true194:                   ; preds = %inter_warp_reduce-true191
  %226 = mul i32 %thread_id.x, 1
  %227 = add i32 %tile_origin.1, %thread_id.y
  %228 = add i32 %tile_origin.2, %226
  %229 = add i32 %228, 0
  %230 = udiv i32 %227, 1
  %output_element_address196 = getelementptr inbounds [8192 x float], ptr %arg12, i32 0, i32 %230
  %output197 = load float, ptr %224, align 4
  store float %output197, ptr %output_element_address196, align 4
  br label %reduction_write_output-after195

intra_warp_reduce_write-true214:                  ; preds = %inter_warp_reduce-after192
  %231 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache38, i32 0, i32 %13, i32 0, i32 %90
  %232 = addrspacecast ptr addrspace(3) %231 to ptr
  %233 = load float, ptr %current_output198, align 4
  store float %233, ptr %232, align 4
  br label %intra_warp_reduce_write-after215

inter_warp_reduce-true216:                        ; preds = %intra_warp_reduce_write-after215
  %234 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache38, i32 0, i32 %13, i32 0, i32 %lane_id
  %235 = addrspacecast ptr addrspace(3) %234 to ptr
  store float %region_0_76_constant_1312, ptr %initial_value_addr218, align 4
  %236 = icmp ult i32 %thread_id.x, 1
  %237 = select i1 %236, ptr %235, ptr %initial_value_addr218
  %238 = icmp eq i32 %thread_id.x, 0
  br i1 %238, label %reduction_write_output-true219, label %reduction_write_output-after220

reduction_write_output-after220:                  ; preds = %reduction_write_output-true219, %inter_warp_reduce-true216
  br label %inter_warp_reduce-after217

reduction_write_output-true219:                   ; preds = %inter_warp_reduce-true216
  %239 = mul i32 %thread_id.x, 1
  %240 = add i32 %tile_origin.1, %thread_id.y
  %241 = add i32 %tile_origin.2, %239
  %242 = add i32 %241, 0
  %243 = udiv i32 %240, 1
  %output_element_address221 = getelementptr inbounds [8192 x float], ptr %arg13, i32 0, i32 %243
  %output222 = load float, ptr %237, align 4
  store float %output222, ptr %output_element_address221, align 4
  br label %reduction_write_output-after220

intra_warp_reduce_write-true239:                  ; preds = %inter_warp_reduce-after217
  %244 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache39, i32 0, i32 %13, i32 0, i32 %103
  %245 = addrspacecast ptr addrspace(3) %244 to ptr
  %246 = load float, ptr %current_output223, align 4
  store float %246, ptr %245, align 4
  br label %intra_warp_reduce_write-after240

inter_warp_reduce-true241:                        ; preds = %intra_warp_reduce_write-after240
  %247 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache39, i32 0, i32 %13, i32 0, i32 %lane_id
  %248 = addrspacecast ptr addrspace(3) %247 to ptr
  store float %region_0_76_constant_1315, ptr %initial_value_addr243, align 4
  %249 = icmp ult i32 %thread_id.x, 1
  %250 = select i1 %249, ptr %248, ptr %initial_value_addr243
  %251 = icmp eq i32 %thread_id.x, 0
  br i1 %251, label %reduction_write_output-true244, label %reduction_write_output-after245

reduction_write_output-after245:                  ; preds = %reduction_write_output-true244, %inter_warp_reduce-true241
  br label %inter_warp_reduce-after242

reduction_write_output-true244:                   ; preds = %inter_warp_reduce-true241
  %252 = mul i32 %thread_id.x, 1
  %253 = add i32 %tile_origin.1, %thread_id.y
  %254 = add i32 %tile_origin.2, %252
  %255 = add i32 %254, 0
  %256 = udiv i32 %253, 1
  %output_element_address246 = getelementptr inbounds [8192 x float], ptr %arg14, i32 0, i32 %256
  %output247 = load float, ptr %250, align 4
  store float %output247, ptr %output_element_address246, align 4
  br label %reduction_write_output-after245

intra_warp_reduce_write-true264:                  ; preds = %inter_warp_reduce-after242
  %257 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache40, i32 0, i32 %13, i32 0, i32 %116
  %258 = addrspacecast ptr addrspace(3) %257 to ptr
  %259 = load float, ptr %current_output248, align 4
  store float %259, ptr %258, align 4
  br label %intra_warp_reduce_write-after265

inter_warp_reduce-true266:                        ; preds = %intra_warp_reduce_write-after265
  %260 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache40, i32 0, i32 %13, i32 0, i32 %lane_id
  %261 = addrspacecast ptr addrspace(3) %260 to ptr
  store float %region_0_76_constant_1318, ptr %initial_value_addr268, align 4
  %262 = icmp ult i32 %thread_id.x, 1
  %263 = select i1 %262, ptr %261, ptr %initial_value_addr268
  %264 = icmp eq i32 %thread_id.x, 0
  br i1 %264, label %reduction_write_output-true269, label %reduction_write_output-after270

reduction_write_output-after270:                  ; preds = %reduction_write_output-true269, %inter_warp_reduce-true266
  br label %inter_warp_reduce-after267

reduction_write_output-true269:                   ; preds = %inter_warp_reduce-true266
  %265 = mul i32 %thread_id.x, 1
  %266 = add i32 %tile_origin.1, %thread_id.y
  %267 = add i32 %tile_origin.2, %265
  %268 = add i32 %267, 0
  %269 = udiv i32 %266, 1
  %output_element_address271 = getelementptr inbounds [8192 x float], ptr %arg15, i32 0, i32 %269
  %output272 = load float, ptr %263, align 4
  store float %output272, ptr %output_element_address271, align 4
  br label %reduction_write_output-after270

intra_warp_reduce_write-true289:                  ; preds = %inter_warp_reduce-after267
  %270 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache41, i32 0, i32 %13, i32 0, i32 %129
  %271 = addrspacecast ptr addrspace(3) %270 to ptr
  %272 = load float, ptr %current_output273, align 4
  store float %272, ptr %271, align 4
  br label %intra_warp_reduce_write-after290

inter_warp_reduce-true291:                        ; preds = %intra_warp_reduce_write-after290
  %273 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache41, i32 0, i32 %13, i32 0, i32 %lane_id
  %274 = addrspacecast ptr addrspace(3) %273 to ptr
  store float %region_0_76_constant_1321, ptr %initial_value_addr293, align 4
  %275 = icmp ult i32 %thread_id.x, 1
  %276 = select i1 %275, ptr %274, ptr %initial_value_addr293
  %277 = icmp eq i32 %thread_id.x, 0
  br i1 %277, label %reduction_write_output-true294, label %reduction_write_output-after295

reduction_write_output-after295:                  ; preds = %reduction_write_output-true294, %inter_warp_reduce-true291
  br label %inter_warp_reduce-after292

reduction_write_output-true294:                   ; preds = %inter_warp_reduce-true291
  %278 = mul i32 %thread_id.x, 1
  %279 = add i32 %tile_origin.1, %thread_id.y
  %280 = add i32 %tile_origin.2, %278
  %281 = add i32 %280, 0
  %282 = udiv i32 %279, 1
  %output_element_address296 = getelementptr inbounds [8192 x float], ptr %arg16, i32 0, i32 %282
  %output297 = load float, ptr %276, align 4
  store float %output297, ptr %output_element_address296, align 4
  br label %reduction_write_output-after295
}

define internal void @region_1_14__1(ptr dereferenceable(4) %Arg_0.15.typed, ptr dereferenceable(4) %Arg_1.16.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.17.typed = alloca float, align 4
  %Arg_0.15 = load float, ptr %Arg_0.15.typed, align 4
  %Arg_1.16 = load float, ptr %Arg_1.16.typed, align 4
  %add.17 = fadd float %Arg_0.15, %Arg_1.16
  store float %add.17, ptr %add.17.typed, align 4
  %load_ret_value = load float, ptr %add.17.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_22__1(ptr dereferenceable(4) %Arg_0.23.typed, ptr dereferenceable(4) %Arg_1.24.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.25.typed = alloca float, align 4
  %Arg_0.23 = load float, ptr %Arg_0.23.typed, align 4
  %Arg_1.24 = load float, ptr %Arg_1.24.typed, align 4
  %add.25 = fadd float %Arg_0.23, %Arg_1.24
  store float %add.25, ptr %add.25.typed, align 4
  %load_ret_value = load float, ptr %add.25.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_3_30__1(ptr dereferenceable(4) %Arg_0.31.typed, ptr dereferenceable(4) %Arg_1.32.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.33.typed = alloca float, align 4
  %Arg_0.31 = load float, ptr %Arg_0.31.typed, align 4
  %Arg_1.32 = load float, ptr %Arg_1.32.typed, align 4
  %add.33 = fadd float %Arg_0.31, %Arg_1.32
  store float %add.33, ptr %add.33.typed, align 4
  %load_ret_value = load float, ptr %add.33.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_4_38__1(ptr dereferenceable(4) %Arg_0.39.typed, ptr dereferenceable(4) %Arg_1.40.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.41.typed = alloca float, align 4
  %Arg_0.39 = load float, ptr %Arg_0.39.typed, align 4
  %Arg_1.40 = load float, ptr %Arg_1.40.typed, align 4
  %add.41 = fadd float %Arg_0.39, %Arg_1.40
  store float %add.41, ptr %add.41.typed, align 4
  %load_ret_value = load float, ptr %add.41.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_5_46__1(ptr dereferenceable(4) %Arg_0.47.typed, ptr dereferenceable(4) %Arg_1.48.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.49.typed = alloca float, align 4
  %Arg_0.47 = load float, ptr %Arg_0.47.typed, align 4
  %Arg_1.48 = load float, ptr %Arg_1.48.typed, align 4
  %add.49 = fadd float %Arg_0.47, %Arg_1.48
  store float %add.49, ptr %add.49.typed, align 4
  %load_ret_value = load float, ptr %add.49.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_6_54__1(ptr dereferenceable(4) %Arg_0.55.typed, ptr dereferenceable(4) %Arg_1.56.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.57.typed = alloca float, align 4
  %Arg_0.55 = load float, ptr %Arg_0.55.typed, align 4
  %Arg_1.56 = load float, ptr %Arg_1.56.typed, align 4
  %add.57 = fadd float %Arg_0.55, %Arg_1.56
  store float %add.57, ptr %add.57.typed, align 4
  %load_ret_value = load float, ptr %add.57.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_7_62__1(ptr dereferenceable(4) %Arg_0.63.typed, ptr dereferenceable(4) %Arg_1.64.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.65.typed = alloca float, align 4
  %Arg_0.63 = load float, ptr %Arg_0.63.typed, align 4
  %Arg_1.64 = load float, ptr %Arg_1.64.typed, align 4
  %add.65 = fadd float %Arg_0.63, %Arg_1.64
  store float %add.65, ptr %add.65.typed, align 4
  %load_ret_value = load float, ptr %add.65.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_8_70__1(ptr dereferenceable(4) %Arg_0.71.typed, ptr dereferenceable(4) %Arg_1.72.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.73.typed = alloca float, align 4
  %Arg_0.71 = load float, ptr %Arg_0.71.typed, align 4
  %Arg_1.72 = load float, ptr %Arg_1.72.typed, align 4
  %add.73 = fadd float %Arg_0.71, %Arg_1.72
  store float %add.73, ptr %add.73.typed, align 4
  %load_ret_value = load float, ptr %add.73.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @concatenate_87(ptr noalias align 16 dereferenceable(31719424) %arg0, ptr noalias align 128 dereferenceable(4194304) %arg1, ptr noalias align 128 dereferenceable(4194304) %arg2, ptr noalias align 128 dereferenceable(4194304) %arg3, ptr noalias align 128 dereferenceable(4194304) %arg4, ptr noalias align 128 dereferenceable(48496640) %arg5) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !402
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 3031040
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 1480
  %5 = udiv i32 %linear_index_base, 1480
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 1480
  %8 = udiv i32 %linear_index1, 1480
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 1480
  %11 = udiv i32 %linear_index2, 1480
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 1480
  %14 = udiv i32 %linear_index3, 1480
  %15 = icmp ult i32 %linear_index_base, 12124160
  br i1 %15, label %concatenate_87.in_bounds-true, label %concatenate_87.in_bounds-after

concatenate_87.in_bounds-after:                   ; preds = %concatenate.6.merge35, %entry
  ret void

concatenate_87.in_bounds-true:                    ; preds = %entry
  br label %concatenate.pivot.1096.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %16 = phi i32 [ 0, %concatenate.pivot.0. ]
  %17 = sub nsw i32 %4, %16
  %18 = udiv i32 %linear_index_base, 1480
  %19 = mul i32 %18, 968
  %20 = add i32 %19, %17
  %21 = udiv i32 %20, 1
  %22 = urem i32 %21, 968
  %23 = udiv i32 %20, 968
  %24 = getelementptr inbounds float, ptr %arg0, i32 %20
  %25 = load float, ptr %24, align 4, !invariant.load !297
  br label %concatenate.6.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.968.1
  %26 = phi i32 [ 968, %concatenate.pivot.968.1 ]
  %27 = sub nsw i32 %4, %26
  %28 = udiv i32 %linear_index_base, 1480
  %29 = mul i32 %28, 128
  %30 = add i32 %29, %27
  %31 = udiv i32 %30, 1
  %32 = urem i32 %31, 128
  %33 = udiv i32 %30, 128
  %34 = getelementptr inbounds float, ptr %arg1, i32 %30
  %35 = load float, ptr %34, align 4, !invariant.load !297
  br label %concatenate.6.merge

concat_index_from_operand_id2:                    ; preds = %concatenate.pivot.1096.2
  %36 = phi i32 [ 1096, %concatenate.pivot.1096.2 ]
  %37 = sub nsw i32 %4, %36
  %38 = udiv i32 %linear_index_base, 1480
  %39 = mul i32 %38, 128
  %40 = add i32 %39, %37
  %41 = udiv i32 %40, 1
  %42 = urem i32 %41, 128
  %43 = udiv i32 %40, 128
  %44 = getelementptr inbounds float, ptr %arg2, i32 %40
  %45 = load float, ptr %44, align 4, !invariant.load !297
  br label %concatenate.6.merge

concat_index_from_operand_id3:                    ; preds = %concatenate.pivot.1224.3
  %46 = phi i32 [ 1224, %concatenate.pivot.1224.3 ]
  %47 = sub nsw i32 %4, %46
  %48 = udiv i32 %linear_index_base, 1480
  %49 = mul i32 %48, 128
  %50 = add i32 %49, %47
  %51 = udiv i32 %50, 1
  %52 = urem i32 %51, 128
  %53 = udiv i32 %50, 128
  %54 = getelementptr inbounds float, ptr %arg3, i32 %50
  %55 = load float, ptr %54, align 4, !invariant.load !297
  br label %concatenate.6.merge

concat_index_from_operand_id4:                    ; preds = %concatenate.pivot.1352.4
  %56 = phi i32 [ 1352, %concatenate.pivot.1352.4 ]
  %57 = sub nsw i32 %4, %56
  %58 = udiv i32 %linear_index_base, 1480
  %59 = mul i32 %58, 128
  %60 = add i32 %59, %57
  %61 = udiv i32 %60, 1
  %62 = urem i32 %61, 128
  %63 = udiv i32 %60, 128
  %64 = getelementptr inbounds float, ptr %arg4, i32 %60
  %65 = load float, ptr %64, align 4, !invariant.load !297
  br label %concatenate.6.merge

concatenate.pivot.1096.:                          ; preds = %concatenate_87.in_bounds-true
  %66 = icmp ult i32 %4, 1096
  br i1 %66, label %concatenate.pivot.968., label %concatenate.pivot.1224.

concatenate.pivot.968.:                           ; preds = %concatenate.pivot.1096.
  %67 = icmp ult i32 %4, 968
  br i1 %67, label %concatenate.pivot.0., label %concatenate.pivot.968.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.968.
  br label %concat_index_from_operand_id0

concatenate.pivot.968.1:                          ; preds = %concatenate.pivot.968.
  br label %concat_index_from_operand_id1

concatenate.pivot.1224.:                          ; preds = %concatenate.pivot.1096.
  %68 = icmp ult i32 %4, 1224
  br i1 %68, label %concatenate.pivot.1096.2, label %concatenate.pivot.1352.

concatenate.pivot.1096.2:                         ; preds = %concatenate.pivot.1224.
  br label %concat_index_from_operand_id2

concatenate.pivot.1352.:                          ; preds = %concatenate.pivot.1224.
  %69 = icmp ult i32 %4, 1352
  br i1 %69, label %concatenate.pivot.1224.3, label %concatenate.pivot.1352.4

concatenate.pivot.1224.3:                         ; preds = %concatenate.pivot.1352.
  br label %concat_index_from_operand_id3

concatenate.pivot.1352.4:                         ; preds = %concatenate.pivot.1352.
  br label %concat_index_from_operand_id4

concatenate.6.merge:                              ; preds = %concat_index_from_operand_id4, %concat_index_from_operand_id3, %concat_index_from_operand_id2, %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %70 = phi float [ %25, %concat_index_from_operand_id0 ], [ %35, %concat_index_from_operand_id1 ], [ %45, %concat_index_from_operand_id2 ], [ %55, %concat_index_from_operand_id3 ], [ %65, %concat_index_from_operand_id4 ]
  %71 = getelementptr inbounds float, ptr %arg5, i32 %linear_index_base
  store float %70, ptr %71, align 4
  br label %concatenate.pivot.1096.11

concat_index_from_operand_id06:                   ; preds = %concatenate.pivot.0.13
  %72 = phi i32 [ 0, %concatenate.pivot.0.13 ]
  %73 = sub nsw i32 %7, %72
  %74 = udiv i32 %linear_index1, 1480
  %75 = mul i32 %74, 968
  %76 = add i32 %75, %73
  %77 = udiv i32 %76, 1
  %78 = urem i32 %77, 968
  %79 = udiv i32 %76, 968
  %80 = getelementptr inbounds float, ptr %arg0, i32 %76
  %81 = load float, ptr %80, align 4, !invariant.load !297
  br label %concatenate.6.merge5

concat_index_from_operand_id17:                   ; preds = %concatenate.pivot.968.14
  %82 = phi i32 [ 968, %concatenate.pivot.968.14 ]
  %83 = sub nsw i32 %7, %82
  %84 = udiv i32 %linear_index1, 1480
  %85 = mul i32 %84, 128
  %86 = add i32 %85, %83
  %87 = udiv i32 %86, 1
  %88 = urem i32 %87, 128
  %89 = udiv i32 %86, 128
  %90 = getelementptr inbounds float, ptr %arg1, i32 %86
  %91 = load float, ptr %90, align 4, !invariant.load !297
  br label %concatenate.6.merge5

concat_index_from_operand_id28:                   ; preds = %concatenate.pivot.1096.16
  %92 = phi i32 [ 1096, %concatenate.pivot.1096.16 ]
  %93 = sub nsw i32 %7, %92
  %94 = udiv i32 %linear_index1, 1480
  %95 = mul i32 %94, 128
  %96 = add i32 %95, %93
  %97 = udiv i32 %96, 1
  %98 = urem i32 %97, 128
  %99 = udiv i32 %96, 128
  %100 = getelementptr inbounds float, ptr %arg2, i32 %96
  %101 = load float, ptr %100, align 4, !invariant.load !297
  br label %concatenate.6.merge5

concat_index_from_operand_id39:                   ; preds = %concatenate.pivot.1224.18
  %102 = phi i32 [ 1224, %concatenate.pivot.1224.18 ]
  %103 = sub nsw i32 %7, %102
  %104 = udiv i32 %linear_index1, 1480
  %105 = mul i32 %104, 128
  %106 = add i32 %105, %103
  %107 = udiv i32 %106, 1
  %108 = urem i32 %107, 128
  %109 = udiv i32 %106, 128
  %110 = getelementptr inbounds float, ptr %arg3, i32 %106
  %111 = load float, ptr %110, align 4, !invariant.load !297
  br label %concatenate.6.merge5

concat_index_from_operand_id410:                  ; preds = %concatenate.pivot.1352.19
  %112 = phi i32 [ 1352, %concatenate.pivot.1352.19 ]
  %113 = sub nsw i32 %7, %112
  %114 = udiv i32 %linear_index1, 1480
  %115 = mul i32 %114, 128
  %116 = add i32 %115, %113
  %117 = udiv i32 %116, 1
  %118 = urem i32 %117, 128
  %119 = udiv i32 %116, 128
  %120 = getelementptr inbounds float, ptr %arg4, i32 %116
  %121 = load float, ptr %120, align 4, !invariant.load !297
  br label %concatenate.6.merge5

concatenate.pivot.1096.11:                        ; preds = %concatenate.6.merge
  %122 = icmp ult i32 %7, 1096
  br i1 %122, label %concatenate.pivot.968.12, label %concatenate.pivot.1224.15

concatenate.pivot.968.12:                         ; preds = %concatenate.pivot.1096.11
  %123 = icmp ult i32 %7, 968
  br i1 %123, label %concatenate.pivot.0.13, label %concatenate.pivot.968.14

concatenate.pivot.0.13:                           ; preds = %concatenate.pivot.968.12
  br label %concat_index_from_operand_id06

concatenate.pivot.968.14:                         ; preds = %concatenate.pivot.968.12
  br label %concat_index_from_operand_id17

concatenate.pivot.1224.15:                        ; preds = %concatenate.pivot.1096.11
  %124 = icmp ult i32 %7, 1224
  br i1 %124, label %concatenate.pivot.1096.16, label %concatenate.pivot.1352.17

concatenate.pivot.1096.16:                        ; preds = %concatenate.pivot.1224.15
  br label %concat_index_from_operand_id28

concatenate.pivot.1352.17:                        ; preds = %concatenate.pivot.1224.15
  %125 = icmp ult i32 %7, 1352
  br i1 %125, label %concatenate.pivot.1224.18, label %concatenate.pivot.1352.19

concatenate.pivot.1224.18:                        ; preds = %concatenate.pivot.1352.17
  br label %concat_index_from_operand_id39

concatenate.pivot.1352.19:                        ; preds = %concatenate.pivot.1352.17
  br label %concat_index_from_operand_id410

concatenate.6.merge5:                             ; preds = %concat_index_from_operand_id410, %concat_index_from_operand_id39, %concat_index_from_operand_id28, %concat_index_from_operand_id17, %concat_index_from_operand_id06
  %126 = phi float [ %81, %concat_index_from_operand_id06 ], [ %91, %concat_index_from_operand_id17 ], [ %101, %concat_index_from_operand_id28 ], [ %111, %concat_index_from_operand_id39 ], [ %121, %concat_index_from_operand_id410 ]
  %127 = getelementptr inbounds float, ptr %arg5, i32 %linear_index1
  store float %126, ptr %127, align 4
  br label %concatenate.pivot.1096.26

concat_index_from_operand_id021:                  ; preds = %concatenate.pivot.0.28
  %128 = phi i32 [ 0, %concatenate.pivot.0.28 ]
  %129 = sub nsw i32 %10, %128
  %130 = udiv i32 %linear_index2, 1480
  %131 = mul i32 %130, 968
  %132 = add i32 %131, %129
  %133 = udiv i32 %132, 1
  %134 = urem i32 %133, 968
  %135 = udiv i32 %132, 968
  %136 = getelementptr inbounds float, ptr %arg0, i32 %132
  %137 = load float, ptr %136, align 4, !invariant.load !297
  br label %concatenate.6.merge20

concat_index_from_operand_id122:                  ; preds = %concatenate.pivot.968.29
  %138 = phi i32 [ 968, %concatenate.pivot.968.29 ]
  %139 = sub nsw i32 %10, %138
  %140 = udiv i32 %linear_index2, 1480
  %141 = mul i32 %140, 128
  %142 = add i32 %141, %139
  %143 = udiv i32 %142, 1
  %144 = urem i32 %143, 128
  %145 = udiv i32 %142, 128
  %146 = getelementptr inbounds float, ptr %arg1, i32 %142
  %147 = load float, ptr %146, align 4, !invariant.load !297
  br label %concatenate.6.merge20

concat_index_from_operand_id223:                  ; preds = %concatenate.pivot.1096.31
  %148 = phi i32 [ 1096, %concatenate.pivot.1096.31 ]
  %149 = sub nsw i32 %10, %148
  %150 = udiv i32 %linear_index2, 1480
  %151 = mul i32 %150, 128
  %152 = add i32 %151, %149
  %153 = udiv i32 %152, 1
  %154 = urem i32 %153, 128
  %155 = udiv i32 %152, 128
  %156 = getelementptr inbounds float, ptr %arg2, i32 %152
  %157 = load float, ptr %156, align 4, !invariant.load !297
  br label %concatenate.6.merge20

concat_index_from_operand_id324:                  ; preds = %concatenate.pivot.1224.33
  %158 = phi i32 [ 1224, %concatenate.pivot.1224.33 ]
  %159 = sub nsw i32 %10, %158
  %160 = udiv i32 %linear_index2, 1480
  %161 = mul i32 %160, 128
  %162 = add i32 %161, %159
  %163 = udiv i32 %162, 1
  %164 = urem i32 %163, 128
  %165 = udiv i32 %162, 128
  %166 = getelementptr inbounds float, ptr %arg3, i32 %162
  %167 = load float, ptr %166, align 4, !invariant.load !297
  br label %concatenate.6.merge20

concat_index_from_operand_id425:                  ; preds = %concatenate.pivot.1352.34
  %168 = phi i32 [ 1352, %concatenate.pivot.1352.34 ]
  %169 = sub nsw i32 %10, %168
  %170 = udiv i32 %linear_index2, 1480
  %171 = mul i32 %170, 128
  %172 = add i32 %171, %169
  %173 = udiv i32 %172, 1
  %174 = urem i32 %173, 128
  %175 = udiv i32 %172, 128
  %176 = getelementptr inbounds float, ptr %arg4, i32 %172
  %177 = load float, ptr %176, align 4, !invariant.load !297
  br label %concatenate.6.merge20

concatenate.pivot.1096.26:                        ; preds = %concatenate.6.merge5
  %178 = icmp ult i32 %10, 1096
  br i1 %178, label %concatenate.pivot.968.27, label %concatenate.pivot.1224.30

concatenate.pivot.968.27:                         ; preds = %concatenate.pivot.1096.26
  %179 = icmp ult i32 %10, 968
  br i1 %179, label %concatenate.pivot.0.28, label %concatenate.pivot.968.29

concatenate.pivot.0.28:                           ; preds = %concatenate.pivot.968.27
  br label %concat_index_from_operand_id021

concatenate.pivot.968.29:                         ; preds = %concatenate.pivot.968.27
  br label %concat_index_from_operand_id122

concatenate.pivot.1224.30:                        ; preds = %concatenate.pivot.1096.26
  %180 = icmp ult i32 %10, 1224
  br i1 %180, label %concatenate.pivot.1096.31, label %concatenate.pivot.1352.32

concatenate.pivot.1096.31:                        ; preds = %concatenate.pivot.1224.30
  br label %concat_index_from_operand_id223

concatenate.pivot.1352.32:                        ; preds = %concatenate.pivot.1224.30
  %181 = icmp ult i32 %10, 1352
  br i1 %181, label %concatenate.pivot.1224.33, label %concatenate.pivot.1352.34

concatenate.pivot.1224.33:                        ; preds = %concatenate.pivot.1352.32
  br label %concat_index_from_operand_id324

concatenate.pivot.1352.34:                        ; preds = %concatenate.pivot.1352.32
  br label %concat_index_from_operand_id425

concatenate.6.merge20:                            ; preds = %concat_index_from_operand_id425, %concat_index_from_operand_id324, %concat_index_from_operand_id223, %concat_index_from_operand_id122, %concat_index_from_operand_id021
  %182 = phi float [ %137, %concat_index_from_operand_id021 ], [ %147, %concat_index_from_operand_id122 ], [ %157, %concat_index_from_operand_id223 ], [ %167, %concat_index_from_operand_id324 ], [ %177, %concat_index_from_operand_id425 ]
  %183 = getelementptr inbounds float, ptr %arg5, i32 %linear_index2
  store float %182, ptr %183, align 4
  br label %concatenate.pivot.1096.41

concat_index_from_operand_id036:                  ; preds = %concatenate.pivot.0.43
  %184 = phi i32 [ 0, %concatenate.pivot.0.43 ]
  %185 = sub nsw i32 %13, %184
  %186 = udiv i32 %linear_index3, 1480
  %187 = mul i32 %186, 968
  %188 = add i32 %187, %185
  %189 = udiv i32 %188, 1
  %190 = urem i32 %189, 968
  %191 = udiv i32 %188, 968
  %192 = getelementptr inbounds float, ptr %arg0, i32 %188
  %193 = load float, ptr %192, align 4, !invariant.load !297
  br label %concatenate.6.merge35

concat_index_from_operand_id137:                  ; preds = %concatenate.pivot.968.44
  %194 = phi i32 [ 968, %concatenate.pivot.968.44 ]
  %195 = sub nsw i32 %13, %194
  %196 = udiv i32 %linear_index3, 1480
  %197 = mul i32 %196, 128
  %198 = add i32 %197, %195
  %199 = udiv i32 %198, 1
  %200 = urem i32 %199, 128
  %201 = udiv i32 %198, 128
  %202 = getelementptr inbounds float, ptr %arg1, i32 %198
  %203 = load float, ptr %202, align 4, !invariant.load !297
  br label %concatenate.6.merge35

concat_index_from_operand_id238:                  ; preds = %concatenate.pivot.1096.46
  %204 = phi i32 [ 1096, %concatenate.pivot.1096.46 ]
  %205 = sub nsw i32 %13, %204
  %206 = udiv i32 %linear_index3, 1480
  %207 = mul i32 %206, 128
  %208 = add i32 %207, %205
  %209 = udiv i32 %208, 1
  %210 = urem i32 %209, 128
  %211 = udiv i32 %208, 128
  %212 = getelementptr inbounds float, ptr %arg2, i32 %208
  %213 = load float, ptr %212, align 4, !invariant.load !297
  br label %concatenate.6.merge35

concat_index_from_operand_id339:                  ; preds = %concatenate.pivot.1224.48
  %214 = phi i32 [ 1224, %concatenate.pivot.1224.48 ]
  %215 = sub nsw i32 %13, %214
  %216 = udiv i32 %linear_index3, 1480
  %217 = mul i32 %216, 128
  %218 = add i32 %217, %215
  %219 = udiv i32 %218, 1
  %220 = urem i32 %219, 128
  %221 = udiv i32 %218, 128
  %222 = getelementptr inbounds float, ptr %arg3, i32 %218
  %223 = load float, ptr %222, align 4, !invariant.load !297
  br label %concatenate.6.merge35

concat_index_from_operand_id440:                  ; preds = %concatenate.pivot.1352.49
  %224 = phi i32 [ 1352, %concatenate.pivot.1352.49 ]
  %225 = sub nsw i32 %13, %224
  %226 = udiv i32 %linear_index3, 1480
  %227 = mul i32 %226, 128
  %228 = add i32 %227, %225
  %229 = udiv i32 %228, 1
  %230 = urem i32 %229, 128
  %231 = udiv i32 %228, 128
  %232 = getelementptr inbounds float, ptr %arg4, i32 %228
  %233 = load float, ptr %232, align 4, !invariant.load !297
  br label %concatenate.6.merge35

concatenate.pivot.1096.41:                        ; preds = %concatenate.6.merge20
  %234 = icmp ult i32 %13, 1096
  br i1 %234, label %concatenate.pivot.968.42, label %concatenate.pivot.1224.45

concatenate.pivot.968.42:                         ; preds = %concatenate.pivot.1096.41
  %235 = icmp ult i32 %13, 968
  br i1 %235, label %concatenate.pivot.0.43, label %concatenate.pivot.968.44

concatenate.pivot.0.43:                           ; preds = %concatenate.pivot.968.42
  br label %concat_index_from_operand_id036

concatenate.pivot.968.44:                         ; preds = %concatenate.pivot.968.42
  br label %concat_index_from_operand_id137

concatenate.pivot.1224.45:                        ; preds = %concatenate.pivot.1096.41
  %236 = icmp ult i32 %13, 1224
  br i1 %236, label %concatenate.pivot.1096.46, label %concatenate.pivot.1352.47

concatenate.pivot.1096.46:                        ; preds = %concatenate.pivot.1224.45
  br label %concat_index_from_operand_id238

concatenate.pivot.1352.47:                        ; preds = %concatenate.pivot.1224.45
  %237 = icmp ult i32 %13, 1352
  br i1 %237, label %concatenate.pivot.1224.48, label %concatenate.pivot.1352.49

concatenate.pivot.1224.48:                        ; preds = %concatenate.pivot.1352.47
  br label %concat_index_from_operand_id339

concatenate.pivot.1352.49:                        ; preds = %concatenate.pivot.1352.47
  br label %concat_index_from_operand_id440

concatenate.6.merge35:                            ; preds = %concat_index_from_operand_id440, %concat_index_from_operand_id339, %concat_index_from_operand_id238, %concat_index_from_operand_id137, %concat_index_from_operand_id036
  %238 = phi float [ %193, %concat_index_from_operand_id036 ], [ %203, %concat_index_from_operand_id137 ], [ %213, %concat_index_from_operand_id238 ], [ %223, %concat_index_from_operand_id339 ], [ %233, %concat_index_from_operand_id440 ]
  %239 = getelementptr inbounds float, ptr %arg5, i32 %linear_index3
  store float %238, ptr %239, align 4
  br label %concatenate_87.in_bounds-after
}

define void @add_520(ptr noalias align 128 dereferenceable(16777216) %arg0, ptr noalias align 128 dereferenceable(16777216) %arg1, ptr noalias align 128 dereferenceable(16777216) %arg2) {
entry:
  %loop.invar_address = alloca i32, align 4
  store i32 0, ptr %loop.invar_address, align 4
  br label %loop.loop_header

loop.loop_header:                                 ; preds = %add_520.in_bounds-after, %entry
  %loop.indvar = load i32, ptr %loop.invar_address, align 4
  %0 = icmp uge i32 %loop.indvar, 4194304
  br i1 %0, label %loop.loop_exit, label %loop.loop_body

loop.loop_body:                                   ; preds = %loop.loop_header
  %invar.inc = add nuw nsw i32 %loop.indvar, 442368
  store i32 %invar.inc, ptr %loop.invar_address, align 4
  %1 = icmp eq i32 %loop.indvar, 0
  %2 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !379
  %3 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !361
  %4 = mul nuw nsw i32 %2, 128
  %linear_index = add nuw nsw i32 %4, %3
  %linear_index_in_range = icmp ult i32 %linear_index, 110592
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %linear_index_plus_base = add nuw nsw i32 %linear_index_base, %loop.indvar
  %5 = udiv i32 %linear_index_plus_base, 1
  %6 = urem i32 %5, 512
  %7 = udiv i32 %linear_index_plus_base, 512
  %linear_index1 = add nuw nsw i32 %linear_index_plus_base, 1
  %8 = udiv i32 %linear_index1, 1
  %9 = urem i32 %8, 512
  %10 = udiv i32 %linear_index1, 512
  %linear_index2 = add nuw nsw i32 %linear_index_plus_base, 2
  %11 = udiv i32 %linear_index2, 1
  %12 = urem i32 %11, 512
  %13 = udiv i32 %linear_index2, 512
  %linear_index3 = add nuw nsw i32 %linear_index_plus_base, 3
  %14 = udiv i32 %linear_index3, 1
  %15 = urem i32 %14, 512
  %16 = udiv i32 %linear_index3, 512
  %17 = icmp ult i32 %linear_index_plus_base, 4194304
  br i1 %17, label %add_520.in_bounds-true, label %add_520.in_bounds-after

add_520.in_bounds-after:                          ; preds = %add_520.in_bounds-true, %loop.loop_body
  br label %loop.loop_header, !llvm.loop !403

loop.loop_exit:                                   ; preds = %loop.loop_header
  ret void

add_520.in_bounds-true:                           ; preds = %loop.loop_body
  %18 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_plus_base
  %19 = load float, ptr %18, align 4, !invariant.load !297
  %20 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_plus_base
  %21 = load float, ptr %20, align 4, !invariant.load !297
  %add.3 = fadd float %19, %21
  %22 = getelementptr inbounds float, ptr %arg2, i32 %linear_index_plus_base
  store float %add.3, ptr %22, align 4
  %23 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  %24 = load float, ptr %23, align 4, !invariant.load !297
  %25 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  %26 = load float, ptr %25, align 4, !invariant.load !297
  %add.31 = fadd float %24, %26
  %27 = getelementptr inbounds float, ptr %arg2, i32 %linear_index1
  store float %add.31, ptr %27, align 4
  %28 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  %29 = load float, ptr %28, align 4, !invariant.load !297
  %30 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  %31 = load float, ptr %30, align 4, !invariant.load !297
  %add.32 = fadd float %29, %31
  %32 = getelementptr inbounds float, ptr %arg2, i32 %linear_index2
  store float %add.32, ptr %32, align 4
  %33 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  %34 = load float, ptr %33, align 4, !invariant.load !297
  %35 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  %36 = load float, ptr %35, align 4, !invariant.load !297
  %add.33 = fadd float %34, %36
  %37 = getelementptr inbounds float, ptr %arg2, i32 %linear_index3
  store float %add.33, ptr %37, align 4
  br label %add_520.in_bounds-after
}

define void @fusion_428(ptr noalias align 16 dereferenceable(2048) %arg0, ptr noalias align 128 dereferenceable(16777216) %arg1, ptr noalias align 128 dereferenceable(16777216) %arg2) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !404
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 1048576
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 512
  %5 = udiv i32 %linear_index_base, 512
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 512
  %8 = udiv i32 %linear_index1, 512
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 512
  %11 = udiv i32 %linear_index2, 512
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 512
  %14 = udiv i32 %linear_index3, 512
  %15 = icmp ult i32 %linear_index_base, 4194304
  br i1 %15, label %fusion_428.in_bounds-true, label %fusion_428.in_bounds-after

fusion_428.in_bounds-after:                       ; preds = %fusion_428.in_bounds-true, %entry
  ret void

fusion_428.in_bounds-true:                        ; preds = %entry
  %16 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  %17 = load float, ptr %16, align 4, !invariant.load !297
  %18 = getelementptr inbounds float, ptr %arg2, i32 %linear_index_base
  %19 = load float, ptr %18, align 4
  %add.4 = fadd float %17, %19
  %20 = getelementptr inbounds [512 x float], ptr %arg0, i32 0, i32 %4
  %21 = load float, ptr %20, align 4, !invariant.load !297
  %add.6 = fadd float %add.4, %21
  %region_0_10_constant_7 = load float, ptr @43, align 4
  %22 = fcmp oge float %add.6, %region_0_10_constant_7
  %23 = fcmp une float %add.6, %add.6
  %24 = or i1 %22, %23
  %maximum.9 = select i1 %24, float %add.6, float %region_0_10_constant_7
  %25 = getelementptr inbounds float, ptr %arg2, i32 %linear_index_base
  store float %maximum.9, ptr %25, align 4
  %26 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  %27 = load float, ptr %26, align 4, !invariant.load !297
  %28 = getelementptr inbounds float, ptr %arg2, i32 %linear_index1
  %29 = load float, ptr %28, align 4
  %add.41 = fadd float %27, %29
  %30 = getelementptr inbounds [512 x float], ptr %arg0, i32 0, i32 %7
  %31 = load float, ptr %30, align 4, !invariant.load !297
  %add.62 = fadd float %add.41, %31
  %region_0_10_constant_73 = load float, ptr @43, align 4
  %32 = fcmp oge float %add.62, %region_0_10_constant_73
  %33 = fcmp une float %add.62, %add.62
  %34 = or i1 %32, %33
  %maximum.94 = select i1 %34, float %add.62, float %region_0_10_constant_73
  %35 = getelementptr inbounds float, ptr %arg2, i32 %linear_index1
  store float %maximum.94, ptr %35, align 4
  %36 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  %37 = load float, ptr %36, align 4, !invariant.load !297
  %38 = getelementptr inbounds float, ptr %arg2, i32 %linear_index2
  %39 = load float, ptr %38, align 4
  %add.45 = fadd float %37, %39
  %40 = getelementptr inbounds [512 x float], ptr %arg0, i32 0, i32 %10
  %41 = load float, ptr %40, align 4, !invariant.load !297
  %add.66 = fadd float %add.45, %41
  %region_0_10_constant_77 = load float, ptr @43, align 4
  %42 = fcmp oge float %add.66, %region_0_10_constant_77
  %43 = fcmp une float %add.66, %add.66
  %44 = or i1 %42, %43
  %maximum.98 = select i1 %44, float %add.66, float %region_0_10_constant_77
  %45 = getelementptr inbounds float, ptr %arg2, i32 %linear_index2
  store float %maximum.98, ptr %45, align 4
  %46 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  %47 = load float, ptr %46, align 4, !invariant.load !297
  %48 = getelementptr inbounds float, ptr %arg2, i32 %linear_index3
  %49 = load float, ptr %48, align 4
  %add.49 = fadd float %47, %49
  %50 = getelementptr inbounds [512 x float], ptr %arg0, i32 0, i32 %13
  %51 = load float, ptr %50, align 4, !invariant.load !297
  %add.610 = fadd float %add.49, %51
  %region_0_10_constant_711 = load float, ptr @43, align 4
  %52 = fcmp oge float %add.610, %region_0_10_constant_711
  %53 = fcmp une float %add.610, %add.610
  %54 = or i1 %52, %53
  %maximum.912 = select i1 %54, float %add.610, float %region_0_10_constant_711
  %55 = getelementptr inbounds float, ptr %arg2, i32 %linear_index3
  store float %maximum.912, ptr %55, align 4
  br label %fusion_428.in_bounds-after
}

define void @fusion_438(ptr noalias align 128 dereferenceable(25165824) %arg0, ptr noalias align 128 dereferenceable(16777216) %arg1, ptr noalias align 128 dereferenceable(25165824) %arg2, ptr noalias align 128 dereferenceable(16777216) %arg3) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !404
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 1048576
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 512
  %5 = udiv i32 %linear_index_base, 512
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 512
  %8 = udiv i32 %linear_index1, 512
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 512
  %11 = udiv i32 %linear_index2, 512
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 512
  %14 = udiv i32 %linear_index3, 512
  %15 = icmp ult i32 %linear_index_base, 4194304
  br i1 %15, label %fusion_438.in_bounds-true, label %fusion_438.in_bounds-after

fusion_438.in_bounds-after:                       ; preds = %fusion_438.in_bounds-true, %entry
  ret void

fusion_438.in_bounds-true:                        ; preds = %entry
  %16 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  %17 = load float, ptr %16, align 4, !invariant.load !297
  %18 = add i32 %5, 0
  %19 = add i32 %4, 256
  %20 = getelementptr inbounds [8192 x [768 x float]], ptr %arg2, i32 0, i32 %18, i32 %19
  %21 = load float, ptr %20, align 4, !invariant.load !297
  %add.5 = fadd float %17, %21
  %22 = add i32 %5, 0
  %23 = add i32 %4, 256
  %24 = getelementptr inbounds [8192 x [768 x float]], ptr %arg0, i32 0, i32 %22, i32 %23
  %25 = load float, ptr %24, align 4, !invariant.load !297
  %add.7 = fadd float %add.5, %25
  %26 = getelementptr inbounds float, ptr %arg3, i32 %linear_index_base
  store float %add.7, ptr %26, align 4
  %27 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  %28 = load float, ptr %27, align 4, !invariant.load !297
  %29 = add i32 %8, 0
  %30 = add i32 %7, 256
  %31 = getelementptr inbounds [8192 x [768 x float]], ptr %arg2, i32 0, i32 %29, i32 %30
  %32 = load float, ptr %31, align 4, !invariant.load !297
  %add.51 = fadd float %28, %32
  %33 = add i32 %8, 0
  %34 = add i32 %7, 256
  %35 = getelementptr inbounds [8192 x [768 x float]], ptr %arg0, i32 0, i32 %33, i32 %34
  %36 = load float, ptr %35, align 4, !invariant.load !297
  %add.72 = fadd float %add.51, %36
  %37 = getelementptr inbounds float, ptr %arg3, i32 %linear_index1
  store float %add.72, ptr %37, align 4
  %38 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  %39 = load float, ptr %38, align 4, !invariant.load !297
  %40 = add i32 %11, 0
  %41 = add i32 %10, 256
  %42 = getelementptr inbounds [8192 x [768 x float]], ptr %arg2, i32 0, i32 %40, i32 %41
  %43 = load float, ptr %42, align 4, !invariant.load !297
  %add.53 = fadd float %39, %43
  %44 = add i32 %11, 0
  %45 = add i32 %10, 256
  %46 = getelementptr inbounds [8192 x [768 x float]], ptr %arg0, i32 0, i32 %44, i32 %45
  %47 = load float, ptr %46, align 4, !invariant.load !297
  %add.74 = fadd float %add.53, %47
  %48 = getelementptr inbounds float, ptr %arg3, i32 %linear_index2
  store float %add.74, ptr %48, align 4
  %49 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  %50 = load float, ptr %49, align 4, !invariant.load !297
  %51 = add i32 %14, 0
  %52 = add i32 %13, 256
  %53 = getelementptr inbounds [8192 x [768 x float]], ptr %arg2, i32 0, i32 %51, i32 %52
  %54 = load float, ptr %53, align 4, !invariant.load !297
  %add.55 = fadd float %50, %54
  %55 = add i32 %14, 0
  %56 = add i32 %13, 256
  %57 = getelementptr inbounds [8192 x [768 x float]], ptr %arg0, i32 0, i32 %55, i32 %56
  %58 = load float, ptr %57, align 4, !invariant.load !297
  %add.76 = fadd float %add.55, %58
  %59 = getelementptr inbounds float, ptr %arg3, i32 %linear_index3
  store float %add.76, ptr %59, align 4
  br label %fusion_438.in_bounds-after
}

define void @fusion_437(ptr noalias align 128 dereferenceable(16777216) %arg0, ptr noalias align 16 dereferenceable(2048) %arg1, ptr noalias align 128 dereferenceable(16777216) %arg2) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !404
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 1048576
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 512
  %5 = udiv i32 %linear_index_base, 512
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 512
  %8 = udiv i32 %linear_index1, 512
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 512
  %11 = udiv i32 %linear_index2, 512
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 512
  %14 = udiv i32 %linear_index3, 512
  %15 = icmp ult i32 %linear_index_base, 4194304
  br i1 %15, label %fusion_437.in_bounds-true, label %fusion_437.in_bounds-after

fusion_437.in_bounds-after:                       ; preds = %fusion_437.in_bounds-true, %entry
  ret void

fusion_437.in_bounds-true:                        ; preds = %entry
  %16 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_base
  %17 = load float, ptr %16, align 4, !invariant.load !297
  %18 = getelementptr inbounds [512 x float], ptr %arg1, i32 0, i32 %4
  %19 = load float, ptr %18, align 4, !invariant.load !297
  %add.4 = fadd float %17, %19
  %region_0_8_constant_5 = load float, ptr @44, align 4
  %20 = fcmp oge float %add.4, %region_0_8_constant_5
  %21 = fcmp une float %add.4, %add.4
  %22 = or i1 %20, %21
  %maximum.7 = select i1 %22, float %add.4, float %region_0_8_constant_5
  %23 = getelementptr inbounds float, ptr %arg2, i32 %linear_index_base
  store float %maximum.7, ptr %23, align 4
  %24 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  %25 = load float, ptr %24, align 4, !invariant.load !297
  %26 = getelementptr inbounds [512 x float], ptr %arg1, i32 0, i32 %7
  %27 = load float, ptr %26, align 4, !invariant.load !297
  %add.41 = fadd float %25, %27
  %region_0_8_constant_52 = load float, ptr @44, align 4
  %28 = fcmp oge float %add.41, %region_0_8_constant_52
  %29 = fcmp une float %add.41, %add.41
  %30 = or i1 %28, %29
  %maximum.73 = select i1 %30, float %add.41, float %region_0_8_constant_52
  %31 = getelementptr inbounds float, ptr %arg2, i32 %linear_index1
  store float %maximum.73, ptr %31, align 4
  %32 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  %33 = load float, ptr %32, align 4, !invariant.load !297
  %34 = getelementptr inbounds [512 x float], ptr %arg1, i32 0, i32 %10
  %35 = load float, ptr %34, align 4, !invariant.load !297
  %add.44 = fadd float %33, %35
  %region_0_8_constant_55 = load float, ptr @44, align 4
  %36 = fcmp oge float %add.44, %region_0_8_constant_55
  %37 = fcmp une float %add.44, %add.44
  %38 = or i1 %36, %37
  %maximum.76 = select i1 %38, float %add.44, float %region_0_8_constant_55
  %39 = getelementptr inbounds float, ptr %arg2, i32 %linear_index2
  store float %maximum.76, ptr %39, align 4
  %40 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  %41 = load float, ptr %40, align 4, !invariant.load !297
  %42 = getelementptr inbounds [512 x float], ptr %arg1, i32 0, i32 %13
  %43 = load float, ptr %42, align 4, !invariant.load !297
  %add.47 = fadd float %41, %43
  %region_0_8_constant_58 = load float, ptr @44, align 4
  %44 = fcmp oge float %add.47, %region_0_8_constant_58
  %45 = fcmp une float %add.47, %add.47
  %46 = or i1 %44, %45
  %maximum.79 = select i1 %46, float %add.47, float %region_0_8_constant_58
  %47 = getelementptr inbounds float, ptr %arg2, i32 %linear_index3
  store float %maximum.79, ptr %47, align 4
  br label %fusion_437.in_bounds-after
}

define void @fusion_433(ptr noalias align 16 dereferenceable(512) %arg0, ptr noalias align 128 dereferenceable(4194304) %arg1, ptr noalias align 16 dereferenceable(512) %arg2, ptr noalias align 128 dereferenceable(4194304) %arg3, ptr noalias align 16 dereferenceable(512) %arg4, ptr noalias align 128 dereferenceable(32768) %arg5, ptr noalias align 128 dereferenceable(4194304) %arg6) {
entry:
  %initial_value_addr = alloca float, align 4
  %return_buffer47 = alloca float, align 4
  %result_from_other_lane45 = alloca float, align 4
  %return_buffer44 = alloca float, align 4
  %result_from_other_lane42 = alloca float, align 4
  %return_buffer41 = alloca float, align 4
  %result_from_other_lane39 = alloca float, align 4
  %return_buffer38 = alloca float, align 4
  %result_from_other_lane36 = alloca float, align 4
  %return_buffer35 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer33 = alloca float, align 4
  %tile_loop.invar_address12 = alloca i32, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %inter_warp_reduce-after, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_24_constant_8 = load float, ptr @45, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_24_constant_8, ptr %2, align 4
  %3 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !352
  %4 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !368
  %5 = urem i32 %3, 32
  %6 = udiv i32 %3, 32
  %7 = mul i32 %4, 3
  %8 = add i32 %7, %6
  %9 = icmp ult i32 %8, 8192
  br i1 %9, label %10, label %early_return

10:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %5, 32
  %thread_id.y = udiv i32 %5, 32
  %lane_id = urem i32 %5, 32
  %11 = udiv i32 %8, 1
  %12 = urem i32 %11, 1
  %13 = udiv i32 %8, 1
  %14 = urem i32 %13, 8192
  %15 = udiv i32 %8, 8192
  %16 = icmp eq i32 %14, 8191
  %tile_bound = select i1 %16, i32 1, i32 1
  %17 = icmp eq i32 %12, 0
  %tile_bound1 = select i1 %17, i32 128, i32 512
  %tile_origin.0 = mul i32 %15, 1
  %tile_origin.1 = mul i32 %14, 1
  %tile_origin.2 = mul i32 %12, 512
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %is_full_tile-after, %10
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %18 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %18, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 1
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %19 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %20 = icmp eq i32 512, %tile_bound1
  br i1 %20, label %is_full_tile-true, label %is_full_tile-false

is_full_tile-after:                               ; preds = %tile_loop.loop_exit9, %tile_loop.loop_exit
  br label %y_in_tile.loop_header, !llvm.loop !405

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %partial_reduction_result34 = load float, ptr %current_output, align 4
  %21 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result34, i32 16, i32 31)
  store float %21, ptr %result_from_other_lane, align 4
  call void @region_1_18(ptr %current_output, ptr %result_from_other_lane, ptr %return_buffer35)
  %22 = load float, ptr %return_buffer35, align 4
  store float %22, ptr %current_output, align 4
  %partial_reduction_result37 = load float, ptr %current_output, align 4
  %23 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result37, i32 8, i32 31)
  store float %23, ptr %result_from_other_lane36, align 4
  call void @region_1_18(ptr %current_output, ptr %result_from_other_lane36, ptr %return_buffer38)
  %24 = load float, ptr %return_buffer38, align 4
  store float %24, ptr %current_output, align 4
  %partial_reduction_result40 = load float, ptr %current_output, align 4
  %25 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result40, i32 4, i32 31)
  store float %25, ptr %result_from_other_lane39, align 4
  call void @region_1_18(ptr %current_output, ptr %result_from_other_lane39, ptr %return_buffer41)
  %26 = load float, ptr %return_buffer41, align 4
  store float %26, ptr %current_output, align 4
  %partial_reduction_result43 = load float, ptr %current_output, align 4
  %27 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result43, i32 2, i32 31)
  store float %27, ptr %result_from_other_lane42, align 4
  call void @region_1_18(ptr %current_output, ptr %result_from_other_lane42, ptr %return_buffer44)
  %28 = load float, ptr %return_buffer44, align 4
  store float %28, ptr %current_output, align 4
  %partial_reduction_result46 = load float, ptr %current_output, align 4
  %29 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result46, i32 1, i32 31)
  store float %29, ptr %result_from_other_lane45, align 4
  call void @region_1_18(ptr %current_output, ptr %result_from_other_lane45, ptr %return_buffer47)
  %30 = load float, ptr %return_buffer47, align 4
  store float %30, ptr %current_output, align 4
  %31 = udiv i32 %thread_id.x, 32
  %32 = icmp eq i32 %lane_id, 0
  br i1 %32, label %intra_warp_reduce_write-true, label %intra_warp_reduce_write-after

intra_warp_reduce_write-after:                    ; preds = %intra_warp_reduce_write-true, %y_in_tile.loop_exit
  call void @llvm.nvvm.barrier0()
  %33 = icmp eq i32 %31, 0
  br i1 %33, label %inter_warp_reduce-true, label %inter_warp_reduce-after

inter_warp_reduce-after:                          ; preds = %reduction_write_output-after, %intra_warp_reduce_write-after
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

is_full_tile-true:                                ; preds = %y_in_tile.loop_body
  %34 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %tile_loop.loop_body, %is_full_tile-true
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %35 = icmp uge i32 %tile_loop.indvar, 16
  br i1 %35, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %36 = icmp eq i32 %tile_loop.indvar, 0
  %37 = mul i32 %tile_loop.indvar, 32
  %38 = add i32 %37, 0
  %x_loc = add i32 %38, %34
  %39 = add i32 %tile_origin.1, %y_in_tile.indvar
  %40 = add i32 %tile_origin.2, %x_loc
  %Arg_3.4 = getelementptr inbounds [8192 x [128 x float]], ptr %arg3, i32 0, i32 %39, i32 %40
  %Arg_3.43 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  %Arg_4.5 = getelementptr inbounds [128 x float], ptr %arg4, i32 0, i32 %40
  %Arg_4.54 = load float, ptr %Arg_4.5, align 4, !invariant.load !297
  %add.7 = fadd float %Arg_3.43, %Arg_4.54
  %region_0_24_constant_85 = load float, ptr @45, align 4
  %41 = fcmp oge float %add.7, %region_0_24_constant_85
  %42 = fcmp une float %add.7, %add.7
  %43 = or i1 %41, %42
  %maximum.10 = select i1 %43, float %add.7, float %region_0_24_constant_85
  %Arg_1.2 = getelementptr inbounds [8192 x [128 x float]], ptr %arg1, i32 0, i32 %39, i32 %40
  %Arg_1.26 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %Arg_2.3 = getelementptr inbounds [128 x float], ptr %arg2, i32 0, i32 %40
  %Arg_2.37 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %add.12 = fadd float %Arg_1.26, %Arg_2.37
  %44 = fcmp oge float %add.12, %region_0_24_constant_85
  %45 = fcmp une float %add.12, %add.12
  %46 = or i1 %44, %45
  %maximum.13 = select i1 %46, float %add.12, float %region_0_24_constant_85
  %add.14 = fadd float %maximum.10, %maximum.13
  %Arg_0.1 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %40, i32 0
  %Arg_0.18 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %multiply.17 = fmul float %add.14, %Arg_0.18
  store float %multiply.17, ptr %reduction_input_address, align 4
  %47 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_18(ptr %47, ptr %reduction_input_address, ptr %return_buffer)
  %48 = load float, ptr %return_buffer, align 4
  store float %48, ptr %47, align 4
  %49 = getelementptr inbounds [8192 x [128 x float]], ptr %arg6, i32 0, i32 %39, i32 %40
  store float %add.14, ptr %49, align 4
  br label %tile_loop.loop_header, !llvm.loop !406

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %is_full_tile-after

is_full_tile-false:                               ; preds = %y_in_tile.loop_body
  %50 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address12, align 4
  br label %tile_loop.loop_header10

tile_loop.loop_header10:                          ; preds = %x_in_tile-after, %is_full_tile-false
  %tile_loop.indvar13 = load i32, ptr %tile_loop.invar_address12, align 4
  %51 = icmp uge i32 %tile_loop.indvar13, 16
  br i1 %51, label %tile_loop.loop_exit9, label %tile_loop.loop_body11

tile_loop.loop_body11:                            ; preds = %tile_loop.loop_header10
  %invar.inc14 = add nuw nsw i32 %tile_loop.indvar13, 1
  store i32 %invar.inc14, ptr %tile_loop.invar_address12, align 4
  %52 = icmp eq i32 %tile_loop.indvar13, 0
  %53 = mul i32 %tile_loop.indvar13, 32
  %54 = add i32 %53, 0
  %x_loc15 = add i32 %54, %50
  %55 = add i32 %tile_origin.1, %y_in_tile.indvar
  %56 = add i32 %tile_origin.2, %x_loc15
  %57 = icmp ult i32 %x_loc15, %tile_bound1
  br i1 %57, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body11
  br label %tile_loop.loop_header10, !llvm.loop !407

tile_loop.loop_exit9:                             ; preds = %tile_loop.loop_header10
  br label %is_full_tile-after

x_in_tile-true:                                   ; preds = %tile_loop.loop_body11
  %Arg_3.416 = getelementptr inbounds [8192 x [128 x float]], ptr %arg3, i32 0, i32 %55, i32 %56
  %Arg_3.417 = load float, ptr %Arg_3.416, align 4, !invariant.load !297
  %Arg_4.518 = getelementptr inbounds [128 x float], ptr %arg4, i32 0, i32 %56
  %Arg_4.519 = load float, ptr %Arg_4.518, align 4, !invariant.load !297
  %add.720 = fadd float %Arg_3.417, %Arg_4.519
  %region_0_24_constant_821 = load float, ptr @45, align 4
  %58 = fcmp oge float %add.720, %region_0_24_constant_821
  %59 = fcmp une float %add.720, %add.720
  %60 = or i1 %58, %59
  %maximum.1022 = select i1 %60, float %add.720, float %region_0_24_constant_821
  %Arg_1.223 = getelementptr inbounds [8192 x [128 x float]], ptr %arg1, i32 0, i32 %55, i32 %56
  %Arg_1.224 = load float, ptr %Arg_1.223, align 4, !invariant.load !297
  %Arg_2.325 = getelementptr inbounds [128 x float], ptr %arg2, i32 0, i32 %56
  %Arg_2.326 = load float, ptr %Arg_2.325, align 4, !invariant.load !297
  %add.1227 = fadd float %Arg_1.224, %Arg_2.326
  %61 = fcmp oge float %add.1227, %region_0_24_constant_821
  %62 = fcmp une float %add.1227, %add.1227
  %63 = or i1 %61, %62
  %maximum.1328 = select i1 %63, float %add.1227, float %region_0_24_constant_821
  %add.1429 = fadd float %maximum.1022, %maximum.1328
  %Arg_0.130 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %56, i32 0
  %Arg_0.131 = load float, ptr %Arg_0.130, align 4, !invariant.load !297
  %multiply.1732 = fmul float %add.1429, %Arg_0.131
  store float %multiply.1732, ptr %reduction_input_address, align 4
  %64 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_18(ptr %64, ptr %reduction_input_address, ptr %return_buffer33)
  %65 = load float, ptr %return_buffer33, align 4
  store float %65, ptr %64, align 4
  %66 = getelementptr inbounds [8192 x [128 x float]], ptr %arg6, i32 0, i32 %55, i32 %56
  store float %add.1429, ptr %66, align 4
  br label %x_in_tile-after

intra_warp_reduce_write-true:                     ; preds = %y_in_tile.loop_exit
  %67 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache42, i32 0, i32 %6, i32 0, i32 %31
  %68 = addrspacecast ptr addrspace(3) %67 to ptr
  %69 = load float, ptr %current_output, align 4
  store float %69, ptr %68, align 4
  br label %intra_warp_reduce_write-after

inter_warp_reduce-true:                           ; preds = %intra_warp_reduce_write-after
  %70 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache42, i32 0, i32 %6, i32 0, i32 %lane_id
  %71 = addrspacecast ptr addrspace(3) %70 to ptr
  store float %region_0_24_constant_8, ptr %initial_value_addr, align 4
  %72 = icmp ult i32 %thread_id.x, 1
  %73 = select i1 %72, ptr %71, ptr %initial_value_addr
  %74 = icmp eq i32 %thread_id.x, 0
  br i1 %74, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %inter_warp_reduce-true
  br label %inter_warp_reduce-after

reduction_write_output-true:                      ; preds = %inter_warp_reduce-true
  %75 = mul i32 %thread_id.x, 1
  %76 = add i32 %tile_origin.1, %thread_id.y
  %77 = add i32 %tile_origin.2, %75
  %78 = add i32 %77, 0
  %79 = udiv i32 %76, 1
  %output_element_address = getelementptr inbounds [8192 x float], ptr %arg5, i32 0, i32 %79
  %output = load float, ptr %73, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after
}

define internal void @region_1_18(ptr dereferenceable(4) %Arg_0.19.typed, ptr dereferenceable(4) %Arg_1.20.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.21.typed = alloca float, align 4
  %Arg_0.19 = load float, ptr %Arg_0.19.typed, align 4
  %Arg_1.20 = load float, ptr %Arg_1.20.typed, align 4
  %add.21 = fadd float %Arg_0.19, %Arg_1.20
  store float %add.21, ptr %add.21.typed, align 4
  %load_ret_value = load float, ptr %add.21.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @concatenate_107(ptr noalias align 16 dereferenceable(31719424) %arg0, ptr noalias align 128 dereferenceable(4194304) %arg1, ptr noalias align 128 dereferenceable(4194304) %arg2, ptr noalias align 128 dereferenceable(4194304) %arg3, ptr noalias align 128 dereferenceable(4194304) %arg4, ptr noalias align 16 dereferenceable(2097152) %arg5, ptr noalias align 16 dereferenceable(4194304) %arg6, ptr noalias align 16 dereferenceable(1048576) %arg7, ptr noalias align 16 dereferenceable(2097152) %arg8, ptr noalias align 16 dereferenceable(1048576) %arg9, ptr noalias align 16 dereferenceable(2097152) %arg10, ptr noalias align 16 dereferenceable(524288) %arg11, ptr noalias align 16 dereferenceable(1048576) %arg12, ptr noalias align 16 dereferenceable(524288) %arg13, ptr noalias align 16 dereferenceable(1048576) %arg14, ptr noalias align 128 dereferenceable(64225280) %arg15) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !408
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 16056320
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 1960
  %5 = udiv i32 %linear_index, 1960
  %6 = icmp ult i32 %linear_index, 16056320
  br i1 %6, label %concatenate_107.in_bounds-true, label %concatenate_107.in_bounds-after

concatenate_107.in_bounds-after:                  ; preds = %concatenate.16.merge, %entry
  ret void

concatenate_107.in_bounds-true:                   ; preds = %entry
  br label %concatenate.pivot.1672.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %7 = phi i32 [ 0, %concatenate.pivot.0. ]
  %8 = sub nsw i32 %4, %7
  %9 = udiv i32 %linear_index, 1960
  %10 = mul i32 %9, 968
  %11 = add i32 %10, %8
  %12 = udiv i32 %11, 1
  %13 = urem i32 %12, 968
  %14 = udiv i32 %11, 968
  %15 = getelementptr inbounds float, ptr %arg0, i32 %11
  %16 = load float, ptr %15, align 4, !invariant.load !297
  br label %concatenate.16.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.968.1
  %17 = phi i32 [ 968, %concatenate.pivot.968.1 ]
  %18 = sub nsw i32 %4, %17
  %19 = udiv i32 %linear_index, 1960
  %20 = mul i32 %19, 128
  %21 = add i32 %20, %18
  %22 = udiv i32 %21, 1
  %23 = urem i32 %22, 128
  %24 = udiv i32 %21, 128
  %25 = getelementptr inbounds float, ptr %arg1, i32 %21
  %26 = load float, ptr %25, align 4, !invariant.load !297
  br label %concatenate.16.merge

concat_index_from_operand_id2:                    ; preds = %concatenate.pivot.1096.2
  %27 = phi i32 [ 1096, %concatenate.pivot.1096.2 ]
  %28 = sub nsw i32 %4, %27
  %29 = udiv i32 %linear_index, 1960
  %30 = mul i32 %29, 128
  %31 = add i32 %30, %28
  %32 = udiv i32 %31, 1
  %33 = urem i32 %32, 128
  %34 = udiv i32 %31, 128
  %35 = getelementptr inbounds float, ptr %arg2, i32 %31
  %36 = load float, ptr %35, align 4, !invariant.load !297
  br label %concatenate.16.merge

concat_index_from_operand_id3:                    ; preds = %concatenate.pivot.1224.3
  %37 = phi i32 [ 1224, %concatenate.pivot.1224.3 ]
  %38 = sub nsw i32 %4, %37
  %39 = udiv i32 %linear_index, 1960
  %40 = mul i32 %39, 128
  %41 = add i32 %40, %38
  %42 = udiv i32 %41, 1
  %43 = urem i32 %42, 128
  %44 = udiv i32 %41, 128
  %45 = getelementptr inbounds float, ptr %arg3, i32 %41
  %46 = load float, ptr %45, align 4, !invariant.load !297
  br label %concatenate.16.merge

concat_index_from_operand_id4:                    ; preds = %concatenate.pivot.1352.4
  %47 = phi i32 [ 1352, %concatenate.pivot.1352.4 ]
  %48 = sub nsw i32 %4, %47
  %49 = udiv i32 %linear_index, 1960
  %50 = mul i32 %49, 128
  %51 = add i32 %50, %48
  %52 = udiv i32 %51, 1
  %53 = urem i32 %52, 128
  %54 = udiv i32 %51, 128
  %55 = getelementptr inbounds float, ptr %arg4, i32 %51
  %56 = load float, ptr %55, align 4, !invariant.load !297
  br label %concatenate.16.merge

concat_index_from_operand_id5:                    ; preds = %concatenate.pivot.1480.5
  %57 = phi i32 [ 1480, %concatenate.pivot.1480.5 ]
  %58 = sub nsw i32 %4, %57
  %59 = udiv i32 %linear_index, 1960
  %60 = mul i32 %59, 64
  %61 = add i32 %60, %58
  %62 = udiv i32 %61, 1
  %63 = urem i32 %62, 64
  %64 = udiv i32 %61, 64
  %65 = getelementptr inbounds float, ptr %arg5, i32 %61
  %66 = load float, ptr %65, align 4, !invariant.load !297
  br label %concatenate.16.merge

concat_index_from_operand_id6:                    ; preds = %concatenate.pivot.1544.6
  %67 = phi i32 [ 1544, %concatenate.pivot.1544.6 ]
  %68 = sub nsw i32 %4, %67
  %69 = udiv i32 %linear_index, 1960
  %70 = mul i32 %69, 128
  %71 = add i32 %70, %68
  %72 = udiv i32 %71, 1
  %73 = urem i32 %72, 128
  %74 = udiv i32 %71, 128
  %75 = getelementptr inbounds float, ptr %arg6, i32 %71
  %76 = load float, ptr %75, align 4, !invariant.load !297
  br label %concatenate.16.merge

concat_index_from_operand_id7:                    ; preds = %concatenate.pivot.1672.7
  %77 = phi i32 [ 1672, %concatenate.pivot.1672.7 ]
  %78 = sub nsw i32 %4, %77
  %79 = udiv i32 %linear_index, 1960
  %80 = mul i32 %79, 32
  %81 = add i32 %80, %78
  %82 = udiv i32 %81, 1
  %83 = urem i32 %82, 32
  %84 = udiv i32 %81, 32
  %85 = getelementptr inbounds float, ptr %arg7, i32 %81
  %86 = load float, ptr %85, align 4, !invariant.load !297
  br label %concatenate.16.merge

concat_index_from_operand_id8:                    ; preds = %concatenate.pivot.1704.8
  %87 = phi i32 [ 1704, %concatenate.pivot.1704.8 ]
  %88 = sub nsw i32 %4, %87
  %89 = udiv i32 %linear_index, 1960
  %90 = mul i32 %89, 64
  %91 = add i32 %90, %88
  %92 = udiv i32 %91, 1
  %93 = urem i32 %92, 64
  %94 = udiv i32 %91, 64
  %95 = getelementptr inbounds float, ptr %arg8, i32 %91
  %96 = load float, ptr %95, align 4, !invariant.load !297
  br label %concatenate.16.merge

concat_index_from_operand_id9:                    ; preds = %concatenate.pivot.1768.9
  %97 = phi i32 [ 1768, %concatenate.pivot.1768.9 ]
  %98 = sub nsw i32 %4, %97
  %99 = udiv i32 %linear_index, 1960
  %100 = mul i32 %99, 32
  %101 = add i32 %100, %98
  %102 = udiv i32 %101, 1
  %103 = urem i32 %102, 32
  %104 = udiv i32 %101, 32
  %105 = getelementptr inbounds float, ptr %arg9, i32 %101
  %106 = load float, ptr %105, align 4, !invariant.load !297
  br label %concatenate.16.merge

concat_index_from_operand_id10:                   ; preds = %concatenate.pivot.1800.10
  %107 = phi i32 [ 1800, %concatenate.pivot.1800.10 ]
  %108 = sub nsw i32 %4, %107
  %109 = udiv i32 %linear_index, 1960
  %110 = mul i32 %109, 64
  %111 = add i32 %110, %108
  %112 = udiv i32 %111, 1
  %113 = urem i32 %112, 64
  %114 = udiv i32 %111, 64
  %115 = getelementptr inbounds float, ptr %arg10, i32 %111
  %116 = load float, ptr %115, align 4, !invariant.load !297
  br label %concatenate.16.merge

concat_index_from_operand_id11:                   ; preds = %concatenate.pivot.1864.11
  %117 = phi i32 [ 1864, %concatenate.pivot.1864.11 ]
  %118 = sub nsw i32 %4, %117
  %119 = udiv i32 %linear_index, 1960
  %120 = mul i32 %119, 16
  %121 = add i32 %120, %118
  %122 = udiv i32 %121, 1
  %123 = urem i32 %122, 16
  %124 = udiv i32 %121, 16
  %125 = getelementptr inbounds float, ptr %arg11, i32 %121
  %126 = load float, ptr %125, align 4, !invariant.load !297
  br label %concatenate.16.merge

concat_index_from_operand_id12:                   ; preds = %concatenate.pivot.1880.12
  %127 = phi i32 [ 1880, %concatenate.pivot.1880.12 ]
  %128 = sub nsw i32 %4, %127
  %129 = udiv i32 %linear_index, 1960
  %130 = mul i32 %129, 32
  %131 = add i32 %130, %128
  %132 = udiv i32 %131, 1
  %133 = urem i32 %132, 32
  %134 = udiv i32 %131, 32
  %135 = getelementptr inbounds float, ptr %arg12, i32 %131
  %136 = load float, ptr %135, align 4, !invariant.load !297
  br label %concatenate.16.merge

concat_index_from_operand_id13:                   ; preds = %concatenate.pivot.1912.13
  %137 = phi i32 [ 1912, %concatenate.pivot.1912.13 ]
  %138 = sub nsw i32 %4, %137
  %139 = udiv i32 %linear_index, 1960
  %140 = mul i32 %139, 16
  %141 = add i32 %140, %138
  %142 = udiv i32 %141, 1
  %143 = urem i32 %142, 16
  %144 = udiv i32 %141, 16
  %145 = getelementptr inbounds float, ptr %arg13, i32 %141
  %146 = load float, ptr %145, align 4, !invariant.load !297
  br label %concatenate.16.merge

concat_index_from_operand_id14:                   ; preds = %concatenate.pivot.1928.14
  %147 = phi i32 [ 1928, %concatenate.pivot.1928.14 ]
  %148 = sub nsw i32 %4, %147
  %149 = udiv i32 %linear_index, 1960
  %150 = mul i32 %149, 32
  %151 = add i32 %150, %148
  %152 = udiv i32 %151, 1
  %153 = urem i32 %152, 32
  %154 = udiv i32 %151, 32
  %155 = getelementptr inbounds float, ptr %arg14, i32 %151
  %156 = load float, ptr %155, align 4, !invariant.load !297
  br label %concatenate.16.merge

concatenate.pivot.1672.:                          ; preds = %concatenate_107.in_bounds-true
  %157 = icmp ult i32 %4, 1672
  br i1 %157, label %concatenate.pivot.1224., label %concatenate.pivot.1864.

concatenate.pivot.1224.:                          ; preds = %concatenate.pivot.1672.
  %158 = icmp ult i32 %4, 1224
  br i1 %158, label %concatenate.pivot.968., label %concatenate.pivot.1480.

concatenate.pivot.968.:                           ; preds = %concatenate.pivot.1224.
  %159 = icmp ult i32 %4, 968
  br i1 %159, label %concatenate.pivot.0., label %concatenate.pivot.1096.

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.968.
  br label %concat_index_from_operand_id0

concatenate.pivot.1096.:                          ; preds = %concatenate.pivot.968.
  %160 = icmp ult i32 %4, 1096
  br i1 %160, label %concatenate.pivot.968.1, label %concatenate.pivot.1096.2

concatenate.pivot.968.1:                          ; preds = %concatenate.pivot.1096.
  br label %concat_index_from_operand_id1

concatenate.pivot.1096.2:                         ; preds = %concatenate.pivot.1096.
  br label %concat_index_from_operand_id2

concatenate.pivot.1480.:                          ; preds = %concatenate.pivot.1224.
  %161 = icmp ult i32 %4, 1480
  br i1 %161, label %concatenate.pivot.1352., label %concatenate.pivot.1544.

concatenate.pivot.1352.:                          ; preds = %concatenate.pivot.1480.
  %162 = icmp ult i32 %4, 1352
  br i1 %162, label %concatenate.pivot.1224.3, label %concatenate.pivot.1352.4

concatenate.pivot.1224.3:                         ; preds = %concatenate.pivot.1352.
  br label %concat_index_from_operand_id3

concatenate.pivot.1352.4:                         ; preds = %concatenate.pivot.1352.
  br label %concat_index_from_operand_id4

concatenate.pivot.1544.:                          ; preds = %concatenate.pivot.1480.
  %163 = icmp ult i32 %4, 1544
  br i1 %163, label %concatenate.pivot.1480.5, label %concatenate.pivot.1544.6

concatenate.pivot.1480.5:                         ; preds = %concatenate.pivot.1544.
  br label %concat_index_from_operand_id5

concatenate.pivot.1544.6:                         ; preds = %concatenate.pivot.1544.
  br label %concat_index_from_operand_id6

concatenate.pivot.1864.:                          ; preds = %concatenate.pivot.1672.
  %164 = icmp ult i32 %4, 1864
  br i1 %164, label %concatenate.pivot.1768., label %concatenate.pivot.1912.

concatenate.pivot.1768.:                          ; preds = %concatenate.pivot.1864.
  %165 = icmp ult i32 %4, 1768
  br i1 %165, label %concatenate.pivot.1704., label %concatenate.pivot.1800.

concatenate.pivot.1704.:                          ; preds = %concatenate.pivot.1768.
  %166 = icmp ult i32 %4, 1704
  br i1 %166, label %concatenate.pivot.1672.7, label %concatenate.pivot.1704.8

concatenate.pivot.1672.7:                         ; preds = %concatenate.pivot.1704.
  br label %concat_index_from_operand_id7

concatenate.pivot.1704.8:                         ; preds = %concatenate.pivot.1704.
  br label %concat_index_from_operand_id8

concatenate.pivot.1800.:                          ; preds = %concatenate.pivot.1768.
  %167 = icmp ult i32 %4, 1800
  br i1 %167, label %concatenate.pivot.1768.9, label %concatenate.pivot.1800.10

concatenate.pivot.1768.9:                         ; preds = %concatenate.pivot.1800.
  br label %concat_index_from_operand_id9

concatenate.pivot.1800.10:                        ; preds = %concatenate.pivot.1800.
  br label %concat_index_from_operand_id10

concatenate.pivot.1912.:                          ; preds = %concatenate.pivot.1864.
  %168 = icmp ult i32 %4, 1912
  br i1 %168, label %concatenate.pivot.1880., label %concatenate.pivot.1928.

concatenate.pivot.1880.:                          ; preds = %concatenate.pivot.1912.
  %169 = icmp ult i32 %4, 1880
  br i1 %169, label %concatenate.pivot.1864.11, label %concatenate.pivot.1880.12

concatenate.pivot.1864.11:                        ; preds = %concatenate.pivot.1880.
  br label %concat_index_from_operand_id11

concatenate.pivot.1880.12:                        ; preds = %concatenate.pivot.1880.
  br label %concat_index_from_operand_id12

concatenate.pivot.1928.:                          ; preds = %concatenate.pivot.1912.
  %170 = icmp ult i32 %4, 1928
  br i1 %170, label %concatenate.pivot.1912.13, label %concatenate.pivot.1928.14

concatenate.pivot.1912.13:                        ; preds = %concatenate.pivot.1928.
  br label %concat_index_from_operand_id13

concatenate.pivot.1928.14:                        ; preds = %concatenate.pivot.1928.
  br label %concat_index_from_operand_id14

concatenate.16.merge:                             ; preds = %concat_index_from_operand_id14, %concat_index_from_operand_id13, %concat_index_from_operand_id12, %concat_index_from_operand_id11, %concat_index_from_operand_id10, %concat_index_from_operand_id9, %concat_index_from_operand_id8, %concat_index_from_operand_id7, %concat_index_from_operand_id6, %concat_index_from_operand_id5, %concat_index_from_operand_id4, %concat_index_from_operand_id3, %concat_index_from_operand_id2, %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %171 = phi float [ %16, %concat_index_from_operand_id0 ], [ %26, %concat_index_from_operand_id1 ], [ %36, %concat_index_from_operand_id2 ], [ %46, %concat_index_from_operand_id3 ], [ %56, %concat_index_from_operand_id4 ], [ %66, %concat_index_from_operand_id5 ], [ %76, %concat_index_from_operand_id6 ], [ %86, %concat_index_from_operand_id7 ], [ %96, %concat_index_from_operand_id8 ], [ %106, %concat_index_from_operand_id9 ], [ %116, %concat_index_from_operand_id10 ], [ %126, %concat_index_from_operand_id11 ], [ %136, %concat_index_from_operand_id12 ], [ %146, %concat_index_from_operand_id13 ], [ %156, %concat_index_from_operand_id14 ]
  %172 = getelementptr inbounds float, ptr %arg15, i32 %linear_index
  store float %171, ptr %172, align 4
  br label %concatenate_107.in_bounds-after
}

define void @fusion_422(ptr noalias align 128 dereferenceable(16777216) %arg0, ptr noalias align 16 dereferenceable(2048) %arg1) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !404
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 1048576
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 512
  %5 = udiv i32 %linear_index_base, 512
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 512
  %8 = udiv i32 %linear_index1, 512
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 512
  %11 = udiv i32 %linear_index2, 512
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 512
  %14 = udiv i32 %linear_index3, 512
  %15 = icmp ult i32 %linear_index_base, 4194304
  br i1 %15, label %fusion_422.in_bounds-true, label %fusion_422.in_bounds-after

fusion_422.in_bounds-after:                       ; preds = %fusion_422.in_bounds-true, %entry
  ret void

fusion_422.in_bounds-true:                        ; preds = %entry
  %16 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_base
  %17 = load float, ptr %16, align 4
  %18 = getelementptr inbounds [512 x float], ptr %arg1, i32 0, i32 %4
  %19 = load float, ptr %18, align 4, !invariant.load !297
  %add.4 = fadd float %17, %19
  %region_0_8_constant_5 = load float, ptr @46, align 4
  %20 = fcmp oge float %add.4, %region_0_8_constant_5
  %21 = fcmp une float %add.4, %add.4
  %22 = or i1 %20, %21
  %maximum.7 = select i1 %22, float %add.4, float %region_0_8_constant_5
  %23 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_base
  store float %maximum.7, ptr %23, align 4
  %24 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  %25 = load float, ptr %24, align 4
  %26 = getelementptr inbounds [512 x float], ptr %arg1, i32 0, i32 %7
  %27 = load float, ptr %26, align 4, !invariant.load !297
  %add.41 = fadd float %25, %27
  %region_0_8_constant_52 = load float, ptr @46, align 4
  %28 = fcmp oge float %add.41, %region_0_8_constant_52
  %29 = fcmp une float %add.41, %add.41
  %30 = or i1 %28, %29
  %maximum.73 = select i1 %30, float %add.41, float %region_0_8_constant_52
  %31 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  store float %maximum.73, ptr %31, align 4
  %32 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  %33 = load float, ptr %32, align 4
  %34 = getelementptr inbounds [512 x float], ptr %arg1, i32 0, i32 %10
  %35 = load float, ptr %34, align 4, !invariant.load !297
  %add.44 = fadd float %33, %35
  %region_0_8_constant_55 = load float, ptr @46, align 4
  %36 = fcmp oge float %add.44, %region_0_8_constant_55
  %37 = fcmp une float %add.44, %add.44
  %38 = or i1 %36, %37
  %maximum.76 = select i1 %38, float %add.44, float %region_0_8_constant_55
  %39 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  store float %maximum.76, ptr %39, align 4
  %40 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  %41 = load float, ptr %40, align 4
  %42 = getelementptr inbounds [512 x float], ptr %arg1, i32 0, i32 %13
  %43 = load float, ptr %42, align 4, !invariant.load !297
  %add.47 = fadd float %41, %43
  %region_0_8_constant_58 = load float, ptr @46, align 4
  %44 = fcmp oge float %add.47, %region_0_8_constant_58
  %45 = fcmp une float %add.47, %add.47
  %46 = or i1 %44, %45
  %maximum.79 = select i1 %46, float %add.47, float %region_0_8_constant_58
  %47 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  store float %maximum.79, ptr %47, align 4
  br label %fusion_422.in_bounds-after
}

define void @fusion_418(ptr noalias align 16 dereferenceable(512) %arg0, ptr noalias align 128 dereferenceable(4194304) %arg1, ptr noalias align 16 dereferenceable(512) %arg2, ptr noalias align 16 dereferenceable(512) %arg3, ptr noalias align 16 dereferenceable(512) %arg4, ptr noalias align 16 dereferenceable(512) %arg5, ptr noalias align 128 dereferenceable(32768) %arg6, ptr noalias align 128 dereferenceable(32768) %arg7, ptr noalias align 128 dereferenceable(32768) %arg8, ptr noalias align 128 dereferenceable(32768) %arg9) {
entry:
  %initial_value_addr136 = alloca float, align 4
  %return_buffer131 = alloca float, align 4
  %result_from_other_lane129 = alloca float, align 4
  %return_buffer128 = alloca float, align 4
  %result_from_other_lane126 = alloca float, align 4
  %return_buffer125 = alloca float, align 4
  %result_from_other_lane123 = alloca float, align 4
  %return_buffer122 = alloca float, align 4
  %result_from_other_lane120 = alloca float, align 4
  %return_buffer119 = alloca float, align 4
  %result_from_other_lane117 = alloca float, align 4
  %initial_value_addr111 = alloca float, align 4
  %return_buffer106 = alloca float, align 4
  %result_from_other_lane104 = alloca float, align 4
  %return_buffer103 = alloca float, align 4
  %result_from_other_lane101 = alloca float, align 4
  %return_buffer100 = alloca float, align 4
  %result_from_other_lane98 = alloca float, align 4
  %return_buffer97 = alloca float, align 4
  %result_from_other_lane95 = alloca float, align 4
  %return_buffer94 = alloca float, align 4
  %result_from_other_lane92 = alloca float, align 4
  %initial_value_addr86 = alloca float, align 4
  %return_buffer81 = alloca float, align 4
  %result_from_other_lane79 = alloca float, align 4
  %return_buffer78 = alloca float, align 4
  %result_from_other_lane76 = alloca float, align 4
  %return_buffer75 = alloca float, align 4
  %result_from_other_lane73 = alloca float, align 4
  %return_buffer72 = alloca float, align 4
  %result_from_other_lane70 = alloca float, align 4
  %return_buffer69 = alloca float, align 4
  %result_from_other_lane67 = alloca float, align 4
  %initial_value_addr = alloca float, align 4
  %return_buffer65 = alloca float, align 4
  %result_from_other_lane63 = alloca float, align 4
  %return_buffer62 = alloca float, align 4
  %result_from_other_lane60 = alloca float, align 4
  %return_buffer59 = alloca float, align 4
  %result_from_other_lane57 = alloca float, align 4
  %return_buffer56 = alloca float, align 4
  %result_from_other_lane54 = alloca float, align 4
  %return_buffer53 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer51 = alloca float, align 4
  %return_buffer47 = alloca float, align 4
  %return_buffer43 = alloca float, align 4
  %return_buffer39 = alloca float, align 4
  %tile_loop.invar_address25 = alloca i32, align 4
  %return_buffer21 = alloca float, align 4
  %return_buffer19 = alloca float, align 4
  %return_buffer17 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result8 = alloca float, align 4
  %reduction_input_address7 = alloca float, align 4
  %partial_reduction_result5 = alloca float, align 4
  %reduction_input_address4 = alloca float, align 4
  %partial_reduction_result2 = alloca float, align 4
  %reduction_input_address1 = alloca float, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %inter_warp_reduce-after135, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_45_constant_9 = load float, ptr @47, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_45_constant_9, ptr %2, align 4
  %region_0_45_constant_93 = load float, ptr @47, align 4
  %3 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  store float %region_0_45_constant_93, ptr %3, align 4
  %region_0_45_constant_96 = load float, ptr @47, align 4
  %4 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  store float %region_0_45_constant_96, ptr %4, align 4
  %region_0_45_constant_99 = load float, ptr @47, align 4
  %5 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  store float %region_0_45_constant_99, ptr %5, align 4
  %6 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !352
  %7 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !368
  %8 = urem i32 %6, 32
  %9 = udiv i32 %6, 32
  %10 = mul i32 %7, 3
  %11 = add i32 %10, %9
  %12 = icmp ult i32 %11, 8192
  br i1 %12, label %13, label %early_return

13:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %8, 32
  %thread_id.y = udiv i32 %8, 32
  %lane_id = urem i32 %8, 32
  %14 = udiv i32 %11, 1
  %15 = urem i32 %14, 1
  %16 = udiv i32 %11, 1
  %17 = urem i32 %16, 8192
  %18 = udiv i32 %11, 8192
  %19 = icmp eq i32 %17, 8191
  %tile_bound = select i1 %19, i32 1, i32 1
  %20 = icmp eq i32 %15, 0
  %tile_bound10 = select i1 %20, i32 128, i32 512
  %tile_origin.0 = mul i32 %18, 1
  %tile_origin.1 = mul i32 %17, 1
  %tile_origin.2 = mul i32 %15, 512
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %is_full_tile-after, %13
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %21 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %21, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 1
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %22 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %23 = icmp eq i32 512, %tile_bound10
  br i1 %23, label %is_full_tile-true, label %is_full_tile-false

is_full_tile-after:                               ; preds = %tile_loop.loop_exit22, %tile_loop.loop_exit
  br label %y_in_tile.loop_header, !llvm.loop !409

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %partial_reduction_result52 = load float, ptr %current_output, align 4
  %24 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result52, i32 16, i32 31)
  store float %24, ptr %result_from_other_lane, align 4
  call void @region_1_15__2(ptr %current_output, ptr %result_from_other_lane, ptr %return_buffer53)
  %25 = load float, ptr %return_buffer53, align 4
  store float %25, ptr %current_output, align 4
  %partial_reduction_result55 = load float, ptr %current_output, align 4
  %26 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result55, i32 8, i32 31)
  store float %26, ptr %result_from_other_lane54, align 4
  call void @region_1_15__2(ptr %current_output, ptr %result_from_other_lane54, ptr %return_buffer56)
  %27 = load float, ptr %return_buffer56, align 4
  store float %27, ptr %current_output, align 4
  %partial_reduction_result58 = load float, ptr %current_output, align 4
  %28 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result58, i32 4, i32 31)
  store float %28, ptr %result_from_other_lane57, align 4
  call void @region_1_15__2(ptr %current_output, ptr %result_from_other_lane57, ptr %return_buffer59)
  %29 = load float, ptr %return_buffer59, align 4
  store float %29, ptr %current_output, align 4
  %partial_reduction_result61 = load float, ptr %current_output, align 4
  %30 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result61, i32 2, i32 31)
  store float %30, ptr %result_from_other_lane60, align 4
  call void @region_1_15__2(ptr %current_output, ptr %result_from_other_lane60, ptr %return_buffer62)
  %31 = load float, ptr %return_buffer62, align 4
  store float %31, ptr %current_output, align 4
  %partial_reduction_result64 = load float, ptr %current_output, align 4
  %32 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result64, i32 1, i32 31)
  store float %32, ptr %result_from_other_lane63, align 4
  call void @region_1_15__2(ptr %current_output, ptr %result_from_other_lane63, ptr %return_buffer65)
  %33 = load float, ptr %return_buffer65, align 4
  store float %33, ptr %current_output, align 4
  %34 = udiv i32 %thread_id.x, 32
  %35 = icmp eq i32 %lane_id, 0
  br i1 %35, label %intra_warp_reduce_write-true, label %intra_warp_reduce_write-after

intra_warp_reduce_write-after:                    ; preds = %intra_warp_reduce_write-true, %y_in_tile.loop_exit
  call void @llvm.nvvm.barrier0()
  %36 = icmp eq i32 %34, 0
  br i1 %36, label %inter_warp_reduce-true, label %inter_warp_reduce-after

inter_warp_reduce-after:                          ; preds = %reduction_write_output-after, %intra_warp_reduce_write-after
  %current_output66 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  %partial_reduction_result68 = load float, ptr %current_output66, align 4
  %37 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result68, i32 16, i32 31)
  store float %37, ptr %result_from_other_lane67, align 4
  call void @region_2_23(ptr %current_output66, ptr %result_from_other_lane67, ptr %return_buffer69)
  %38 = load float, ptr %return_buffer69, align 4
  store float %38, ptr %current_output66, align 4
  %partial_reduction_result71 = load float, ptr %current_output66, align 4
  %39 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result71, i32 8, i32 31)
  store float %39, ptr %result_from_other_lane70, align 4
  call void @region_2_23(ptr %current_output66, ptr %result_from_other_lane70, ptr %return_buffer72)
  %40 = load float, ptr %return_buffer72, align 4
  store float %40, ptr %current_output66, align 4
  %partial_reduction_result74 = load float, ptr %current_output66, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result74, i32 4, i32 31)
  store float %41, ptr %result_from_other_lane73, align 4
  call void @region_2_23(ptr %current_output66, ptr %result_from_other_lane73, ptr %return_buffer75)
  %42 = load float, ptr %return_buffer75, align 4
  store float %42, ptr %current_output66, align 4
  %partial_reduction_result77 = load float, ptr %current_output66, align 4
  %43 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result77, i32 2, i32 31)
  store float %43, ptr %result_from_other_lane76, align 4
  call void @region_2_23(ptr %current_output66, ptr %result_from_other_lane76, ptr %return_buffer78)
  %44 = load float, ptr %return_buffer78, align 4
  store float %44, ptr %current_output66, align 4
  %partial_reduction_result80 = load float, ptr %current_output66, align 4
  %45 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result80, i32 1, i32 31)
  store float %45, ptr %result_from_other_lane79, align 4
  call void @region_2_23(ptr %current_output66, ptr %result_from_other_lane79, ptr %return_buffer81)
  %46 = load float, ptr %return_buffer81, align 4
  store float %46, ptr %current_output66, align 4
  %47 = udiv i32 %thread_id.x, 32
  %48 = icmp eq i32 %lane_id, 0
  br i1 %48, label %intra_warp_reduce_write-true82, label %intra_warp_reduce_write-after83

intra_warp_reduce_write-after83:                  ; preds = %intra_warp_reduce_write-true82, %inter_warp_reduce-after
  call void @llvm.nvvm.barrier0()
  %49 = icmp eq i32 %47, 0
  br i1 %49, label %inter_warp_reduce-true84, label %inter_warp_reduce-after85

inter_warp_reduce-after85:                        ; preds = %reduction_write_output-after88, %intra_warp_reduce_write-after83
  %current_output91 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  %partial_reduction_result93 = load float, ptr %current_output91, align 4
  %50 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result93, i32 16, i32 31)
  store float %50, ptr %result_from_other_lane92, align 4
  call void @region_3_31(ptr %current_output91, ptr %result_from_other_lane92, ptr %return_buffer94)
  %51 = load float, ptr %return_buffer94, align 4
  store float %51, ptr %current_output91, align 4
  %partial_reduction_result96 = load float, ptr %current_output91, align 4
  %52 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result96, i32 8, i32 31)
  store float %52, ptr %result_from_other_lane95, align 4
  call void @region_3_31(ptr %current_output91, ptr %result_from_other_lane95, ptr %return_buffer97)
  %53 = load float, ptr %return_buffer97, align 4
  store float %53, ptr %current_output91, align 4
  %partial_reduction_result99 = load float, ptr %current_output91, align 4
  %54 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result99, i32 4, i32 31)
  store float %54, ptr %result_from_other_lane98, align 4
  call void @region_3_31(ptr %current_output91, ptr %result_from_other_lane98, ptr %return_buffer100)
  %55 = load float, ptr %return_buffer100, align 4
  store float %55, ptr %current_output91, align 4
  %partial_reduction_result102 = load float, ptr %current_output91, align 4
  %56 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result102, i32 2, i32 31)
  store float %56, ptr %result_from_other_lane101, align 4
  call void @region_3_31(ptr %current_output91, ptr %result_from_other_lane101, ptr %return_buffer103)
  %57 = load float, ptr %return_buffer103, align 4
  store float %57, ptr %current_output91, align 4
  %partial_reduction_result105 = load float, ptr %current_output91, align 4
  %58 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result105, i32 1, i32 31)
  store float %58, ptr %result_from_other_lane104, align 4
  call void @region_3_31(ptr %current_output91, ptr %result_from_other_lane104, ptr %return_buffer106)
  %59 = load float, ptr %return_buffer106, align 4
  store float %59, ptr %current_output91, align 4
  %60 = udiv i32 %thread_id.x, 32
  %61 = icmp eq i32 %lane_id, 0
  br i1 %61, label %intra_warp_reduce_write-true107, label %intra_warp_reduce_write-after108

intra_warp_reduce_write-after108:                 ; preds = %intra_warp_reduce_write-true107, %inter_warp_reduce-after85
  call void @llvm.nvvm.barrier0()
  %62 = icmp eq i32 %60, 0
  br i1 %62, label %inter_warp_reduce-true109, label %inter_warp_reduce-after110

inter_warp_reduce-after110:                       ; preds = %reduction_write_output-after113, %intra_warp_reduce_write-after108
  %current_output116 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  %partial_reduction_result118 = load float, ptr %current_output116, align 4
  %63 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result118, i32 16, i32 31)
  store float %63, ptr %result_from_other_lane117, align 4
  call void @region_4_39(ptr %current_output116, ptr %result_from_other_lane117, ptr %return_buffer119)
  %64 = load float, ptr %return_buffer119, align 4
  store float %64, ptr %current_output116, align 4
  %partial_reduction_result121 = load float, ptr %current_output116, align 4
  %65 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result121, i32 8, i32 31)
  store float %65, ptr %result_from_other_lane120, align 4
  call void @region_4_39(ptr %current_output116, ptr %result_from_other_lane120, ptr %return_buffer122)
  %66 = load float, ptr %return_buffer122, align 4
  store float %66, ptr %current_output116, align 4
  %partial_reduction_result124 = load float, ptr %current_output116, align 4
  %67 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result124, i32 4, i32 31)
  store float %67, ptr %result_from_other_lane123, align 4
  call void @region_4_39(ptr %current_output116, ptr %result_from_other_lane123, ptr %return_buffer125)
  %68 = load float, ptr %return_buffer125, align 4
  store float %68, ptr %current_output116, align 4
  %partial_reduction_result127 = load float, ptr %current_output116, align 4
  %69 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result127, i32 2, i32 31)
  store float %69, ptr %result_from_other_lane126, align 4
  call void @region_4_39(ptr %current_output116, ptr %result_from_other_lane126, ptr %return_buffer128)
  %70 = load float, ptr %return_buffer128, align 4
  store float %70, ptr %current_output116, align 4
  %partial_reduction_result130 = load float, ptr %current_output116, align 4
  %71 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result130, i32 1, i32 31)
  store float %71, ptr %result_from_other_lane129, align 4
  call void @region_4_39(ptr %current_output116, ptr %result_from_other_lane129, ptr %return_buffer131)
  %72 = load float, ptr %return_buffer131, align 4
  store float %72, ptr %current_output116, align 4
  %73 = udiv i32 %thread_id.x, 32
  %74 = icmp eq i32 %lane_id, 0
  br i1 %74, label %intra_warp_reduce_write-true132, label %intra_warp_reduce_write-after133

intra_warp_reduce_write-after133:                 ; preds = %intra_warp_reduce_write-true132, %inter_warp_reduce-after110
  call void @llvm.nvvm.barrier0()
  %75 = icmp eq i32 %73, 0
  br i1 %75, label %inter_warp_reduce-true134, label %inter_warp_reduce-after135

inter_warp_reduce-after135:                       ; preds = %reduction_write_output-after138, %intra_warp_reduce_write-after133
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

is_full_tile-true:                                ; preds = %y_in_tile.loop_body
  %76 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %tile_loop.loop_body, %is_full_tile-true
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %77 = icmp uge i32 %tile_loop.indvar, 16
  br i1 %77, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc11 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc11, ptr %tile_loop.invar_address, align 4
  %78 = icmp eq i32 %tile_loop.indvar, 0
  %79 = mul i32 %tile_loop.indvar, 32
  %80 = add i32 %79, 0
  %x_loc = add i32 %80, %76
  %81 = add i32 %tile_origin.1, %y_in_tile.indvar
  %82 = add i32 %tile_origin.2, %x_loc
  %Arg_1.2 = getelementptr inbounds [8192 x [128 x float]], ptr %arg1, i32 0, i32 %81, i32 %82
  %Arg_1.212 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %Arg_2.3 = getelementptr inbounds [128 x float], ptr %arg2, i32 0, i32 %82
  %Arg_2.313 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %add.8 = fadd float %Arg_1.212, %Arg_2.313
  %region_0_45_constant_914 = load float, ptr @47, align 4
  %83 = fcmp oge float %add.8, %region_0_45_constant_914
  %84 = fcmp une float %add.8, %add.8
  %85 = or i1 %83, %84
  %maximum.11 = select i1 %85, float %add.8, float %region_0_45_constant_914
  %Arg_0.1 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %82, i32 0
  %Arg_0.115 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %multiply.14 = fmul float %maximum.11, %Arg_0.115
  store float %multiply.14, ptr %reduction_input_address, align 4
  %86 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_15__2(ptr %86, ptr %reduction_input_address, ptr %return_buffer)
  %87 = load float, ptr %return_buffer, align 4
  store float %87, ptr %86, align 4
  %Arg_3.4 = getelementptr inbounds [128 x [1 x float]], ptr %arg3, i32 0, i32 %82, i32 0
  %Arg_3.416 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  %multiply.22 = fmul float %maximum.11, %Arg_3.416
  store float %multiply.22, ptr %reduction_input_address1, align 4
  %88 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_23(ptr %88, ptr %reduction_input_address1, ptr %return_buffer17)
  %89 = load float, ptr %return_buffer17, align 4
  store float %89, ptr %88, align 4
  %Arg_4.5 = getelementptr inbounds [128 x [1 x float]], ptr %arg4, i32 0, i32 %82, i32 0
  %Arg_4.518 = load float, ptr %Arg_4.5, align 4, !invariant.load !297
  %multiply.30 = fmul float %maximum.11, %Arg_4.518
  store float %multiply.30, ptr %reduction_input_address4, align 4
  %90 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  call void @region_3_31(ptr %90, ptr %reduction_input_address4, ptr %return_buffer19)
  %91 = load float, ptr %return_buffer19, align 4
  store float %91, ptr %90, align 4
  %Arg_5.6 = getelementptr inbounds [128 x [1 x float]], ptr %arg5, i32 0, i32 %82, i32 0
  %Arg_5.620 = load float, ptr %Arg_5.6, align 4, !invariant.load !297
  %multiply.38 = fmul float %maximum.11, %Arg_5.620
  store float %multiply.38, ptr %reduction_input_address7, align 4
  %92 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  call void @region_4_39(ptr %92, ptr %reduction_input_address7, ptr %return_buffer21)
  %93 = load float, ptr %return_buffer21, align 4
  store float %93, ptr %92, align 4
  br label %tile_loop.loop_header, !llvm.loop !410

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %is_full_tile-after

is_full_tile-false:                               ; preds = %y_in_tile.loop_body
  %94 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address25, align 4
  br label %tile_loop.loop_header23

tile_loop.loop_header23:                          ; preds = %x_in_tile-after, %is_full_tile-false
  %tile_loop.indvar26 = load i32, ptr %tile_loop.invar_address25, align 4
  %95 = icmp uge i32 %tile_loop.indvar26, 16
  br i1 %95, label %tile_loop.loop_exit22, label %tile_loop.loop_body24

tile_loop.loop_body24:                            ; preds = %tile_loop.loop_header23
  %invar.inc27 = add nuw nsw i32 %tile_loop.indvar26, 1
  store i32 %invar.inc27, ptr %tile_loop.invar_address25, align 4
  %96 = icmp eq i32 %tile_loop.indvar26, 0
  %97 = mul i32 %tile_loop.indvar26, 32
  %98 = add i32 %97, 0
  %x_loc28 = add i32 %98, %94
  %99 = add i32 %tile_origin.1, %y_in_tile.indvar
  %100 = add i32 %tile_origin.2, %x_loc28
  %101 = icmp ult i32 %x_loc28, %tile_bound10
  br i1 %101, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body24
  br label %tile_loop.loop_header23, !llvm.loop !411

tile_loop.loop_exit22:                            ; preds = %tile_loop.loop_header23
  br label %is_full_tile-after

x_in_tile-true:                                   ; preds = %tile_loop.loop_body24
  %Arg_1.229 = getelementptr inbounds [8192 x [128 x float]], ptr %arg1, i32 0, i32 %99, i32 %100
  %Arg_1.230 = load float, ptr %Arg_1.229, align 4, !invariant.load !297
  %Arg_2.331 = getelementptr inbounds [128 x float], ptr %arg2, i32 0, i32 %100
  %Arg_2.332 = load float, ptr %Arg_2.331, align 4, !invariant.load !297
  %add.833 = fadd float %Arg_1.230, %Arg_2.332
  %region_0_45_constant_934 = load float, ptr @47, align 4
  %102 = fcmp oge float %add.833, %region_0_45_constant_934
  %103 = fcmp une float %add.833, %add.833
  %104 = or i1 %102, %103
  %maximum.1135 = select i1 %104, float %add.833, float %region_0_45_constant_934
  %Arg_0.136 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %100, i32 0
  %Arg_0.137 = load float, ptr %Arg_0.136, align 4, !invariant.load !297
  %multiply.1438 = fmul float %maximum.1135, %Arg_0.137
  store float %multiply.1438, ptr %reduction_input_address, align 4
  %105 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_15__2(ptr %105, ptr %reduction_input_address, ptr %return_buffer39)
  %106 = load float, ptr %return_buffer39, align 4
  store float %106, ptr %105, align 4
  %Arg_3.440 = getelementptr inbounds [128 x [1 x float]], ptr %arg3, i32 0, i32 %100, i32 0
  %Arg_3.441 = load float, ptr %Arg_3.440, align 4, !invariant.load !297
  %multiply.2242 = fmul float %maximum.1135, %Arg_3.441
  store float %multiply.2242, ptr %reduction_input_address1, align 4
  %107 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_23(ptr %107, ptr %reduction_input_address1, ptr %return_buffer43)
  %108 = load float, ptr %return_buffer43, align 4
  store float %108, ptr %107, align 4
  %Arg_4.544 = getelementptr inbounds [128 x [1 x float]], ptr %arg4, i32 0, i32 %100, i32 0
  %Arg_4.545 = load float, ptr %Arg_4.544, align 4, !invariant.load !297
  %multiply.3046 = fmul float %maximum.1135, %Arg_4.545
  store float %multiply.3046, ptr %reduction_input_address4, align 4
  %109 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  call void @region_3_31(ptr %109, ptr %reduction_input_address4, ptr %return_buffer47)
  %110 = load float, ptr %return_buffer47, align 4
  store float %110, ptr %109, align 4
  %Arg_5.648 = getelementptr inbounds [128 x [1 x float]], ptr %arg5, i32 0, i32 %100, i32 0
  %Arg_5.649 = load float, ptr %Arg_5.648, align 4, !invariant.load !297
  %multiply.3850 = fmul float %maximum.1135, %Arg_5.649
  store float %multiply.3850, ptr %reduction_input_address7, align 4
  %111 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  call void @region_4_39(ptr %111, ptr %reduction_input_address7, ptr %return_buffer51)
  %112 = load float, ptr %return_buffer51, align 4
  store float %112, ptr %111, align 4
  br label %x_in_tile-after

intra_warp_reduce_write-true:                     ; preds = %y_in_tile.loop_exit
  %113 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache43, i32 0, i32 %9, i32 0, i32 %34
  %114 = addrspacecast ptr addrspace(3) %113 to ptr
  %115 = load float, ptr %current_output, align 4
  store float %115, ptr %114, align 4
  br label %intra_warp_reduce_write-after

inter_warp_reduce-true:                           ; preds = %intra_warp_reduce_write-after
  %116 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache43, i32 0, i32 %9, i32 0, i32 %lane_id
  %117 = addrspacecast ptr addrspace(3) %116 to ptr
  store float %region_0_45_constant_9, ptr %initial_value_addr, align 4
  %118 = icmp ult i32 %thread_id.x, 1
  %119 = select i1 %118, ptr %117, ptr %initial_value_addr
  %120 = icmp eq i32 %thread_id.x, 0
  br i1 %120, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %inter_warp_reduce-true
  br label %inter_warp_reduce-after

reduction_write_output-true:                      ; preds = %inter_warp_reduce-true
  %121 = mul i32 %thread_id.x, 1
  %122 = add i32 %tile_origin.1, %thread_id.y
  %123 = add i32 %tile_origin.2, %121
  %124 = add i32 %123, 0
  %125 = udiv i32 %122, 1
  %output_element_address = getelementptr inbounds [8192 x float], ptr %arg6, i32 0, i32 %125
  %output = load float, ptr %119, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

intra_warp_reduce_write-true82:                   ; preds = %inter_warp_reduce-after
  %126 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache44, i32 0, i32 %9, i32 0, i32 %47
  %127 = addrspacecast ptr addrspace(3) %126 to ptr
  %128 = load float, ptr %current_output66, align 4
  store float %128, ptr %127, align 4
  br label %intra_warp_reduce_write-after83

inter_warp_reduce-true84:                         ; preds = %intra_warp_reduce_write-after83
  %129 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache44, i32 0, i32 %9, i32 0, i32 %lane_id
  %130 = addrspacecast ptr addrspace(3) %129 to ptr
  store float %region_0_45_constant_93, ptr %initial_value_addr86, align 4
  %131 = icmp ult i32 %thread_id.x, 1
  %132 = select i1 %131, ptr %130, ptr %initial_value_addr86
  %133 = icmp eq i32 %thread_id.x, 0
  br i1 %133, label %reduction_write_output-true87, label %reduction_write_output-after88

reduction_write_output-after88:                   ; preds = %reduction_write_output-true87, %inter_warp_reduce-true84
  br label %inter_warp_reduce-after85

reduction_write_output-true87:                    ; preds = %inter_warp_reduce-true84
  %134 = mul i32 %thread_id.x, 1
  %135 = add i32 %tile_origin.1, %thread_id.y
  %136 = add i32 %tile_origin.2, %134
  %137 = add i32 %136, 0
  %138 = udiv i32 %135, 1
  %output_element_address89 = getelementptr inbounds [8192 x float], ptr %arg7, i32 0, i32 %138
  %output90 = load float, ptr %132, align 4
  store float %output90, ptr %output_element_address89, align 4
  br label %reduction_write_output-after88

intra_warp_reduce_write-true107:                  ; preds = %inter_warp_reduce-after85
  %139 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache45, i32 0, i32 %9, i32 0, i32 %60
  %140 = addrspacecast ptr addrspace(3) %139 to ptr
  %141 = load float, ptr %current_output91, align 4
  store float %141, ptr %140, align 4
  br label %intra_warp_reduce_write-after108

inter_warp_reduce-true109:                        ; preds = %intra_warp_reduce_write-after108
  %142 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache45, i32 0, i32 %9, i32 0, i32 %lane_id
  %143 = addrspacecast ptr addrspace(3) %142 to ptr
  store float %region_0_45_constant_96, ptr %initial_value_addr111, align 4
  %144 = icmp ult i32 %thread_id.x, 1
  %145 = select i1 %144, ptr %143, ptr %initial_value_addr111
  %146 = icmp eq i32 %thread_id.x, 0
  br i1 %146, label %reduction_write_output-true112, label %reduction_write_output-after113

reduction_write_output-after113:                  ; preds = %reduction_write_output-true112, %inter_warp_reduce-true109
  br label %inter_warp_reduce-after110

reduction_write_output-true112:                   ; preds = %inter_warp_reduce-true109
  %147 = mul i32 %thread_id.x, 1
  %148 = add i32 %tile_origin.1, %thread_id.y
  %149 = add i32 %tile_origin.2, %147
  %150 = add i32 %149, 0
  %151 = udiv i32 %148, 1
  %output_element_address114 = getelementptr inbounds [8192 x float], ptr %arg8, i32 0, i32 %151
  %output115 = load float, ptr %145, align 4
  store float %output115, ptr %output_element_address114, align 4
  br label %reduction_write_output-after113

intra_warp_reduce_write-true132:                  ; preds = %inter_warp_reduce-after110
  %152 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache46, i32 0, i32 %9, i32 0, i32 %73
  %153 = addrspacecast ptr addrspace(3) %152 to ptr
  %154 = load float, ptr %current_output116, align 4
  store float %154, ptr %153, align 4
  br label %intra_warp_reduce_write-after133

inter_warp_reduce-true134:                        ; preds = %intra_warp_reduce_write-after133
  %155 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache46, i32 0, i32 %9, i32 0, i32 %lane_id
  %156 = addrspacecast ptr addrspace(3) %155 to ptr
  store float %region_0_45_constant_99, ptr %initial_value_addr136, align 4
  %157 = icmp ult i32 %thread_id.x, 1
  %158 = select i1 %157, ptr %156, ptr %initial_value_addr136
  %159 = icmp eq i32 %thread_id.x, 0
  br i1 %159, label %reduction_write_output-true137, label %reduction_write_output-after138

reduction_write_output-after138:                  ; preds = %reduction_write_output-true137, %inter_warp_reduce-true134
  br label %inter_warp_reduce-after135

reduction_write_output-true137:                   ; preds = %inter_warp_reduce-true134
  %160 = mul i32 %thread_id.x, 1
  %161 = add i32 %tile_origin.1, %thread_id.y
  %162 = add i32 %tile_origin.2, %160
  %163 = add i32 %162, 0
  %164 = udiv i32 %161, 1
  %output_element_address139 = getelementptr inbounds [8192 x float], ptr %arg9, i32 0, i32 %164
  %output140 = load float, ptr %158, align 4
  store float %output140, ptr %output_element_address139, align 4
  br label %reduction_write_output-after138
}

define internal void @region_1_15__2(ptr dereferenceable(4) %Arg_0.16.typed, ptr dereferenceable(4) %Arg_1.17.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.18.typed = alloca float, align 4
  %Arg_0.16 = load float, ptr %Arg_0.16.typed, align 4
  %Arg_1.17 = load float, ptr %Arg_1.17.typed, align 4
  %add.18 = fadd float %Arg_0.16, %Arg_1.17
  store float %add.18, ptr %add.18.typed, align 4
  %load_ret_value = load float, ptr %add.18.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_23(ptr dereferenceable(4) %Arg_0.24.typed, ptr dereferenceable(4) %Arg_1.25.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.26.typed = alloca float, align 4
  %Arg_0.24 = load float, ptr %Arg_0.24.typed, align 4
  %Arg_1.25 = load float, ptr %Arg_1.25.typed, align 4
  %add.26 = fadd float %Arg_0.24, %Arg_1.25
  store float %add.26, ptr %add.26.typed, align 4
  %load_ret_value = load float, ptr %add.26.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_3_31(ptr dereferenceable(4) %Arg_0.32.typed, ptr dereferenceable(4) %Arg_1.33.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.34.typed = alloca float, align 4
  %Arg_0.32 = load float, ptr %Arg_0.32.typed, align 4
  %Arg_1.33 = load float, ptr %Arg_1.33.typed, align 4
  %add.34 = fadd float %Arg_0.32, %Arg_1.33
  store float %add.34, ptr %add.34.typed, align 4
  %load_ret_value = load float, ptr %add.34.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_4_39(ptr dereferenceable(4) %Arg_0.40.typed, ptr dereferenceable(4) %Arg_1.41.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.42.typed = alloca float, align 4
  %Arg_0.40 = load float, ptr %Arg_0.40.typed, align 4
  %Arg_1.41 = load float, ptr %Arg_1.41.typed, align 4
  %add.42 = fadd float %Arg_0.40, %Arg_1.41
  store float %add.42, ptr %add.42.typed, align 4
  %load_ret_value = load float, ptr %add.42.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_549(ptr noalias align 128 dereferenceable(4194304) %arg0, ptr noalias align 16 dereferenceable(512) %arg1) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !366
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !358
  %2 = mul nuw nsw i32 %0, 128
  %3 = call i32 @llvm.nvvm.read.ptx.sreg.tid.y(), !range !367
  %4 = mul nuw nsw i32 %3, 32
  %5 = add nuw nsw i32 %2, %4
  %linear_index = add nuw nsw i32 %5, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 262144
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %row_index = mul nuw nsw i32 %1, 4
  %6 = udiv i32 %linear_index_base, 1
  %7 = urem i32 %6, 128
  %8 = udiv i32 %linear_index_base, 128
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %row_index_plus1 = add nuw nsw i32 %row_index, 1
  %9 = udiv i32 %linear_index1, 1
  %10 = urem i32 %9, 128
  %11 = udiv i32 %linear_index1, 128
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %row_index_plus2 = add nuw nsw i32 %row_index, 2
  %12 = udiv i32 %linear_index2, 1
  %13 = urem i32 %12, 128
  %14 = udiv i32 %linear_index2, 128
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %row_index_plus3 = add nuw nsw i32 %row_index, 3
  %15 = udiv i32 %linear_index3, 1
  %16 = urem i32 %15, 128
  %17 = udiv i32 %linear_index3, 128
  %18 = icmp ult i32 %linear_index_base, 1048576
  br i1 %18, label %fusion_549.in_bounds-true, label %fusion_549.in_bounds-after

fusion_549.in_bounds-after:                       ; preds = %fusion_549.in_bounds-true, %entry
  ret void

fusion_549.in_bounds-true:                        ; preds = %entry
  %19 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_base
  %20 = load float, ptr %19, align 4
  %21 = getelementptr inbounds [128 x float], ptr %arg1, i32 0, i32 %row_index
  %22 = load float, ptr %21, align 4, !invariant.load !297
  %add.4 = fadd float %20, %22
  %region_0_8_constant_5 = load float, ptr @48, align 4
  %23 = fcmp oge float %add.4, %region_0_8_constant_5
  %24 = fcmp une float %add.4, %add.4
  %25 = or i1 %23, %24
  %maximum.7 = select i1 %25, float %add.4, float %region_0_8_constant_5
  %26 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_base
  store float %maximum.7, ptr %26, align 4
  %27 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  %28 = load float, ptr %27, align 4
  %29 = getelementptr inbounds [128 x float], ptr %arg1, i32 0, i32 %row_index_plus1
  %30 = load float, ptr %29, align 4, !invariant.load !297
  %add.41 = fadd float %28, %30
  %region_0_8_constant_52 = load float, ptr @48, align 4
  %31 = fcmp oge float %add.41, %region_0_8_constant_52
  %32 = fcmp une float %add.41, %add.41
  %33 = or i1 %31, %32
  %maximum.73 = select i1 %33, float %add.41, float %region_0_8_constant_52
  %34 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  store float %maximum.73, ptr %34, align 4
  %35 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  %36 = load float, ptr %35, align 4
  %37 = getelementptr inbounds [128 x float], ptr %arg1, i32 0, i32 %row_index_plus2
  %38 = load float, ptr %37, align 4, !invariant.load !297
  %add.44 = fadd float %36, %38
  %region_0_8_constant_55 = load float, ptr @48, align 4
  %39 = fcmp oge float %add.44, %region_0_8_constant_55
  %40 = fcmp une float %add.44, %add.44
  %41 = or i1 %39, %40
  %maximum.76 = select i1 %41, float %add.44, float %region_0_8_constant_55
  %42 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  store float %maximum.76, ptr %42, align 4
  %43 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  %44 = load float, ptr %43, align 4
  %45 = getelementptr inbounds [128 x float], ptr %arg1, i32 0, i32 %row_index_plus3
  %46 = load float, ptr %45, align 4, !invariant.load !297
  %add.47 = fadd float %44, %46
  %region_0_8_constant_58 = load float, ptr @48, align 4
  %47 = fcmp oge float %add.47, %region_0_8_constant_58
  %48 = fcmp une float %add.47, %add.47
  %49 = or i1 %47, %48
  %maximum.79 = select i1 %49, float %add.47, float %region_0_8_constant_58
  %50 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  store float %maximum.79, ptr %50, align 4
  br label %fusion_549.in_bounds-after
}

define void @fusion_547(ptr noalias align 16 dereferenceable(512) %arg0, ptr noalias align 16 dereferenceable(512) %arg1, ptr noalias align 128 dereferenceable(4194304) %arg2, ptr noalias align 16 dereferenceable(512) %arg3, ptr noalias align 128 dereferenceable(4194304) %arg4, ptr noalias align 16 dereferenceable(512) %arg5, ptr noalias align 128 dereferenceable(32768) %arg6, ptr noalias align 128 dereferenceable(32768) %arg7, ptr noalias align 128 dereferenceable(4194304) %arg8) {
entry:
  %initial_value_addr77 = alloca float, align 4
  %return_buffer72 = alloca float, align 4
  %result_from_other_lane70 = alloca float, align 4
  %return_buffer69 = alloca float, align 4
  %result_from_other_lane67 = alloca float, align 4
  %return_buffer66 = alloca float, align 4
  %result_from_other_lane64 = alloca float, align 4
  %return_buffer63 = alloca float, align 4
  %result_from_other_lane61 = alloca float, align 4
  %return_buffer60 = alloca float, align 4
  %result_from_other_lane58 = alloca float, align 4
  %initial_value_addr = alloca float, align 4
  %return_buffer56 = alloca float, align 4
  %result_from_other_lane54 = alloca float, align 4
  %return_buffer53 = alloca float, align 4
  %result_from_other_lane51 = alloca float, align 4
  %return_buffer50 = alloca float, align 4
  %result_from_other_lane48 = alloca float, align 4
  %return_buffer47 = alloca float, align 4
  %result_from_other_lane45 = alloca float, align 4
  %return_buffer44 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer42 = alloca float, align 4
  %return_buffer38 = alloca float, align 4
  %tile_loop.invar_address17 = alloca i32, align 4
  %return_buffer13 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result2 = alloca float, align 4
  %reduction_input_address1 = alloca float, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %inter_warp_reduce-after76, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_33_constant_9 = load float, ptr @49, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_33_constant_9, ptr %2, align 4
  %region_0_33_constant_93 = load float, ptr @49, align 4
  %3 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  store float %region_0_33_constant_93, ptr %3, align 4
  %4 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !352
  %5 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !368
  %6 = urem i32 %4, 32
  %7 = udiv i32 %4, 32
  %8 = mul i32 %5, 3
  %9 = add i32 %8, %7
  %10 = icmp ult i32 %9, 8192
  br i1 %10, label %11, label %early_return

11:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %6, 32
  %thread_id.y = udiv i32 %6, 32
  %lane_id = urem i32 %6, 32
  %12 = udiv i32 %9, 1
  %13 = urem i32 %12, 1
  %14 = udiv i32 %9, 1
  %15 = urem i32 %14, 8192
  %16 = udiv i32 %9, 8192
  %17 = icmp eq i32 %15, 8191
  %tile_bound = select i1 %17, i32 1, i32 1
  %18 = icmp eq i32 %13, 0
  %tile_bound4 = select i1 %18, i32 128, i32 512
  %tile_origin.0 = mul i32 %16, 1
  %tile_origin.1 = mul i32 %15, 1
  %tile_origin.2 = mul i32 %13, 512
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %is_full_tile-after, %11
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %19 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %19, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 1
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %20 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %21 = icmp eq i32 512, %tile_bound4
  br i1 %21, label %is_full_tile-true, label %is_full_tile-false

is_full_tile-after:                               ; preds = %tile_loop.loop_exit14, %tile_loop.loop_exit
  br label %y_in_tile.loop_header, !llvm.loop !412

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %partial_reduction_result43 = load float, ptr %current_output, align 4
  %22 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result43, i32 16, i32 31)
  store float %22, ptr %result_from_other_lane, align 4
  call void @region_1_19(ptr %current_output, ptr %result_from_other_lane, ptr %return_buffer44)
  %23 = load float, ptr %return_buffer44, align 4
  store float %23, ptr %current_output, align 4
  %partial_reduction_result46 = load float, ptr %current_output, align 4
  %24 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result46, i32 8, i32 31)
  store float %24, ptr %result_from_other_lane45, align 4
  call void @region_1_19(ptr %current_output, ptr %result_from_other_lane45, ptr %return_buffer47)
  %25 = load float, ptr %return_buffer47, align 4
  store float %25, ptr %current_output, align 4
  %partial_reduction_result49 = load float, ptr %current_output, align 4
  %26 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result49, i32 4, i32 31)
  store float %26, ptr %result_from_other_lane48, align 4
  call void @region_1_19(ptr %current_output, ptr %result_from_other_lane48, ptr %return_buffer50)
  %27 = load float, ptr %return_buffer50, align 4
  store float %27, ptr %current_output, align 4
  %partial_reduction_result52 = load float, ptr %current_output, align 4
  %28 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result52, i32 2, i32 31)
  store float %28, ptr %result_from_other_lane51, align 4
  call void @region_1_19(ptr %current_output, ptr %result_from_other_lane51, ptr %return_buffer53)
  %29 = load float, ptr %return_buffer53, align 4
  store float %29, ptr %current_output, align 4
  %partial_reduction_result55 = load float, ptr %current_output, align 4
  %30 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result55, i32 1, i32 31)
  store float %30, ptr %result_from_other_lane54, align 4
  call void @region_1_19(ptr %current_output, ptr %result_from_other_lane54, ptr %return_buffer56)
  %31 = load float, ptr %return_buffer56, align 4
  store float %31, ptr %current_output, align 4
  %32 = udiv i32 %thread_id.x, 32
  %33 = icmp eq i32 %lane_id, 0
  br i1 %33, label %intra_warp_reduce_write-true, label %intra_warp_reduce_write-after

intra_warp_reduce_write-after:                    ; preds = %intra_warp_reduce_write-true, %y_in_tile.loop_exit
  call void @llvm.nvvm.barrier0()
  %34 = icmp eq i32 %32, 0
  br i1 %34, label %inter_warp_reduce-true, label %inter_warp_reduce-after

inter_warp_reduce-after:                          ; preds = %reduction_write_output-after, %intra_warp_reduce_write-after
  %current_output57 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  %partial_reduction_result59 = load float, ptr %current_output57, align 4
  %35 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result59, i32 16, i32 31)
  store float %35, ptr %result_from_other_lane58, align 4
  call void @region_2_27(ptr %current_output57, ptr %result_from_other_lane58, ptr %return_buffer60)
  %36 = load float, ptr %return_buffer60, align 4
  store float %36, ptr %current_output57, align 4
  %partial_reduction_result62 = load float, ptr %current_output57, align 4
  %37 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result62, i32 8, i32 31)
  store float %37, ptr %result_from_other_lane61, align 4
  call void @region_2_27(ptr %current_output57, ptr %result_from_other_lane61, ptr %return_buffer63)
  %38 = load float, ptr %return_buffer63, align 4
  store float %38, ptr %current_output57, align 4
  %partial_reduction_result65 = load float, ptr %current_output57, align 4
  %39 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result65, i32 4, i32 31)
  store float %39, ptr %result_from_other_lane64, align 4
  call void @region_2_27(ptr %current_output57, ptr %result_from_other_lane64, ptr %return_buffer66)
  %40 = load float, ptr %return_buffer66, align 4
  store float %40, ptr %current_output57, align 4
  %partial_reduction_result68 = load float, ptr %current_output57, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result68, i32 2, i32 31)
  store float %41, ptr %result_from_other_lane67, align 4
  call void @region_2_27(ptr %current_output57, ptr %result_from_other_lane67, ptr %return_buffer69)
  %42 = load float, ptr %return_buffer69, align 4
  store float %42, ptr %current_output57, align 4
  %partial_reduction_result71 = load float, ptr %current_output57, align 4
  %43 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result71, i32 1, i32 31)
  store float %43, ptr %result_from_other_lane70, align 4
  call void @region_2_27(ptr %current_output57, ptr %result_from_other_lane70, ptr %return_buffer72)
  %44 = load float, ptr %return_buffer72, align 4
  store float %44, ptr %current_output57, align 4
  %45 = udiv i32 %thread_id.x, 32
  %46 = icmp eq i32 %lane_id, 0
  br i1 %46, label %intra_warp_reduce_write-true73, label %intra_warp_reduce_write-after74

intra_warp_reduce_write-after74:                  ; preds = %intra_warp_reduce_write-true73, %inter_warp_reduce-after
  call void @llvm.nvvm.barrier0()
  %47 = icmp eq i32 %45, 0
  br i1 %47, label %inter_warp_reduce-true75, label %inter_warp_reduce-after76

inter_warp_reduce-after76:                        ; preds = %reduction_write_output-after79, %intra_warp_reduce_write-after74
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

is_full_tile-true:                                ; preds = %y_in_tile.loop_body
  %48 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %tile_loop.loop_body, %is_full_tile-true
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %49 = icmp uge i32 %tile_loop.indvar, 16
  br i1 %49, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc5 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc5, ptr %tile_loop.invar_address, align 4
  %50 = icmp eq i32 %tile_loop.indvar, 0
  %51 = mul i32 %tile_loop.indvar, 32
  %52 = add i32 %51, 0
  %x_loc = add i32 %52, %48
  %53 = add i32 %tile_origin.1, %y_in_tile.indvar
  %54 = add i32 %tile_origin.2, %x_loc
  %Arg_4.5 = getelementptr inbounds [8192 x [128 x float]], ptr %arg4, i32 0, i32 %53, i32 %54
  %Arg_4.56 = load float, ptr %Arg_4.5, align 4, !invariant.load !297
  %Arg_5.6 = getelementptr inbounds [128 x float], ptr %arg5, i32 0, i32 %54
  %Arg_5.67 = load float, ptr %Arg_5.6, align 4, !invariant.load !297
  %add.8 = fadd float %Arg_4.56, %Arg_5.67
  %region_0_33_constant_98 = load float, ptr @49, align 4
  %55 = fcmp oge float %add.8, %region_0_33_constant_98
  %56 = fcmp une float %add.8, %add.8
  %57 = or i1 %55, %56
  %maximum.11 = select i1 %57, float %add.8, float %region_0_33_constant_98
  %Arg_2.3 = getelementptr inbounds [8192 x [128 x float]], ptr %arg2, i32 0, i32 %53, i32 %54
  %Arg_2.39 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %Arg_3.4 = getelementptr inbounds [128 x float], ptr %arg3, i32 0, i32 %54
  %Arg_3.410 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  %add.13 = fadd float %Arg_2.39, %Arg_3.410
  %58 = fcmp oge float %add.13, %region_0_33_constant_98
  %59 = fcmp une float %add.13, %add.13
  %60 = or i1 %58, %59
  %maximum.14 = select i1 %60, float %add.13, float %region_0_33_constant_98
  %add.15 = fadd float %maximum.11, %maximum.14
  %Arg_0.1 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %54, i32 0
  %Arg_0.111 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %multiply.18 = fmul float %add.15, %Arg_0.111
  store float %multiply.18, ptr %reduction_input_address, align 4
  %61 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_19(ptr %61, ptr %reduction_input_address, ptr %return_buffer)
  %62 = load float, ptr %return_buffer, align 4
  store float %62, ptr %61, align 4
  %Arg_1.2 = getelementptr inbounds [128 x [1 x float]], ptr %arg1, i32 0, i32 %54, i32 0
  %Arg_1.212 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %multiply.26 = fmul float %add.15, %Arg_1.212
  store float %multiply.26, ptr %reduction_input_address1, align 4
  %63 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_27(ptr %63, ptr %reduction_input_address1, ptr %return_buffer13)
  %64 = load float, ptr %return_buffer13, align 4
  store float %64, ptr %63, align 4
  %65 = getelementptr inbounds [8192 x [128 x float]], ptr %arg8, i32 0, i32 %53, i32 %54
  store float %add.15, ptr %65, align 4
  br label %tile_loop.loop_header, !llvm.loop !413

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %is_full_tile-after

is_full_tile-false:                               ; preds = %y_in_tile.loop_body
  %66 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address17, align 4
  br label %tile_loop.loop_header15

tile_loop.loop_header15:                          ; preds = %x_in_tile-after, %is_full_tile-false
  %tile_loop.indvar18 = load i32, ptr %tile_loop.invar_address17, align 4
  %67 = icmp uge i32 %tile_loop.indvar18, 16
  br i1 %67, label %tile_loop.loop_exit14, label %tile_loop.loop_body16

tile_loop.loop_body16:                            ; preds = %tile_loop.loop_header15
  %invar.inc19 = add nuw nsw i32 %tile_loop.indvar18, 1
  store i32 %invar.inc19, ptr %tile_loop.invar_address17, align 4
  %68 = icmp eq i32 %tile_loop.indvar18, 0
  %69 = mul i32 %tile_loop.indvar18, 32
  %70 = add i32 %69, 0
  %x_loc20 = add i32 %70, %66
  %71 = add i32 %tile_origin.1, %y_in_tile.indvar
  %72 = add i32 %tile_origin.2, %x_loc20
  %73 = icmp ult i32 %x_loc20, %tile_bound4
  br i1 %73, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body16
  br label %tile_loop.loop_header15, !llvm.loop !414

tile_loop.loop_exit14:                            ; preds = %tile_loop.loop_header15
  br label %is_full_tile-after

x_in_tile-true:                                   ; preds = %tile_loop.loop_body16
  %Arg_4.521 = getelementptr inbounds [8192 x [128 x float]], ptr %arg4, i32 0, i32 %71, i32 %72
  %Arg_4.522 = load float, ptr %Arg_4.521, align 4, !invariant.load !297
  %Arg_5.623 = getelementptr inbounds [128 x float], ptr %arg5, i32 0, i32 %72
  %Arg_5.624 = load float, ptr %Arg_5.623, align 4, !invariant.load !297
  %add.825 = fadd float %Arg_4.522, %Arg_5.624
  %region_0_33_constant_926 = load float, ptr @49, align 4
  %74 = fcmp oge float %add.825, %region_0_33_constant_926
  %75 = fcmp une float %add.825, %add.825
  %76 = or i1 %74, %75
  %maximum.1127 = select i1 %76, float %add.825, float %region_0_33_constant_926
  %Arg_2.328 = getelementptr inbounds [8192 x [128 x float]], ptr %arg2, i32 0, i32 %71, i32 %72
  %Arg_2.329 = load float, ptr %Arg_2.328, align 4, !invariant.load !297
  %Arg_3.430 = getelementptr inbounds [128 x float], ptr %arg3, i32 0, i32 %72
  %Arg_3.431 = load float, ptr %Arg_3.430, align 4, !invariant.load !297
  %add.1332 = fadd float %Arg_2.329, %Arg_3.431
  %77 = fcmp oge float %add.1332, %region_0_33_constant_926
  %78 = fcmp une float %add.1332, %add.1332
  %79 = or i1 %77, %78
  %maximum.1433 = select i1 %79, float %add.1332, float %region_0_33_constant_926
  %add.1534 = fadd float %maximum.1127, %maximum.1433
  %Arg_0.135 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %72, i32 0
  %Arg_0.136 = load float, ptr %Arg_0.135, align 4, !invariant.load !297
  %multiply.1837 = fmul float %add.1534, %Arg_0.136
  store float %multiply.1837, ptr %reduction_input_address, align 4
  %80 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_19(ptr %80, ptr %reduction_input_address, ptr %return_buffer38)
  %81 = load float, ptr %return_buffer38, align 4
  store float %81, ptr %80, align 4
  %Arg_1.239 = getelementptr inbounds [128 x [1 x float]], ptr %arg1, i32 0, i32 %72, i32 0
  %Arg_1.240 = load float, ptr %Arg_1.239, align 4, !invariant.load !297
  %multiply.2641 = fmul float %add.1534, %Arg_1.240
  store float %multiply.2641, ptr %reduction_input_address1, align 4
  %82 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_27(ptr %82, ptr %reduction_input_address1, ptr %return_buffer42)
  %83 = load float, ptr %return_buffer42, align 4
  store float %83, ptr %82, align 4
  %84 = getelementptr inbounds [8192 x [128 x float]], ptr %arg8, i32 0, i32 %71, i32 %72
  store float %add.1534, ptr %84, align 4
  br label %x_in_tile-after

intra_warp_reduce_write-true:                     ; preds = %y_in_tile.loop_exit
  %85 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache47, i32 0, i32 %7, i32 0, i32 %32
  %86 = addrspacecast ptr addrspace(3) %85 to ptr
  %87 = load float, ptr %current_output, align 4
  store float %87, ptr %86, align 4
  br label %intra_warp_reduce_write-after

inter_warp_reduce-true:                           ; preds = %intra_warp_reduce_write-after
  %88 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache47, i32 0, i32 %7, i32 0, i32 %lane_id
  %89 = addrspacecast ptr addrspace(3) %88 to ptr
  store float %region_0_33_constant_9, ptr %initial_value_addr, align 4
  %90 = icmp ult i32 %thread_id.x, 1
  %91 = select i1 %90, ptr %89, ptr %initial_value_addr
  %92 = icmp eq i32 %thread_id.x, 0
  br i1 %92, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %inter_warp_reduce-true
  br label %inter_warp_reduce-after

reduction_write_output-true:                      ; preds = %inter_warp_reduce-true
  %93 = mul i32 %thread_id.x, 1
  %94 = add i32 %tile_origin.1, %thread_id.y
  %95 = add i32 %tile_origin.2, %93
  %96 = add i32 %95, 0
  %97 = udiv i32 %94, 1
  %output_element_address = getelementptr inbounds [8192 x float], ptr %arg6, i32 0, i32 %97
  %output = load float, ptr %91, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

intra_warp_reduce_write-true73:                   ; preds = %inter_warp_reduce-after
  %98 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache48, i32 0, i32 %7, i32 0, i32 %45
  %99 = addrspacecast ptr addrspace(3) %98 to ptr
  %100 = load float, ptr %current_output57, align 4
  store float %100, ptr %99, align 4
  br label %intra_warp_reduce_write-after74

inter_warp_reduce-true75:                         ; preds = %intra_warp_reduce_write-after74
  %101 = getelementptr inbounds [3 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache48, i32 0, i32 %7, i32 0, i32 %lane_id
  %102 = addrspacecast ptr addrspace(3) %101 to ptr
  store float %region_0_33_constant_93, ptr %initial_value_addr77, align 4
  %103 = icmp ult i32 %thread_id.x, 1
  %104 = select i1 %103, ptr %102, ptr %initial_value_addr77
  %105 = icmp eq i32 %thread_id.x, 0
  br i1 %105, label %reduction_write_output-true78, label %reduction_write_output-after79

reduction_write_output-after79:                   ; preds = %reduction_write_output-true78, %inter_warp_reduce-true75
  br label %inter_warp_reduce-after76

reduction_write_output-true78:                    ; preds = %inter_warp_reduce-true75
  %106 = mul i32 %thread_id.x, 1
  %107 = add i32 %tile_origin.1, %thread_id.y
  %108 = add i32 %tile_origin.2, %106
  %109 = add i32 %108, 0
  %110 = udiv i32 %107, 1
  %output_element_address80 = getelementptr inbounds [8192 x float], ptr %arg7, i32 0, i32 %110
  %output81 = load float, ptr %104, align 4
  store float %output81, ptr %output_element_address80, align 4
  br label %reduction_write_output-after79
}

define internal void @region_1_19(ptr dereferenceable(4) %Arg_0.20.typed, ptr dereferenceable(4) %Arg_1.21.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.22.typed = alloca float, align 4
  %Arg_0.20 = load float, ptr %Arg_0.20.typed, align 4
  %Arg_1.21 = load float, ptr %Arg_1.21.typed, align 4
  %add.22 = fadd float %Arg_0.20, %Arg_1.21
  store float %add.22, ptr %add.22.typed, align 4
  %load_ret_value = load float, ptr %add.22.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_27(ptr dereferenceable(4) %Arg_0.28.typed, ptr dereferenceable(4) %Arg_1.29.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.30.typed = alloca float, align 4
  %Arg_0.28 = load float, ptr %Arg_0.28.typed, align 4
  %Arg_1.29 = load float, ptr %Arg_1.29.typed, align 4
  %add.30 = fadd float %Arg_0.28, %Arg_1.29
  store float %add.30, ptr %add.30.typed, align 4
  %load_ret_value = load float, ptr %add.30.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_663(ptr noalias align 16 dereferenceable(1048576) %arg0, ptr noalias align 16 dereferenceable(2097152) %arg1, ptr noalias align 16 dereferenceable(262144) %arg2, ptr noalias align 16 dereferenceable(4) %arg3, ptr noalias align 128 dereferenceable(32768) %arg4, ptr noalias align 128 dereferenceable(32768) %arg5, ptr noalias align 16 dereferenceable(4) %arg6, ptr noalias align 128 dereferenceable(32768) %arg7, ptr noalias align 128 dereferenceable(32768) %arg8, ptr noalias align 16 dereferenceable(4) %arg9, ptr noalias align 128 dereferenceable(32768) %arg10, ptr noalias align 128 dereferenceable(32768) %arg11, ptr noalias align 128 dereferenceable(32768) %arg12, ptr noalias align 16 dereferenceable(4) %arg13, ptr noalias align 16 dereferenceable(4) %arg14, ptr noalias align 128 dereferenceable(32768) %arg15, ptr noalias align 128 dereferenceable(32768) %arg16, ptr noalias align 128 dereferenceable(32768) %arg17, ptr noalias align 16 dereferenceable(4) %arg18, ptr noalias align 128 dereferenceable(32768) %arg19, ptr noalias align 16 dereferenceable(4) %arg20, ptr noalias align 128 dereferenceable(32768) %arg21, ptr noalias align 16 dereferenceable(4) %arg22, ptr noalias align 16 dereferenceable(4) %arg23, ptr noalias align 128 dereferenceable(32768) %arg24, ptr noalias align 128 dereferenceable(32768) %arg25, ptr noalias align 16 dereferenceable(4) %arg26, ptr noalias align 128 dereferenceable(32768) %arg27, ptr noalias align 128 dereferenceable(32768) %arg28, ptr noalias align 16 dereferenceable(4) %arg29, ptr noalias align 128 dereferenceable(32768) %arg30, ptr noalias align 128 dereferenceable(32768) %arg31, ptr noalias align 128 dereferenceable(32768) %arg32, ptr noalias align 16 dereferenceable(4) %arg33, ptr noalias align 128 dereferenceable(32768) %arg34, ptr noalias align 16 dereferenceable(4) %arg35, ptr noalias align 128 dereferenceable(32768) %arg36, ptr noalias align 16 dereferenceable(4) %arg37, ptr noalias align 128 dereferenceable(32768) %arg38, ptr noalias align 16 dereferenceable(4) %arg39, ptr noalias align 128 dereferenceable(32768) %arg40, ptr noalias align 16 dereferenceable(4) %arg41, ptr noalias align 128 dereferenceable(32768) %arg42, ptr noalias align 16 dereferenceable(4) %arg43, ptr noalias align 128 dereferenceable(32768) %arg44, ptr noalias align 16 dereferenceable(4) %arg45, ptr noalias align 16 dereferenceable(4) %arg46, ptr noalias align 128 dereferenceable(32768) %arg47, ptr noalias align 128 dereferenceable(32768) %arg48, ptr noalias align 16 dereferenceable(4) %arg49, ptr noalias align 128 dereferenceable(32768) %arg50, ptr noalias align 128 dereferenceable(32768) %arg51, ptr noalias align 128 dereferenceable(4063232) %arg52) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !415
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 1015808
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 124
  %5 = udiv i32 %linear_index, 124
  %6 = icmp ult i32 %linear_index, 1015808
  br i1 %6, label %fusion_663.in_bounds-true, label %fusion_663.in_bounds-after

fusion_663.in_bounds-after:                       ; preds = %concatenate.142.merge, %entry
  ret void

fusion_663.in_bounds-true:                        ; preds = %entry
  br label %concatenate.pivot.11.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %7 = phi i32 [ 0, %concatenate.pivot.0. ]
  %8 = sub nsw i32 %4, %7
  %9 = udiv i32 %linear_index, 124
  %10 = mul i32 %9, 1
  %11 = add i32 %10, %8
  %12 = udiv i32 %11, 1
  %13 = urem i32 %12, 1
  %14 = udiv i32 %11, 1
  %15 = getelementptr inbounds float, ptr %arg7, i32 %11
  %16 = load float, ptr %15, align 4, !invariant.load !297
  %17 = getelementptr inbounds float, ptr %arg8, i32 %11
  %18 = load float, ptr %17, align 4, !invariant.load !297
  %add.53 = fadd float %16, %18
  %19 = getelementptr inbounds [1 x float], ptr %arg6, i32 0, i32 0
  %20 = load float, ptr %19, align 4, !invariant.load !297
  %add.56 = fadd float %add.53, %20
  br label %concatenate.142.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.1.1
  %21 = phi i32 [ 1, %concatenate.pivot.1.1 ]
  %22 = sub nsw i32 %4, %21
  %23 = udiv i32 %linear_index, 124
  %24 = mul i32 %23, 1
  %25 = add i32 %24, %22
  %26 = udiv i32 %25, 1
  %27 = urem i32 %26, 1
  %28 = udiv i32 %25, 1
  %29 = getelementptr inbounds float, ptr %arg10, i32 %25
  %30 = load float, ptr %29, align 4, !invariant.load !297
  %31 = getelementptr inbounds float, ptr %arg11, i32 %25
  %32 = load float, ptr %31, align 4, !invariant.load !297
  %add.58 = fadd float %30, %32
  %33 = getelementptr inbounds [1 x float], ptr %arg9, i32 0, i32 0
  %34 = load float, ptr %33, align 4, !invariant.load !297
  %add.61 = fadd float %add.58, %34
  br label %concatenate.142.merge

concat_index_from_operand_id2:                    ; preds = %concatenate.pivot.2.2
  %35 = phi i32 [ 2, %concatenate.pivot.2.2 ]
  %36 = sub nsw i32 %4, %35
  %37 = udiv i32 %linear_index, 124
  %38 = mul i32 %37, 1
  %39 = add i32 %38, %36
  %40 = udiv i32 %39, 1
  %41 = urem i32 %40, 1
  %42 = udiv i32 %39, 1
  %43 = getelementptr inbounds float, ptr %arg12, i32 %39
  %44 = load float, ptr %43, align 4, !invariant.load !297
  %45 = getelementptr inbounds [1 x float], ptr %arg13, i32 0, i32 0
  %46 = load float, ptr %45, align 4, !invariant.load !297
  %add.65 = fadd float %44, %46
  br label %concatenate.142.merge

concat_index_from_operand_id3:                    ; preds = %concatenate.pivot.3.3
  %47 = phi i32 [ 3, %concatenate.pivot.3.3 ]
  %48 = sub nsw i32 %4, %47
  %49 = udiv i32 %linear_index, 124
  %50 = mul i32 %49, 1
  %51 = add i32 %50, %48
  %52 = udiv i32 %51, 1
  %53 = urem i32 %52, 1
  %54 = udiv i32 %51, 1
  %55 = getelementptr inbounds float, ptr %arg15, i32 %51
  %56 = load float, ptr %55, align 4, !invariant.load !297
  %57 = getelementptr inbounds float, ptr %arg16, i32 %51
  %58 = load float, ptr %57, align 4, !invariant.load !297
  %add.67 = fadd float %56, %58
  %59 = getelementptr inbounds [1 x float], ptr %arg14, i32 0, i32 0
  %60 = load float, ptr %59, align 4, !invariant.load !297
  %add.70 = fadd float %add.67, %60
  br label %concatenate.142.merge

concat_index_from_operand_id4:                    ; preds = %concatenate.pivot.4.4
  %61 = phi i32 [ 4, %concatenate.pivot.4.4 ]
  %62 = sub nsw i32 %4, %61
  %63 = udiv i32 %linear_index, 124
  %64 = mul i32 %63, 1
  %65 = add i32 %64, %62
  %66 = udiv i32 %65, 1
  %67 = urem i32 %66, 1
  %68 = udiv i32 %65, 1
  %69 = getelementptr inbounds float, ptr %arg17, i32 %65
  %70 = load float, ptr %69, align 4, !invariant.load !297
  %71 = getelementptr inbounds [1 x float], ptr %arg18, i32 0, i32 0
  %72 = load float, ptr %71, align 4, !invariant.load !297
  %add.74 = fadd float %70, %72
  br label %concatenate.142.merge

concat_index_from_operand_id5:                    ; preds = %concatenate.pivot.5.5
  %73 = phi i32 [ 5, %concatenate.pivot.5.5 ]
  %74 = sub nsw i32 %4, %73
  %75 = udiv i32 %linear_index, 124
  %76 = mul i32 %75, 1
  %77 = add i32 %76, %74
  %78 = udiv i32 %77, 1
  %79 = urem i32 %78, 1
  %80 = udiv i32 %77, 1
  %81 = getelementptr inbounds float, ptr %arg19, i32 %77
  %82 = load float, ptr %81, align 4, !invariant.load !297
  %83 = getelementptr inbounds [1 x float], ptr %arg20, i32 0, i32 0
  %84 = load float, ptr %83, align 4, !invariant.load !297
  %add.78 = fadd float %82, %84
  br label %concatenate.142.merge

concat_index_from_operand_id6:                    ; preds = %concatenate.pivot.6.6
  %85 = phi i32 [ 6, %concatenate.pivot.6.6 ]
  %86 = sub nsw i32 %4, %85
  %87 = udiv i32 %linear_index, 124
  %88 = mul i32 %87, 1
  %89 = add i32 %88, %86
  %90 = udiv i32 %89, 1
  %91 = urem i32 %90, 1
  %92 = udiv i32 %89, 1
  %93 = getelementptr inbounds float, ptr %arg21, i32 %89
  %94 = load float, ptr %93, align 4, !invariant.load !297
  %95 = getelementptr inbounds [1 x float], ptr %arg22, i32 0, i32 0
  %96 = load float, ptr %95, align 4, !invariant.load !297
  %add.82 = fadd float %94, %96
  br label %concatenate.142.merge

concat_index_from_operand_id7:                    ; preds = %concatenate.pivot.7.7
  %97 = phi i32 [ 7, %concatenate.pivot.7.7 ]
  %98 = sub nsw i32 %4, %97
  %99 = udiv i32 %linear_index, 124
  %100 = mul i32 %99, 1
  %101 = add i32 %100, %98
  %102 = udiv i32 %101, 1
  %103 = urem i32 %102, 1
  %104 = udiv i32 %101, 1
  %105 = getelementptr inbounds float, ptr %arg24, i32 %101
  %106 = load float, ptr %105, align 4, !invariant.load !297
  %107 = getelementptr inbounds float, ptr %arg25, i32 %101
  %108 = load float, ptr %107, align 4, !invariant.load !297
  %add.84 = fadd float %106, %108
  %109 = getelementptr inbounds [1 x float], ptr %arg23, i32 0, i32 0
  %110 = load float, ptr %109, align 4, !invariant.load !297
  %add.87 = fadd float %add.84, %110
  br label %concatenate.142.merge

concat_index_from_operand_id8:                    ; preds = %concatenate.pivot.8.8
  %111 = phi i32 [ 8, %concatenate.pivot.8.8 ]
  %112 = sub nsw i32 %4, %111
  %113 = udiv i32 %linear_index, 124
  %114 = mul i32 %113, 1
  %115 = add i32 %114, %112
  %116 = udiv i32 %115, 1
  %117 = urem i32 %116, 1
  %118 = udiv i32 %115, 1
  %119 = getelementptr inbounds float, ptr %arg27, i32 %115
  %120 = load float, ptr %119, align 4, !invariant.load !297
  %121 = getelementptr inbounds float, ptr %arg28, i32 %115
  %122 = load float, ptr %121, align 4, !invariant.load !297
  %add.89 = fadd float %120, %122
  %123 = getelementptr inbounds [1 x float], ptr %arg26, i32 0, i32 0
  %124 = load float, ptr %123, align 4, !invariant.load !297
  %add.92 = fadd float %add.89, %124
  br label %concatenate.142.merge

concat_index_from_operand_id9:                    ; preds = %concatenate.pivot.9.9
  %125 = phi i32 [ 9, %concatenate.pivot.9.9 ]
  %126 = sub nsw i32 %4, %125
  %127 = udiv i32 %linear_index, 124
  %128 = mul i32 %127, 1
  %129 = add i32 %128, %126
  %130 = udiv i32 %129, 1
  %131 = urem i32 %130, 1
  %132 = udiv i32 %129, 1
  %133 = getelementptr inbounds float, ptr %arg30, i32 %129
  %134 = load float, ptr %133, align 4, !invariant.load !297
  %135 = getelementptr inbounds float, ptr %arg31, i32 %129
  %136 = load float, ptr %135, align 4, !invariant.load !297
  %add.94 = fadd float %134, %136
  %137 = getelementptr inbounds [1 x float], ptr %arg29, i32 0, i32 0
  %138 = load float, ptr %137, align 4, !invariant.load !297
  %add.97 = fadd float %add.94, %138
  br label %concatenate.142.merge

concat_index_from_operand_id10:                   ; preds = %concatenate.pivot.10.10
  %139 = phi i32 [ 10, %concatenate.pivot.10.10 ]
  %140 = sub nsw i32 %4, %139
  %141 = udiv i32 %linear_index, 124
  %142 = mul i32 %141, 1
  %143 = add i32 %142, %140
  %144 = udiv i32 %143, 1
  %145 = urem i32 %144, 1
  %146 = udiv i32 %143, 1
  %147 = getelementptr inbounds float, ptr %arg32, i32 %143
  %148 = load float, ptr %147, align 4, !invariant.load !297
  %149 = getelementptr inbounds [1 x float], ptr %arg33, i32 0, i32 0
  %150 = load float, ptr %149, align 4, !invariant.load !297
  %add.101 = fadd float %148, %150
  br label %concatenate.142.merge

concat_index_from_operand_id11:                   ; preds = %concatenate.pivot.11.11
  %151 = phi i32 [ 11, %concatenate.pivot.11.11 ]
  %152 = sub nsw i32 %4, %151
  %153 = udiv i32 %linear_index, 124
  %154 = mul i32 %153, 1
  %155 = add i32 %154, %152
  %156 = udiv i32 %155, 1
  %157 = urem i32 %156, 1
  %158 = udiv i32 %155, 1
  %159 = getelementptr inbounds float, ptr %arg34, i32 %155
  %160 = load float, ptr %159, align 4, !invariant.load !297
  %161 = getelementptr inbounds [1 x float], ptr %arg35, i32 0, i32 0
  %162 = load float, ptr %161, align 4, !invariant.load !297
  %add.105 = fadd float %160, %162
  br label %concatenate.142.merge

concat_index_from_operand_id12:                   ; preds = %concatenate.pivot.12.12
  %163 = phi i32 [ 12, %concatenate.pivot.12.12 ]
  %164 = sub nsw i32 %4, %163
  %165 = udiv i32 %linear_index, 124
  %166 = mul i32 %165, 1
  %167 = add i32 %166, %164
  %168 = udiv i32 %167, 1
  %169 = urem i32 %168, 1
  %170 = udiv i32 %167, 1
  %171 = getelementptr inbounds float, ptr %arg36, i32 %167
  %172 = load float, ptr %171, align 4, !invariant.load !297
  %173 = getelementptr inbounds [1 x float], ptr %arg37, i32 0, i32 0
  %174 = load float, ptr %173, align 4, !invariant.load !297
  %add.109 = fadd float %172, %174
  br label %concatenate.142.merge

concat_index_from_operand_id13:                   ; preds = %concatenate.pivot.13.13
  %175 = phi i32 [ 13, %concatenate.pivot.13.13 ]
  %176 = sub nsw i32 %4, %175
  %177 = udiv i32 %linear_index, 124
  %178 = mul i32 %177, 1
  %179 = add i32 %178, %176
  %180 = udiv i32 %179, 1
  %181 = urem i32 %180, 1
  %182 = udiv i32 %179, 1
  %183 = getelementptr inbounds float, ptr %arg38, i32 %179
  %184 = load float, ptr %183, align 4, !invariant.load !297
  %185 = getelementptr inbounds [1 x float], ptr %arg39, i32 0, i32 0
  %186 = load float, ptr %185, align 4, !invariant.load !297
  %add.113 = fadd float %184, %186
  br label %concatenate.142.merge

concat_index_from_operand_id14:                   ; preds = %concatenate.pivot.14.14
  %187 = phi i32 [ 14, %concatenate.pivot.14.14 ]
  %188 = sub nsw i32 %4, %187
  %189 = udiv i32 %linear_index, 124
  %190 = mul i32 %189, 1
  %191 = add i32 %190, %188
  %192 = udiv i32 %191, 1
  %193 = urem i32 %192, 1
  %194 = udiv i32 %191, 1
  %195 = getelementptr inbounds float, ptr %arg40, i32 %191
  %196 = load float, ptr %195, align 4, !invariant.load !297
  %197 = getelementptr inbounds [1 x float], ptr %arg41, i32 0, i32 0
  %198 = load float, ptr %197, align 4, !invariant.load !297
  %add.117 = fadd float %196, %198
  br label %concatenate.142.merge

concat_index_from_operand_id15:                   ; preds = %concatenate.pivot.15.15
  %199 = phi i32 [ 15, %concatenate.pivot.15.15 ]
  %200 = sub nsw i32 %4, %199
  %201 = udiv i32 %linear_index, 124
  %202 = mul i32 %201, 1
  %203 = add i32 %202, %200
  %204 = udiv i32 %203, 1
  %205 = urem i32 %204, 1
  %206 = udiv i32 %203, 1
  %207 = getelementptr inbounds float, ptr %arg42, i32 %203
  %208 = load float, ptr %207, align 4, !invariant.load !297
  %209 = getelementptr inbounds [1 x float], ptr %arg43, i32 0, i32 0
  %210 = load float, ptr %209, align 4, !invariant.load !297
  %add.121 = fadd float %208, %210
  br label %concatenate.142.merge

concat_index_from_operand_id16:                   ; preds = %concatenate.pivot.16.16
  %211 = phi i32 [ 16, %concatenate.pivot.16.16 ]
  %212 = sub nsw i32 %4, %211
  %213 = udiv i32 %linear_index, 124
  %214 = mul i32 %213, 1
  %215 = add i32 %214, %212
  %216 = udiv i32 %215, 1
  %217 = urem i32 %216, 1
  %218 = udiv i32 %215, 1
  %219 = getelementptr inbounds float, ptr %arg44, i32 %215
  %220 = load float, ptr %219, align 4, !invariant.load !297
  %221 = getelementptr inbounds [1 x float], ptr %arg45, i32 0, i32 0
  %222 = load float, ptr %221, align 4, !invariant.load !297
  %add.125 = fadd float %220, %222
  br label %concatenate.142.merge

concat_index_from_operand_id17:                   ; preds = %concatenate.pivot.17.17
  %223 = phi i32 [ 17, %concatenate.pivot.17.17 ]
  %224 = sub nsw i32 %4, %223
  %225 = udiv i32 %linear_index, 124
  %226 = mul i32 %225, 1
  %227 = add i32 %226, %224
  %228 = udiv i32 %227, 1
  %229 = urem i32 %228, 1
  %230 = udiv i32 %227, 1
  %231 = getelementptr inbounds float, ptr %arg47, i32 %227
  %232 = load float, ptr %231, align 4, !invariant.load !297
  %233 = getelementptr inbounds float, ptr %arg48, i32 %227
  %234 = load float, ptr %233, align 4, !invariant.load !297
  %add.127 = fadd float %232, %234
  %235 = getelementptr inbounds [1 x float], ptr %arg46, i32 0, i32 0
  %236 = load float, ptr %235, align 4, !invariant.load !297
  %add.130 = fadd float %add.127, %236
  br label %concatenate.142.merge

concat_index_from_operand_id18:                   ; preds = %concatenate.pivot.18.18
  %237 = phi i32 [ 18, %concatenate.pivot.18.18 ]
  %238 = sub nsw i32 %4, %237
  %239 = udiv i32 %linear_index, 124
  %240 = mul i32 %239, 1
  %241 = add i32 %240, %238
  %242 = udiv i32 %241, 1
  %243 = urem i32 %242, 1
  %244 = udiv i32 %241, 1
  %245 = getelementptr inbounds float, ptr %arg4, i32 %241
  %246 = load float, ptr %245, align 4, !invariant.load !297
  %247 = getelementptr inbounds float, ptr %arg5, i32 %241
  %248 = load float, ptr %247, align 4, !invariant.load !297
  %add.132 = fadd float %246, %248
  %249 = getelementptr inbounds [1 x float], ptr %arg3, i32 0, i32 0
  %250 = load float, ptr %249, align 4, !invariant.load !297
  %add.135 = fadd float %add.132, %250
  br label %concatenate.142.merge

concat_index_from_operand_id19:                   ; preds = %concatenate.pivot.19.19
  %251 = phi i32 [ 19, %concatenate.pivot.19.19 ]
  %252 = sub nsw i32 %4, %251
  %253 = udiv i32 %linear_index, 124
  %254 = mul i32 %253, 1
  %255 = add i32 %254, %252
  %256 = udiv i32 %255, 1
  %257 = urem i32 %256, 1
  %258 = udiv i32 %255, 1
  %259 = getelementptr inbounds float, ptr %arg50, i32 %255
  %260 = load float, ptr %259, align 4, !invariant.load !297
  %261 = getelementptr inbounds float, ptr %arg51, i32 %255
  %262 = load float, ptr %261, align 4, !invariant.load !297
  %add.137 = fadd float %260, %262
  %263 = getelementptr inbounds [1 x float], ptr %arg49, i32 0, i32 0
  %264 = load float, ptr %263, align 4, !invariant.load !297
  %add.140 = fadd float %add.137, %264
  br label %concatenate.142.merge

concat_index_from_operand_id20:                   ; preds = %concatenate.pivot.20.20
  %265 = phi i32 [ 20, %concatenate.pivot.20.20 ]
  %266 = sub nsw i32 %4, %265
  %267 = udiv i32 %linear_index, 124
  %268 = mul i32 %267, 32
  %269 = add i32 %268, %266
  %270 = udiv i32 %269, 1
  %271 = urem i32 %270, 32
  %272 = udiv i32 %269, 32
  %273 = getelementptr inbounds float, ptr %arg0, i32 %269
  %274 = load float, ptr %273, align 4, !invariant.load !297
  br label %concatenate.142.merge

concat_index_from_operand_id21:                   ; preds = %concatenate.pivot.52.21
  %275 = phi i32 [ 52, %concatenate.pivot.52.21 ]
  %276 = sub nsw i32 %4, %275
  %277 = udiv i32 %linear_index, 124
  %278 = mul i32 %277, 64
  %279 = add i32 %278, %276
  %280 = udiv i32 %279, 1
  %281 = urem i32 %280, 64
  %282 = udiv i32 %279, 64
  %283 = getelementptr inbounds float, ptr %arg1, i32 %279
  %284 = load float, ptr %283, align 4, !invariant.load !297
  br label %concatenate.142.merge

concat_index_from_operand_id22:                   ; preds = %concatenate.pivot.116.22
  %285 = phi i32 [ 116, %concatenate.pivot.116.22 ]
  %286 = sub nsw i32 %4, %285
  %287 = udiv i32 %linear_index, 124
  %288 = mul i32 %287, 8
  %289 = add i32 %288, %286
  %290 = udiv i32 %289, 1
  %291 = urem i32 %290, 8
  %292 = udiv i32 %289, 8
  %293 = getelementptr inbounds float, ptr %arg2, i32 %289
  %294 = load float, ptr %293, align 4, !invariant.load !297
  br label %concatenate.142.merge

concatenate.pivot.11.:                            ; preds = %fusion_663.in_bounds-true
  %295 = icmp ult i32 %4, 11
  br i1 %295, label %concatenate.pivot.5., label %concatenate.pivot.17.

concatenate.pivot.5.:                             ; preds = %concatenate.pivot.11.
  %296 = icmp ult i32 %4, 5
  br i1 %296, label %concatenate.pivot.2., label %concatenate.pivot.8.

concatenate.pivot.2.:                             ; preds = %concatenate.pivot.5.
  %297 = icmp ult i32 %4, 2
  br i1 %297, label %concatenate.pivot.1., label %concatenate.pivot.3.

concatenate.pivot.1.:                             ; preds = %concatenate.pivot.2.
  %298 = icmp ult i32 %4, 1
  br i1 %298, label %concatenate.pivot.0., label %concatenate.pivot.1.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.1.
  br label %concat_index_from_operand_id0

concatenate.pivot.1.1:                            ; preds = %concatenate.pivot.1.
  br label %concat_index_from_operand_id1

concatenate.pivot.3.:                             ; preds = %concatenate.pivot.2.
  %299 = icmp ult i32 %4, 3
  br i1 %299, label %concatenate.pivot.2.2, label %concatenate.pivot.4.

concatenate.pivot.2.2:                            ; preds = %concatenate.pivot.3.
  br label %concat_index_from_operand_id2

concatenate.pivot.4.:                             ; preds = %concatenate.pivot.3.
  %300 = icmp ult i32 %4, 4
  br i1 %300, label %concatenate.pivot.3.3, label %concatenate.pivot.4.4

concatenate.pivot.3.3:                            ; preds = %concatenate.pivot.4.
  br label %concat_index_from_operand_id3

concatenate.pivot.4.4:                            ; preds = %concatenate.pivot.4.
  br label %concat_index_from_operand_id4

concatenate.pivot.8.:                             ; preds = %concatenate.pivot.5.
  %301 = icmp ult i32 %4, 8
  br i1 %301, label %concatenate.pivot.6., label %concatenate.pivot.9.

concatenate.pivot.6.:                             ; preds = %concatenate.pivot.8.
  %302 = icmp ult i32 %4, 6
  br i1 %302, label %concatenate.pivot.5.5, label %concatenate.pivot.7.

concatenate.pivot.5.5:                            ; preds = %concatenate.pivot.6.
  br label %concat_index_from_operand_id5

concatenate.pivot.7.:                             ; preds = %concatenate.pivot.6.
  %303 = icmp ult i32 %4, 7
  br i1 %303, label %concatenate.pivot.6.6, label %concatenate.pivot.7.7

concatenate.pivot.6.6:                            ; preds = %concatenate.pivot.7.
  br label %concat_index_from_operand_id6

concatenate.pivot.7.7:                            ; preds = %concatenate.pivot.7.
  br label %concat_index_from_operand_id7

concatenate.pivot.9.:                             ; preds = %concatenate.pivot.8.
  %304 = icmp ult i32 %4, 9
  br i1 %304, label %concatenate.pivot.8.8, label %concatenate.pivot.10.

concatenate.pivot.8.8:                            ; preds = %concatenate.pivot.9.
  br label %concat_index_from_operand_id8

concatenate.pivot.10.:                            ; preds = %concatenate.pivot.9.
  %305 = icmp ult i32 %4, 10
  br i1 %305, label %concatenate.pivot.9.9, label %concatenate.pivot.10.10

concatenate.pivot.9.9:                            ; preds = %concatenate.pivot.10.
  br label %concat_index_from_operand_id9

concatenate.pivot.10.10:                          ; preds = %concatenate.pivot.10.
  br label %concat_index_from_operand_id10

concatenate.pivot.17.:                            ; preds = %concatenate.pivot.11.
  %306 = icmp ult i32 %4, 17
  br i1 %306, label %concatenate.pivot.14., label %concatenate.pivot.20.

concatenate.pivot.14.:                            ; preds = %concatenate.pivot.17.
  %307 = icmp ult i32 %4, 14
  br i1 %307, label %concatenate.pivot.12., label %concatenate.pivot.15.

concatenate.pivot.12.:                            ; preds = %concatenate.pivot.14.
  %308 = icmp ult i32 %4, 12
  br i1 %308, label %concatenate.pivot.11.11, label %concatenate.pivot.13.

concatenate.pivot.11.11:                          ; preds = %concatenate.pivot.12.
  br label %concat_index_from_operand_id11

concatenate.pivot.13.:                            ; preds = %concatenate.pivot.12.
  %309 = icmp ult i32 %4, 13
  br i1 %309, label %concatenate.pivot.12.12, label %concatenate.pivot.13.13

concatenate.pivot.12.12:                          ; preds = %concatenate.pivot.13.
  br label %concat_index_from_operand_id12

concatenate.pivot.13.13:                          ; preds = %concatenate.pivot.13.
  br label %concat_index_from_operand_id13

concatenate.pivot.15.:                            ; preds = %concatenate.pivot.14.
  %310 = icmp ult i32 %4, 15
  br i1 %310, label %concatenate.pivot.14.14, label %concatenate.pivot.16.

concatenate.pivot.14.14:                          ; preds = %concatenate.pivot.15.
  br label %concat_index_from_operand_id14

concatenate.pivot.16.:                            ; preds = %concatenate.pivot.15.
  %311 = icmp ult i32 %4, 16
  br i1 %311, label %concatenate.pivot.15.15, label %concatenate.pivot.16.16

concatenate.pivot.15.15:                          ; preds = %concatenate.pivot.16.
  br label %concat_index_from_operand_id15

concatenate.pivot.16.16:                          ; preds = %concatenate.pivot.16.
  br label %concat_index_from_operand_id16

concatenate.pivot.20.:                            ; preds = %concatenate.pivot.17.
  %312 = icmp ult i32 %4, 20
  br i1 %312, label %concatenate.pivot.18., label %concatenate.pivot.52.

concatenate.pivot.18.:                            ; preds = %concatenate.pivot.20.
  %313 = icmp ult i32 %4, 18
  br i1 %313, label %concatenate.pivot.17.17, label %concatenate.pivot.19.

concatenate.pivot.17.17:                          ; preds = %concatenate.pivot.18.
  br label %concat_index_from_operand_id17

concatenate.pivot.19.:                            ; preds = %concatenate.pivot.18.
  %314 = icmp ult i32 %4, 19
  br i1 %314, label %concatenate.pivot.18.18, label %concatenate.pivot.19.19

concatenate.pivot.18.18:                          ; preds = %concatenate.pivot.19.
  br label %concat_index_from_operand_id18

concatenate.pivot.19.19:                          ; preds = %concatenate.pivot.19.
  br label %concat_index_from_operand_id19

concatenate.pivot.52.:                            ; preds = %concatenate.pivot.20.
  %315 = icmp ult i32 %4, 52
  br i1 %315, label %concatenate.pivot.20.20, label %concatenate.pivot.116.

concatenate.pivot.20.20:                          ; preds = %concatenate.pivot.52.
  br label %concat_index_from_operand_id20

concatenate.pivot.116.:                           ; preds = %concatenate.pivot.52.
  %316 = icmp ult i32 %4, 116
  br i1 %316, label %concatenate.pivot.52.21, label %concatenate.pivot.116.22

concatenate.pivot.52.21:                          ; preds = %concatenate.pivot.116.
  br label %concat_index_from_operand_id21

concatenate.pivot.116.22:                         ; preds = %concatenate.pivot.116.
  br label %concat_index_from_operand_id22

concatenate.142.merge:                            ; preds = %concat_index_from_operand_id22, %concat_index_from_operand_id21, %concat_index_from_operand_id20, %concat_index_from_operand_id19, %concat_index_from_operand_id18, %concat_index_from_operand_id17, %concat_index_from_operand_id16, %concat_index_from_operand_id15, %concat_index_from_operand_id14, %concat_index_from_operand_id13, %concat_index_from_operand_id12, %concat_index_from_operand_id11, %concat_index_from_operand_id10, %concat_index_from_operand_id9, %concat_index_from_operand_id8, %concat_index_from_operand_id7, %concat_index_from_operand_id6, %concat_index_from_operand_id5, %concat_index_from_operand_id4, %concat_index_from_operand_id3, %concat_index_from_operand_id2, %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %317 = phi float [ %add.56, %concat_index_from_operand_id0 ], [ %add.61, %concat_index_from_operand_id1 ], [ %add.65, %concat_index_from_operand_id2 ], [ %add.70, %concat_index_from_operand_id3 ], [ %add.74, %concat_index_from_operand_id4 ], [ %add.78, %concat_index_from_operand_id5 ], [ %add.82, %concat_index_from_operand_id6 ], [ %add.87, %concat_index_from_operand_id7 ], [ %add.92, %concat_index_from_operand_id8 ], [ %add.97, %concat_index_from_operand_id9 ], [ %add.101, %concat_index_from_operand_id10 ], [ %add.105, %concat_index_from_operand_id11 ], [ %add.109, %concat_index_from_operand_id12 ], [ %add.113, %concat_index_from_operand_id13 ], [ %add.117, %concat_index_from_operand_id14 ], [ %add.121, %concat_index_from_operand_id15 ], [ %add.125, %concat_index_from_operand_id16 ], [ %add.130, %concat_index_from_operand_id17 ], [ %add.135, %concat_index_from_operand_id18 ], [ %add.140, %concat_index_from_operand_id19 ], [ %274, %concat_index_from_operand_id20 ], [ %284, %concat_index_from_operand_id21 ], [ %294, %concat_index_from_operand_id22 ]
  %318 = getelementptr inbounds float, ptr %arg52, i32 %linear_index
  store float %317, ptr %318, align 4
  br label %fusion_663.in_bounds-after
}

define void @fusion_531(ptr noalias align 128 dereferenceable(1048576) %arg0, ptr noalias align 16 dereferenceable(128) %arg1) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !293
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !319
  %2 = mul nuw nsw i32 %0, 128
  %3 = call i32 @llvm.nvvm.read.ptx.sreg.tid.y(), !range !351
  %4 = mul nuw nsw i32 %3, 8
  %5 = add nuw nsw i32 %2, %4
  %linear_index = add nuw nsw i32 %5, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 65536
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %row_index = mul nuw nsw i32 %1, 4
  %6 = udiv i32 %linear_index_base, 1
  %7 = urem i32 %6, 32
  %8 = udiv i32 %linear_index_base, 32
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %row_index_plus1 = add nuw nsw i32 %row_index, 1
  %9 = udiv i32 %linear_index1, 1
  %10 = urem i32 %9, 32
  %11 = udiv i32 %linear_index1, 32
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %row_index_plus2 = add nuw nsw i32 %row_index, 2
  %12 = udiv i32 %linear_index2, 1
  %13 = urem i32 %12, 32
  %14 = udiv i32 %linear_index2, 32
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %row_index_plus3 = add nuw nsw i32 %row_index, 3
  %15 = udiv i32 %linear_index3, 1
  %16 = urem i32 %15, 32
  %17 = udiv i32 %linear_index3, 32
  %18 = icmp ult i32 %linear_index_base, 262144
  br i1 %18, label %fusion_531.in_bounds-true, label %fusion_531.in_bounds-after

fusion_531.in_bounds-after:                       ; preds = %fusion_531.in_bounds-true, %entry
  ret void

fusion_531.in_bounds-true:                        ; preds = %entry
  %19 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_base
  %20 = load float, ptr %19, align 4
  %21 = getelementptr inbounds [32 x float], ptr %arg1, i32 0, i32 %row_index
  %22 = load float, ptr %21, align 4, !invariant.load !297
  %add.4 = fadd float %20, %22
  %region_0_8_constant_5 = load float, ptr @50, align 4
  %23 = fcmp oge float %add.4, %region_0_8_constant_5
  %24 = fcmp une float %add.4, %add.4
  %25 = or i1 %23, %24
  %maximum.7 = select i1 %25, float %add.4, float %region_0_8_constant_5
  %26 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_base
  store float %maximum.7, ptr %26, align 4
  %27 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  %28 = load float, ptr %27, align 4
  %29 = getelementptr inbounds [32 x float], ptr %arg1, i32 0, i32 %row_index_plus1
  %30 = load float, ptr %29, align 4, !invariant.load !297
  %add.41 = fadd float %28, %30
  %region_0_8_constant_52 = load float, ptr @50, align 4
  %31 = fcmp oge float %add.41, %region_0_8_constant_52
  %32 = fcmp une float %add.41, %add.41
  %33 = or i1 %31, %32
  %maximum.73 = select i1 %33, float %add.41, float %region_0_8_constant_52
  %34 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  store float %maximum.73, ptr %34, align 4
  %35 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  %36 = load float, ptr %35, align 4
  %37 = getelementptr inbounds [32 x float], ptr %arg1, i32 0, i32 %row_index_plus2
  %38 = load float, ptr %37, align 4, !invariant.load !297
  %add.44 = fadd float %36, %38
  %region_0_8_constant_55 = load float, ptr @50, align 4
  %39 = fcmp oge float %add.44, %region_0_8_constant_55
  %40 = fcmp une float %add.44, %add.44
  %41 = or i1 %39, %40
  %maximum.76 = select i1 %41, float %add.44, float %region_0_8_constant_55
  %42 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  store float %maximum.76, ptr %42, align 4
  %43 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  %44 = load float, ptr %43, align 4
  %45 = getelementptr inbounds [32 x float], ptr %arg1, i32 0, i32 %row_index_plus3
  %46 = load float, ptr %45, align 4, !invariant.load !297
  %add.47 = fadd float %44, %46
  %region_0_8_constant_58 = load float, ptr @50, align 4
  %47 = fcmp oge float %add.47, %region_0_8_constant_58
  %48 = fcmp une float %add.47, %add.47
  %49 = or i1 %47, %48
  %maximum.79 = select i1 %49, float %add.47, float %region_0_8_constant_58
  %50 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  store float %maximum.79, ptr %50, align 4
  br label %fusion_531.in_bounds-after
}

define void @fusion_530(ptr noalias align 128 dereferenceable(2097152) %arg0, ptr noalias align 16 dereferenceable(256) %arg1) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !345
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !351
  %2 = mul nuw nsw i32 %0, 128
  %3 = call i32 @llvm.nvvm.read.ptx.sreg.tid.y(), !range !319
  %4 = mul nuw nsw i32 %3, 16
  %5 = add nuw nsw i32 %2, %4
  %linear_index = add nuw nsw i32 %5, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 131072
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %row_index = mul nuw nsw i32 %1, 4
  %6 = udiv i32 %linear_index_base, 1
  %7 = urem i32 %6, 64
  %8 = udiv i32 %linear_index_base, 64
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %row_index_plus1 = add nuw nsw i32 %row_index, 1
  %9 = udiv i32 %linear_index1, 1
  %10 = urem i32 %9, 64
  %11 = udiv i32 %linear_index1, 64
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %row_index_plus2 = add nuw nsw i32 %row_index, 2
  %12 = udiv i32 %linear_index2, 1
  %13 = urem i32 %12, 64
  %14 = udiv i32 %linear_index2, 64
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %row_index_plus3 = add nuw nsw i32 %row_index, 3
  %15 = udiv i32 %linear_index3, 1
  %16 = urem i32 %15, 64
  %17 = udiv i32 %linear_index3, 64
  %18 = icmp ult i32 %linear_index_base, 524288
  br i1 %18, label %fusion_530.in_bounds-true, label %fusion_530.in_bounds-after

fusion_530.in_bounds-after:                       ; preds = %fusion_530.in_bounds-true, %entry
  ret void

fusion_530.in_bounds-true:                        ; preds = %entry
  %19 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_base
  %20 = load float, ptr %19, align 4
  %21 = getelementptr inbounds [64 x float], ptr %arg1, i32 0, i32 %row_index
  %22 = load float, ptr %21, align 4, !invariant.load !297
  %add.4 = fadd float %20, %22
  %region_0_8_constant_5 = load float, ptr @51, align 4
  %23 = fcmp oge float %add.4, %region_0_8_constant_5
  %24 = fcmp une float %add.4, %add.4
  %25 = or i1 %23, %24
  %maximum.7 = select i1 %25, float %add.4, float %region_0_8_constant_5
  %26 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_base
  store float %maximum.7, ptr %26, align 4
  %27 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  %28 = load float, ptr %27, align 4
  %29 = getelementptr inbounds [64 x float], ptr %arg1, i32 0, i32 %row_index_plus1
  %30 = load float, ptr %29, align 4, !invariant.load !297
  %add.41 = fadd float %28, %30
  %region_0_8_constant_52 = load float, ptr @51, align 4
  %31 = fcmp oge float %add.41, %region_0_8_constant_52
  %32 = fcmp une float %add.41, %add.41
  %33 = or i1 %31, %32
  %maximum.73 = select i1 %33, float %add.41, float %region_0_8_constant_52
  %34 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  store float %maximum.73, ptr %34, align 4
  %35 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  %36 = load float, ptr %35, align 4
  %37 = getelementptr inbounds [64 x float], ptr %arg1, i32 0, i32 %row_index_plus2
  %38 = load float, ptr %37, align 4, !invariant.load !297
  %add.44 = fadd float %36, %38
  %region_0_8_constant_55 = load float, ptr @51, align 4
  %39 = fcmp oge float %add.44, %region_0_8_constant_55
  %40 = fcmp une float %add.44, %add.44
  %41 = or i1 %39, %40
  %maximum.76 = select i1 %41, float %add.44, float %region_0_8_constant_55
  %42 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  store float %maximum.76, ptr %42, align 4
  %43 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  %44 = load float, ptr %43, align 4
  %45 = getelementptr inbounds [64 x float], ptr %arg1, i32 0, i32 %row_index_plus3
  %46 = load float, ptr %45, align 4, !invariant.load !297
  %add.47 = fadd float %44, %46
  %region_0_8_constant_58 = load float, ptr @51, align 4
  %47 = fcmp oge float %add.47, %region_0_8_constant_58
  %48 = fcmp une float %add.47, %add.47
  %49 = or i1 %47, %48
  %maximum.79 = select i1 %49, float %add.47, float %region_0_8_constant_58
  %50 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  store float %maximum.79, ptr %50, align 4
  br label %fusion_530.in_bounds-after
}

define void @fusion_527(ptr noalias align 16 dereferenceable(4) %arg0, ptr noalias align 128 dereferenceable(32768) %arg1, ptr noalias align 128 dereferenceable(32768) %arg2, ptr noalias align 128 dereferenceable(655360) %arg3, ptr noalias align 16 dereferenceable(80) %arg4, ptr noalias align 16 dereferenceable(4) %arg5, ptr noalias align 128 dereferenceable(32768) %arg6, ptr noalias align 128 dereferenceable(32768) %arg7, ptr noalias align 128 dereferenceable(32768) %arg8, ptr noalias align 16 dereferenceable(4) %arg9, ptr noalias align 16 dereferenceable(4) %arg10, ptr noalias align 128 dereferenceable(32768) %arg11, ptr noalias align 128 dereferenceable(32768) %arg12, ptr noalias align 128 dereferenceable(32768) %arg13, ptr noalias align 16 dereferenceable(4) %arg14, ptr noalias align 128 dereferenceable(32768) %arg15, ptr noalias align 16 dereferenceable(4) %arg16, ptr noalias align 128 dereferenceable(32768) %arg17, ptr noalias align 16 dereferenceable(4) %arg18, ptr noalias align 128 dereferenceable(32768) %arg19, ptr noalias align 16 dereferenceable(4) %arg20, ptr noalias align 16 dereferenceable(4) %arg21, ptr noalias align 128 dereferenceable(32768) %arg22, ptr noalias align 128 dereferenceable(32768) %arg23, ptr noalias align 16 dereferenceable(4) %arg24, ptr noalias align 128 dereferenceable(32768) %arg25, ptr noalias align 128 dereferenceable(32768) %arg26, ptr noalias align 16 dereferenceable(4) %arg27, ptr noalias align 128 dereferenceable(32768) %arg28, ptr noalias align 128 dereferenceable(32768) %arg29, ptr noalias align 128 dereferenceable(32768) %arg30, ptr noalias align 16 dereferenceable(4) %arg31, ptr noalias align 128 dereferenceable(32768) %arg32, ptr noalias align 16 dereferenceable(4) %arg33, ptr noalias align 128 dereferenceable(32768) %arg34, ptr noalias align 16 dereferenceable(4) %arg35, ptr noalias align 128 dereferenceable(32768) %arg36, ptr noalias align 16 dereferenceable(4) %arg37, ptr noalias align 128 dereferenceable(32768) %arg38, ptr noalias align 16 dereferenceable(4) %arg39, ptr noalias align 128 dereferenceable(32768) %arg40, ptr noalias align 16 dereferenceable(4) %arg41, ptr noalias align 128 dereferenceable(32768) %arg42, ptr noalias align 128 dereferenceable(32768) %arg43, ptr noalias align 128 dereferenceable(32768) %arg44, ptr noalias align 128 dereferenceable(32768) %arg45, ptr noalias align 128 dereferenceable(32768) %arg46, ptr noalias align 128 dereferenceable(32768) %arg47, ptr noalias align 128 dereferenceable(32768) %arg48, ptr noalias align 128 dereferenceable(32768) %arg49, ptr noalias align 128 dereferenceable(32768) %arg50, ptr noalias align 128 dereferenceable(32768) %arg51, ptr noalias align 128 dereferenceable(32768) %arg52, ptr noalias align 128 dereferenceable(32768) %arg53, ptr noalias align 128 dereferenceable(32768) %arg54, ptr noalias align 128 dereferenceable(32768) %arg55, ptr noalias align 128 dereferenceable(32768) %arg56, ptr noalias align 128 dereferenceable(32768) %arg57, ptr noalias align 128 dereferenceable(32768) %arg58) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !319
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 8192
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 1
  %5 = udiv i32 %linear_index, 1
  %6 = icmp ult i32 %linear_index, 8192
  br i1 %6, label %fusion_527.in_bounds-true, label %fusion_527.in_bounds-after

fusion_527.in_bounds-after:                       ; preds = %fusion_527.in_bounds-true, %entry
  ret void

fusion_527.in_bounds-true:                        ; preds = %entry
  %region_0_224_constant_43 = load float, ptr @52, align 4
  %7 = getelementptr inbounds float, ptr %arg1, i32 %linear_index
  %8 = load float, ptr %7, align 4, !invariant.load !297
  %9 = getelementptr inbounds float, ptr %arg2, i32 %linear_index
  %10 = load float, ptr %9, align 4, !invariant.load !297
  %add.45 = fadd float %8, %10
  %11 = getelementptr inbounds [1 x float], ptr %arg0, i32 0, i32 0
  %12 = load float, ptr %11, align 4, !invariant.load !297
  %add.48 = fadd float %add.45, %12
  %13 = add i32 %5, 0
  %14 = add i32 %4, 0
  %15 = getelementptr inbounds [8192 x [20 x float]], ptr %arg3, i32 0, i32 %13, i32 %14
  %16 = load float, ptr %15, align 4, !invariant.load !297
  %17 = getelementptr inbounds [20 x float], ptr %arg4, i32 0, i32 %14
  %18 = load float, ptr %17, align 4, !invariant.load !297
  %add.51 = fadd float %16, %18
  %add.53 = fadd float %add.48, %add.51
  %19 = fneg float %add.53
  %20 = call float @__nv_expf(float %19)
  %add.56 = fadd float %region_0_224_constant_43, %20
  %divide.57 = fdiv float %region_0_224_constant_43, %add.56
  %21 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } undef, float %divide.57, 0
  %22 = getelementptr inbounds float, ptr %arg6, i32 %linear_index
  %23 = load float, ptr %22, align 4, !invariant.load !297
  %24 = getelementptr inbounds float, ptr %arg7, i32 %linear_index
  %25 = load float, ptr %24, align 4, !invariant.load !297
  %add.58 = fadd float %23, %25
  %26 = getelementptr inbounds [1 x float], ptr %arg5, i32 0, i32 0
  %27 = load float, ptr %26, align 4, !invariant.load !297
  %add.61 = fadd float %add.58, %27
  %28 = add i32 %5, 0
  %29 = add i32 %4, 1
  %30 = getelementptr inbounds [8192 x [20 x float]], ptr %arg3, i32 0, i32 %28, i32 %29
  %31 = load float, ptr %30, align 4, !invariant.load !297
  %32 = getelementptr inbounds [20 x float], ptr %arg4, i32 0, i32 %29
  %33 = load float, ptr %32, align 4, !invariant.load !297
  %add.511 = fadd float %31, %33
  %add.64 = fadd float %add.61, %add.511
  %34 = fneg float %add.64
  %35 = call float @__nv_expf(float %34)
  %add.67 = fadd float %region_0_224_constant_43, %35
  %divide.68 = fdiv float %region_0_224_constant_43, %add.67
  %36 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %21, float %divide.68, 1
  %37 = getelementptr inbounds float, ptr %arg8, i32 %linear_index
  %38 = load float, ptr %37, align 4, !invariant.load !297
  %39 = getelementptr inbounds [1 x float], ptr %arg9, i32 0, i32 0
  %40 = load float, ptr %39, align 4, !invariant.load !297
  %add.71 = fadd float %38, %40
  %41 = add i32 %5, 0
  %42 = add i32 %4, 2
  %43 = getelementptr inbounds [8192 x [20 x float]], ptr %arg3, i32 0, i32 %41, i32 %42
  %44 = load float, ptr %43, align 4, !invariant.load !297
  %45 = getelementptr inbounds [20 x float], ptr %arg4, i32 0, i32 %42
  %46 = load float, ptr %45, align 4, !invariant.load !297
  %add.512 = fadd float %44, %46
  %add.74 = fadd float %add.71, %add.512
  %47 = fneg float %add.74
  %48 = call float @__nv_expf(float %47)
  %add.77 = fadd float %region_0_224_constant_43, %48
  %divide.78 = fdiv float %region_0_224_constant_43, %add.77
  %49 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %36, float %divide.78, 2
  %50 = add i32 %5, 0
  %51 = add i32 %4, 3
  %52 = getelementptr inbounds [8192 x [20 x float]], ptr %arg3, i32 0, i32 %50, i32 %51
  %53 = load float, ptr %52, align 4, !invariant.load !297
  %54 = getelementptr inbounds [20 x float], ptr %arg4, i32 0, i32 %51
  %55 = load float, ptr %54, align 4, !invariant.load !297
  %add.513 = fadd float %53, %55
  %56 = getelementptr inbounds float, ptr %arg11, i32 %linear_index
  %57 = load float, ptr %56, align 4, !invariant.load !297
  %58 = getelementptr inbounds float, ptr %arg12, i32 %linear_index
  %59 = load float, ptr %58, align 4, !invariant.load !297
  %add.80 = fadd float %57, %59
  %60 = getelementptr inbounds [1 x float], ptr %arg10, i32 0, i32 0
  %61 = load float, ptr %60, align 4, !invariant.load !297
  %add.83 = fadd float %add.80, %61
  %add.85 = fadd float %add.513, %add.83
  %62 = fneg float %add.85
  %63 = call float @__nv_expf(float %62)
  %add.88 = fadd float %region_0_224_constant_43, %63
  %divide.89 = fdiv float %region_0_224_constant_43, %add.88
  %64 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %49, float %divide.89, 3
  %65 = getelementptr inbounds float, ptr %arg13, i32 %linear_index
  %66 = load float, ptr %65, align 4, !invariant.load !297
  %67 = getelementptr inbounds [1 x float], ptr %arg14, i32 0, i32 0
  %68 = load float, ptr %67, align 4, !invariant.load !297
  %add.92 = fadd float %66, %68
  %69 = add i32 %5, 0
  %70 = add i32 %4, 14
  %71 = getelementptr inbounds [8192 x [20 x float]], ptr %arg3, i32 0, i32 %69, i32 %70
  %72 = load float, ptr %71, align 4, !invariant.load !297
  %73 = getelementptr inbounds [20 x float], ptr %arg4, i32 0, i32 %70
  %74 = load float, ptr %73, align 4, !invariant.load !297
  %add.514 = fadd float %72, %74
  %add.95 = fadd float %add.92, %add.514
  %75 = fneg float %add.95
  %76 = call float @__nv_expf(float %75)
  %add.98 = fadd float %region_0_224_constant_43, %76
  %divide.99 = fdiv float %region_0_224_constant_43, %add.98
  %77 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %64, float %divide.99, 4
  %78 = getelementptr inbounds float, ptr %arg15, i32 %linear_index
  %79 = load float, ptr %78, align 4, !invariant.load !297
  %80 = getelementptr inbounds [1 x float], ptr %arg16, i32 0, i32 0
  %81 = load float, ptr %80, align 4, !invariant.load !297
  %add.102 = fadd float %79, %81
  %82 = add i32 %5, 0
  %83 = add i32 %4, 16
  %84 = getelementptr inbounds [8192 x [20 x float]], ptr %arg3, i32 0, i32 %82, i32 %83
  %85 = load float, ptr %84, align 4, !invariant.load !297
  %86 = getelementptr inbounds [20 x float], ptr %arg4, i32 0, i32 %83
  %87 = load float, ptr %86, align 4, !invariant.load !297
  %add.515 = fadd float %85, %87
  %add.105 = fadd float %add.102, %add.515
  %88 = fneg float %add.105
  %89 = call float @__nv_expf(float %88)
  %add.108 = fadd float %region_0_224_constant_43, %89
  %divide.109 = fdiv float %region_0_224_constant_43, %add.108
  %90 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %77, float %divide.109, 5
  %91 = getelementptr inbounds float, ptr %arg17, i32 %linear_index
  %92 = load float, ptr %91, align 4, !invariant.load !297
  %93 = getelementptr inbounds [1 x float], ptr %arg18, i32 0, i32 0
  %94 = load float, ptr %93, align 4, !invariant.load !297
  %add.112 = fadd float %92, %94
  %95 = add i32 %5, 0
  %96 = add i32 %4, 4
  %97 = getelementptr inbounds [8192 x [20 x float]], ptr %arg3, i32 0, i32 %95, i32 %96
  %98 = load float, ptr %97, align 4, !invariant.load !297
  %99 = getelementptr inbounds [20 x float], ptr %arg4, i32 0, i32 %96
  %100 = load float, ptr %99, align 4, !invariant.load !297
  %add.516 = fadd float %98, %100
  %add.115 = fadd float %add.112, %add.516
  %101 = fneg float %add.115
  %102 = call float @__nv_expf(float %101)
  %add.118 = fadd float %region_0_224_constant_43, %102
  %divide.119 = fdiv float %region_0_224_constant_43, %add.118
  %103 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %90, float %divide.119, 6
  %104 = getelementptr inbounds float, ptr %arg19, i32 %linear_index
  %105 = load float, ptr %104, align 4, !invariant.load !297
  %106 = getelementptr inbounds [1 x float], ptr %arg20, i32 0, i32 0
  %107 = load float, ptr %106, align 4, !invariant.load !297
  %add.122 = fadd float %105, %107
  %108 = add i32 %5, 0
  %109 = add i32 %4, 5
  %110 = getelementptr inbounds [8192 x [20 x float]], ptr %arg3, i32 0, i32 %108, i32 %109
  %111 = load float, ptr %110, align 4, !invariant.load !297
  %112 = getelementptr inbounds [20 x float], ptr %arg4, i32 0, i32 %109
  %113 = load float, ptr %112, align 4, !invariant.load !297
  %add.517 = fadd float %111, %113
  %add.125 = fadd float %add.122, %add.517
  %114 = fneg float %add.125
  %115 = call float @__nv_expf(float %114)
  %add.128 = fadd float %region_0_224_constant_43, %115
  %divide.129 = fdiv float %region_0_224_constant_43, %add.128
  %116 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %103, float %divide.129, 7
  %117 = getelementptr inbounds float, ptr %arg22, i32 %linear_index
  %118 = load float, ptr %117, align 4, !invariant.load !297
  %119 = getelementptr inbounds float, ptr %arg23, i32 %linear_index
  %120 = load float, ptr %119, align 4, !invariant.load !297
  %add.130 = fadd float %118, %120
  %121 = getelementptr inbounds [1 x float], ptr %arg21, i32 0, i32 0
  %122 = load float, ptr %121, align 4, !invariant.load !297
  %add.133 = fadd float %add.130, %122
  %123 = add i32 %5, 0
  %124 = add i32 %4, 7
  %125 = getelementptr inbounds [8192 x [20 x float]], ptr %arg3, i32 0, i32 %123, i32 %124
  %126 = load float, ptr %125, align 4, !invariant.load !297
  %127 = getelementptr inbounds [20 x float], ptr %arg4, i32 0, i32 %124
  %128 = load float, ptr %127, align 4, !invariant.load !297
  %add.518 = fadd float %126, %128
  %add.136 = fadd float %add.133, %add.518
  %129 = fneg float %add.136
  %130 = call float @__nv_expf(float %129)
  %add.139 = fadd float %region_0_224_constant_43, %130
  %divide.140 = fdiv float %region_0_224_constant_43, %add.139
  %131 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, float %divide.140, 8
  %132 = add i32 %5, 0
  %133 = add i32 %4, 8
  %134 = getelementptr inbounds [8192 x [20 x float]], ptr %arg3, i32 0, i32 %132, i32 %133
  %135 = load float, ptr %134, align 4, !invariant.load !297
  %136 = getelementptr inbounds [20 x float], ptr %arg4, i32 0, i32 %133
  %137 = load float, ptr %136, align 4, !invariant.load !297
  %add.519 = fadd float %135, %137
  %138 = getelementptr inbounds float, ptr %arg25, i32 %linear_index
  %139 = load float, ptr %138, align 4, !invariant.load !297
  %140 = getelementptr inbounds float, ptr %arg26, i32 %linear_index
  %141 = load float, ptr %140, align 4, !invariant.load !297
  %add.142 = fadd float %139, %141
  %142 = getelementptr inbounds [1 x float], ptr %arg24, i32 0, i32 0
  %143 = load float, ptr %142, align 4, !invariant.load !297
  %add.145 = fadd float %add.142, %143
  %add.147 = fadd float %add.519, %add.145
  %144 = fneg float %add.147
  %145 = call float @__nv_expf(float %144)
  %add.150 = fadd float %region_0_224_constant_43, %145
  %divide.151 = fdiv float %region_0_224_constant_43, %add.150
  %146 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %131, float %divide.151, 9
  %147 = getelementptr inbounds float, ptr %arg28, i32 %linear_index
  %148 = load float, ptr %147, align 4, !invariant.load !297
  %149 = getelementptr inbounds float, ptr %arg29, i32 %linear_index
  %150 = load float, ptr %149, align 4, !invariant.load !297
  %add.152 = fadd float %148, %150
  %151 = getelementptr inbounds [1 x float], ptr %arg27, i32 0, i32 0
  %152 = load float, ptr %151, align 4, !invariant.load !297
  %add.155 = fadd float %add.152, %152
  %153 = add i32 %5, 0
  %154 = add i32 %4, 9
  %155 = getelementptr inbounds [8192 x [20 x float]], ptr %arg3, i32 0, i32 %153, i32 %154
  %156 = load float, ptr %155, align 4, !invariant.load !297
  %157 = getelementptr inbounds [20 x float], ptr %arg4, i32 0, i32 %154
  %158 = load float, ptr %157, align 4, !invariant.load !297
  %add.5110 = fadd float %156, %158
  %add.158 = fadd float %add.155, %add.5110
  %159 = fneg float %add.158
  %160 = call float @__nv_expf(float %159)
  %add.161 = fadd float %region_0_224_constant_43, %160
  %divide.162 = fdiv float %region_0_224_constant_43, %add.161
  %161 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %146, float %divide.162, 10
  %162 = getelementptr inbounds float, ptr %arg30, i32 %linear_index
  %163 = load float, ptr %162, align 4, !invariant.load !297
  %164 = getelementptr inbounds [1 x float], ptr %arg31, i32 0, i32 0
  %165 = load float, ptr %164, align 4, !invariant.load !297
  %add.165 = fadd float %163, %165
  %166 = add i32 %5, 0
  %167 = add i32 %4, 10
  %168 = getelementptr inbounds [8192 x [20 x float]], ptr %arg3, i32 0, i32 %166, i32 %167
  %169 = load float, ptr %168, align 4, !invariant.load !297
  %170 = getelementptr inbounds [20 x float], ptr %arg4, i32 0, i32 %167
  %171 = load float, ptr %170, align 4, !invariant.load !297
  %add.5111 = fadd float %169, %171
  %add.168 = fadd float %add.165, %add.5111
  %172 = fneg float %add.168
  %173 = call float @__nv_expf(float %172)
  %add.171 = fadd float %region_0_224_constant_43, %173
  %divide.172 = fdiv float %region_0_224_constant_43, %add.171
  %174 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %161, float %divide.172, 11
  %175 = getelementptr inbounds float, ptr %arg32, i32 %linear_index
  %176 = load float, ptr %175, align 4, !invariant.load !297
  %177 = getelementptr inbounds [1 x float], ptr %arg33, i32 0, i32 0
  %178 = load float, ptr %177, align 4, !invariant.load !297
  %add.175 = fadd float %176, %178
  %179 = add i32 %5, 0
  %180 = add i32 %4, 11
  %181 = getelementptr inbounds [8192 x [20 x float]], ptr %arg3, i32 0, i32 %179, i32 %180
  %182 = load float, ptr %181, align 4, !invariant.load !297
  %183 = getelementptr inbounds [20 x float], ptr %arg4, i32 0, i32 %180
  %184 = load float, ptr %183, align 4, !invariant.load !297
  %add.5112 = fadd float %182, %184
  %add.178 = fadd float %add.175, %add.5112
  %185 = fneg float %add.178
  %186 = call float @__nv_expf(float %185)
  %add.181 = fadd float %region_0_224_constant_43, %186
  %divide.182 = fdiv float %region_0_224_constant_43, %add.181
  %187 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %174, float %divide.182, 12
  %188 = add i32 %5, 0
  %189 = add i32 %4, 12
  %190 = getelementptr inbounds [8192 x [20 x float]], ptr %arg3, i32 0, i32 %188, i32 %189
  %191 = load float, ptr %190, align 4, !invariant.load !297
  %192 = getelementptr inbounds [20 x float], ptr %arg4, i32 0, i32 %189
  %193 = load float, ptr %192, align 4, !invariant.load !297
  %add.5113 = fadd float %191, %193
  %194 = getelementptr inbounds float, ptr %arg34, i32 %linear_index
  %195 = load float, ptr %194, align 4, !invariant.load !297
  %196 = getelementptr inbounds [1 x float], ptr %arg35, i32 0, i32 0
  %197 = load float, ptr %196, align 4, !invariant.load !297
  %add.186 = fadd float %195, %197
  %add.188 = fadd float %add.5113, %add.186
  %198 = fneg float %add.188
  %199 = call float @__nv_expf(float %198)
  %add.191 = fadd float %region_0_224_constant_43, %199
  %divide.192 = fdiv float %region_0_224_constant_43, %add.191
  %200 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %187, float %divide.192, 13
  %201 = getelementptr inbounds float, ptr %arg36, i32 %linear_index
  %202 = load float, ptr %201, align 4, !invariant.load !297
  %203 = getelementptr inbounds [1 x float], ptr %arg37, i32 0, i32 0
  %204 = load float, ptr %203, align 4, !invariant.load !297
  %add.195 = fadd float %202, %204
  %205 = add i32 %5, 0
  %206 = add i32 %4, 6
  %207 = getelementptr inbounds [8192 x [20 x float]], ptr %arg3, i32 0, i32 %205, i32 %206
  %208 = load float, ptr %207, align 4, !invariant.load !297
  %209 = getelementptr inbounds [20 x float], ptr %arg4, i32 0, i32 %206
  %210 = load float, ptr %209, align 4, !invariant.load !297
  %add.5114 = fadd float %208, %210
  %add.198 = fadd float %add.195, %add.5114
  %211 = fneg float %add.198
  %212 = call float @__nv_expf(float %211)
  %add.201 = fadd float %region_0_224_constant_43, %212
  %divide.202 = fdiv float %region_0_224_constant_43, %add.201
  %213 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %200, float %divide.202, 14
  %214 = getelementptr inbounds float, ptr %arg38, i32 %linear_index
  %215 = load float, ptr %214, align 4, !invariant.load !297
  %216 = getelementptr inbounds [1 x float], ptr %arg39, i32 0, i32 0
  %217 = load float, ptr %216, align 4, !invariant.load !297
  %add.205 = fadd float %215, %217
  %218 = add i32 %5, 0
  %219 = add i32 %4, 13
  %220 = getelementptr inbounds [8192 x [20 x float]], ptr %arg3, i32 0, i32 %218, i32 %219
  %221 = load float, ptr %220, align 4, !invariant.load !297
  %222 = getelementptr inbounds [20 x float], ptr %arg4, i32 0, i32 %219
  %223 = load float, ptr %222, align 4, !invariant.load !297
  %add.5115 = fadd float %221, %223
  %add.208 = fadd float %add.205, %add.5115
  %224 = fneg float %add.208
  %225 = call float @__nv_expf(float %224)
  %add.211 = fadd float %region_0_224_constant_43, %225
  %divide.212 = fdiv float %region_0_224_constant_43, %add.211
  %226 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %213, float %divide.212, 15
  %227 = getelementptr inbounds float, ptr %arg40, i32 %linear_index
  %228 = load float, ptr %227, align 4, !invariant.load !297
  %229 = getelementptr inbounds [1 x float], ptr %arg41, i32 0, i32 0
  %230 = load float, ptr %229, align 4, !invariant.load !297
  %add.215 = fadd float %228, %230
  %231 = add i32 %5, 0
  %232 = add i32 %4, 15
  %233 = getelementptr inbounds [8192 x [20 x float]], ptr %arg3, i32 0, i32 %231, i32 %232
  %234 = load float, ptr %233, align 4, !invariant.load !297
  %235 = getelementptr inbounds [20 x float], ptr %arg4, i32 0, i32 %232
  %236 = load float, ptr %235, align 4, !invariant.load !297
  %add.5116 = fadd float %234, %236
  %add.218 = fadd float %add.215, %add.5116
  %237 = fneg float %add.218
  %238 = call float @__nv_expf(float %237)
  %add.221 = fadd float %region_0_224_constant_43, %238
  %divide.222 = fdiv float %region_0_224_constant_43, %add.221
  %239 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %226, float %divide.222, 16
  %240 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %239, 0
  %241 = getelementptr inbounds float, ptr %arg42, i32 %linear_index
  store float %240, ptr %241, align 4
  %242 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %239, 1
  %243 = getelementptr inbounds float, ptr %arg43, i32 %linear_index
  store float %242, ptr %243, align 4
  %244 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %239, 2
  %245 = getelementptr inbounds float, ptr %arg44, i32 %linear_index
  store float %244, ptr %245, align 4
  %246 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %239, 3
  %247 = getelementptr inbounds float, ptr %arg45, i32 %linear_index
  store float %246, ptr %247, align 4
  %248 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %239, 4
  %249 = getelementptr inbounds float, ptr %arg46, i32 %linear_index
  store float %248, ptr %249, align 4
  %250 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %239, 5
  %251 = getelementptr inbounds float, ptr %arg47, i32 %linear_index
  store float %250, ptr %251, align 4
  %252 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %239, 6
  %253 = getelementptr inbounds float, ptr %arg48, i32 %linear_index
  store float %252, ptr %253, align 4
  %254 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %239, 7
  %255 = getelementptr inbounds float, ptr %arg49, i32 %linear_index
  store float %254, ptr %255, align 4
  %256 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %239, 8
  %257 = getelementptr inbounds float, ptr %arg50, i32 %linear_index
  store float %256, ptr %257, align 4
  %258 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %239, 9
  %259 = getelementptr inbounds float, ptr %arg51, i32 %linear_index
  store float %258, ptr %259, align 4
  %260 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %239, 10
  %261 = getelementptr inbounds float, ptr %arg52, i32 %linear_index
  store float %260, ptr %261, align 4
  %262 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %239, 11
  %263 = getelementptr inbounds float, ptr %arg53, i32 %linear_index
  store float %262, ptr %263, align 4
  %264 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %239, 12
  %265 = getelementptr inbounds float, ptr %arg54, i32 %linear_index
  store float %264, ptr %265, align 4
  %266 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %239, 13
  %267 = getelementptr inbounds float, ptr %arg55, i32 %linear_index
  store float %266, ptr %267, align 4
  %268 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %239, 14
  %269 = getelementptr inbounds float, ptr %arg56, i32 %linear_index
  store float %268, ptr %269, align 4
  %270 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %239, 15
  %271 = getelementptr inbounds float, ptr %arg57, i32 %linear_index
  store float %270, ptr %271, align 4
  %272 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %239, 16
  %273 = getelementptr inbounds float, ptr %arg58, i32 %linear_index
  store float %272, ptr %273, align 4
  br label %fusion_527.in_bounds-after
}

define void @fusion_378(ptr noalias align 16 dereferenceable(4) %arg0, ptr noalias align 128 dereferenceable(32768) %arg1, ptr noalias align 128 dereferenceable(32768) %arg2, ptr noalias align 128 dereferenceable(655360) %arg3, ptr noalias align 16 dereferenceable(80) %arg4, ptr noalias align 16 dereferenceable(4) %arg5, ptr noalias align 128 dereferenceable(32768) %arg6, ptr noalias align 128 dereferenceable(32768) %arg7, ptr noalias align 16 dereferenceable(4) %arg8, ptr noalias align 128 dereferenceable(32768) %arg9, ptr noalias align 128 dereferenceable(32768) %arg10, ptr noalias align 128 dereferenceable(32768) %arg11, ptr noalias align 16 dereferenceable(4) %arg12, ptr noalias align 128 dereferenceable(32768) %arg13, ptr noalias align 128 dereferenceable(32768) %arg14, ptr noalias align 128 dereferenceable(32768) %arg15, ptr noalias align 128 dereferenceable(32768) %arg16, ptr noalias align 128 dereferenceable(32768) %arg17, ptr noalias align 128 dereferenceable(32768) %arg18, ptr noalias align 128 dereferenceable(32768) %arg19, ptr noalias align 128 dereferenceable(32768) %arg20, ptr noalias align 128 dereferenceable(32768) %arg21, ptr noalias align 128 dereferenceable(32768) %arg22, ptr noalias align 128 dereferenceable(32768) %arg23, ptr noalias align 128 dereferenceable(32768) %arg24, ptr noalias align 128 dereferenceable(32768) %arg25, ptr noalias align 128 dereferenceable(32768) %arg26, ptr noalias align 128 dereferenceable(32768) %arg27, ptr noalias align 128 dereferenceable(32768) %arg28, ptr noalias align 128 dereferenceable(32768) %arg29, ptr noalias align 128 dereferenceable(32768) %arg30, ptr noalias align 128 dereferenceable(32768) %arg31, ptr noalias align 128 dereferenceable(32768) %arg32, ptr noalias align 128 dereferenceable(32768) %arg33, ptr noalias align 128 dereferenceable(32768) %arg34, ptr noalias align 128 dereferenceable(32768) %arg35, ptr noalias align 128 dereferenceable(32768) %arg36, ptr noalias align 128 dereferenceable(32768) %arg37, ptr noalias align 128 dereferenceable(32768) %arg38, ptr noalias align 128 dereferenceable(32768) %arg39, ptr noalias align 128 dereferenceable(32768) %arg40, ptr noalias align 128 dereferenceable(32768) %arg41, ptr noalias align 128 dereferenceable(32768) %arg42, ptr noalias align 128 dereferenceable(32768) %arg43, ptr noalias align 128 dereferenceable(32768) %arg44, ptr noalias align 128 dereferenceable(32768) %arg45, ptr noalias align 128 dereferenceable(32768) %arg46, ptr noalias align 128 dereferenceable(32768) %arg47, ptr noalias align 128 dereferenceable(32768) %arg48, ptr noalias align 128 dereferenceable(32768) %arg49, ptr noalias align 128 dereferenceable(32768) %arg50, ptr noalias align 128 dereferenceable(32768) %arg51, ptr noalias align 16 dereferenceable(32768) %arg52, ptr noalias align 128 dereferenceable(32768) %arg53, ptr noalias align 128 dereferenceable(32768) %arg54, ptr noalias align 128 dereferenceable(32768) %arg55, ptr noalias align 128 dereferenceable(32768) %arg56, ptr noalias align 128 dereferenceable(32768) %arg57, ptr noalias align 128 dereferenceable(32768) %arg58, ptr noalias align 128 dereferenceable(32768) %arg59, ptr noalias align 16 dereferenceable(32768) %arg60, ptr noalias align 16 dereferenceable(32768) %arg61, ptr noalias align 128 dereferenceable(1966080) %arg62, ptr noalias align 128 dereferenceable(1966080) %arg63) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !364
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 491520
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 1
  %5 = udiv i32 %linear_index, 1
  %6 = urem i32 %5, 8192
  %7 = udiv i32 %linear_index, 8192
  %8 = icmp ult i32 %linear_index, 491520
  br i1 %8, label %fusion_378.in_bounds-true, label %fusion_378.in_bounds-after

fusion_378.in_bounds-after:                       ; preds = %concatenate.163.merge, %entry
  ret void

fusion_378.in_bounds-true:                        ; preds = %entry
  %region_0_169_constant_63 = load float, ptr @55, align 4
  br label %concatenate.pivot.30.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %9 = phi i32 [ 0, %concatenate.pivot.0. ]
  %10 = sub nsw i32 %7, %9
  %11 = getelementptr inbounds [8192 x [1 x float]], ptr %arg61, i32 0, i32 %6, i32 0
  %12 = load float, ptr %11, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.1.6
  %13 = phi i32 [ 1, %concatenate.pivot.1.6 ]
  %14 = sub nsw i32 %7, %13
  %15 = getelementptr inbounds [8192 x [1 x float]], ptr %arg60, i32 0, i32 %6, i32 0
  %16 = load float, ptr %15, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id2:                    ; preds = %concatenate.pivot.2.7
  %17 = phi i32 [ 2, %concatenate.pivot.2.7 ]
  %18 = sub nsw i32 %7, %17
  %19 = getelementptr inbounds [8192 x [1 x float]], ptr %arg59, i32 0, i32 %6, i32 0
  %20 = load float, ptr %19, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id3:                    ; preds = %concatenate.pivot.3.8
  %21 = phi i32 [ 3, %concatenate.pivot.3.8 ]
  %22 = sub nsw i32 %7, %21
  %23 = getelementptr inbounds [8192 x [1 x float]], ptr %arg58, i32 0, i32 %6, i32 0
  %24 = load float, ptr %23, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id4:                    ; preds = %concatenate.pivot.4.9
  %25 = phi i32 [ 4, %concatenate.pivot.4.9 ]
  %26 = sub nsw i32 %7, %25
  %27 = getelementptr inbounds [8192 x [1 x float]], ptr %arg57, i32 0, i32 %6, i32 0
  %28 = load float, ptr %27, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id5:                    ; preds = %concatenate.pivot.5.10
  %29 = phi i32 [ 5, %concatenate.pivot.5.10 ]
  %30 = sub nsw i32 %7, %29
  %31 = getelementptr inbounds [8192 x [1 x float]], ptr %arg56, i32 0, i32 %6, i32 0
  %32 = load float, ptr %31, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id6:                    ; preds = %concatenate.pivot.6.11
  %33 = phi i32 [ 6, %concatenate.pivot.6.11 ]
  %34 = sub nsw i32 %7, %33
  %35 = getelementptr inbounds [8192 x float], ptr %arg55, i32 0, i32 %6
  %36 = load float, ptr %35, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id7:                    ; preds = %concatenate.pivot.7.12
  %37 = phi i32 [ 7, %concatenate.pivot.7.12 ]
  %38 = sub nsw i32 %7, %37
  %39 = getelementptr inbounds [8192 x [1 x float]], ptr %arg54, i32 0, i32 %6, i32 0
  %40 = load float, ptr %39, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id8:                    ; preds = %concatenate.pivot.8.13
  %41 = phi i32 [ 8, %concatenate.pivot.8.13 ]
  %42 = sub nsw i32 %7, %41
  %43 = getelementptr inbounds [8192 x [1 x float]], ptr %arg53, i32 0, i32 %6, i32 0
  %44 = load float, ptr %43, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id9:                    ; preds = %concatenate.pivot.9.14
  %45 = phi i32 [ 9, %concatenate.pivot.9.14 ]
  %46 = sub nsw i32 %7, %45
  %47 = getelementptr inbounds [8192 x [1 x float]], ptr %arg52, i32 0, i32 %6, i32 0
  %48 = load float, ptr %47, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id10:                   ; preds = %concatenate.pivot.10.15
  %49 = phi i32 [ 10, %concatenate.pivot.10.15 ]
  %50 = sub nsw i32 %7, %49
  %51 = getelementptr inbounds [8192 x [1 x float]], ptr %arg51, i32 0, i32 %6, i32 0
  %52 = load float, ptr %51, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id11:                   ; preds = %concatenate.pivot.11.16
  %53 = phi i32 [ 11, %concatenate.pivot.11.16 ]
  %54 = sub nsw i32 %7, %53
  %55 = getelementptr inbounds [8192 x [1 x float]], ptr %arg50, i32 0, i32 %6, i32 0
  %56 = load float, ptr %55, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id12:                   ; preds = %concatenate.pivot.12.17
  %57 = phi i32 [ 12, %concatenate.pivot.12.17 ]
  %58 = sub nsw i32 %7, %57
  %59 = getelementptr inbounds [8192 x [1 x float]], ptr %arg49, i32 0, i32 %6, i32 0
  %60 = load float, ptr %59, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id13:                   ; preds = %concatenate.pivot.13.18
  %61 = phi i32 [ 13, %concatenate.pivot.13.18 ]
  %62 = sub nsw i32 %7, %61
  %63 = getelementptr inbounds [8192 x [1 x float]], ptr %arg48, i32 0, i32 %6, i32 0
  %64 = load float, ptr %63, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id14:                   ; preds = %concatenate.pivot.14.19
  %65 = phi i32 [ 14, %concatenate.pivot.14.19 ]
  %66 = sub nsw i32 %7, %65
  %67 = getelementptr inbounds [8192 x [1 x float]], ptr %arg47, i32 0, i32 %6, i32 0
  %68 = load float, ptr %67, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id15:                   ; preds = %concatenate.pivot.15.20
  %69 = phi i32 [ 15, %concatenate.pivot.15.20 ]
  %70 = sub nsw i32 %7, %69
  %71 = getelementptr inbounds [8192 x [1 x float]], ptr %arg46, i32 0, i32 %6, i32 0
  %72 = load float, ptr %71, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id16:                   ; preds = %concatenate.pivot.16.21
  %73 = phi i32 [ 16, %concatenate.pivot.16.21 ]
  %74 = sub nsw i32 %7, %73
  %75 = getelementptr inbounds [8192 x [1 x float]], ptr %arg45, i32 0, i32 %6, i32 0
  %76 = load float, ptr %75, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id17:                   ; preds = %concatenate.pivot.17.22
  %77 = phi i32 [ 17, %concatenate.pivot.17.22 ]
  %78 = sub nsw i32 %7, %77
  %79 = getelementptr inbounds [8192 x float], ptr %arg44, i32 0, i32 %6
  %80 = load float, ptr %79, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id18:                   ; preds = %concatenate.pivot.18.23
  %81 = phi i32 [ 18, %concatenate.pivot.18.23 ]
  %82 = sub nsw i32 %7, %81
  %83 = getelementptr inbounds [8192 x [1 x float]], ptr %arg43, i32 0, i32 %6, i32 0
  %84 = load float, ptr %83, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id19:                   ; preds = %concatenate.pivot.19.24
  %85 = phi i32 [ 19, %concatenate.pivot.19.24 ]
  %86 = sub nsw i32 %7, %85
  %87 = getelementptr inbounds [8192 x [1 x float]], ptr %arg42, i32 0, i32 %6, i32 0
  %88 = load float, ptr %87, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id20:                   ; preds = %concatenate.pivot.20.25
  %89 = phi i32 [ 20, %concatenate.pivot.20.25 ]
  %90 = sub nsw i32 %7, %89
  %91 = getelementptr inbounds [8192 x [1 x float]], ptr %arg41, i32 0, i32 %6, i32 0
  %92 = load float, ptr %91, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id21:                   ; preds = %concatenate.pivot.21.26
  %93 = phi i32 [ 21, %concatenate.pivot.21.26 ]
  %94 = sub nsw i32 %7, %93
  %95 = getelementptr inbounds [8192 x float], ptr %arg40, i32 0, i32 %6
  %96 = load float, ptr %95, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id22:                   ; preds = %concatenate.pivot.22.27
  %97 = phi i32 [ 22, %concatenate.pivot.22.27 ]
  %98 = sub nsw i32 %7, %97
  %99 = getelementptr inbounds [8192 x float], ptr %arg39, i32 0, i32 %6
  %100 = load float, ptr %99, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id23:                   ; preds = %concatenate.pivot.23.28
  %101 = phi i32 [ 23, %concatenate.pivot.23.28 ]
  %102 = sub nsw i32 %7, %101
  %103 = getelementptr inbounds [8192 x float], ptr %arg38, i32 0, i32 %6
  %104 = load float, ptr %103, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id24:                   ; preds = %concatenate.pivot.24.29
  %105 = phi i32 [ 24, %concatenate.pivot.24.29 ]
  %106 = sub nsw i32 %7, %105
  %107 = getelementptr inbounds [8192 x float], ptr %arg37, i32 0, i32 %6
  %108 = load float, ptr %107, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id25:                   ; preds = %concatenate.pivot.25.30
  %109 = phi i32 [ 25, %concatenate.pivot.25.30 ]
  %110 = sub nsw i32 %7, %109
  %111 = getelementptr inbounds [8192 x float], ptr %arg36, i32 0, i32 %6
  %112 = load float, ptr %111, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id26:                   ; preds = %concatenate.pivot.26.31
  %113 = phi i32 [ 26, %concatenate.pivot.26.31 ]
  %114 = sub nsw i32 %7, %113
  %115 = getelementptr inbounds [8192 x float], ptr %arg35, i32 0, i32 %6
  %116 = load float, ptr %115, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id27:                   ; preds = %concatenate.pivot.27.32
  %117 = phi i32 [ 27, %concatenate.pivot.27.32 ]
  %118 = sub nsw i32 %7, %117
  %119 = getelementptr inbounds [8192 x float], ptr %arg34, i32 0, i32 %6
  %120 = load float, ptr %119, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id28:                   ; preds = %concatenate.pivot.28.33
  %121 = phi i32 [ 28, %concatenate.pivot.28.33 ]
  %122 = sub nsw i32 %7, %121
  %123 = getelementptr inbounds [8192 x float], ptr %arg33, i32 0, i32 %6
  %124 = load float, ptr %123, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id29:                   ; preds = %concatenate.pivot.29.34
  %125 = phi i32 [ 29, %concatenate.pivot.29.34 ]
  %126 = sub nsw i32 %7, %125
  %127 = getelementptr inbounds [8192 x float], ptr %arg32, i32 0, i32 %6
  %128 = load float, ptr %127, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id30:                   ; preds = %concatenate.pivot.30.35
  %129 = phi i32 [ 30, %concatenate.pivot.30.35 ]
  %130 = sub nsw i32 %7, %129
  %131 = getelementptr inbounds [8192 x float], ptr %arg31, i32 0, i32 %6
  %132 = load float, ptr %131, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id31:                   ; preds = %concatenate.pivot.31.36
  %133 = phi i32 [ 31, %concatenate.pivot.31.36 ]
  %134 = sub nsw i32 %7, %133
  %135 = getelementptr inbounds [8192 x float], ptr %arg30, i32 0, i32 %6
  %136 = load float, ptr %135, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id32:                   ; preds = %concatenate.pivot.32.37
  %137 = phi i32 [ 32, %concatenate.pivot.32.37 ]
  %138 = sub nsw i32 %7, %137
  %139 = getelementptr inbounds [8192 x float], ptr %arg29, i32 0, i32 %6
  %140 = load float, ptr %139, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id33:                   ; preds = %concatenate.pivot.33.38
  %141 = phi i32 [ 33, %concatenate.pivot.33.38 ]
  %142 = sub nsw i32 %7, %141
  %143 = getelementptr inbounds [8192 x float], ptr %arg28, i32 0, i32 %6
  %144 = load float, ptr %143, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id34:                   ; preds = %concatenate.pivot.34.39
  %145 = phi i32 [ 34, %concatenate.pivot.34.39 ]
  %146 = sub nsw i32 %7, %145
  %147 = getelementptr inbounds [8192 x [1 x float]], ptr %arg27, i32 0, i32 %6, i32 0
  %148 = load float, ptr %147, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id35:                   ; preds = %concatenate.pivot.35.40
  %149 = phi i32 [ 35, %concatenate.pivot.35.40 ]
  %150 = sub nsw i32 %7, %149
  %151 = getelementptr inbounds [8192 x float], ptr %arg26, i32 0, i32 %6
  %152 = load float, ptr %151, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id36:                   ; preds = %concatenate.pivot.36.41
  %153 = phi i32 [ 36, %concatenate.pivot.36.41 ]
  %154 = sub nsw i32 %7, %153
  %155 = getelementptr inbounds [8192 x float], ptr %arg25, i32 0, i32 %6
  %156 = load float, ptr %155, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id37:                   ; preds = %concatenate.pivot.37.42
  %157 = phi i32 [ 37, %concatenate.pivot.37.42 ]
  %158 = sub nsw i32 %7, %157
  %159 = getelementptr inbounds [8192 x float], ptr %arg24, i32 0, i32 %6
  %160 = load float, ptr %159, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id38:                   ; preds = %concatenate.pivot.38.43
  %161 = phi i32 [ 38, %concatenate.pivot.38.43 ]
  %162 = sub nsw i32 %7, %161
  %163 = getelementptr inbounds [8192 x float], ptr %arg23, i32 0, i32 %6
  %164 = load float, ptr %163, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id39:                   ; preds = %concatenate.pivot.39.44
  %165 = phi i32 [ 39, %concatenate.pivot.39.44 ]
  %166 = sub nsw i32 %7, %165
  %167 = getelementptr inbounds [8192 x float], ptr %arg22, i32 0, i32 %6
  %168 = load float, ptr %167, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id40:                   ; preds = %concatenate.pivot.40.45
  %169 = phi i32 [ 40, %concatenate.pivot.40.45 ]
  %170 = sub nsw i32 %7, %169
  %171 = getelementptr inbounds [8192 x float], ptr %arg21, i32 0, i32 %6
  %172 = load float, ptr %171, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id41:                   ; preds = %concatenate.pivot.41.46
  %173 = phi i32 [ 41, %concatenate.pivot.41.46 ]
  %174 = sub nsw i32 %7, %173
  %175 = getelementptr inbounds [8192 x float], ptr %arg20, i32 0, i32 %6
  %176 = load float, ptr %175, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id42:                   ; preds = %concatenate.pivot.42.47
  %177 = phi i32 [ 42, %concatenate.pivot.42.47 ]
  %178 = sub nsw i32 %7, %177
  %179 = getelementptr inbounds [8192 x float], ptr %arg19, i32 0, i32 %6
  %180 = load float, ptr %179, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id43:                   ; preds = %concatenate.pivot.43.48
  %181 = phi i32 [ 43, %concatenate.pivot.43.48 ]
  %182 = sub nsw i32 %7, %181
  %183 = getelementptr inbounds [8192 x float], ptr %arg18, i32 0, i32 %6
  %184 = load float, ptr %183, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id44:                   ; preds = %concatenate.pivot.44.49
  %185 = phi i32 [ 44, %concatenate.pivot.44.49 ]
  %186 = sub nsw i32 %7, %185
  %187 = getelementptr inbounds [8192 x float], ptr %arg17, i32 0, i32 %6
  %188 = load float, ptr %187, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id45:                   ; preds = %concatenate.pivot.45.50
  %189 = phi i32 [ 45, %concatenate.pivot.45.50 ]
  %190 = sub nsw i32 %7, %189
  %191 = getelementptr inbounds [8192 x float], ptr %arg16, i32 0, i32 %6
  %192 = load float, ptr %191, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id46:                   ; preds = %concatenate.pivot.47.52, %concatenate.pivot.46.51
  %193 = phi i32 [ 46, %concatenate.pivot.46.51 ], [ 47, %concatenate.pivot.47.52 ]
  %194 = sub nsw i32 %7, %193
  %195 = getelementptr inbounds [8192 x float], ptr %arg15, i32 0, i32 %6
  %196 = load float, ptr %195, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id47:                   ; preds = %concatenate.pivot.49.54, %concatenate.pivot.48.53
  %197 = phi i32 [ 48, %concatenate.pivot.48.53 ], [ 49, %concatenate.pivot.49.54 ]
  %198 = sub nsw i32 %7, %197
  %199 = getelementptr inbounds [8192 x float], ptr %arg14, i32 0, i32 %6
  %200 = load float, ptr %199, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id48:                   ; preds = %concatenate.pivot.51.56, %concatenate.pivot.50.55
  %201 = phi i32 [ 50, %concatenate.pivot.50.55 ], [ 51, %concatenate.pivot.51.56 ]
  %202 = sub nsw i32 %7, %201
  %203 = getelementptr inbounds [8192 x float], ptr %arg13, i32 0, i32 %6
  %204 = load float, ptr %203, align 4, !invariant.load !297
  br label %concatenate.163.merge

concat_index_from_operand_id49:                   ; preds = %concatenate.pivot.53.58, %concatenate.pivot.52.57
  %205 = phi i32 [ 52, %concatenate.pivot.52.57 ], [ 53, %concatenate.pivot.53.58 ]
  %206 = sub nsw i32 %7, %205
  %region_0_169_constant_114 = load float, ptr @54, align 4
  %207 = getelementptr inbounds [8192 x float], ptr %arg11, i32 0, i32 %6
  %208 = load float, ptr %207, align 4, !invariant.load !297
  %209 = getelementptr inbounds [1 x float], ptr %arg12, i32 0, i32 0
  %210 = load float, ptr %209, align 4, !invariant.load !297
  %add.118 = fadd float %208, %210
  %211 = fneg float %add.118
  %212 = call float @__nv_expf(float %211)
  %add.121 = fadd float %region_0_169_constant_114, %212
  %divide.122 = fdiv float %region_0_169_constant_114, %add.121
  br label %concatenate.163.merge

concat_index_from_operand_id50:                   ; preds = %concatenate.pivot.55.60, %concatenate.pivot.54.59
  %213 = phi i32 [ 54, %concatenate.pivot.54.59 ], [ 55, %concatenate.pivot.55.60 ]
  %214 = sub nsw i32 %7, %213
  %region_0_169_constant_1141 = load float, ptr @54, align 4
  %215 = add i32 %6, 0
  %216 = add i32 %4, 17
  %217 = getelementptr inbounds [8192 x [20 x float]], ptr %arg3, i32 0, i32 %215, i32 %216
  %218 = load float, ptr %217, align 4, !invariant.load !297
  %219 = getelementptr inbounds [20 x float], ptr %arg4, i32 0, i32 %216
  %220 = load float, ptr %219, align 4, !invariant.load !297
  %add.126 = fadd float %218, %220
  %221 = getelementptr inbounds [8192 x float], ptr %arg9, i32 0, i32 %6
  %222 = load float, ptr %221, align 4, !invariant.load !297
  %223 = getelementptr inbounds [8192 x float], ptr %arg10, i32 0, i32 %6
  %224 = load float, ptr %223, align 4, !invariant.load !297
  %add.128 = fadd float %222, %224
  %225 = getelementptr inbounds [1 x float], ptr %arg8, i32 0, i32 0
  %226 = load float, ptr %225, align 4, !invariant.load !297
  %add.131 = fadd float %add.128, %226
  %add.133 = fadd float %add.126, %add.131
  %227 = fneg float %add.133
  %228 = call float @__nv_expf(float %227)
  %add.136 = fadd float %region_0_169_constant_1141, %228
  %divide.137 = fdiv float %region_0_169_constant_1141, %add.136
  br label %concatenate.163.merge

concat_index_from_operand_id51:                   ; preds = %concatenate.pivot.57.62, %concatenate.pivot.56.61
  %229 = phi i32 [ 56, %concatenate.pivot.56.61 ], [ 57, %concatenate.pivot.57.62 ]
  %230 = sub nsw i32 %7, %229
  %region_0_169_constant_1142 = load float, ptr @54, align 4
  %231 = getelementptr inbounds [8192 x float], ptr %arg6, i32 0, i32 %6
  %232 = load float, ptr %231, align 4, !invariant.load !297
  %233 = getelementptr inbounds [8192 x float], ptr %arg7, i32 0, i32 %6
  %234 = load float, ptr %233, align 4, !invariant.load !297
  %add.139 = fadd float %232, %234
  %235 = getelementptr inbounds [1 x float], ptr %arg5, i32 0, i32 0
  %236 = load float, ptr %235, align 4, !invariant.load !297
  %add.142 = fadd float %add.139, %236
  %237 = add i32 %6, 0
  %238 = add i32 %4, 19
  %239 = getelementptr inbounds [8192 x [20 x float]], ptr %arg3, i32 0, i32 %237, i32 %238
  %240 = load float, ptr %239, align 4, !invariant.load !297
  %241 = getelementptr inbounds [20 x float], ptr %arg4, i32 0, i32 %238
  %242 = load float, ptr %241, align 4, !invariant.load !297
  %add.1263 = fadd float %240, %242
  %add.145 = fadd float %add.142, %add.1263
  %243 = fneg float %add.145
  %244 = call float @__nv_expf(float %243)
  %add.148 = fadd float %region_0_169_constant_1142, %244
  %divide.149 = fdiv float %region_0_169_constant_1142, %add.148
  br label %concatenate.163.merge

concat_index_from_operand_id52:                   ; preds = %concatenate.pivot.59.64, %concatenate.pivot.58.63
  %245 = phi i32 [ 58, %concatenate.pivot.58.63 ], [ 59, %concatenate.pivot.59.64 ]
  %246 = sub nsw i32 %7, %245
  %region_0_169_constant_1144 = load float, ptr @54, align 4
  %247 = add i32 %6, 0
  %248 = add i32 %4, 18
  %249 = getelementptr inbounds [8192 x [20 x float]], ptr %arg3, i32 0, i32 %247, i32 %248
  %250 = load float, ptr %249, align 4, !invariant.load !297
  %251 = getelementptr inbounds [20 x float], ptr %arg4, i32 0, i32 %248
  %252 = load float, ptr %251, align 4, !invariant.load !297
  %add.1265 = fadd float %250, %252
  %253 = getelementptr inbounds [8192 x float], ptr %arg1, i32 0, i32 %6
  %254 = load float, ptr %253, align 4, !invariant.load !297
  %255 = getelementptr inbounds [8192 x float], ptr %arg2, i32 0, i32 %6
  %256 = load float, ptr %255, align 4, !invariant.load !297
  %add.152 = fadd float %254, %256
  %257 = getelementptr inbounds [1 x float], ptr %arg0, i32 0, i32 0
  %258 = load float, ptr %257, align 4, !invariant.load !297
  %add.155 = fadd float %add.152, %258
  %add.157 = fadd float %add.1265, %add.155
  %259 = fneg float %add.157
  %260 = call float @__nv_expf(float %259)
  %add.160 = fadd float %region_0_169_constant_1144, %260
  %divide.161 = fdiv float %region_0_169_constant_1144, %add.160
  br label %concatenate.163.merge

concatenate.pivot.30.:                            ; preds = %fusion_378.in_bounds-true
  %261 = icmp ult i32 %7, 30
  br i1 %261, label %concatenate.pivot.15., label %concatenate.pivot.45.

concatenate.pivot.15.:                            ; preds = %concatenate.pivot.30.
  %262 = icmp ult i32 %7, 15
  br i1 %262, label %concatenate.pivot.7., label %concatenate.pivot.22.

concatenate.pivot.7.:                             ; preds = %concatenate.pivot.15.
  %263 = icmp ult i32 %7, 7
  br i1 %263, label %concatenate.pivot.3., label %concatenate.pivot.11.

concatenate.pivot.3.:                             ; preds = %concatenate.pivot.7.
  %264 = icmp ult i32 %7, 3
  br i1 %264, label %concatenate.pivot.1., label %concatenate.pivot.5.

concatenate.pivot.1.:                             ; preds = %concatenate.pivot.3.
  %265 = icmp ult i32 %7, 1
  br i1 %265, label %concatenate.pivot.0., label %concatenate.pivot.2.

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.1.
  br label %concat_index_from_operand_id0

concatenate.pivot.2.:                             ; preds = %concatenate.pivot.1.
  %266 = icmp ult i32 %7, 2
  br i1 %266, label %concatenate.pivot.1.6, label %concatenate.pivot.2.7

concatenate.pivot.1.6:                            ; preds = %concatenate.pivot.2.
  br label %concat_index_from_operand_id1

concatenate.pivot.2.7:                            ; preds = %concatenate.pivot.2.
  br label %concat_index_from_operand_id2

concatenate.pivot.5.:                             ; preds = %concatenate.pivot.3.
  %267 = icmp ult i32 %7, 5
  br i1 %267, label %concatenate.pivot.4., label %concatenate.pivot.6.

concatenate.pivot.4.:                             ; preds = %concatenate.pivot.5.
  %268 = icmp ult i32 %7, 4
  br i1 %268, label %concatenate.pivot.3.8, label %concatenate.pivot.4.9

concatenate.pivot.3.8:                            ; preds = %concatenate.pivot.4.
  br label %concat_index_from_operand_id3

concatenate.pivot.4.9:                            ; preds = %concatenate.pivot.4.
  br label %concat_index_from_operand_id4

concatenate.pivot.6.:                             ; preds = %concatenate.pivot.5.
  %269 = icmp ult i32 %7, 6
  br i1 %269, label %concatenate.pivot.5.10, label %concatenate.pivot.6.11

concatenate.pivot.5.10:                           ; preds = %concatenate.pivot.6.
  br label %concat_index_from_operand_id5

concatenate.pivot.6.11:                           ; preds = %concatenate.pivot.6.
  br label %concat_index_from_operand_id6

concatenate.pivot.11.:                            ; preds = %concatenate.pivot.7.
  %270 = icmp ult i32 %7, 11
  br i1 %270, label %concatenate.pivot.9., label %concatenate.pivot.13.

concatenate.pivot.9.:                             ; preds = %concatenate.pivot.11.
  %271 = icmp ult i32 %7, 9
  br i1 %271, label %concatenate.pivot.8., label %concatenate.pivot.10.

concatenate.pivot.8.:                             ; preds = %concatenate.pivot.9.
  %272 = icmp ult i32 %7, 8
  br i1 %272, label %concatenate.pivot.7.12, label %concatenate.pivot.8.13

concatenate.pivot.7.12:                           ; preds = %concatenate.pivot.8.
  br label %concat_index_from_operand_id7

concatenate.pivot.8.13:                           ; preds = %concatenate.pivot.8.
  br label %concat_index_from_operand_id8

concatenate.pivot.10.:                            ; preds = %concatenate.pivot.9.
  %273 = icmp ult i32 %7, 10
  br i1 %273, label %concatenate.pivot.9.14, label %concatenate.pivot.10.15

concatenate.pivot.9.14:                           ; preds = %concatenate.pivot.10.
  br label %concat_index_from_operand_id9

concatenate.pivot.10.15:                          ; preds = %concatenate.pivot.10.
  br label %concat_index_from_operand_id10

concatenate.pivot.13.:                            ; preds = %concatenate.pivot.11.
  %274 = icmp ult i32 %7, 13
  br i1 %274, label %concatenate.pivot.12., label %concatenate.pivot.14.

concatenate.pivot.12.:                            ; preds = %concatenate.pivot.13.
  %275 = icmp ult i32 %7, 12
  br i1 %275, label %concatenate.pivot.11.16, label %concatenate.pivot.12.17

concatenate.pivot.11.16:                          ; preds = %concatenate.pivot.12.
  br label %concat_index_from_operand_id11

concatenate.pivot.12.17:                          ; preds = %concatenate.pivot.12.
  br label %concat_index_from_operand_id12

concatenate.pivot.14.:                            ; preds = %concatenate.pivot.13.
  %276 = icmp ult i32 %7, 14
  br i1 %276, label %concatenate.pivot.13.18, label %concatenate.pivot.14.19

concatenate.pivot.13.18:                          ; preds = %concatenate.pivot.14.
  br label %concat_index_from_operand_id13

concatenate.pivot.14.19:                          ; preds = %concatenate.pivot.14.
  br label %concat_index_from_operand_id14

concatenate.pivot.22.:                            ; preds = %concatenate.pivot.15.
  %277 = icmp ult i32 %7, 22
  br i1 %277, label %concatenate.pivot.18., label %concatenate.pivot.26.

concatenate.pivot.18.:                            ; preds = %concatenate.pivot.22.
  %278 = icmp ult i32 %7, 18
  br i1 %278, label %concatenate.pivot.16., label %concatenate.pivot.20.

concatenate.pivot.16.:                            ; preds = %concatenate.pivot.18.
  %279 = icmp ult i32 %7, 16
  br i1 %279, label %concatenate.pivot.15.20, label %concatenate.pivot.17.

concatenate.pivot.15.20:                          ; preds = %concatenate.pivot.16.
  br label %concat_index_from_operand_id15

concatenate.pivot.17.:                            ; preds = %concatenate.pivot.16.
  %280 = icmp ult i32 %7, 17
  br i1 %280, label %concatenate.pivot.16.21, label %concatenate.pivot.17.22

concatenate.pivot.16.21:                          ; preds = %concatenate.pivot.17.
  br label %concat_index_from_operand_id16

concatenate.pivot.17.22:                          ; preds = %concatenate.pivot.17.
  br label %concat_index_from_operand_id17

concatenate.pivot.20.:                            ; preds = %concatenate.pivot.18.
  %281 = icmp ult i32 %7, 20
  br i1 %281, label %concatenate.pivot.19., label %concatenate.pivot.21.

concatenate.pivot.19.:                            ; preds = %concatenate.pivot.20.
  %282 = icmp ult i32 %7, 19
  br i1 %282, label %concatenate.pivot.18.23, label %concatenate.pivot.19.24

concatenate.pivot.18.23:                          ; preds = %concatenate.pivot.19.
  br label %concat_index_from_operand_id18

concatenate.pivot.19.24:                          ; preds = %concatenate.pivot.19.
  br label %concat_index_from_operand_id19

concatenate.pivot.21.:                            ; preds = %concatenate.pivot.20.
  %283 = icmp ult i32 %7, 21
  br i1 %283, label %concatenate.pivot.20.25, label %concatenate.pivot.21.26

concatenate.pivot.20.25:                          ; preds = %concatenate.pivot.21.
  br label %concat_index_from_operand_id20

concatenate.pivot.21.26:                          ; preds = %concatenate.pivot.21.
  br label %concat_index_from_operand_id21

concatenate.pivot.26.:                            ; preds = %concatenate.pivot.22.
  %284 = icmp ult i32 %7, 26
  br i1 %284, label %concatenate.pivot.24., label %concatenate.pivot.28.

concatenate.pivot.24.:                            ; preds = %concatenate.pivot.26.
  %285 = icmp ult i32 %7, 24
  br i1 %285, label %concatenate.pivot.23., label %concatenate.pivot.25.

concatenate.pivot.23.:                            ; preds = %concatenate.pivot.24.
  %286 = icmp ult i32 %7, 23
  br i1 %286, label %concatenate.pivot.22.27, label %concatenate.pivot.23.28

concatenate.pivot.22.27:                          ; preds = %concatenate.pivot.23.
  br label %concat_index_from_operand_id22

concatenate.pivot.23.28:                          ; preds = %concatenate.pivot.23.
  br label %concat_index_from_operand_id23

concatenate.pivot.25.:                            ; preds = %concatenate.pivot.24.
  %287 = icmp ult i32 %7, 25
  br i1 %287, label %concatenate.pivot.24.29, label %concatenate.pivot.25.30

concatenate.pivot.24.29:                          ; preds = %concatenate.pivot.25.
  br label %concat_index_from_operand_id24

concatenate.pivot.25.30:                          ; preds = %concatenate.pivot.25.
  br label %concat_index_from_operand_id25

concatenate.pivot.28.:                            ; preds = %concatenate.pivot.26.
  %288 = icmp ult i32 %7, 28
  br i1 %288, label %concatenate.pivot.27., label %concatenate.pivot.29.

concatenate.pivot.27.:                            ; preds = %concatenate.pivot.28.
  %289 = icmp ult i32 %7, 27
  br i1 %289, label %concatenate.pivot.26.31, label %concatenate.pivot.27.32

concatenate.pivot.26.31:                          ; preds = %concatenate.pivot.27.
  br label %concat_index_from_operand_id26

concatenate.pivot.27.32:                          ; preds = %concatenate.pivot.27.
  br label %concat_index_from_operand_id27

concatenate.pivot.29.:                            ; preds = %concatenate.pivot.28.
  %290 = icmp ult i32 %7, 29
  br i1 %290, label %concatenate.pivot.28.33, label %concatenate.pivot.29.34

concatenate.pivot.28.33:                          ; preds = %concatenate.pivot.29.
  br label %concat_index_from_operand_id28

concatenate.pivot.29.34:                          ; preds = %concatenate.pivot.29.
  br label %concat_index_from_operand_id29

concatenate.pivot.45.:                            ; preds = %concatenate.pivot.30.
  %291 = icmp ult i32 %7, 45
  br i1 %291, label %concatenate.pivot.37., label %concatenate.pivot.52.

concatenate.pivot.37.:                            ; preds = %concatenate.pivot.45.
  %292 = icmp ult i32 %7, 37
  br i1 %292, label %concatenate.pivot.33., label %concatenate.pivot.41.

concatenate.pivot.33.:                            ; preds = %concatenate.pivot.37.
  %293 = icmp ult i32 %7, 33
  br i1 %293, label %concatenate.pivot.31., label %concatenate.pivot.35.

concatenate.pivot.31.:                            ; preds = %concatenate.pivot.33.
  %294 = icmp ult i32 %7, 31
  br i1 %294, label %concatenate.pivot.30.35, label %concatenate.pivot.32.

concatenate.pivot.30.35:                          ; preds = %concatenate.pivot.31.
  br label %concat_index_from_operand_id30

concatenate.pivot.32.:                            ; preds = %concatenate.pivot.31.
  %295 = icmp ult i32 %7, 32
  br i1 %295, label %concatenate.pivot.31.36, label %concatenate.pivot.32.37

concatenate.pivot.31.36:                          ; preds = %concatenate.pivot.32.
  br label %concat_index_from_operand_id31

concatenate.pivot.32.37:                          ; preds = %concatenate.pivot.32.
  br label %concat_index_from_operand_id32

concatenate.pivot.35.:                            ; preds = %concatenate.pivot.33.
  %296 = icmp ult i32 %7, 35
  br i1 %296, label %concatenate.pivot.34., label %concatenate.pivot.36.

concatenate.pivot.34.:                            ; preds = %concatenate.pivot.35.
  %297 = icmp ult i32 %7, 34
  br i1 %297, label %concatenate.pivot.33.38, label %concatenate.pivot.34.39

concatenate.pivot.33.38:                          ; preds = %concatenate.pivot.34.
  br label %concat_index_from_operand_id33

concatenate.pivot.34.39:                          ; preds = %concatenate.pivot.34.
  br label %concat_index_from_operand_id34

concatenate.pivot.36.:                            ; preds = %concatenate.pivot.35.
  %298 = icmp ult i32 %7, 36
  br i1 %298, label %concatenate.pivot.35.40, label %concatenate.pivot.36.41

concatenate.pivot.35.40:                          ; preds = %concatenate.pivot.36.
  br label %concat_index_from_operand_id35

concatenate.pivot.36.41:                          ; preds = %concatenate.pivot.36.
  br label %concat_index_from_operand_id36

concatenate.pivot.41.:                            ; preds = %concatenate.pivot.37.
  %299 = icmp ult i32 %7, 41
  br i1 %299, label %concatenate.pivot.39., label %concatenate.pivot.43.

concatenate.pivot.39.:                            ; preds = %concatenate.pivot.41.
  %300 = icmp ult i32 %7, 39
  br i1 %300, label %concatenate.pivot.38., label %concatenate.pivot.40.

concatenate.pivot.38.:                            ; preds = %concatenate.pivot.39.
  %301 = icmp ult i32 %7, 38
  br i1 %301, label %concatenate.pivot.37.42, label %concatenate.pivot.38.43

concatenate.pivot.37.42:                          ; preds = %concatenate.pivot.38.
  br label %concat_index_from_operand_id37

concatenate.pivot.38.43:                          ; preds = %concatenate.pivot.38.
  br label %concat_index_from_operand_id38

concatenate.pivot.40.:                            ; preds = %concatenate.pivot.39.
  %302 = icmp ult i32 %7, 40
  br i1 %302, label %concatenate.pivot.39.44, label %concatenate.pivot.40.45

concatenate.pivot.39.44:                          ; preds = %concatenate.pivot.40.
  br label %concat_index_from_operand_id39

concatenate.pivot.40.45:                          ; preds = %concatenate.pivot.40.
  br label %concat_index_from_operand_id40

concatenate.pivot.43.:                            ; preds = %concatenate.pivot.41.
  %303 = icmp ult i32 %7, 43
  br i1 %303, label %concatenate.pivot.42., label %concatenate.pivot.44.

concatenate.pivot.42.:                            ; preds = %concatenate.pivot.43.
  %304 = icmp ult i32 %7, 42
  br i1 %304, label %concatenate.pivot.41.46, label %concatenate.pivot.42.47

concatenate.pivot.41.46:                          ; preds = %concatenate.pivot.42.
  br label %concat_index_from_operand_id41

concatenate.pivot.42.47:                          ; preds = %concatenate.pivot.42.
  br label %concat_index_from_operand_id42

concatenate.pivot.44.:                            ; preds = %concatenate.pivot.43.
  %305 = icmp ult i32 %7, 44
  br i1 %305, label %concatenate.pivot.43.48, label %concatenate.pivot.44.49

concatenate.pivot.43.48:                          ; preds = %concatenate.pivot.44.
  br label %concat_index_from_operand_id43

concatenate.pivot.44.49:                          ; preds = %concatenate.pivot.44.
  br label %concat_index_from_operand_id44

concatenate.pivot.52.:                            ; preds = %concatenate.pivot.45.
  %306 = icmp ult i32 %7, 52
  br i1 %306, label %concatenate.pivot.48., label %concatenate.pivot.56.

concatenate.pivot.48.:                            ; preds = %concatenate.pivot.52.
  %307 = icmp ult i32 %7, 48
  br i1 %307, label %concatenate.pivot.46., label %concatenate.pivot.50.

concatenate.pivot.46.:                            ; preds = %concatenate.pivot.48.
  %308 = icmp ult i32 %7, 46
  br i1 %308, label %concatenate.pivot.45.50, label %concatenate.pivot.47.

concatenate.pivot.45.50:                          ; preds = %concatenate.pivot.46.
  br label %concat_index_from_operand_id45

concatenate.pivot.47.:                            ; preds = %concatenate.pivot.46.
  %309 = icmp ult i32 %7, 47
  br i1 %309, label %concatenate.pivot.46.51, label %concatenate.pivot.47.52

concatenate.pivot.46.51:                          ; preds = %concatenate.pivot.47.
  br label %concat_index_from_operand_id46

concatenate.pivot.47.52:                          ; preds = %concatenate.pivot.47.
  br label %concat_index_from_operand_id46

concatenate.pivot.50.:                            ; preds = %concatenate.pivot.48.
  %310 = icmp ult i32 %7, 50
  br i1 %310, label %concatenate.pivot.49., label %concatenate.pivot.51.

concatenate.pivot.49.:                            ; preds = %concatenate.pivot.50.
  %311 = icmp ult i32 %7, 49
  br i1 %311, label %concatenate.pivot.48.53, label %concatenate.pivot.49.54

concatenate.pivot.48.53:                          ; preds = %concatenate.pivot.49.
  br label %concat_index_from_operand_id47

concatenate.pivot.49.54:                          ; preds = %concatenate.pivot.49.
  br label %concat_index_from_operand_id47

concatenate.pivot.51.:                            ; preds = %concatenate.pivot.50.
  %312 = icmp ult i32 %7, 51
  br i1 %312, label %concatenate.pivot.50.55, label %concatenate.pivot.51.56

concatenate.pivot.50.55:                          ; preds = %concatenate.pivot.51.
  br label %concat_index_from_operand_id48

concatenate.pivot.51.56:                          ; preds = %concatenate.pivot.51.
  br label %concat_index_from_operand_id48

concatenate.pivot.56.:                            ; preds = %concatenate.pivot.52.
  %313 = icmp ult i32 %7, 56
  br i1 %313, label %concatenate.pivot.54., label %concatenate.pivot.58.

concatenate.pivot.54.:                            ; preds = %concatenate.pivot.56.
  %314 = icmp ult i32 %7, 54
  br i1 %314, label %concatenate.pivot.53., label %concatenate.pivot.55.

concatenate.pivot.53.:                            ; preds = %concatenate.pivot.54.
  %315 = icmp ult i32 %7, 53
  br i1 %315, label %concatenate.pivot.52.57, label %concatenate.pivot.53.58

concatenate.pivot.52.57:                          ; preds = %concatenate.pivot.53.
  br label %concat_index_from_operand_id49

concatenate.pivot.53.58:                          ; preds = %concatenate.pivot.53.
  br label %concat_index_from_operand_id49

concatenate.pivot.55.:                            ; preds = %concatenate.pivot.54.
  %316 = icmp ult i32 %7, 55
  br i1 %316, label %concatenate.pivot.54.59, label %concatenate.pivot.55.60

concatenate.pivot.54.59:                          ; preds = %concatenate.pivot.55.
  br label %concat_index_from_operand_id50

concatenate.pivot.55.60:                          ; preds = %concatenate.pivot.55.
  br label %concat_index_from_operand_id50

concatenate.pivot.58.:                            ; preds = %concatenate.pivot.56.
  %317 = icmp ult i32 %7, 58
  br i1 %317, label %concatenate.pivot.57., label %concatenate.pivot.59.

concatenate.pivot.57.:                            ; preds = %concatenate.pivot.58.
  %318 = icmp ult i32 %7, 57
  br i1 %318, label %concatenate.pivot.56.61, label %concatenate.pivot.57.62

concatenate.pivot.56.61:                          ; preds = %concatenate.pivot.57.
  br label %concat_index_from_operand_id51

concatenate.pivot.57.62:                          ; preds = %concatenate.pivot.57.
  br label %concat_index_from_operand_id51

concatenate.pivot.59.:                            ; preds = %concatenate.pivot.58.
  %319 = icmp ult i32 %7, 59
  br i1 %319, label %concatenate.pivot.58.63, label %concatenate.pivot.59.64

concatenate.pivot.58.63:                          ; preds = %concatenate.pivot.59.
  br label %concat_index_from_operand_id52

concatenate.pivot.59.64:                          ; preds = %concatenate.pivot.59.
  br label %concat_index_from_operand_id52

concatenate.163.merge:                            ; preds = %concat_index_from_operand_id52, %concat_index_from_operand_id51, %concat_index_from_operand_id50, %concat_index_from_operand_id49, %concat_index_from_operand_id48, %concat_index_from_operand_id47, %concat_index_from_operand_id46, %concat_index_from_operand_id45, %concat_index_from_operand_id44, %concat_index_from_operand_id43, %concat_index_from_operand_id42, %concat_index_from_operand_id41, %concat_index_from_operand_id40, %concat_index_from_operand_id39, %concat_index_from_operand_id38, %concat_index_from_operand_id37, %concat_index_from_operand_id36, %concat_index_from_operand_id35, %concat_index_from_operand_id34, %concat_index_from_operand_id33, %concat_index_from_operand_id32, %concat_index_from_operand_id31, %concat_index_from_operand_id30, %concat_index_from_operand_id29, %concat_index_from_operand_id28, %concat_index_from_operand_id27, %concat_index_from_operand_id26, %concat_index_from_operand_id25, %concat_index_from_operand_id24, %concat_index_from_operand_id23, %concat_index_from_operand_id22, %concat_index_from_operand_id21, %concat_index_from_operand_id20, %concat_index_from_operand_id19, %concat_index_from_operand_id18, %concat_index_from_operand_id17, %concat_index_from_operand_id16, %concat_index_from_operand_id15, %concat_index_from_operand_id14, %concat_index_from_operand_id13, %concat_index_from_operand_id12, %concat_index_from_operand_id11, %concat_index_from_operand_id10, %concat_index_from_operand_id9, %concat_index_from_operand_id8, %concat_index_from_operand_id7, %concat_index_from_operand_id6, %concat_index_from_operand_id5, %concat_index_from_operand_id4, %concat_index_from_operand_id3, %concat_index_from_operand_id2, %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %320 = phi float [ %12, %concat_index_from_operand_id0 ], [ %16, %concat_index_from_operand_id1 ], [ %20, %concat_index_from_operand_id2 ], [ %24, %concat_index_from_operand_id3 ], [ %28, %concat_index_from_operand_id4 ], [ %32, %concat_index_from_operand_id5 ], [ %36, %concat_index_from_operand_id6 ], [ %40, %concat_index_from_operand_id7 ], [ %44, %concat_index_from_operand_id8 ], [ %48, %concat_index_from_operand_id9 ], [ %52, %concat_index_from_operand_id10 ], [ %56, %concat_index_from_operand_id11 ], [ %60, %concat_index_from_operand_id12 ], [ %64, %concat_index_from_operand_id13 ], [ %68, %concat_index_from_operand_id14 ], [ %72, %concat_index_from_operand_id15 ], [ %76, %concat_index_from_operand_id16 ], [ %80, %concat_index_from_operand_id17 ], [ %84, %concat_index_from_operand_id18 ], [ %88, %concat_index_from_operand_id19 ], [ %92, %concat_index_from_operand_id20 ], [ %96, %concat_index_from_operand_id21 ], [ %100, %concat_index_from_operand_id22 ], [ %104, %concat_index_from_operand_id23 ], [ %108, %concat_index_from_operand_id24 ], [ %112, %concat_index_from_operand_id25 ], [ %116, %concat_index_from_operand_id26 ], [ %120, %concat_index_from_operand_id27 ], [ %124, %concat_index_from_operand_id28 ], [ %128, %concat_index_from_operand_id29 ], [ %132, %concat_index_from_operand_id30 ], [ %136, %concat_index_from_operand_id31 ], [ %140, %concat_index_from_operand_id32 ], [ %144, %concat_index_from_operand_id33 ], [ %148, %concat_index_from_operand_id34 ], [ %152, %concat_index_from_operand_id35 ], [ %156, %concat_index_from_operand_id36 ], [ %160, %concat_index_from_operand_id37 ], [ %164, %concat_index_from_operand_id38 ], [ %168, %concat_index_from_operand_id39 ], [ %172, %concat_index_from_operand_id40 ], [ %176, %concat_index_from_operand_id41 ], [ %180, %concat_index_from_operand_id42 ], [ %184, %concat_index_from_operand_id43 ], [ %188, %concat_index_from_operand_id44 ], [ %192, %concat_index_from_operand_id45 ], [ %196, %concat_index_from_operand_id46 ], [ %200, %concat_index_from_operand_id47 ], [ %204, %concat_index_from_operand_id48 ], [ %divide.122, %concat_index_from_operand_id49 ], [ %divide.137, %concat_index_from_operand_id50 ], [ %divide.149, %concat_index_from_operand_id51 ], [ %divide.161, %concat_index_from_operand_id52 ]
  %subtract.164 = fsub float %region_0_169_constant_63, %320
  %321 = insertvalue { float, float } undef, float %subtract.164, 0
  %region_0_169_constant_165 = load float, ptr @53, align 4
  %add.167 = fadd float %320, %region_0_169_constant_165
  %322 = insertvalue { float, float } %321, float %add.167, 1
  %323 = extractvalue { float, float } %322, 0
  %324 = getelementptr inbounds float, ptr %arg62, i32 %linear_index
  store float %323, ptr %324, align 4
  %325 = extractvalue { float, float } %322, 1
  %326 = getelementptr inbounds float, ptr %arg63, i32 %linear_index
  store float %325, ptr %326, align 4
  br label %fusion_378.in_bounds-after
}

define void @fusion_331(ptr noalias align 128 dereferenceable(1966080) %arg0, ptr noalias align 128 dereferenceable(1966080) %arg1, ptr noalias align 128 dereferenceable(1966080) %arg2, ptr noalias align 16 dereferenceable(32768) %arg3, ptr noalias align 16 dereferenceable(32768) %arg4, ptr noalias align 128 dereferenceable(32768) %arg5, ptr noalias align 16 dereferenceable(32768) %arg6, ptr noalias align 16 dereferenceable(32768) %arg7, ptr noalias align 16 dereferenceable(32768) %arg8, ptr noalias align 16 dereferenceable(32768) %arg9, ptr noalias align 16 dereferenceable(32768) %arg10, ptr noalias align 16 dereferenceable(32768) %arg11, ptr noalias align 16 dereferenceable(32768) %arg12, ptr noalias align 16 dereferenceable(32768) %arg13, ptr noalias align 16 dereferenceable(32768) %arg14, ptr noalias align 16 dereferenceable(32768) %arg15, ptr noalias align 16 dereferenceable(32768) %arg16, ptr noalias align 16 dereferenceable(32768) %arg17, ptr noalias align 16 dereferenceable(32768) %arg18, ptr noalias align 16 dereferenceable(32768) %arg19, ptr noalias align 16 dereferenceable(32768) %arg20, ptr noalias align 16 dereferenceable(32768) %arg21, ptr noalias align 16 dereferenceable(32768) %arg22, ptr noalias align 16 dereferenceable(32768) %arg23, ptr noalias align 16 dereferenceable(32768) %arg24, ptr noalias align 16 dereferenceable(32768) %arg25, ptr noalias align 16 dereferenceable(32768) %arg26, ptr noalias align 16 dereferenceable(32768) %arg27, ptr noalias align 16 dereferenceable(32768) %arg28, ptr noalias align 16 dereferenceable(32768) %arg29, ptr noalias align 16 dereferenceable(32768) %arg30, ptr noalias align 16 dereferenceable(32768) %arg31, ptr noalias align 16 dereferenceable(32768) %arg32, ptr noalias align 16 dereferenceable(32768) %arg33, ptr noalias align 16 dereferenceable(32768) %arg34, ptr noalias align 16 dereferenceable(32768) %arg35, ptr noalias align 16 dereferenceable(32768) %arg36, ptr noalias align 16 dereferenceable(32768) %arg37, ptr noalias align 16 dereferenceable(32768) %arg38, ptr noalias align 16 dereferenceable(32768) %arg39, ptr noalias align 16 dereferenceable(32768) %arg40, ptr noalias align 16 dereferenceable(32768) %arg41, ptr noalias align 16 dereferenceable(32768) %arg42, ptr noalias align 16 dereferenceable(32768) %arg43, ptr noalias align 16 dereferenceable(32768) %arg44, ptr noalias align 16 dereferenceable(32768) %arg45, ptr noalias align 16 dereferenceable(32768) %arg46, ptr noalias align 16 dereferenceable(32768) %arg47, ptr noalias align 16 dereferenceable(32768) %arg48, ptr noalias align 128 dereferenceable(2048) %arg49, ptr noalias align 128 dereferenceable(1966080) %arg50) {
entry:
  %return_buffer1053 = alloca float, align 4
  %result_from_other_lane1051 = alloca float, align 4
  %return_buffer1050 = alloca float, align 4
  %result_from_other_lane1048 = alloca float, align 4
  %return_buffer1047 = alloca float, align 4
  %result_from_other_lane1045 = alloca float, align 4
  %return_buffer1044 = alloca float, align 4
  %result_from_other_lane1042 = alloca float, align 4
  %return_buffer1041 = alloca float, align 4
  %result_from_other_lane1039 = alloca float, align 4
  %initial_value_addr = alloca float, align 4
  %return_buffer1038 = alloca float, align 4
  %result_from_other_lane1036 = alloca float, align 4
  %return_buffer1035 = alloca float, align 4
  %result_from_other_lane1033 = alloca float, align 4
  %return_buffer1032 = alloca float, align 4
  %result_from_other_lane1030 = alloca float, align 4
  %return_buffer1029 = alloca float, align 4
  %result_from_other_lane1027 = alloca float, align 4
  %return_buffer1026 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer724 = alloca float, align 4
  %tile_loop.invar_address426 = alloca i32, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %inter_warp_reduce-after, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_185_constant_67 = load float, ptr @56, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_185_constant_67, ptr %2, align 4
  %3 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !360
  %4 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !293
  %5 = urem i32 %3, 64
  %6 = udiv i32 %3, 64
  %7 = mul i32 %4, 1
  %8 = add i32 %7, %6
  %9 = icmp ult i32 %8, 512
  br i1 %9, label %10, label %early_return

10:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %5, 64
  %thread_id.y = udiv i32 %5, 64
  %lane_id = urem i32 %5, 32
  %11 = udiv i32 %8, 1
  %12 = urem i32 %11, 1
  %13 = udiv i32 %8, 1
  %14 = urem i32 %13, 512
  %15 = udiv i32 %8, 512
  %16 = icmp eq i32 %14, 511
  %tile_bound = select i1 %16, i32 1, i32 1
  %17 = icmp eq i32 %12, 0
  %tile_bound1 = select i1 %17, i32 960, i32 1024
  %tile_origin.0 = mul i32 %15, 1
  %tile_origin.1 = mul i32 %14, 1
  %tile_origin.2 = mul i32 %12, 1024
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %is_full_tile-after, %10
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %18 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %18, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 1
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %19 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %20 = icmp eq i32 1024, %tile_bound1
  br i1 %20, label %is_full_tile-true, label %is_full_tile-false

is_full_tile-after:                               ; preds = %tile_loop.loop_exit423, %tile_loop.loop_exit
  br label %y_in_tile.loop_header, !llvm.loop !416

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %partial_reduction_result1025 = load float, ptr %current_output, align 4
  %21 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result1025, i32 16, i32 31)
  store float %21, ptr %result_from_other_lane, align 4
  call void @region_1_170(ptr %current_output, ptr %result_from_other_lane, ptr %return_buffer1026)
  %22 = load float, ptr %return_buffer1026, align 4
  store float %22, ptr %current_output, align 4
  %partial_reduction_result1028 = load float, ptr %current_output, align 4
  %23 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result1028, i32 8, i32 31)
  store float %23, ptr %result_from_other_lane1027, align 4
  call void @region_1_170(ptr %current_output, ptr %result_from_other_lane1027, ptr %return_buffer1029)
  %24 = load float, ptr %return_buffer1029, align 4
  store float %24, ptr %current_output, align 4
  %partial_reduction_result1031 = load float, ptr %current_output, align 4
  %25 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result1031, i32 4, i32 31)
  store float %25, ptr %result_from_other_lane1030, align 4
  call void @region_1_170(ptr %current_output, ptr %result_from_other_lane1030, ptr %return_buffer1032)
  %26 = load float, ptr %return_buffer1032, align 4
  store float %26, ptr %current_output, align 4
  %partial_reduction_result1034 = load float, ptr %current_output, align 4
  %27 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result1034, i32 2, i32 31)
  store float %27, ptr %result_from_other_lane1033, align 4
  call void @region_1_170(ptr %current_output, ptr %result_from_other_lane1033, ptr %return_buffer1035)
  %28 = load float, ptr %return_buffer1035, align 4
  store float %28, ptr %current_output, align 4
  %partial_reduction_result1037 = load float, ptr %current_output, align 4
  %29 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result1037, i32 1, i32 31)
  store float %29, ptr %result_from_other_lane1036, align 4
  call void @region_1_170(ptr %current_output, ptr %result_from_other_lane1036, ptr %return_buffer1038)
  %30 = load float, ptr %return_buffer1038, align 4
  store float %30, ptr %current_output, align 4
  %31 = udiv i32 %thread_id.x, 32
  %32 = icmp eq i32 %lane_id, 0
  br i1 %32, label %intra_warp_reduce_write-true, label %intra_warp_reduce_write-after

intra_warp_reduce_write-after:                    ; preds = %intra_warp_reduce_write-true, %y_in_tile.loop_exit
  call void @llvm.nvvm.barrier0()
  %33 = icmp eq i32 %31, 0
  br i1 %33, label %inter_warp_reduce-true, label %inter_warp_reduce-after

inter_warp_reduce-after:                          ; preds = %reduction_write_output-after, %intra_warp_reduce_write-after
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

is_full_tile-true:                                ; preds = %y_in_tile.loop_body
  %34 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %concatenate.159.merge135, %is_full_tile-true
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %35 = icmp uge i32 %tile_loop.indvar, 16
  br i1 %35, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %36 = icmp eq i32 %tile_loop.indvar, 0
  %37 = mul i32 %tile_loop.indvar, 64
  %38 = add i32 %37, 0
  %x_loc = add i32 %38, %34
  %39 = add i32 %tile_origin.1, %y_in_tile.indvar
  %40 = add i32 %tile_origin.2, %x_loc
  %41 = mul nuw nsw i32 %40, 1
  %42 = add nuw nsw i32 0, %41
  %43 = mul nuw nsw i32 %39, 960
  %44 = add nuw nsw i32 %42, %43
  %45 = urem i32 %44, 8192
  %46 = udiv i32 %44, 8192
  %47 = udiv i32 %46, 60
  %Arg_0.1 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg0, i32 0, i32 %46, i32 %45, i32 0
  %Arg_0.13 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  br label %concatenate.pivot.30.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.9.76, %concatenate.pivot.2.69, %concatenate.pivot.0.
  %48 = phi i32 [ 0, %concatenate.pivot.0. ], [ 2, %concatenate.pivot.2.69 ], [ 9, %concatenate.pivot.9.76 ]
  %49 = sub nsw i32 %46, %48
  %Arg_48.49 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg48, i32 0, i32 %45, i32 0
  %Arg_48.494 = load i32, ptr %Arg_48.49, align 4, !invariant.load !297
  %50 = sitofp i32 %Arg_48.494 to float
  br label %concatenate.159.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.3.70, %concatenate.pivot.1.68
  %51 = phi i32 [ 1, %concatenate.pivot.1.68 ], [ 3, %concatenate.pivot.3.70 ]
  %52 = sub nsw i32 %46, %51
  %Arg_47.48 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg47, i32 0, i32 %45, i32 0
  %Arg_47.485 = load i32, ptr %Arg_47.48, align 4, !invariant.load !297
  %53 = sitofp i32 %Arg_47.485 to float
  br label %concatenate.159.merge

concat_index_from_operand_id2:                    ; preds = %concatenate.pivot.4.71
  %54 = phi i32 [ 4, %concatenate.pivot.4.71 ]
  %55 = sub nsw i32 %46, %54
  %Arg_46.47 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg46, i32 0, i32 %45, i32 0
  %Arg_46.476 = load i32, ptr %Arg_46.47, align 4, !invariant.load !297
  %56 = sitofp i32 %Arg_46.476 to float
  br label %concatenate.159.merge

concat_index_from_operand_id3:                    ; preds = %concatenate.pivot.5.72
  %57 = phi i32 [ 5, %concatenate.pivot.5.72 ]
  %58 = sub nsw i32 %46, %57
  %Arg_45.46 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg45, i32 0, i32 %45, i32 0
  %Arg_45.467 = load i32, ptr %Arg_45.46, align 4, !invariant.load !297
  %59 = sitofp i32 %Arg_45.467 to float
  br label %concatenate.159.merge

concat_index_from_operand_id4:                    ; preds = %concatenate.pivot.6.73
  %60 = phi i32 [ 6, %concatenate.pivot.6.73 ]
  %61 = sub nsw i32 %46, %60
  %Arg_44.45 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg44, i32 0, i32 %45, i32 0
  %Arg_44.458 = load i32, ptr %Arg_44.45, align 4, !invariant.load !297
  %62 = sitofp i32 %Arg_44.458 to float
  br label %concatenate.159.merge

concat_index_from_operand_id5:                    ; preds = %concatenate.pivot.7.74
  %63 = phi i32 [ 7, %concatenate.pivot.7.74 ]
  %64 = sub nsw i32 %46, %63
  %Arg_43.44 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg43, i32 0, i32 %45, i32 0
  %Arg_43.449 = load i32, ptr %Arg_43.44, align 4, !invariant.load !297
  %65 = sitofp i32 %Arg_43.449 to float
  br label %concatenate.159.merge

concat_index_from_operand_id6:                    ; preds = %concatenate.pivot.8.75
  %66 = phi i32 [ 8, %concatenate.pivot.8.75 ]
  %67 = sub nsw i32 %46, %66
  %Arg_42.43 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg42, i32 0, i32 %45, i32 0
  %Arg_42.4310 = load i32, ptr %Arg_42.43, align 4, !invariant.load !297
  %68 = sitofp i32 %Arg_42.4310 to float
  br label %concatenate.159.merge

concat_index_from_operand_id7:                    ; preds = %concatenate.pivot.10.77
  %69 = phi i32 [ 10, %concatenate.pivot.10.77 ]
  %70 = sub nsw i32 %46, %69
  %Arg_41.42 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg41, i32 0, i32 %45, i32 0
  %Arg_41.4211 = load i32, ptr %Arg_41.42, align 4, !invariant.load !297
  %71 = sitofp i32 %Arg_41.4211 to float
  br label %concatenate.159.merge

concat_index_from_operand_id8:                    ; preds = %concatenate.pivot.11.78
  %72 = phi i32 [ 11, %concatenate.pivot.11.78 ]
  %73 = sub nsw i32 %46, %72
  %Arg_40.41 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg40, i32 0, i32 %45, i32 0
  %Arg_40.4112 = load i32, ptr %Arg_40.41, align 4, !invariant.load !297
  %74 = sitofp i32 %Arg_40.4112 to float
  %region_0_185_constant_6713 = load float, ptr @56, align 4
  %compare.69 = fcmp ogt float %74, %region_0_185_constant_6713
  %75 = zext i1 %compare.69 to i8
  %region_0_185_constant_70 = load float, ptr @57, align 4
  %76 = trunc i8 %75 to i1
  %77 = select i1 %76, float %region_0_185_constant_70, float %region_0_185_constant_6713
  br label %concatenate.159.merge

concat_index_from_operand_id9:                    ; preds = %concatenate.pivot.12.79
  %78 = phi i32 [ 12, %concatenate.pivot.12.79 ]
  %79 = sub nsw i32 %46, %78
  %Arg_39.40 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg39, i32 0, i32 %45, i32 0
  %Arg_39.4014 = load i32, ptr %Arg_39.40, align 4, !invariant.load !297
  %80 = sitofp i32 %Arg_39.4014 to float
  br label %concatenate.159.merge

concat_index_from_operand_id10:                   ; preds = %concatenate.pivot.13.80
  %81 = phi i32 [ 13, %concatenate.pivot.13.80 ]
  %82 = sub nsw i32 %46, %81
  %Arg_38.39 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg38, i32 0, i32 %45, i32 0
  %Arg_38.3915 = load i32, ptr %Arg_38.39, align 4, !invariant.load !297
  %83 = sitofp i32 %Arg_38.3915 to float
  br label %concatenate.159.merge

concat_index_from_operand_id11:                   ; preds = %concatenate.pivot.14.81
  %84 = phi i32 [ 14, %concatenate.pivot.14.81 ]
  %85 = sub nsw i32 %46, %84
  %Arg_37.38 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg37, i32 0, i32 %45, i32 0
  %Arg_37.3816 = load i32, ptr %Arg_37.38, align 4, !invariant.load !297
  %86 = sitofp i32 %Arg_37.3816 to float
  br label %concatenate.159.merge

concat_index_from_operand_id12:                   ; preds = %concatenate.pivot.15.82
  %87 = phi i32 [ 15, %concatenate.pivot.15.82 ]
  %88 = sub nsw i32 %46, %87
  %Arg_36.37 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg36, i32 0, i32 %45, i32 0
  %Arg_36.3717 = load i32, ptr %Arg_36.37, align 4, !invariant.load !297
  %89 = sitofp i32 %Arg_36.3717 to float
  br label %concatenate.159.merge

concat_index_from_operand_id13:                   ; preds = %concatenate.pivot.16.83
  %90 = phi i32 [ 16, %concatenate.pivot.16.83 ]
  %91 = sub nsw i32 %46, %90
  %Arg_35.36 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg35, i32 0, i32 %45, i32 0
  %Arg_35.3618 = load i32, ptr %Arg_35.36, align 4, !invariant.load !297
  %92 = sitofp i32 %Arg_35.3618 to float
  br label %concatenate.159.merge

concat_index_from_operand_id14:                   ; preds = %concatenate.pivot.17.84
  %93 = phi i32 [ 17, %concatenate.pivot.17.84 ]
  %94 = sub nsw i32 %46, %93
  %Arg_34.35 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg34, i32 0, i32 %45, i32 0
  %Arg_34.3519 = load i32, ptr %Arg_34.35, align 4, !invariant.load !297
  %95 = sitofp i32 %Arg_34.3519 to float
  br label %concatenate.159.merge

concat_index_from_operand_id15:                   ; preds = %concatenate.pivot.18.85
  %96 = phi i32 [ 18, %concatenate.pivot.18.85 ]
  %97 = sub nsw i32 %46, %96
  %Arg_33.34 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg33, i32 0, i32 %45, i32 0
  %Arg_33.3420 = load i32, ptr %Arg_33.34, align 4, !invariant.load !297
  %98 = sitofp i32 %Arg_33.3420 to float
  br label %concatenate.159.merge

concat_index_from_operand_id16:                   ; preds = %concatenate.pivot.19.86
  %99 = phi i32 [ 19, %concatenate.pivot.19.86 ]
  %100 = sub nsw i32 %46, %99
  %Arg_32.33 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg32, i32 0, i32 %45, i32 0
  %Arg_32.3321 = load i32, ptr %Arg_32.33, align 4, !invariant.load !297
  %101 = sitofp i32 %Arg_32.3321 to float
  br label %concatenate.159.merge

concat_index_from_operand_id17:                   ; preds = %concatenate.pivot.20.87
  %102 = phi i32 [ 20, %concatenate.pivot.20.87 ]
  %103 = sub nsw i32 %46, %102
  %Arg_31.32 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg31, i32 0, i32 %45, i32 0
  %Arg_31.3222 = load i32, ptr %Arg_31.32, align 4, !invariant.load !297
  %104 = sitofp i32 %Arg_31.3222 to float
  br label %concatenate.159.merge

concat_index_from_operand_id18:                   ; preds = %concatenate.pivot.21.88
  %105 = phi i32 [ 21, %concatenate.pivot.21.88 ]
  %106 = sub nsw i32 %46, %105
  %Arg_30.31 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg30, i32 0, i32 %45, i32 0
  %Arg_30.3123 = load i32, ptr %Arg_30.31, align 4, !invariant.load !297
  %107 = sitofp i32 %Arg_30.3123 to float
  br label %concatenate.159.merge

concat_index_from_operand_id19:                   ; preds = %concatenate.pivot.22.89
  %108 = phi i32 [ 22, %concatenate.pivot.22.89 ]
  %109 = sub nsw i32 %46, %108
  %Arg_29.30 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg29, i32 0, i32 %45, i32 0
  %Arg_29.3024 = load i32, ptr %Arg_29.30, align 4, !invariant.load !297
  %110 = sitofp i32 %Arg_29.3024 to float
  br label %concatenate.159.merge

concat_index_from_operand_id20:                   ; preds = %concatenate.pivot.23.90
  %111 = phi i32 [ 23, %concatenate.pivot.23.90 ]
  %112 = sub nsw i32 %46, %111
  %Arg_28.29 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg28, i32 0, i32 %45, i32 0
  %Arg_28.2925 = load i32, ptr %Arg_28.29, align 4, !invariant.load !297
  %113 = sitofp i32 %Arg_28.2925 to float
  br label %concatenate.159.merge

concat_index_from_operand_id21:                   ; preds = %concatenate.pivot.24.91
  %114 = phi i32 [ 24, %concatenate.pivot.24.91 ]
  %115 = sub nsw i32 %46, %114
  %Arg_27.28 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg27, i32 0, i32 %45, i32 0
  %Arg_27.2826 = load i32, ptr %Arg_27.28, align 4, !invariant.load !297
  %116 = sitofp i32 %Arg_27.2826 to float
  br label %concatenate.159.merge

concat_index_from_operand_id22:                   ; preds = %concatenate.pivot.25.92
  %117 = phi i32 [ 25, %concatenate.pivot.25.92 ]
  %118 = sub nsw i32 %46, %117
  %Arg_26.27 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg26, i32 0, i32 %45, i32 0
  %Arg_26.2727 = load i32, ptr %Arg_26.27, align 4, !invariant.load !297
  %119 = sitofp i32 %Arg_26.2727 to float
  br label %concatenate.159.merge

concat_index_from_operand_id23:                   ; preds = %concatenate.pivot.26.93
  %120 = phi i32 [ 26, %concatenate.pivot.26.93 ]
  %121 = sub nsw i32 %46, %120
  %Arg_25.26 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg25, i32 0, i32 %45, i32 0
  %Arg_25.2628 = load i32, ptr %Arg_25.26, align 4, !invariant.load !297
  %122 = sitofp i32 %Arg_25.2628 to float
  br label %concatenate.159.merge

concat_index_from_operand_id24:                   ; preds = %concatenate.pivot.27.94
  %123 = phi i32 [ 27, %concatenate.pivot.27.94 ]
  %124 = sub nsw i32 %46, %123
  %Arg_24.25 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg24, i32 0, i32 %45, i32 0
  %Arg_24.2529 = load i32, ptr %Arg_24.25, align 4, !invariant.load !297
  %125 = sitofp i32 %Arg_24.2529 to float
  br label %concatenate.159.merge

concat_index_from_operand_id25:                   ; preds = %concatenate.pivot.28.95
  %126 = phi i32 [ 28, %concatenate.pivot.28.95 ]
  %127 = sub nsw i32 %46, %126
  %Arg_23.24 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg23, i32 0, i32 %45, i32 0
  %Arg_23.2430 = load i32, ptr %Arg_23.24, align 4, !invariant.load !297
  %128 = sitofp i32 %Arg_23.2430 to float
  br label %concatenate.159.merge

concat_index_from_operand_id26:                   ; preds = %concatenate.pivot.29.96
  %129 = phi i32 [ 29, %concatenate.pivot.29.96 ]
  %130 = sub nsw i32 %46, %129
  %Arg_22.23 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg22, i32 0, i32 %45, i32 0
  %Arg_22.2331 = load i32, ptr %Arg_22.23, align 4, !invariant.load !297
  %131 = sitofp i32 %Arg_22.2331 to float
  br label %concatenate.159.merge

concat_index_from_operand_id27:                   ; preds = %concatenate.pivot.30.97
  %132 = phi i32 [ 30, %concatenate.pivot.30.97 ]
  %133 = sub nsw i32 %46, %132
  %Arg_21.22 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg21, i32 0, i32 %45, i32 0
  %Arg_21.2232 = load i32, ptr %Arg_21.22, align 4, !invariant.load !297
  %134 = sitofp i32 %Arg_21.2232 to float
  br label %concatenate.159.merge

concat_index_from_operand_id28:                   ; preds = %concatenate.pivot.31.98
  %135 = phi i32 [ 31, %concatenate.pivot.31.98 ]
  %136 = sub nsw i32 %46, %135
  %Arg_20.21 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg20, i32 0, i32 %45, i32 0
  %Arg_20.2133 = load i32, ptr %Arg_20.21, align 4, !invariant.load !297
  %137 = sitofp i32 %Arg_20.2133 to float
  br label %concatenate.159.merge

concat_index_from_operand_id29:                   ; preds = %concatenate.pivot.32.99
  %138 = phi i32 [ 32, %concatenate.pivot.32.99 ]
  %139 = sub nsw i32 %46, %138
  %Arg_19.20 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg19, i32 0, i32 %45, i32 0
  %Arg_19.2034 = load i32, ptr %Arg_19.20, align 4, !invariant.load !297
  %140 = sitofp i32 %Arg_19.2034 to float
  br label %concatenate.159.merge

concat_index_from_operand_id30:                   ; preds = %concatenate.pivot.33.100
  %141 = phi i32 [ 33, %concatenate.pivot.33.100 ]
  %142 = sub nsw i32 %46, %141
  %Arg_18.19 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg18, i32 0, i32 %45, i32 0
  %Arg_18.1935 = load i32, ptr %Arg_18.19, align 4, !invariant.load !297
  %143 = sitofp i32 %Arg_18.1935 to float
  br label %concatenate.159.merge

concat_index_from_operand_id31:                   ; preds = %concatenate.pivot.34.101
  %144 = phi i32 [ 34, %concatenate.pivot.34.101 ]
  %145 = sub nsw i32 %46, %144
  %Arg_17.18 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg17, i32 0, i32 %45, i32 0
  %Arg_17.1836 = load i32, ptr %Arg_17.18, align 4, !invariant.load !297
  %146 = sitofp i32 %Arg_17.1836 to float
  br label %concatenate.159.merge

concat_index_from_operand_id32:                   ; preds = %concatenate.pivot.35.102
  %147 = phi i32 [ 35, %concatenate.pivot.35.102 ]
  %148 = sub nsw i32 %46, %147
  %Arg_16.17 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg16, i32 0, i32 %45, i32 0
  %Arg_16.1737 = load i32, ptr %Arg_16.17, align 4, !invariant.load !297
  %149 = sitofp i32 %Arg_16.1737 to float
  br label %concatenate.159.merge

concat_index_from_operand_id33:                   ; preds = %concatenate.pivot.36.103
  %150 = phi i32 [ 36, %concatenate.pivot.36.103 ]
  %151 = sub nsw i32 %46, %150
  %Arg_15.16 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg15, i32 0, i32 %45, i32 0
  %Arg_15.1638 = load i32, ptr %Arg_15.16, align 4, !invariant.load !297
  %152 = sitofp i32 %Arg_15.1638 to float
  br label %concatenate.159.merge

concat_index_from_operand_id34:                   ; preds = %concatenate.pivot.37.104
  %153 = phi i32 [ 37, %concatenate.pivot.37.104 ]
  %154 = sub nsw i32 %46, %153
  %Arg_14.15 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg14, i32 0, i32 %45, i32 0
  %Arg_14.1539 = load i32, ptr %Arg_14.15, align 4, !invariant.load !297
  %155 = sitofp i32 %Arg_14.1539 to float
  br label %concatenate.159.merge

concat_index_from_operand_id35:                   ; preds = %concatenate.pivot.38.105
  %156 = phi i32 [ 38, %concatenate.pivot.38.105 ]
  %157 = sub nsw i32 %46, %156
  %Arg_13.14 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg13, i32 0, i32 %45, i32 0
  %Arg_13.1440 = load i32, ptr %Arg_13.14, align 4, !invariant.load !297
  %158 = sitofp i32 %Arg_13.1440 to float
  br label %concatenate.159.merge

concat_index_from_operand_id36:                   ; preds = %concatenate.pivot.39.106
  %159 = phi i32 [ 39, %concatenate.pivot.39.106 ]
  %160 = sub nsw i32 %46, %159
  %Arg_12.13 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg12, i32 0, i32 %45, i32 0
  %Arg_12.1341 = load i32, ptr %Arg_12.13, align 4, !invariant.load !297
  %161 = sitofp i32 %Arg_12.1341 to float
  br label %concatenate.159.merge

concat_index_from_operand_id37:                   ; preds = %concatenate.pivot.40.107
  %162 = phi i32 [ 40, %concatenate.pivot.40.107 ]
  %163 = sub nsw i32 %46, %162
  %Arg_11.12 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg11, i32 0, i32 %45, i32 0
  %Arg_11.1242 = load i32, ptr %Arg_11.12, align 4, !invariant.load !297
  %164 = sitofp i32 %Arg_11.1242 to float
  br label %concatenate.159.merge

concat_index_from_operand_id38:                   ; preds = %concatenate.pivot.41.108
  %165 = phi i32 [ 41, %concatenate.pivot.41.108 ]
  %166 = sub nsw i32 %46, %165
  %Arg_10.11 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg10, i32 0, i32 %45, i32 0
  %Arg_10.1143 = load i32, ptr %Arg_10.11, align 4, !invariant.load !297
  %167 = sitofp i32 %Arg_10.1143 to float
  br label %concatenate.159.merge

concat_index_from_operand_id39:                   ; preds = %concatenate.pivot.42.109
  %168 = phi i32 [ 42, %concatenate.pivot.42.109 ]
  %169 = sub nsw i32 %46, %168
  %Arg_9.10 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg9, i32 0, i32 %45, i32 0
  %Arg_9.1044 = load i32, ptr %Arg_9.10, align 4, !invariant.load !297
  %170 = sitofp i32 %Arg_9.1044 to float
  br label %concatenate.159.merge

concat_index_from_operand_id40:                   ; preds = %concatenate.pivot.43.110
  %171 = phi i32 [ 43, %concatenate.pivot.43.110 ]
  %172 = sub nsw i32 %46, %171
  %Arg_8.9 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg8, i32 0, i32 %45, i32 0
  %Arg_8.945 = load i32, ptr %Arg_8.9, align 4, !invariant.load !297
  %173 = sitofp i32 %Arg_8.945 to float
  br label %concatenate.159.merge

concat_index_from_operand_id41:                   ; preds = %concatenate.pivot.44.111
  %174 = phi i32 [ 44, %concatenate.pivot.44.111 ]
  %175 = sub nsw i32 %46, %174
  %Arg_6.7 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg6, i32 0, i32 %45, i32 0
  %Arg_6.746 = load i32, ptr %Arg_6.7, align 4, !invariant.load !297
  %176 = sitofp i32 %Arg_6.746 to float
  %Arg_5.6 = getelementptr inbounds [8192 x [1 x float]], ptr %arg5, i32 0, i32 %45, i32 0
  %Arg_5.647 = load float, ptr %Arg_5.6, align 4, !invariant.load !297
  %177 = fcmp oge float %176, %Arg_5.647
  %178 = fcmp une float %176, %176
  %179 = or i1 %177, %178
  %maximum.139 = select i1 %179, float %176, float %Arg_5.647
  %Arg_4.5 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg4, i32 0, i32 %45, i32 0
  %Arg_4.548 = load i32, ptr %Arg_4.5, align 4, !invariant.load !297
  %180 = sitofp i32 %Arg_4.548 to float
  %181 = fptosi float %180 to i32
  %182 = fcmp ole float %180, 0xC1E0000000000000
  %183 = select i1 %182, i32 -2147483648, i32 %181
  %184 = fcmp oge float %180, 0x41E0000000000000
  %185 = select i1 %184, i32 2147483647, i32 %183
  %186 = fcmp uno float %180, %180
  %187 = select i1 %186, i32 0, i32 %185
  %region_0_185_constant_142 = load i32, ptr @59, align 4
  %188 = and i32 %187, %region_0_185_constant_142
  %region_0_185_constant_145 = load i32, ptr @58, align 4
  %189 = icmp eq i32 %188, %region_0_185_constant_145
  %190 = zext i1 %189 to i8
  %region_0_185_constant_6749 = load float, ptr @56, align 4
  %region_0_185_constant_7050 = load float, ptr @57, align 4
  %191 = trunc i8 %190 to i1
  %192 = select i1 %191, float %region_0_185_constant_6749, float %region_0_185_constant_7050
  %193 = fcmp oge float %maximum.139, %192
  %194 = fcmp une float %maximum.139, %maximum.139
  %195 = or i1 %193, %194
  %maximum.149 = select i1 %195, float %maximum.139, float %192
  %compare.150 = fcmp ogt float %maximum.149, %region_0_185_constant_6749
  %196 = zext i1 %compare.150 to i8
  %Arg_7.8 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg7, i32 0, i32 %45, i32 0
  %Arg_7.851 = load i32, ptr %Arg_7.8, align 4, !invariant.load !297
  %197 = sitofp i32 %Arg_7.851 to float
  %198 = trunc i8 %196 to i1
  %199 = select i1 %198, float %197, float %region_0_185_constant_6749
  br label %concatenate.159.merge

concat_index_from_operand_id42:                   ; preds = %concatenate.pivot.45.112
  %200 = phi i32 [ 45, %concatenate.pivot.45.112 ]
  %201 = sub nsw i32 %46, %200
  %Arg_6.752 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg6, i32 0, i32 %45, i32 0
  %Arg_6.753 = load i32, ptr %Arg_6.752, align 4, !invariant.load !297
  %202 = sitofp i32 %Arg_6.753 to float
  %Arg_5.654 = getelementptr inbounds [8192 x [1 x float]], ptr %arg5, i32 0, i32 %45, i32 0
  %Arg_5.655 = load float, ptr %Arg_5.654, align 4, !invariant.load !297
  %203 = fcmp oge float %202, %Arg_5.655
  %204 = fcmp une float %202, %202
  %205 = or i1 %203, %204
  %maximum.13956 = select i1 %205, float %202, float %Arg_5.655
  %Arg_4.557 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg4, i32 0, i32 %45, i32 0
  %Arg_4.558 = load i32, ptr %Arg_4.557, align 4, !invariant.load !297
  %206 = sitofp i32 %Arg_4.558 to float
  %207 = fptosi float %206 to i32
  %208 = fcmp ole float %206, 0xC1E0000000000000
  %209 = select i1 %208, i32 -2147483648, i32 %207
  %210 = fcmp oge float %206, 0x41E0000000000000
  %211 = select i1 %210, i32 2147483647, i32 %209
  %212 = fcmp uno float %206, %206
  %213 = select i1 %212, i32 0, i32 %211
  %region_0_185_constant_14259 = load i32, ptr @59, align 4
  %214 = and i32 %213, %region_0_185_constant_14259
  %region_0_185_constant_14560 = load i32, ptr @58, align 4
  %215 = icmp eq i32 %214, %region_0_185_constant_14560
  %216 = zext i1 %215 to i8
  %region_0_185_constant_6761 = load float, ptr @56, align 4
  %region_0_185_constant_7062 = load float, ptr @57, align 4
  %217 = trunc i8 %216 to i1
  %218 = select i1 %217, float %region_0_185_constant_6761, float %region_0_185_constant_7062
  %219 = fcmp oge float %maximum.13956, %218
  %220 = fcmp une float %maximum.13956, %maximum.13956
  %221 = or i1 %219, %220
  %maximum.14963 = select i1 %221, float %maximum.13956, float %218
  %compare.15064 = fcmp ogt float %maximum.14963, %region_0_185_constant_6761
  %222 = zext i1 %compare.15064 to i8
  %Arg_3.4 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg3, i32 0, i32 %45, i32 0
  %Arg_3.465 = load i32, ptr %Arg_3.4, align 4, !invariant.load !297
  %223 = sitofp i32 %Arg_3.465 to float
  %224 = trunc i8 %222 to i1
  %225 = select i1 %224, float %223, float %region_0_185_constant_6761
  br label %concatenate.159.merge

concat_index_from_operand_id43:                   ; preds = %concatenate.pivot.58.125, %concatenate.pivot.56.123, %concatenate.pivot.54.121, %concatenate.pivot.52.119, %concatenate.pivot.50.117, %concatenate.pivot.48.115, %concatenate.pivot.46.113
  %226 = phi i32 [ 46, %concatenate.pivot.46.113 ], [ 48, %concatenate.pivot.48.115 ], [ 50, %concatenate.pivot.50.117 ], [ 52, %concatenate.pivot.52.119 ], [ 54, %concatenate.pivot.54.121 ], [ 56, %concatenate.pivot.56.123 ], [ 58, %concatenate.pivot.58.125 ]
  %227 = sub nsw i32 %46, %226
  %region_0_185_constant_7066 = load float, ptr @57, align 4
  br label %concatenate.159.merge

concat_index_from_operand_id44:                   ; preds = %concatenate.pivot.59.126, %concatenate.pivot.57.124, %concatenate.pivot.55.122, %concatenate.pivot.53.120, %concatenate.pivot.51.118, %concatenate.pivot.49.116, %concatenate.pivot.47.114
  %228 = phi i32 [ 47, %concatenate.pivot.47.114 ], [ 49, %concatenate.pivot.49.116 ], [ 51, %concatenate.pivot.51.118 ], [ 53, %concatenate.pivot.53.120 ], [ 55, %concatenate.pivot.55.122 ], [ 57, %concatenate.pivot.57.124 ], [ 59, %concatenate.pivot.59.126 ]
  %229 = sub nsw i32 %46, %228
  %region_0_185_constant_6767 = load float, ptr @56, align 4
  br label %concatenate.159.merge

concatenate.pivot.30.:                            ; preds = %tile_loop.loop_body
  %230 = icmp ult i32 %46, 30
  br i1 %230, label %concatenate.pivot.15., label %concatenate.pivot.45.

concatenate.pivot.15.:                            ; preds = %concatenate.pivot.30.
  %231 = icmp ult i32 %46, 15
  br i1 %231, label %concatenate.pivot.7., label %concatenate.pivot.22.

concatenate.pivot.7.:                             ; preds = %concatenate.pivot.15.
  %232 = icmp ult i32 %46, 7
  br i1 %232, label %concatenate.pivot.3., label %concatenate.pivot.11.

concatenate.pivot.3.:                             ; preds = %concatenate.pivot.7.
  %233 = icmp ult i32 %46, 3
  br i1 %233, label %concatenate.pivot.1., label %concatenate.pivot.5.

concatenate.pivot.1.:                             ; preds = %concatenate.pivot.3.
  %234 = icmp ult i32 %46, 1
  br i1 %234, label %concatenate.pivot.0., label %concatenate.pivot.2.

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.1.
  br label %concat_index_from_operand_id0

concatenate.pivot.2.:                             ; preds = %concatenate.pivot.1.
  %235 = icmp ult i32 %46, 2
  br i1 %235, label %concatenate.pivot.1.68, label %concatenate.pivot.2.69

concatenate.pivot.1.68:                           ; preds = %concatenate.pivot.2.
  br label %concat_index_from_operand_id1

concatenate.pivot.2.69:                           ; preds = %concatenate.pivot.2.
  br label %concat_index_from_operand_id0

concatenate.pivot.5.:                             ; preds = %concatenate.pivot.3.
  %236 = icmp ult i32 %46, 5
  br i1 %236, label %concatenate.pivot.4., label %concatenate.pivot.6.

concatenate.pivot.4.:                             ; preds = %concatenate.pivot.5.
  %237 = icmp ult i32 %46, 4
  br i1 %237, label %concatenate.pivot.3.70, label %concatenate.pivot.4.71

concatenate.pivot.3.70:                           ; preds = %concatenate.pivot.4.
  br label %concat_index_from_operand_id1

concatenate.pivot.4.71:                           ; preds = %concatenate.pivot.4.
  br label %concat_index_from_operand_id2

concatenate.pivot.6.:                             ; preds = %concatenate.pivot.5.
  %238 = icmp ult i32 %46, 6
  br i1 %238, label %concatenate.pivot.5.72, label %concatenate.pivot.6.73

concatenate.pivot.5.72:                           ; preds = %concatenate.pivot.6.
  br label %concat_index_from_operand_id3

concatenate.pivot.6.73:                           ; preds = %concatenate.pivot.6.
  br label %concat_index_from_operand_id4

concatenate.pivot.11.:                            ; preds = %concatenate.pivot.7.
  %239 = icmp ult i32 %46, 11
  br i1 %239, label %concatenate.pivot.9., label %concatenate.pivot.13.

concatenate.pivot.9.:                             ; preds = %concatenate.pivot.11.
  %240 = icmp ult i32 %46, 9
  br i1 %240, label %concatenate.pivot.8., label %concatenate.pivot.10.

concatenate.pivot.8.:                             ; preds = %concatenate.pivot.9.
  %241 = icmp ult i32 %46, 8
  br i1 %241, label %concatenate.pivot.7.74, label %concatenate.pivot.8.75

concatenate.pivot.7.74:                           ; preds = %concatenate.pivot.8.
  br label %concat_index_from_operand_id5

concatenate.pivot.8.75:                           ; preds = %concatenate.pivot.8.
  br label %concat_index_from_operand_id6

concatenate.pivot.10.:                            ; preds = %concatenate.pivot.9.
  %242 = icmp ult i32 %46, 10
  br i1 %242, label %concatenate.pivot.9.76, label %concatenate.pivot.10.77

concatenate.pivot.9.76:                           ; preds = %concatenate.pivot.10.
  br label %concat_index_from_operand_id0

concatenate.pivot.10.77:                          ; preds = %concatenate.pivot.10.
  br label %concat_index_from_operand_id7

concatenate.pivot.13.:                            ; preds = %concatenate.pivot.11.
  %243 = icmp ult i32 %46, 13
  br i1 %243, label %concatenate.pivot.12., label %concatenate.pivot.14.

concatenate.pivot.12.:                            ; preds = %concatenate.pivot.13.
  %244 = icmp ult i32 %46, 12
  br i1 %244, label %concatenate.pivot.11.78, label %concatenate.pivot.12.79

concatenate.pivot.11.78:                          ; preds = %concatenate.pivot.12.
  br label %concat_index_from_operand_id8

concatenate.pivot.12.79:                          ; preds = %concatenate.pivot.12.
  br label %concat_index_from_operand_id9

concatenate.pivot.14.:                            ; preds = %concatenate.pivot.13.
  %245 = icmp ult i32 %46, 14
  br i1 %245, label %concatenate.pivot.13.80, label %concatenate.pivot.14.81

concatenate.pivot.13.80:                          ; preds = %concatenate.pivot.14.
  br label %concat_index_from_operand_id10

concatenate.pivot.14.81:                          ; preds = %concatenate.pivot.14.
  br label %concat_index_from_operand_id11

concatenate.pivot.22.:                            ; preds = %concatenate.pivot.15.
  %246 = icmp ult i32 %46, 22
  br i1 %246, label %concatenate.pivot.18., label %concatenate.pivot.26.

concatenate.pivot.18.:                            ; preds = %concatenate.pivot.22.
  %247 = icmp ult i32 %46, 18
  br i1 %247, label %concatenate.pivot.16., label %concatenate.pivot.20.

concatenate.pivot.16.:                            ; preds = %concatenate.pivot.18.
  %248 = icmp ult i32 %46, 16
  br i1 %248, label %concatenate.pivot.15.82, label %concatenate.pivot.17.

concatenate.pivot.15.82:                          ; preds = %concatenate.pivot.16.
  br label %concat_index_from_operand_id12

concatenate.pivot.17.:                            ; preds = %concatenate.pivot.16.
  %249 = icmp ult i32 %46, 17
  br i1 %249, label %concatenate.pivot.16.83, label %concatenate.pivot.17.84

concatenate.pivot.16.83:                          ; preds = %concatenate.pivot.17.
  br label %concat_index_from_operand_id13

concatenate.pivot.17.84:                          ; preds = %concatenate.pivot.17.
  br label %concat_index_from_operand_id14

concatenate.pivot.20.:                            ; preds = %concatenate.pivot.18.
  %250 = icmp ult i32 %46, 20
  br i1 %250, label %concatenate.pivot.19., label %concatenate.pivot.21.

concatenate.pivot.19.:                            ; preds = %concatenate.pivot.20.
  %251 = icmp ult i32 %46, 19
  br i1 %251, label %concatenate.pivot.18.85, label %concatenate.pivot.19.86

concatenate.pivot.18.85:                          ; preds = %concatenate.pivot.19.
  br label %concat_index_from_operand_id15

concatenate.pivot.19.86:                          ; preds = %concatenate.pivot.19.
  br label %concat_index_from_operand_id16

concatenate.pivot.21.:                            ; preds = %concatenate.pivot.20.
  %252 = icmp ult i32 %46, 21
  br i1 %252, label %concatenate.pivot.20.87, label %concatenate.pivot.21.88

concatenate.pivot.20.87:                          ; preds = %concatenate.pivot.21.
  br label %concat_index_from_operand_id17

concatenate.pivot.21.88:                          ; preds = %concatenate.pivot.21.
  br label %concat_index_from_operand_id18

concatenate.pivot.26.:                            ; preds = %concatenate.pivot.22.
  %253 = icmp ult i32 %46, 26
  br i1 %253, label %concatenate.pivot.24., label %concatenate.pivot.28.

concatenate.pivot.24.:                            ; preds = %concatenate.pivot.26.
  %254 = icmp ult i32 %46, 24
  br i1 %254, label %concatenate.pivot.23., label %concatenate.pivot.25.

concatenate.pivot.23.:                            ; preds = %concatenate.pivot.24.
  %255 = icmp ult i32 %46, 23
  br i1 %255, label %concatenate.pivot.22.89, label %concatenate.pivot.23.90

concatenate.pivot.22.89:                          ; preds = %concatenate.pivot.23.
  br label %concat_index_from_operand_id19

concatenate.pivot.23.90:                          ; preds = %concatenate.pivot.23.
  br label %concat_index_from_operand_id20

concatenate.pivot.25.:                            ; preds = %concatenate.pivot.24.
  %256 = icmp ult i32 %46, 25
  br i1 %256, label %concatenate.pivot.24.91, label %concatenate.pivot.25.92

concatenate.pivot.24.91:                          ; preds = %concatenate.pivot.25.
  br label %concat_index_from_operand_id21

concatenate.pivot.25.92:                          ; preds = %concatenate.pivot.25.
  br label %concat_index_from_operand_id22

concatenate.pivot.28.:                            ; preds = %concatenate.pivot.26.
  %257 = icmp ult i32 %46, 28
  br i1 %257, label %concatenate.pivot.27., label %concatenate.pivot.29.

concatenate.pivot.27.:                            ; preds = %concatenate.pivot.28.
  %258 = icmp ult i32 %46, 27
  br i1 %258, label %concatenate.pivot.26.93, label %concatenate.pivot.27.94

concatenate.pivot.26.93:                          ; preds = %concatenate.pivot.27.
  br label %concat_index_from_operand_id23

concatenate.pivot.27.94:                          ; preds = %concatenate.pivot.27.
  br label %concat_index_from_operand_id24

concatenate.pivot.29.:                            ; preds = %concatenate.pivot.28.
  %259 = icmp ult i32 %46, 29
  br i1 %259, label %concatenate.pivot.28.95, label %concatenate.pivot.29.96

concatenate.pivot.28.95:                          ; preds = %concatenate.pivot.29.
  br label %concat_index_from_operand_id25

concatenate.pivot.29.96:                          ; preds = %concatenate.pivot.29.
  br label %concat_index_from_operand_id26

concatenate.pivot.45.:                            ; preds = %concatenate.pivot.30.
  %260 = icmp ult i32 %46, 45
  br i1 %260, label %concatenate.pivot.37., label %concatenate.pivot.52.

concatenate.pivot.37.:                            ; preds = %concatenate.pivot.45.
  %261 = icmp ult i32 %46, 37
  br i1 %261, label %concatenate.pivot.33., label %concatenate.pivot.41.

concatenate.pivot.33.:                            ; preds = %concatenate.pivot.37.
  %262 = icmp ult i32 %46, 33
  br i1 %262, label %concatenate.pivot.31., label %concatenate.pivot.35.

concatenate.pivot.31.:                            ; preds = %concatenate.pivot.33.
  %263 = icmp ult i32 %46, 31
  br i1 %263, label %concatenate.pivot.30.97, label %concatenate.pivot.32.

concatenate.pivot.30.97:                          ; preds = %concatenate.pivot.31.
  br label %concat_index_from_operand_id27

concatenate.pivot.32.:                            ; preds = %concatenate.pivot.31.
  %264 = icmp ult i32 %46, 32
  br i1 %264, label %concatenate.pivot.31.98, label %concatenate.pivot.32.99

concatenate.pivot.31.98:                          ; preds = %concatenate.pivot.32.
  br label %concat_index_from_operand_id28

concatenate.pivot.32.99:                          ; preds = %concatenate.pivot.32.
  br label %concat_index_from_operand_id29

concatenate.pivot.35.:                            ; preds = %concatenate.pivot.33.
  %265 = icmp ult i32 %46, 35
  br i1 %265, label %concatenate.pivot.34., label %concatenate.pivot.36.

concatenate.pivot.34.:                            ; preds = %concatenate.pivot.35.
  %266 = icmp ult i32 %46, 34
  br i1 %266, label %concatenate.pivot.33.100, label %concatenate.pivot.34.101

concatenate.pivot.33.100:                         ; preds = %concatenate.pivot.34.
  br label %concat_index_from_operand_id30

concatenate.pivot.34.101:                         ; preds = %concatenate.pivot.34.
  br label %concat_index_from_operand_id31

concatenate.pivot.36.:                            ; preds = %concatenate.pivot.35.
  %267 = icmp ult i32 %46, 36
  br i1 %267, label %concatenate.pivot.35.102, label %concatenate.pivot.36.103

concatenate.pivot.35.102:                         ; preds = %concatenate.pivot.36.
  br label %concat_index_from_operand_id32

concatenate.pivot.36.103:                         ; preds = %concatenate.pivot.36.
  br label %concat_index_from_operand_id33

concatenate.pivot.41.:                            ; preds = %concatenate.pivot.37.
  %268 = icmp ult i32 %46, 41
  br i1 %268, label %concatenate.pivot.39., label %concatenate.pivot.43.

concatenate.pivot.39.:                            ; preds = %concatenate.pivot.41.
  %269 = icmp ult i32 %46, 39
  br i1 %269, label %concatenate.pivot.38., label %concatenate.pivot.40.

concatenate.pivot.38.:                            ; preds = %concatenate.pivot.39.
  %270 = icmp ult i32 %46, 38
  br i1 %270, label %concatenate.pivot.37.104, label %concatenate.pivot.38.105

concatenate.pivot.37.104:                         ; preds = %concatenate.pivot.38.
  br label %concat_index_from_operand_id34

concatenate.pivot.38.105:                         ; preds = %concatenate.pivot.38.
  br label %concat_index_from_operand_id35

concatenate.pivot.40.:                            ; preds = %concatenate.pivot.39.
  %271 = icmp ult i32 %46, 40
  br i1 %271, label %concatenate.pivot.39.106, label %concatenate.pivot.40.107

concatenate.pivot.39.106:                         ; preds = %concatenate.pivot.40.
  br label %concat_index_from_operand_id36

concatenate.pivot.40.107:                         ; preds = %concatenate.pivot.40.
  br label %concat_index_from_operand_id37

concatenate.pivot.43.:                            ; preds = %concatenate.pivot.41.
  %272 = icmp ult i32 %46, 43
  br i1 %272, label %concatenate.pivot.42., label %concatenate.pivot.44.

concatenate.pivot.42.:                            ; preds = %concatenate.pivot.43.
  %273 = icmp ult i32 %46, 42
  br i1 %273, label %concatenate.pivot.41.108, label %concatenate.pivot.42.109

concatenate.pivot.41.108:                         ; preds = %concatenate.pivot.42.
  br label %concat_index_from_operand_id38

concatenate.pivot.42.109:                         ; preds = %concatenate.pivot.42.
  br label %concat_index_from_operand_id39

concatenate.pivot.44.:                            ; preds = %concatenate.pivot.43.
  %274 = icmp ult i32 %46, 44
  br i1 %274, label %concatenate.pivot.43.110, label %concatenate.pivot.44.111

concatenate.pivot.43.110:                         ; preds = %concatenate.pivot.44.
  br label %concat_index_from_operand_id40

concatenate.pivot.44.111:                         ; preds = %concatenate.pivot.44.
  br label %concat_index_from_operand_id41

concatenate.pivot.52.:                            ; preds = %concatenate.pivot.45.
  %275 = icmp ult i32 %46, 52
  br i1 %275, label %concatenate.pivot.48., label %concatenate.pivot.56.

concatenate.pivot.48.:                            ; preds = %concatenate.pivot.52.
  %276 = icmp ult i32 %46, 48
  br i1 %276, label %concatenate.pivot.46., label %concatenate.pivot.50.

concatenate.pivot.46.:                            ; preds = %concatenate.pivot.48.
  %277 = icmp ult i32 %46, 46
  br i1 %277, label %concatenate.pivot.45.112, label %concatenate.pivot.47.

concatenate.pivot.45.112:                         ; preds = %concatenate.pivot.46.
  br label %concat_index_from_operand_id42

concatenate.pivot.47.:                            ; preds = %concatenate.pivot.46.
  %278 = icmp ult i32 %46, 47
  br i1 %278, label %concatenate.pivot.46.113, label %concatenate.pivot.47.114

concatenate.pivot.46.113:                         ; preds = %concatenate.pivot.47.
  br label %concat_index_from_operand_id43

concatenate.pivot.47.114:                         ; preds = %concatenate.pivot.47.
  br label %concat_index_from_operand_id44

concatenate.pivot.50.:                            ; preds = %concatenate.pivot.48.
  %279 = icmp ult i32 %46, 50
  br i1 %279, label %concatenate.pivot.49., label %concatenate.pivot.51.

concatenate.pivot.49.:                            ; preds = %concatenate.pivot.50.
  %280 = icmp ult i32 %46, 49
  br i1 %280, label %concatenate.pivot.48.115, label %concatenate.pivot.49.116

concatenate.pivot.48.115:                         ; preds = %concatenate.pivot.49.
  br label %concat_index_from_operand_id43

concatenate.pivot.49.116:                         ; preds = %concatenate.pivot.49.
  br label %concat_index_from_operand_id44

concatenate.pivot.51.:                            ; preds = %concatenate.pivot.50.
  %281 = icmp ult i32 %46, 51
  br i1 %281, label %concatenate.pivot.50.117, label %concatenate.pivot.51.118

concatenate.pivot.50.117:                         ; preds = %concatenate.pivot.51.
  br label %concat_index_from_operand_id43

concatenate.pivot.51.118:                         ; preds = %concatenate.pivot.51.
  br label %concat_index_from_operand_id44

concatenate.pivot.56.:                            ; preds = %concatenate.pivot.52.
  %282 = icmp ult i32 %46, 56
  br i1 %282, label %concatenate.pivot.54., label %concatenate.pivot.58.

concatenate.pivot.54.:                            ; preds = %concatenate.pivot.56.
  %283 = icmp ult i32 %46, 54
  br i1 %283, label %concatenate.pivot.53., label %concatenate.pivot.55.

concatenate.pivot.53.:                            ; preds = %concatenate.pivot.54.
  %284 = icmp ult i32 %46, 53
  br i1 %284, label %concatenate.pivot.52.119, label %concatenate.pivot.53.120

concatenate.pivot.52.119:                         ; preds = %concatenate.pivot.53.
  br label %concat_index_from_operand_id43

concatenate.pivot.53.120:                         ; preds = %concatenate.pivot.53.
  br label %concat_index_from_operand_id44

concatenate.pivot.55.:                            ; preds = %concatenate.pivot.54.
  %285 = icmp ult i32 %46, 55
  br i1 %285, label %concatenate.pivot.54.121, label %concatenate.pivot.55.122

concatenate.pivot.54.121:                         ; preds = %concatenate.pivot.55.
  br label %concat_index_from_operand_id43

concatenate.pivot.55.122:                         ; preds = %concatenate.pivot.55.
  br label %concat_index_from_operand_id44

concatenate.pivot.58.:                            ; preds = %concatenate.pivot.56.
  %286 = icmp ult i32 %46, 58
  br i1 %286, label %concatenate.pivot.57., label %concatenate.pivot.59.

concatenate.pivot.57.:                            ; preds = %concatenate.pivot.58.
  %287 = icmp ult i32 %46, 57
  br i1 %287, label %concatenate.pivot.56.123, label %concatenate.pivot.57.124

concatenate.pivot.56.123:                         ; preds = %concatenate.pivot.57.
  br label %concat_index_from_operand_id43

concatenate.pivot.57.124:                         ; preds = %concatenate.pivot.57.
  br label %concat_index_from_operand_id44

concatenate.pivot.59.:                            ; preds = %concatenate.pivot.58.
  %288 = icmp ult i32 %46, 59
  br i1 %288, label %concatenate.pivot.58.125, label %concatenate.pivot.59.126

concatenate.pivot.58.125:                         ; preds = %concatenate.pivot.59.
  br label %concat_index_from_operand_id43

concatenate.pivot.59.126:                         ; preds = %concatenate.pivot.59.
  br label %concat_index_from_operand_id44

concatenate.159.merge:                            ; preds = %concat_index_from_operand_id44, %concat_index_from_operand_id43, %concat_index_from_operand_id42, %concat_index_from_operand_id41, %concat_index_from_operand_id40, %concat_index_from_operand_id39, %concat_index_from_operand_id38, %concat_index_from_operand_id37, %concat_index_from_operand_id36, %concat_index_from_operand_id35, %concat_index_from_operand_id34, %concat_index_from_operand_id33, %concat_index_from_operand_id32, %concat_index_from_operand_id31, %concat_index_from_operand_id30, %concat_index_from_operand_id29, %concat_index_from_operand_id28, %concat_index_from_operand_id27, %concat_index_from_operand_id26, %concat_index_from_operand_id25, %concat_index_from_operand_id24, %concat_index_from_operand_id23, %concat_index_from_operand_id22, %concat_index_from_operand_id21, %concat_index_from_operand_id20, %concat_index_from_operand_id19, %concat_index_from_operand_id18, %concat_index_from_operand_id17, %concat_index_from_operand_id16, %concat_index_from_operand_id15, %concat_index_from_operand_id14, %concat_index_from_operand_id13, %concat_index_from_operand_id12, %concat_index_from_operand_id11, %concat_index_from_operand_id10, %concat_index_from_operand_id9, %concat_index_from_operand_id8, %concat_index_from_operand_id7, %concat_index_from_operand_id6, %concat_index_from_operand_id5, %concat_index_from_operand_id4, %concat_index_from_operand_id3, %concat_index_from_operand_id2, %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %289 = phi float [ %50, %concat_index_from_operand_id0 ], [ %53, %concat_index_from_operand_id1 ], [ %56, %concat_index_from_operand_id2 ], [ %59, %concat_index_from_operand_id3 ], [ %62, %concat_index_from_operand_id4 ], [ %65, %concat_index_from_operand_id5 ], [ %68, %concat_index_from_operand_id6 ], [ %71, %concat_index_from_operand_id7 ], [ %77, %concat_index_from_operand_id8 ], [ %80, %concat_index_from_operand_id9 ], [ %83, %concat_index_from_operand_id10 ], [ %86, %concat_index_from_operand_id11 ], [ %89, %concat_index_from_operand_id12 ], [ %92, %concat_index_from_operand_id13 ], [ %95, %concat_index_from_operand_id14 ], [ %98, %concat_index_from_operand_id15 ], [ %101, %concat_index_from_operand_id16 ], [ %104, %concat_index_from_operand_id17 ], [ %107, %concat_index_from_operand_id18 ], [ %110, %concat_index_from_operand_id19 ], [ %113, %concat_index_from_operand_id20 ], [ %116, %concat_index_from_operand_id21 ], [ %119, %concat_index_from_operand_id22 ], [ %122, %concat_index_from_operand_id23 ], [ %125, %concat_index_from_operand_id24 ], [ %128, %concat_index_from_operand_id25 ], [ %131, %concat_index_from_operand_id26 ], [ %134, %concat_index_from_operand_id27 ], [ %137, %concat_index_from_operand_id28 ], [ %140, %concat_index_from_operand_id29 ], [ %143, %concat_index_from_operand_id30 ], [ %146, %concat_index_from_operand_id31 ], [ %149, %concat_index_from_operand_id32 ], [ %152, %concat_index_from_operand_id33 ], [ %155, %concat_index_from_operand_id34 ], [ %158, %concat_index_from_operand_id35 ], [ %161, %concat_index_from_operand_id36 ], [ %164, %concat_index_from_operand_id37 ], [ %167, %concat_index_from_operand_id38 ], [ %170, %concat_index_from_operand_id39 ], [ %173, %concat_index_from_operand_id40 ], [ %199, %concat_index_from_operand_id41 ], [ %225, %concat_index_from_operand_id42 ], [ %region_0_185_constant_7066, %concat_index_from_operand_id43 ], [ %region_0_185_constant_6767, %concat_index_from_operand_id44 ]
  %Arg_2.3 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 %46, i32 %45, i32 0
  %Arg_2.3127 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %290 = call float @__nv_logf(float %Arg_2.3127)
  %multiply.161 = fmul float %289, %290
  %291 = fneg float %multiply.161
  %Arg_1.2 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 %46, i32 %45, i32 0
  %Arg_1.2128 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %292 = call float @__nv_logf(float %Arg_1.2128)
  %region_0_185_constant_70129 = load float, ptr @57, align 4
  %subtract.165 = fsub float %region_0_185_constant_70129, %289
  %multiply.166 = fmul float %292, %subtract.165
  %subtract.167 = fsub float %291, %multiply.166
  %multiply.168 = fmul float %Arg_0.13, %subtract.167
  store float %multiply.168, ptr %reduction_input_address, align 4
  %293 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_170(ptr %293, ptr %reduction_input_address, ptr %return_buffer)
  %294 = load float, ptr %return_buffer, align 4
  store float %294, ptr %293, align 4
  %295 = mul nuw nsw i32 %40, 1
  %296 = add nuw nsw i32 0, %295
  %297 = mul nuw nsw i32 %39, 960
  %298 = add nuw nsw i32 %296, %297
  %299 = urem i32 %298, 8192
  %300 = udiv i32 %298, 8192
  %301 = udiv i32 %300, 60
  %region_0_185_constant_70130 = load float, ptr @57, align 4
  %Arg_2.3131 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 %300, i32 %299, i32 0
  %Arg_2.3132 = load float, ptr %Arg_2.3131, align 4, !invariant.load !297
  %divide.175 = fdiv float %region_0_185_constant_70130, %Arg_2.3132
  %Arg_0.1133 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg0, i32 0, i32 %300, i32 %299, i32 0
  %Arg_0.1134 = load float, ptr %Arg_0.1133, align 4, !invariant.load !297
  %302 = fneg float %Arg_0.1134
  br label %concatenate.pivot.30.298

concat_index_from_operand_id0136:                 ; preds = %concatenate.pivot.9.320, %concatenate.pivot.2.306, %concatenate.pivot.0.303
  %303 = phi i32 [ 0, %concatenate.pivot.0.303 ], [ 2, %concatenate.pivot.2.306 ], [ 9, %concatenate.pivot.9.320 ]
  %304 = sub nsw i32 %300, %303
  %Arg_48.49137 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg48, i32 0, i32 %299, i32 0
  %Arg_48.49138 = load i32, ptr %Arg_48.49137, align 4, !invariant.load !297
  %305 = sitofp i32 %Arg_48.49138 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id1139:                 ; preds = %concatenate.pivot.3.309, %concatenate.pivot.1.305
  %306 = phi i32 [ 1, %concatenate.pivot.1.305 ], [ 3, %concatenate.pivot.3.309 ]
  %307 = sub nsw i32 %300, %306
  %Arg_47.48140 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg47, i32 0, i32 %299, i32 0
  %Arg_47.48141 = load i32, ptr %Arg_47.48140, align 4, !invariant.load !297
  %308 = sitofp i32 %Arg_47.48141 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id2142:                 ; preds = %concatenate.pivot.4.310
  %309 = phi i32 [ 4, %concatenate.pivot.4.310 ]
  %310 = sub nsw i32 %300, %309
  %Arg_46.47143 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg46, i32 0, i32 %299, i32 0
  %Arg_46.47144 = load i32, ptr %Arg_46.47143, align 4, !invariant.load !297
  %311 = sitofp i32 %Arg_46.47144 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id3145:                 ; preds = %concatenate.pivot.5.312
  %312 = phi i32 [ 5, %concatenate.pivot.5.312 ]
  %313 = sub nsw i32 %300, %312
  %Arg_45.46146 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg45, i32 0, i32 %299, i32 0
  %Arg_45.46147 = load i32, ptr %Arg_45.46146, align 4, !invariant.load !297
  %314 = sitofp i32 %Arg_45.46147 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id4148:                 ; preds = %concatenate.pivot.6.313
  %315 = phi i32 [ 6, %concatenate.pivot.6.313 ]
  %316 = sub nsw i32 %300, %315
  %Arg_44.45149 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg44, i32 0, i32 %299, i32 0
  %Arg_44.45150 = load i32, ptr %Arg_44.45149, align 4, !invariant.load !297
  %317 = sitofp i32 %Arg_44.45150 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id5151:                 ; preds = %concatenate.pivot.7.317
  %318 = phi i32 [ 7, %concatenate.pivot.7.317 ]
  %319 = sub nsw i32 %300, %318
  %Arg_43.44152 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg43, i32 0, i32 %299, i32 0
  %Arg_43.44153 = load i32, ptr %Arg_43.44152, align 4, !invariant.load !297
  %320 = sitofp i32 %Arg_43.44153 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id6154:                 ; preds = %concatenate.pivot.8.318
  %321 = phi i32 [ 8, %concatenate.pivot.8.318 ]
  %322 = sub nsw i32 %300, %321
  %Arg_42.43155 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg42, i32 0, i32 %299, i32 0
  %Arg_42.43156 = load i32, ptr %Arg_42.43155, align 4, !invariant.load !297
  %323 = sitofp i32 %Arg_42.43156 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id7157:                 ; preds = %concatenate.pivot.10.321
  %324 = phi i32 [ 10, %concatenate.pivot.10.321 ]
  %325 = sub nsw i32 %300, %324
  %Arg_41.42158 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg41, i32 0, i32 %299, i32 0
  %Arg_41.42159 = load i32, ptr %Arg_41.42158, align 4, !invariant.load !297
  %326 = sitofp i32 %Arg_41.42159 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id8160:                 ; preds = %concatenate.pivot.11.324
  %327 = phi i32 [ 11, %concatenate.pivot.11.324 ]
  %328 = sub nsw i32 %300, %327
  %Arg_40.41161 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg40, i32 0, i32 %299, i32 0
  %Arg_40.41162 = load i32, ptr %Arg_40.41161, align 4, !invariant.load !297
  %329 = sitofp i32 %Arg_40.41162 to float
  %region_0_185_constant_67163 = load float, ptr @56, align 4
  %compare.69164 = fcmp ogt float %329, %region_0_185_constant_67163
  %330 = zext i1 %compare.69164 to i8
  %region_0_185_constant_70165 = load float, ptr @57, align 4
  %331 = trunc i8 %330 to i1
  %332 = select i1 %331, float %region_0_185_constant_70165, float %region_0_185_constant_67163
  br label %concatenate.159.merge135

concat_index_from_operand_id9166:                 ; preds = %concatenate.pivot.12.325
  %333 = phi i32 [ 12, %concatenate.pivot.12.325 ]
  %334 = sub nsw i32 %300, %333
  %Arg_39.40167 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg39, i32 0, i32 %299, i32 0
  %Arg_39.40168 = load i32, ptr %Arg_39.40167, align 4, !invariant.load !297
  %335 = sitofp i32 %Arg_39.40168 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id10169:                ; preds = %concatenate.pivot.13.327
  %336 = phi i32 [ 13, %concatenate.pivot.13.327 ]
  %337 = sub nsw i32 %300, %336
  %Arg_38.39170 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg38, i32 0, i32 %299, i32 0
  %Arg_38.39171 = load i32, ptr %Arg_38.39170, align 4, !invariant.load !297
  %338 = sitofp i32 %Arg_38.39171 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id11172:                ; preds = %concatenate.pivot.14.328
  %339 = phi i32 [ 14, %concatenate.pivot.14.328 ]
  %340 = sub nsw i32 %300, %339
  %Arg_37.38173 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg37, i32 0, i32 %299, i32 0
  %Arg_37.38174 = load i32, ptr %Arg_37.38173, align 4, !invariant.load !297
  %341 = sitofp i32 %Arg_37.38174 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id12175:                ; preds = %concatenate.pivot.15.332
  %342 = phi i32 [ 15, %concatenate.pivot.15.332 ]
  %343 = sub nsw i32 %300, %342
  %Arg_36.37176 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg36, i32 0, i32 %299, i32 0
  %Arg_36.37177 = load i32, ptr %Arg_36.37176, align 4, !invariant.load !297
  %344 = sitofp i32 %Arg_36.37177 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id13178:                ; preds = %concatenate.pivot.16.334
  %345 = phi i32 [ 16, %concatenate.pivot.16.334 ]
  %346 = sub nsw i32 %300, %345
  %Arg_35.36179 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg35, i32 0, i32 %299, i32 0
  %Arg_35.36180 = load i32, ptr %Arg_35.36179, align 4, !invariant.load !297
  %347 = sitofp i32 %Arg_35.36180 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id14181:                ; preds = %concatenate.pivot.17.335
  %348 = phi i32 [ 17, %concatenate.pivot.17.335 ]
  %349 = sub nsw i32 %300, %348
  %Arg_34.35182 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg34, i32 0, i32 %299, i32 0
  %Arg_34.35183 = load i32, ptr %Arg_34.35182, align 4, !invariant.load !297
  %350 = sitofp i32 %Arg_34.35183 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id15184:                ; preds = %concatenate.pivot.18.338
  %351 = phi i32 [ 18, %concatenate.pivot.18.338 ]
  %352 = sub nsw i32 %300, %351
  %Arg_33.34185 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg33, i32 0, i32 %299, i32 0
  %Arg_33.34186 = load i32, ptr %Arg_33.34185, align 4, !invariant.load !297
  %353 = sitofp i32 %Arg_33.34186 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id16187:                ; preds = %concatenate.pivot.19.339
  %354 = phi i32 [ 19, %concatenate.pivot.19.339 ]
  %355 = sub nsw i32 %300, %354
  %Arg_32.33188 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg32, i32 0, i32 %299, i32 0
  %Arg_32.33189 = load i32, ptr %Arg_32.33188, align 4, !invariant.load !297
  %356 = sitofp i32 %Arg_32.33189 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id17190:                ; preds = %concatenate.pivot.20.341
  %357 = phi i32 [ 20, %concatenate.pivot.20.341 ]
  %358 = sub nsw i32 %300, %357
  %Arg_31.32191 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg31, i32 0, i32 %299, i32 0
  %Arg_31.32192 = load i32, ptr %Arg_31.32191, align 4, !invariant.load !297
  %359 = sitofp i32 %Arg_31.32192 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id18193:                ; preds = %concatenate.pivot.21.342
  %360 = phi i32 [ 21, %concatenate.pivot.21.342 ]
  %361 = sub nsw i32 %300, %360
  %Arg_30.31194 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg30, i32 0, i32 %299, i32 0
  %Arg_30.31195 = load i32, ptr %Arg_30.31194, align 4, !invariant.load !297
  %362 = sitofp i32 %Arg_30.31195 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id19196:                ; preds = %concatenate.pivot.22.346
  %363 = phi i32 [ 22, %concatenate.pivot.22.346 ]
  %364 = sub nsw i32 %300, %363
  %Arg_29.30197 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg29, i32 0, i32 %299, i32 0
  %Arg_29.30198 = load i32, ptr %Arg_29.30197, align 4, !invariant.load !297
  %365 = sitofp i32 %Arg_29.30198 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id20199:                ; preds = %concatenate.pivot.23.347
  %366 = phi i32 [ 23, %concatenate.pivot.23.347 ]
  %367 = sub nsw i32 %300, %366
  %Arg_28.29200 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg28, i32 0, i32 %299, i32 0
  %Arg_28.29201 = load i32, ptr %Arg_28.29200, align 4, !invariant.load !297
  %368 = sitofp i32 %Arg_28.29201 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id21202:                ; preds = %concatenate.pivot.24.349
  %369 = phi i32 [ 24, %concatenate.pivot.24.349 ]
  %370 = sub nsw i32 %300, %369
  %Arg_27.28203 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg27, i32 0, i32 %299, i32 0
  %Arg_27.28204 = load i32, ptr %Arg_27.28203, align 4, !invariant.load !297
  %371 = sitofp i32 %Arg_27.28204 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id22205:                ; preds = %concatenate.pivot.25.350
  %372 = phi i32 [ 25, %concatenate.pivot.25.350 ]
  %373 = sub nsw i32 %300, %372
  %Arg_26.27206 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg26, i32 0, i32 %299, i32 0
  %Arg_26.27207 = load i32, ptr %Arg_26.27206, align 4, !invariant.load !297
  %374 = sitofp i32 %Arg_26.27207 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id23208:                ; preds = %concatenate.pivot.26.353
  %375 = phi i32 [ 26, %concatenate.pivot.26.353 ]
  %376 = sub nsw i32 %300, %375
  %Arg_25.26209 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg25, i32 0, i32 %299, i32 0
  %Arg_25.26210 = load i32, ptr %Arg_25.26209, align 4, !invariant.load !297
  %377 = sitofp i32 %Arg_25.26210 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id24211:                ; preds = %concatenate.pivot.27.354
  %378 = phi i32 [ 27, %concatenate.pivot.27.354 ]
  %379 = sub nsw i32 %300, %378
  %Arg_24.25212 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg24, i32 0, i32 %299, i32 0
  %Arg_24.25213 = load i32, ptr %Arg_24.25212, align 4, !invariant.load !297
  %380 = sitofp i32 %Arg_24.25213 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id25214:                ; preds = %concatenate.pivot.28.356
  %381 = phi i32 [ 28, %concatenate.pivot.28.356 ]
  %382 = sub nsw i32 %300, %381
  %Arg_23.24215 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg23, i32 0, i32 %299, i32 0
  %Arg_23.24216 = load i32, ptr %Arg_23.24215, align 4, !invariant.load !297
  %383 = sitofp i32 %Arg_23.24216 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id26217:                ; preds = %concatenate.pivot.29.357
  %384 = phi i32 [ 29, %concatenate.pivot.29.357 ]
  %385 = sub nsw i32 %300, %384
  %Arg_22.23218 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg22, i32 0, i32 %299, i32 0
  %Arg_22.23219 = load i32, ptr %Arg_22.23218, align 4, !invariant.load !297
  %386 = sitofp i32 %Arg_22.23219 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id27220:                ; preds = %concatenate.pivot.30.362
  %387 = phi i32 [ 30, %concatenate.pivot.30.362 ]
  %388 = sub nsw i32 %300, %387
  %Arg_21.22221 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg21, i32 0, i32 %299, i32 0
  %Arg_21.22222 = load i32, ptr %Arg_21.22221, align 4, !invariant.load !297
  %389 = sitofp i32 %Arg_21.22222 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id28223:                ; preds = %concatenate.pivot.31.364
  %390 = phi i32 [ 31, %concatenate.pivot.31.364 ]
  %391 = sub nsw i32 %300, %390
  %Arg_20.21224 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg20, i32 0, i32 %299, i32 0
  %Arg_20.21225 = load i32, ptr %Arg_20.21224, align 4, !invariant.load !297
  %392 = sitofp i32 %Arg_20.21225 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id29226:                ; preds = %concatenate.pivot.32.365
  %393 = phi i32 [ 32, %concatenate.pivot.32.365 ]
  %394 = sub nsw i32 %300, %393
  %Arg_19.20227 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg19, i32 0, i32 %299, i32 0
  %Arg_19.20228 = load i32, ptr %Arg_19.20227, align 4, !invariant.load !297
  %395 = sitofp i32 %Arg_19.20228 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id30229:                ; preds = %concatenate.pivot.33.368
  %396 = phi i32 [ 33, %concatenate.pivot.33.368 ]
  %397 = sub nsw i32 %300, %396
  %Arg_18.19230 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg18, i32 0, i32 %299, i32 0
  %Arg_18.19231 = load i32, ptr %Arg_18.19230, align 4, !invariant.load !297
  %398 = sitofp i32 %Arg_18.19231 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id31232:                ; preds = %concatenate.pivot.34.369
  %399 = phi i32 [ 34, %concatenate.pivot.34.369 ]
  %400 = sub nsw i32 %300, %399
  %Arg_17.18233 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg17, i32 0, i32 %299, i32 0
  %Arg_17.18234 = load i32, ptr %Arg_17.18233, align 4, !invariant.load !297
  %401 = sitofp i32 %Arg_17.18234 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id32235:                ; preds = %concatenate.pivot.35.371
  %402 = phi i32 [ 35, %concatenate.pivot.35.371 ]
  %403 = sub nsw i32 %300, %402
  %Arg_16.17236 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg16, i32 0, i32 %299, i32 0
  %Arg_16.17237 = load i32, ptr %Arg_16.17236, align 4, !invariant.load !297
  %404 = sitofp i32 %Arg_16.17237 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id33238:                ; preds = %concatenate.pivot.36.372
  %405 = phi i32 [ 36, %concatenate.pivot.36.372 ]
  %406 = sub nsw i32 %300, %405
  %Arg_15.16239 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg15, i32 0, i32 %299, i32 0
  %Arg_15.16240 = load i32, ptr %Arg_15.16239, align 4, !invariant.load !297
  %407 = sitofp i32 %Arg_15.16240 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id34241:                ; preds = %concatenate.pivot.37.376
  %408 = phi i32 [ 37, %concatenate.pivot.37.376 ]
  %409 = sub nsw i32 %300, %408
  %Arg_14.15242 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg14, i32 0, i32 %299, i32 0
  %Arg_14.15243 = load i32, ptr %Arg_14.15242, align 4, !invariant.load !297
  %410 = sitofp i32 %Arg_14.15243 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id35244:                ; preds = %concatenate.pivot.38.377
  %411 = phi i32 [ 38, %concatenate.pivot.38.377 ]
  %412 = sub nsw i32 %300, %411
  %Arg_13.14245 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg13, i32 0, i32 %299, i32 0
  %Arg_13.14246 = load i32, ptr %Arg_13.14245, align 4, !invariant.load !297
  %413 = sitofp i32 %Arg_13.14246 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id36247:                ; preds = %concatenate.pivot.39.379
  %414 = phi i32 [ 39, %concatenate.pivot.39.379 ]
  %415 = sub nsw i32 %300, %414
  %Arg_12.13248 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg12, i32 0, i32 %299, i32 0
  %Arg_12.13249 = load i32, ptr %Arg_12.13248, align 4, !invariant.load !297
  %416 = sitofp i32 %Arg_12.13249 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id37250:                ; preds = %concatenate.pivot.40.380
  %417 = phi i32 [ 40, %concatenate.pivot.40.380 ]
  %418 = sub nsw i32 %300, %417
  %Arg_11.12251 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg11, i32 0, i32 %299, i32 0
  %Arg_11.12252 = load i32, ptr %Arg_11.12251, align 4, !invariant.load !297
  %419 = sitofp i32 %Arg_11.12252 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id38253:                ; preds = %concatenate.pivot.41.383
  %420 = phi i32 [ 41, %concatenate.pivot.41.383 ]
  %421 = sub nsw i32 %300, %420
  %Arg_10.11254 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg10, i32 0, i32 %299, i32 0
  %Arg_10.11255 = load i32, ptr %Arg_10.11254, align 4, !invariant.load !297
  %422 = sitofp i32 %Arg_10.11255 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id39256:                ; preds = %concatenate.pivot.42.384
  %423 = phi i32 [ 42, %concatenate.pivot.42.384 ]
  %424 = sub nsw i32 %300, %423
  %Arg_9.10257 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg9, i32 0, i32 %299, i32 0
  %Arg_9.10258 = load i32, ptr %Arg_9.10257, align 4, !invariant.load !297
  %425 = sitofp i32 %Arg_9.10258 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id40259:                ; preds = %concatenate.pivot.43.386
  %426 = phi i32 [ 43, %concatenate.pivot.43.386 ]
  %427 = sub nsw i32 %300, %426
  %Arg_8.9260 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg8, i32 0, i32 %299, i32 0
  %Arg_8.9261 = load i32, ptr %Arg_8.9260, align 4, !invariant.load !297
  %428 = sitofp i32 %Arg_8.9261 to float
  br label %concatenate.159.merge135

concat_index_from_operand_id41262:                ; preds = %concatenate.pivot.44.387
  %429 = phi i32 [ 44, %concatenate.pivot.44.387 ]
  %430 = sub nsw i32 %300, %429
  %Arg_6.7263 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg6, i32 0, i32 %299, i32 0
  %Arg_6.7264 = load i32, ptr %Arg_6.7263, align 4, !invariant.load !297
  %431 = sitofp i32 %Arg_6.7264 to float
  %Arg_5.6265 = getelementptr inbounds [8192 x [1 x float]], ptr %arg5, i32 0, i32 %299, i32 0
  %Arg_5.6266 = load float, ptr %Arg_5.6265, align 4, !invariant.load !297
  %432 = fcmp oge float %431, %Arg_5.6266
  %433 = fcmp une float %431, %431
  %434 = or i1 %432, %433
  %maximum.139267 = select i1 %434, float %431, float %Arg_5.6266
  %Arg_4.5268 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg4, i32 0, i32 %299, i32 0
  %Arg_4.5269 = load i32, ptr %Arg_4.5268, align 4, !invariant.load !297
  %435 = sitofp i32 %Arg_4.5269 to float
  %436 = fptosi float %435 to i32
  %437 = fcmp ole float %435, 0xC1E0000000000000
  %438 = select i1 %437, i32 -2147483648, i32 %436
  %439 = fcmp oge float %435, 0x41E0000000000000
  %440 = select i1 %439, i32 2147483647, i32 %438
  %441 = fcmp uno float %435, %435
  %442 = select i1 %441, i32 0, i32 %440
  %region_0_185_constant_142270 = load i32, ptr @59, align 4
  %443 = and i32 %442, %region_0_185_constant_142270
  %region_0_185_constant_145271 = load i32, ptr @58, align 4
  %444 = icmp eq i32 %443, %region_0_185_constant_145271
  %445 = zext i1 %444 to i8
  %region_0_185_constant_67272 = load float, ptr @56, align 4
  %region_0_185_constant_70273 = load float, ptr @57, align 4
  %446 = trunc i8 %445 to i1
  %447 = select i1 %446, float %region_0_185_constant_67272, float %region_0_185_constant_70273
  %448 = fcmp oge float %maximum.139267, %447
  %449 = fcmp une float %maximum.139267, %maximum.139267
  %450 = or i1 %448, %449
  %maximum.149274 = select i1 %450, float %maximum.139267, float %447
  %compare.150275 = fcmp ogt float %maximum.149274, %region_0_185_constant_67272
  %451 = zext i1 %compare.150275 to i8
  %Arg_7.8276 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg7, i32 0, i32 %299, i32 0
  %Arg_7.8277 = load i32, ptr %Arg_7.8276, align 4, !invariant.load !297
  %452 = sitofp i32 %Arg_7.8277 to float
  %453 = trunc i8 %451 to i1
  %454 = select i1 %453, float %452, float %region_0_185_constant_67272
  br label %concatenate.159.merge135

concat_index_from_operand_id42278:                ; preds = %concatenate.pivot.45.391
  %455 = phi i32 [ 45, %concatenate.pivot.45.391 ]
  %456 = sub nsw i32 %300, %455
  %Arg_6.7279 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg6, i32 0, i32 %299, i32 0
  %Arg_6.7280 = load i32, ptr %Arg_6.7279, align 4, !invariant.load !297
  %457 = sitofp i32 %Arg_6.7280 to float
  %Arg_5.6281 = getelementptr inbounds [8192 x [1 x float]], ptr %arg5, i32 0, i32 %299, i32 0
  %Arg_5.6282 = load float, ptr %Arg_5.6281, align 4, !invariant.load !297
  %458 = fcmp oge float %457, %Arg_5.6282
  %459 = fcmp une float %457, %457
  %460 = or i1 %458, %459
  %maximum.139283 = select i1 %460, float %457, float %Arg_5.6282
  %Arg_4.5284 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg4, i32 0, i32 %299, i32 0
  %Arg_4.5285 = load i32, ptr %Arg_4.5284, align 4, !invariant.load !297
  %461 = sitofp i32 %Arg_4.5285 to float
  %462 = fptosi float %461 to i32
  %463 = fcmp ole float %461, 0xC1E0000000000000
  %464 = select i1 %463, i32 -2147483648, i32 %462
  %465 = fcmp oge float %461, 0x41E0000000000000
  %466 = select i1 %465, i32 2147483647, i32 %464
  %467 = fcmp uno float %461, %461
  %468 = select i1 %467, i32 0, i32 %466
  %region_0_185_constant_142286 = load i32, ptr @59, align 4
  %469 = and i32 %468, %region_0_185_constant_142286
  %region_0_185_constant_145287 = load i32, ptr @58, align 4
  %470 = icmp eq i32 %469, %region_0_185_constant_145287
  %471 = zext i1 %470 to i8
  %region_0_185_constant_67288 = load float, ptr @56, align 4
  %region_0_185_constant_70289 = load float, ptr @57, align 4
  %472 = trunc i8 %471 to i1
  %473 = select i1 %472, float %region_0_185_constant_67288, float %region_0_185_constant_70289
  %474 = fcmp oge float %maximum.139283, %473
  %475 = fcmp une float %maximum.139283, %maximum.139283
  %476 = or i1 %474, %475
  %maximum.149290 = select i1 %476, float %maximum.139283, float %473
  %compare.150291 = fcmp ogt float %maximum.149290, %region_0_185_constant_67288
  %477 = zext i1 %compare.150291 to i8
  %Arg_3.4292 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg3, i32 0, i32 %299, i32 0
  %Arg_3.4293 = load i32, ptr %Arg_3.4292, align 4, !invariant.load !297
  %478 = sitofp i32 %Arg_3.4293 to float
  %479 = trunc i8 %477 to i1
  %480 = select i1 %479, float %478, float %region_0_185_constant_67288
  br label %concatenate.159.merge135

concat_index_from_operand_id43294:                ; preds = %concatenate.pivot.58.415, %concatenate.pivot.56.412, %concatenate.pivot.54.408, %concatenate.pivot.52.405, %concatenate.pivot.50.400, %concatenate.pivot.48.397, %concatenate.pivot.46.393
  %481 = phi i32 [ 46, %concatenate.pivot.46.393 ], [ 48, %concatenate.pivot.48.397 ], [ 50, %concatenate.pivot.50.400 ], [ 52, %concatenate.pivot.52.405 ], [ 54, %concatenate.pivot.54.408 ], [ 56, %concatenate.pivot.56.412 ], [ 58, %concatenate.pivot.58.415 ]
  %482 = sub nsw i32 %300, %481
  %region_0_185_constant_70295 = load float, ptr @57, align 4
  br label %concatenate.159.merge135

concat_index_from_operand_id44296:                ; preds = %concatenate.pivot.59.416, %concatenate.pivot.57.413, %concatenate.pivot.55.409, %concatenate.pivot.53.406, %concatenate.pivot.51.401, %concatenate.pivot.49.398, %concatenate.pivot.47.394
  %483 = phi i32 [ 47, %concatenate.pivot.47.394 ], [ 49, %concatenate.pivot.49.398 ], [ 51, %concatenate.pivot.51.401 ], [ 53, %concatenate.pivot.53.406 ], [ 55, %concatenate.pivot.55.409 ], [ 57, %concatenate.pivot.57.413 ], [ 59, %concatenate.pivot.59.416 ]
  %484 = sub nsw i32 %300, %483
  %region_0_185_constant_67297 = load float, ptr @56, align 4
  br label %concatenate.159.merge135

concatenate.pivot.30.298:                         ; preds = %concatenate.159.merge
  %485 = icmp ult i32 %300, 30
  br i1 %485, label %concatenate.pivot.15.299, label %concatenate.pivot.45.358

concatenate.pivot.15.299:                         ; preds = %concatenate.pivot.30.298
  %486 = icmp ult i32 %300, 15
  br i1 %486, label %concatenate.pivot.7.300, label %concatenate.pivot.22.329

concatenate.pivot.7.300:                          ; preds = %concatenate.pivot.15.299
  %487 = icmp ult i32 %300, 7
  br i1 %487, label %concatenate.pivot.3.301, label %concatenate.pivot.11.314

concatenate.pivot.3.301:                          ; preds = %concatenate.pivot.7.300
  %488 = icmp ult i32 %300, 3
  br i1 %488, label %concatenate.pivot.1.302, label %concatenate.pivot.5.307

concatenate.pivot.1.302:                          ; preds = %concatenate.pivot.3.301
  %489 = icmp ult i32 %300, 1
  br i1 %489, label %concatenate.pivot.0.303, label %concatenate.pivot.2.304

concatenate.pivot.0.303:                          ; preds = %concatenate.pivot.1.302
  br label %concat_index_from_operand_id0136

concatenate.pivot.2.304:                          ; preds = %concatenate.pivot.1.302
  %490 = icmp ult i32 %300, 2
  br i1 %490, label %concatenate.pivot.1.305, label %concatenate.pivot.2.306

concatenate.pivot.1.305:                          ; preds = %concatenate.pivot.2.304
  br label %concat_index_from_operand_id1139

concatenate.pivot.2.306:                          ; preds = %concatenate.pivot.2.304
  br label %concat_index_from_operand_id0136

concatenate.pivot.5.307:                          ; preds = %concatenate.pivot.3.301
  %491 = icmp ult i32 %300, 5
  br i1 %491, label %concatenate.pivot.4.308, label %concatenate.pivot.6.311

concatenate.pivot.4.308:                          ; preds = %concatenate.pivot.5.307
  %492 = icmp ult i32 %300, 4
  br i1 %492, label %concatenate.pivot.3.309, label %concatenate.pivot.4.310

concatenate.pivot.3.309:                          ; preds = %concatenate.pivot.4.308
  br label %concat_index_from_operand_id1139

concatenate.pivot.4.310:                          ; preds = %concatenate.pivot.4.308
  br label %concat_index_from_operand_id2142

concatenate.pivot.6.311:                          ; preds = %concatenate.pivot.5.307
  %493 = icmp ult i32 %300, 6
  br i1 %493, label %concatenate.pivot.5.312, label %concatenate.pivot.6.313

concatenate.pivot.5.312:                          ; preds = %concatenate.pivot.6.311
  br label %concat_index_from_operand_id3145

concatenate.pivot.6.313:                          ; preds = %concatenate.pivot.6.311
  br label %concat_index_from_operand_id4148

concatenate.pivot.11.314:                         ; preds = %concatenate.pivot.7.300
  %494 = icmp ult i32 %300, 11
  br i1 %494, label %concatenate.pivot.9.315, label %concatenate.pivot.13.322

concatenate.pivot.9.315:                          ; preds = %concatenate.pivot.11.314
  %495 = icmp ult i32 %300, 9
  br i1 %495, label %concatenate.pivot.8.316, label %concatenate.pivot.10.319

concatenate.pivot.8.316:                          ; preds = %concatenate.pivot.9.315
  %496 = icmp ult i32 %300, 8
  br i1 %496, label %concatenate.pivot.7.317, label %concatenate.pivot.8.318

concatenate.pivot.7.317:                          ; preds = %concatenate.pivot.8.316
  br label %concat_index_from_operand_id5151

concatenate.pivot.8.318:                          ; preds = %concatenate.pivot.8.316
  br label %concat_index_from_operand_id6154

concatenate.pivot.10.319:                         ; preds = %concatenate.pivot.9.315
  %497 = icmp ult i32 %300, 10
  br i1 %497, label %concatenate.pivot.9.320, label %concatenate.pivot.10.321

concatenate.pivot.9.320:                          ; preds = %concatenate.pivot.10.319
  br label %concat_index_from_operand_id0136

concatenate.pivot.10.321:                         ; preds = %concatenate.pivot.10.319
  br label %concat_index_from_operand_id7157

concatenate.pivot.13.322:                         ; preds = %concatenate.pivot.11.314
  %498 = icmp ult i32 %300, 13
  br i1 %498, label %concatenate.pivot.12.323, label %concatenate.pivot.14.326

concatenate.pivot.12.323:                         ; preds = %concatenate.pivot.13.322
  %499 = icmp ult i32 %300, 12
  br i1 %499, label %concatenate.pivot.11.324, label %concatenate.pivot.12.325

concatenate.pivot.11.324:                         ; preds = %concatenate.pivot.12.323
  br label %concat_index_from_operand_id8160

concatenate.pivot.12.325:                         ; preds = %concatenate.pivot.12.323
  br label %concat_index_from_operand_id9166

concatenate.pivot.14.326:                         ; preds = %concatenate.pivot.13.322
  %500 = icmp ult i32 %300, 14
  br i1 %500, label %concatenate.pivot.13.327, label %concatenate.pivot.14.328

concatenate.pivot.13.327:                         ; preds = %concatenate.pivot.14.326
  br label %concat_index_from_operand_id10169

concatenate.pivot.14.328:                         ; preds = %concatenate.pivot.14.326
  br label %concat_index_from_operand_id11172

concatenate.pivot.22.329:                         ; preds = %concatenate.pivot.15.299
  %501 = icmp ult i32 %300, 22
  br i1 %501, label %concatenate.pivot.18.330, label %concatenate.pivot.26.343

concatenate.pivot.18.330:                         ; preds = %concatenate.pivot.22.329
  %502 = icmp ult i32 %300, 18
  br i1 %502, label %concatenate.pivot.16.331, label %concatenate.pivot.20.336

concatenate.pivot.16.331:                         ; preds = %concatenate.pivot.18.330
  %503 = icmp ult i32 %300, 16
  br i1 %503, label %concatenate.pivot.15.332, label %concatenate.pivot.17.333

concatenate.pivot.15.332:                         ; preds = %concatenate.pivot.16.331
  br label %concat_index_from_operand_id12175

concatenate.pivot.17.333:                         ; preds = %concatenate.pivot.16.331
  %504 = icmp ult i32 %300, 17
  br i1 %504, label %concatenate.pivot.16.334, label %concatenate.pivot.17.335

concatenate.pivot.16.334:                         ; preds = %concatenate.pivot.17.333
  br label %concat_index_from_operand_id13178

concatenate.pivot.17.335:                         ; preds = %concatenate.pivot.17.333
  br label %concat_index_from_operand_id14181

concatenate.pivot.20.336:                         ; preds = %concatenate.pivot.18.330
  %505 = icmp ult i32 %300, 20
  br i1 %505, label %concatenate.pivot.19.337, label %concatenate.pivot.21.340

concatenate.pivot.19.337:                         ; preds = %concatenate.pivot.20.336
  %506 = icmp ult i32 %300, 19
  br i1 %506, label %concatenate.pivot.18.338, label %concatenate.pivot.19.339

concatenate.pivot.18.338:                         ; preds = %concatenate.pivot.19.337
  br label %concat_index_from_operand_id15184

concatenate.pivot.19.339:                         ; preds = %concatenate.pivot.19.337
  br label %concat_index_from_operand_id16187

concatenate.pivot.21.340:                         ; preds = %concatenate.pivot.20.336
  %507 = icmp ult i32 %300, 21
  br i1 %507, label %concatenate.pivot.20.341, label %concatenate.pivot.21.342

concatenate.pivot.20.341:                         ; preds = %concatenate.pivot.21.340
  br label %concat_index_from_operand_id17190

concatenate.pivot.21.342:                         ; preds = %concatenate.pivot.21.340
  br label %concat_index_from_operand_id18193

concatenate.pivot.26.343:                         ; preds = %concatenate.pivot.22.329
  %508 = icmp ult i32 %300, 26
  br i1 %508, label %concatenate.pivot.24.344, label %concatenate.pivot.28.351

concatenate.pivot.24.344:                         ; preds = %concatenate.pivot.26.343
  %509 = icmp ult i32 %300, 24
  br i1 %509, label %concatenate.pivot.23.345, label %concatenate.pivot.25.348

concatenate.pivot.23.345:                         ; preds = %concatenate.pivot.24.344
  %510 = icmp ult i32 %300, 23
  br i1 %510, label %concatenate.pivot.22.346, label %concatenate.pivot.23.347

concatenate.pivot.22.346:                         ; preds = %concatenate.pivot.23.345
  br label %concat_index_from_operand_id19196

concatenate.pivot.23.347:                         ; preds = %concatenate.pivot.23.345
  br label %concat_index_from_operand_id20199

concatenate.pivot.25.348:                         ; preds = %concatenate.pivot.24.344
  %511 = icmp ult i32 %300, 25
  br i1 %511, label %concatenate.pivot.24.349, label %concatenate.pivot.25.350

concatenate.pivot.24.349:                         ; preds = %concatenate.pivot.25.348
  br label %concat_index_from_operand_id21202

concatenate.pivot.25.350:                         ; preds = %concatenate.pivot.25.348
  br label %concat_index_from_operand_id22205

concatenate.pivot.28.351:                         ; preds = %concatenate.pivot.26.343
  %512 = icmp ult i32 %300, 28
  br i1 %512, label %concatenate.pivot.27.352, label %concatenate.pivot.29.355

concatenate.pivot.27.352:                         ; preds = %concatenate.pivot.28.351
  %513 = icmp ult i32 %300, 27
  br i1 %513, label %concatenate.pivot.26.353, label %concatenate.pivot.27.354

concatenate.pivot.26.353:                         ; preds = %concatenate.pivot.27.352
  br label %concat_index_from_operand_id23208

concatenate.pivot.27.354:                         ; preds = %concatenate.pivot.27.352
  br label %concat_index_from_operand_id24211

concatenate.pivot.29.355:                         ; preds = %concatenate.pivot.28.351
  %514 = icmp ult i32 %300, 29
  br i1 %514, label %concatenate.pivot.28.356, label %concatenate.pivot.29.357

concatenate.pivot.28.356:                         ; preds = %concatenate.pivot.29.355
  br label %concat_index_from_operand_id25214

concatenate.pivot.29.357:                         ; preds = %concatenate.pivot.29.355
  br label %concat_index_from_operand_id26217

concatenate.pivot.45.358:                         ; preds = %concatenate.pivot.30.298
  %515 = icmp ult i32 %300, 45
  br i1 %515, label %concatenate.pivot.37.359, label %concatenate.pivot.52.388

concatenate.pivot.37.359:                         ; preds = %concatenate.pivot.45.358
  %516 = icmp ult i32 %300, 37
  br i1 %516, label %concatenate.pivot.33.360, label %concatenate.pivot.41.373

concatenate.pivot.33.360:                         ; preds = %concatenate.pivot.37.359
  %517 = icmp ult i32 %300, 33
  br i1 %517, label %concatenate.pivot.31.361, label %concatenate.pivot.35.366

concatenate.pivot.31.361:                         ; preds = %concatenate.pivot.33.360
  %518 = icmp ult i32 %300, 31
  br i1 %518, label %concatenate.pivot.30.362, label %concatenate.pivot.32.363

concatenate.pivot.30.362:                         ; preds = %concatenate.pivot.31.361
  br label %concat_index_from_operand_id27220

concatenate.pivot.32.363:                         ; preds = %concatenate.pivot.31.361
  %519 = icmp ult i32 %300, 32
  br i1 %519, label %concatenate.pivot.31.364, label %concatenate.pivot.32.365

concatenate.pivot.31.364:                         ; preds = %concatenate.pivot.32.363
  br label %concat_index_from_operand_id28223

concatenate.pivot.32.365:                         ; preds = %concatenate.pivot.32.363
  br label %concat_index_from_operand_id29226

concatenate.pivot.35.366:                         ; preds = %concatenate.pivot.33.360
  %520 = icmp ult i32 %300, 35
  br i1 %520, label %concatenate.pivot.34.367, label %concatenate.pivot.36.370

concatenate.pivot.34.367:                         ; preds = %concatenate.pivot.35.366
  %521 = icmp ult i32 %300, 34
  br i1 %521, label %concatenate.pivot.33.368, label %concatenate.pivot.34.369

concatenate.pivot.33.368:                         ; preds = %concatenate.pivot.34.367
  br label %concat_index_from_operand_id30229

concatenate.pivot.34.369:                         ; preds = %concatenate.pivot.34.367
  br label %concat_index_from_operand_id31232

concatenate.pivot.36.370:                         ; preds = %concatenate.pivot.35.366
  %522 = icmp ult i32 %300, 36
  br i1 %522, label %concatenate.pivot.35.371, label %concatenate.pivot.36.372

concatenate.pivot.35.371:                         ; preds = %concatenate.pivot.36.370
  br label %concat_index_from_operand_id32235

concatenate.pivot.36.372:                         ; preds = %concatenate.pivot.36.370
  br label %concat_index_from_operand_id33238

concatenate.pivot.41.373:                         ; preds = %concatenate.pivot.37.359
  %523 = icmp ult i32 %300, 41
  br i1 %523, label %concatenate.pivot.39.374, label %concatenate.pivot.43.381

concatenate.pivot.39.374:                         ; preds = %concatenate.pivot.41.373
  %524 = icmp ult i32 %300, 39
  br i1 %524, label %concatenate.pivot.38.375, label %concatenate.pivot.40.378

concatenate.pivot.38.375:                         ; preds = %concatenate.pivot.39.374
  %525 = icmp ult i32 %300, 38
  br i1 %525, label %concatenate.pivot.37.376, label %concatenate.pivot.38.377

concatenate.pivot.37.376:                         ; preds = %concatenate.pivot.38.375
  br label %concat_index_from_operand_id34241

concatenate.pivot.38.377:                         ; preds = %concatenate.pivot.38.375
  br label %concat_index_from_operand_id35244

concatenate.pivot.40.378:                         ; preds = %concatenate.pivot.39.374
  %526 = icmp ult i32 %300, 40
  br i1 %526, label %concatenate.pivot.39.379, label %concatenate.pivot.40.380

concatenate.pivot.39.379:                         ; preds = %concatenate.pivot.40.378
  br label %concat_index_from_operand_id36247

concatenate.pivot.40.380:                         ; preds = %concatenate.pivot.40.378
  br label %concat_index_from_operand_id37250

concatenate.pivot.43.381:                         ; preds = %concatenate.pivot.41.373
  %527 = icmp ult i32 %300, 43
  br i1 %527, label %concatenate.pivot.42.382, label %concatenate.pivot.44.385

concatenate.pivot.42.382:                         ; preds = %concatenate.pivot.43.381
  %528 = icmp ult i32 %300, 42
  br i1 %528, label %concatenate.pivot.41.383, label %concatenate.pivot.42.384

concatenate.pivot.41.383:                         ; preds = %concatenate.pivot.42.382
  br label %concat_index_from_operand_id38253

concatenate.pivot.42.384:                         ; preds = %concatenate.pivot.42.382
  br label %concat_index_from_operand_id39256

concatenate.pivot.44.385:                         ; preds = %concatenate.pivot.43.381
  %529 = icmp ult i32 %300, 44
  br i1 %529, label %concatenate.pivot.43.386, label %concatenate.pivot.44.387

concatenate.pivot.43.386:                         ; preds = %concatenate.pivot.44.385
  br label %concat_index_from_operand_id40259

concatenate.pivot.44.387:                         ; preds = %concatenate.pivot.44.385
  br label %concat_index_from_operand_id41262

concatenate.pivot.52.388:                         ; preds = %concatenate.pivot.45.358
  %530 = icmp ult i32 %300, 52
  br i1 %530, label %concatenate.pivot.48.389, label %concatenate.pivot.56.402

concatenate.pivot.48.389:                         ; preds = %concatenate.pivot.52.388
  %531 = icmp ult i32 %300, 48
  br i1 %531, label %concatenate.pivot.46.390, label %concatenate.pivot.50.395

concatenate.pivot.46.390:                         ; preds = %concatenate.pivot.48.389
  %532 = icmp ult i32 %300, 46
  br i1 %532, label %concatenate.pivot.45.391, label %concatenate.pivot.47.392

concatenate.pivot.45.391:                         ; preds = %concatenate.pivot.46.390
  br label %concat_index_from_operand_id42278

concatenate.pivot.47.392:                         ; preds = %concatenate.pivot.46.390
  %533 = icmp ult i32 %300, 47
  br i1 %533, label %concatenate.pivot.46.393, label %concatenate.pivot.47.394

concatenate.pivot.46.393:                         ; preds = %concatenate.pivot.47.392
  br label %concat_index_from_operand_id43294

concatenate.pivot.47.394:                         ; preds = %concatenate.pivot.47.392
  br label %concat_index_from_operand_id44296

concatenate.pivot.50.395:                         ; preds = %concatenate.pivot.48.389
  %534 = icmp ult i32 %300, 50
  br i1 %534, label %concatenate.pivot.49.396, label %concatenate.pivot.51.399

concatenate.pivot.49.396:                         ; preds = %concatenate.pivot.50.395
  %535 = icmp ult i32 %300, 49
  br i1 %535, label %concatenate.pivot.48.397, label %concatenate.pivot.49.398

concatenate.pivot.48.397:                         ; preds = %concatenate.pivot.49.396
  br label %concat_index_from_operand_id43294

concatenate.pivot.49.398:                         ; preds = %concatenate.pivot.49.396
  br label %concat_index_from_operand_id44296

concatenate.pivot.51.399:                         ; preds = %concatenate.pivot.50.395
  %536 = icmp ult i32 %300, 51
  br i1 %536, label %concatenate.pivot.50.400, label %concatenate.pivot.51.401

concatenate.pivot.50.400:                         ; preds = %concatenate.pivot.51.399
  br label %concat_index_from_operand_id43294

concatenate.pivot.51.401:                         ; preds = %concatenate.pivot.51.399
  br label %concat_index_from_operand_id44296

concatenate.pivot.56.402:                         ; preds = %concatenate.pivot.52.388
  %537 = icmp ult i32 %300, 56
  br i1 %537, label %concatenate.pivot.54.403, label %concatenate.pivot.58.410

concatenate.pivot.54.403:                         ; preds = %concatenate.pivot.56.402
  %538 = icmp ult i32 %300, 54
  br i1 %538, label %concatenate.pivot.53.404, label %concatenate.pivot.55.407

concatenate.pivot.53.404:                         ; preds = %concatenate.pivot.54.403
  %539 = icmp ult i32 %300, 53
  br i1 %539, label %concatenate.pivot.52.405, label %concatenate.pivot.53.406

concatenate.pivot.52.405:                         ; preds = %concatenate.pivot.53.404
  br label %concat_index_from_operand_id43294

concatenate.pivot.53.406:                         ; preds = %concatenate.pivot.53.404
  br label %concat_index_from_operand_id44296

concatenate.pivot.55.407:                         ; preds = %concatenate.pivot.54.403
  %540 = icmp ult i32 %300, 55
  br i1 %540, label %concatenate.pivot.54.408, label %concatenate.pivot.55.409

concatenate.pivot.54.408:                         ; preds = %concatenate.pivot.55.407
  br label %concat_index_from_operand_id43294

concatenate.pivot.55.409:                         ; preds = %concatenate.pivot.55.407
  br label %concat_index_from_operand_id44296

concatenate.pivot.58.410:                         ; preds = %concatenate.pivot.56.402
  %541 = icmp ult i32 %300, 58
  br i1 %541, label %concatenate.pivot.57.411, label %concatenate.pivot.59.414

concatenate.pivot.57.411:                         ; preds = %concatenate.pivot.58.410
  %542 = icmp ult i32 %300, 57
  br i1 %542, label %concatenate.pivot.56.412, label %concatenate.pivot.57.413

concatenate.pivot.56.412:                         ; preds = %concatenate.pivot.57.411
  br label %concat_index_from_operand_id43294

concatenate.pivot.57.413:                         ; preds = %concatenate.pivot.57.411
  br label %concat_index_from_operand_id44296

concatenate.pivot.59.414:                         ; preds = %concatenate.pivot.58.410
  %543 = icmp ult i32 %300, 59
  br i1 %543, label %concatenate.pivot.58.415, label %concatenate.pivot.59.416

concatenate.pivot.58.415:                         ; preds = %concatenate.pivot.59.414
  br label %concat_index_from_operand_id43294

concatenate.pivot.59.416:                         ; preds = %concatenate.pivot.59.414
  br label %concat_index_from_operand_id44296

concatenate.159.merge135:                         ; preds = %concat_index_from_operand_id44296, %concat_index_from_operand_id43294, %concat_index_from_operand_id42278, %concat_index_from_operand_id41262, %concat_index_from_operand_id40259, %concat_index_from_operand_id39256, %concat_index_from_operand_id38253, %concat_index_from_operand_id37250, %concat_index_from_operand_id36247, %concat_index_from_operand_id35244, %concat_index_from_operand_id34241, %concat_index_from_operand_id33238, %concat_index_from_operand_id32235, %concat_index_from_operand_id31232, %concat_index_from_operand_id30229, %concat_index_from_operand_id29226, %concat_index_from_operand_id28223, %concat_index_from_operand_id27220, %concat_index_from_operand_id26217, %concat_index_from_operand_id25214, %concat_index_from_operand_id24211, %concat_index_from_operand_id23208, %concat_index_from_operand_id22205, %concat_index_from_operand_id21202, %concat_index_from_operand_id20199, %concat_index_from_operand_id19196, %concat_index_from_operand_id18193, %concat_index_from_operand_id17190, %concat_index_from_operand_id16187, %concat_index_from_operand_id15184, %concat_index_from_operand_id14181, %concat_index_from_operand_id13178, %concat_index_from_operand_id12175, %concat_index_from_operand_id11172, %concat_index_from_operand_id10169, %concat_index_from_operand_id9166, %concat_index_from_operand_id8160, %concat_index_from_operand_id7157, %concat_index_from_operand_id6154, %concat_index_from_operand_id5151, %concat_index_from_operand_id4148, %concat_index_from_operand_id3145, %concat_index_from_operand_id2142, %concat_index_from_operand_id1139, %concat_index_from_operand_id0136
  %544 = phi float [ %305, %concat_index_from_operand_id0136 ], [ %308, %concat_index_from_operand_id1139 ], [ %311, %concat_index_from_operand_id2142 ], [ %314, %concat_index_from_operand_id3145 ], [ %317, %concat_index_from_operand_id4148 ], [ %320, %concat_index_from_operand_id5151 ], [ %323, %concat_index_from_operand_id6154 ], [ %326, %concat_index_from_operand_id7157 ], [ %332, %concat_index_from_operand_id8160 ], [ %335, %concat_index_from_operand_id9166 ], [ %338, %concat_index_from_operand_id10169 ], [ %341, %concat_index_from_operand_id11172 ], [ %344, %concat_index_from_operand_id12175 ], [ %347, %concat_index_from_operand_id13178 ], [ %350, %concat_index_from_operand_id14181 ], [ %353, %concat_index_from_operand_id15184 ], [ %356, %concat_index_from_operand_id16187 ], [ %359, %concat_index_from_operand_id17190 ], [ %362, %concat_index_from_operand_id18193 ], [ %365, %concat_index_from_operand_id19196 ], [ %368, %concat_index_from_operand_id20199 ], [ %371, %concat_index_from_operand_id21202 ], [ %374, %concat_index_from_operand_id22205 ], [ %377, %concat_index_from_operand_id23208 ], [ %380, %concat_index_from_operand_id24211 ], [ %383, %concat_index_from_operand_id25214 ], [ %386, %concat_index_from_operand_id26217 ], [ %389, %concat_index_from_operand_id27220 ], [ %392, %concat_index_from_operand_id28223 ], [ %395, %concat_index_from_operand_id29226 ], [ %398, %concat_index_from_operand_id30229 ], [ %401, %concat_index_from_operand_id31232 ], [ %404, %concat_index_from_operand_id32235 ], [ %407, %concat_index_from_operand_id33238 ], [ %410, %concat_index_from_operand_id34241 ], [ %413, %concat_index_from_operand_id35244 ], [ %416, %concat_index_from_operand_id36247 ], [ %419, %concat_index_from_operand_id37250 ], [ %422, %concat_index_from_operand_id38253 ], [ %425, %concat_index_from_operand_id39256 ], [ %428, %concat_index_from_operand_id40259 ], [ %454, %concat_index_from_operand_id41262 ], [ %480, %concat_index_from_operand_id42278 ], [ %region_0_185_constant_70295, %concat_index_from_operand_id43294 ], [ %region_0_185_constant_67297, %concat_index_from_operand_id44296 ]
  %multiply.177 = fmul float %302, %544
  %multiply.178 = fmul float %divide.175, %multiply.177
  %region_0_185_constant_70417 = load float, ptr @57, align 4
  %Arg_1.2418 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 %300, i32 %299, i32 0
  %Arg_1.2419 = load float, ptr %Arg_1.2418, align 4, !invariant.load !297
  %divide.179 = fdiv float %region_0_185_constant_70417, %Arg_1.2419
  %Arg_0.1420 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg0, i32 0, i32 %300, i32 %299, i32 0
  %Arg_0.1421 = load float, ptr %Arg_0.1420, align 4, !invariant.load !297
  %545 = fneg float %Arg_0.1421
  %subtract.165422 = fsub float %region_0_185_constant_70417, %544
  %multiply.180 = fmul float %545, %subtract.165422
  %multiply.181 = fmul float %divide.179, %multiply.180
  %546 = fneg float %multiply.181
  %add.183 = fadd float %multiply.178, %546
  %547 = mul nuw nsw i32 %40, 1
  %548 = add nuw nsw i32 0, %547
  %549 = mul nuw nsw i32 %39, 960
  %550 = add nuw nsw i32 %548, %549
  %551 = urem i32 %550, 8192
  %552 = udiv i32 %550, 8192
  %553 = udiv i32 %552, 60
  %554 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg50, i32 0, i32 %552, i32 %551, i32 0
  store float %add.183, ptr %554, align 4
  br label %tile_loop.loop_header, !llvm.loop !417

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %is_full_tile-after

is_full_tile-false:                               ; preds = %y_in_tile.loop_body
  %555 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address426, align 4
  br label %tile_loop.loop_header424

tile_loop.loop_header424:                         ; preds = %x_in_tile-after, %is_full_tile-false
  %tile_loop.indvar427 = load i32, ptr %tile_loop.invar_address426, align 4
  %556 = icmp uge i32 %tile_loop.indvar427, 16
  br i1 %556, label %tile_loop.loop_exit423, label %tile_loop.loop_body425

tile_loop.loop_body425:                           ; preds = %tile_loop.loop_header424
  %invar.inc428 = add nuw nsw i32 %tile_loop.indvar427, 1
  store i32 %invar.inc428, ptr %tile_loop.invar_address426, align 4
  %557 = icmp eq i32 %tile_loop.indvar427, 0
  %558 = mul i32 %tile_loop.indvar427, 64
  %559 = add i32 %558, 0
  %x_loc429 = add i32 %559, %555
  %560 = add i32 %tile_origin.1, %y_in_tile.indvar
  %561 = add i32 %tile_origin.2, %x_loc429
  %562 = icmp ult i32 %x_loc429, %tile_bound1
  br i1 %562, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %concatenate.159.merge731, %tile_loop.loop_body425
  br label %tile_loop.loop_header424, !llvm.loop !418

tile_loop.loop_exit423:                           ; preds = %tile_loop.loop_header424
  br label %is_full_tile-after

x_in_tile-true:                                   ; preds = %tile_loop.loop_body425
  %563 = mul nuw nsw i32 %561, 1
  %564 = add nuw nsw i32 0, %563
  %565 = mul nuw nsw i32 %560, 960
  %566 = add nuw nsw i32 %564, %565
  %567 = urem i32 %566, 8192
  %568 = udiv i32 %566, 8192
  %569 = udiv i32 %568, 60
  %Arg_0.1430 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg0, i32 0, i32 %568, i32 %567, i32 0
  %Arg_0.1431 = load float, ptr %Arg_0.1430, align 4, !invariant.load !297
  br label %concatenate.pivot.30.595

concat_index_from_operand_id0433:                 ; preds = %concatenate.pivot.9.617, %concatenate.pivot.2.603, %concatenate.pivot.0.600
  %570 = phi i32 [ 0, %concatenate.pivot.0.600 ], [ 2, %concatenate.pivot.2.603 ], [ 9, %concatenate.pivot.9.617 ]
  %571 = sub nsw i32 %568, %570
  %Arg_48.49434 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg48, i32 0, i32 %567, i32 0
  %Arg_48.49435 = load i32, ptr %Arg_48.49434, align 4, !invariant.load !297
  %572 = sitofp i32 %Arg_48.49435 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id1436:                 ; preds = %concatenate.pivot.3.606, %concatenate.pivot.1.602
  %573 = phi i32 [ 1, %concatenate.pivot.1.602 ], [ 3, %concatenate.pivot.3.606 ]
  %574 = sub nsw i32 %568, %573
  %Arg_47.48437 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg47, i32 0, i32 %567, i32 0
  %Arg_47.48438 = load i32, ptr %Arg_47.48437, align 4, !invariant.load !297
  %575 = sitofp i32 %Arg_47.48438 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id2439:                 ; preds = %concatenate.pivot.4.607
  %576 = phi i32 [ 4, %concatenate.pivot.4.607 ]
  %577 = sub nsw i32 %568, %576
  %Arg_46.47440 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg46, i32 0, i32 %567, i32 0
  %Arg_46.47441 = load i32, ptr %Arg_46.47440, align 4, !invariant.load !297
  %578 = sitofp i32 %Arg_46.47441 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id3442:                 ; preds = %concatenate.pivot.5.609
  %579 = phi i32 [ 5, %concatenate.pivot.5.609 ]
  %580 = sub nsw i32 %568, %579
  %Arg_45.46443 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg45, i32 0, i32 %567, i32 0
  %Arg_45.46444 = load i32, ptr %Arg_45.46443, align 4, !invariant.load !297
  %581 = sitofp i32 %Arg_45.46444 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id4445:                 ; preds = %concatenate.pivot.6.610
  %582 = phi i32 [ 6, %concatenate.pivot.6.610 ]
  %583 = sub nsw i32 %568, %582
  %Arg_44.45446 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg44, i32 0, i32 %567, i32 0
  %Arg_44.45447 = load i32, ptr %Arg_44.45446, align 4, !invariant.load !297
  %584 = sitofp i32 %Arg_44.45447 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id5448:                 ; preds = %concatenate.pivot.7.614
  %585 = phi i32 [ 7, %concatenate.pivot.7.614 ]
  %586 = sub nsw i32 %568, %585
  %Arg_43.44449 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg43, i32 0, i32 %567, i32 0
  %Arg_43.44450 = load i32, ptr %Arg_43.44449, align 4, !invariant.load !297
  %587 = sitofp i32 %Arg_43.44450 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id6451:                 ; preds = %concatenate.pivot.8.615
  %588 = phi i32 [ 8, %concatenate.pivot.8.615 ]
  %589 = sub nsw i32 %568, %588
  %Arg_42.43452 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg42, i32 0, i32 %567, i32 0
  %Arg_42.43453 = load i32, ptr %Arg_42.43452, align 4, !invariant.load !297
  %590 = sitofp i32 %Arg_42.43453 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id7454:                 ; preds = %concatenate.pivot.10.618
  %591 = phi i32 [ 10, %concatenate.pivot.10.618 ]
  %592 = sub nsw i32 %568, %591
  %Arg_41.42455 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg41, i32 0, i32 %567, i32 0
  %Arg_41.42456 = load i32, ptr %Arg_41.42455, align 4, !invariant.load !297
  %593 = sitofp i32 %Arg_41.42456 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id8457:                 ; preds = %concatenate.pivot.11.621
  %594 = phi i32 [ 11, %concatenate.pivot.11.621 ]
  %595 = sub nsw i32 %568, %594
  %Arg_40.41458 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg40, i32 0, i32 %567, i32 0
  %Arg_40.41459 = load i32, ptr %Arg_40.41458, align 4, !invariant.load !297
  %596 = sitofp i32 %Arg_40.41459 to float
  %region_0_185_constant_67460 = load float, ptr @56, align 4
  %compare.69461 = fcmp ogt float %596, %region_0_185_constant_67460
  %597 = zext i1 %compare.69461 to i8
  %region_0_185_constant_70462 = load float, ptr @57, align 4
  %598 = trunc i8 %597 to i1
  %599 = select i1 %598, float %region_0_185_constant_70462, float %region_0_185_constant_67460
  br label %concatenate.159.merge432

concat_index_from_operand_id9463:                 ; preds = %concatenate.pivot.12.622
  %600 = phi i32 [ 12, %concatenate.pivot.12.622 ]
  %601 = sub nsw i32 %568, %600
  %Arg_39.40464 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg39, i32 0, i32 %567, i32 0
  %Arg_39.40465 = load i32, ptr %Arg_39.40464, align 4, !invariant.load !297
  %602 = sitofp i32 %Arg_39.40465 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id10466:                ; preds = %concatenate.pivot.13.624
  %603 = phi i32 [ 13, %concatenate.pivot.13.624 ]
  %604 = sub nsw i32 %568, %603
  %Arg_38.39467 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg38, i32 0, i32 %567, i32 0
  %Arg_38.39468 = load i32, ptr %Arg_38.39467, align 4, !invariant.load !297
  %605 = sitofp i32 %Arg_38.39468 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id11469:                ; preds = %concatenate.pivot.14.625
  %606 = phi i32 [ 14, %concatenate.pivot.14.625 ]
  %607 = sub nsw i32 %568, %606
  %Arg_37.38470 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg37, i32 0, i32 %567, i32 0
  %Arg_37.38471 = load i32, ptr %Arg_37.38470, align 4, !invariant.load !297
  %608 = sitofp i32 %Arg_37.38471 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id12472:                ; preds = %concatenate.pivot.15.629
  %609 = phi i32 [ 15, %concatenate.pivot.15.629 ]
  %610 = sub nsw i32 %568, %609
  %Arg_36.37473 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg36, i32 0, i32 %567, i32 0
  %Arg_36.37474 = load i32, ptr %Arg_36.37473, align 4, !invariant.load !297
  %611 = sitofp i32 %Arg_36.37474 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id13475:                ; preds = %concatenate.pivot.16.631
  %612 = phi i32 [ 16, %concatenate.pivot.16.631 ]
  %613 = sub nsw i32 %568, %612
  %Arg_35.36476 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg35, i32 0, i32 %567, i32 0
  %Arg_35.36477 = load i32, ptr %Arg_35.36476, align 4, !invariant.load !297
  %614 = sitofp i32 %Arg_35.36477 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id14478:                ; preds = %concatenate.pivot.17.632
  %615 = phi i32 [ 17, %concatenate.pivot.17.632 ]
  %616 = sub nsw i32 %568, %615
  %Arg_34.35479 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg34, i32 0, i32 %567, i32 0
  %Arg_34.35480 = load i32, ptr %Arg_34.35479, align 4, !invariant.load !297
  %617 = sitofp i32 %Arg_34.35480 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id15481:                ; preds = %concatenate.pivot.18.635
  %618 = phi i32 [ 18, %concatenate.pivot.18.635 ]
  %619 = sub nsw i32 %568, %618
  %Arg_33.34482 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg33, i32 0, i32 %567, i32 0
  %Arg_33.34483 = load i32, ptr %Arg_33.34482, align 4, !invariant.load !297
  %620 = sitofp i32 %Arg_33.34483 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id16484:                ; preds = %concatenate.pivot.19.636
  %621 = phi i32 [ 19, %concatenate.pivot.19.636 ]
  %622 = sub nsw i32 %568, %621
  %Arg_32.33485 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg32, i32 0, i32 %567, i32 0
  %Arg_32.33486 = load i32, ptr %Arg_32.33485, align 4, !invariant.load !297
  %623 = sitofp i32 %Arg_32.33486 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id17487:                ; preds = %concatenate.pivot.20.638
  %624 = phi i32 [ 20, %concatenate.pivot.20.638 ]
  %625 = sub nsw i32 %568, %624
  %Arg_31.32488 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg31, i32 0, i32 %567, i32 0
  %Arg_31.32489 = load i32, ptr %Arg_31.32488, align 4, !invariant.load !297
  %626 = sitofp i32 %Arg_31.32489 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id18490:                ; preds = %concatenate.pivot.21.639
  %627 = phi i32 [ 21, %concatenate.pivot.21.639 ]
  %628 = sub nsw i32 %568, %627
  %Arg_30.31491 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg30, i32 0, i32 %567, i32 0
  %Arg_30.31492 = load i32, ptr %Arg_30.31491, align 4, !invariant.load !297
  %629 = sitofp i32 %Arg_30.31492 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id19493:                ; preds = %concatenate.pivot.22.643
  %630 = phi i32 [ 22, %concatenate.pivot.22.643 ]
  %631 = sub nsw i32 %568, %630
  %Arg_29.30494 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg29, i32 0, i32 %567, i32 0
  %Arg_29.30495 = load i32, ptr %Arg_29.30494, align 4, !invariant.load !297
  %632 = sitofp i32 %Arg_29.30495 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id20496:                ; preds = %concatenate.pivot.23.644
  %633 = phi i32 [ 23, %concatenate.pivot.23.644 ]
  %634 = sub nsw i32 %568, %633
  %Arg_28.29497 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg28, i32 0, i32 %567, i32 0
  %Arg_28.29498 = load i32, ptr %Arg_28.29497, align 4, !invariant.load !297
  %635 = sitofp i32 %Arg_28.29498 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id21499:                ; preds = %concatenate.pivot.24.646
  %636 = phi i32 [ 24, %concatenate.pivot.24.646 ]
  %637 = sub nsw i32 %568, %636
  %Arg_27.28500 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg27, i32 0, i32 %567, i32 0
  %Arg_27.28501 = load i32, ptr %Arg_27.28500, align 4, !invariant.load !297
  %638 = sitofp i32 %Arg_27.28501 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id22502:                ; preds = %concatenate.pivot.25.647
  %639 = phi i32 [ 25, %concatenate.pivot.25.647 ]
  %640 = sub nsw i32 %568, %639
  %Arg_26.27503 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg26, i32 0, i32 %567, i32 0
  %Arg_26.27504 = load i32, ptr %Arg_26.27503, align 4, !invariant.load !297
  %641 = sitofp i32 %Arg_26.27504 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id23505:                ; preds = %concatenate.pivot.26.650
  %642 = phi i32 [ 26, %concatenate.pivot.26.650 ]
  %643 = sub nsw i32 %568, %642
  %Arg_25.26506 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg25, i32 0, i32 %567, i32 0
  %Arg_25.26507 = load i32, ptr %Arg_25.26506, align 4, !invariant.load !297
  %644 = sitofp i32 %Arg_25.26507 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id24508:                ; preds = %concatenate.pivot.27.651
  %645 = phi i32 [ 27, %concatenate.pivot.27.651 ]
  %646 = sub nsw i32 %568, %645
  %Arg_24.25509 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg24, i32 0, i32 %567, i32 0
  %Arg_24.25510 = load i32, ptr %Arg_24.25509, align 4, !invariant.load !297
  %647 = sitofp i32 %Arg_24.25510 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id25511:                ; preds = %concatenate.pivot.28.653
  %648 = phi i32 [ 28, %concatenate.pivot.28.653 ]
  %649 = sub nsw i32 %568, %648
  %Arg_23.24512 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg23, i32 0, i32 %567, i32 0
  %Arg_23.24513 = load i32, ptr %Arg_23.24512, align 4, !invariant.load !297
  %650 = sitofp i32 %Arg_23.24513 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id26514:                ; preds = %concatenate.pivot.29.654
  %651 = phi i32 [ 29, %concatenate.pivot.29.654 ]
  %652 = sub nsw i32 %568, %651
  %Arg_22.23515 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg22, i32 0, i32 %567, i32 0
  %Arg_22.23516 = load i32, ptr %Arg_22.23515, align 4, !invariant.load !297
  %653 = sitofp i32 %Arg_22.23516 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id27517:                ; preds = %concatenate.pivot.30.659
  %654 = phi i32 [ 30, %concatenate.pivot.30.659 ]
  %655 = sub nsw i32 %568, %654
  %Arg_21.22518 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg21, i32 0, i32 %567, i32 0
  %Arg_21.22519 = load i32, ptr %Arg_21.22518, align 4, !invariant.load !297
  %656 = sitofp i32 %Arg_21.22519 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id28520:                ; preds = %concatenate.pivot.31.661
  %657 = phi i32 [ 31, %concatenate.pivot.31.661 ]
  %658 = sub nsw i32 %568, %657
  %Arg_20.21521 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg20, i32 0, i32 %567, i32 0
  %Arg_20.21522 = load i32, ptr %Arg_20.21521, align 4, !invariant.load !297
  %659 = sitofp i32 %Arg_20.21522 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id29523:                ; preds = %concatenate.pivot.32.662
  %660 = phi i32 [ 32, %concatenate.pivot.32.662 ]
  %661 = sub nsw i32 %568, %660
  %Arg_19.20524 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg19, i32 0, i32 %567, i32 0
  %Arg_19.20525 = load i32, ptr %Arg_19.20524, align 4, !invariant.load !297
  %662 = sitofp i32 %Arg_19.20525 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id30526:                ; preds = %concatenate.pivot.33.665
  %663 = phi i32 [ 33, %concatenate.pivot.33.665 ]
  %664 = sub nsw i32 %568, %663
  %Arg_18.19527 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg18, i32 0, i32 %567, i32 0
  %Arg_18.19528 = load i32, ptr %Arg_18.19527, align 4, !invariant.load !297
  %665 = sitofp i32 %Arg_18.19528 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id31529:                ; preds = %concatenate.pivot.34.666
  %666 = phi i32 [ 34, %concatenate.pivot.34.666 ]
  %667 = sub nsw i32 %568, %666
  %Arg_17.18530 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg17, i32 0, i32 %567, i32 0
  %Arg_17.18531 = load i32, ptr %Arg_17.18530, align 4, !invariant.load !297
  %668 = sitofp i32 %Arg_17.18531 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id32532:                ; preds = %concatenate.pivot.35.668
  %669 = phi i32 [ 35, %concatenate.pivot.35.668 ]
  %670 = sub nsw i32 %568, %669
  %Arg_16.17533 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg16, i32 0, i32 %567, i32 0
  %Arg_16.17534 = load i32, ptr %Arg_16.17533, align 4, !invariant.load !297
  %671 = sitofp i32 %Arg_16.17534 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id33535:                ; preds = %concatenate.pivot.36.669
  %672 = phi i32 [ 36, %concatenate.pivot.36.669 ]
  %673 = sub nsw i32 %568, %672
  %Arg_15.16536 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg15, i32 0, i32 %567, i32 0
  %Arg_15.16537 = load i32, ptr %Arg_15.16536, align 4, !invariant.load !297
  %674 = sitofp i32 %Arg_15.16537 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id34538:                ; preds = %concatenate.pivot.37.673
  %675 = phi i32 [ 37, %concatenate.pivot.37.673 ]
  %676 = sub nsw i32 %568, %675
  %Arg_14.15539 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg14, i32 0, i32 %567, i32 0
  %Arg_14.15540 = load i32, ptr %Arg_14.15539, align 4, !invariant.load !297
  %677 = sitofp i32 %Arg_14.15540 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id35541:                ; preds = %concatenate.pivot.38.674
  %678 = phi i32 [ 38, %concatenate.pivot.38.674 ]
  %679 = sub nsw i32 %568, %678
  %Arg_13.14542 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg13, i32 0, i32 %567, i32 0
  %Arg_13.14543 = load i32, ptr %Arg_13.14542, align 4, !invariant.load !297
  %680 = sitofp i32 %Arg_13.14543 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id36544:                ; preds = %concatenate.pivot.39.676
  %681 = phi i32 [ 39, %concatenate.pivot.39.676 ]
  %682 = sub nsw i32 %568, %681
  %Arg_12.13545 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg12, i32 0, i32 %567, i32 0
  %Arg_12.13546 = load i32, ptr %Arg_12.13545, align 4, !invariant.load !297
  %683 = sitofp i32 %Arg_12.13546 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id37547:                ; preds = %concatenate.pivot.40.677
  %684 = phi i32 [ 40, %concatenate.pivot.40.677 ]
  %685 = sub nsw i32 %568, %684
  %Arg_11.12548 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg11, i32 0, i32 %567, i32 0
  %Arg_11.12549 = load i32, ptr %Arg_11.12548, align 4, !invariant.load !297
  %686 = sitofp i32 %Arg_11.12549 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id38550:                ; preds = %concatenate.pivot.41.680
  %687 = phi i32 [ 41, %concatenate.pivot.41.680 ]
  %688 = sub nsw i32 %568, %687
  %Arg_10.11551 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg10, i32 0, i32 %567, i32 0
  %Arg_10.11552 = load i32, ptr %Arg_10.11551, align 4, !invariant.load !297
  %689 = sitofp i32 %Arg_10.11552 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id39553:                ; preds = %concatenate.pivot.42.681
  %690 = phi i32 [ 42, %concatenate.pivot.42.681 ]
  %691 = sub nsw i32 %568, %690
  %Arg_9.10554 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg9, i32 0, i32 %567, i32 0
  %Arg_9.10555 = load i32, ptr %Arg_9.10554, align 4, !invariant.load !297
  %692 = sitofp i32 %Arg_9.10555 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id40556:                ; preds = %concatenate.pivot.43.683
  %693 = phi i32 [ 43, %concatenate.pivot.43.683 ]
  %694 = sub nsw i32 %568, %693
  %Arg_8.9557 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg8, i32 0, i32 %567, i32 0
  %Arg_8.9558 = load i32, ptr %Arg_8.9557, align 4, !invariant.load !297
  %695 = sitofp i32 %Arg_8.9558 to float
  br label %concatenate.159.merge432

concat_index_from_operand_id41559:                ; preds = %concatenate.pivot.44.684
  %696 = phi i32 [ 44, %concatenate.pivot.44.684 ]
  %697 = sub nsw i32 %568, %696
  %Arg_6.7560 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg6, i32 0, i32 %567, i32 0
  %Arg_6.7561 = load i32, ptr %Arg_6.7560, align 4, !invariant.load !297
  %698 = sitofp i32 %Arg_6.7561 to float
  %Arg_5.6562 = getelementptr inbounds [8192 x [1 x float]], ptr %arg5, i32 0, i32 %567, i32 0
  %Arg_5.6563 = load float, ptr %Arg_5.6562, align 4, !invariant.load !297
  %699 = fcmp oge float %698, %Arg_5.6563
  %700 = fcmp une float %698, %698
  %701 = or i1 %699, %700
  %maximum.139564 = select i1 %701, float %698, float %Arg_5.6563
  %Arg_4.5565 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg4, i32 0, i32 %567, i32 0
  %Arg_4.5566 = load i32, ptr %Arg_4.5565, align 4, !invariant.load !297
  %702 = sitofp i32 %Arg_4.5566 to float
  %703 = fptosi float %702 to i32
  %704 = fcmp ole float %702, 0xC1E0000000000000
  %705 = select i1 %704, i32 -2147483648, i32 %703
  %706 = fcmp oge float %702, 0x41E0000000000000
  %707 = select i1 %706, i32 2147483647, i32 %705
  %708 = fcmp uno float %702, %702
  %709 = select i1 %708, i32 0, i32 %707
  %region_0_185_constant_142567 = load i32, ptr @59, align 4
  %710 = and i32 %709, %region_0_185_constant_142567
  %region_0_185_constant_145568 = load i32, ptr @58, align 4
  %711 = icmp eq i32 %710, %region_0_185_constant_145568
  %712 = zext i1 %711 to i8
  %region_0_185_constant_67569 = load float, ptr @56, align 4
  %region_0_185_constant_70570 = load float, ptr @57, align 4
  %713 = trunc i8 %712 to i1
  %714 = select i1 %713, float %region_0_185_constant_67569, float %region_0_185_constant_70570
  %715 = fcmp oge float %maximum.139564, %714
  %716 = fcmp une float %maximum.139564, %maximum.139564
  %717 = or i1 %715, %716
  %maximum.149571 = select i1 %717, float %maximum.139564, float %714
  %compare.150572 = fcmp ogt float %maximum.149571, %region_0_185_constant_67569
  %718 = zext i1 %compare.150572 to i8
  %Arg_7.8573 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg7, i32 0, i32 %567, i32 0
  %Arg_7.8574 = load i32, ptr %Arg_7.8573, align 4, !invariant.load !297
  %719 = sitofp i32 %Arg_7.8574 to float
  %720 = trunc i8 %718 to i1
  %721 = select i1 %720, float %719, float %region_0_185_constant_67569
  br label %concatenate.159.merge432

concat_index_from_operand_id42575:                ; preds = %concatenate.pivot.45.688
  %722 = phi i32 [ 45, %concatenate.pivot.45.688 ]
  %723 = sub nsw i32 %568, %722
  %Arg_6.7576 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg6, i32 0, i32 %567, i32 0
  %Arg_6.7577 = load i32, ptr %Arg_6.7576, align 4, !invariant.load !297
  %724 = sitofp i32 %Arg_6.7577 to float
  %Arg_5.6578 = getelementptr inbounds [8192 x [1 x float]], ptr %arg5, i32 0, i32 %567, i32 0
  %Arg_5.6579 = load float, ptr %Arg_5.6578, align 4, !invariant.load !297
  %725 = fcmp oge float %724, %Arg_5.6579
  %726 = fcmp une float %724, %724
  %727 = or i1 %725, %726
  %maximum.139580 = select i1 %727, float %724, float %Arg_5.6579
  %Arg_4.5581 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg4, i32 0, i32 %567, i32 0
  %Arg_4.5582 = load i32, ptr %Arg_4.5581, align 4, !invariant.load !297
  %728 = sitofp i32 %Arg_4.5582 to float
  %729 = fptosi float %728 to i32
  %730 = fcmp ole float %728, 0xC1E0000000000000
  %731 = select i1 %730, i32 -2147483648, i32 %729
  %732 = fcmp oge float %728, 0x41E0000000000000
  %733 = select i1 %732, i32 2147483647, i32 %731
  %734 = fcmp uno float %728, %728
  %735 = select i1 %734, i32 0, i32 %733
  %region_0_185_constant_142583 = load i32, ptr @59, align 4
  %736 = and i32 %735, %region_0_185_constant_142583
  %region_0_185_constant_145584 = load i32, ptr @58, align 4
  %737 = icmp eq i32 %736, %region_0_185_constant_145584
  %738 = zext i1 %737 to i8
  %region_0_185_constant_67585 = load float, ptr @56, align 4
  %region_0_185_constant_70586 = load float, ptr @57, align 4
  %739 = trunc i8 %738 to i1
  %740 = select i1 %739, float %region_0_185_constant_67585, float %region_0_185_constant_70586
  %741 = fcmp oge float %maximum.139580, %740
  %742 = fcmp une float %maximum.139580, %maximum.139580
  %743 = or i1 %741, %742
  %maximum.149587 = select i1 %743, float %maximum.139580, float %740
  %compare.150588 = fcmp ogt float %maximum.149587, %region_0_185_constant_67585
  %744 = zext i1 %compare.150588 to i8
  %Arg_3.4589 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg3, i32 0, i32 %567, i32 0
  %Arg_3.4590 = load i32, ptr %Arg_3.4589, align 4, !invariant.load !297
  %745 = sitofp i32 %Arg_3.4590 to float
  %746 = trunc i8 %744 to i1
  %747 = select i1 %746, float %745, float %region_0_185_constant_67585
  br label %concatenate.159.merge432

concat_index_from_operand_id43591:                ; preds = %concatenate.pivot.58.712, %concatenate.pivot.56.709, %concatenate.pivot.54.705, %concatenate.pivot.52.702, %concatenate.pivot.50.697, %concatenate.pivot.48.694, %concatenate.pivot.46.690
  %748 = phi i32 [ 46, %concatenate.pivot.46.690 ], [ 48, %concatenate.pivot.48.694 ], [ 50, %concatenate.pivot.50.697 ], [ 52, %concatenate.pivot.52.702 ], [ 54, %concatenate.pivot.54.705 ], [ 56, %concatenate.pivot.56.709 ], [ 58, %concatenate.pivot.58.712 ]
  %749 = sub nsw i32 %568, %748
  %region_0_185_constant_70592 = load float, ptr @57, align 4
  br label %concatenate.159.merge432

concat_index_from_operand_id44593:                ; preds = %concatenate.pivot.59.713, %concatenate.pivot.57.710, %concatenate.pivot.55.706, %concatenate.pivot.53.703, %concatenate.pivot.51.698, %concatenate.pivot.49.695, %concatenate.pivot.47.691
  %750 = phi i32 [ 47, %concatenate.pivot.47.691 ], [ 49, %concatenate.pivot.49.695 ], [ 51, %concatenate.pivot.51.698 ], [ 53, %concatenate.pivot.53.703 ], [ 55, %concatenate.pivot.55.706 ], [ 57, %concatenate.pivot.57.710 ], [ 59, %concatenate.pivot.59.713 ]
  %751 = sub nsw i32 %568, %750
  %region_0_185_constant_67594 = load float, ptr @56, align 4
  br label %concatenate.159.merge432

concatenate.pivot.30.595:                         ; preds = %x_in_tile-true
  %752 = icmp ult i32 %568, 30
  br i1 %752, label %concatenate.pivot.15.596, label %concatenate.pivot.45.655

concatenate.pivot.15.596:                         ; preds = %concatenate.pivot.30.595
  %753 = icmp ult i32 %568, 15
  br i1 %753, label %concatenate.pivot.7.597, label %concatenate.pivot.22.626

concatenate.pivot.7.597:                          ; preds = %concatenate.pivot.15.596
  %754 = icmp ult i32 %568, 7
  br i1 %754, label %concatenate.pivot.3.598, label %concatenate.pivot.11.611

concatenate.pivot.3.598:                          ; preds = %concatenate.pivot.7.597
  %755 = icmp ult i32 %568, 3
  br i1 %755, label %concatenate.pivot.1.599, label %concatenate.pivot.5.604

concatenate.pivot.1.599:                          ; preds = %concatenate.pivot.3.598
  %756 = icmp ult i32 %568, 1
  br i1 %756, label %concatenate.pivot.0.600, label %concatenate.pivot.2.601

concatenate.pivot.0.600:                          ; preds = %concatenate.pivot.1.599
  br label %concat_index_from_operand_id0433

concatenate.pivot.2.601:                          ; preds = %concatenate.pivot.1.599
  %757 = icmp ult i32 %568, 2
  br i1 %757, label %concatenate.pivot.1.602, label %concatenate.pivot.2.603

concatenate.pivot.1.602:                          ; preds = %concatenate.pivot.2.601
  br label %concat_index_from_operand_id1436

concatenate.pivot.2.603:                          ; preds = %concatenate.pivot.2.601
  br label %concat_index_from_operand_id0433

concatenate.pivot.5.604:                          ; preds = %concatenate.pivot.3.598
  %758 = icmp ult i32 %568, 5
  br i1 %758, label %concatenate.pivot.4.605, label %concatenate.pivot.6.608

concatenate.pivot.4.605:                          ; preds = %concatenate.pivot.5.604
  %759 = icmp ult i32 %568, 4
  br i1 %759, label %concatenate.pivot.3.606, label %concatenate.pivot.4.607

concatenate.pivot.3.606:                          ; preds = %concatenate.pivot.4.605
  br label %concat_index_from_operand_id1436

concatenate.pivot.4.607:                          ; preds = %concatenate.pivot.4.605
  br label %concat_index_from_operand_id2439

concatenate.pivot.6.608:                          ; preds = %concatenate.pivot.5.604
  %760 = icmp ult i32 %568, 6
  br i1 %760, label %concatenate.pivot.5.609, label %concatenate.pivot.6.610

concatenate.pivot.5.609:                          ; preds = %concatenate.pivot.6.608
  br label %concat_index_from_operand_id3442

concatenate.pivot.6.610:                          ; preds = %concatenate.pivot.6.608
  br label %concat_index_from_operand_id4445

concatenate.pivot.11.611:                         ; preds = %concatenate.pivot.7.597
  %761 = icmp ult i32 %568, 11
  br i1 %761, label %concatenate.pivot.9.612, label %concatenate.pivot.13.619

concatenate.pivot.9.612:                          ; preds = %concatenate.pivot.11.611
  %762 = icmp ult i32 %568, 9
  br i1 %762, label %concatenate.pivot.8.613, label %concatenate.pivot.10.616

concatenate.pivot.8.613:                          ; preds = %concatenate.pivot.9.612
  %763 = icmp ult i32 %568, 8
  br i1 %763, label %concatenate.pivot.7.614, label %concatenate.pivot.8.615

concatenate.pivot.7.614:                          ; preds = %concatenate.pivot.8.613
  br label %concat_index_from_operand_id5448

concatenate.pivot.8.615:                          ; preds = %concatenate.pivot.8.613
  br label %concat_index_from_operand_id6451

concatenate.pivot.10.616:                         ; preds = %concatenate.pivot.9.612
  %764 = icmp ult i32 %568, 10
  br i1 %764, label %concatenate.pivot.9.617, label %concatenate.pivot.10.618

concatenate.pivot.9.617:                          ; preds = %concatenate.pivot.10.616
  br label %concat_index_from_operand_id0433

concatenate.pivot.10.618:                         ; preds = %concatenate.pivot.10.616
  br label %concat_index_from_operand_id7454

concatenate.pivot.13.619:                         ; preds = %concatenate.pivot.11.611
  %765 = icmp ult i32 %568, 13
  br i1 %765, label %concatenate.pivot.12.620, label %concatenate.pivot.14.623

concatenate.pivot.12.620:                         ; preds = %concatenate.pivot.13.619
  %766 = icmp ult i32 %568, 12
  br i1 %766, label %concatenate.pivot.11.621, label %concatenate.pivot.12.622

concatenate.pivot.11.621:                         ; preds = %concatenate.pivot.12.620
  br label %concat_index_from_operand_id8457

concatenate.pivot.12.622:                         ; preds = %concatenate.pivot.12.620
  br label %concat_index_from_operand_id9463

concatenate.pivot.14.623:                         ; preds = %concatenate.pivot.13.619
  %767 = icmp ult i32 %568, 14
  br i1 %767, label %concatenate.pivot.13.624, label %concatenate.pivot.14.625

concatenate.pivot.13.624:                         ; preds = %concatenate.pivot.14.623
  br label %concat_index_from_operand_id10466

concatenate.pivot.14.625:                         ; preds = %concatenate.pivot.14.623
  br label %concat_index_from_operand_id11469

concatenate.pivot.22.626:                         ; preds = %concatenate.pivot.15.596
  %768 = icmp ult i32 %568, 22
  br i1 %768, label %concatenate.pivot.18.627, label %concatenate.pivot.26.640

concatenate.pivot.18.627:                         ; preds = %concatenate.pivot.22.626
  %769 = icmp ult i32 %568, 18
  br i1 %769, label %concatenate.pivot.16.628, label %concatenate.pivot.20.633

concatenate.pivot.16.628:                         ; preds = %concatenate.pivot.18.627
  %770 = icmp ult i32 %568, 16
  br i1 %770, label %concatenate.pivot.15.629, label %concatenate.pivot.17.630

concatenate.pivot.15.629:                         ; preds = %concatenate.pivot.16.628
  br label %concat_index_from_operand_id12472

concatenate.pivot.17.630:                         ; preds = %concatenate.pivot.16.628
  %771 = icmp ult i32 %568, 17
  br i1 %771, label %concatenate.pivot.16.631, label %concatenate.pivot.17.632

concatenate.pivot.16.631:                         ; preds = %concatenate.pivot.17.630
  br label %concat_index_from_operand_id13475

concatenate.pivot.17.632:                         ; preds = %concatenate.pivot.17.630
  br label %concat_index_from_operand_id14478

concatenate.pivot.20.633:                         ; preds = %concatenate.pivot.18.627
  %772 = icmp ult i32 %568, 20
  br i1 %772, label %concatenate.pivot.19.634, label %concatenate.pivot.21.637

concatenate.pivot.19.634:                         ; preds = %concatenate.pivot.20.633
  %773 = icmp ult i32 %568, 19
  br i1 %773, label %concatenate.pivot.18.635, label %concatenate.pivot.19.636

concatenate.pivot.18.635:                         ; preds = %concatenate.pivot.19.634
  br label %concat_index_from_operand_id15481

concatenate.pivot.19.636:                         ; preds = %concatenate.pivot.19.634
  br label %concat_index_from_operand_id16484

concatenate.pivot.21.637:                         ; preds = %concatenate.pivot.20.633
  %774 = icmp ult i32 %568, 21
  br i1 %774, label %concatenate.pivot.20.638, label %concatenate.pivot.21.639

concatenate.pivot.20.638:                         ; preds = %concatenate.pivot.21.637
  br label %concat_index_from_operand_id17487

concatenate.pivot.21.639:                         ; preds = %concatenate.pivot.21.637
  br label %concat_index_from_operand_id18490

concatenate.pivot.26.640:                         ; preds = %concatenate.pivot.22.626
  %775 = icmp ult i32 %568, 26
  br i1 %775, label %concatenate.pivot.24.641, label %concatenate.pivot.28.648

concatenate.pivot.24.641:                         ; preds = %concatenate.pivot.26.640
  %776 = icmp ult i32 %568, 24
  br i1 %776, label %concatenate.pivot.23.642, label %concatenate.pivot.25.645

concatenate.pivot.23.642:                         ; preds = %concatenate.pivot.24.641
  %777 = icmp ult i32 %568, 23
  br i1 %777, label %concatenate.pivot.22.643, label %concatenate.pivot.23.644

concatenate.pivot.22.643:                         ; preds = %concatenate.pivot.23.642
  br label %concat_index_from_operand_id19493

concatenate.pivot.23.644:                         ; preds = %concatenate.pivot.23.642
  br label %concat_index_from_operand_id20496

concatenate.pivot.25.645:                         ; preds = %concatenate.pivot.24.641
  %778 = icmp ult i32 %568, 25
  br i1 %778, label %concatenate.pivot.24.646, label %concatenate.pivot.25.647

concatenate.pivot.24.646:                         ; preds = %concatenate.pivot.25.645
  br label %concat_index_from_operand_id21499

concatenate.pivot.25.647:                         ; preds = %concatenate.pivot.25.645
  br label %concat_index_from_operand_id22502

concatenate.pivot.28.648:                         ; preds = %concatenate.pivot.26.640
  %779 = icmp ult i32 %568, 28
  br i1 %779, label %concatenate.pivot.27.649, label %concatenate.pivot.29.652

concatenate.pivot.27.649:                         ; preds = %concatenate.pivot.28.648
  %780 = icmp ult i32 %568, 27
  br i1 %780, label %concatenate.pivot.26.650, label %concatenate.pivot.27.651

concatenate.pivot.26.650:                         ; preds = %concatenate.pivot.27.649
  br label %concat_index_from_operand_id23505

concatenate.pivot.27.651:                         ; preds = %concatenate.pivot.27.649
  br label %concat_index_from_operand_id24508

concatenate.pivot.29.652:                         ; preds = %concatenate.pivot.28.648
  %781 = icmp ult i32 %568, 29
  br i1 %781, label %concatenate.pivot.28.653, label %concatenate.pivot.29.654

concatenate.pivot.28.653:                         ; preds = %concatenate.pivot.29.652
  br label %concat_index_from_operand_id25511

concatenate.pivot.29.654:                         ; preds = %concatenate.pivot.29.652
  br label %concat_index_from_operand_id26514

concatenate.pivot.45.655:                         ; preds = %concatenate.pivot.30.595
  %782 = icmp ult i32 %568, 45
  br i1 %782, label %concatenate.pivot.37.656, label %concatenate.pivot.52.685

concatenate.pivot.37.656:                         ; preds = %concatenate.pivot.45.655
  %783 = icmp ult i32 %568, 37
  br i1 %783, label %concatenate.pivot.33.657, label %concatenate.pivot.41.670

concatenate.pivot.33.657:                         ; preds = %concatenate.pivot.37.656
  %784 = icmp ult i32 %568, 33
  br i1 %784, label %concatenate.pivot.31.658, label %concatenate.pivot.35.663

concatenate.pivot.31.658:                         ; preds = %concatenate.pivot.33.657
  %785 = icmp ult i32 %568, 31
  br i1 %785, label %concatenate.pivot.30.659, label %concatenate.pivot.32.660

concatenate.pivot.30.659:                         ; preds = %concatenate.pivot.31.658
  br label %concat_index_from_operand_id27517

concatenate.pivot.32.660:                         ; preds = %concatenate.pivot.31.658
  %786 = icmp ult i32 %568, 32
  br i1 %786, label %concatenate.pivot.31.661, label %concatenate.pivot.32.662

concatenate.pivot.31.661:                         ; preds = %concatenate.pivot.32.660
  br label %concat_index_from_operand_id28520

concatenate.pivot.32.662:                         ; preds = %concatenate.pivot.32.660
  br label %concat_index_from_operand_id29523

concatenate.pivot.35.663:                         ; preds = %concatenate.pivot.33.657
  %787 = icmp ult i32 %568, 35
  br i1 %787, label %concatenate.pivot.34.664, label %concatenate.pivot.36.667

concatenate.pivot.34.664:                         ; preds = %concatenate.pivot.35.663
  %788 = icmp ult i32 %568, 34
  br i1 %788, label %concatenate.pivot.33.665, label %concatenate.pivot.34.666

concatenate.pivot.33.665:                         ; preds = %concatenate.pivot.34.664
  br label %concat_index_from_operand_id30526

concatenate.pivot.34.666:                         ; preds = %concatenate.pivot.34.664
  br label %concat_index_from_operand_id31529

concatenate.pivot.36.667:                         ; preds = %concatenate.pivot.35.663
  %789 = icmp ult i32 %568, 36
  br i1 %789, label %concatenate.pivot.35.668, label %concatenate.pivot.36.669

concatenate.pivot.35.668:                         ; preds = %concatenate.pivot.36.667
  br label %concat_index_from_operand_id32532

concatenate.pivot.36.669:                         ; preds = %concatenate.pivot.36.667
  br label %concat_index_from_operand_id33535

concatenate.pivot.41.670:                         ; preds = %concatenate.pivot.37.656
  %790 = icmp ult i32 %568, 41
  br i1 %790, label %concatenate.pivot.39.671, label %concatenate.pivot.43.678

concatenate.pivot.39.671:                         ; preds = %concatenate.pivot.41.670
  %791 = icmp ult i32 %568, 39
  br i1 %791, label %concatenate.pivot.38.672, label %concatenate.pivot.40.675

concatenate.pivot.38.672:                         ; preds = %concatenate.pivot.39.671
  %792 = icmp ult i32 %568, 38
  br i1 %792, label %concatenate.pivot.37.673, label %concatenate.pivot.38.674

concatenate.pivot.37.673:                         ; preds = %concatenate.pivot.38.672
  br label %concat_index_from_operand_id34538

concatenate.pivot.38.674:                         ; preds = %concatenate.pivot.38.672
  br label %concat_index_from_operand_id35541

concatenate.pivot.40.675:                         ; preds = %concatenate.pivot.39.671
  %793 = icmp ult i32 %568, 40
  br i1 %793, label %concatenate.pivot.39.676, label %concatenate.pivot.40.677

concatenate.pivot.39.676:                         ; preds = %concatenate.pivot.40.675
  br label %concat_index_from_operand_id36544

concatenate.pivot.40.677:                         ; preds = %concatenate.pivot.40.675
  br label %concat_index_from_operand_id37547

concatenate.pivot.43.678:                         ; preds = %concatenate.pivot.41.670
  %794 = icmp ult i32 %568, 43
  br i1 %794, label %concatenate.pivot.42.679, label %concatenate.pivot.44.682

concatenate.pivot.42.679:                         ; preds = %concatenate.pivot.43.678
  %795 = icmp ult i32 %568, 42
  br i1 %795, label %concatenate.pivot.41.680, label %concatenate.pivot.42.681

concatenate.pivot.41.680:                         ; preds = %concatenate.pivot.42.679
  br label %concat_index_from_operand_id38550

concatenate.pivot.42.681:                         ; preds = %concatenate.pivot.42.679
  br label %concat_index_from_operand_id39553

concatenate.pivot.44.682:                         ; preds = %concatenate.pivot.43.678
  %796 = icmp ult i32 %568, 44
  br i1 %796, label %concatenate.pivot.43.683, label %concatenate.pivot.44.684

concatenate.pivot.43.683:                         ; preds = %concatenate.pivot.44.682
  br label %concat_index_from_operand_id40556

concatenate.pivot.44.684:                         ; preds = %concatenate.pivot.44.682
  br label %concat_index_from_operand_id41559

concatenate.pivot.52.685:                         ; preds = %concatenate.pivot.45.655
  %797 = icmp ult i32 %568, 52
  br i1 %797, label %concatenate.pivot.48.686, label %concatenate.pivot.56.699

concatenate.pivot.48.686:                         ; preds = %concatenate.pivot.52.685
  %798 = icmp ult i32 %568, 48
  br i1 %798, label %concatenate.pivot.46.687, label %concatenate.pivot.50.692

concatenate.pivot.46.687:                         ; preds = %concatenate.pivot.48.686
  %799 = icmp ult i32 %568, 46
  br i1 %799, label %concatenate.pivot.45.688, label %concatenate.pivot.47.689

concatenate.pivot.45.688:                         ; preds = %concatenate.pivot.46.687
  br label %concat_index_from_operand_id42575

concatenate.pivot.47.689:                         ; preds = %concatenate.pivot.46.687
  %800 = icmp ult i32 %568, 47
  br i1 %800, label %concatenate.pivot.46.690, label %concatenate.pivot.47.691

concatenate.pivot.46.690:                         ; preds = %concatenate.pivot.47.689
  br label %concat_index_from_operand_id43591

concatenate.pivot.47.691:                         ; preds = %concatenate.pivot.47.689
  br label %concat_index_from_operand_id44593

concatenate.pivot.50.692:                         ; preds = %concatenate.pivot.48.686
  %801 = icmp ult i32 %568, 50
  br i1 %801, label %concatenate.pivot.49.693, label %concatenate.pivot.51.696

concatenate.pivot.49.693:                         ; preds = %concatenate.pivot.50.692
  %802 = icmp ult i32 %568, 49
  br i1 %802, label %concatenate.pivot.48.694, label %concatenate.pivot.49.695

concatenate.pivot.48.694:                         ; preds = %concatenate.pivot.49.693
  br label %concat_index_from_operand_id43591

concatenate.pivot.49.695:                         ; preds = %concatenate.pivot.49.693
  br label %concat_index_from_operand_id44593

concatenate.pivot.51.696:                         ; preds = %concatenate.pivot.50.692
  %803 = icmp ult i32 %568, 51
  br i1 %803, label %concatenate.pivot.50.697, label %concatenate.pivot.51.698

concatenate.pivot.50.697:                         ; preds = %concatenate.pivot.51.696
  br label %concat_index_from_operand_id43591

concatenate.pivot.51.698:                         ; preds = %concatenate.pivot.51.696
  br label %concat_index_from_operand_id44593

concatenate.pivot.56.699:                         ; preds = %concatenate.pivot.52.685
  %804 = icmp ult i32 %568, 56
  br i1 %804, label %concatenate.pivot.54.700, label %concatenate.pivot.58.707

concatenate.pivot.54.700:                         ; preds = %concatenate.pivot.56.699
  %805 = icmp ult i32 %568, 54
  br i1 %805, label %concatenate.pivot.53.701, label %concatenate.pivot.55.704

concatenate.pivot.53.701:                         ; preds = %concatenate.pivot.54.700
  %806 = icmp ult i32 %568, 53
  br i1 %806, label %concatenate.pivot.52.702, label %concatenate.pivot.53.703

concatenate.pivot.52.702:                         ; preds = %concatenate.pivot.53.701
  br label %concat_index_from_operand_id43591

concatenate.pivot.53.703:                         ; preds = %concatenate.pivot.53.701
  br label %concat_index_from_operand_id44593

concatenate.pivot.55.704:                         ; preds = %concatenate.pivot.54.700
  %807 = icmp ult i32 %568, 55
  br i1 %807, label %concatenate.pivot.54.705, label %concatenate.pivot.55.706

concatenate.pivot.54.705:                         ; preds = %concatenate.pivot.55.704
  br label %concat_index_from_operand_id43591

concatenate.pivot.55.706:                         ; preds = %concatenate.pivot.55.704
  br label %concat_index_from_operand_id44593

concatenate.pivot.58.707:                         ; preds = %concatenate.pivot.56.699
  %808 = icmp ult i32 %568, 58
  br i1 %808, label %concatenate.pivot.57.708, label %concatenate.pivot.59.711

concatenate.pivot.57.708:                         ; preds = %concatenate.pivot.58.707
  %809 = icmp ult i32 %568, 57
  br i1 %809, label %concatenate.pivot.56.709, label %concatenate.pivot.57.710

concatenate.pivot.56.709:                         ; preds = %concatenate.pivot.57.708
  br label %concat_index_from_operand_id43591

concatenate.pivot.57.710:                         ; preds = %concatenate.pivot.57.708
  br label %concat_index_from_operand_id44593

concatenate.pivot.59.711:                         ; preds = %concatenate.pivot.58.707
  %810 = icmp ult i32 %568, 59
  br i1 %810, label %concatenate.pivot.58.712, label %concatenate.pivot.59.713

concatenate.pivot.58.712:                         ; preds = %concatenate.pivot.59.711
  br label %concat_index_from_operand_id43591

concatenate.pivot.59.713:                         ; preds = %concatenate.pivot.59.711
  br label %concat_index_from_operand_id44593

concatenate.159.merge432:                         ; preds = %concat_index_from_operand_id44593, %concat_index_from_operand_id43591, %concat_index_from_operand_id42575, %concat_index_from_operand_id41559, %concat_index_from_operand_id40556, %concat_index_from_operand_id39553, %concat_index_from_operand_id38550, %concat_index_from_operand_id37547, %concat_index_from_operand_id36544, %concat_index_from_operand_id35541, %concat_index_from_operand_id34538, %concat_index_from_operand_id33535, %concat_index_from_operand_id32532, %concat_index_from_operand_id31529, %concat_index_from_operand_id30526, %concat_index_from_operand_id29523, %concat_index_from_operand_id28520, %concat_index_from_operand_id27517, %concat_index_from_operand_id26514, %concat_index_from_operand_id25511, %concat_index_from_operand_id24508, %concat_index_from_operand_id23505, %concat_index_from_operand_id22502, %concat_index_from_operand_id21499, %concat_index_from_operand_id20496, %concat_index_from_operand_id19493, %concat_index_from_operand_id18490, %concat_index_from_operand_id17487, %concat_index_from_operand_id16484, %concat_index_from_operand_id15481, %concat_index_from_operand_id14478, %concat_index_from_operand_id13475, %concat_index_from_operand_id12472, %concat_index_from_operand_id11469, %concat_index_from_operand_id10466, %concat_index_from_operand_id9463, %concat_index_from_operand_id8457, %concat_index_from_operand_id7454, %concat_index_from_operand_id6451, %concat_index_from_operand_id5448, %concat_index_from_operand_id4445, %concat_index_from_operand_id3442, %concat_index_from_operand_id2439, %concat_index_from_operand_id1436, %concat_index_from_operand_id0433
  %811 = phi float [ %572, %concat_index_from_operand_id0433 ], [ %575, %concat_index_from_operand_id1436 ], [ %578, %concat_index_from_operand_id2439 ], [ %581, %concat_index_from_operand_id3442 ], [ %584, %concat_index_from_operand_id4445 ], [ %587, %concat_index_from_operand_id5448 ], [ %590, %concat_index_from_operand_id6451 ], [ %593, %concat_index_from_operand_id7454 ], [ %599, %concat_index_from_operand_id8457 ], [ %602, %concat_index_from_operand_id9463 ], [ %605, %concat_index_from_operand_id10466 ], [ %608, %concat_index_from_operand_id11469 ], [ %611, %concat_index_from_operand_id12472 ], [ %614, %concat_index_from_operand_id13475 ], [ %617, %concat_index_from_operand_id14478 ], [ %620, %concat_index_from_operand_id15481 ], [ %623, %concat_index_from_operand_id16484 ], [ %626, %concat_index_from_operand_id17487 ], [ %629, %concat_index_from_operand_id18490 ], [ %632, %concat_index_from_operand_id19493 ], [ %635, %concat_index_from_operand_id20496 ], [ %638, %concat_index_from_operand_id21499 ], [ %641, %concat_index_from_operand_id22502 ], [ %644, %concat_index_from_operand_id23505 ], [ %647, %concat_index_from_operand_id24508 ], [ %650, %concat_index_from_operand_id25511 ], [ %653, %concat_index_from_operand_id26514 ], [ %656, %concat_index_from_operand_id27517 ], [ %659, %concat_index_from_operand_id28520 ], [ %662, %concat_index_from_operand_id29523 ], [ %665, %concat_index_from_operand_id30526 ], [ %668, %concat_index_from_operand_id31529 ], [ %671, %concat_index_from_operand_id32532 ], [ %674, %concat_index_from_operand_id33535 ], [ %677, %concat_index_from_operand_id34538 ], [ %680, %concat_index_from_operand_id35541 ], [ %683, %concat_index_from_operand_id36544 ], [ %686, %concat_index_from_operand_id37547 ], [ %689, %concat_index_from_operand_id38550 ], [ %692, %concat_index_from_operand_id39553 ], [ %695, %concat_index_from_operand_id40556 ], [ %721, %concat_index_from_operand_id41559 ], [ %747, %concat_index_from_operand_id42575 ], [ %region_0_185_constant_70592, %concat_index_from_operand_id43591 ], [ %region_0_185_constant_67594, %concat_index_from_operand_id44593 ]
  %Arg_2.3714 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 %568, i32 %567, i32 0
  %Arg_2.3715 = load float, ptr %Arg_2.3714, align 4, !invariant.load !297
  %812 = call float @__nv_logf(float %Arg_2.3715)
  %multiply.161716 = fmul float %811, %812
  %813 = fneg float %multiply.161716
  %Arg_1.2717 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 %568, i32 %567, i32 0
  %Arg_1.2718 = load float, ptr %Arg_1.2717, align 4, !invariant.load !297
  %814 = call float @__nv_logf(float %Arg_1.2718)
  %region_0_185_constant_70719 = load float, ptr @57, align 4
  %subtract.165720 = fsub float %region_0_185_constant_70719, %811
  %multiply.166721 = fmul float %814, %subtract.165720
  %subtract.167722 = fsub float %813, %multiply.166721
  %multiply.168723 = fmul float %Arg_0.1431, %subtract.167722
  store float %multiply.168723, ptr %reduction_input_address, align 4
  %815 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_170(ptr %815, ptr %reduction_input_address, ptr %return_buffer724)
  %816 = load float, ptr %return_buffer724, align 4
  store float %816, ptr %815, align 4
  %817 = mul nuw nsw i32 %561, 1
  %818 = add nuw nsw i32 0, %817
  %819 = mul nuw nsw i32 %560, 960
  %820 = add nuw nsw i32 %818, %819
  %821 = urem i32 %820, 8192
  %822 = udiv i32 %820, 8192
  %823 = udiv i32 %822, 60
  %region_0_185_constant_70725 = load float, ptr @57, align 4
  %Arg_2.3726 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 %822, i32 %821, i32 0
  %Arg_2.3727 = load float, ptr %Arg_2.3726, align 4, !invariant.load !297
  %divide.175728 = fdiv float %region_0_185_constant_70725, %Arg_2.3727
  %Arg_0.1729 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg0, i32 0, i32 %822, i32 %821, i32 0
  %Arg_0.1730 = load float, ptr %Arg_0.1729, align 4, !invariant.load !297
  %824 = fneg float %Arg_0.1730
  br label %concatenate.pivot.30.894

concat_index_from_operand_id0732:                 ; preds = %concatenate.pivot.9.916, %concatenate.pivot.2.902, %concatenate.pivot.0.899
  %825 = phi i32 [ 0, %concatenate.pivot.0.899 ], [ 2, %concatenate.pivot.2.902 ], [ 9, %concatenate.pivot.9.916 ]
  %826 = sub nsw i32 %822, %825
  %Arg_48.49733 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg48, i32 0, i32 %821, i32 0
  %Arg_48.49734 = load i32, ptr %Arg_48.49733, align 4, !invariant.load !297
  %827 = sitofp i32 %Arg_48.49734 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id1735:                 ; preds = %concatenate.pivot.3.905, %concatenate.pivot.1.901
  %828 = phi i32 [ 1, %concatenate.pivot.1.901 ], [ 3, %concatenate.pivot.3.905 ]
  %829 = sub nsw i32 %822, %828
  %Arg_47.48736 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg47, i32 0, i32 %821, i32 0
  %Arg_47.48737 = load i32, ptr %Arg_47.48736, align 4, !invariant.load !297
  %830 = sitofp i32 %Arg_47.48737 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id2738:                 ; preds = %concatenate.pivot.4.906
  %831 = phi i32 [ 4, %concatenate.pivot.4.906 ]
  %832 = sub nsw i32 %822, %831
  %Arg_46.47739 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg46, i32 0, i32 %821, i32 0
  %Arg_46.47740 = load i32, ptr %Arg_46.47739, align 4, !invariant.load !297
  %833 = sitofp i32 %Arg_46.47740 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id3741:                 ; preds = %concatenate.pivot.5.908
  %834 = phi i32 [ 5, %concatenate.pivot.5.908 ]
  %835 = sub nsw i32 %822, %834
  %Arg_45.46742 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg45, i32 0, i32 %821, i32 0
  %Arg_45.46743 = load i32, ptr %Arg_45.46742, align 4, !invariant.load !297
  %836 = sitofp i32 %Arg_45.46743 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id4744:                 ; preds = %concatenate.pivot.6.909
  %837 = phi i32 [ 6, %concatenate.pivot.6.909 ]
  %838 = sub nsw i32 %822, %837
  %Arg_44.45745 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg44, i32 0, i32 %821, i32 0
  %Arg_44.45746 = load i32, ptr %Arg_44.45745, align 4, !invariant.load !297
  %839 = sitofp i32 %Arg_44.45746 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id5747:                 ; preds = %concatenate.pivot.7.913
  %840 = phi i32 [ 7, %concatenate.pivot.7.913 ]
  %841 = sub nsw i32 %822, %840
  %Arg_43.44748 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg43, i32 0, i32 %821, i32 0
  %Arg_43.44749 = load i32, ptr %Arg_43.44748, align 4, !invariant.load !297
  %842 = sitofp i32 %Arg_43.44749 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id6750:                 ; preds = %concatenate.pivot.8.914
  %843 = phi i32 [ 8, %concatenate.pivot.8.914 ]
  %844 = sub nsw i32 %822, %843
  %Arg_42.43751 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg42, i32 0, i32 %821, i32 0
  %Arg_42.43752 = load i32, ptr %Arg_42.43751, align 4, !invariant.load !297
  %845 = sitofp i32 %Arg_42.43752 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id7753:                 ; preds = %concatenate.pivot.10.917
  %846 = phi i32 [ 10, %concatenate.pivot.10.917 ]
  %847 = sub nsw i32 %822, %846
  %Arg_41.42754 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg41, i32 0, i32 %821, i32 0
  %Arg_41.42755 = load i32, ptr %Arg_41.42754, align 4, !invariant.load !297
  %848 = sitofp i32 %Arg_41.42755 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id8756:                 ; preds = %concatenate.pivot.11.920
  %849 = phi i32 [ 11, %concatenate.pivot.11.920 ]
  %850 = sub nsw i32 %822, %849
  %Arg_40.41757 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg40, i32 0, i32 %821, i32 0
  %Arg_40.41758 = load i32, ptr %Arg_40.41757, align 4, !invariant.load !297
  %851 = sitofp i32 %Arg_40.41758 to float
  %region_0_185_constant_67759 = load float, ptr @56, align 4
  %compare.69760 = fcmp ogt float %851, %region_0_185_constant_67759
  %852 = zext i1 %compare.69760 to i8
  %region_0_185_constant_70761 = load float, ptr @57, align 4
  %853 = trunc i8 %852 to i1
  %854 = select i1 %853, float %region_0_185_constant_70761, float %region_0_185_constant_67759
  br label %concatenate.159.merge731

concat_index_from_operand_id9762:                 ; preds = %concatenate.pivot.12.921
  %855 = phi i32 [ 12, %concatenate.pivot.12.921 ]
  %856 = sub nsw i32 %822, %855
  %Arg_39.40763 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg39, i32 0, i32 %821, i32 0
  %Arg_39.40764 = load i32, ptr %Arg_39.40763, align 4, !invariant.load !297
  %857 = sitofp i32 %Arg_39.40764 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id10765:                ; preds = %concatenate.pivot.13.923
  %858 = phi i32 [ 13, %concatenate.pivot.13.923 ]
  %859 = sub nsw i32 %822, %858
  %Arg_38.39766 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg38, i32 0, i32 %821, i32 0
  %Arg_38.39767 = load i32, ptr %Arg_38.39766, align 4, !invariant.load !297
  %860 = sitofp i32 %Arg_38.39767 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id11768:                ; preds = %concatenate.pivot.14.924
  %861 = phi i32 [ 14, %concatenate.pivot.14.924 ]
  %862 = sub nsw i32 %822, %861
  %Arg_37.38769 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg37, i32 0, i32 %821, i32 0
  %Arg_37.38770 = load i32, ptr %Arg_37.38769, align 4, !invariant.load !297
  %863 = sitofp i32 %Arg_37.38770 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id12771:                ; preds = %concatenate.pivot.15.928
  %864 = phi i32 [ 15, %concatenate.pivot.15.928 ]
  %865 = sub nsw i32 %822, %864
  %Arg_36.37772 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg36, i32 0, i32 %821, i32 0
  %Arg_36.37773 = load i32, ptr %Arg_36.37772, align 4, !invariant.load !297
  %866 = sitofp i32 %Arg_36.37773 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id13774:                ; preds = %concatenate.pivot.16.930
  %867 = phi i32 [ 16, %concatenate.pivot.16.930 ]
  %868 = sub nsw i32 %822, %867
  %Arg_35.36775 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg35, i32 0, i32 %821, i32 0
  %Arg_35.36776 = load i32, ptr %Arg_35.36775, align 4, !invariant.load !297
  %869 = sitofp i32 %Arg_35.36776 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id14777:                ; preds = %concatenate.pivot.17.931
  %870 = phi i32 [ 17, %concatenate.pivot.17.931 ]
  %871 = sub nsw i32 %822, %870
  %Arg_34.35778 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg34, i32 0, i32 %821, i32 0
  %Arg_34.35779 = load i32, ptr %Arg_34.35778, align 4, !invariant.load !297
  %872 = sitofp i32 %Arg_34.35779 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id15780:                ; preds = %concatenate.pivot.18.934
  %873 = phi i32 [ 18, %concatenate.pivot.18.934 ]
  %874 = sub nsw i32 %822, %873
  %Arg_33.34781 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg33, i32 0, i32 %821, i32 0
  %Arg_33.34782 = load i32, ptr %Arg_33.34781, align 4, !invariant.load !297
  %875 = sitofp i32 %Arg_33.34782 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id16783:                ; preds = %concatenate.pivot.19.935
  %876 = phi i32 [ 19, %concatenate.pivot.19.935 ]
  %877 = sub nsw i32 %822, %876
  %Arg_32.33784 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg32, i32 0, i32 %821, i32 0
  %Arg_32.33785 = load i32, ptr %Arg_32.33784, align 4, !invariant.load !297
  %878 = sitofp i32 %Arg_32.33785 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id17786:                ; preds = %concatenate.pivot.20.937
  %879 = phi i32 [ 20, %concatenate.pivot.20.937 ]
  %880 = sub nsw i32 %822, %879
  %Arg_31.32787 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg31, i32 0, i32 %821, i32 0
  %Arg_31.32788 = load i32, ptr %Arg_31.32787, align 4, !invariant.load !297
  %881 = sitofp i32 %Arg_31.32788 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id18789:                ; preds = %concatenate.pivot.21.938
  %882 = phi i32 [ 21, %concatenate.pivot.21.938 ]
  %883 = sub nsw i32 %822, %882
  %Arg_30.31790 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg30, i32 0, i32 %821, i32 0
  %Arg_30.31791 = load i32, ptr %Arg_30.31790, align 4, !invariant.load !297
  %884 = sitofp i32 %Arg_30.31791 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id19792:                ; preds = %concatenate.pivot.22.942
  %885 = phi i32 [ 22, %concatenate.pivot.22.942 ]
  %886 = sub nsw i32 %822, %885
  %Arg_29.30793 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg29, i32 0, i32 %821, i32 0
  %Arg_29.30794 = load i32, ptr %Arg_29.30793, align 4, !invariant.load !297
  %887 = sitofp i32 %Arg_29.30794 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id20795:                ; preds = %concatenate.pivot.23.943
  %888 = phi i32 [ 23, %concatenate.pivot.23.943 ]
  %889 = sub nsw i32 %822, %888
  %Arg_28.29796 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg28, i32 0, i32 %821, i32 0
  %Arg_28.29797 = load i32, ptr %Arg_28.29796, align 4, !invariant.load !297
  %890 = sitofp i32 %Arg_28.29797 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id21798:                ; preds = %concatenate.pivot.24.945
  %891 = phi i32 [ 24, %concatenate.pivot.24.945 ]
  %892 = sub nsw i32 %822, %891
  %Arg_27.28799 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg27, i32 0, i32 %821, i32 0
  %Arg_27.28800 = load i32, ptr %Arg_27.28799, align 4, !invariant.load !297
  %893 = sitofp i32 %Arg_27.28800 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id22801:                ; preds = %concatenate.pivot.25.946
  %894 = phi i32 [ 25, %concatenate.pivot.25.946 ]
  %895 = sub nsw i32 %822, %894
  %Arg_26.27802 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg26, i32 0, i32 %821, i32 0
  %Arg_26.27803 = load i32, ptr %Arg_26.27802, align 4, !invariant.load !297
  %896 = sitofp i32 %Arg_26.27803 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id23804:                ; preds = %concatenate.pivot.26.949
  %897 = phi i32 [ 26, %concatenate.pivot.26.949 ]
  %898 = sub nsw i32 %822, %897
  %Arg_25.26805 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg25, i32 0, i32 %821, i32 0
  %Arg_25.26806 = load i32, ptr %Arg_25.26805, align 4, !invariant.load !297
  %899 = sitofp i32 %Arg_25.26806 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id24807:                ; preds = %concatenate.pivot.27.950
  %900 = phi i32 [ 27, %concatenate.pivot.27.950 ]
  %901 = sub nsw i32 %822, %900
  %Arg_24.25808 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg24, i32 0, i32 %821, i32 0
  %Arg_24.25809 = load i32, ptr %Arg_24.25808, align 4, !invariant.load !297
  %902 = sitofp i32 %Arg_24.25809 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id25810:                ; preds = %concatenate.pivot.28.952
  %903 = phi i32 [ 28, %concatenate.pivot.28.952 ]
  %904 = sub nsw i32 %822, %903
  %Arg_23.24811 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg23, i32 0, i32 %821, i32 0
  %Arg_23.24812 = load i32, ptr %Arg_23.24811, align 4, !invariant.load !297
  %905 = sitofp i32 %Arg_23.24812 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id26813:                ; preds = %concatenate.pivot.29.953
  %906 = phi i32 [ 29, %concatenate.pivot.29.953 ]
  %907 = sub nsw i32 %822, %906
  %Arg_22.23814 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg22, i32 0, i32 %821, i32 0
  %Arg_22.23815 = load i32, ptr %Arg_22.23814, align 4, !invariant.load !297
  %908 = sitofp i32 %Arg_22.23815 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id27816:                ; preds = %concatenate.pivot.30.958
  %909 = phi i32 [ 30, %concatenate.pivot.30.958 ]
  %910 = sub nsw i32 %822, %909
  %Arg_21.22817 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg21, i32 0, i32 %821, i32 0
  %Arg_21.22818 = load i32, ptr %Arg_21.22817, align 4, !invariant.load !297
  %911 = sitofp i32 %Arg_21.22818 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id28819:                ; preds = %concatenate.pivot.31.960
  %912 = phi i32 [ 31, %concatenate.pivot.31.960 ]
  %913 = sub nsw i32 %822, %912
  %Arg_20.21820 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg20, i32 0, i32 %821, i32 0
  %Arg_20.21821 = load i32, ptr %Arg_20.21820, align 4, !invariant.load !297
  %914 = sitofp i32 %Arg_20.21821 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id29822:                ; preds = %concatenate.pivot.32.961
  %915 = phi i32 [ 32, %concatenate.pivot.32.961 ]
  %916 = sub nsw i32 %822, %915
  %Arg_19.20823 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg19, i32 0, i32 %821, i32 0
  %Arg_19.20824 = load i32, ptr %Arg_19.20823, align 4, !invariant.load !297
  %917 = sitofp i32 %Arg_19.20824 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id30825:                ; preds = %concatenate.pivot.33.964
  %918 = phi i32 [ 33, %concatenate.pivot.33.964 ]
  %919 = sub nsw i32 %822, %918
  %Arg_18.19826 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg18, i32 0, i32 %821, i32 0
  %Arg_18.19827 = load i32, ptr %Arg_18.19826, align 4, !invariant.load !297
  %920 = sitofp i32 %Arg_18.19827 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id31828:                ; preds = %concatenate.pivot.34.965
  %921 = phi i32 [ 34, %concatenate.pivot.34.965 ]
  %922 = sub nsw i32 %822, %921
  %Arg_17.18829 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg17, i32 0, i32 %821, i32 0
  %Arg_17.18830 = load i32, ptr %Arg_17.18829, align 4, !invariant.load !297
  %923 = sitofp i32 %Arg_17.18830 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id32831:                ; preds = %concatenate.pivot.35.967
  %924 = phi i32 [ 35, %concatenate.pivot.35.967 ]
  %925 = sub nsw i32 %822, %924
  %Arg_16.17832 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg16, i32 0, i32 %821, i32 0
  %Arg_16.17833 = load i32, ptr %Arg_16.17832, align 4, !invariant.load !297
  %926 = sitofp i32 %Arg_16.17833 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id33834:                ; preds = %concatenate.pivot.36.968
  %927 = phi i32 [ 36, %concatenate.pivot.36.968 ]
  %928 = sub nsw i32 %822, %927
  %Arg_15.16835 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg15, i32 0, i32 %821, i32 0
  %Arg_15.16836 = load i32, ptr %Arg_15.16835, align 4, !invariant.load !297
  %929 = sitofp i32 %Arg_15.16836 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id34837:                ; preds = %concatenate.pivot.37.972
  %930 = phi i32 [ 37, %concatenate.pivot.37.972 ]
  %931 = sub nsw i32 %822, %930
  %Arg_14.15838 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg14, i32 0, i32 %821, i32 0
  %Arg_14.15839 = load i32, ptr %Arg_14.15838, align 4, !invariant.load !297
  %932 = sitofp i32 %Arg_14.15839 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id35840:                ; preds = %concatenate.pivot.38.973
  %933 = phi i32 [ 38, %concatenate.pivot.38.973 ]
  %934 = sub nsw i32 %822, %933
  %Arg_13.14841 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg13, i32 0, i32 %821, i32 0
  %Arg_13.14842 = load i32, ptr %Arg_13.14841, align 4, !invariant.load !297
  %935 = sitofp i32 %Arg_13.14842 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id36843:                ; preds = %concatenate.pivot.39.975
  %936 = phi i32 [ 39, %concatenate.pivot.39.975 ]
  %937 = sub nsw i32 %822, %936
  %Arg_12.13844 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg12, i32 0, i32 %821, i32 0
  %Arg_12.13845 = load i32, ptr %Arg_12.13844, align 4, !invariant.load !297
  %938 = sitofp i32 %Arg_12.13845 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id37846:                ; preds = %concatenate.pivot.40.976
  %939 = phi i32 [ 40, %concatenate.pivot.40.976 ]
  %940 = sub nsw i32 %822, %939
  %Arg_11.12847 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg11, i32 0, i32 %821, i32 0
  %Arg_11.12848 = load i32, ptr %Arg_11.12847, align 4, !invariant.load !297
  %941 = sitofp i32 %Arg_11.12848 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id38849:                ; preds = %concatenate.pivot.41.979
  %942 = phi i32 [ 41, %concatenate.pivot.41.979 ]
  %943 = sub nsw i32 %822, %942
  %Arg_10.11850 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg10, i32 0, i32 %821, i32 0
  %Arg_10.11851 = load i32, ptr %Arg_10.11850, align 4, !invariant.load !297
  %944 = sitofp i32 %Arg_10.11851 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id39852:                ; preds = %concatenate.pivot.42.980
  %945 = phi i32 [ 42, %concatenate.pivot.42.980 ]
  %946 = sub nsw i32 %822, %945
  %Arg_9.10853 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg9, i32 0, i32 %821, i32 0
  %Arg_9.10854 = load i32, ptr %Arg_9.10853, align 4, !invariant.load !297
  %947 = sitofp i32 %Arg_9.10854 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id40855:                ; preds = %concatenate.pivot.43.982
  %948 = phi i32 [ 43, %concatenate.pivot.43.982 ]
  %949 = sub nsw i32 %822, %948
  %Arg_8.9856 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg8, i32 0, i32 %821, i32 0
  %Arg_8.9857 = load i32, ptr %Arg_8.9856, align 4, !invariant.load !297
  %950 = sitofp i32 %Arg_8.9857 to float
  br label %concatenate.159.merge731

concat_index_from_operand_id41858:                ; preds = %concatenate.pivot.44.983
  %951 = phi i32 [ 44, %concatenate.pivot.44.983 ]
  %952 = sub nsw i32 %822, %951
  %Arg_6.7859 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg6, i32 0, i32 %821, i32 0
  %Arg_6.7860 = load i32, ptr %Arg_6.7859, align 4, !invariant.load !297
  %953 = sitofp i32 %Arg_6.7860 to float
  %Arg_5.6861 = getelementptr inbounds [8192 x [1 x float]], ptr %arg5, i32 0, i32 %821, i32 0
  %Arg_5.6862 = load float, ptr %Arg_5.6861, align 4, !invariant.load !297
  %954 = fcmp oge float %953, %Arg_5.6862
  %955 = fcmp une float %953, %953
  %956 = or i1 %954, %955
  %maximum.139863 = select i1 %956, float %953, float %Arg_5.6862
  %Arg_4.5864 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg4, i32 0, i32 %821, i32 0
  %Arg_4.5865 = load i32, ptr %Arg_4.5864, align 4, !invariant.load !297
  %957 = sitofp i32 %Arg_4.5865 to float
  %958 = fptosi float %957 to i32
  %959 = fcmp ole float %957, 0xC1E0000000000000
  %960 = select i1 %959, i32 -2147483648, i32 %958
  %961 = fcmp oge float %957, 0x41E0000000000000
  %962 = select i1 %961, i32 2147483647, i32 %960
  %963 = fcmp uno float %957, %957
  %964 = select i1 %963, i32 0, i32 %962
  %region_0_185_constant_142866 = load i32, ptr @59, align 4
  %965 = and i32 %964, %region_0_185_constant_142866
  %region_0_185_constant_145867 = load i32, ptr @58, align 4
  %966 = icmp eq i32 %965, %region_0_185_constant_145867
  %967 = zext i1 %966 to i8
  %region_0_185_constant_67868 = load float, ptr @56, align 4
  %region_0_185_constant_70869 = load float, ptr @57, align 4
  %968 = trunc i8 %967 to i1
  %969 = select i1 %968, float %region_0_185_constant_67868, float %region_0_185_constant_70869
  %970 = fcmp oge float %maximum.139863, %969
  %971 = fcmp une float %maximum.139863, %maximum.139863
  %972 = or i1 %970, %971
  %maximum.149870 = select i1 %972, float %maximum.139863, float %969
  %compare.150871 = fcmp ogt float %maximum.149870, %region_0_185_constant_67868
  %973 = zext i1 %compare.150871 to i8
  %Arg_7.8872 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg7, i32 0, i32 %821, i32 0
  %Arg_7.8873 = load i32, ptr %Arg_7.8872, align 4, !invariant.load !297
  %974 = sitofp i32 %Arg_7.8873 to float
  %975 = trunc i8 %973 to i1
  %976 = select i1 %975, float %974, float %region_0_185_constant_67868
  br label %concatenate.159.merge731

concat_index_from_operand_id42874:                ; preds = %concatenate.pivot.45.987
  %977 = phi i32 [ 45, %concatenate.pivot.45.987 ]
  %978 = sub nsw i32 %822, %977
  %Arg_6.7875 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg6, i32 0, i32 %821, i32 0
  %Arg_6.7876 = load i32, ptr %Arg_6.7875, align 4, !invariant.load !297
  %979 = sitofp i32 %Arg_6.7876 to float
  %Arg_5.6877 = getelementptr inbounds [8192 x [1 x float]], ptr %arg5, i32 0, i32 %821, i32 0
  %Arg_5.6878 = load float, ptr %Arg_5.6877, align 4, !invariant.load !297
  %980 = fcmp oge float %979, %Arg_5.6878
  %981 = fcmp une float %979, %979
  %982 = or i1 %980, %981
  %maximum.139879 = select i1 %982, float %979, float %Arg_5.6878
  %Arg_4.5880 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg4, i32 0, i32 %821, i32 0
  %Arg_4.5881 = load i32, ptr %Arg_4.5880, align 4, !invariant.load !297
  %983 = sitofp i32 %Arg_4.5881 to float
  %984 = fptosi float %983 to i32
  %985 = fcmp ole float %983, 0xC1E0000000000000
  %986 = select i1 %985, i32 -2147483648, i32 %984
  %987 = fcmp oge float %983, 0x41E0000000000000
  %988 = select i1 %987, i32 2147483647, i32 %986
  %989 = fcmp uno float %983, %983
  %990 = select i1 %989, i32 0, i32 %988
  %region_0_185_constant_142882 = load i32, ptr @59, align 4
  %991 = and i32 %990, %region_0_185_constant_142882
  %region_0_185_constant_145883 = load i32, ptr @58, align 4
  %992 = icmp eq i32 %991, %region_0_185_constant_145883
  %993 = zext i1 %992 to i8
  %region_0_185_constant_67884 = load float, ptr @56, align 4
  %region_0_185_constant_70885 = load float, ptr @57, align 4
  %994 = trunc i8 %993 to i1
  %995 = select i1 %994, float %region_0_185_constant_67884, float %region_0_185_constant_70885
  %996 = fcmp oge float %maximum.139879, %995
  %997 = fcmp une float %maximum.139879, %maximum.139879
  %998 = or i1 %996, %997
  %maximum.149886 = select i1 %998, float %maximum.139879, float %995
  %compare.150887 = fcmp ogt float %maximum.149886, %region_0_185_constant_67884
  %999 = zext i1 %compare.150887 to i8
  %Arg_3.4888 = getelementptr inbounds [8192 x [1 x i32]], ptr %arg3, i32 0, i32 %821, i32 0
  %Arg_3.4889 = load i32, ptr %Arg_3.4888, align 4, !invariant.load !297
  %1000 = sitofp i32 %Arg_3.4889 to float
  %1001 = trunc i8 %999 to i1
  %1002 = select i1 %1001, float %1000, float %region_0_185_constant_67884
  br label %concatenate.159.merge731

concat_index_from_operand_id43890:                ; preds = %concatenate.pivot.58.1011, %concatenate.pivot.56.1008, %concatenate.pivot.54.1004, %concatenate.pivot.52.1001, %concatenate.pivot.50.996, %concatenate.pivot.48.993, %concatenate.pivot.46.989
  %1003 = phi i32 [ 46, %concatenate.pivot.46.989 ], [ 48, %concatenate.pivot.48.993 ], [ 50, %concatenate.pivot.50.996 ], [ 52, %concatenate.pivot.52.1001 ], [ 54, %concatenate.pivot.54.1004 ], [ 56, %concatenate.pivot.56.1008 ], [ 58, %concatenate.pivot.58.1011 ]
  %1004 = sub nsw i32 %822, %1003
  %region_0_185_constant_70891 = load float, ptr @57, align 4
  br label %concatenate.159.merge731

concat_index_from_operand_id44892:                ; preds = %concatenate.pivot.59.1012, %concatenate.pivot.57.1009, %concatenate.pivot.55.1005, %concatenate.pivot.53.1002, %concatenate.pivot.51.997, %concatenate.pivot.49.994, %concatenate.pivot.47.990
  %1005 = phi i32 [ 47, %concatenate.pivot.47.990 ], [ 49, %concatenate.pivot.49.994 ], [ 51, %concatenate.pivot.51.997 ], [ 53, %concatenate.pivot.53.1002 ], [ 55, %concatenate.pivot.55.1005 ], [ 57, %concatenate.pivot.57.1009 ], [ 59, %concatenate.pivot.59.1012 ]
  %1006 = sub nsw i32 %822, %1005
  %region_0_185_constant_67893 = load float, ptr @56, align 4
  br label %concatenate.159.merge731

concatenate.pivot.30.894:                         ; preds = %concatenate.159.merge432
  %1007 = icmp ult i32 %822, 30
  br i1 %1007, label %concatenate.pivot.15.895, label %concatenate.pivot.45.954

concatenate.pivot.15.895:                         ; preds = %concatenate.pivot.30.894
  %1008 = icmp ult i32 %822, 15
  br i1 %1008, label %concatenate.pivot.7.896, label %concatenate.pivot.22.925

concatenate.pivot.7.896:                          ; preds = %concatenate.pivot.15.895
  %1009 = icmp ult i32 %822, 7
  br i1 %1009, label %concatenate.pivot.3.897, label %concatenate.pivot.11.910

concatenate.pivot.3.897:                          ; preds = %concatenate.pivot.7.896
  %1010 = icmp ult i32 %822, 3
  br i1 %1010, label %concatenate.pivot.1.898, label %concatenate.pivot.5.903

concatenate.pivot.1.898:                          ; preds = %concatenate.pivot.3.897
  %1011 = icmp ult i32 %822, 1
  br i1 %1011, label %concatenate.pivot.0.899, label %concatenate.pivot.2.900

concatenate.pivot.0.899:                          ; preds = %concatenate.pivot.1.898
  br label %concat_index_from_operand_id0732

concatenate.pivot.2.900:                          ; preds = %concatenate.pivot.1.898
  %1012 = icmp ult i32 %822, 2
  br i1 %1012, label %concatenate.pivot.1.901, label %concatenate.pivot.2.902

concatenate.pivot.1.901:                          ; preds = %concatenate.pivot.2.900
  br label %concat_index_from_operand_id1735

concatenate.pivot.2.902:                          ; preds = %concatenate.pivot.2.900
  br label %concat_index_from_operand_id0732

concatenate.pivot.5.903:                          ; preds = %concatenate.pivot.3.897
  %1013 = icmp ult i32 %822, 5
  br i1 %1013, label %concatenate.pivot.4.904, label %concatenate.pivot.6.907

concatenate.pivot.4.904:                          ; preds = %concatenate.pivot.5.903
  %1014 = icmp ult i32 %822, 4
  br i1 %1014, label %concatenate.pivot.3.905, label %concatenate.pivot.4.906

concatenate.pivot.3.905:                          ; preds = %concatenate.pivot.4.904
  br label %concat_index_from_operand_id1735

concatenate.pivot.4.906:                          ; preds = %concatenate.pivot.4.904
  br label %concat_index_from_operand_id2738

concatenate.pivot.6.907:                          ; preds = %concatenate.pivot.5.903
  %1015 = icmp ult i32 %822, 6
  br i1 %1015, label %concatenate.pivot.5.908, label %concatenate.pivot.6.909

concatenate.pivot.5.908:                          ; preds = %concatenate.pivot.6.907
  br label %concat_index_from_operand_id3741

concatenate.pivot.6.909:                          ; preds = %concatenate.pivot.6.907
  br label %concat_index_from_operand_id4744

concatenate.pivot.11.910:                         ; preds = %concatenate.pivot.7.896
  %1016 = icmp ult i32 %822, 11
  br i1 %1016, label %concatenate.pivot.9.911, label %concatenate.pivot.13.918

concatenate.pivot.9.911:                          ; preds = %concatenate.pivot.11.910
  %1017 = icmp ult i32 %822, 9
  br i1 %1017, label %concatenate.pivot.8.912, label %concatenate.pivot.10.915

concatenate.pivot.8.912:                          ; preds = %concatenate.pivot.9.911
  %1018 = icmp ult i32 %822, 8
  br i1 %1018, label %concatenate.pivot.7.913, label %concatenate.pivot.8.914

concatenate.pivot.7.913:                          ; preds = %concatenate.pivot.8.912
  br label %concat_index_from_operand_id5747

concatenate.pivot.8.914:                          ; preds = %concatenate.pivot.8.912
  br label %concat_index_from_operand_id6750

concatenate.pivot.10.915:                         ; preds = %concatenate.pivot.9.911
  %1019 = icmp ult i32 %822, 10
  br i1 %1019, label %concatenate.pivot.9.916, label %concatenate.pivot.10.917

concatenate.pivot.9.916:                          ; preds = %concatenate.pivot.10.915
  br label %concat_index_from_operand_id0732

concatenate.pivot.10.917:                         ; preds = %concatenate.pivot.10.915
  br label %concat_index_from_operand_id7753

concatenate.pivot.13.918:                         ; preds = %concatenate.pivot.11.910
  %1020 = icmp ult i32 %822, 13
  br i1 %1020, label %concatenate.pivot.12.919, label %concatenate.pivot.14.922

concatenate.pivot.12.919:                         ; preds = %concatenate.pivot.13.918
  %1021 = icmp ult i32 %822, 12
  br i1 %1021, label %concatenate.pivot.11.920, label %concatenate.pivot.12.921

concatenate.pivot.11.920:                         ; preds = %concatenate.pivot.12.919
  br label %concat_index_from_operand_id8756

concatenate.pivot.12.921:                         ; preds = %concatenate.pivot.12.919
  br label %concat_index_from_operand_id9762

concatenate.pivot.14.922:                         ; preds = %concatenate.pivot.13.918
  %1022 = icmp ult i32 %822, 14
  br i1 %1022, label %concatenate.pivot.13.923, label %concatenate.pivot.14.924

concatenate.pivot.13.923:                         ; preds = %concatenate.pivot.14.922
  br label %concat_index_from_operand_id10765

concatenate.pivot.14.924:                         ; preds = %concatenate.pivot.14.922
  br label %concat_index_from_operand_id11768

concatenate.pivot.22.925:                         ; preds = %concatenate.pivot.15.895
  %1023 = icmp ult i32 %822, 22
  br i1 %1023, label %concatenate.pivot.18.926, label %concatenate.pivot.26.939

concatenate.pivot.18.926:                         ; preds = %concatenate.pivot.22.925
  %1024 = icmp ult i32 %822, 18
  br i1 %1024, label %concatenate.pivot.16.927, label %concatenate.pivot.20.932

concatenate.pivot.16.927:                         ; preds = %concatenate.pivot.18.926
  %1025 = icmp ult i32 %822, 16
  br i1 %1025, label %concatenate.pivot.15.928, label %concatenate.pivot.17.929

concatenate.pivot.15.928:                         ; preds = %concatenate.pivot.16.927
  br label %concat_index_from_operand_id12771

concatenate.pivot.17.929:                         ; preds = %concatenate.pivot.16.927
  %1026 = icmp ult i32 %822, 17
  br i1 %1026, label %concatenate.pivot.16.930, label %concatenate.pivot.17.931

concatenate.pivot.16.930:                         ; preds = %concatenate.pivot.17.929
  br label %concat_index_from_operand_id13774

concatenate.pivot.17.931:                         ; preds = %concatenate.pivot.17.929
  br label %concat_index_from_operand_id14777

concatenate.pivot.20.932:                         ; preds = %concatenate.pivot.18.926
  %1027 = icmp ult i32 %822, 20
  br i1 %1027, label %concatenate.pivot.19.933, label %concatenate.pivot.21.936

concatenate.pivot.19.933:                         ; preds = %concatenate.pivot.20.932
  %1028 = icmp ult i32 %822, 19
  br i1 %1028, label %concatenate.pivot.18.934, label %concatenate.pivot.19.935

concatenate.pivot.18.934:                         ; preds = %concatenate.pivot.19.933
  br label %concat_index_from_operand_id15780

concatenate.pivot.19.935:                         ; preds = %concatenate.pivot.19.933
  br label %concat_index_from_operand_id16783

concatenate.pivot.21.936:                         ; preds = %concatenate.pivot.20.932
  %1029 = icmp ult i32 %822, 21
  br i1 %1029, label %concatenate.pivot.20.937, label %concatenate.pivot.21.938

concatenate.pivot.20.937:                         ; preds = %concatenate.pivot.21.936
  br label %concat_index_from_operand_id17786

concatenate.pivot.21.938:                         ; preds = %concatenate.pivot.21.936
  br label %concat_index_from_operand_id18789

concatenate.pivot.26.939:                         ; preds = %concatenate.pivot.22.925
  %1030 = icmp ult i32 %822, 26
  br i1 %1030, label %concatenate.pivot.24.940, label %concatenate.pivot.28.947

concatenate.pivot.24.940:                         ; preds = %concatenate.pivot.26.939
  %1031 = icmp ult i32 %822, 24
  br i1 %1031, label %concatenate.pivot.23.941, label %concatenate.pivot.25.944

concatenate.pivot.23.941:                         ; preds = %concatenate.pivot.24.940
  %1032 = icmp ult i32 %822, 23
  br i1 %1032, label %concatenate.pivot.22.942, label %concatenate.pivot.23.943

concatenate.pivot.22.942:                         ; preds = %concatenate.pivot.23.941
  br label %concat_index_from_operand_id19792

concatenate.pivot.23.943:                         ; preds = %concatenate.pivot.23.941
  br label %concat_index_from_operand_id20795

concatenate.pivot.25.944:                         ; preds = %concatenate.pivot.24.940
  %1033 = icmp ult i32 %822, 25
  br i1 %1033, label %concatenate.pivot.24.945, label %concatenate.pivot.25.946

concatenate.pivot.24.945:                         ; preds = %concatenate.pivot.25.944
  br label %concat_index_from_operand_id21798

concatenate.pivot.25.946:                         ; preds = %concatenate.pivot.25.944
  br label %concat_index_from_operand_id22801

concatenate.pivot.28.947:                         ; preds = %concatenate.pivot.26.939
  %1034 = icmp ult i32 %822, 28
  br i1 %1034, label %concatenate.pivot.27.948, label %concatenate.pivot.29.951

concatenate.pivot.27.948:                         ; preds = %concatenate.pivot.28.947
  %1035 = icmp ult i32 %822, 27
  br i1 %1035, label %concatenate.pivot.26.949, label %concatenate.pivot.27.950

concatenate.pivot.26.949:                         ; preds = %concatenate.pivot.27.948
  br label %concat_index_from_operand_id23804

concatenate.pivot.27.950:                         ; preds = %concatenate.pivot.27.948
  br label %concat_index_from_operand_id24807

concatenate.pivot.29.951:                         ; preds = %concatenate.pivot.28.947
  %1036 = icmp ult i32 %822, 29
  br i1 %1036, label %concatenate.pivot.28.952, label %concatenate.pivot.29.953

concatenate.pivot.28.952:                         ; preds = %concatenate.pivot.29.951
  br label %concat_index_from_operand_id25810

concatenate.pivot.29.953:                         ; preds = %concatenate.pivot.29.951
  br label %concat_index_from_operand_id26813

concatenate.pivot.45.954:                         ; preds = %concatenate.pivot.30.894
  %1037 = icmp ult i32 %822, 45
  br i1 %1037, label %concatenate.pivot.37.955, label %concatenate.pivot.52.984

concatenate.pivot.37.955:                         ; preds = %concatenate.pivot.45.954
  %1038 = icmp ult i32 %822, 37
  br i1 %1038, label %concatenate.pivot.33.956, label %concatenate.pivot.41.969

concatenate.pivot.33.956:                         ; preds = %concatenate.pivot.37.955
  %1039 = icmp ult i32 %822, 33
  br i1 %1039, label %concatenate.pivot.31.957, label %concatenate.pivot.35.962

concatenate.pivot.31.957:                         ; preds = %concatenate.pivot.33.956
  %1040 = icmp ult i32 %822, 31
  br i1 %1040, label %concatenate.pivot.30.958, label %concatenate.pivot.32.959

concatenate.pivot.30.958:                         ; preds = %concatenate.pivot.31.957
  br label %concat_index_from_operand_id27816

concatenate.pivot.32.959:                         ; preds = %concatenate.pivot.31.957
  %1041 = icmp ult i32 %822, 32
  br i1 %1041, label %concatenate.pivot.31.960, label %concatenate.pivot.32.961

concatenate.pivot.31.960:                         ; preds = %concatenate.pivot.32.959
  br label %concat_index_from_operand_id28819

concatenate.pivot.32.961:                         ; preds = %concatenate.pivot.32.959
  br label %concat_index_from_operand_id29822

concatenate.pivot.35.962:                         ; preds = %concatenate.pivot.33.956
  %1042 = icmp ult i32 %822, 35
  br i1 %1042, label %concatenate.pivot.34.963, label %concatenate.pivot.36.966

concatenate.pivot.34.963:                         ; preds = %concatenate.pivot.35.962
  %1043 = icmp ult i32 %822, 34
  br i1 %1043, label %concatenate.pivot.33.964, label %concatenate.pivot.34.965

concatenate.pivot.33.964:                         ; preds = %concatenate.pivot.34.963
  br label %concat_index_from_operand_id30825

concatenate.pivot.34.965:                         ; preds = %concatenate.pivot.34.963
  br label %concat_index_from_operand_id31828

concatenate.pivot.36.966:                         ; preds = %concatenate.pivot.35.962
  %1044 = icmp ult i32 %822, 36
  br i1 %1044, label %concatenate.pivot.35.967, label %concatenate.pivot.36.968

concatenate.pivot.35.967:                         ; preds = %concatenate.pivot.36.966
  br label %concat_index_from_operand_id32831

concatenate.pivot.36.968:                         ; preds = %concatenate.pivot.36.966
  br label %concat_index_from_operand_id33834

concatenate.pivot.41.969:                         ; preds = %concatenate.pivot.37.955
  %1045 = icmp ult i32 %822, 41
  br i1 %1045, label %concatenate.pivot.39.970, label %concatenate.pivot.43.977

concatenate.pivot.39.970:                         ; preds = %concatenate.pivot.41.969
  %1046 = icmp ult i32 %822, 39
  br i1 %1046, label %concatenate.pivot.38.971, label %concatenate.pivot.40.974

concatenate.pivot.38.971:                         ; preds = %concatenate.pivot.39.970
  %1047 = icmp ult i32 %822, 38
  br i1 %1047, label %concatenate.pivot.37.972, label %concatenate.pivot.38.973

concatenate.pivot.37.972:                         ; preds = %concatenate.pivot.38.971
  br label %concat_index_from_operand_id34837

concatenate.pivot.38.973:                         ; preds = %concatenate.pivot.38.971
  br label %concat_index_from_operand_id35840

concatenate.pivot.40.974:                         ; preds = %concatenate.pivot.39.970
  %1048 = icmp ult i32 %822, 40
  br i1 %1048, label %concatenate.pivot.39.975, label %concatenate.pivot.40.976

concatenate.pivot.39.975:                         ; preds = %concatenate.pivot.40.974
  br label %concat_index_from_operand_id36843

concatenate.pivot.40.976:                         ; preds = %concatenate.pivot.40.974
  br label %concat_index_from_operand_id37846

concatenate.pivot.43.977:                         ; preds = %concatenate.pivot.41.969
  %1049 = icmp ult i32 %822, 43
  br i1 %1049, label %concatenate.pivot.42.978, label %concatenate.pivot.44.981

concatenate.pivot.42.978:                         ; preds = %concatenate.pivot.43.977
  %1050 = icmp ult i32 %822, 42
  br i1 %1050, label %concatenate.pivot.41.979, label %concatenate.pivot.42.980

concatenate.pivot.41.979:                         ; preds = %concatenate.pivot.42.978
  br label %concat_index_from_operand_id38849

concatenate.pivot.42.980:                         ; preds = %concatenate.pivot.42.978
  br label %concat_index_from_operand_id39852

concatenate.pivot.44.981:                         ; preds = %concatenate.pivot.43.977
  %1051 = icmp ult i32 %822, 44
  br i1 %1051, label %concatenate.pivot.43.982, label %concatenate.pivot.44.983

concatenate.pivot.43.982:                         ; preds = %concatenate.pivot.44.981
  br label %concat_index_from_operand_id40855

concatenate.pivot.44.983:                         ; preds = %concatenate.pivot.44.981
  br label %concat_index_from_operand_id41858

concatenate.pivot.52.984:                         ; preds = %concatenate.pivot.45.954
  %1052 = icmp ult i32 %822, 52
  br i1 %1052, label %concatenate.pivot.48.985, label %concatenate.pivot.56.998

concatenate.pivot.48.985:                         ; preds = %concatenate.pivot.52.984
  %1053 = icmp ult i32 %822, 48
  br i1 %1053, label %concatenate.pivot.46.986, label %concatenate.pivot.50.991

concatenate.pivot.46.986:                         ; preds = %concatenate.pivot.48.985
  %1054 = icmp ult i32 %822, 46
  br i1 %1054, label %concatenate.pivot.45.987, label %concatenate.pivot.47.988

concatenate.pivot.45.987:                         ; preds = %concatenate.pivot.46.986
  br label %concat_index_from_operand_id42874

concatenate.pivot.47.988:                         ; preds = %concatenate.pivot.46.986
  %1055 = icmp ult i32 %822, 47
  br i1 %1055, label %concatenate.pivot.46.989, label %concatenate.pivot.47.990

concatenate.pivot.46.989:                         ; preds = %concatenate.pivot.47.988
  br label %concat_index_from_operand_id43890

concatenate.pivot.47.990:                         ; preds = %concatenate.pivot.47.988
  br label %concat_index_from_operand_id44892

concatenate.pivot.50.991:                         ; preds = %concatenate.pivot.48.985
  %1056 = icmp ult i32 %822, 50
  br i1 %1056, label %concatenate.pivot.49.992, label %concatenate.pivot.51.995

concatenate.pivot.49.992:                         ; preds = %concatenate.pivot.50.991
  %1057 = icmp ult i32 %822, 49
  br i1 %1057, label %concatenate.pivot.48.993, label %concatenate.pivot.49.994

concatenate.pivot.48.993:                         ; preds = %concatenate.pivot.49.992
  br label %concat_index_from_operand_id43890

concatenate.pivot.49.994:                         ; preds = %concatenate.pivot.49.992
  br label %concat_index_from_operand_id44892

concatenate.pivot.51.995:                         ; preds = %concatenate.pivot.50.991
  %1058 = icmp ult i32 %822, 51
  br i1 %1058, label %concatenate.pivot.50.996, label %concatenate.pivot.51.997

concatenate.pivot.50.996:                         ; preds = %concatenate.pivot.51.995
  br label %concat_index_from_operand_id43890

concatenate.pivot.51.997:                         ; preds = %concatenate.pivot.51.995
  br label %concat_index_from_operand_id44892

concatenate.pivot.56.998:                         ; preds = %concatenate.pivot.52.984
  %1059 = icmp ult i32 %822, 56
  br i1 %1059, label %concatenate.pivot.54.999, label %concatenate.pivot.58.1006

concatenate.pivot.54.999:                         ; preds = %concatenate.pivot.56.998
  %1060 = icmp ult i32 %822, 54
  br i1 %1060, label %concatenate.pivot.53.1000, label %concatenate.pivot.55.1003

concatenate.pivot.53.1000:                        ; preds = %concatenate.pivot.54.999
  %1061 = icmp ult i32 %822, 53
  br i1 %1061, label %concatenate.pivot.52.1001, label %concatenate.pivot.53.1002

concatenate.pivot.52.1001:                        ; preds = %concatenate.pivot.53.1000
  br label %concat_index_from_operand_id43890

concatenate.pivot.53.1002:                        ; preds = %concatenate.pivot.53.1000
  br label %concat_index_from_operand_id44892

concatenate.pivot.55.1003:                        ; preds = %concatenate.pivot.54.999
  %1062 = icmp ult i32 %822, 55
  br i1 %1062, label %concatenate.pivot.54.1004, label %concatenate.pivot.55.1005

concatenate.pivot.54.1004:                        ; preds = %concatenate.pivot.55.1003
  br label %concat_index_from_operand_id43890

concatenate.pivot.55.1005:                        ; preds = %concatenate.pivot.55.1003
  br label %concat_index_from_operand_id44892

concatenate.pivot.58.1006:                        ; preds = %concatenate.pivot.56.998
  %1063 = icmp ult i32 %822, 58
  br i1 %1063, label %concatenate.pivot.57.1007, label %concatenate.pivot.59.1010

concatenate.pivot.57.1007:                        ; preds = %concatenate.pivot.58.1006
  %1064 = icmp ult i32 %822, 57
  br i1 %1064, label %concatenate.pivot.56.1008, label %concatenate.pivot.57.1009

concatenate.pivot.56.1008:                        ; preds = %concatenate.pivot.57.1007
  br label %concat_index_from_operand_id43890

concatenate.pivot.57.1009:                        ; preds = %concatenate.pivot.57.1007
  br label %concat_index_from_operand_id44892

concatenate.pivot.59.1010:                        ; preds = %concatenate.pivot.58.1006
  %1065 = icmp ult i32 %822, 59
  br i1 %1065, label %concatenate.pivot.58.1011, label %concatenate.pivot.59.1012

concatenate.pivot.58.1011:                        ; preds = %concatenate.pivot.59.1010
  br label %concat_index_from_operand_id43890

concatenate.pivot.59.1012:                        ; preds = %concatenate.pivot.59.1010
  br label %concat_index_from_operand_id44892

concatenate.159.merge731:                         ; preds = %concat_index_from_operand_id44892, %concat_index_from_operand_id43890, %concat_index_from_operand_id42874, %concat_index_from_operand_id41858, %concat_index_from_operand_id40855, %concat_index_from_operand_id39852, %concat_index_from_operand_id38849, %concat_index_from_operand_id37846, %concat_index_from_operand_id36843, %concat_index_from_operand_id35840, %concat_index_from_operand_id34837, %concat_index_from_operand_id33834, %concat_index_from_operand_id32831, %concat_index_from_operand_id31828, %concat_index_from_operand_id30825, %concat_index_from_operand_id29822, %concat_index_from_operand_id28819, %concat_index_from_operand_id27816, %concat_index_from_operand_id26813, %concat_index_from_operand_id25810, %concat_index_from_operand_id24807, %concat_index_from_operand_id23804, %concat_index_from_operand_id22801, %concat_index_from_operand_id21798, %concat_index_from_operand_id20795, %concat_index_from_operand_id19792, %concat_index_from_operand_id18789, %concat_index_from_operand_id17786, %concat_index_from_operand_id16783, %concat_index_from_operand_id15780, %concat_index_from_operand_id14777, %concat_index_from_operand_id13774, %concat_index_from_operand_id12771, %concat_index_from_operand_id11768, %concat_index_from_operand_id10765, %concat_index_from_operand_id9762, %concat_index_from_operand_id8756, %concat_index_from_operand_id7753, %concat_index_from_operand_id6750, %concat_index_from_operand_id5747, %concat_index_from_operand_id4744, %concat_index_from_operand_id3741, %concat_index_from_operand_id2738, %concat_index_from_operand_id1735, %concat_index_from_operand_id0732
  %1066 = phi float [ %827, %concat_index_from_operand_id0732 ], [ %830, %concat_index_from_operand_id1735 ], [ %833, %concat_index_from_operand_id2738 ], [ %836, %concat_index_from_operand_id3741 ], [ %839, %concat_index_from_operand_id4744 ], [ %842, %concat_index_from_operand_id5747 ], [ %845, %concat_index_from_operand_id6750 ], [ %848, %concat_index_from_operand_id7753 ], [ %854, %concat_index_from_operand_id8756 ], [ %857, %concat_index_from_operand_id9762 ], [ %860, %concat_index_from_operand_id10765 ], [ %863, %concat_index_from_operand_id11768 ], [ %866, %concat_index_from_operand_id12771 ], [ %869, %concat_index_from_operand_id13774 ], [ %872, %concat_index_from_operand_id14777 ], [ %875, %concat_index_from_operand_id15780 ], [ %878, %concat_index_from_operand_id16783 ], [ %881, %concat_index_from_operand_id17786 ], [ %884, %concat_index_from_operand_id18789 ], [ %887, %concat_index_from_operand_id19792 ], [ %890, %concat_index_from_operand_id20795 ], [ %893, %concat_index_from_operand_id21798 ], [ %896, %concat_index_from_operand_id22801 ], [ %899, %concat_index_from_operand_id23804 ], [ %902, %concat_index_from_operand_id24807 ], [ %905, %concat_index_from_operand_id25810 ], [ %908, %concat_index_from_operand_id26813 ], [ %911, %concat_index_from_operand_id27816 ], [ %914, %concat_index_from_operand_id28819 ], [ %917, %concat_index_from_operand_id29822 ], [ %920, %concat_index_from_operand_id30825 ], [ %923, %concat_index_from_operand_id31828 ], [ %926, %concat_index_from_operand_id32831 ], [ %929, %concat_index_from_operand_id33834 ], [ %932, %concat_index_from_operand_id34837 ], [ %935, %concat_index_from_operand_id35840 ], [ %938, %concat_index_from_operand_id36843 ], [ %941, %concat_index_from_operand_id37846 ], [ %944, %concat_index_from_operand_id38849 ], [ %947, %concat_index_from_operand_id39852 ], [ %950, %concat_index_from_operand_id40855 ], [ %976, %concat_index_from_operand_id41858 ], [ %1002, %concat_index_from_operand_id42874 ], [ %region_0_185_constant_70891, %concat_index_from_operand_id43890 ], [ %region_0_185_constant_67893, %concat_index_from_operand_id44892 ]
  %multiply.1771013 = fmul float %824, %1066
  %multiply.1781014 = fmul float %divide.175728, %multiply.1771013
  %region_0_185_constant_701015 = load float, ptr @57, align 4
  %Arg_1.21016 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 %822, i32 %821, i32 0
  %Arg_1.21017 = load float, ptr %Arg_1.21016, align 4, !invariant.load !297
  %divide.1791018 = fdiv float %region_0_185_constant_701015, %Arg_1.21017
  %Arg_0.11019 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg0, i32 0, i32 %822, i32 %821, i32 0
  %Arg_0.11020 = load float, ptr %Arg_0.11019, align 4, !invariant.load !297
  %1067 = fneg float %Arg_0.11020
  %subtract.1651021 = fsub float %region_0_185_constant_701015, %1066
  %multiply.1801022 = fmul float %1067, %subtract.1651021
  %multiply.1811023 = fmul float %divide.1791018, %multiply.1801022
  %1068 = fneg float %multiply.1811023
  %add.1831024 = fadd float %multiply.1781014, %1068
  %1069 = mul nuw nsw i32 %561, 1
  %1070 = add nuw nsw i32 0, %1069
  %1071 = mul nuw nsw i32 %560, 960
  %1072 = add nuw nsw i32 %1070, %1071
  %1073 = urem i32 %1072, 8192
  %1074 = udiv i32 %1072, 8192
  %1075 = udiv i32 %1074, 60
  %1076 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg50, i32 0, i32 %1074, i32 %1073, i32 0
  store float %add.1831024, ptr %1076, align 4
  br label %x_in_tile-after

intra_warp_reduce_write-true:                     ; preds = %y_in_tile.loop_exit
  %1077 = getelementptr inbounds [1 x [1 x [2 x float]]], ptr addrspace(3) @shared_cache49, i32 0, i32 %6, i32 0, i32 %31
  %1078 = addrspacecast ptr addrspace(3) %1077 to ptr
  %1079 = load float, ptr %current_output, align 4
  store float %1079, ptr %1078, align 4
  br label %intra_warp_reduce_write-after

inter_warp_reduce-true:                           ; preds = %intra_warp_reduce_write-after
  %1080 = getelementptr inbounds [1 x [1 x [2 x float]]], ptr addrspace(3) @shared_cache49, i32 0, i32 %6, i32 0, i32 %lane_id
  %1081 = addrspacecast ptr addrspace(3) %1080 to ptr
  store float %region_0_185_constant_67, ptr %initial_value_addr, align 4
  %1082 = icmp ult i32 %thread_id.x, 2
  %1083 = select i1 %1082, ptr %1081, ptr %initial_value_addr
  %partial_reduction_result1040 = load float, ptr %1083, align 4
  %1084 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result1040, i32 16, i32 31)
  store float %1084, ptr %result_from_other_lane1039, align 4
  call void @region_1_170(ptr %1083, ptr %result_from_other_lane1039, ptr %return_buffer1041)
  %1085 = load float, ptr %return_buffer1041, align 4
  store float %1085, ptr %1083, align 4
  %partial_reduction_result1043 = load float, ptr %1083, align 4
  %1086 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result1043, i32 8, i32 31)
  store float %1086, ptr %result_from_other_lane1042, align 4
  call void @region_1_170(ptr %1083, ptr %result_from_other_lane1042, ptr %return_buffer1044)
  %1087 = load float, ptr %return_buffer1044, align 4
  store float %1087, ptr %1083, align 4
  %partial_reduction_result1046 = load float, ptr %1083, align 4
  %1088 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result1046, i32 4, i32 31)
  store float %1088, ptr %result_from_other_lane1045, align 4
  call void @region_1_170(ptr %1083, ptr %result_from_other_lane1045, ptr %return_buffer1047)
  %1089 = load float, ptr %return_buffer1047, align 4
  store float %1089, ptr %1083, align 4
  %partial_reduction_result1049 = load float, ptr %1083, align 4
  %1090 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result1049, i32 2, i32 31)
  store float %1090, ptr %result_from_other_lane1048, align 4
  call void @region_1_170(ptr %1083, ptr %result_from_other_lane1048, ptr %return_buffer1050)
  %1091 = load float, ptr %return_buffer1050, align 4
  store float %1091, ptr %1083, align 4
  %partial_reduction_result1052 = load float, ptr %1083, align 4
  %1092 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result1052, i32 1, i32 31)
  store float %1092, ptr %result_from_other_lane1051, align 4
  call void @region_1_170(ptr %1083, ptr %result_from_other_lane1051, ptr %return_buffer1053)
  %1093 = load float, ptr %return_buffer1053, align 4
  store float %1093, ptr %1083, align 4
  %1094 = icmp eq i32 %thread_id.x, 0
  br i1 %1094, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %inter_warp_reduce-true
  br label %inter_warp_reduce-after

reduction_write_output-true:                      ; preds = %inter_warp_reduce-true
  %1095 = mul i32 %thread_id.x, 1
  %1096 = add i32 %tile_origin.1, %thread_id.y
  %1097 = add i32 %tile_origin.2, %1095
  %1098 = add i32 %1097, 0
  %1099 = udiv i32 %1096, 1
  %output_element_address = getelementptr inbounds [512 x float], ptr %arg49, i32 0, i32 %1099
  %output = load float, ptr %1083, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after
}

; Function Attrs: nounwind memory(none)
declare float @__nv_logf(float) #4

define internal void @region_1_170(ptr dereferenceable(4) %Arg_0.171.typed, ptr dereferenceable(4) %Arg_1.172.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.173.typed = alloca float, align 4
  %Arg_0.171 = load float, ptr %Arg_0.171.typed, align 4
  %Arg_1.172 = load float, ptr %Arg_1.172.typed, align 4
  %add.173 = fadd float %Arg_0.171, %Arg_1.172
  store float %add.173, ptr %add.173.typed, align 4
  %load_ret_value = load float, ptr %add.173.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @reduce_4727(ptr noalias align 128 dereferenceable(2048) %arg0, ptr noalias align 128 dereferenceable(4) %arg1, ptr noalias align 128 dereferenceable(4) %arg2) {
entry:
  %initial_value_addr = alloca float, align 4
  %return_buffer27 = alloca float, align 4
  %result_from_other_lane25 = alloca float, align 4
  %return_buffer24 = alloca float, align 4
  %result_from_other_lane22 = alloca float, align 4
  %return_buffer21 = alloca float, align 4
  %result_from_other_lane19 = alloca float, align 4
  %return_buffer18 = alloca float, align 4
  %result_from_other_lane16 = alloca float, align 4
  %return_buffer15 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer13 = alloca float, align 4
  %tile_loop.invar_address7 = alloca i32, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %inter_warp_reduce-after, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %Arg_1.2 = load float, ptr %arg1, align 4, !invariant.load !297
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %Arg_1.2, ptr %2, align 4
  %3 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !358
  %4 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %5 = urem i32 %3, 32
  %6 = udiv i32 %3, 32
  %7 = mul i32 %4, 1
  %8 = add i32 %7, %6
  %9 = icmp ult i32 %8, 1
  br i1 %9, label %10, label %early_return

10:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %5, 32
  %thread_id.y = udiv i32 %5, 32
  %lane_id = urem i32 %5, 32
  %11 = udiv i32 %8, 1
  %12 = urem i32 %11, 1
  %13 = udiv i32 %8, 1
  %14 = urem i32 %13, 1
  %15 = udiv i32 %8, 1
  %16 = icmp eq i32 %14, 0
  %tile_bound = select i1 %16, i32 1, i32 1
  %17 = icmp eq i32 %12, 0
  %tile_bound1 = select i1 %17, i32 512, i32 512
  %tile_origin.0 = mul i32 %15, 1
  %tile_origin.1 = mul i32 %14, 1
  %tile_origin.2 = mul i32 %12, 512
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %is_full_tile-after, %10
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %18 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %18, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 1
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %19 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %20 = icmp eq i32 512, %tile_bound1
  br i1 %20, label %is_full_tile-true, label %is_full_tile-false

is_full_tile-after:                               ; preds = %tile_loop.loop_exit4, %tile_loop.loop_exit
  br label %y_in_tile.loop_header, !llvm.loop !419

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %partial_reduction_result14 = load float, ptr %current_output, align 4
  %21 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result14, i32 16, i32 31)
  store float %21, ptr %result_from_other_lane, align 4
  call void @region_1_3(ptr %current_output, ptr %result_from_other_lane, ptr %return_buffer15)
  %22 = load float, ptr %return_buffer15, align 4
  store float %22, ptr %current_output, align 4
  %partial_reduction_result17 = load float, ptr %current_output, align 4
  %23 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result17, i32 8, i32 31)
  store float %23, ptr %result_from_other_lane16, align 4
  call void @region_1_3(ptr %current_output, ptr %result_from_other_lane16, ptr %return_buffer18)
  %24 = load float, ptr %return_buffer18, align 4
  store float %24, ptr %current_output, align 4
  %partial_reduction_result20 = load float, ptr %current_output, align 4
  %25 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result20, i32 4, i32 31)
  store float %25, ptr %result_from_other_lane19, align 4
  call void @region_1_3(ptr %current_output, ptr %result_from_other_lane19, ptr %return_buffer21)
  %26 = load float, ptr %return_buffer21, align 4
  store float %26, ptr %current_output, align 4
  %partial_reduction_result23 = load float, ptr %current_output, align 4
  %27 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result23, i32 2, i32 31)
  store float %27, ptr %result_from_other_lane22, align 4
  call void @region_1_3(ptr %current_output, ptr %result_from_other_lane22, ptr %return_buffer24)
  %28 = load float, ptr %return_buffer24, align 4
  store float %28, ptr %current_output, align 4
  %partial_reduction_result26 = load float, ptr %current_output, align 4
  %29 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result26, i32 1, i32 31)
  store float %29, ptr %result_from_other_lane25, align 4
  call void @region_1_3(ptr %current_output, ptr %result_from_other_lane25, ptr %return_buffer27)
  %30 = load float, ptr %return_buffer27, align 4
  store float %30, ptr %current_output, align 4
  %31 = udiv i32 %thread_id.x, 32
  %32 = icmp eq i32 %lane_id, 0
  br i1 %32, label %intra_warp_reduce_write-true, label %intra_warp_reduce_write-after

intra_warp_reduce_write-after:                    ; preds = %intra_warp_reduce_write-true, %y_in_tile.loop_exit
  call void @llvm.nvvm.barrier0()
  %33 = icmp eq i32 %31, 0
  br i1 %33, label %inter_warp_reduce-true, label %inter_warp_reduce-after

inter_warp_reduce-after:                          ; preds = %reduction_write_output-after, %intra_warp_reduce_write-after
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

is_full_tile-true:                                ; preds = %y_in_tile.loop_body
  %34 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %tile_loop.loop_body, %is_full_tile-true
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %35 = icmp uge i32 %tile_loop.indvar, 16
  br i1 %35, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %36 = icmp eq i32 %tile_loop.indvar, 0
  %37 = mul i32 %tile_loop.indvar, 32
  %38 = add i32 %37, 0
  %x_loc = add i32 %38, %34
  %39 = add i32 %tile_origin.1, %y_in_tile.indvar
  %40 = add i32 %tile_origin.2, %x_loc
  %41 = mul nuw nsw i32 %40, 1
  %42 = add nuw nsw i32 0, %41
  %43 = mul nuw nsw i32 %39, 512
  %44 = add nuw nsw i32 %42, %43
  %45 = mul nuw nsw i32 %tile_origin.0, 512
  %46 = add nuw nsw i32 %44, %45
  %47 = udiv i32 %46, 1
  %Arg_0.1 = getelementptr inbounds float, ptr %arg0, i32 %46
  %Arg_0.13 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  store float %Arg_0.13, ptr %reduction_input_address, align 4
  %48 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_3(ptr %48, ptr %reduction_input_address, ptr %return_buffer)
  %49 = load float, ptr %return_buffer, align 4
  store float %49, ptr %48, align 4
  br label %tile_loop.loop_header, !llvm.loop !420

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %is_full_tile-after

is_full_tile-false:                               ; preds = %y_in_tile.loop_body
  %50 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address7, align 4
  br label %tile_loop.loop_header5

tile_loop.loop_header5:                           ; preds = %x_in_tile-after, %is_full_tile-false
  %tile_loop.indvar8 = load i32, ptr %tile_loop.invar_address7, align 4
  %51 = icmp uge i32 %tile_loop.indvar8, 16
  br i1 %51, label %tile_loop.loop_exit4, label %tile_loop.loop_body6

tile_loop.loop_body6:                             ; preds = %tile_loop.loop_header5
  %invar.inc9 = add nuw nsw i32 %tile_loop.indvar8, 1
  store i32 %invar.inc9, ptr %tile_loop.invar_address7, align 4
  %52 = icmp eq i32 %tile_loop.indvar8, 0
  %53 = mul i32 %tile_loop.indvar8, 32
  %54 = add i32 %53, 0
  %x_loc10 = add i32 %54, %50
  %55 = add i32 %tile_origin.1, %y_in_tile.indvar
  %56 = add i32 %tile_origin.2, %x_loc10
  %57 = icmp ult i32 %x_loc10, %tile_bound1
  br i1 %57, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body6
  br label %tile_loop.loop_header5, !llvm.loop !421

tile_loop.loop_exit4:                             ; preds = %tile_loop.loop_header5
  br label %is_full_tile-after

x_in_tile-true:                                   ; preds = %tile_loop.loop_body6
  %58 = mul nuw nsw i32 %56, 1
  %59 = add nuw nsw i32 0, %58
  %60 = mul nuw nsw i32 %55, 512
  %61 = add nuw nsw i32 %59, %60
  %62 = mul nuw nsw i32 %tile_origin.0, 512
  %63 = add nuw nsw i32 %61, %62
  %64 = udiv i32 %63, 1
  %Arg_0.111 = getelementptr inbounds float, ptr %arg0, i32 %63
  %Arg_0.112 = load float, ptr %Arg_0.111, align 4, !invariant.load !297
  store float %Arg_0.112, ptr %reduction_input_address, align 4
  %65 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_3(ptr %65, ptr %reduction_input_address, ptr %return_buffer13)
  %66 = load float, ptr %return_buffer13, align 4
  store float %66, ptr %65, align 4
  br label %x_in_tile-after

intra_warp_reduce_write-true:                     ; preds = %y_in_tile.loop_exit
  %67 = getelementptr inbounds [1 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache50, i32 0, i32 %6, i32 0, i32 %31
  %68 = addrspacecast ptr addrspace(3) %67 to ptr
  %69 = load float, ptr %current_output, align 4
  store float %69, ptr %68, align 4
  br label %intra_warp_reduce_write-after

inter_warp_reduce-true:                           ; preds = %intra_warp_reduce_write-after
  %70 = getelementptr inbounds [1 x [1 x [1 x float]]], ptr addrspace(3) @shared_cache50, i32 0, i32 %6, i32 0, i32 %lane_id
  %71 = addrspacecast ptr addrspace(3) %70 to ptr
  store float %Arg_1.2, ptr %initial_value_addr, align 4
  %72 = icmp ult i32 %thread_id.x, 1
  %73 = select i1 %72, ptr %71, ptr %initial_value_addr
  %74 = icmp eq i32 %thread_id.x, 0
  br i1 %74, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %inter_warp_reduce-true
  br label %inter_warp_reduce-after

reduction_write_output-true:                      ; preds = %inter_warp_reduce-true
  %75 = mul i32 %thread_id.x, 1
  %76 = add i32 %tile_origin.1, %thread_id.y
  %77 = add i32 %tile_origin.2, %75
  %78 = add i32 %77, 0
  %output = load float, ptr %73, align 4
  store float %output, ptr %arg2, align 4
  br label %reduction_write_output-after
}

define internal void @region_1_3(ptr dereferenceable(4) %Arg_0.4.typed, ptr dereferenceable(4) %Arg_1.5.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.6.typed = alloca float, align 4
  %Arg_0.4 = load float, ptr %Arg_0.4.typed, align 4
  %Arg_1.5 = load float, ptr %Arg_1.5.typed, align 4
  %add.6 = fadd float %Arg_0.4, %Arg_1.5
  store float %add.6, ptr %add.6.typed, align 4
  %load_ret_value = load float, ptr %add.6.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_679(ptr noalias align 128 dereferenceable(32768) %arg0, ptr noalias align 128 dereferenceable(1966080) %arg1, ptr noalias align 128 dereferenceable(32768) %arg2, ptr noalias align 128 dereferenceable(32768) %arg3, ptr noalias align 128 dereferenceable(32768) %arg4, ptr noalias align 128 dereferenceable(4) %arg5, ptr noalias align 128 dereferenceable(4) %arg6, ptr noalias align 128 dereferenceable(4) %arg7, ptr noalias align 128 dereferenceable(4) %arg8) {
entry:
  %return_buffer278 = alloca float, align 4
  %result_from_other_lane276 = alloca float, align 4
  %return_buffer275 = alloca float, align 4
  %result_from_other_lane273 = alloca float, align 4
  %return_buffer272 = alloca float, align 4
  %result_from_other_lane270 = alloca float, align 4
  %return_buffer269 = alloca float, align 4
  %result_from_other_lane267 = alloca float, align 4
  %return_buffer266 = alloca float, align 4
  %result_from_other_lane264 = alloca float, align 4
  %initial_value_addr263 = alloca float, align 4
  %return_buffer258 = alloca float, align 4
  %result_from_other_lane256 = alloca float, align 4
  %return_buffer255 = alloca float, align 4
  %result_from_other_lane253 = alloca float, align 4
  %return_buffer252 = alloca float, align 4
  %result_from_other_lane250 = alloca float, align 4
  %return_buffer249 = alloca float, align 4
  %result_from_other_lane247 = alloca float, align 4
  %return_buffer246 = alloca float, align 4
  %result_from_other_lane244 = alloca float, align 4
  %return_buffer239 = alloca float, align 4
  %result_from_other_lane237 = alloca float, align 4
  %return_buffer236 = alloca float, align 4
  %result_from_other_lane234 = alloca float, align 4
  %return_buffer233 = alloca float, align 4
  %result_from_other_lane231 = alloca float, align 4
  %return_buffer230 = alloca float, align 4
  %result_from_other_lane228 = alloca float, align 4
  %return_buffer227 = alloca float, align 4
  %result_from_other_lane225 = alloca float, align 4
  %initial_value_addr224 = alloca float, align 4
  %return_buffer219 = alloca float, align 4
  %result_from_other_lane217 = alloca float, align 4
  %return_buffer216 = alloca float, align 4
  %result_from_other_lane214 = alloca float, align 4
  %return_buffer213 = alloca float, align 4
  %result_from_other_lane211 = alloca float, align 4
  %return_buffer210 = alloca float, align 4
  %result_from_other_lane208 = alloca float, align 4
  %return_buffer207 = alloca float, align 4
  %result_from_other_lane205 = alloca float, align 4
  %return_buffer200 = alloca float, align 4
  %result_from_other_lane198 = alloca float, align 4
  %return_buffer197 = alloca float, align 4
  %result_from_other_lane195 = alloca float, align 4
  %return_buffer194 = alloca float, align 4
  %result_from_other_lane192 = alloca float, align 4
  %return_buffer191 = alloca float, align 4
  %result_from_other_lane189 = alloca float, align 4
  %return_buffer188 = alloca float, align 4
  %result_from_other_lane186 = alloca float, align 4
  %initial_value_addr185 = alloca float, align 4
  %return_buffer180 = alloca float, align 4
  %result_from_other_lane178 = alloca float, align 4
  %return_buffer177 = alloca float, align 4
  %result_from_other_lane175 = alloca float, align 4
  %return_buffer174 = alloca float, align 4
  %result_from_other_lane172 = alloca float, align 4
  %return_buffer171 = alloca float, align 4
  %result_from_other_lane169 = alloca float, align 4
  %return_buffer168 = alloca float, align 4
  %result_from_other_lane166 = alloca float, align 4
  %return_buffer164 = alloca float, align 4
  %result_from_other_lane162 = alloca float, align 4
  %return_buffer161 = alloca float, align 4
  %result_from_other_lane159 = alloca float, align 4
  %return_buffer158 = alloca float, align 4
  %result_from_other_lane156 = alloca float, align 4
  %return_buffer155 = alloca float, align 4
  %result_from_other_lane153 = alloca float, align 4
  %return_buffer152 = alloca float, align 4
  %result_from_other_lane150 = alloca float, align 4
  %initial_value_addr = alloca float, align 4
  %return_buffer149 = alloca float, align 4
  %result_from_other_lane147 = alloca float, align 4
  %return_buffer146 = alloca float, align 4
  %result_from_other_lane144 = alloca float, align 4
  %return_buffer143 = alloca float, align 4
  %result_from_other_lane141 = alloca float, align 4
  %return_buffer140 = alloca float, align 4
  %result_from_other_lane138 = alloca float, align 4
  %return_buffer137 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer135 = alloca float, align 4
  %return_buffer127 = alloca float, align 4
  %return_buffer119 = alloca float, align 4
  %return_buffer111 = alloca float, align 4
  %return_buffer99 = alloca float, align 4
  %return_buffer91 = alloca float, align 4
  %return_buffer83 = alloca float, align 4
  %return_buffer75 = alloca float, align 4
  %tile_loop.invar_address63 = alloca i32, align 4
  %return_buffer59 = alloca float, align 4
  %return_buffer51 = alloca float, align 4
  %return_buffer43 = alloca float, align 4
  %return_buffer35 = alloca float, align 4
  %return_buffer25 = alloca float, align 4
  %return_buffer21 = alloca float, align 4
  %return_buffer17 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result8 = alloca float, align 4
  %reduction_input_address7 = alloca float, align 4
  %partial_reduction_result5 = alloca float, align 4
  %reduction_input_address4 = alloca float, align 4
  %partial_reduction_result2 = alloca float, align 4
  %reduction_input_address1 = alloca float, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %inter_warp_reduce-after262, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_58_constant_15 = load float, ptr @60, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_58_constant_15, ptr %2, align 4
  %region_0_58_constant_153 = load float, ptr @60, align 4
  %3 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  store float %region_0_58_constant_153, ptr %3, align 4
  %region_0_58_constant_156 = load float, ptr @60, align 4
  %4 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  store float %region_0_58_constant_156, ptr %4, align 4
  %region_0_58_constant_159 = load float, ptr @60, align 4
  %5 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  store float %region_0_58_constant_159, ptr %5, align 4
  %6 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !293
  %7 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %8 = urem i32 %6, 512
  %9 = udiv i32 %6, 512
  %10 = mul i32 %7, 1
  %11 = add i32 %10, %9
  %12 = icmp ult i32 %11, 1
  br i1 %12, label %13, label %early_return

13:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %8, 512
  %thread_id.y = udiv i32 %8, 512
  %lane_id = urem i32 %8, 32
  %14 = udiv i32 %11, 1
  %15 = urem i32 %14, 1
  %16 = udiv i32 %11, 1
  %17 = urem i32 %16, 1
  %18 = udiv i32 %11, 1
  %19 = icmp eq i32 %17, 0
  %tile_bound = select i1 %19, i32 1, i32 1
  %20 = icmp eq i32 %15, 0
  %tile_bound10 = select i1 %20, i32 8192, i32 8192
  %tile_origin.0 = mul i32 %18, 1
  %tile_origin.1 = mul i32 %17, 1
  %tile_origin.2 = mul i32 %15, 8192
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %is_full_tile-after, %13
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %21 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %21, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 1
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %22 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %23 = icmp eq i32 8192, %tile_bound10
  br i1 %23, label %is_full_tile-true, label %is_full_tile-false

is_full_tile-after:                               ; preds = %tile_loop.loop_exit60, %tile_loop.loop_exit
  br label %y_in_tile.loop_header, !llvm.loop !422

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %partial_reduction_result136 = load float, ptr %current_output, align 4
  %24 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result136, i32 16, i32 31)
  store float %24, ptr %result_from_other_lane, align 4
  call void @region_1_16__1(ptr %current_output, ptr %result_from_other_lane, ptr %return_buffer137)
  %25 = load float, ptr %return_buffer137, align 4
  store float %25, ptr %current_output, align 4
  %partial_reduction_result139 = load float, ptr %current_output, align 4
  %26 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result139, i32 8, i32 31)
  store float %26, ptr %result_from_other_lane138, align 4
  call void @region_1_16__1(ptr %current_output, ptr %result_from_other_lane138, ptr %return_buffer140)
  %27 = load float, ptr %return_buffer140, align 4
  store float %27, ptr %current_output, align 4
  %partial_reduction_result142 = load float, ptr %current_output, align 4
  %28 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result142, i32 4, i32 31)
  store float %28, ptr %result_from_other_lane141, align 4
  call void @region_1_16__1(ptr %current_output, ptr %result_from_other_lane141, ptr %return_buffer143)
  %29 = load float, ptr %return_buffer143, align 4
  store float %29, ptr %current_output, align 4
  %partial_reduction_result145 = load float, ptr %current_output, align 4
  %30 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result145, i32 2, i32 31)
  store float %30, ptr %result_from_other_lane144, align 4
  call void @region_1_16__1(ptr %current_output, ptr %result_from_other_lane144, ptr %return_buffer146)
  %31 = load float, ptr %return_buffer146, align 4
  store float %31, ptr %current_output, align 4
  %partial_reduction_result148 = load float, ptr %current_output, align 4
  %32 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result148, i32 1, i32 31)
  store float %32, ptr %result_from_other_lane147, align 4
  call void @region_1_16__1(ptr %current_output, ptr %result_from_other_lane147, ptr %return_buffer149)
  %33 = load float, ptr %return_buffer149, align 4
  store float %33, ptr %current_output, align 4
  %34 = udiv i32 %thread_id.x, 32
  %35 = icmp eq i32 %lane_id, 0
  br i1 %35, label %intra_warp_reduce_write-true, label %intra_warp_reduce_write-after

intra_warp_reduce_write-after:                    ; preds = %intra_warp_reduce_write-true, %y_in_tile.loop_exit
  call void @llvm.nvvm.barrier0()
  %36 = icmp eq i32 %34, 0
  br i1 %36, label %inter_warp_reduce-true, label %inter_warp_reduce-after

inter_warp_reduce-after:                          ; preds = %reduction_write_output-after, %intra_warp_reduce_write-after
  %current_output165 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  %partial_reduction_result167 = load float, ptr %current_output165, align 4
  %37 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result167, i32 16, i32 31)
  store float %37, ptr %result_from_other_lane166, align 4
  call void @region_2_28(ptr %current_output165, ptr %result_from_other_lane166, ptr %return_buffer168)
  %38 = load float, ptr %return_buffer168, align 4
  store float %38, ptr %current_output165, align 4
  %partial_reduction_result170 = load float, ptr %current_output165, align 4
  %39 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result170, i32 8, i32 31)
  store float %39, ptr %result_from_other_lane169, align 4
  call void @region_2_28(ptr %current_output165, ptr %result_from_other_lane169, ptr %return_buffer171)
  %40 = load float, ptr %return_buffer171, align 4
  store float %40, ptr %current_output165, align 4
  %partial_reduction_result173 = load float, ptr %current_output165, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result173, i32 4, i32 31)
  store float %41, ptr %result_from_other_lane172, align 4
  call void @region_2_28(ptr %current_output165, ptr %result_from_other_lane172, ptr %return_buffer174)
  %42 = load float, ptr %return_buffer174, align 4
  store float %42, ptr %current_output165, align 4
  %partial_reduction_result176 = load float, ptr %current_output165, align 4
  %43 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result176, i32 2, i32 31)
  store float %43, ptr %result_from_other_lane175, align 4
  call void @region_2_28(ptr %current_output165, ptr %result_from_other_lane175, ptr %return_buffer177)
  %44 = load float, ptr %return_buffer177, align 4
  store float %44, ptr %current_output165, align 4
  %partial_reduction_result179 = load float, ptr %current_output165, align 4
  %45 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result179, i32 1, i32 31)
  store float %45, ptr %result_from_other_lane178, align 4
  call void @region_2_28(ptr %current_output165, ptr %result_from_other_lane178, ptr %return_buffer180)
  %46 = load float, ptr %return_buffer180, align 4
  store float %46, ptr %current_output165, align 4
  %47 = udiv i32 %thread_id.x, 32
  %48 = icmp eq i32 %lane_id, 0
  br i1 %48, label %intra_warp_reduce_write-true181, label %intra_warp_reduce_write-after182

intra_warp_reduce_write-after182:                 ; preds = %intra_warp_reduce_write-true181, %inter_warp_reduce-after
  call void @llvm.nvvm.barrier0()
  %49 = icmp eq i32 %47, 0
  br i1 %49, label %inter_warp_reduce-true183, label %inter_warp_reduce-after184

inter_warp_reduce-after184:                       ; preds = %reduction_write_output-after202, %intra_warp_reduce_write-after182
  %current_output204 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  %partial_reduction_result206 = load float, ptr %current_output204, align 4
  %50 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result206, i32 16, i32 31)
  store float %50, ptr %result_from_other_lane205, align 4
  call void @region_3_40(ptr %current_output204, ptr %result_from_other_lane205, ptr %return_buffer207)
  %51 = load float, ptr %return_buffer207, align 4
  store float %51, ptr %current_output204, align 4
  %partial_reduction_result209 = load float, ptr %current_output204, align 4
  %52 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result209, i32 8, i32 31)
  store float %52, ptr %result_from_other_lane208, align 4
  call void @region_3_40(ptr %current_output204, ptr %result_from_other_lane208, ptr %return_buffer210)
  %53 = load float, ptr %return_buffer210, align 4
  store float %53, ptr %current_output204, align 4
  %partial_reduction_result212 = load float, ptr %current_output204, align 4
  %54 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result212, i32 4, i32 31)
  store float %54, ptr %result_from_other_lane211, align 4
  call void @region_3_40(ptr %current_output204, ptr %result_from_other_lane211, ptr %return_buffer213)
  %55 = load float, ptr %return_buffer213, align 4
  store float %55, ptr %current_output204, align 4
  %partial_reduction_result215 = load float, ptr %current_output204, align 4
  %56 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result215, i32 2, i32 31)
  store float %56, ptr %result_from_other_lane214, align 4
  call void @region_3_40(ptr %current_output204, ptr %result_from_other_lane214, ptr %return_buffer216)
  %57 = load float, ptr %return_buffer216, align 4
  store float %57, ptr %current_output204, align 4
  %partial_reduction_result218 = load float, ptr %current_output204, align 4
  %58 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result218, i32 1, i32 31)
  store float %58, ptr %result_from_other_lane217, align 4
  call void @region_3_40(ptr %current_output204, ptr %result_from_other_lane217, ptr %return_buffer219)
  %59 = load float, ptr %return_buffer219, align 4
  store float %59, ptr %current_output204, align 4
  %60 = udiv i32 %thread_id.x, 32
  %61 = icmp eq i32 %lane_id, 0
  br i1 %61, label %intra_warp_reduce_write-true220, label %intra_warp_reduce_write-after221

intra_warp_reduce_write-after221:                 ; preds = %intra_warp_reduce_write-true220, %inter_warp_reduce-after184
  call void @llvm.nvvm.barrier0()
  %62 = icmp eq i32 %60, 0
  br i1 %62, label %inter_warp_reduce-true222, label %inter_warp_reduce-after223

inter_warp_reduce-after223:                       ; preds = %reduction_write_output-after241, %intra_warp_reduce_write-after221
  %current_output243 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  %partial_reduction_result245 = load float, ptr %current_output243, align 4
  %63 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result245, i32 16, i32 31)
  store float %63, ptr %result_from_other_lane244, align 4
  call void @region_4_52(ptr %current_output243, ptr %result_from_other_lane244, ptr %return_buffer246)
  %64 = load float, ptr %return_buffer246, align 4
  store float %64, ptr %current_output243, align 4
  %partial_reduction_result248 = load float, ptr %current_output243, align 4
  %65 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result248, i32 8, i32 31)
  store float %65, ptr %result_from_other_lane247, align 4
  call void @region_4_52(ptr %current_output243, ptr %result_from_other_lane247, ptr %return_buffer249)
  %66 = load float, ptr %return_buffer249, align 4
  store float %66, ptr %current_output243, align 4
  %partial_reduction_result251 = load float, ptr %current_output243, align 4
  %67 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result251, i32 4, i32 31)
  store float %67, ptr %result_from_other_lane250, align 4
  call void @region_4_52(ptr %current_output243, ptr %result_from_other_lane250, ptr %return_buffer252)
  %68 = load float, ptr %return_buffer252, align 4
  store float %68, ptr %current_output243, align 4
  %partial_reduction_result254 = load float, ptr %current_output243, align 4
  %69 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result254, i32 2, i32 31)
  store float %69, ptr %result_from_other_lane253, align 4
  call void @region_4_52(ptr %current_output243, ptr %result_from_other_lane253, ptr %return_buffer255)
  %70 = load float, ptr %return_buffer255, align 4
  store float %70, ptr %current_output243, align 4
  %partial_reduction_result257 = load float, ptr %current_output243, align 4
  %71 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result257, i32 1, i32 31)
  store float %71, ptr %result_from_other_lane256, align 4
  call void @region_4_52(ptr %current_output243, ptr %result_from_other_lane256, ptr %return_buffer258)
  %72 = load float, ptr %return_buffer258, align 4
  store float %72, ptr %current_output243, align 4
  %73 = udiv i32 %thread_id.x, 32
  %74 = icmp eq i32 %lane_id, 0
  br i1 %74, label %intra_warp_reduce_write-true259, label %intra_warp_reduce_write-after260

intra_warp_reduce_write-after260:                 ; preds = %intra_warp_reduce_write-true259, %inter_warp_reduce-after223
  call void @llvm.nvvm.barrier0()
  %75 = icmp eq i32 %73, 0
  br i1 %75, label %inter_warp_reduce-true261, label %inter_warp_reduce-after262

inter_warp_reduce-after262:                       ; preds = %reduction_write_output-after280, %intra_warp_reduce_write-after260
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

is_full_tile-true:                                ; preds = %y_in_tile.loop_body
  %76 = mul i32 %thread_id.x, 2
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %tile_loop.loop_body, %is_full_tile-true
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %77 = icmp uge i32 %tile_loop.indvar, 8
  br i1 %77, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc11 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc11, ptr %tile_loop.invar_address, align 4
  %78 = icmp eq i32 %tile_loop.indvar, 0
  %79 = mul i32 %tile_loop.indvar, 1024
  %80 = add i32 %79, 0
  %x_loc = add i32 %80, %76
  %81 = add i32 %tile_origin.1, %y_in_tile.indvar
  %82 = add i32 %tile_origin.2, %x_loc
  %83 = mul nuw nsw i32 %82, 1
  %84 = add nuw nsw i32 0, %83
  %85 = mul nuw nsw i32 %81, 8192
  %86 = add nuw nsw i32 %84, %85
  %87 = mul nuw nsw i32 %tile_origin.0, 8192
  %88 = add nuw nsw i32 %86, %87
  %89 = udiv i32 %88, 1
  %90 = add i32 %89, 0
  %Arg_1.2 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 43, i32 %90, i32 0
  %Arg_1.212 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %Arg_0.1 = getelementptr inbounds float, ptr %arg0, i32 %88
  %Arg_0.113 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %multiply.9 = fmul float %Arg_1.212, %Arg_0.113
  %region_0_58_constant_10 = load float, ptr @61, align 4
  %subtract.12 = fsub float %region_0_58_constant_10, %Arg_0.113
  %multiply.13 = fmul float %multiply.9, %subtract.12
  store float %multiply.13, ptr %reduction_input_address, align 4
  %91 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_16__1(ptr %91, ptr %reduction_input_address, ptr %return_buffer)
  %92 = load float, ptr %return_buffer, align 4
  store float %92, ptr %91, align 4
  %93 = add i32 %89, 0
  %Arg_1.214 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 6, i32 %93, i32 0
  %Arg_1.215 = load float, ptr %Arg_1.214, align 4, !invariant.load !297
  %Arg_2.3 = getelementptr inbounds float, ptr %arg2, i32 %88
  %Arg_2.316 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %multiply.24 = fmul float %Arg_1.215, %Arg_2.316
  %subtract.25 = fsub float %region_0_58_constant_10, %Arg_2.316
  %multiply.26 = fmul float %multiply.24, %subtract.25
  store float %multiply.26, ptr %reduction_input_address1, align 4
  %94 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_28(ptr %94, ptr %reduction_input_address1, ptr %return_buffer17)
  %95 = load float, ptr %return_buffer17, align 4
  store float %95, ptr %94, align 4
  %96 = add i32 %89, 0
  %Arg_1.218 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 32, i32 %96, i32 0
  %Arg_1.219 = load float, ptr %Arg_1.218, align 4, !invariant.load !297
  %Arg_3.4 = getelementptr inbounds float, ptr %arg3, i32 %88
  %Arg_3.420 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  %multiply.36 = fmul float %Arg_1.219, %Arg_3.420
  %subtract.37 = fsub float %region_0_58_constant_10, %Arg_3.420
  %multiply.38 = fmul float %multiply.36, %subtract.37
  store float %multiply.38, ptr %reduction_input_address4, align 4
  %97 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  call void @region_3_40(ptr %97, ptr %reduction_input_address4, ptr %return_buffer21)
  %98 = load float, ptr %return_buffer21, align 4
  store float %98, ptr %97, align 4
  %99 = add i32 %89, 0
  %Arg_1.222 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 33, i32 %99, i32 0
  %Arg_1.223 = load float, ptr %Arg_1.222, align 4, !invariant.load !297
  %Arg_4.5 = getelementptr inbounds float, ptr %arg4, i32 %88
  %Arg_4.524 = load float, ptr %Arg_4.5, align 4, !invariant.load !297
  %multiply.48 = fmul float %Arg_1.223, %Arg_4.524
  %subtract.49 = fsub float %region_0_58_constant_10, %Arg_4.524
  %multiply.50 = fmul float %multiply.48, %subtract.49
  store float %multiply.50, ptr %reduction_input_address7, align 4
  %100 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  call void @region_4_52(ptr %100, ptr %reduction_input_address7, ptr %return_buffer25)
  %101 = load float, ptr %return_buffer25, align 4
  store float %101, ptr %100, align 4
  %102 = mul i32 %tile_loop.indvar, 1024
  %103 = add i32 %102, 1
  %x_loc26 = add i32 %103, %76
  %104 = add i32 %tile_origin.1, %y_in_tile.indvar
  %105 = add i32 %tile_origin.2, %x_loc26
  %106 = mul nuw nsw i32 %105, 1
  %107 = add nuw nsw i32 0, %106
  %108 = mul nuw nsw i32 %104, 8192
  %109 = add nuw nsw i32 %107, %108
  %110 = mul nuw nsw i32 %tile_origin.0, 8192
  %111 = add nuw nsw i32 %109, %110
  %112 = udiv i32 %111, 1
  %113 = add i32 %112, 0
  %Arg_1.227 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 43, i32 %113, i32 0
  %Arg_1.228 = load float, ptr %Arg_1.227, align 4, !invariant.load !297
  %Arg_0.129 = getelementptr inbounds float, ptr %arg0, i32 %111
  %Arg_0.130 = load float, ptr %Arg_0.129, align 4, !invariant.load !297
  %multiply.931 = fmul float %Arg_1.228, %Arg_0.130
  %region_0_58_constant_1032 = load float, ptr @61, align 4
  %subtract.1233 = fsub float %region_0_58_constant_1032, %Arg_0.130
  %multiply.1334 = fmul float %multiply.931, %subtract.1233
  store float %multiply.1334, ptr %reduction_input_address, align 4
  %114 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_16__1(ptr %114, ptr %reduction_input_address, ptr %return_buffer35)
  %115 = load float, ptr %return_buffer35, align 4
  store float %115, ptr %114, align 4
  %116 = add i32 %112, 0
  %Arg_1.236 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 6, i32 %116, i32 0
  %Arg_1.237 = load float, ptr %Arg_1.236, align 4, !invariant.load !297
  %Arg_2.338 = getelementptr inbounds float, ptr %arg2, i32 %111
  %Arg_2.339 = load float, ptr %Arg_2.338, align 4, !invariant.load !297
  %multiply.2440 = fmul float %Arg_1.237, %Arg_2.339
  %subtract.2541 = fsub float %region_0_58_constant_1032, %Arg_2.339
  %multiply.2642 = fmul float %multiply.2440, %subtract.2541
  store float %multiply.2642, ptr %reduction_input_address1, align 4
  %117 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_28(ptr %117, ptr %reduction_input_address1, ptr %return_buffer43)
  %118 = load float, ptr %return_buffer43, align 4
  store float %118, ptr %117, align 4
  %119 = add i32 %112, 0
  %Arg_1.244 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 32, i32 %119, i32 0
  %Arg_1.245 = load float, ptr %Arg_1.244, align 4, !invariant.load !297
  %Arg_3.446 = getelementptr inbounds float, ptr %arg3, i32 %111
  %Arg_3.447 = load float, ptr %Arg_3.446, align 4, !invariant.load !297
  %multiply.3648 = fmul float %Arg_1.245, %Arg_3.447
  %subtract.3749 = fsub float %region_0_58_constant_1032, %Arg_3.447
  %multiply.3850 = fmul float %multiply.3648, %subtract.3749
  store float %multiply.3850, ptr %reduction_input_address4, align 4
  %120 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  call void @region_3_40(ptr %120, ptr %reduction_input_address4, ptr %return_buffer51)
  %121 = load float, ptr %return_buffer51, align 4
  store float %121, ptr %120, align 4
  %122 = add i32 %112, 0
  %Arg_1.252 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 33, i32 %122, i32 0
  %Arg_1.253 = load float, ptr %Arg_1.252, align 4, !invariant.load !297
  %Arg_4.554 = getelementptr inbounds float, ptr %arg4, i32 %111
  %Arg_4.555 = load float, ptr %Arg_4.554, align 4, !invariant.load !297
  %multiply.4856 = fmul float %Arg_1.253, %Arg_4.555
  %subtract.4957 = fsub float %region_0_58_constant_1032, %Arg_4.555
  %multiply.5058 = fmul float %multiply.4856, %subtract.4957
  store float %multiply.5058, ptr %reduction_input_address7, align 4
  %123 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  call void @region_4_52(ptr %123, ptr %reduction_input_address7, ptr %return_buffer59)
  %124 = load float, ptr %return_buffer59, align 4
  store float %124, ptr %123, align 4
  br label %tile_loop.loop_header, !llvm.loop !423

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %is_full_tile-after

is_full_tile-false:                               ; preds = %y_in_tile.loop_body
  %125 = mul i32 %thread_id.x, 2
  store i32 0, ptr %tile_loop.invar_address63, align 4
  br label %tile_loop.loop_header61

tile_loop.loop_header61:                          ; preds = %x_in_tile-after102, %is_full_tile-false
  %tile_loop.indvar64 = load i32, ptr %tile_loop.invar_address63, align 4
  %126 = icmp uge i32 %tile_loop.indvar64, 8
  br i1 %126, label %tile_loop.loop_exit60, label %tile_loop.loop_body62

tile_loop.loop_body62:                            ; preds = %tile_loop.loop_header61
  %invar.inc65 = add nuw nsw i32 %tile_loop.indvar64, 1
  store i32 %invar.inc65, ptr %tile_loop.invar_address63, align 4
  %127 = icmp eq i32 %tile_loop.indvar64, 0
  %128 = mul i32 %tile_loop.indvar64, 1024
  %129 = add i32 %128, 0
  %x_loc66 = add i32 %129, %125
  %130 = add i32 %tile_origin.1, %y_in_tile.indvar
  %131 = add i32 %tile_origin.2, %x_loc66
  %132 = icmp ult i32 %x_loc66, %tile_bound10
  br i1 %132, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body62
  %133 = mul i32 %tile_loop.indvar64, 1024
  %134 = add i32 %133, 1
  %x_loc100 = add i32 %134, %125
  %135 = add i32 %tile_origin.1, %y_in_tile.indvar
  %136 = add i32 %tile_origin.2, %x_loc100
  %137 = icmp ult i32 %x_loc100, %tile_bound10
  br i1 %137, label %x_in_tile-true101, label %x_in_tile-after102

x_in_tile-after102:                               ; preds = %x_in_tile-true101, %x_in_tile-after
  br label %tile_loop.loop_header61, !llvm.loop !424

tile_loop.loop_exit60:                            ; preds = %tile_loop.loop_header61
  br label %is_full_tile-after

x_in_tile-true:                                   ; preds = %tile_loop.loop_body62
  %138 = mul nuw nsw i32 %131, 1
  %139 = add nuw nsw i32 0, %138
  %140 = mul nuw nsw i32 %130, 8192
  %141 = add nuw nsw i32 %139, %140
  %142 = mul nuw nsw i32 %tile_origin.0, 8192
  %143 = add nuw nsw i32 %141, %142
  %144 = udiv i32 %143, 1
  %145 = add i32 %144, 0
  %Arg_1.267 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 43, i32 %145, i32 0
  %Arg_1.268 = load float, ptr %Arg_1.267, align 4, !invariant.load !297
  %Arg_0.169 = getelementptr inbounds float, ptr %arg0, i32 %143
  %Arg_0.170 = load float, ptr %Arg_0.169, align 4, !invariant.load !297
  %multiply.971 = fmul float %Arg_1.268, %Arg_0.170
  %region_0_58_constant_1072 = load float, ptr @61, align 4
  %subtract.1273 = fsub float %region_0_58_constant_1072, %Arg_0.170
  %multiply.1374 = fmul float %multiply.971, %subtract.1273
  store float %multiply.1374, ptr %reduction_input_address, align 4
  %146 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_16__1(ptr %146, ptr %reduction_input_address, ptr %return_buffer75)
  %147 = load float, ptr %return_buffer75, align 4
  store float %147, ptr %146, align 4
  %148 = add i32 %144, 0
  %Arg_1.276 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 6, i32 %148, i32 0
  %Arg_1.277 = load float, ptr %Arg_1.276, align 4, !invariant.load !297
  %Arg_2.378 = getelementptr inbounds float, ptr %arg2, i32 %143
  %Arg_2.379 = load float, ptr %Arg_2.378, align 4, !invariant.load !297
  %multiply.2480 = fmul float %Arg_1.277, %Arg_2.379
  %subtract.2581 = fsub float %region_0_58_constant_1072, %Arg_2.379
  %multiply.2682 = fmul float %multiply.2480, %subtract.2581
  store float %multiply.2682, ptr %reduction_input_address1, align 4
  %149 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_28(ptr %149, ptr %reduction_input_address1, ptr %return_buffer83)
  %150 = load float, ptr %return_buffer83, align 4
  store float %150, ptr %149, align 4
  %151 = add i32 %144, 0
  %Arg_1.284 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 32, i32 %151, i32 0
  %Arg_1.285 = load float, ptr %Arg_1.284, align 4, !invariant.load !297
  %Arg_3.486 = getelementptr inbounds float, ptr %arg3, i32 %143
  %Arg_3.487 = load float, ptr %Arg_3.486, align 4, !invariant.load !297
  %multiply.3688 = fmul float %Arg_1.285, %Arg_3.487
  %subtract.3789 = fsub float %region_0_58_constant_1072, %Arg_3.487
  %multiply.3890 = fmul float %multiply.3688, %subtract.3789
  store float %multiply.3890, ptr %reduction_input_address4, align 4
  %152 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  call void @region_3_40(ptr %152, ptr %reduction_input_address4, ptr %return_buffer91)
  %153 = load float, ptr %return_buffer91, align 4
  store float %153, ptr %152, align 4
  %154 = add i32 %144, 0
  %Arg_1.292 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 33, i32 %154, i32 0
  %Arg_1.293 = load float, ptr %Arg_1.292, align 4, !invariant.load !297
  %Arg_4.594 = getelementptr inbounds float, ptr %arg4, i32 %143
  %Arg_4.595 = load float, ptr %Arg_4.594, align 4, !invariant.load !297
  %multiply.4896 = fmul float %Arg_1.293, %Arg_4.595
  %subtract.4997 = fsub float %region_0_58_constant_1072, %Arg_4.595
  %multiply.5098 = fmul float %multiply.4896, %subtract.4997
  store float %multiply.5098, ptr %reduction_input_address7, align 4
  %155 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  call void @region_4_52(ptr %155, ptr %reduction_input_address7, ptr %return_buffer99)
  %156 = load float, ptr %return_buffer99, align 4
  store float %156, ptr %155, align 4
  br label %x_in_tile-after

x_in_tile-true101:                                ; preds = %x_in_tile-after
  %157 = mul nuw nsw i32 %136, 1
  %158 = add nuw nsw i32 0, %157
  %159 = mul nuw nsw i32 %135, 8192
  %160 = add nuw nsw i32 %158, %159
  %161 = mul nuw nsw i32 %tile_origin.0, 8192
  %162 = add nuw nsw i32 %160, %161
  %163 = udiv i32 %162, 1
  %164 = add i32 %163, 0
  %Arg_1.2103 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 43, i32 %164, i32 0
  %Arg_1.2104 = load float, ptr %Arg_1.2103, align 4, !invariant.load !297
  %Arg_0.1105 = getelementptr inbounds float, ptr %arg0, i32 %162
  %Arg_0.1106 = load float, ptr %Arg_0.1105, align 4, !invariant.load !297
  %multiply.9107 = fmul float %Arg_1.2104, %Arg_0.1106
  %region_0_58_constant_10108 = load float, ptr @61, align 4
  %subtract.12109 = fsub float %region_0_58_constant_10108, %Arg_0.1106
  %multiply.13110 = fmul float %multiply.9107, %subtract.12109
  store float %multiply.13110, ptr %reduction_input_address, align 4
  %165 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_16__1(ptr %165, ptr %reduction_input_address, ptr %return_buffer111)
  %166 = load float, ptr %return_buffer111, align 4
  store float %166, ptr %165, align 4
  %167 = add i32 %163, 0
  %Arg_1.2112 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 6, i32 %167, i32 0
  %Arg_1.2113 = load float, ptr %Arg_1.2112, align 4, !invariant.load !297
  %Arg_2.3114 = getelementptr inbounds float, ptr %arg2, i32 %162
  %Arg_2.3115 = load float, ptr %Arg_2.3114, align 4, !invariant.load !297
  %multiply.24116 = fmul float %Arg_1.2113, %Arg_2.3115
  %subtract.25117 = fsub float %region_0_58_constant_10108, %Arg_2.3115
  %multiply.26118 = fmul float %multiply.24116, %subtract.25117
  store float %multiply.26118, ptr %reduction_input_address1, align 4
  %168 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_28(ptr %168, ptr %reduction_input_address1, ptr %return_buffer119)
  %169 = load float, ptr %return_buffer119, align 4
  store float %169, ptr %168, align 4
  %170 = add i32 %163, 0
  %Arg_1.2120 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 32, i32 %170, i32 0
  %Arg_1.2121 = load float, ptr %Arg_1.2120, align 4, !invariant.load !297
  %Arg_3.4122 = getelementptr inbounds float, ptr %arg3, i32 %162
  %Arg_3.4123 = load float, ptr %Arg_3.4122, align 4, !invariant.load !297
  %multiply.36124 = fmul float %Arg_1.2121, %Arg_3.4123
  %subtract.37125 = fsub float %region_0_58_constant_10108, %Arg_3.4123
  %multiply.38126 = fmul float %multiply.36124, %subtract.37125
  store float %multiply.38126, ptr %reduction_input_address4, align 4
  %171 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  call void @region_3_40(ptr %171, ptr %reduction_input_address4, ptr %return_buffer127)
  %172 = load float, ptr %return_buffer127, align 4
  store float %172, ptr %171, align 4
  %173 = add i32 %163, 0
  %Arg_1.2128 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 33, i32 %173, i32 0
  %Arg_1.2129 = load float, ptr %Arg_1.2128, align 4, !invariant.load !297
  %Arg_4.5130 = getelementptr inbounds float, ptr %arg4, i32 %162
  %Arg_4.5131 = load float, ptr %Arg_4.5130, align 4, !invariant.load !297
  %multiply.48132 = fmul float %Arg_1.2129, %Arg_4.5131
  %subtract.49133 = fsub float %region_0_58_constant_10108, %Arg_4.5131
  %multiply.50134 = fmul float %multiply.48132, %subtract.49133
  store float %multiply.50134, ptr %reduction_input_address7, align 4
  %174 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  call void @region_4_52(ptr %174, ptr %reduction_input_address7, ptr %return_buffer135)
  %175 = load float, ptr %return_buffer135, align 4
  store float %175, ptr %174, align 4
  br label %x_in_tile-after102

intra_warp_reduce_write-true:                     ; preds = %y_in_tile.loop_exit
  %176 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache51, i32 0, i32 %9, i32 0, i32 %34
  %177 = addrspacecast ptr addrspace(3) %176 to ptr
  %178 = load float, ptr %current_output, align 4
  store float %178, ptr %177, align 4
  br label %intra_warp_reduce_write-after

inter_warp_reduce-true:                           ; preds = %intra_warp_reduce_write-after
  %179 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache51, i32 0, i32 %9, i32 0, i32 %lane_id
  %180 = addrspacecast ptr addrspace(3) %179 to ptr
  store float %region_0_58_constant_15, ptr %initial_value_addr, align 4
  %181 = icmp ult i32 %thread_id.x, 16
  %182 = select i1 %181, ptr %180, ptr %initial_value_addr
  %partial_reduction_result151 = load float, ptr %182, align 4
  %183 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result151, i32 16, i32 31)
  store float %183, ptr %result_from_other_lane150, align 4
  call void @region_1_16__1(ptr %182, ptr %result_from_other_lane150, ptr %return_buffer152)
  %184 = load float, ptr %return_buffer152, align 4
  store float %184, ptr %182, align 4
  %partial_reduction_result154 = load float, ptr %182, align 4
  %185 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result154, i32 8, i32 31)
  store float %185, ptr %result_from_other_lane153, align 4
  call void @region_1_16__1(ptr %182, ptr %result_from_other_lane153, ptr %return_buffer155)
  %186 = load float, ptr %return_buffer155, align 4
  store float %186, ptr %182, align 4
  %partial_reduction_result157 = load float, ptr %182, align 4
  %187 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result157, i32 4, i32 31)
  store float %187, ptr %result_from_other_lane156, align 4
  call void @region_1_16__1(ptr %182, ptr %result_from_other_lane156, ptr %return_buffer158)
  %188 = load float, ptr %return_buffer158, align 4
  store float %188, ptr %182, align 4
  %partial_reduction_result160 = load float, ptr %182, align 4
  %189 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result160, i32 2, i32 31)
  store float %189, ptr %result_from_other_lane159, align 4
  call void @region_1_16__1(ptr %182, ptr %result_from_other_lane159, ptr %return_buffer161)
  %190 = load float, ptr %return_buffer161, align 4
  store float %190, ptr %182, align 4
  %partial_reduction_result163 = load float, ptr %182, align 4
  %191 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result163, i32 1, i32 31)
  store float %191, ptr %result_from_other_lane162, align 4
  call void @region_1_16__1(ptr %182, ptr %result_from_other_lane162, ptr %return_buffer164)
  %192 = load float, ptr %return_buffer164, align 4
  store float %192, ptr %182, align 4
  %193 = icmp eq i32 %thread_id.x, 0
  br i1 %193, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %inter_warp_reduce-true
  br label %inter_warp_reduce-after

reduction_write_output-true:                      ; preds = %inter_warp_reduce-true
  %194 = mul i32 %thread_id.x, 2
  %195 = add i32 %tile_origin.1, %thread_id.y
  %196 = add i32 %tile_origin.2, %194
  %197 = add i32 %196, 0
  %output = load float, ptr %182, align 4
  store float %output, ptr %arg5, align 4
  br label %reduction_write_output-after

intra_warp_reduce_write-true181:                  ; preds = %inter_warp_reduce-after
  %198 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache52, i32 0, i32 %9, i32 0, i32 %47
  %199 = addrspacecast ptr addrspace(3) %198 to ptr
  %200 = load float, ptr %current_output165, align 4
  store float %200, ptr %199, align 4
  br label %intra_warp_reduce_write-after182

inter_warp_reduce-true183:                        ; preds = %intra_warp_reduce_write-after182
  %201 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache52, i32 0, i32 %9, i32 0, i32 %lane_id
  %202 = addrspacecast ptr addrspace(3) %201 to ptr
  store float %region_0_58_constant_153, ptr %initial_value_addr185, align 4
  %203 = icmp ult i32 %thread_id.x, 16
  %204 = select i1 %203, ptr %202, ptr %initial_value_addr185
  %partial_reduction_result187 = load float, ptr %204, align 4
  %205 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result187, i32 16, i32 31)
  store float %205, ptr %result_from_other_lane186, align 4
  call void @region_2_28(ptr %204, ptr %result_from_other_lane186, ptr %return_buffer188)
  %206 = load float, ptr %return_buffer188, align 4
  store float %206, ptr %204, align 4
  %partial_reduction_result190 = load float, ptr %204, align 4
  %207 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result190, i32 8, i32 31)
  store float %207, ptr %result_from_other_lane189, align 4
  call void @region_2_28(ptr %204, ptr %result_from_other_lane189, ptr %return_buffer191)
  %208 = load float, ptr %return_buffer191, align 4
  store float %208, ptr %204, align 4
  %partial_reduction_result193 = load float, ptr %204, align 4
  %209 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result193, i32 4, i32 31)
  store float %209, ptr %result_from_other_lane192, align 4
  call void @region_2_28(ptr %204, ptr %result_from_other_lane192, ptr %return_buffer194)
  %210 = load float, ptr %return_buffer194, align 4
  store float %210, ptr %204, align 4
  %partial_reduction_result196 = load float, ptr %204, align 4
  %211 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result196, i32 2, i32 31)
  store float %211, ptr %result_from_other_lane195, align 4
  call void @region_2_28(ptr %204, ptr %result_from_other_lane195, ptr %return_buffer197)
  %212 = load float, ptr %return_buffer197, align 4
  store float %212, ptr %204, align 4
  %partial_reduction_result199 = load float, ptr %204, align 4
  %213 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result199, i32 1, i32 31)
  store float %213, ptr %result_from_other_lane198, align 4
  call void @region_2_28(ptr %204, ptr %result_from_other_lane198, ptr %return_buffer200)
  %214 = load float, ptr %return_buffer200, align 4
  store float %214, ptr %204, align 4
  %215 = icmp eq i32 %thread_id.x, 0
  br i1 %215, label %reduction_write_output-true201, label %reduction_write_output-after202

reduction_write_output-after202:                  ; preds = %reduction_write_output-true201, %inter_warp_reduce-true183
  br label %inter_warp_reduce-after184

reduction_write_output-true201:                   ; preds = %inter_warp_reduce-true183
  %216 = mul i32 %thread_id.x, 2
  %217 = add i32 %tile_origin.1, %thread_id.y
  %218 = add i32 %tile_origin.2, %216
  %219 = add i32 %218, 0
  %output203 = load float, ptr %204, align 4
  store float %output203, ptr %arg6, align 4
  br label %reduction_write_output-after202

intra_warp_reduce_write-true220:                  ; preds = %inter_warp_reduce-after184
  %220 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache53, i32 0, i32 %9, i32 0, i32 %60
  %221 = addrspacecast ptr addrspace(3) %220 to ptr
  %222 = load float, ptr %current_output204, align 4
  store float %222, ptr %221, align 4
  br label %intra_warp_reduce_write-after221

inter_warp_reduce-true222:                        ; preds = %intra_warp_reduce_write-after221
  %223 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache53, i32 0, i32 %9, i32 0, i32 %lane_id
  %224 = addrspacecast ptr addrspace(3) %223 to ptr
  store float %region_0_58_constant_156, ptr %initial_value_addr224, align 4
  %225 = icmp ult i32 %thread_id.x, 16
  %226 = select i1 %225, ptr %224, ptr %initial_value_addr224
  %partial_reduction_result226 = load float, ptr %226, align 4
  %227 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result226, i32 16, i32 31)
  store float %227, ptr %result_from_other_lane225, align 4
  call void @region_3_40(ptr %226, ptr %result_from_other_lane225, ptr %return_buffer227)
  %228 = load float, ptr %return_buffer227, align 4
  store float %228, ptr %226, align 4
  %partial_reduction_result229 = load float, ptr %226, align 4
  %229 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result229, i32 8, i32 31)
  store float %229, ptr %result_from_other_lane228, align 4
  call void @region_3_40(ptr %226, ptr %result_from_other_lane228, ptr %return_buffer230)
  %230 = load float, ptr %return_buffer230, align 4
  store float %230, ptr %226, align 4
  %partial_reduction_result232 = load float, ptr %226, align 4
  %231 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result232, i32 4, i32 31)
  store float %231, ptr %result_from_other_lane231, align 4
  call void @region_3_40(ptr %226, ptr %result_from_other_lane231, ptr %return_buffer233)
  %232 = load float, ptr %return_buffer233, align 4
  store float %232, ptr %226, align 4
  %partial_reduction_result235 = load float, ptr %226, align 4
  %233 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result235, i32 2, i32 31)
  store float %233, ptr %result_from_other_lane234, align 4
  call void @region_3_40(ptr %226, ptr %result_from_other_lane234, ptr %return_buffer236)
  %234 = load float, ptr %return_buffer236, align 4
  store float %234, ptr %226, align 4
  %partial_reduction_result238 = load float, ptr %226, align 4
  %235 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result238, i32 1, i32 31)
  store float %235, ptr %result_from_other_lane237, align 4
  call void @region_3_40(ptr %226, ptr %result_from_other_lane237, ptr %return_buffer239)
  %236 = load float, ptr %return_buffer239, align 4
  store float %236, ptr %226, align 4
  %237 = icmp eq i32 %thread_id.x, 0
  br i1 %237, label %reduction_write_output-true240, label %reduction_write_output-after241

reduction_write_output-after241:                  ; preds = %reduction_write_output-true240, %inter_warp_reduce-true222
  br label %inter_warp_reduce-after223

reduction_write_output-true240:                   ; preds = %inter_warp_reduce-true222
  %238 = mul i32 %thread_id.x, 2
  %239 = add i32 %tile_origin.1, %thread_id.y
  %240 = add i32 %tile_origin.2, %238
  %241 = add i32 %240, 0
  %output242 = load float, ptr %226, align 4
  store float %output242, ptr %arg7, align 4
  br label %reduction_write_output-after241

intra_warp_reduce_write-true259:                  ; preds = %inter_warp_reduce-after223
  %242 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache54, i32 0, i32 %9, i32 0, i32 %73
  %243 = addrspacecast ptr addrspace(3) %242 to ptr
  %244 = load float, ptr %current_output243, align 4
  store float %244, ptr %243, align 4
  br label %intra_warp_reduce_write-after260

inter_warp_reduce-true261:                        ; preds = %intra_warp_reduce_write-after260
  %245 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache54, i32 0, i32 %9, i32 0, i32 %lane_id
  %246 = addrspacecast ptr addrspace(3) %245 to ptr
  store float %region_0_58_constant_159, ptr %initial_value_addr263, align 4
  %247 = icmp ult i32 %thread_id.x, 16
  %248 = select i1 %247, ptr %246, ptr %initial_value_addr263
  %partial_reduction_result265 = load float, ptr %248, align 4
  %249 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result265, i32 16, i32 31)
  store float %249, ptr %result_from_other_lane264, align 4
  call void @region_4_52(ptr %248, ptr %result_from_other_lane264, ptr %return_buffer266)
  %250 = load float, ptr %return_buffer266, align 4
  store float %250, ptr %248, align 4
  %partial_reduction_result268 = load float, ptr %248, align 4
  %251 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result268, i32 8, i32 31)
  store float %251, ptr %result_from_other_lane267, align 4
  call void @region_4_52(ptr %248, ptr %result_from_other_lane267, ptr %return_buffer269)
  %252 = load float, ptr %return_buffer269, align 4
  store float %252, ptr %248, align 4
  %partial_reduction_result271 = load float, ptr %248, align 4
  %253 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result271, i32 4, i32 31)
  store float %253, ptr %result_from_other_lane270, align 4
  call void @region_4_52(ptr %248, ptr %result_from_other_lane270, ptr %return_buffer272)
  %254 = load float, ptr %return_buffer272, align 4
  store float %254, ptr %248, align 4
  %partial_reduction_result274 = load float, ptr %248, align 4
  %255 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result274, i32 2, i32 31)
  store float %255, ptr %result_from_other_lane273, align 4
  call void @region_4_52(ptr %248, ptr %result_from_other_lane273, ptr %return_buffer275)
  %256 = load float, ptr %return_buffer275, align 4
  store float %256, ptr %248, align 4
  %partial_reduction_result277 = load float, ptr %248, align 4
  %257 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result277, i32 1, i32 31)
  store float %257, ptr %result_from_other_lane276, align 4
  call void @region_4_52(ptr %248, ptr %result_from_other_lane276, ptr %return_buffer278)
  %258 = load float, ptr %return_buffer278, align 4
  store float %258, ptr %248, align 4
  %259 = icmp eq i32 %thread_id.x, 0
  br i1 %259, label %reduction_write_output-true279, label %reduction_write_output-after280

reduction_write_output-after280:                  ; preds = %reduction_write_output-true279, %inter_warp_reduce-true261
  br label %inter_warp_reduce-after262

reduction_write_output-true279:                   ; preds = %inter_warp_reduce-true261
  %260 = mul i32 %thread_id.x, 2
  %261 = add i32 %tile_origin.1, %thread_id.y
  %262 = add i32 %tile_origin.2, %260
  %263 = add i32 %262, 0
  %output281 = load float, ptr %248, align 4
  store float %output281, ptr %arg8, align 4
  br label %reduction_write_output-after280
}

define internal void @region_1_16__1(ptr dereferenceable(4) %Arg_0.17.typed, ptr dereferenceable(4) %Arg_1.18.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.19.typed = alloca float, align 4
  %Arg_0.17 = load float, ptr %Arg_0.17.typed, align 4
  %Arg_1.18 = load float, ptr %Arg_1.18.typed, align 4
  %add.19 = fadd float %Arg_0.17, %Arg_1.18
  store float %add.19, ptr %add.19.typed, align 4
  %load_ret_value = load float, ptr %add.19.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_28(ptr dereferenceable(4) %Arg_0.29.typed, ptr dereferenceable(4) %Arg_1.30.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.31.typed = alloca float, align 4
  %Arg_0.29 = load float, ptr %Arg_0.29.typed, align 4
  %Arg_1.30 = load float, ptr %Arg_1.30.typed, align 4
  %add.31 = fadd float %Arg_0.29, %Arg_1.30
  store float %add.31, ptr %add.31.typed, align 4
  %load_ret_value = load float, ptr %add.31.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_3_40(ptr dereferenceable(4) %Arg_0.41.typed, ptr dereferenceable(4) %Arg_1.42.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.43.typed = alloca float, align 4
  %Arg_0.41 = load float, ptr %Arg_0.41.typed, align 4
  %Arg_1.42 = load float, ptr %Arg_1.42.typed, align 4
  %add.43 = fadd float %Arg_0.41, %Arg_1.42
  store float %add.43, ptr %add.43.typed, align 4
  %load_ret_value = load float, ptr %add.43.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_4_52(ptr dereferenceable(4) %Arg_0.53.typed, ptr dereferenceable(4) %Arg_1.54.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.55.typed = alloca float, align 4
  %Arg_0.53 = load float, ptr %Arg_0.53.typed, align 4
  %Arg_1.54 = load float, ptr %Arg_1.54.typed, align 4
  %add.55 = fadd float %Arg_0.53, %Arg_1.54
  store float %add.55, ptr %add.55.typed, align 4
  %load_ret_value = load float, ptr %add.55.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_360(ptr noalias align 128 dereferenceable(32768) %arg0, ptr noalias align 128 dereferenceable(1966080) %arg1, ptr noalias align 128 dereferenceable(32768) %arg2, ptr noalias align 128 dereferenceable(32768) %arg3, ptr noalias align 128 dereferenceable(32768) %arg4, ptr noalias align 128 dereferenceable(32768) %arg5, ptr noalias align 128 dereferenceable(32768) %arg6, ptr noalias align 128 dereferenceable(32768) %arg7, ptr noalias align 128 dereferenceable(32768) %arg8, ptr noalias align 128 dereferenceable(32768) %arg9, ptr noalias align 128 dereferenceable(32768) %arg10, ptr noalias align 128 dereferenceable(32768) %arg11, ptr noalias align 128 dereferenceable(32768) %arg12, ptr noalias align 128 dereferenceable(32768) %arg13, ptr noalias align 128 dereferenceable(32768) %arg14, ptr noalias align 128 dereferenceable(32768) %arg15, ptr noalias align 128 dereferenceable(32768) %arg16, ptr noalias align 128 dereferenceable(32768) %arg17, ptr noalias align 128 dereferenceable(32768) %arg18, ptr noalias align 128 dereferenceable(32768) %arg19, ptr noalias align 128 dereferenceable(32768) %arg20, ptr noalias align 128 dereferenceable(32768) %arg21, ptr noalias align 128 dereferenceable(32768) %arg22, ptr noalias align 128 dereferenceable(32768) %arg23, ptr noalias align 128 dereferenceable(32768) %arg24, ptr noalias align 128 dereferenceable(4) %arg25, ptr noalias align 128 dereferenceable(4) %arg26, ptr noalias align 128 dereferenceable(4) %arg27, ptr noalias align 128 dereferenceable(4) %arg28, ptr noalias align 128 dereferenceable(4) %arg29, ptr noalias align 128 dereferenceable(4) %arg30, ptr noalias align 128 dereferenceable(4) %arg31, ptr noalias align 128 dereferenceable(4) %arg32) {
entry:
  %return_buffer878 = alloca float, align 4
  %result_from_other_lane876 = alloca float, align 4
  %return_buffer875 = alloca float, align 4
  %result_from_other_lane873 = alloca float, align 4
  %return_buffer872 = alloca float, align 4
  %result_from_other_lane870 = alloca float, align 4
  %return_buffer869 = alloca float, align 4
  %result_from_other_lane867 = alloca float, align 4
  %return_buffer866 = alloca float, align 4
  %result_from_other_lane864 = alloca float, align 4
  %initial_value_addr863 = alloca float, align 4
  %return_buffer858 = alloca float, align 4
  %result_from_other_lane856 = alloca float, align 4
  %return_buffer855 = alloca float, align 4
  %result_from_other_lane853 = alloca float, align 4
  %return_buffer852 = alloca float, align 4
  %result_from_other_lane850 = alloca float, align 4
  %return_buffer849 = alloca float, align 4
  %result_from_other_lane847 = alloca float, align 4
  %return_buffer846 = alloca float, align 4
  %result_from_other_lane844 = alloca float, align 4
  %return_buffer839 = alloca float, align 4
  %result_from_other_lane837 = alloca float, align 4
  %return_buffer836 = alloca float, align 4
  %result_from_other_lane834 = alloca float, align 4
  %return_buffer833 = alloca float, align 4
  %result_from_other_lane831 = alloca float, align 4
  %return_buffer830 = alloca float, align 4
  %result_from_other_lane828 = alloca float, align 4
  %return_buffer827 = alloca float, align 4
  %result_from_other_lane825 = alloca float, align 4
  %initial_value_addr824 = alloca float, align 4
  %return_buffer819 = alloca float, align 4
  %result_from_other_lane817 = alloca float, align 4
  %return_buffer816 = alloca float, align 4
  %result_from_other_lane814 = alloca float, align 4
  %return_buffer813 = alloca float, align 4
  %result_from_other_lane811 = alloca float, align 4
  %return_buffer810 = alloca float, align 4
  %result_from_other_lane808 = alloca float, align 4
  %return_buffer807 = alloca float, align 4
  %result_from_other_lane805 = alloca float, align 4
  %return_buffer800 = alloca float, align 4
  %result_from_other_lane798 = alloca float, align 4
  %return_buffer797 = alloca float, align 4
  %result_from_other_lane795 = alloca float, align 4
  %return_buffer794 = alloca float, align 4
  %result_from_other_lane792 = alloca float, align 4
  %return_buffer791 = alloca float, align 4
  %result_from_other_lane789 = alloca float, align 4
  %return_buffer788 = alloca float, align 4
  %result_from_other_lane786 = alloca float, align 4
  %initial_value_addr785 = alloca float, align 4
  %return_buffer780 = alloca float, align 4
  %result_from_other_lane778 = alloca float, align 4
  %return_buffer777 = alloca float, align 4
  %result_from_other_lane775 = alloca float, align 4
  %return_buffer774 = alloca float, align 4
  %result_from_other_lane772 = alloca float, align 4
  %return_buffer771 = alloca float, align 4
  %result_from_other_lane769 = alloca float, align 4
  %return_buffer768 = alloca float, align 4
  %result_from_other_lane766 = alloca float, align 4
  %return_buffer761 = alloca float, align 4
  %result_from_other_lane759 = alloca float, align 4
  %return_buffer758 = alloca float, align 4
  %result_from_other_lane756 = alloca float, align 4
  %return_buffer755 = alloca float, align 4
  %result_from_other_lane753 = alloca float, align 4
  %return_buffer752 = alloca float, align 4
  %result_from_other_lane750 = alloca float, align 4
  %return_buffer749 = alloca float, align 4
  %result_from_other_lane747 = alloca float, align 4
  %initial_value_addr746 = alloca float, align 4
  %return_buffer741 = alloca float, align 4
  %result_from_other_lane739 = alloca float, align 4
  %return_buffer738 = alloca float, align 4
  %result_from_other_lane736 = alloca float, align 4
  %return_buffer735 = alloca float, align 4
  %result_from_other_lane733 = alloca float, align 4
  %return_buffer732 = alloca float, align 4
  %result_from_other_lane730 = alloca float, align 4
  %return_buffer729 = alloca float, align 4
  %result_from_other_lane727 = alloca float, align 4
  %return_buffer722 = alloca float, align 4
  %result_from_other_lane720 = alloca float, align 4
  %return_buffer719 = alloca float, align 4
  %result_from_other_lane717 = alloca float, align 4
  %return_buffer716 = alloca float, align 4
  %result_from_other_lane714 = alloca float, align 4
  %return_buffer713 = alloca float, align 4
  %result_from_other_lane711 = alloca float, align 4
  %return_buffer710 = alloca float, align 4
  %result_from_other_lane708 = alloca float, align 4
  %initial_value_addr707 = alloca float, align 4
  %return_buffer702 = alloca float, align 4
  %result_from_other_lane700 = alloca float, align 4
  %return_buffer699 = alloca float, align 4
  %result_from_other_lane697 = alloca float, align 4
  %return_buffer696 = alloca float, align 4
  %result_from_other_lane694 = alloca float, align 4
  %return_buffer693 = alloca float, align 4
  %result_from_other_lane691 = alloca float, align 4
  %return_buffer690 = alloca float, align 4
  %result_from_other_lane688 = alloca float, align 4
  %return_buffer683 = alloca float, align 4
  %result_from_other_lane681 = alloca float, align 4
  %return_buffer680 = alloca float, align 4
  %result_from_other_lane678 = alloca float, align 4
  %return_buffer677 = alloca float, align 4
  %result_from_other_lane675 = alloca float, align 4
  %return_buffer674 = alloca float, align 4
  %result_from_other_lane672 = alloca float, align 4
  %return_buffer671 = alloca float, align 4
  %result_from_other_lane669 = alloca float, align 4
  %initial_value_addr668 = alloca float, align 4
  %return_buffer663 = alloca float, align 4
  %result_from_other_lane661 = alloca float, align 4
  %return_buffer660 = alloca float, align 4
  %result_from_other_lane658 = alloca float, align 4
  %return_buffer657 = alloca float, align 4
  %result_from_other_lane655 = alloca float, align 4
  %return_buffer654 = alloca float, align 4
  %result_from_other_lane652 = alloca float, align 4
  %return_buffer651 = alloca float, align 4
  %result_from_other_lane649 = alloca float, align 4
  %return_buffer644 = alloca float, align 4
  %result_from_other_lane642 = alloca float, align 4
  %return_buffer641 = alloca float, align 4
  %result_from_other_lane639 = alloca float, align 4
  %return_buffer638 = alloca float, align 4
  %result_from_other_lane636 = alloca float, align 4
  %return_buffer635 = alloca float, align 4
  %result_from_other_lane633 = alloca float, align 4
  %return_buffer632 = alloca float, align 4
  %result_from_other_lane630 = alloca float, align 4
  %initial_value_addr629 = alloca float, align 4
  %return_buffer624 = alloca float, align 4
  %result_from_other_lane622 = alloca float, align 4
  %return_buffer621 = alloca float, align 4
  %result_from_other_lane619 = alloca float, align 4
  %return_buffer618 = alloca float, align 4
  %result_from_other_lane616 = alloca float, align 4
  %return_buffer615 = alloca float, align 4
  %result_from_other_lane613 = alloca float, align 4
  %return_buffer612 = alloca float, align 4
  %result_from_other_lane610 = alloca float, align 4
  %return_buffer608 = alloca float, align 4
  %result_from_other_lane606 = alloca float, align 4
  %return_buffer605 = alloca float, align 4
  %result_from_other_lane603 = alloca float, align 4
  %return_buffer602 = alloca float, align 4
  %result_from_other_lane600 = alloca float, align 4
  %return_buffer599 = alloca float, align 4
  %result_from_other_lane597 = alloca float, align 4
  %return_buffer596 = alloca float, align 4
  %result_from_other_lane594 = alloca float, align 4
  %initial_value_addr = alloca float, align 4
  %return_buffer593 = alloca float, align 4
  %result_from_other_lane591 = alloca float, align 4
  %return_buffer590 = alloca float, align 4
  %result_from_other_lane588 = alloca float, align 4
  %return_buffer587 = alloca float, align 4
  %result_from_other_lane585 = alloca float, align 4
  %return_buffer584 = alloca float, align 4
  %result_from_other_lane582 = alloca float, align 4
  %return_buffer581 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer489 = alloca float, align 4
  %return_buffer481 = alloca float, align 4
  %return_buffer473 = alloca float, align 4
  %return_buffer465 = alloca float, align 4
  %return_buffer457 = alloca float, align 4
  %return_buffer449 = alloca float, align 4
  %return_buffer441 = alloca float, align 4
  %return_buffer433 = alloca float, align 4
  %return_buffer331 = alloca float, align 4
  %return_buffer323 = alloca float, align 4
  %return_buffer315 = alloca float, align 4
  %return_buffer307 = alloca float, align 4
  %return_buffer299 = alloca float, align 4
  %return_buffer291 = alloca float, align 4
  %return_buffer283 = alloca float, align 4
  %return_buffer275 = alloca float, align 4
  %tile_loop.invar_address263 = alloca i32, align 4
  %return_buffer169 = alloca float, align 4
  %return_buffer161 = alloca float, align 4
  %return_buffer153 = alloca float, align 4
  %return_buffer145 = alloca float, align 4
  %return_buffer137 = alloca float, align 4
  %return_buffer129 = alloca float, align 4
  %return_buffer121 = alloca float, align 4
  %return_buffer113 = alloca float, align 4
  %return_buffer53 = alloca float, align 4
  %return_buffer49 = alloca float, align 4
  %return_buffer45 = alloca float, align 4
  %return_buffer41 = alloca float, align 4
  %return_buffer37 = alloca float, align 4
  %return_buffer33 = alloca float, align 4
  %return_buffer29 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result20 = alloca float, align 4
  %reduction_input_address19 = alloca float, align 4
  %partial_reduction_result17 = alloca float, align 4
  %reduction_input_address16 = alloca float, align 4
  %partial_reduction_result14 = alloca float, align 4
  %reduction_input_address13 = alloca float, align 4
  %partial_reduction_result11 = alloca float, align 4
  %reduction_input_address10 = alloca float, align 4
  %partial_reduction_result8 = alloca float, align 4
  %reduction_input_address7 = alloca float, align 4
  %partial_reduction_result5 = alloca float, align 4
  %reduction_input_address4 = alloca float, align 4
  %partial_reduction_result2 = alloca float, align 4
  %reduction_input_address1 = alloca float, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %inter_warp_reduce-after862, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_170_constant_79 = load float, ptr @63, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_170_constant_79, ptr %2, align 4
  %region_0_170_constant_793 = load float, ptr @63, align 4
  %3 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  store float %region_0_170_constant_793, ptr %3, align 4
  %region_0_170_constant_796 = load float, ptr @63, align 4
  %4 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  store float %region_0_170_constant_796, ptr %4, align 4
  %region_0_170_constant_799 = load float, ptr @63, align 4
  %5 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  store float %region_0_170_constant_799, ptr %5, align 4
  %region_0_170_constant_7912 = load float, ptr @63, align 4
  %6 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  store float %region_0_170_constant_7912, ptr %6, align 4
  %region_0_170_constant_7915 = load float, ptr @63, align 4
  %7 = getelementptr inbounds float, ptr %partial_reduction_result14, i32 0
  store float %region_0_170_constant_7915, ptr %7, align 4
  %region_0_170_constant_7918 = load float, ptr @63, align 4
  %8 = getelementptr inbounds float, ptr %partial_reduction_result17, i32 0
  store float %region_0_170_constant_7918, ptr %8, align 4
  %region_0_170_constant_7921 = load float, ptr @63, align 4
  %9 = getelementptr inbounds float, ptr %partial_reduction_result20, i32 0
  store float %region_0_170_constant_7921, ptr %9, align 4
  %10 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !293
  %11 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %12 = urem i32 %10, 512
  %13 = udiv i32 %10, 512
  %14 = mul i32 %11, 1
  %15 = add i32 %14, %13
  %16 = icmp ult i32 %15, 1
  br i1 %16, label %17, label %early_return

17:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %12, 512
  %thread_id.y = udiv i32 %12, 512
  %lane_id = urem i32 %12, 32
  %18 = udiv i32 %15, 1
  %19 = urem i32 %18, 1
  %20 = udiv i32 %15, 1
  %21 = urem i32 %20, 1
  %22 = udiv i32 %15, 1
  %23 = icmp eq i32 %21, 0
  %tile_bound = select i1 %23, i32 1, i32 1
  %24 = icmp eq i32 %19, 0
  %tile_bound22 = select i1 %24, i32 8192, i32 8192
  %tile_origin.0 = mul i32 %22, 1
  %tile_origin.1 = mul i32 %21, 1
  %tile_origin.2 = mul i32 %19, 8192
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %is_full_tile-after, %17
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %25 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %25, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 1
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %26 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %27 = icmp eq i32 8192, %tile_bound22
  br i1 %27, label %is_full_tile-true, label %is_full_tile-false

is_full_tile-after:                               ; preds = %tile_loop.loop_exit260, %tile_loop.loop_exit
  br label %y_in_tile.loop_header, !llvm.loop !425

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %partial_reduction_result580 = load float, ptr %current_output, align 4
  %28 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result580, i32 16, i32 31)
  store float %28, ptr %result_from_other_lane, align 4
  call void @region_1_80(ptr %current_output, ptr %result_from_other_lane, ptr %return_buffer581)
  %29 = load float, ptr %return_buffer581, align 4
  store float %29, ptr %current_output, align 4
  %partial_reduction_result583 = load float, ptr %current_output, align 4
  %30 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result583, i32 8, i32 31)
  store float %30, ptr %result_from_other_lane582, align 4
  call void @region_1_80(ptr %current_output, ptr %result_from_other_lane582, ptr %return_buffer584)
  %31 = load float, ptr %return_buffer584, align 4
  store float %31, ptr %current_output, align 4
  %partial_reduction_result586 = load float, ptr %current_output, align 4
  %32 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result586, i32 4, i32 31)
  store float %32, ptr %result_from_other_lane585, align 4
  call void @region_1_80(ptr %current_output, ptr %result_from_other_lane585, ptr %return_buffer587)
  %33 = load float, ptr %return_buffer587, align 4
  store float %33, ptr %current_output, align 4
  %partial_reduction_result589 = load float, ptr %current_output, align 4
  %34 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result589, i32 2, i32 31)
  store float %34, ptr %result_from_other_lane588, align 4
  call void @region_1_80(ptr %current_output, ptr %result_from_other_lane588, ptr %return_buffer590)
  %35 = load float, ptr %return_buffer590, align 4
  store float %35, ptr %current_output, align 4
  %partial_reduction_result592 = load float, ptr %current_output, align 4
  %36 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result592, i32 1, i32 31)
  store float %36, ptr %result_from_other_lane591, align 4
  call void @region_1_80(ptr %current_output, ptr %result_from_other_lane591, ptr %return_buffer593)
  %37 = load float, ptr %return_buffer593, align 4
  store float %37, ptr %current_output, align 4
  %38 = udiv i32 %thread_id.x, 32
  %39 = icmp eq i32 %lane_id, 0
  br i1 %39, label %intra_warp_reduce_write-true, label %intra_warp_reduce_write-after

intra_warp_reduce_write-after:                    ; preds = %intra_warp_reduce_write-true, %y_in_tile.loop_exit
  call void @llvm.nvvm.barrier0()
  %40 = icmp eq i32 %38, 0
  br i1 %40, label %inter_warp_reduce-true, label %inter_warp_reduce-after

inter_warp_reduce-after:                          ; preds = %reduction_write_output-after, %intra_warp_reduce_write-after
  %current_output609 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  %partial_reduction_result611 = load float, ptr %current_output609, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result611, i32 16, i32 31)
  store float %41, ptr %result_from_other_lane610, align 4
  call void @region_2_92(ptr %current_output609, ptr %result_from_other_lane610, ptr %return_buffer612)
  %42 = load float, ptr %return_buffer612, align 4
  store float %42, ptr %current_output609, align 4
  %partial_reduction_result614 = load float, ptr %current_output609, align 4
  %43 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result614, i32 8, i32 31)
  store float %43, ptr %result_from_other_lane613, align 4
  call void @region_2_92(ptr %current_output609, ptr %result_from_other_lane613, ptr %return_buffer615)
  %44 = load float, ptr %return_buffer615, align 4
  store float %44, ptr %current_output609, align 4
  %partial_reduction_result617 = load float, ptr %current_output609, align 4
  %45 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result617, i32 4, i32 31)
  store float %45, ptr %result_from_other_lane616, align 4
  call void @region_2_92(ptr %current_output609, ptr %result_from_other_lane616, ptr %return_buffer618)
  %46 = load float, ptr %return_buffer618, align 4
  store float %46, ptr %current_output609, align 4
  %partial_reduction_result620 = load float, ptr %current_output609, align 4
  %47 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result620, i32 2, i32 31)
  store float %47, ptr %result_from_other_lane619, align 4
  call void @region_2_92(ptr %current_output609, ptr %result_from_other_lane619, ptr %return_buffer621)
  %48 = load float, ptr %return_buffer621, align 4
  store float %48, ptr %current_output609, align 4
  %partial_reduction_result623 = load float, ptr %current_output609, align 4
  %49 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result623, i32 1, i32 31)
  store float %49, ptr %result_from_other_lane622, align 4
  call void @region_2_92(ptr %current_output609, ptr %result_from_other_lane622, ptr %return_buffer624)
  %50 = load float, ptr %return_buffer624, align 4
  store float %50, ptr %current_output609, align 4
  %51 = udiv i32 %thread_id.x, 32
  %52 = icmp eq i32 %lane_id, 0
  br i1 %52, label %intra_warp_reduce_write-true625, label %intra_warp_reduce_write-after626

intra_warp_reduce_write-after626:                 ; preds = %intra_warp_reduce_write-true625, %inter_warp_reduce-after
  call void @llvm.nvvm.barrier0()
  %53 = icmp eq i32 %51, 0
  br i1 %53, label %inter_warp_reduce-true627, label %inter_warp_reduce-after628

inter_warp_reduce-after628:                       ; preds = %reduction_write_output-after646, %intra_warp_reduce_write-after626
  %current_output648 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  %partial_reduction_result650 = load float, ptr %current_output648, align 4
  %54 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result650, i32 16, i32 31)
  store float %54, ptr %result_from_other_lane649, align 4
  call void @region_3_104(ptr %current_output648, ptr %result_from_other_lane649, ptr %return_buffer651)
  %55 = load float, ptr %return_buffer651, align 4
  store float %55, ptr %current_output648, align 4
  %partial_reduction_result653 = load float, ptr %current_output648, align 4
  %56 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result653, i32 8, i32 31)
  store float %56, ptr %result_from_other_lane652, align 4
  call void @region_3_104(ptr %current_output648, ptr %result_from_other_lane652, ptr %return_buffer654)
  %57 = load float, ptr %return_buffer654, align 4
  store float %57, ptr %current_output648, align 4
  %partial_reduction_result656 = load float, ptr %current_output648, align 4
  %58 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result656, i32 4, i32 31)
  store float %58, ptr %result_from_other_lane655, align 4
  call void @region_3_104(ptr %current_output648, ptr %result_from_other_lane655, ptr %return_buffer657)
  %59 = load float, ptr %return_buffer657, align 4
  store float %59, ptr %current_output648, align 4
  %partial_reduction_result659 = load float, ptr %current_output648, align 4
  %60 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result659, i32 2, i32 31)
  store float %60, ptr %result_from_other_lane658, align 4
  call void @region_3_104(ptr %current_output648, ptr %result_from_other_lane658, ptr %return_buffer660)
  %61 = load float, ptr %return_buffer660, align 4
  store float %61, ptr %current_output648, align 4
  %partial_reduction_result662 = load float, ptr %current_output648, align 4
  %62 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result662, i32 1, i32 31)
  store float %62, ptr %result_from_other_lane661, align 4
  call void @region_3_104(ptr %current_output648, ptr %result_from_other_lane661, ptr %return_buffer663)
  %63 = load float, ptr %return_buffer663, align 4
  store float %63, ptr %current_output648, align 4
  %64 = udiv i32 %thread_id.x, 32
  %65 = icmp eq i32 %lane_id, 0
  br i1 %65, label %intra_warp_reduce_write-true664, label %intra_warp_reduce_write-after665

intra_warp_reduce_write-after665:                 ; preds = %intra_warp_reduce_write-true664, %inter_warp_reduce-after628
  call void @llvm.nvvm.barrier0()
  %66 = icmp eq i32 %64, 0
  br i1 %66, label %inter_warp_reduce-true666, label %inter_warp_reduce-after667

inter_warp_reduce-after667:                       ; preds = %reduction_write_output-after685, %intra_warp_reduce_write-after665
  %current_output687 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  %partial_reduction_result689 = load float, ptr %current_output687, align 4
  %67 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result689, i32 16, i32 31)
  store float %67, ptr %result_from_other_lane688, align 4
  call void @region_4_116(ptr %current_output687, ptr %result_from_other_lane688, ptr %return_buffer690)
  %68 = load float, ptr %return_buffer690, align 4
  store float %68, ptr %current_output687, align 4
  %partial_reduction_result692 = load float, ptr %current_output687, align 4
  %69 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result692, i32 8, i32 31)
  store float %69, ptr %result_from_other_lane691, align 4
  call void @region_4_116(ptr %current_output687, ptr %result_from_other_lane691, ptr %return_buffer693)
  %70 = load float, ptr %return_buffer693, align 4
  store float %70, ptr %current_output687, align 4
  %partial_reduction_result695 = load float, ptr %current_output687, align 4
  %71 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result695, i32 4, i32 31)
  store float %71, ptr %result_from_other_lane694, align 4
  call void @region_4_116(ptr %current_output687, ptr %result_from_other_lane694, ptr %return_buffer696)
  %72 = load float, ptr %return_buffer696, align 4
  store float %72, ptr %current_output687, align 4
  %partial_reduction_result698 = load float, ptr %current_output687, align 4
  %73 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result698, i32 2, i32 31)
  store float %73, ptr %result_from_other_lane697, align 4
  call void @region_4_116(ptr %current_output687, ptr %result_from_other_lane697, ptr %return_buffer699)
  %74 = load float, ptr %return_buffer699, align 4
  store float %74, ptr %current_output687, align 4
  %partial_reduction_result701 = load float, ptr %current_output687, align 4
  %75 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result701, i32 1, i32 31)
  store float %75, ptr %result_from_other_lane700, align 4
  call void @region_4_116(ptr %current_output687, ptr %result_from_other_lane700, ptr %return_buffer702)
  %76 = load float, ptr %return_buffer702, align 4
  store float %76, ptr %current_output687, align 4
  %77 = udiv i32 %thread_id.x, 32
  %78 = icmp eq i32 %lane_id, 0
  br i1 %78, label %intra_warp_reduce_write-true703, label %intra_warp_reduce_write-after704

intra_warp_reduce_write-after704:                 ; preds = %intra_warp_reduce_write-true703, %inter_warp_reduce-after667
  call void @llvm.nvvm.barrier0()
  %79 = icmp eq i32 %77, 0
  br i1 %79, label %inter_warp_reduce-true705, label %inter_warp_reduce-after706

inter_warp_reduce-after706:                       ; preds = %reduction_write_output-after724, %intra_warp_reduce_write-after704
  %current_output726 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  %partial_reduction_result728 = load float, ptr %current_output726, align 4
  %80 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result728, i32 16, i32 31)
  store float %80, ptr %result_from_other_lane727, align 4
  call void @region_5_128(ptr %current_output726, ptr %result_from_other_lane727, ptr %return_buffer729)
  %81 = load float, ptr %return_buffer729, align 4
  store float %81, ptr %current_output726, align 4
  %partial_reduction_result731 = load float, ptr %current_output726, align 4
  %82 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result731, i32 8, i32 31)
  store float %82, ptr %result_from_other_lane730, align 4
  call void @region_5_128(ptr %current_output726, ptr %result_from_other_lane730, ptr %return_buffer732)
  %83 = load float, ptr %return_buffer732, align 4
  store float %83, ptr %current_output726, align 4
  %partial_reduction_result734 = load float, ptr %current_output726, align 4
  %84 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result734, i32 4, i32 31)
  store float %84, ptr %result_from_other_lane733, align 4
  call void @region_5_128(ptr %current_output726, ptr %result_from_other_lane733, ptr %return_buffer735)
  %85 = load float, ptr %return_buffer735, align 4
  store float %85, ptr %current_output726, align 4
  %partial_reduction_result737 = load float, ptr %current_output726, align 4
  %86 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result737, i32 2, i32 31)
  store float %86, ptr %result_from_other_lane736, align 4
  call void @region_5_128(ptr %current_output726, ptr %result_from_other_lane736, ptr %return_buffer738)
  %87 = load float, ptr %return_buffer738, align 4
  store float %87, ptr %current_output726, align 4
  %partial_reduction_result740 = load float, ptr %current_output726, align 4
  %88 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result740, i32 1, i32 31)
  store float %88, ptr %result_from_other_lane739, align 4
  call void @region_5_128(ptr %current_output726, ptr %result_from_other_lane739, ptr %return_buffer741)
  %89 = load float, ptr %return_buffer741, align 4
  store float %89, ptr %current_output726, align 4
  %90 = udiv i32 %thread_id.x, 32
  %91 = icmp eq i32 %lane_id, 0
  br i1 %91, label %intra_warp_reduce_write-true742, label %intra_warp_reduce_write-after743

intra_warp_reduce_write-after743:                 ; preds = %intra_warp_reduce_write-true742, %inter_warp_reduce-after706
  call void @llvm.nvvm.barrier0()
  %92 = icmp eq i32 %90, 0
  br i1 %92, label %inter_warp_reduce-true744, label %inter_warp_reduce-after745

inter_warp_reduce-after745:                       ; preds = %reduction_write_output-after763, %intra_warp_reduce_write-after743
  %current_output765 = getelementptr inbounds float, ptr %partial_reduction_result14, i32 0
  %partial_reduction_result767 = load float, ptr %current_output765, align 4
  %93 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result767, i32 16, i32 31)
  store float %93, ptr %result_from_other_lane766, align 4
  call void @region_6_140(ptr %current_output765, ptr %result_from_other_lane766, ptr %return_buffer768)
  %94 = load float, ptr %return_buffer768, align 4
  store float %94, ptr %current_output765, align 4
  %partial_reduction_result770 = load float, ptr %current_output765, align 4
  %95 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result770, i32 8, i32 31)
  store float %95, ptr %result_from_other_lane769, align 4
  call void @region_6_140(ptr %current_output765, ptr %result_from_other_lane769, ptr %return_buffer771)
  %96 = load float, ptr %return_buffer771, align 4
  store float %96, ptr %current_output765, align 4
  %partial_reduction_result773 = load float, ptr %current_output765, align 4
  %97 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result773, i32 4, i32 31)
  store float %97, ptr %result_from_other_lane772, align 4
  call void @region_6_140(ptr %current_output765, ptr %result_from_other_lane772, ptr %return_buffer774)
  %98 = load float, ptr %return_buffer774, align 4
  store float %98, ptr %current_output765, align 4
  %partial_reduction_result776 = load float, ptr %current_output765, align 4
  %99 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result776, i32 2, i32 31)
  store float %99, ptr %result_from_other_lane775, align 4
  call void @region_6_140(ptr %current_output765, ptr %result_from_other_lane775, ptr %return_buffer777)
  %100 = load float, ptr %return_buffer777, align 4
  store float %100, ptr %current_output765, align 4
  %partial_reduction_result779 = load float, ptr %current_output765, align 4
  %101 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result779, i32 1, i32 31)
  store float %101, ptr %result_from_other_lane778, align 4
  call void @region_6_140(ptr %current_output765, ptr %result_from_other_lane778, ptr %return_buffer780)
  %102 = load float, ptr %return_buffer780, align 4
  store float %102, ptr %current_output765, align 4
  %103 = udiv i32 %thread_id.x, 32
  %104 = icmp eq i32 %lane_id, 0
  br i1 %104, label %intra_warp_reduce_write-true781, label %intra_warp_reduce_write-after782

intra_warp_reduce_write-after782:                 ; preds = %intra_warp_reduce_write-true781, %inter_warp_reduce-after745
  call void @llvm.nvvm.barrier0()
  %105 = icmp eq i32 %103, 0
  br i1 %105, label %inter_warp_reduce-true783, label %inter_warp_reduce-after784

inter_warp_reduce-after784:                       ; preds = %reduction_write_output-after802, %intra_warp_reduce_write-after782
  %current_output804 = getelementptr inbounds float, ptr %partial_reduction_result17, i32 0
  %partial_reduction_result806 = load float, ptr %current_output804, align 4
  %106 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result806, i32 16, i32 31)
  store float %106, ptr %result_from_other_lane805, align 4
  call void @region_7_152(ptr %current_output804, ptr %result_from_other_lane805, ptr %return_buffer807)
  %107 = load float, ptr %return_buffer807, align 4
  store float %107, ptr %current_output804, align 4
  %partial_reduction_result809 = load float, ptr %current_output804, align 4
  %108 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result809, i32 8, i32 31)
  store float %108, ptr %result_from_other_lane808, align 4
  call void @region_7_152(ptr %current_output804, ptr %result_from_other_lane808, ptr %return_buffer810)
  %109 = load float, ptr %return_buffer810, align 4
  store float %109, ptr %current_output804, align 4
  %partial_reduction_result812 = load float, ptr %current_output804, align 4
  %110 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result812, i32 4, i32 31)
  store float %110, ptr %result_from_other_lane811, align 4
  call void @region_7_152(ptr %current_output804, ptr %result_from_other_lane811, ptr %return_buffer813)
  %111 = load float, ptr %return_buffer813, align 4
  store float %111, ptr %current_output804, align 4
  %partial_reduction_result815 = load float, ptr %current_output804, align 4
  %112 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result815, i32 2, i32 31)
  store float %112, ptr %result_from_other_lane814, align 4
  call void @region_7_152(ptr %current_output804, ptr %result_from_other_lane814, ptr %return_buffer816)
  %113 = load float, ptr %return_buffer816, align 4
  store float %113, ptr %current_output804, align 4
  %partial_reduction_result818 = load float, ptr %current_output804, align 4
  %114 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result818, i32 1, i32 31)
  store float %114, ptr %result_from_other_lane817, align 4
  call void @region_7_152(ptr %current_output804, ptr %result_from_other_lane817, ptr %return_buffer819)
  %115 = load float, ptr %return_buffer819, align 4
  store float %115, ptr %current_output804, align 4
  %116 = udiv i32 %thread_id.x, 32
  %117 = icmp eq i32 %lane_id, 0
  br i1 %117, label %intra_warp_reduce_write-true820, label %intra_warp_reduce_write-after821

intra_warp_reduce_write-after821:                 ; preds = %intra_warp_reduce_write-true820, %inter_warp_reduce-after784
  call void @llvm.nvvm.barrier0()
  %118 = icmp eq i32 %116, 0
  br i1 %118, label %inter_warp_reduce-true822, label %inter_warp_reduce-after823

inter_warp_reduce-after823:                       ; preds = %reduction_write_output-after841, %intra_warp_reduce_write-after821
  %current_output843 = getelementptr inbounds float, ptr %partial_reduction_result20, i32 0
  %partial_reduction_result845 = load float, ptr %current_output843, align 4
  %119 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result845, i32 16, i32 31)
  store float %119, ptr %result_from_other_lane844, align 4
  call void @region_8_164(ptr %current_output843, ptr %result_from_other_lane844, ptr %return_buffer846)
  %120 = load float, ptr %return_buffer846, align 4
  store float %120, ptr %current_output843, align 4
  %partial_reduction_result848 = load float, ptr %current_output843, align 4
  %121 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result848, i32 8, i32 31)
  store float %121, ptr %result_from_other_lane847, align 4
  call void @region_8_164(ptr %current_output843, ptr %result_from_other_lane847, ptr %return_buffer849)
  %122 = load float, ptr %return_buffer849, align 4
  store float %122, ptr %current_output843, align 4
  %partial_reduction_result851 = load float, ptr %current_output843, align 4
  %123 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result851, i32 4, i32 31)
  store float %123, ptr %result_from_other_lane850, align 4
  call void @region_8_164(ptr %current_output843, ptr %result_from_other_lane850, ptr %return_buffer852)
  %124 = load float, ptr %return_buffer852, align 4
  store float %124, ptr %current_output843, align 4
  %partial_reduction_result854 = load float, ptr %current_output843, align 4
  %125 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result854, i32 2, i32 31)
  store float %125, ptr %result_from_other_lane853, align 4
  call void @region_8_164(ptr %current_output843, ptr %result_from_other_lane853, ptr %return_buffer855)
  %126 = load float, ptr %return_buffer855, align 4
  store float %126, ptr %current_output843, align 4
  %partial_reduction_result857 = load float, ptr %current_output843, align 4
  %127 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result857, i32 1, i32 31)
  store float %127, ptr %result_from_other_lane856, align 4
  call void @region_8_164(ptr %current_output843, ptr %result_from_other_lane856, ptr %return_buffer858)
  %128 = load float, ptr %return_buffer858, align 4
  store float %128, ptr %current_output843, align 4
  %129 = udiv i32 %thread_id.x, 32
  %130 = icmp eq i32 %lane_id, 0
  br i1 %130, label %intra_warp_reduce_write-true859, label %intra_warp_reduce_write-after860

intra_warp_reduce_write-after860:                 ; preds = %intra_warp_reduce_write-true859, %inter_warp_reduce-after823
  call void @llvm.nvvm.barrier0()
  %131 = icmp eq i32 %129, 0
  br i1 %131, label %inter_warp_reduce-true861, label %inter_warp_reduce-after862

inter_warp_reduce-after862:                       ; preds = %reduction_write_output-after880, %intra_warp_reduce_write-after860
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

is_full_tile-true:                                ; preds = %y_in_tile.loop_body
  %132 = mul i32 %thread_id.x, 2
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %tile_loop.loop_body, %is_full_tile-true
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %133 = icmp uge i32 %tile_loop.indvar, 8
  br i1 %133, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc23 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc23, ptr %tile_loop.invar_address, align 4
  %134 = icmp eq i32 %tile_loop.indvar, 0
  %135 = mul i32 %tile_loop.indvar, 1024
  %136 = add i32 %135, 0
  %x_loc = add i32 %136, %132
  %137 = add i32 %tile_origin.1, %y_in_tile.indvar
  %138 = add i32 %tile_origin.2, %x_loc
  %139 = mul nuw nsw i32 %138, 1
  %140 = add nuw nsw i32 0, %139
  %141 = mul nuw nsw i32 %137, 8192
  %142 = add nuw nsw i32 %140, %141
  %143 = mul nuw nsw i32 %tile_origin.0, 8192
  %144 = add nuw nsw i32 %142, %143
  %145 = udiv i32 %144, 1
  %146 = add i32 %145, 0
  %Arg_1.2 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 35, i32 %146, i32 0
  %Arg_1.224 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %Arg_11.12 = getelementptr inbounds float, ptr %arg11, i32 %144
  %Arg_11.1225 = load float, ptr %Arg_11.12, align 4, !invariant.load !297
  %multiply.75 = fmul float %Arg_1.224, %Arg_11.1225
  %region_0_170_constant_23 = load float, ptr @62, align 4
  %subtract.76 = fsub float %region_0_170_constant_23, %Arg_11.1225
  %multiply.77 = fmul float %multiply.75, %subtract.76
  store float %multiply.77, ptr %reduction_input_address, align 4
  %147 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_80(ptr %147, ptr %reduction_input_address, ptr %return_buffer)
  %148 = load float, ptr %return_buffer, align 4
  store float %148, ptr %147, align 4
  %149 = add i32 %145, 0
  %Arg_1.226 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 36, i32 %149, i32 0
  %Arg_1.227 = load float, ptr %Arg_1.226, align 4, !invariant.load !297
  %Arg_12.13 = getelementptr inbounds float, ptr %arg12, i32 %144
  %Arg_12.1328 = load float, ptr %Arg_12.13, align 4, !invariant.load !297
  %multiply.88 = fmul float %Arg_1.227, %Arg_12.1328
  %subtract.89 = fsub float %region_0_170_constant_23, %Arg_12.1328
  %multiply.90 = fmul float %multiply.88, %subtract.89
  store float %multiply.90, ptr %reduction_input_address1, align 4
  %150 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_92(ptr %150, ptr %reduction_input_address1, ptr %return_buffer29)
  %151 = load float, ptr %return_buffer29, align 4
  store float %151, ptr %150, align 4
  %152 = add i32 %145, 0
  %Arg_1.230 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 37, i32 %152, i32 0
  %Arg_1.231 = load float, ptr %Arg_1.230, align 4, !invariant.load !297
  %Arg_13.14 = getelementptr inbounds float, ptr %arg13, i32 %144
  %Arg_13.1432 = load float, ptr %Arg_13.14, align 4, !invariant.load !297
  %multiply.100 = fmul float %Arg_1.231, %Arg_13.1432
  %subtract.101 = fsub float %region_0_170_constant_23, %Arg_13.1432
  %multiply.102 = fmul float %multiply.100, %subtract.101
  store float %multiply.102, ptr %reduction_input_address4, align 4
  %153 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  call void @region_3_104(ptr %153, ptr %reduction_input_address4, ptr %return_buffer33)
  %154 = load float, ptr %return_buffer33, align 4
  store float %154, ptr %153, align 4
  %155 = add i32 %145, 0
  %Arg_1.234 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 38, i32 %155, i32 0
  %Arg_1.235 = load float, ptr %Arg_1.234, align 4, !invariant.load !297
  %Arg_14.15 = getelementptr inbounds float, ptr %arg14, i32 %144
  %Arg_14.1536 = load float, ptr %Arg_14.15, align 4, !invariant.load !297
  %multiply.112 = fmul float %Arg_1.235, %Arg_14.1536
  %subtract.113 = fsub float %region_0_170_constant_23, %Arg_14.1536
  %multiply.114 = fmul float %multiply.112, %subtract.113
  store float %multiply.114, ptr %reduction_input_address7, align 4
  %156 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  call void @region_4_116(ptr %156, ptr %reduction_input_address7, ptr %return_buffer37)
  %157 = load float, ptr %return_buffer37, align 4
  store float %157, ptr %156, align 4
  %158 = add i32 %145, 0
  %Arg_1.238 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 39, i32 %158, i32 0
  %Arg_1.239 = load float, ptr %Arg_1.238, align 4, !invariant.load !297
  %Arg_15.16 = getelementptr inbounds float, ptr %arg15, i32 %144
  %Arg_15.1640 = load float, ptr %Arg_15.16, align 4, !invariant.load !297
  %multiply.124 = fmul float %Arg_1.239, %Arg_15.1640
  %subtract.125 = fsub float %region_0_170_constant_23, %Arg_15.1640
  %multiply.126 = fmul float %multiply.124, %subtract.125
  store float %multiply.126, ptr %reduction_input_address10, align 4
  %159 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  call void @region_5_128(ptr %159, ptr %reduction_input_address10, ptr %return_buffer41)
  %160 = load float, ptr %return_buffer41, align 4
  store float %160, ptr %159, align 4
  %161 = add i32 %145, 0
  %Arg_1.242 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 40, i32 %161, i32 0
  %Arg_1.243 = load float, ptr %Arg_1.242, align 4, !invariant.load !297
  %Arg_16.17 = getelementptr inbounds float, ptr %arg16, i32 %144
  %Arg_16.1744 = load float, ptr %Arg_16.17, align 4, !invariant.load !297
  %multiply.136 = fmul float %Arg_1.243, %Arg_16.1744
  %subtract.137 = fsub float %region_0_170_constant_23, %Arg_16.1744
  %multiply.138 = fmul float %multiply.136, %subtract.137
  store float %multiply.138, ptr %reduction_input_address13, align 4
  %162 = getelementptr inbounds float, ptr %partial_reduction_result14, i32 0
  call void @region_6_140(ptr %162, ptr %reduction_input_address13, ptr %return_buffer45)
  %163 = load float, ptr %return_buffer45, align 4
  store float %163, ptr %162, align 4
  %164 = add i32 %145, 0
  %Arg_1.246 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 41, i32 %164, i32 0
  %Arg_1.247 = load float, ptr %Arg_1.246, align 4, !invariant.load !297
  %Arg_17.18 = getelementptr inbounds float, ptr %arg17, i32 %144
  %Arg_17.1848 = load float, ptr %Arg_17.18, align 4, !invariant.load !297
  %multiply.148 = fmul float %Arg_1.247, %Arg_17.1848
  %subtract.149 = fsub float %region_0_170_constant_23, %Arg_17.1848
  %multiply.150 = fmul float %multiply.148, %subtract.149
  store float %multiply.150, ptr %reduction_input_address16, align 4
  %165 = getelementptr inbounds float, ptr %partial_reduction_result17, i32 0
  call void @region_7_152(ptr %165, ptr %reduction_input_address16, ptr %return_buffer49)
  %166 = load float, ptr %return_buffer49, align 4
  store float %166, ptr %165, align 4
  %167 = add i32 %145, 0
  %Arg_1.250 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 42, i32 %167, i32 0
  %Arg_1.251 = load float, ptr %Arg_1.250, align 4, !invariant.load !297
  %Arg_18.19 = getelementptr inbounds float, ptr %arg18, i32 %144
  %Arg_18.1952 = load float, ptr %Arg_18.19, align 4, !invariant.load !297
  %multiply.160 = fmul float %Arg_1.251, %Arg_18.1952
  %subtract.161 = fsub float %region_0_170_constant_23, %Arg_18.1952
  %multiply.162 = fmul float %multiply.160, %subtract.161
  store float %multiply.162, ptr %reduction_input_address19, align 4
  %168 = getelementptr inbounds float, ptr %partial_reduction_result20, i32 0
  call void @region_8_164(ptr %168, ptr %reduction_input_address19, ptr %return_buffer53)
  %169 = load float, ptr %return_buffer53, align 4
  store float %169, ptr %168, align 4
  %170 = add i32 %145, 0
  %Arg_1.254 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 10, i32 %170, i32 0
  %Arg_1.255 = load float, ptr %Arg_1.254, align 4, !invariant.load !297
  %Arg_0.1 = getelementptr inbounds float, ptr %arg0, i32 %144
  %Arg_0.156 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %multiply.22 = fmul float %Arg_1.255, %Arg_0.156
  %Arg_0.157 = getelementptr inbounds float, ptr %arg0, i32 %144
  %Arg_0.158 = load float, ptr %Arg_0.157, align 4, !invariant.load !297
  %subtract.25 = fsub float %region_0_170_constant_23, %Arg_0.158
  %multiply.26 = fmul float %multiply.22, %subtract.25
  %171 = add i32 %145, 0
  %Arg_1.259 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 11, i32 %171, i32 0
  %Arg_1.260 = load float, ptr %Arg_1.259, align 4, !invariant.load !297
  %Arg_2.3 = getelementptr inbounds float, ptr %arg2, i32 %144
  %Arg_2.361 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %multiply.29 = fmul float %Arg_1.260, %Arg_2.361
  %Arg_2.362 = getelementptr inbounds float, ptr %arg2, i32 %144
  %Arg_2.363 = load float, ptr %Arg_2.362, align 4, !invariant.load !297
  %subtract.30 = fsub float %region_0_170_constant_23, %Arg_2.363
  %multiply.31 = fmul float %multiply.29, %subtract.30
  %172 = add i32 %145, 0
  %Arg_1.264 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 19, i32 %172, i32 0
  %Arg_1.265 = load float, ptr %Arg_1.264, align 4, !invariant.load !297
  %Arg_3.4 = getelementptr inbounds float, ptr %arg3, i32 %144
  %Arg_3.466 = load float, ptr %Arg_3.4, align 4
  %multiply.34 = fmul float %Arg_1.265, %Arg_3.466
  %Arg_3.467 = getelementptr inbounds float, ptr %arg3, i32 %144
  %Arg_3.468 = load float, ptr %Arg_3.467, align 4
  %subtract.35 = fsub float %region_0_170_constant_23, %Arg_3.468
  %multiply.36 = fmul float %multiply.34, %subtract.35
  %173 = add i32 %145, 0
  %Arg_1.269 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 15, i32 %173, i32 0
  %Arg_1.270 = load float, ptr %Arg_1.269, align 4, !invariant.load !297
  %Arg_4.5 = getelementptr inbounds float, ptr %arg4, i32 %144
  %Arg_4.571 = load float, ptr %Arg_4.5, align 4, !invariant.load !297
  %multiply.39 = fmul float %Arg_1.270, %Arg_4.571
  %Arg_4.572 = getelementptr inbounds float, ptr %arg4, i32 %144
  %Arg_4.573 = load float, ptr %Arg_4.572, align 4, !invariant.load !297
  %subtract.40 = fsub float %region_0_170_constant_23, %Arg_4.573
  %multiply.41 = fmul float %multiply.39, %subtract.40
  %174 = add i32 %145, 0
  %Arg_1.274 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 16, i32 %174, i32 0
  %Arg_1.275 = load float, ptr %Arg_1.274, align 4, !invariant.load !297
  %Arg_5.6 = getelementptr inbounds float, ptr %arg5, i32 %144
  %Arg_5.676 = load float, ptr %Arg_5.6, align 4, !invariant.load !297
  %multiply.44 = fmul float %Arg_1.275, %Arg_5.676
  %Arg_5.677 = getelementptr inbounds float, ptr %arg5, i32 %144
  %Arg_5.678 = load float, ptr %Arg_5.677, align 4, !invariant.load !297
  %subtract.45 = fsub float %region_0_170_constant_23, %Arg_5.678
  %multiply.46 = fmul float %multiply.44, %subtract.45
  %175 = add i32 %145, 0
  %Arg_1.279 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 18, i32 %175, i32 0
  %Arg_1.280 = load float, ptr %Arg_1.279, align 4, !invariant.load !297
  %Arg_6.7 = getelementptr inbounds float, ptr %arg6, i32 %144
  %Arg_6.781 = load float, ptr %Arg_6.7, align 4
  %multiply.49 = fmul float %Arg_1.280, %Arg_6.781
  %Arg_6.782 = getelementptr inbounds float, ptr %arg6, i32 %144
  %Arg_6.783 = load float, ptr %Arg_6.782, align 4
  %subtract.50 = fsub float %region_0_170_constant_23, %Arg_6.783
  %multiply.51 = fmul float %multiply.49, %subtract.50
  %176 = add i32 %145, 0
  %Arg_1.284 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 20, i32 %176, i32 0
  %Arg_1.285 = load float, ptr %Arg_1.284, align 4, !invariant.load !297
  %Arg_7.8 = getelementptr inbounds float, ptr %arg7, i32 %144
  %Arg_7.886 = load float, ptr %Arg_7.8, align 4
  %multiply.54 = fmul float %Arg_1.285, %Arg_7.886
  %Arg_7.887 = getelementptr inbounds float, ptr %arg7, i32 %144
  %Arg_7.888 = load float, ptr %Arg_7.887, align 4
  %subtract.55 = fsub float %region_0_170_constant_23, %Arg_7.888
  %multiply.56 = fmul float %multiply.54, %subtract.55
  %177 = add i32 %145, 0
  %Arg_1.289 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 7, i32 %177, i32 0
  %Arg_1.290 = load float, ptr %Arg_1.289, align 4, !invariant.load !297
  %Arg_8.9 = getelementptr inbounds float, ptr %arg8, i32 %144
  %Arg_8.991 = load float, ptr %Arg_8.9, align 4, !invariant.load !297
  %multiply.59 = fmul float %Arg_1.290, %Arg_8.991
  %Arg_8.992 = getelementptr inbounds float, ptr %arg8, i32 %144
  %Arg_8.993 = load float, ptr %Arg_8.992, align 4, !invariant.load !297
  %subtract.60 = fsub float %region_0_170_constant_23, %Arg_8.993
  %multiply.61 = fmul float %multiply.59, %subtract.60
  %178 = add i32 %145, 0
  %Arg_1.294 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 34, i32 %178, i32 0
  %Arg_1.295 = load float, ptr %Arg_1.294, align 4, !invariant.load !297
  %Arg_9.10 = getelementptr inbounds float, ptr %arg9, i32 %144
  %Arg_9.1096 = load float, ptr %Arg_9.10, align 4
  %multiply.64 = fmul float %Arg_1.295, %Arg_9.1096
  %Arg_9.1097 = getelementptr inbounds float, ptr %arg9, i32 %144
  %Arg_9.1098 = load float, ptr %Arg_9.1097, align 4
  %subtract.65 = fsub float %region_0_170_constant_23, %Arg_9.1098
  %multiply.66 = fmul float %multiply.64, %subtract.65
  %179 = add i32 %145, 0
  %Arg_1.299 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 8, i32 %179, i32 0
  %Arg_1.2100 = load float, ptr %Arg_1.299, align 4, !invariant.load !297
  %Arg_10.11 = getelementptr inbounds float, ptr %arg10, i32 %144
  %Arg_10.11101 = load float, ptr %Arg_10.11, align 4, !invariant.load !297
  %multiply.69 = fmul float %Arg_1.2100, %Arg_10.11101
  %Arg_10.11102 = getelementptr inbounds float, ptr %arg10, i32 %144
  %Arg_10.11103 = load float, ptr %Arg_10.11102, align 4, !invariant.load !297
  %subtract.70 = fsub float %region_0_170_constant_23, %Arg_10.11103
  %multiply.71 = fmul float %multiply.69, %subtract.70
  %180 = getelementptr inbounds float, ptr %arg9, i32 %144
  store float %multiply.56, ptr %180, align 4
  %181 = getelementptr inbounds float, ptr %arg21, i32 %144
  store float %multiply.36, ptr %181, align 4
  %182 = getelementptr inbounds float, ptr %arg7, i32 %144
  store float %multiply.61, ptr %182, align 4
  %183 = getelementptr inbounds float, ptr %arg24, i32 %144
  store float %multiply.51, ptr %183, align 4
  %184 = getelementptr inbounds float, ptr %arg23, i32 %144
  store float %multiply.46, ptr %184, align 4
  %185 = getelementptr inbounds float, ptr %arg6, i32 %144
  store float %multiply.71, ptr %185, align 4
  %186 = getelementptr inbounds float, ptr %arg3, i32 %144
  store float %multiply.66, ptr %186, align 4
  %187 = getelementptr inbounds float, ptr %arg22, i32 %144
  store float %multiply.41, ptr %187, align 4
  %188 = getelementptr inbounds float, ptr %arg19, i32 %144
  store float %multiply.26, ptr %188, align 4
  %189 = getelementptr inbounds float, ptr %arg20, i32 %144
  store float %multiply.31, ptr %189, align 4
  %190 = mul i32 %tile_loop.indvar, 1024
  %191 = add i32 %190, 1
  %x_loc104 = add i32 %191, %132
  %192 = add i32 %tile_origin.1, %y_in_tile.indvar
  %193 = add i32 %tile_origin.2, %x_loc104
  %194 = mul nuw nsw i32 %193, 1
  %195 = add nuw nsw i32 0, %194
  %196 = mul nuw nsw i32 %192, 8192
  %197 = add nuw nsw i32 %195, %196
  %198 = mul nuw nsw i32 %tile_origin.0, 8192
  %199 = add nuw nsw i32 %197, %198
  %200 = udiv i32 %199, 1
  %201 = add i32 %200, 0
  %Arg_1.2105 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 35, i32 %201, i32 0
  %Arg_1.2106 = load float, ptr %Arg_1.2105, align 4, !invariant.load !297
  %Arg_11.12107 = getelementptr inbounds float, ptr %arg11, i32 %199
  %Arg_11.12108 = load float, ptr %Arg_11.12107, align 4, !invariant.load !297
  %multiply.75109 = fmul float %Arg_1.2106, %Arg_11.12108
  %region_0_170_constant_23110 = load float, ptr @62, align 4
  %subtract.76111 = fsub float %region_0_170_constant_23110, %Arg_11.12108
  %multiply.77112 = fmul float %multiply.75109, %subtract.76111
  store float %multiply.77112, ptr %reduction_input_address, align 4
  %202 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_80(ptr %202, ptr %reduction_input_address, ptr %return_buffer113)
  %203 = load float, ptr %return_buffer113, align 4
  store float %203, ptr %202, align 4
  %204 = add i32 %200, 0
  %Arg_1.2114 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 36, i32 %204, i32 0
  %Arg_1.2115 = load float, ptr %Arg_1.2114, align 4, !invariant.load !297
  %Arg_12.13116 = getelementptr inbounds float, ptr %arg12, i32 %199
  %Arg_12.13117 = load float, ptr %Arg_12.13116, align 4, !invariant.load !297
  %multiply.88118 = fmul float %Arg_1.2115, %Arg_12.13117
  %subtract.89119 = fsub float %region_0_170_constant_23110, %Arg_12.13117
  %multiply.90120 = fmul float %multiply.88118, %subtract.89119
  store float %multiply.90120, ptr %reduction_input_address1, align 4
  %205 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_92(ptr %205, ptr %reduction_input_address1, ptr %return_buffer121)
  %206 = load float, ptr %return_buffer121, align 4
  store float %206, ptr %205, align 4
  %207 = add i32 %200, 0
  %Arg_1.2122 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 37, i32 %207, i32 0
  %Arg_1.2123 = load float, ptr %Arg_1.2122, align 4, !invariant.load !297
  %Arg_13.14124 = getelementptr inbounds float, ptr %arg13, i32 %199
  %Arg_13.14125 = load float, ptr %Arg_13.14124, align 4, !invariant.load !297
  %multiply.100126 = fmul float %Arg_1.2123, %Arg_13.14125
  %subtract.101127 = fsub float %region_0_170_constant_23110, %Arg_13.14125
  %multiply.102128 = fmul float %multiply.100126, %subtract.101127
  store float %multiply.102128, ptr %reduction_input_address4, align 4
  %208 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  call void @region_3_104(ptr %208, ptr %reduction_input_address4, ptr %return_buffer129)
  %209 = load float, ptr %return_buffer129, align 4
  store float %209, ptr %208, align 4
  %210 = add i32 %200, 0
  %Arg_1.2130 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 38, i32 %210, i32 0
  %Arg_1.2131 = load float, ptr %Arg_1.2130, align 4, !invariant.load !297
  %Arg_14.15132 = getelementptr inbounds float, ptr %arg14, i32 %199
  %Arg_14.15133 = load float, ptr %Arg_14.15132, align 4, !invariant.load !297
  %multiply.112134 = fmul float %Arg_1.2131, %Arg_14.15133
  %subtract.113135 = fsub float %region_0_170_constant_23110, %Arg_14.15133
  %multiply.114136 = fmul float %multiply.112134, %subtract.113135
  store float %multiply.114136, ptr %reduction_input_address7, align 4
  %211 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  call void @region_4_116(ptr %211, ptr %reduction_input_address7, ptr %return_buffer137)
  %212 = load float, ptr %return_buffer137, align 4
  store float %212, ptr %211, align 4
  %213 = add i32 %200, 0
  %Arg_1.2138 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 39, i32 %213, i32 0
  %Arg_1.2139 = load float, ptr %Arg_1.2138, align 4, !invariant.load !297
  %Arg_15.16140 = getelementptr inbounds float, ptr %arg15, i32 %199
  %Arg_15.16141 = load float, ptr %Arg_15.16140, align 4, !invariant.load !297
  %multiply.124142 = fmul float %Arg_1.2139, %Arg_15.16141
  %subtract.125143 = fsub float %region_0_170_constant_23110, %Arg_15.16141
  %multiply.126144 = fmul float %multiply.124142, %subtract.125143
  store float %multiply.126144, ptr %reduction_input_address10, align 4
  %214 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  call void @region_5_128(ptr %214, ptr %reduction_input_address10, ptr %return_buffer145)
  %215 = load float, ptr %return_buffer145, align 4
  store float %215, ptr %214, align 4
  %216 = add i32 %200, 0
  %Arg_1.2146 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 40, i32 %216, i32 0
  %Arg_1.2147 = load float, ptr %Arg_1.2146, align 4, !invariant.load !297
  %Arg_16.17148 = getelementptr inbounds float, ptr %arg16, i32 %199
  %Arg_16.17149 = load float, ptr %Arg_16.17148, align 4, !invariant.load !297
  %multiply.136150 = fmul float %Arg_1.2147, %Arg_16.17149
  %subtract.137151 = fsub float %region_0_170_constant_23110, %Arg_16.17149
  %multiply.138152 = fmul float %multiply.136150, %subtract.137151
  store float %multiply.138152, ptr %reduction_input_address13, align 4
  %217 = getelementptr inbounds float, ptr %partial_reduction_result14, i32 0
  call void @region_6_140(ptr %217, ptr %reduction_input_address13, ptr %return_buffer153)
  %218 = load float, ptr %return_buffer153, align 4
  store float %218, ptr %217, align 4
  %219 = add i32 %200, 0
  %Arg_1.2154 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 41, i32 %219, i32 0
  %Arg_1.2155 = load float, ptr %Arg_1.2154, align 4, !invariant.load !297
  %Arg_17.18156 = getelementptr inbounds float, ptr %arg17, i32 %199
  %Arg_17.18157 = load float, ptr %Arg_17.18156, align 4, !invariant.load !297
  %multiply.148158 = fmul float %Arg_1.2155, %Arg_17.18157
  %subtract.149159 = fsub float %region_0_170_constant_23110, %Arg_17.18157
  %multiply.150160 = fmul float %multiply.148158, %subtract.149159
  store float %multiply.150160, ptr %reduction_input_address16, align 4
  %220 = getelementptr inbounds float, ptr %partial_reduction_result17, i32 0
  call void @region_7_152(ptr %220, ptr %reduction_input_address16, ptr %return_buffer161)
  %221 = load float, ptr %return_buffer161, align 4
  store float %221, ptr %220, align 4
  %222 = add i32 %200, 0
  %Arg_1.2162 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 42, i32 %222, i32 0
  %Arg_1.2163 = load float, ptr %Arg_1.2162, align 4, !invariant.load !297
  %Arg_18.19164 = getelementptr inbounds float, ptr %arg18, i32 %199
  %Arg_18.19165 = load float, ptr %Arg_18.19164, align 4, !invariant.load !297
  %multiply.160166 = fmul float %Arg_1.2163, %Arg_18.19165
  %subtract.161167 = fsub float %region_0_170_constant_23110, %Arg_18.19165
  %multiply.162168 = fmul float %multiply.160166, %subtract.161167
  store float %multiply.162168, ptr %reduction_input_address19, align 4
  %223 = getelementptr inbounds float, ptr %partial_reduction_result20, i32 0
  call void @region_8_164(ptr %223, ptr %reduction_input_address19, ptr %return_buffer169)
  %224 = load float, ptr %return_buffer169, align 4
  store float %224, ptr %223, align 4
  %225 = add i32 %200, 0
  %Arg_1.2170 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 10, i32 %225, i32 0
  %Arg_1.2171 = load float, ptr %Arg_1.2170, align 4, !invariant.load !297
  %Arg_0.1172 = getelementptr inbounds float, ptr %arg0, i32 %199
  %Arg_0.1173 = load float, ptr %Arg_0.1172, align 4, !invariant.load !297
  %multiply.22174 = fmul float %Arg_1.2171, %Arg_0.1173
  %Arg_0.1175 = getelementptr inbounds float, ptr %arg0, i32 %199
  %Arg_0.1176 = load float, ptr %Arg_0.1175, align 4, !invariant.load !297
  %subtract.25177 = fsub float %region_0_170_constant_23110, %Arg_0.1176
  %multiply.26178 = fmul float %multiply.22174, %subtract.25177
  %226 = add i32 %200, 0
  %Arg_1.2179 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 11, i32 %226, i32 0
  %Arg_1.2180 = load float, ptr %Arg_1.2179, align 4, !invariant.load !297
  %Arg_2.3181 = getelementptr inbounds float, ptr %arg2, i32 %199
  %Arg_2.3182 = load float, ptr %Arg_2.3181, align 4, !invariant.load !297
  %multiply.29183 = fmul float %Arg_1.2180, %Arg_2.3182
  %Arg_2.3184 = getelementptr inbounds float, ptr %arg2, i32 %199
  %Arg_2.3185 = load float, ptr %Arg_2.3184, align 4, !invariant.load !297
  %subtract.30186 = fsub float %region_0_170_constant_23110, %Arg_2.3185
  %multiply.31187 = fmul float %multiply.29183, %subtract.30186
  %227 = add i32 %200, 0
  %Arg_1.2188 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 19, i32 %227, i32 0
  %Arg_1.2189 = load float, ptr %Arg_1.2188, align 4, !invariant.load !297
  %Arg_3.4190 = getelementptr inbounds float, ptr %arg3, i32 %199
  %Arg_3.4191 = load float, ptr %Arg_3.4190, align 4
  %multiply.34192 = fmul float %Arg_1.2189, %Arg_3.4191
  %Arg_3.4193 = getelementptr inbounds float, ptr %arg3, i32 %199
  %Arg_3.4194 = load float, ptr %Arg_3.4193, align 4
  %subtract.35195 = fsub float %region_0_170_constant_23110, %Arg_3.4194
  %multiply.36196 = fmul float %multiply.34192, %subtract.35195
  %228 = add i32 %200, 0
  %Arg_1.2197 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 15, i32 %228, i32 0
  %Arg_1.2198 = load float, ptr %Arg_1.2197, align 4, !invariant.load !297
  %Arg_4.5199 = getelementptr inbounds float, ptr %arg4, i32 %199
  %Arg_4.5200 = load float, ptr %Arg_4.5199, align 4, !invariant.load !297
  %multiply.39201 = fmul float %Arg_1.2198, %Arg_4.5200
  %Arg_4.5202 = getelementptr inbounds float, ptr %arg4, i32 %199
  %Arg_4.5203 = load float, ptr %Arg_4.5202, align 4, !invariant.load !297
  %subtract.40204 = fsub float %region_0_170_constant_23110, %Arg_4.5203
  %multiply.41205 = fmul float %multiply.39201, %subtract.40204
  %229 = add i32 %200, 0
  %Arg_1.2206 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 16, i32 %229, i32 0
  %Arg_1.2207 = load float, ptr %Arg_1.2206, align 4, !invariant.load !297
  %Arg_5.6208 = getelementptr inbounds float, ptr %arg5, i32 %199
  %Arg_5.6209 = load float, ptr %Arg_5.6208, align 4, !invariant.load !297
  %multiply.44210 = fmul float %Arg_1.2207, %Arg_5.6209
  %Arg_5.6211 = getelementptr inbounds float, ptr %arg5, i32 %199
  %Arg_5.6212 = load float, ptr %Arg_5.6211, align 4, !invariant.load !297
  %subtract.45213 = fsub float %region_0_170_constant_23110, %Arg_5.6212
  %multiply.46214 = fmul float %multiply.44210, %subtract.45213
  %230 = add i32 %200, 0
  %Arg_1.2215 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 18, i32 %230, i32 0
  %Arg_1.2216 = load float, ptr %Arg_1.2215, align 4, !invariant.load !297
  %Arg_6.7217 = getelementptr inbounds float, ptr %arg6, i32 %199
  %Arg_6.7218 = load float, ptr %Arg_6.7217, align 4
  %multiply.49219 = fmul float %Arg_1.2216, %Arg_6.7218
  %Arg_6.7220 = getelementptr inbounds float, ptr %arg6, i32 %199
  %Arg_6.7221 = load float, ptr %Arg_6.7220, align 4
  %subtract.50222 = fsub float %region_0_170_constant_23110, %Arg_6.7221
  %multiply.51223 = fmul float %multiply.49219, %subtract.50222
  %231 = add i32 %200, 0
  %Arg_1.2224 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 20, i32 %231, i32 0
  %Arg_1.2225 = load float, ptr %Arg_1.2224, align 4, !invariant.load !297
  %Arg_7.8226 = getelementptr inbounds float, ptr %arg7, i32 %199
  %Arg_7.8227 = load float, ptr %Arg_7.8226, align 4
  %multiply.54228 = fmul float %Arg_1.2225, %Arg_7.8227
  %Arg_7.8229 = getelementptr inbounds float, ptr %arg7, i32 %199
  %Arg_7.8230 = load float, ptr %Arg_7.8229, align 4
  %subtract.55231 = fsub float %region_0_170_constant_23110, %Arg_7.8230
  %multiply.56232 = fmul float %multiply.54228, %subtract.55231
  %232 = add i32 %200, 0
  %Arg_1.2233 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 7, i32 %232, i32 0
  %Arg_1.2234 = load float, ptr %Arg_1.2233, align 4, !invariant.load !297
  %Arg_8.9235 = getelementptr inbounds float, ptr %arg8, i32 %199
  %Arg_8.9236 = load float, ptr %Arg_8.9235, align 4, !invariant.load !297
  %multiply.59237 = fmul float %Arg_1.2234, %Arg_8.9236
  %Arg_8.9238 = getelementptr inbounds float, ptr %arg8, i32 %199
  %Arg_8.9239 = load float, ptr %Arg_8.9238, align 4, !invariant.load !297
  %subtract.60240 = fsub float %region_0_170_constant_23110, %Arg_8.9239
  %multiply.61241 = fmul float %multiply.59237, %subtract.60240
  %233 = add i32 %200, 0
  %Arg_1.2242 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 34, i32 %233, i32 0
  %Arg_1.2243 = load float, ptr %Arg_1.2242, align 4, !invariant.load !297
  %Arg_9.10244 = getelementptr inbounds float, ptr %arg9, i32 %199
  %Arg_9.10245 = load float, ptr %Arg_9.10244, align 4
  %multiply.64246 = fmul float %Arg_1.2243, %Arg_9.10245
  %Arg_9.10247 = getelementptr inbounds float, ptr %arg9, i32 %199
  %Arg_9.10248 = load float, ptr %Arg_9.10247, align 4
  %subtract.65249 = fsub float %region_0_170_constant_23110, %Arg_9.10248
  %multiply.66250 = fmul float %multiply.64246, %subtract.65249
  %234 = add i32 %200, 0
  %Arg_1.2251 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 8, i32 %234, i32 0
  %Arg_1.2252 = load float, ptr %Arg_1.2251, align 4, !invariant.load !297
  %Arg_10.11253 = getelementptr inbounds float, ptr %arg10, i32 %199
  %Arg_10.11254 = load float, ptr %Arg_10.11253, align 4, !invariant.load !297
  %multiply.69255 = fmul float %Arg_1.2252, %Arg_10.11254
  %Arg_10.11256 = getelementptr inbounds float, ptr %arg10, i32 %199
  %Arg_10.11257 = load float, ptr %Arg_10.11256, align 4, !invariant.load !297
  %subtract.70258 = fsub float %region_0_170_constant_23110, %Arg_10.11257
  %multiply.71259 = fmul float %multiply.69255, %subtract.70258
  %235 = getelementptr inbounds float, ptr %arg9, i32 %199
  store float %multiply.56232, ptr %235, align 4
  %236 = getelementptr inbounds float, ptr %arg21, i32 %199
  store float %multiply.36196, ptr %236, align 4
  %237 = getelementptr inbounds float, ptr %arg7, i32 %199
  store float %multiply.61241, ptr %237, align 4
  %238 = getelementptr inbounds float, ptr %arg24, i32 %199
  store float %multiply.51223, ptr %238, align 4
  %239 = getelementptr inbounds float, ptr %arg23, i32 %199
  store float %multiply.46214, ptr %239, align 4
  %240 = getelementptr inbounds float, ptr %arg6, i32 %199
  store float %multiply.71259, ptr %240, align 4
  %241 = getelementptr inbounds float, ptr %arg3, i32 %199
  store float %multiply.66250, ptr %241, align 4
  %242 = getelementptr inbounds float, ptr %arg20, i32 %199
  store float %multiply.31187, ptr %242, align 4
  %243 = getelementptr inbounds float, ptr %arg22, i32 %199
  store float %multiply.41205, ptr %243, align 4
  %244 = getelementptr inbounds float, ptr %arg19, i32 %199
  store float %multiply.26178, ptr %244, align 4
  br label %tile_loop.loop_header, !llvm.loop !426

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %is_full_tile-after

is_full_tile-false:                               ; preds = %y_in_tile.loop_body
  %245 = mul i32 %thread_id.x, 2
  store i32 0, ptr %tile_loop.invar_address263, align 4
  br label %tile_loop.loop_header261

tile_loop.loop_header261:                         ; preds = %x_in_tile-after424, %is_full_tile-false
  %tile_loop.indvar264 = load i32, ptr %tile_loop.invar_address263, align 4
  %246 = icmp uge i32 %tile_loop.indvar264, 8
  br i1 %246, label %tile_loop.loop_exit260, label %tile_loop.loop_body262

tile_loop.loop_body262:                           ; preds = %tile_loop.loop_header261
  %invar.inc265 = add nuw nsw i32 %tile_loop.indvar264, 1
  store i32 %invar.inc265, ptr %tile_loop.invar_address263, align 4
  %247 = icmp eq i32 %tile_loop.indvar264, 0
  %248 = mul i32 %tile_loop.indvar264, 1024
  %249 = add i32 %248, 0
  %x_loc266 = add i32 %249, %245
  %250 = add i32 %tile_origin.1, %y_in_tile.indvar
  %251 = add i32 %tile_origin.2, %x_loc266
  %252 = icmp ult i32 %x_loc266, %tile_bound22
  br i1 %252, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body262
  %253 = mul i32 %tile_loop.indvar264, 1024
  %254 = add i32 %253, 1
  %x_loc422 = add i32 %254, %245
  %255 = add i32 %tile_origin.1, %y_in_tile.indvar
  %256 = add i32 %tile_origin.2, %x_loc422
  %257 = icmp ult i32 %x_loc422, %tile_bound22
  br i1 %257, label %x_in_tile-true423, label %x_in_tile-after424

x_in_tile-after424:                               ; preds = %x_in_tile-true423, %x_in_tile-after
  br label %tile_loop.loop_header261, !llvm.loop !427

tile_loop.loop_exit260:                           ; preds = %tile_loop.loop_header261
  br label %is_full_tile-after

x_in_tile-true:                                   ; preds = %tile_loop.loop_body262
  %258 = mul nuw nsw i32 %251, 1
  %259 = add nuw nsw i32 0, %258
  %260 = mul nuw nsw i32 %250, 8192
  %261 = add nuw nsw i32 %259, %260
  %262 = mul nuw nsw i32 %tile_origin.0, 8192
  %263 = add nuw nsw i32 %261, %262
  %264 = udiv i32 %263, 1
  %265 = add i32 %264, 0
  %Arg_1.2267 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 35, i32 %265, i32 0
  %Arg_1.2268 = load float, ptr %Arg_1.2267, align 4, !invariant.load !297
  %Arg_11.12269 = getelementptr inbounds float, ptr %arg11, i32 %263
  %Arg_11.12270 = load float, ptr %Arg_11.12269, align 4, !invariant.load !297
  %multiply.75271 = fmul float %Arg_1.2268, %Arg_11.12270
  %region_0_170_constant_23272 = load float, ptr @62, align 4
  %subtract.76273 = fsub float %region_0_170_constant_23272, %Arg_11.12270
  %multiply.77274 = fmul float %multiply.75271, %subtract.76273
  store float %multiply.77274, ptr %reduction_input_address, align 4
  %266 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_80(ptr %266, ptr %reduction_input_address, ptr %return_buffer275)
  %267 = load float, ptr %return_buffer275, align 4
  store float %267, ptr %266, align 4
  %268 = add i32 %264, 0
  %Arg_1.2276 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 36, i32 %268, i32 0
  %Arg_1.2277 = load float, ptr %Arg_1.2276, align 4, !invariant.load !297
  %Arg_12.13278 = getelementptr inbounds float, ptr %arg12, i32 %263
  %Arg_12.13279 = load float, ptr %Arg_12.13278, align 4, !invariant.load !297
  %multiply.88280 = fmul float %Arg_1.2277, %Arg_12.13279
  %subtract.89281 = fsub float %region_0_170_constant_23272, %Arg_12.13279
  %multiply.90282 = fmul float %multiply.88280, %subtract.89281
  store float %multiply.90282, ptr %reduction_input_address1, align 4
  %269 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_92(ptr %269, ptr %reduction_input_address1, ptr %return_buffer283)
  %270 = load float, ptr %return_buffer283, align 4
  store float %270, ptr %269, align 4
  %271 = add i32 %264, 0
  %Arg_1.2284 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 37, i32 %271, i32 0
  %Arg_1.2285 = load float, ptr %Arg_1.2284, align 4, !invariant.load !297
  %Arg_13.14286 = getelementptr inbounds float, ptr %arg13, i32 %263
  %Arg_13.14287 = load float, ptr %Arg_13.14286, align 4, !invariant.load !297
  %multiply.100288 = fmul float %Arg_1.2285, %Arg_13.14287
  %subtract.101289 = fsub float %region_0_170_constant_23272, %Arg_13.14287
  %multiply.102290 = fmul float %multiply.100288, %subtract.101289
  store float %multiply.102290, ptr %reduction_input_address4, align 4
  %272 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  call void @region_3_104(ptr %272, ptr %reduction_input_address4, ptr %return_buffer291)
  %273 = load float, ptr %return_buffer291, align 4
  store float %273, ptr %272, align 4
  %274 = add i32 %264, 0
  %Arg_1.2292 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 38, i32 %274, i32 0
  %Arg_1.2293 = load float, ptr %Arg_1.2292, align 4, !invariant.load !297
  %Arg_14.15294 = getelementptr inbounds float, ptr %arg14, i32 %263
  %Arg_14.15295 = load float, ptr %Arg_14.15294, align 4, !invariant.load !297
  %multiply.112296 = fmul float %Arg_1.2293, %Arg_14.15295
  %subtract.113297 = fsub float %region_0_170_constant_23272, %Arg_14.15295
  %multiply.114298 = fmul float %multiply.112296, %subtract.113297
  store float %multiply.114298, ptr %reduction_input_address7, align 4
  %275 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  call void @region_4_116(ptr %275, ptr %reduction_input_address7, ptr %return_buffer299)
  %276 = load float, ptr %return_buffer299, align 4
  store float %276, ptr %275, align 4
  %277 = add i32 %264, 0
  %Arg_1.2300 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 39, i32 %277, i32 0
  %Arg_1.2301 = load float, ptr %Arg_1.2300, align 4, !invariant.load !297
  %Arg_15.16302 = getelementptr inbounds float, ptr %arg15, i32 %263
  %Arg_15.16303 = load float, ptr %Arg_15.16302, align 4, !invariant.load !297
  %multiply.124304 = fmul float %Arg_1.2301, %Arg_15.16303
  %subtract.125305 = fsub float %region_0_170_constant_23272, %Arg_15.16303
  %multiply.126306 = fmul float %multiply.124304, %subtract.125305
  store float %multiply.126306, ptr %reduction_input_address10, align 4
  %278 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  call void @region_5_128(ptr %278, ptr %reduction_input_address10, ptr %return_buffer307)
  %279 = load float, ptr %return_buffer307, align 4
  store float %279, ptr %278, align 4
  %280 = add i32 %264, 0
  %Arg_1.2308 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 40, i32 %280, i32 0
  %Arg_1.2309 = load float, ptr %Arg_1.2308, align 4, !invariant.load !297
  %Arg_16.17310 = getelementptr inbounds float, ptr %arg16, i32 %263
  %Arg_16.17311 = load float, ptr %Arg_16.17310, align 4, !invariant.load !297
  %multiply.136312 = fmul float %Arg_1.2309, %Arg_16.17311
  %subtract.137313 = fsub float %region_0_170_constant_23272, %Arg_16.17311
  %multiply.138314 = fmul float %multiply.136312, %subtract.137313
  store float %multiply.138314, ptr %reduction_input_address13, align 4
  %281 = getelementptr inbounds float, ptr %partial_reduction_result14, i32 0
  call void @region_6_140(ptr %281, ptr %reduction_input_address13, ptr %return_buffer315)
  %282 = load float, ptr %return_buffer315, align 4
  store float %282, ptr %281, align 4
  %283 = add i32 %264, 0
  %Arg_1.2316 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 41, i32 %283, i32 0
  %Arg_1.2317 = load float, ptr %Arg_1.2316, align 4, !invariant.load !297
  %Arg_17.18318 = getelementptr inbounds float, ptr %arg17, i32 %263
  %Arg_17.18319 = load float, ptr %Arg_17.18318, align 4, !invariant.load !297
  %multiply.148320 = fmul float %Arg_1.2317, %Arg_17.18319
  %subtract.149321 = fsub float %region_0_170_constant_23272, %Arg_17.18319
  %multiply.150322 = fmul float %multiply.148320, %subtract.149321
  store float %multiply.150322, ptr %reduction_input_address16, align 4
  %284 = getelementptr inbounds float, ptr %partial_reduction_result17, i32 0
  call void @region_7_152(ptr %284, ptr %reduction_input_address16, ptr %return_buffer323)
  %285 = load float, ptr %return_buffer323, align 4
  store float %285, ptr %284, align 4
  %286 = add i32 %264, 0
  %Arg_1.2324 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 42, i32 %286, i32 0
  %Arg_1.2325 = load float, ptr %Arg_1.2324, align 4, !invariant.load !297
  %Arg_18.19326 = getelementptr inbounds float, ptr %arg18, i32 %263
  %Arg_18.19327 = load float, ptr %Arg_18.19326, align 4, !invariant.load !297
  %multiply.160328 = fmul float %Arg_1.2325, %Arg_18.19327
  %subtract.161329 = fsub float %region_0_170_constant_23272, %Arg_18.19327
  %multiply.162330 = fmul float %multiply.160328, %subtract.161329
  store float %multiply.162330, ptr %reduction_input_address19, align 4
  %287 = getelementptr inbounds float, ptr %partial_reduction_result20, i32 0
  call void @region_8_164(ptr %287, ptr %reduction_input_address19, ptr %return_buffer331)
  %288 = load float, ptr %return_buffer331, align 4
  store float %288, ptr %287, align 4
  %289 = add i32 %264, 0
  %Arg_1.2332 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 10, i32 %289, i32 0
  %Arg_1.2333 = load float, ptr %Arg_1.2332, align 4, !invariant.load !297
  %Arg_0.1334 = getelementptr inbounds float, ptr %arg0, i32 %263
  %Arg_0.1335 = load float, ptr %Arg_0.1334, align 4, !invariant.load !297
  %multiply.22336 = fmul float %Arg_1.2333, %Arg_0.1335
  %Arg_0.1337 = getelementptr inbounds float, ptr %arg0, i32 %263
  %Arg_0.1338 = load float, ptr %Arg_0.1337, align 4, !invariant.load !297
  %subtract.25339 = fsub float %region_0_170_constant_23272, %Arg_0.1338
  %multiply.26340 = fmul float %multiply.22336, %subtract.25339
  %290 = add i32 %264, 0
  %Arg_1.2341 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 11, i32 %290, i32 0
  %Arg_1.2342 = load float, ptr %Arg_1.2341, align 4, !invariant.load !297
  %Arg_2.3343 = getelementptr inbounds float, ptr %arg2, i32 %263
  %Arg_2.3344 = load float, ptr %Arg_2.3343, align 4, !invariant.load !297
  %multiply.29345 = fmul float %Arg_1.2342, %Arg_2.3344
  %Arg_2.3346 = getelementptr inbounds float, ptr %arg2, i32 %263
  %Arg_2.3347 = load float, ptr %Arg_2.3346, align 4, !invariant.load !297
  %subtract.30348 = fsub float %region_0_170_constant_23272, %Arg_2.3347
  %multiply.31349 = fmul float %multiply.29345, %subtract.30348
  %291 = add i32 %264, 0
  %Arg_1.2350 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 19, i32 %291, i32 0
  %Arg_1.2351 = load float, ptr %Arg_1.2350, align 4, !invariant.load !297
  %Arg_3.4352 = getelementptr inbounds float, ptr %arg3, i32 %263
  %Arg_3.4353 = load float, ptr %Arg_3.4352, align 4
  %multiply.34354 = fmul float %Arg_1.2351, %Arg_3.4353
  %Arg_3.4355 = getelementptr inbounds float, ptr %arg3, i32 %263
  %Arg_3.4356 = load float, ptr %Arg_3.4355, align 4
  %subtract.35357 = fsub float %region_0_170_constant_23272, %Arg_3.4356
  %multiply.36358 = fmul float %multiply.34354, %subtract.35357
  %292 = add i32 %264, 0
  %Arg_1.2359 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 15, i32 %292, i32 0
  %Arg_1.2360 = load float, ptr %Arg_1.2359, align 4, !invariant.load !297
  %Arg_4.5361 = getelementptr inbounds float, ptr %arg4, i32 %263
  %Arg_4.5362 = load float, ptr %Arg_4.5361, align 4, !invariant.load !297
  %multiply.39363 = fmul float %Arg_1.2360, %Arg_4.5362
  %Arg_4.5364 = getelementptr inbounds float, ptr %arg4, i32 %263
  %Arg_4.5365 = load float, ptr %Arg_4.5364, align 4, !invariant.load !297
  %subtract.40366 = fsub float %region_0_170_constant_23272, %Arg_4.5365
  %multiply.41367 = fmul float %multiply.39363, %subtract.40366
  %293 = add i32 %264, 0
  %Arg_1.2368 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 16, i32 %293, i32 0
  %Arg_1.2369 = load float, ptr %Arg_1.2368, align 4, !invariant.load !297
  %Arg_5.6370 = getelementptr inbounds float, ptr %arg5, i32 %263
  %Arg_5.6371 = load float, ptr %Arg_5.6370, align 4, !invariant.load !297
  %multiply.44372 = fmul float %Arg_1.2369, %Arg_5.6371
  %Arg_5.6373 = getelementptr inbounds float, ptr %arg5, i32 %263
  %Arg_5.6374 = load float, ptr %Arg_5.6373, align 4, !invariant.load !297
  %subtract.45375 = fsub float %region_0_170_constant_23272, %Arg_5.6374
  %multiply.46376 = fmul float %multiply.44372, %subtract.45375
  %294 = add i32 %264, 0
  %Arg_1.2377 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 18, i32 %294, i32 0
  %Arg_1.2378 = load float, ptr %Arg_1.2377, align 4, !invariant.load !297
  %Arg_6.7379 = getelementptr inbounds float, ptr %arg6, i32 %263
  %Arg_6.7380 = load float, ptr %Arg_6.7379, align 4
  %multiply.49381 = fmul float %Arg_1.2378, %Arg_6.7380
  %Arg_6.7382 = getelementptr inbounds float, ptr %arg6, i32 %263
  %Arg_6.7383 = load float, ptr %Arg_6.7382, align 4
  %subtract.50384 = fsub float %region_0_170_constant_23272, %Arg_6.7383
  %multiply.51385 = fmul float %multiply.49381, %subtract.50384
  %295 = add i32 %264, 0
  %Arg_1.2386 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 20, i32 %295, i32 0
  %Arg_1.2387 = load float, ptr %Arg_1.2386, align 4, !invariant.load !297
  %Arg_7.8388 = getelementptr inbounds float, ptr %arg7, i32 %263
  %Arg_7.8389 = load float, ptr %Arg_7.8388, align 4
  %multiply.54390 = fmul float %Arg_1.2387, %Arg_7.8389
  %Arg_7.8391 = getelementptr inbounds float, ptr %arg7, i32 %263
  %Arg_7.8392 = load float, ptr %Arg_7.8391, align 4
  %subtract.55393 = fsub float %region_0_170_constant_23272, %Arg_7.8392
  %multiply.56394 = fmul float %multiply.54390, %subtract.55393
  %296 = add i32 %264, 0
  %Arg_1.2395 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 7, i32 %296, i32 0
  %Arg_1.2396 = load float, ptr %Arg_1.2395, align 4, !invariant.load !297
  %Arg_8.9397 = getelementptr inbounds float, ptr %arg8, i32 %263
  %Arg_8.9398 = load float, ptr %Arg_8.9397, align 4, !invariant.load !297
  %multiply.59399 = fmul float %Arg_1.2396, %Arg_8.9398
  %Arg_8.9400 = getelementptr inbounds float, ptr %arg8, i32 %263
  %Arg_8.9401 = load float, ptr %Arg_8.9400, align 4, !invariant.load !297
  %subtract.60402 = fsub float %region_0_170_constant_23272, %Arg_8.9401
  %multiply.61403 = fmul float %multiply.59399, %subtract.60402
  %297 = add i32 %264, 0
  %Arg_1.2404 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 34, i32 %297, i32 0
  %Arg_1.2405 = load float, ptr %Arg_1.2404, align 4, !invariant.load !297
  %Arg_9.10406 = getelementptr inbounds float, ptr %arg9, i32 %263
  %Arg_9.10407 = load float, ptr %Arg_9.10406, align 4
  %multiply.64408 = fmul float %Arg_1.2405, %Arg_9.10407
  %Arg_9.10409 = getelementptr inbounds float, ptr %arg9, i32 %263
  %Arg_9.10410 = load float, ptr %Arg_9.10409, align 4
  %subtract.65411 = fsub float %region_0_170_constant_23272, %Arg_9.10410
  %multiply.66412 = fmul float %multiply.64408, %subtract.65411
  %298 = add i32 %264, 0
  %Arg_1.2413 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 8, i32 %298, i32 0
  %Arg_1.2414 = load float, ptr %Arg_1.2413, align 4, !invariant.load !297
  %Arg_10.11415 = getelementptr inbounds float, ptr %arg10, i32 %263
  %Arg_10.11416 = load float, ptr %Arg_10.11415, align 4, !invariant.load !297
  %multiply.69417 = fmul float %Arg_1.2414, %Arg_10.11416
  %Arg_10.11418 = getelementptr inbounds float, ptr %arg10, i32 %263
  %Arg_10.11419 = load float, ptr %Arg_10.11418, align 4, !invariant.load !297
  %subtract.70420 = fsub float %region_0_170_constant_23272, %Arg_10.11419
  %multiply.71421 = fmul float %multiply.69417, %subtract.70420
  %299 = getelementptr inbounds float, ptr %arg21, i32 %263
  store float %multiply.36358, ptr %299, align 4
  %300 = getelementptr inbounds float, ptr %arg9, i32 %263
  store float %multiply.56394, ptr %300, align 4
  %301 = getelementptr inbounds float, ptr %arg7, i32 %263
  store float %multiply.61403, ptr %301, align 4
  %302 = getelementptr inbounds float, ptr %arg23, i32 %263
  store float %multiply.46376, ptr %302, align 4
  %303 = getelementptr inbounds float, ptr %arg24, i32 %263
  store float %multiply.51385, ptr %303, align 4
  %304 = getelementptr inbounds float, ptr %arg6, i32 %263
  store float %multiply.71421, ptr %304, align 4
  %305 = getelementptr inbounds float, ptr %arg3, i32 %263
  store float %multiply.66412, ptr %305, align 4
  %306 = getelementptr inbounds float, ptr %arg20, i32 %263
  store float %multiply.31349, ptr %306, align 4
  %307 = getelementptr inbounds float, ptr %arg19, i32 %263
  store float %multiply.26340, ptr %307, align 4
  %308 = getelementptr inbounds float, ptr %arg22, i32 %263
  store float %multiply.41367, ptr %308, align 4
  br label %x_in_tile-after

x_in_tile-true423:                                ; preds = %x_in_tile-after
  %309 = mul nuw nsw i32 %256, 1
  %310 = add nuw nsw i32 0, %309
  %311 = mul nuw nsw i32 %255, 8192
  %312 = add nuw nsw i32 %310, %311
  %313 = mul nuw nsw i32 %tile_origin.0, 8192
  %314 = add nuw nsw i32 %312, %313
  %315 = udiv i32 %314, 1
  %316 = add i32 %315, 0
  %Arg_1.2425 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 35, i32 %316, i32 0
  %Arg_1.2426 = load float, ptr %Arg_1.2425, align 4, !invariant.load !297
  %Arg_11.12427 = getelementptr inbounds float, ptr %arg11, i32 %314
  %Arg_11.12428 = load float, ptr %Arg_11.12427, align 4, !invariant.load !297
  %multiply.75429 = fmul float %Arg_1.2426, %Arg_11.12428
  %region_0_170_constant_23430 = load float, ptr @62, align 4
  %subtract.76431 = fsub float %region_0_170_constant_23430, %Arg_11.12428
  %multiply.77432 = fmul float %multiply.75429, %subtract.76431
  store float %multiply.77432, ptr %reduction_input_address, align 4
  %317 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_80(ptr %317, ptr %reduction_input_address, ptr %return_buffer433)
  %318 = load float, ptr %return_buffer433, align 4
  store float %318, ptr %317, align 4
  %319 = add i32 %315, 0
  %Arg_1.2434 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 36, i32 %319, i32 0
  %Arg_1.2435 = load float, ptr %Arg_1.2434, align 4, !invariant.load !297
  %Arg_12.13436 = getelementptr inbounds float, ptr %arg12, i32 %314
  %Arg_12.13437 = load float, ptr %Arg_12.13436, align 4, !invariant.load !297
  %multiply.88438 = fmul float %Arg_1.2435, %Arg_12.13437
  %subtract.89439 = fsub float %region_0_170_constant_23430, %Arg_12.13437
  %multiply.90440 = fmul float %multiply.88438, %subtract.89439
  store float %multiply.90440, ptr %reduction_input_address1, align 4
  %320 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_92(ptr %320, ptr %reduction_input_address1, ptr %return_buffer441)
  %321 = load float, ptr %return_buffer441, align 4
  store float %321, ptr %320, align 4
  %322 = add i32 %315, 0
  %Arg_1.2442 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 37, i32 %322, i32 0
  %Arg_1.2443 = load float, ptr %Arg_1.2442, align 4, !invariant.load !297
  %Arg_13.14444 = getelementptr inbounds float, ptr %arg13, i32 %314
  %Arg_13.14445 = load float, ptr %Arg_13.14444, align 4, !invariant.load !297
  %multiply.100446 = fmul float %Arg_1.2443, %Arg_13.14445
  %subtract.101447 = fsub float %region_0_170_constant_23430, %Arg_13.14445
  %multiply.102448 = fmul float %multiply.100446, %subtract.101447
  store float %multiply.102448, ptr %reduction_input_address4, align 4
  %323 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  call void @region_3_104(ptr %323, ptr %reduction_input_address4, ptr %return_buffer449)
  %324 = load float, ptr %return_buffer449, align 4
  store float %324, ptr %323, align 4
  %325 = add i32 %315, 0
  %Arg_1.2450 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 38, i32 %325, i32 0
  %Arg_1.2451 = load float, ptr %Arg_1.2450, align 4, !invariant.load !297
  %Arg_14.15452 = getelementptr inbounds float, ptr %arg14, i32 %314
  %Arg_14.15453 = load float, ptr %Arg_14.15452, align 4, !invariant.load !297
  %multiply.112454 = fmul float %Arg_1.2451, %Arg_14.15453
  %subtract.113455 = fsub float %region_0_170_constant_23430, %Arg_14.15453
  %multiply.114456 = fmul float %multiply.112454, %subtract.113455
  store float %multiply.114456, ptr %reduction_input_address7, align 4
  %326 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  call void @region_4_116(ptr %326, ptr %reduction_input_address7, ptr %return_buffer457)
  %327 = load float, ptr %return_buffer457, align 4
  store float %327, ptr %326, align 4
  %328 = add i32 %315, 0
  %Arg_1.2458 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 39, i32 %328, i32 0
  %Arg_1.2459 = load float, ptr %Arg_1.2458, align 4, !invariant.load !297
  %Arg_15.16460 = getelementptr inbounds float, ptr %arg15, i32 %314
  %Arg_15.16461 = load float, ptr %Arg_15.16460, align 4, !invariant.load !297
  %multiply.124462 = fmul float %Arg_1.2459, %Arg_15.16461
  %subtract.125463 = fsub float %region_0_170_constant_23430, %Arg_15.16461
  %multiply.126464 = fmul float %multiply.124462, %subtract.125463
  store float %multiply.126464, ptr %reduction_input_address10, align 4
  %329 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  call void @region_5_128(ptr %329, ptr %reduction_input_address10, ptr %return_buffer465)
  %330 = load float, ptr %return_buffer465, align 4
  store float %330, ptr %329, align 4
  %331 = add i32 %315, 0
  %Arg_1.2466 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 40, i32 %331, i32 0
  %Arg_1.2467 = load float, ptr %Arg_1.2466, align 4, !invariant.load !297
  %Arg_16.17468 = getelementptr inbounds float, ptr %arg16, i32 %314
  %Arg_16.17469 = load float, ptr %Arg_16.17468, align 4, !invariant.load !297
  %multiply.136470 = fmul float %Arg_1.2467, %Arg_16.17469
  %subtract.137471 = fsub float %region_0_170_constant_23430, %Arg_16.17469
  %multiply.138472 = fmul float %multiply.136470, %subtract.137471
  store float %multiply.138472, ptr %reduction_input_address13, align 4
  %332 = getelementptr inbounds float, ptr %partial_reduction_result14, i32 0
  call void @region_6_140(ptr %332, ptr %reduction_input_address13, ptr %return_buffer473)
  %333 = load float, ptr %return_buffer473, align 4
  store float %333, ptr %332, align 4
  %334 = add i32 %315, 0
  %Arg_1.2474 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 41, i32 %334, i32 0
  %Arg_1.2475 = load float, ptr %Arg_1.2474, align 4, !invariant.load !297
  %Arg_17.18476 = getelementptr inbounds float, ptr %arg17, i32 %314
  %Arg_17.18477 = load float, ptr %Arg_17.18476, align 4, !invariant.load !297
  %multiply.148478 = fmul float %Arg_1.2475, %Arg_17.18477
  %subtract.149479 = fsub float %region_0_170_constant_23430, %Arg_17.18477
  %multiply.150480 = fmul float %multiply.148478, %subtract.149479
  store float %multiply.150480, ptr %reduction_input_address16, align 4
  %335 = getelementptr inbounds float, ptr %partial_reduction_result17, i32 0
  call void @region_7_152(ptr %335, ptr %reduction_input_address16, ptr %return_buffer481)
  %336 = load float, ptr %return_buffer481, align 4
  store float %336, ptr %335, align 4
  %337 = add i32 %315, 0
  %Arg_1.2482 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 42, i32 %337, i32 0
  %Arg_1.2483 = load float, ptr %Arg_1.2482, align 4, !invariant.load !297
  %Arg_18.19484 = getelementptr inbounds float, ptr %arg18, i32 %314
  %Arg_18.19485 = load float, ptr %Arg_18.19484, align 4, !invariant.load !297
  %multiply.160486 = fmul float %Arg_1.2483, %Arg_18.19485
  %subtract.161487 = fsub float %region_0_170_constant_23430, %Arg_18.19485
  %multiply.162488 = fmul float %multiply.160486, %subtract.161487
  store float %multiply.162488, ptr %reduction_input_address19, align 4
  %338 = getelementptr inbounds float, ptr %partial_reduction_result20, i32 0
  call void @region_8_164(ptr %338, ptr %reduction_input_address19, ptr %return_buffer489)
  %339 = load float, ptr %return_buffer489, align 4
  store float %339, ptr %338, align 4
  %340 = add i32 %315, 0
  %Arg_1.2490 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 10, i32 %340, i32 0
  %Arg_1.2491 = load float, ptr %Arg_1.2490, align 4, !invariant.load !297
  %Arg_0.1492 = getelementptr inbounds float, ptr %arg0, i32 %314
  %Arg_0.1493 = load float, ptr %Arg_0.1492, align 4, !invariant.load !297
  %multiply.22494 = fmul float %Arg_1.2491, %Arg_0.1493
  %Arg_0.1495 = getelementptr inbounds float, ptr %arg0, i32 %314
  %Arg_0.1496 = load float, ptr %Arg_0.1495, align 4, !invariant.load !297
  %subtract.25497 = fsub float %region_0_170_constant_23430, %Arg_0.1496
  %multiply.26498 = fmul float %multiply.22494, %subtract.25497
  %341 = add i32 %315, 0
  %Arg_1.2499 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 11, i32 %341, i32 0
  %Arg_1.2500 = load float, ptr %Arg_1.2499, align 4, !invariant.load !297
  %Arg_2.3501 = getelementptr inbounds float, ptr %arg2, i32 %314
  %Arg_2.3502 = load float, ptr %Arg_2.3501, align 4, !invariant.load !297
  %multiply.29503 = fmul float %Arg_1.2500, %Arg_2.3502
  %Arg_2.3504 = getelementptr inbounds float, ptr %arg2, i32 %314
  %Arg_2.3505 = load float, ptr %Arg_2.3504, align 4, !invariant.load !297
  %subtract.30506 = fsub float %region_0_170_constant_23430, %Arg_2.3505
  %multiply.31507 = fmul float %multiply.29503, %subtract.30506
  %342 = add i32 %315, 0
  %Arg_1.2508 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 19, i32 %342, i32 0
  %Arg_1.2509 = load float, ptr %Arg_1.2508, align 4, !invariant.load !297
  %Arg_3.4510 = getelementptr inbounds float, ptr %arg3, i32 %314
  %Arg_3.4511 = load float, ptr %Arg_3.4510, align 4
  %multiply.34512 = fmul float %Arg_1.2509, %Arg_3.4511
  %Arg_3.4513 = getelementptr inbounds float, ptr %arg3, i32 %314
  %Arg_3.4514 = load float, ptr %Arg_3.4513, align 4
  %subtract.35515 = fsub float %region_0_170_constant_23430, %Arg_3.4514
  %multiply.36516 = fmul float %multiply.34512, %subtract.35515
  %343 = add i32 %315, 0
  %Arg_1.2517 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 15, i32 %343, i32 0
  %Arg_1.2518 = load float, ptr %Arg_1.2517, align 4, !invariant.load !297
  %Arg_4.5519 = getelementptr inbounds float, ptr %arg4, i32 %314
  %Arg_4.5520 = load float, ptr %Arg_4.5519, align 4, !invariant.load !297
  %multiply.39521 = fmul float %Arg_1.2518, %Arg_4.5520
  %Arg_4.5522 = getelementptr inbounds float, ptr %arg4, i32 %314
  %Arg_4.5523 = load float, ptr %Arg_4.5522, align 4, !invariant.load !297
  %subtract.40524 = fsub float %region_0_170_constant_23430, %Arg_4.5523
  %multiply.41525 = fmul float %multiply.39521, %subtract.40524
  %344 = add i32 %315, 0
  %Arg_1.2526 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 16, i32 %344, i32 0
  %Arg_1.2527 = load float, ptr %Arg_1.2526, align 4, !invariant.load !297
  %Arg_5.6528 = getelementptr inbounds float, ptr %arg5, i32 %314
  %Arg_5.6529 = load float, ptr %Arg_5.6528, align 4, !invariant.load !297
  %multiply.44530 = fmul float %Arg_1.2527, %Arg_5.6529
  %Arg_5.6531 = getelementptr inbounds float, ptr %arg5, i32 %314
  %Arg_5.6532 = load float, ptr %Arg_5.6531, align 4, !invariant.load !297
  %subtract.45533 = fsub float %region_0_170_constant_23430, %Arg_5.6532
  %multiply.46534 = fmul float %multiply.44530, %subtract.45533
  %345 = add i32 %315, 0
  %Arg_1.2535 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 18, i32 %345, i32 0
  %Arg_1.2536 = load float, ptr %Arg_1.2535, align 4, !invariant.load !297
  %Arg_6.7537 = getelementptr inbounds float, ptr %arg6, i32 %314
  %Arg_6.7538 = load float, ptr %Arg_6.7537, align 4
  %multiply.49539 = fmul float %Arg_1.2536, %Arg_6.7538
  %Arg_6.7540 = getelementptr inbounds float, ptr %arg6, i32 %314
  %Arg_6.7541 = load float, ptr %Arg_6.7540, align 4
  %subtract.50542 = fsub float %region_0_170_constant_23430, %Arg_6.7541
  %multiply.51543 = fmul float %multiply.49539, %subtract.50542
  %346 = add i32 %315, 0
  %Arg_1.2544 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 20, i32 %346, i32 0
  %Arg_1.2545 = load float, ptr %Arg_1.2544, align 4, !invariant.load !297
  %Arg_7.8546 = getelementptr inbounds float, ptr %arg7, i32 %314
  %Arg_7.8547 = load float, ptr %Arg_7.8546, align 4
  %multiply.54548 = fmul float %Arg_1.2545, %Arg_7.8547
  %Arg_7.8549 = getelementptr inbounds float, ptr %arg7, i32 %314
  %Arg_7.8550 = load float, ptr %Arg_7.8549, align 4
  %subtract.55551 = fsub float %region_0_170_constant_23430, %Arg_7.8550
  %multiply.56552 = fmul float %multiply.54548, %subtract.55551
  %347 = add i32 %315, 0
  %Arg_1.2553 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 7, i32 %347, i32 0
  %Arg_1.2554 = load float, ptr %Arg_1.2553, align 4, !invariant.load !297
  %Arg_8.9555 = getelementptr inbounds float, ptr %arg8, i32 %314
  %Arg_8.9556 = load float, ptr %Arg_8.9555, align 4, !invariant.load !297
  %multiply.59557 = fmul float %Arg_1.2554, %Arg_8.9556
  %Arg_8.9558 = getelementptr inbounds float, ptr %arg8, i32 %314
  %Arg_8.9559 = load float, ptr %Arg_8.9558, align 4, !invariant.load !297
  %subtract.60560 = fsub float %region_0_170_constant_23430, %Arg_8.9559
  %multiply.61561 = fmul float %multiply.59557, %subtract.60560
  %348 = add i32 %315, 0
  %Arg_1.2562 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 34, i32 %348, i32 0
  %Arg_1.2563 = load float, ptr %Arg_1.2562, align 4, !invariant.load !297
  %Arg_9.10564 = getelementptr inbounds float, ptr %arg9, i32 %314
  %Arg_9.10565 = load float, ptr %Arg_9.10564, align 4
  %multiply.64566 = fmul float %Arg_1.2563, %Arg_9.10565
  %Arg_9.10567 = getelementptr inbounds float, ptr %arg9, i32 %314
  %Arg_9.10568 = load float, ptr %Arg_9.10567, align 4
  %subtract.65569 = fsub float %region_0_170_constant_23430, %Arg_9.10568
  %multiply.66570 = fmul float %multiply.64566, %subtract.65569
  %349 = add i32 %315, 0
  %Arg_1.2571 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 8, i32 %349, i32 0
  %Arg_1.2572 = load float, ptr %Arg_1.2571, align 4, !invariant.load !297
  %Arg_10.11573 = getelementptr inbounds float, ptr %arg10, i32 %314
  %Arg_10.11574 = load float, ptr %Arg_10.11573, align 4, !invariant.load !297
  %multiply.69575 = fmul float %Arg_1.2572, %Arg_10.11574
  %Arg_10.11576 = getelementptr inbounds float, ptr %arg10, i32 %314
  %Arg_10.11577 = load float, ptr %Arg_10.11576, align 4, !invariant.load !297
  %subtract.70578 = fsub float %region_0_170_constant_23430, %Arg_10.11577
  %multiply.71579 = fmul float %multiply.69575, %subtract.70578
  %350 = getelementptr inbounds float, ptr %arg9, i32 %314
  store float %multiply.56552, ptr %350, align 4
  %351 = getelementptr inbounds float, ptr %arg21, i32 %314
  store float %multiply.36516, ptr %351, align 4
  %352 = getelementptr inbounds float, ptr %arg7, i32 %314
  store float %multiply.61561, ptr %352, align 4
  %353 = getelementptr inbounds float, ptr %arg23, i32 %314
  store float %multiply.46534, ptr %353, align 4
  %354 = getelementptr inbounds float, ptr %arg24, i32 %314
  store float %multiply.51543, ptr %354, align 4
  %355 = getelementptr inbounds float, ptr %arg6, i32 %314
  store float %multiply.71579, ptr %355, align 4
  %356 = getelementptr inbounds float, ptr %arg3, i32 %314
  store float %multiply.66570, ptr %356, align 4
  %357 = getelementptr inbounds float, ptr %arg22, i32 %314
  store float %multiply.41525, ptr %357, align 4
  %358 = getelementptr inbounds float, ptr %arg19, i32 %314
  store float %multiply.26498, ptr %358, align 4
  %359 = getelementptr inbounds float, ptr %arg20, i32 %314
  store float %multiply.31507, ptr %359, align 4
  br label %x_in_tile-after424

intra_warp_reduce_write-true:                     ; preds = %y_in_tile.loop_exit
  %360 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache55, i32 0, i32 %13, i32 0, i32 %38
  %361 = addrspacecast ptr addrspace(3) %360 to ptr
  %362 = load float, ptr %current_output, align 4
  store float %362, ptr %361, align 4
  br label %intra_warp_reduce_write-after

inter_warp_reduce-true:                           ; preds = %intra_warp_reduce_write-after
  %363 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache55, i32 0, i32 %13, i32 0, i32 %lane_id
  %364 = addrspacecast ptr addrspace(3) %363 to ptr
  store float %region_0_170_constant_79, ptr %initial_value_addr, align 4
  %365 = icmp ult i32 %thread_id.x, 16
  %366 = select i1 %365, ptr %364, ptr %initial_value_addr
  %partial_reduction_result595 = load float, ptr %366, align 4
  %367 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result595, i32 16, i32 31)
  store float %367, ptr %result_from_other_lane594, align 4
  call void @region_1_80(ptr %366, ptr %result_from_other_lane594, ptr %return_buffer596)
  %368 = load float, ptr %return_buffer596, align 4
  store float %368, ptr %366, align 4
  %partial_reduction_result598 = load float, ptr %366, align 4
  %369 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result598, i32 8, i32 31)
  store float %369, ptr %result_from_other_lane597, align 4
  call void @region_1_80(ptr %366, ptr %result_from_other_lane597, ptr %return_buffer599)
  %370 = load float, ptr %return_buffer599, align 4
  store float %370, ptr %366, align 4
  %partial_reduction_result601 = load float, ptr %366, align 4
  %371 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result601, i32 4, i32 31)
  store float %371, ptr %result_from_other_lane600, align 4
  call void @region_1_80(ptr %366, ptr %result_from_other_lane600, ptr %return_buffer602)
  %372 = load float, ptr %return_buffer602, align 4
  store float %372, ptr %366, align 4
  %partial_reduction_result604 = load float, ptr %366, align 4
  %373 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result604, i32 2, i32 31)
  store float %373, ptr %result_from_other_lane603, align 4
  call void @region_1_80(ptr %366, ptr %result_from_other_lane603, ptr %return_buffer605)
  %374 = load float, ptr %return_buffer605, align 4
  store float %374, ptr %366, align 4
  %partial_reduction_result607 = load float, ptr %366, align 4
  %375 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result607, i32 1, i32 31)
  store float %375, ptr %result_from_other_lane606, align 4
  call void @region_1_80(ptr %366, ptr %result_from_other_lane606, ptr %return_buffer608)
  %376 = load float, ptr %return_buffer608, align 4
  store float %376, ptr %366, align 4
  %377 = icmp eq i32 %thread_id.x, 0
  br i1 %377, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %inter_warp_reduce-true
  br label %inter_warp_reduce-after

reduction_write_output-true:                      ; preds = %inter_warp_reduce-true
  %378 = mul i32 %thread_id.x, 2
  %379 = add i32 %tile_origin.1, %thread_id.y
  %380 = add i32 %tile_origin.2, %378
  %381 = add i32 %380, 0
  %output = load float, ptr %366, align 4
  store float %output, ptr %arg25, align 4
  br label %reduction_write_output-after

intra_warp_reduce_write-true625:                  ; preds = %inter_warp_reduce-after
  %382 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache56, i32 0, i32 %13, i32 0, i32 %51
  %383 = addrspacecast ptr addrspace(3) %382 to ptr
  %384 = load float, ptr %current_output609, align 4
  store float %384, ptr %383, align 4
  br label %intra_warp_reduce_write-after626

inter_warp_reduce-true627:                        ; preds = %intra_warp_reduce_write-after626
  %385 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache56, i32 0, i32 %13, i32 0, i32 %lane_id
  %386 = addrspacecast ptr addrspace(3) %385 to ptr
  store float %region_0_170_constant_793, ptr %initial_value_addr629, align 4
  %387 = icmp ult i32 %thread_id.x, 16
  %388 = select i1 %387, ptr %386, ptr %initial_value_addr629
  %partial_reduction_result631 = load float, ptr %388, align 4
  %389 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result631, i32 16, i32 31)
  store float %389, ptr %result_from_other_lane630, align 4
  call void @region_2_92(ptr %388, ptr %result_from_other_lane630, ptr %return_buffer632)
  %390 = load float, ptr %return_buffer632, align 4
  store float %390, ptr %388, align 4
  %partial_reduction_result634 = load float, ptr %388, align 4
  %391 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result634, i32 8, i32 31)
  store float %391, ptr %result_from_other_lane633, align 4
  call void @region_2_92(ptr %388, ptr %result_from_other_lane633, ptr %return_buffer635)
  %392 = load float, ptr %return_buffer635, align 4
  store float %392, ptr %388, align 4
  %partial_reduction_result637 = load float, ptr %388, align 4
  %393 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result637, i32 4, i32 31)
  store float %393, ptr %result_from_other_lane636, align 4
  call void @region_2_92(ptr %388, ptr %result_from_other_lane636, ptr %return_buffer638)
  %394 = load float, ptr %return_buffer638, align 4
  store float %394, ptr %388, align 4
  %partial_reduction_result640 = load float, ptr %388, align 4
  %395 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result640, i32 2, i32 31)
  store float %395, ptr %result_from_other_lane639, align 4
  call void @region_2_92(ptr %388, ptr %result_from_other_lane639, ptr %return_buffer641)
  %396 = load float, ptr %return_buffer641, align 4
  store float %396, ptr %388, align 4
  %partial_reduction_result643 = load float, ptr %388, align 4
  %397 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result643, i32 1, i32 31)
  store float %397, ptr %result_from_other_lane642, align 4
  call void @region_2_92(ptr %388, ptr %result_from_other_lane642, ptr %return_buffer644)
  %398 = load float, ptr %return_buffer644, align 4
  store float %398, ptr %388, align 4
  %399 = icmp eq i32 %thread_id.x, 0
  br i1 %399, label %reduction_write_output-true645, label %reduction_write_output-after646

reduction_write_output-after646:                  ; preds = %reduction_write_output-true645, %inter_warp_reduce-true627
  br label %inter_warp_reduce-after628

reduction_write_output-true645:                   ; preds = %inter_warp_reduce-true627
  %400 = mul i32 %thread_id.x, 2
  %401 = add i32 %tile_origin.1, %thread_id.y
  %402 = add i32 %tile_origin.2, %400
  %403 = add i32 %402, 0
  %output647 = load float, ptr %388, align 4
  store float %output647, ptr %arg26, align 4
  br label %reduction_write_output-after646

intra_warp_reduce_write-true664:                  ; preds = %inter_warp_reduce-after628
  %404 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache57, i32 0, i32 %13, i32 0, i32 %64
  %405 = addrspacecast ptr addrspace(3) %404 to ptr
  %406 = load float, ptr %current_output648, align 4
  store float %406, ptr %405, align 4
  br label %intra_warp_reduce_write-after665

inter_warp_reduce-true666:                        ; preds = %intra_warp_reduce_write-after665
  %407 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache57, i32 0, i32 %13, i32 0, i32 %lane_id
  %408 = addrspacecast ptr addrspace(3) %407 to ptr
  store float %region_0_170_constant_796, ptr %initial_value_addr668, align 4
  %409 = icmp ult i32 %thread_id.x, 16
  %410 = select i1 %409, ptr %408, ptr %initial_value_addr668
  %partial_reduction_result670 = load float, ptr %410, align 4
  %411 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result670, i32 16, i32 31)
  store float %411, ptr %result_from_other_lane669, align 4
  call void @region_3_104(ptr %410, ptr %result_from_other_lane669, ptr %return_buffer671)
  %412 = load float, ptr %return_buffer671, align 4
  store float %412, ptr %410, align 4
  %partial_reduction_result673 = load float, ptr %410, align 4
  %413 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result673, i32 8, i32 31)
  store float %413, ptr %result_from_other_lane672, align 4
  call void @region_3_104(ptr %410, ptr %result_from_other_lane672, ptr %return_buffer674)
  %414 = load float, ptr %return_buffer674, align 4
  store float %414, ptr %410, align 4
  %partial_reduction_result676 = load float, ptr %410, align 4
  %415 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result676, i32 4, i32 31)
  store float %415, ptr %result_from_other_lane675, align 4
  call void @region_3_104(ptr %410, ptr %result_from_other_lane675, ptr %return_buffer677)
  %416 = load float, ptr %return_buffer677, align 4
  store float %416, ptr %410, align 4
  %partial_reduction_result679 = load float, ptr %410, align 4
  %417 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result679, i32 2, i32 31)
  store float %417, ptr %result_from_other_lane678, align 4
  call void @region_3_104(ptr %410, ptr %result_from_other_lane678, ptr %return_buffer680)
  %418 = load float, ptr %return_buffer680, align 4
  store float %418, ptr %410, align 4
  %partial_reduction_result682 = load float, ptr %410, align 4
  %419 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result682, i32 1, i32 31)
  store float %419, ptr %result_from_other_lane681, align 4
  call void @region_3_104(ptr %410, ptr %result_from_other_lane681, ptr %return_buffer683)
  %420 = load float, ptr %return_buffer683, align 4
  store float %420, ptr %410, align 4
  %421 = icmp eq i32 %thread_id.x, 0
  br i1 %421, label %reduction_write_output-true684, label %reduction_write_output-after685

reduction_write_output-after685:                  ; preds = %reduction_write_output-true684, %inter_warp_reduce-true666
  br label %inter_warp_reduce-after667

reduction_write_output-true684:                   ; preds = %inter_warp_reduce-true666
  %422 = mul i32 %thread_id.x, 2
  %423 = add i32 %tile_origin.1, %thread_id.y
  %424 = add i32 %tile_origin.2, %422
  %425 = add i32 %424, 0
  %output686 = load float, ptr %410, align 4
  store float %output686, ptr %arg27, align 4
  br label %reduction_write_output-after685

intra_warp_reduce_write-true703:                  ; preds = %inter_warp_reduce-after667
  %426 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache58, i32 0, i32 %13, i32 0, i32 %77
  %427 = addrspacecast ptr addrspace(3) %426 to ptr
  %428 = load float, ptr %current_output687, align 4
  store float %428, ptr %427, align 4
  br label %intra_warp_reduce_write-after704

inter_warp_reduce-true705:                        ; preds = %intra_warp_reduce_write-after704
  %429 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache58, i32 0, i32 %13, i32 0, i32 %lane_id
  %430 = addrspacecast ptr addrspace(3) %429 to ptr
  store float %region_0_170_constant_799, ptr %initial_value_addr707, align 4
  %431 = icmp ult i32 %thread_id.x, 16
  %432 = select i1 %431, ptr %430, ptr %initial_value_addr707
  %partial_reduction_result709 = load float, ptr %432, align 4
  %433 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result709, i32 16, i32 31)
  store float %433, ptr %result_from_other_lane708, align 4
  call void @region_4_116(ptr %432, ptr %result_from_other_lane708, ptr %return_buffer710)
  %434 = load float, ptr %return_buffer710, align 4
  store float %434, ptr %432, align 4
  %partial_reduction_result712 = load float, ptr %432, align 4
  %435 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result712, i32 8, i32 31)
  store float %435, ptr %result_from_other_lane711, align 4
  call void @region_4_116(ptr %432, ptr %result_from_other_lane711, ptr %return_buffer713)
  %436 = load float, ptr %return_buffer713, align 4
  store float %436, ptr %432, align 4
  %partial_reduction_result715 = load float, ptr %432, align 4
  %437 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result715, i32 4, i32 31)
  store float %437, ptr %result_from_other_lane714, align 4
  call void @region_4_116(ptr %432, ptr %result_from_other_lane714, ptr %return_buffer716)
  %438 = load float, ptr %return_buffer716, align 4
  store float %438, ptr %432, align 4
  %partial_reduction_result718 = load float, ptr %432, align 4
  %439 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result718, i32 2, i32 31)
  store float %439, ptr %result_from_other_lane717, align 4
  call void @region_4_116(ptr %432, ptr %result_from_other_lane717, ptr %return_buffer719)
  %440 = load float, ptr %return_buffer719, align 4
  store float %440, ptr %432, align 4
  %partial_reduction_result721 = load float, ptr %432, align 4
  %441 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result721, i32 1, i32 31)
  store float %441, ptr %result_from_other_lane720, align 4
  call void @region_4_116(ptr %432, ptr %result_from_other_lane720, ptr %return_buffer722)
  %442 = load float, ptr %return_buffer722, align 4
  store float %442, ptr %432, align 4
  %443 = icmp eq i32 %thread_id.x, 0
  br i1 %443, label %reduction_write_output-true723, label %reduction_write_output-after724

reduction_write_output-after724:                  ; preds = %reduction_write_output-true723, %inter_warp_reduce-true705
  br label %inter_warp_reduce-after706

reduction_write_output-true723:                   ; preds = %inter_warp_reduce-true705
  %444 = mul i32 %thread_id.x, 2
  %445 = add i32 %tile_origin.1, %thread_id.y
  %446 = add i32 %tile_origin.2, %444
  %447 = add i32 %446, 0
  %output725 = load float, ptr %432, align 4
  store float %output725, ptr %arg28, align 4
  br label %reduction_write_output-after724

intra_warp_reduce_write-true742:                  ; preds = %inter_warp_reduce-after706
  %448 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache59, i32 0, i32 %13, i32 0, i32 %90
  %449 = addrspacecast ptr addrspace(3) %448 to ptr
  %450 = load float, ptr %current_output726, align 4
  store float %450, ptr %449, align 4
  br label %intra_warp_reduce_write-after743

inter_warp_reduce-true744:                        ; preds = %intra_warp_reduce_write-after743
  %451 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache59, i32 0, i32 %13, i32 0, i32 %lane_id
  %452 = addrspacecast ptr addrspace(3) %451 to ptr
  store float %region_0_170_constant_7912, ptr %initial_value_addr746, align 4
  %453 = icmp ult i32 %thread_id.x, 16
  %454 = select i1 %453, ptr %452, ptr %initial_value_addr746
  %partial_reduction_result748 = load float, ptr %454, align 4
  %455 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result748, i32 16, i32 31)
  store float %455, ptr %result_from_other_lane747, align 4
  call void @region_5_128(ptr %454, ptr %result_from_other_lane747, ptr %return_buffer749)
  %456 = load float, ptr %return_buffer749, align 4
  store float %456, ptr %454, align 4
  %partial_reduction_result751 = load float, ptr %454, align 4
  %457 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result751, i32 8, i32 31)
  store float %457, ptr %result_from_other_lane750, align 4
  call void @region_5_128(ptr %454, ptr %result_from_other_lane750, ptr %return_buffer752)
  %458 = load float, ptr %return_buffer752, align 4
  store float %458, ptr %454, align 4
  %partial_reduction_result754 = load float, ptr %454, align 4
  %459 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result754, i32 4, i32 31)
  store float %459, ptr %result_from_other_lane753, align 4
  call void @region_5_128(ptr %454, ptr %result_from_other_lane753, ptr %return_buffer755)
  %460 = load float, ptr %return_buffer755, align 4
  store float %460, ptr %454, align 4
  %partial_reduction_result757 = load float, ptr %454, align 4
  %461 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result757, i32 2, i32 31)
  store float %461, ptr %result_from_other_lane756, align 4
  call void @region_5_128(ptr %454, ptr %result_from_other_lane756, ptr %return_buffer758)
  %462 = load float, ptr %return_buffer758, align 4
  store float %462, ptr %454, align 4
  %partial_reduction_result760 = load float, ptr %454, align 4
  %463 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result760, i32 1, i32 31)
  store float %463, ptr %result_from_other_lane759, align 4
  call void @region_5_128(ptr %454, ptr %result_from_other_lane759, ptr %return_buffer761)
  %464 = load float, ptr %return_buffer761, align 4
  store float %464, ptr %454, align 4
  %465 = icmp eq i32 %thread_id.x, 0
  br i1 %465, label %reduction_write_output-true762, label %reduction_write_output-after763

reduction_write_output-after763:                  ; preds = %reduction_write_output-true762, %inter_warp_reduce-true744
  br label %inter_warp_reduce-after745

reduction_write_output-true762:                   ; preds = %inter_warp_reduce-true744
  %466 = mul i32 %thread_id.x, 2
  %467 = add i32 %tile_origin.1, %thread_id.y
  %468 = add i32 %tile_origin.2, %466
  %469 = add i32 %468, 0
  %output764 = load float, ptr %454, align 4
  store float %output764, ptr %arg29, align 4
  br label %reduction_write_output-after763

intra_warp_reduce_write-true781:                  ; preds = %inter_warp_reduce-after745
  %470 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache60, i32 0, i32 %13, i32 0, i32 %103
  %471 = addrspacecast ptr addrspace(3) %470 to ptr
  %472 = load float, ptr %current_output765, align 4
  store float %472, ptr %471, align 4
  br label %intra_warp_reduce_write-after782

inter_warp_reduce-true783:                        ; preds = %intra_warp_reduce_write-after782
  %473 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache60, i32 0, i32 %13, i32 0, i32 %lane_id
  %474 = addrspacecast ptr addrspace(3) %473 to ptr
  store float %region_0_170_constant_7915, ptr %initial_value_addr785, align 4
  %475 = icmp ult i32 %thread_id.x, 16
  %476 = select i1 %475, ptr %474, ptr %initial_value_addr785
  %partial_reduction_result787 = load float, ptr %476, align 4
  %477 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result787, i32 16, i32 31)
  store float %477, ptr %result_from_other_lane786, align 4
  call void @region_6_140(ptr %476, ptr %result_from_other_lane786, ptr %return_buffer788)
  %478 = load float, ptr %return_buffer788, align 4
  store float %478, ptr %476, align 4
  %partial_reduction_result790 = load float, ptr %476, align 4
  %479 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result790, i32 8, i32 31)
  store float %479, ptr %result_from_other_lane789, align 4
  call void @region_6_140(ptr %476, ptr %result_from_other_lane789, ptr %return_buffer791)
  %480 = load float, ptr %return_buffer791, align 4
  store float %480, ptr %476, align 4
  %partial_reduction_result793 = load float, ptr %476, align 4
  %481 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result793, i32 4, i32 31)
  store float %481, ptr %result_from_other_lane792, align 4
  call void @region_6_140(ptr %476, ptr %result_from_other_lane792, ptr %return_buffer794)
  %482 = load float, ptr %return_buffer794, align 4
  store float %482, ptr %476, align 4
  %partial_reduction_result796 = load float, ptr %476, align 4
  %483 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result796, i32 2, i32 31)
  store float %483, ptr %result_from_other_lane795, align 4
  call void @region_6_140(ptr %476, ptr %result_from_other_lane795, ptr %return_buffer797)
  %484 = load float, ptr %return_buffer797, align 4
  store float %484, ptr %476, align 4
  %partial_reduction_result799 = load float, ptr %476, align 4
  %485 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result799, i32 1, i32 31)
  store float %485, ptr %result_from_other_lane798, align 4
  call void @region_6_140(ptr %476, ptr %result_from_other_lane798, ptr %return_buffer800)
  %486 = load float, ptr %return_buffer800, align 4
  store float %486, ptr %476, align 4
  %487 = icmp eq i32 %thread_id.x, 0
  br i1 %487, label %reduction_write_output-true801, label %reduction_write_output-after802

reduction_write_output-after802:                  ; preds = %reduction_write_output-true801, %inter_warp_reduce-true783
  br label %inter_warp_reduce-after784

reduction_write_output-true801:                   ; preds = %inter_warp_reduce-true783
  %488 = mul i32 %thread_id.x, 2
  %489 = add i32 %tile_origin.1, %thread_id.y
  %490 = add i32 %tile_origin.2, %488
  %491 = add i32 %490, 0
  %output803 = load float, ptr %476, align 4
  store float %output803, ptr %arg30, align 4
  br label %reduction_write_output-after802

intra_warp_reduce_write-true820:                  ; preds = %inter_warp_reduce-after784
  %492 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache61, i32 0, i32 %13, i32 0, i32 %116
  %493 = addrspacecast ptr addrspace(3) %492 to ptr
  %494 = load float, ptr %current_output804, align 4
  store float %494, ptr %493, align 4
  br label %intra_warp_reduce_write-after821

inter_warp_reduce-true822:                        ; preds = %intra_warp_reduce_write-after821
  %495 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache61, i32 0, i32 %13, i32 0, i32 %lane_id
  %496 = addrspacecast ptr addrspace(3) %495 to ptr
  store float %region_0_170_constant_7918, ptr %initial_value_addr824, align 4
  %497 = icmp ult i32 %thread_id.x, 16
  %498 = select i1 %497, ptr %496, ptr %initial_value_addr824
  %partial_reduction_result826 = load float, ptr %498, align 4
  %499 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result826, i32 16, i32 31)
  store float %499, ptr %result_from_other_lane825, align 4
  call void @region_7_152(ptr %498, ptr %result_from_other_lane825, ptr %return_buffer827)
  %500 = load float, ptr %return_buffer827, align 4
  store float %500, ptr %498, align 4
  %partial_reduction_result829 = load float, ptr %498, align 4
  %501 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result829, i32 8, i32 31)
  store float %501, ptr %result_from_other_lane828, align 4
  call void @region_7_152(ptr %498, ptr %result_from_other_lane828, ptr %return_buffer830)
  %502 = load float, ptr %return_buffer830, align 4
  store float %502, ptr %498, align 4
  %partial_reduction_result832 = load float, ptr %498, align 4
  %503 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result832, i32 4, i32 31)
  store float %503, ptr %result_from_other_lane831, align 4
  call void @region_7_152(ptr %498, ptr %result_from_other_lane831, ptr %return_buffer833)
  %504 = load float, ptr %return_buffer833, align 4
  store float %504, ptr %498, align 4
  %partial_reduction_result835 = load float, ptr %498, align 4
  %505 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result835, i32 2, i32 31)
  store float %505, ptr %result_from_other_lane834, align 4
  call void @region_7_152(ptr %498, ptr %result_from_other_lane834, ptr %return_buffer836)
  %506 = load float, ptr %return_buffer836, align 4
  store float %506, ptr %498, align 4
  %partial_reduction_result838 = load float, ptr %498, align 4
  %507 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result838, i32 1, i32 31)
  store float %507, ptr %result_from_other_lane837, align 4
  call void @region_7_152(ptr %498, ptr %result_from_other_lane837, ptr %return_buffer839)
  %508 = load float, ptr %return_buffer839, align 4
  store float %508, ptr %498, align 4
  %509 = icmp eq i32 %thread_id.x, 0
  br i1 %509, label %reduction_write_output-true840, label %reduction_write_output-after841

reduction_write_output-after841:                  ; preds = %reduction_write_output-true840, %inter_warp_reduce-true822
  br label %inter_warp_reduce-after823

reduction_write_output-true840:                   ; preds = %inter_warp_reduce-true822
  %510 = mul i32 %thread_id.x, 2
  %511 = add i32 %tile_origin.1, %thread_id.y
  %512 = add i32 %tile_origin.2, %510
  %513 = add i32 %512, 0
  %output842 = load float, ptr %498, align 4
  store float %output842, ptr %arg31, align 4
  br label %reduction_write_output-after841

intra_warp_reduce_write-true859:                  ; preds = %inter_warp_reduce-after823
  %514 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache62, i32 0, i32 %13, i32 0, i32 %129
  %515 = addrspacecast ptr addrspace(3) %514 to ptr
  %516 = load float, ptr %current_output843, align 4
  store float %516, ptr %515, align 4
  br label %intra_warp_reduce_write-after860

inter_warp_reduce-true861:                        ; preds = %intra_warp_reduce_write-after860
  %517 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache62, i32 0, i32 %13, i32 0, i32 %lane_id
  %518 = addrspacecast ptr addrspace(3) %517 to ptr
  store float %region_0_170_constant_7921, ptr %initial_value_addr863, align 4
  %519 = icmp ult i32 %thread_id.x, 16
  %520 = select i1 %519, ptr %518, ptr %initial_value_addr863
  %partial_reduction_result865 = load float, ptr %520, align 4
  %521 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result865, i32 16, i32 31)
  store float %521, ptr %result_from_other_lane864, align 4
  call void @region_8_164(ptr %520, ptr %result_from_other_lane864, ptr %return_buffer866)
  %522 = load float, ptr %return_buffer866, align 4
  store float %522, ptr %520, align 4
  %partial_reduction_result868 = load float, ptr %520, align 4
  %523 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result868, i32 8, i32 31)
  store float %523, ptr %result_from_other_lane867, align 4
  call void @region_8_164(ptr %520, ptr %result_from_other_lane867, ptr %return_buffer869)
  %524 = load float, ptr %return_buffer869, align 4
  store float %524, ptr %520, align 4
  %partial_reduction_result871 = load float, ptr %520, align 4
  %525 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result871, i32 4, i32 31)
  store float %525, ptr %result_from_other_lane870, align 4
  call void @region_8_164(ptr %520, ptr %result_from_other_lane870, ptr %return_buffer872)
  %526 = load float, ptr %return_buffer872, align 4
  store float %526, ptr %520, align 4
  %partial_reduction_result874 = load float, ptr %520, align 4
  %527 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result874, i32 2, i32 31)
  store float %527, ptr %result_from_other_lane873, align 4
  call void @region_8_164(ptr %520, ptr %result_from_other_lane873, ptr %return_buffer875)
  %528 = load float, ptr %return_buffer875, align 4
  store float %528, ptr %520, align 4
  %partial_reduction_result877 = load float, ptr %520, align 4
  %529 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result877, i32 1, i32 31)
  store float %529, ptr %result_from_other_lane876, align 4
  call void @region_8_164(ptr %520, ptr %result_from_other_lane876, ptr %return_buffer878)
  %530 = load float, ptr %return_buffer878, align 4
  store float %530, ptr %520, align 4
  %531 = icmp eq i32 %thread_id.x, 0
  br i1 %531, label %reduction_write_output-true879, label %reduction_write_output-after880

reduction_write_output-after880:                  ; preds = %reduction_write_output-true879, %inter_warp_reduce-true861
  br label %inter_warp_reduce-after862

reduction_write_output-true879:                   ; preds = %inter_warp_reduce-true861
  %532 = mul i32 %thread_id.x, 2
  %533 = add i32 %tile_origin.1, %thread_id.y
  %534 = add i32 %tile_origin.2, %532
  %535 = add i32 %534, 0
  %output881 = load float, ptr %520, align 4
  store float %output881, ptr %arg32, align 4
  br label %reduction_write_output-after880
}

define internal void @region_1_80(ptr dereferenceable(4) %Arg_0.81.typed, ptr dereferenceable(4) %Arg_1.82.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.83.typed = alloca float, align 4
  %Arg_0.81 = load float, ptr %Arg_0.81.typed, align 4
  %Arg_1.82 = load float, ptr %Arg_1.82.typed, align 4
  %add.83 = fadd float %Arg_0.81, %Arg_1.82
  store float %add.83, ptr %add.83.typed, align 4
  %load_ret_value = load float, ptr %add.83.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_92(ptr dereferenceable(4) %Arg_0.93.typed, ptr dereferenceable(4) %Arg_1.94.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.95.typed = alloca float, align 4
  %Arg_0.93 = load float, ptr %Arg_0.93.typed, align 4
  %Arg_1.94 = load float, ptr %Arg_1.94.typed, align 4
  %add.95 = fadd float %Arg_0.93, %Arg_1.94
  store float %add.95, ptr %add.95.typed, align 4
  %load_ret_value = load float, ptr %add.95.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_3_104(ptr dereferenceable(4) %Arg_0.105.typed, ptr dereferenceable(4) %Arg_1.106.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.107.typed = alloca float, align 4
  %Arg_0.105 = load float, ptr %Arg_0.105.typed, align 4
  %Arg_1.106 = load float, ptr %Arg_1.106.typed, align 4
  %add.107 = fadd float %Arg_0.105, %Arg_1.106
  store float %add.107, ptr %add.107.typed, align 4
  %load_ret_value = load float, ptr %add.107.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_4_116(ptr dereferenceable(4) %Arg_0.117.typed, ptr dereferenceable(4) %Arg_1.118.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.119.typed = alloca float, align 4
  %Arg_0.117 = load float, ptr %Arg_0.117.typed, align 4
  %Arg_1.118 = load float, ptr %Arg_1.118.typed, align 4
  %add.119 = fadd float %Arg_0.117, %Arg_1.118
  store float %add.119, ptr %add.119.typed, align 4
  %load_ret_value = load float, ptr %add.119.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_5_128(ptr dereferenceable(4) %Arg_0.129.typed, ptr dereferenceable(4) %Arg_1.130.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.131.typed = alloca float, align 4
  %Arg_0.129 = load float, ptr %Arg_0.129.typed, align 4
  %Arg_1.130 = load float, ptr %Arg_1.130.typed, align 4
  %add.131 = fadd float %Arg_0.129, %Arg_1.130
  store float %add.131, ptr %add.131.typed, align 4
  %load_ret_value = load float, ptr %add.131.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_6_140(ptr dereferenceable(4) %Arg_0.141.typed, ptr dereferenceable(4) %Arg_1.142.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.143.typed = alloca float, align 4
  %Arg_0.141 = load float, ptr %Arg_0.141.typed, align 4
  %Arg_1.142 = load float, ptr %Arg_1.142.typed, align 4
  %add.143 = fadd float %Arg_0.141, %Arg_1.142
  store float %add.143, ptr %add.143.typed, align 4
  %load_ret_value = load float, ptr %add.143.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_7_152(ptr dereferenceable(4) %Arg_0.153.typed, ptr dereferenceable(4) %Arg_1.154.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.155.typed = alloca float, align 4
  %Arg_0.153 = load float, ptr %Arg_0.153.typed, align 4
  %Arg_1.154 = load float, ptr %Arg_1.154.typed, align 4
  %add.155 = fadd float %Arg_0.153, %Arg_1.154
  store float %add.155, ptr %add.155.typed, align 4
  %load_ret_value = load float, ptr %add.155.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_8_164(ptr dereferenceable(4) %Arg_0.165.typed, ptr dereferenceable(4) %Arg_1.166.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.167.typed = alloca float, align 4
  %Arg_0.165 = load float, ptr %Arg_0.165.typed, align 4
  %Arg_1.166 = load float, ptr %Arg_1.166.typed, align 4
  %add.167 = fadd float %Arg_0.165, %Arg_1.166
  store float %add.167, ptr %add.167.typed, align 4
  %load_ret_value = load float, ptr %add.167.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_285(ptr noalias align 128 dereferenceable(4194304) %arg0, ptr noalias align 128 dereferenceable(32768) %arg1, ptr noalias align 128 dereferenceable(1966080) %arg2, ptr noalias align 128 dereferenceable(32768) %arg3, ptr noalias align 128 dereferenceable(32768) %arg4, ptr noalias align 128 dereferenceable(32768) %arg5, ptr noalias align 128 dereferenceable(32768) %arg6, ptr noalias align 128 dereferenceable(32768) %arg7, ptr noalias align 128 dereferenceable(32768) %arg8, ptr noalias align 128 dereferenceable(32768) %arg9, ptr noalias align 128 dereferenceable(32768) %arg10, ptr noalias align 128 dereferenceable(32768) %arg11) {
entry:
  %return_buffer143 = alloca float, align 4
  %result_from_other_lane141 = alloca float, align 4
  %return_buffer140 = alloca float, align 4
  %result_from_other_lane138 = alloca float, align 4
  %return_buffer137 = alloca float, align 4
  %result_from_other_lane135 = alloca float, align 4
  %return_buffer134 = alloca float, align 4
  %result_from_other_lane132 = alloca float, align 4
  %return_buffer131 = alloca float, align 4
  %result_from_other_lane129 = alloca float, align 4
  %return_buffer121 = alloca float, align 4
  %result_from_other_lane119 = alloca float, align 4
  %return_buffer118 = alloca float, align 4
  %result_from_other_lane116 = alloca float, align 4
  %return_buffer115 = alloca float, align 4
  %result_from_other_lane113 = alloca float, align 4
  %return_buffer112 = alloca float, align 4
  %result_from_other_lane110 = alloca float, align 4
  %return_buffer109 = alloca float, align 4
  %result_from_other_lane107 = alloca float, align 4
  %return_buffer99 = alloca float, align 4
  %result_from_other_lane97 = alloca float, align 4
  %return_buffer96 = alloca float, align 4
  %result_from_other_lane94 = alloca float, align 4
  %return_buffer93 = alloca float, align 4
  %result_from_other_lane91 = alloca float, align 4
  %return_buffer90 = alloca float, align 4
  %result_from_other_lane88 = alloca float, align 4
  %return_buffer87 = alloca float, align 4
  %result_from_other_lane85 = alloca float, align 4
  %return_buffer77 = alloca float, align 4
  %result_from_other_lane75 = alloca float, align 4
  %return_buffer74 = alloca float, align 4
  %result_from_other_lane72 = alloca float, align 4
  %return_buffer71 = alloca float, align 4
  %result_from_other_lane69 = alloca float, align 4
  %return_buffer68 = alloca float, align 4
  %result_from_other_lane66 = alloca float, align 4
  %return_buffer65 = alloca float, align 4
  %result_from_other_lane63 = alloca float, align 4
  %return_buffer59 = alloca float, align 4
  %result_from_other_lane57 = alloca float, align 4
  %return_buffer56 = alloca float, align 4
  %result_from_other_lane54 = alloca float, align 4
  %return_buffer53 = alloca float, align 4
  %result_from_other_lane51 = alloca float, align 4
  %return_buffer50 = alloca float, align 4
  %result_from_other_lane48 = alloca float, align 4
  %return_buffer47 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer45 = alloca float, align 4
  %return_buffer38 = alloca float, align 4
  %return_buffer31 = alloca float, align 4
  %return_buffer24 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result11 = alloca float, align 4
  %reduction_input_address10 = alloca float, align 4
  %partial_reduction_result8 = alloca float, align 4
  %reduction_input_address7 = alloca float, align 4
  %partial_reduction_result5 = alloca float, align 4
  %reduction_input_address4 = alloca float, align 4
  %partial_reduction_result2 = alloca float, align 4
  %reduction_input_address1 = alloca float, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after145, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_87_constant_20 = load float, ptr @64, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_87_constant_20, ptr %2, align 4
  %region_0_87_constant_203 = load float, ptr @64, align 4
  %3 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  store float %region_0_87_constant_203, ptr %3, align 4
  %region_0_87_constant_206 = load float, ptr @64, align 4
  %4 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  store float %region_0_87_constant_206, ptr %4, align 4
  %region_0_87_constant_209 = load float, ptr @64, align 4
  %5 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  store float %region_0_87_constant_209, ptr %5, align 4
  %region_0_87_constant_2012 = load float, ptr @64, align 4
  %6 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  store float %region_0_87_constant_2012, ptr %6, align 4
  %7 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %8 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !362
  %9 = urem i32 %7, 1024
  %10 = udiv i32 %7, 1024
  %11 = mul i32 %8, 1
  %12 = add i32 %11, %10
  %13 = icmp ult i32 %12, 256
  br i1 %13, label %14, label %early_return

14:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %9, 32
  %thread_id.y = udiv i32 %9, 32
  %lane_id = urem i32 %9, 32
  %15 = udiv i32 %12, 1
  %16 = urem i32 %15, 4
  %17 = udiv i32 %12, 4
  %18 = urem i32 %17, 1
  %19 = udiv i32 %12, 4
  %20 = icmp eq i32 %18, 0
  %tile_bound = select i1 %20, i32 128, i32 4096
  %21 = icmp eq i32 %16, 3
  %tile_bound13 = select i1 %21, i32 32, i32 32
  %tile_origin.0 = mul i32 %19, 1
  %tile_origin.1 = mul i32 %18, 4096
  %tile_origin.2 = mul i32 %16, 32
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %14
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %22 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %22, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %23 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %24 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %25 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %25, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc14 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc14, ptr %tile_loop.invar_address, align 4
  %26 = icmp eq i32 %tile_loop.indvar, 0
  %27 = mul i32 %tile_loop.indvar, 1
  %28 = add i32 %27, 0
  %x_loc = add i32 %28, %24
  %29 = add i32 %tile_origin.1, %y_in_tile.indvar
  %30 = add i32 %tile_origin.2, %x_loc
  %31 = icmp ult i32 %x_loc, %tile_bound13
  br i1 %31, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body
  br label %tile_loop.loop_header, !llvm.loop !428

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !429

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache63, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %32 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %33 = load float, ptr %current_output, align 4
  store float %33, ptr %32, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache63, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %34 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result46 = load float, ptr %34, align 4
  %35 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result46, i32 16, i32 31)
  store float %35, ptr %result_from_other_lane, align 4
  call void @region_1_21(ptr %34, ptr %result_from_other_lane, ptr %return_buffer47)
  %36 = load float, ptr %return_buffer47, align 4
  store float %36, ptr %34, align 4
  %partial_reduction_result49 = load float, ptr %34, align 4
  %37 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result49, i32 8, i32 31)
  store float %37, ptr %result_from_other_lane48, align 4
  call void @region_1_21(ptr %34, ptr %result_from_other_lane48, ptr %return_buffer50)
  %38 = load float, ptr %return_buffer50, align 4
  store float %38, ptr %34, align 4
  %partial_reduction_result52 = load float, ptr %34, align 4
  %39 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result52, i32 4, i32 31)
  store float %39, ptr %result_from_other_lane51, align 4
  call void @region_1_21(ptr %34, ptr %result_from_other_lane51, ptr %return_buffer53)
  %40 = load float, ptr %return_buffer53, align 4
  store float %40, ptr %34, align 4
  %partial_reduction_result55 = load float, ptr %34, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result55, i32 2, i32 31)
  store float %41, ptr %result_from_other_lane54, align 4
  call void @region_1_21(ptr %34, ptr %result_from_other_lane54, ptr %return_buffer56)
  %42 = load float, ptr %return_buffer56, align 4
  store float %42, ptr %34, align 4
  %partial_reduction_result58 = load float, ptr %34, align 4
  %43 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result58, i32 1, i32 31)
  store float %43, ptr %result_from_other_lane57, align 4
  call void @region_1_21(ptr %34, ptr %result_from_other_lane57, ptr %return_buffer59)
  %44 = load float, ptr %return_buffer59, align 4
  store float %44, ptr %34, align 4
  %45 = icmp ult i32 %thread_id.x, %tile_bound
  %46 = mul i32 %thread_id.y, 1
  %47 = icmp ult i32 %46, %tile_bound13
  %48 = and i1 %47, %45
  %49 = icmp eq i32 %lane_id, 0
  %50 = and i1 %48, %49
  br i1 %50, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %shmem_output_address60 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache64, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %51 = addrspacecast ptr addrspace(3) %shmem_output_address60 to ptr
  %current_output61 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  %52 = load float, ptr %current_output61, align 4
  store float %52, ptr %51, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr62 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache64, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %53 = addrspacecast ptr addrspace(3) %shmem_transposed_addr62 to ptr
  %partial_reduction_result64 = load float, ptr %53, align 4
  %54 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result64, i32 16, i32 31)
  store float %54, ptr %result_from_other_lane63, align 4
  call void @region_2_36(ptr %53, ptr %result_from_other_lane63, ptr %return_buffer65)
  %55 = load float, ptr %return_buffer65, align 4
  store float %55, ptr %53, align 4
  %partial_reduction_result67 = load float, ptr %53, align 4
  %56 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result67, i32 8, i32 31)
  store float %56, ptr %result_from_other_lane66, align 4
  call void @region_2_36(ptr %53, ptr %result_from_other_lane66, ptr %return_buffer68)
  %57 = load float, ptr %return_buffer68, align 4
  store float %57, ptr %53, align 4
  %partial_reduction_result70 = load float, ptr %53, align 4
  %58 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result70, i32 4, i32 31)
  store float %58, ptr %result_from_other_lane69, align 4
  call void @region_2_36(ptr %53, ptr %result_from_other_lane69, ptr %return_buffer71)
  %59 = load float, ptr %return_buffer71, align 4
  store float %59, ptr %53, align 4
  %partial_reduction_result73 = load float, ptr %53, align 4
  %60 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result73, i32 2, i32 31)
  store float %60, ptr %result_from_other_lane72, align 4
  call void @region_2_36(ptr %53, ptr %result_from_other_lane72, ptr %return_buffer74)
  %61 = load float, ptr %return_buffer74, align 4
  store float %61, ptr %53, align 4
  %partial_reduction_result76 = load float, ptr %53, align 4
  %62 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result76, i32 1, i32 31)
  store float %62, ptr %result_from_other_lane75, align 4
  call void @region_2_36(ptr %53, ptr %result_from_other_lane75, ptr %return_buffer77)
  %63 = load float, ptr %return_buffer77, align 4
  store float %63, ptr %53, align 4
  %64 = icmp ult i32 %thread_id.x, %tile_bound
  %65 = mul i32 %thread_id.y, 1
  %66 = icmp ult i32 %65, %tile_bound13
  %67 = and i1 %66, %64
  %68 = icmp eq i32 %lane_id, 0
  %69 = and i1 %67, %68
  br i1 %69, label %reduction_write_output-true78, label %reduction_write_output-after79

reduction_write_output-after79:                   ; preds = %reduction_write_output-true78, %reduction_write_output-after
  %shmem_output_address82 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache65, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %70 = addrspacecast ptr addrspace(3) %shmem_output_address82 to ptr
  %current_output83 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  %71 = load float, ptr %current_output83, align 4
  store float %71, ptr %70, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr84 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache65, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %72 = addrspacecast ptr addrspace(3) %shmem_transposed_addr84 to ptr
  %partial_reduction_result86 = load float, ptr %72, align 4
  %73 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result86, i32 16, i32 31)
  store float %73, ptr %result_from_other_lane85, align 4
  call void @region_3_51(ptr %72, ptr %result_from_other_lane85, ptr %return_buffer87)
  %74 = load float, ptr %return_buffer87, align 4
  store float %74, ptr %72, align 4
  %partial_reduction_result89 = load float, ptr %72, align 4
  %75 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result89, i32 8, i32 31)
  store float %75, ptr %result_from_other_lane88, align 4
  call void @region_3_51(ptr %72, ptr %result_from_other_lane88, ptr %return_buffer90)
  %76 = load float, ptr %return_buffer90, align 4
  store float %76, ptr %72, align 4
  %partial_reduction_result92 = load float, ptr %72, align 4
  %77 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result92, i32 4, i32 31)
  store float %77, ptr %result_from_other_lane91, align 4
  call void @region_3_51(ptr %72, ptr %result_from_other_lane91, ptr %return_buffer93)
  %78 = load float, ptr %return_buffer93, align 4
  store float %78, ptr %72, align 4
  %partial_reduction_result95 = load float, ptr %72, align 4
  %79 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result95, i32 2, i32 31)
  store float %79, ptr %result_from_other_lane94, align 4
  call void @region_3_51(ptr %72, ptr %result_from_other_lane94, ptr %return_buffer96)
  %80 = load float, ptr %return_buffer96, align 4
  store float %80, ptr %72, align 4
  %partial_reduction_result98 = load float, ptr %72, align 4
  %81 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result98, i32 1, i32 31)
  store float %81, ptr %result_from_other_lane97, align 4
  call void @region_3_51(ptr %72, ptr %result_from_other_lane97, ptr %return_buffer99)
  %82 = load float, ptr %return_buffer99, align 4
  store float %82, ptr %72, align 4
  %83 = icmp ult i32 %thread_id.x, %tile_bound
  %84 = mul i32 %thread_id.y, 1
  %85 = icmp ult i32 %84, %tile_bound13
  %86 = and i1 %85, %83
  %87 = icmp eq i32 %lane_id, 0
  %88 = and i1 %86, %87
  br i1 %88, label %reduction_write_output-true100, label %reduction_write_output-after101

reduction_write_output-after101:                  ; preds = %reduction_write_output-true100, %reduction_write_output-after79
  %shmem_output_address104 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache66, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %89 = addrspacecast ptr addrspace(3) %shmem_output_address104 to ptr
  %current_output105 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  %90 = load float, ptr %current_output105, align 4
  store float %90, ptr %89, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr106 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache66, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %91 = addrspacecast ptr addrspace(3) %shmem_transposed_addr106 to ptr
  %partial_reduction_result108 = load float, ptr %91, align 4
  %92 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result108, i32 16, i32 31)
  store float %92, ptr %result_from_other_lane107, align 4
  call void @region_4_66(ptr %91, ptr %result_from_other_lane107, ptr %return_buffer109)
  %93 = load float, ptr %return_buffer109, align 4
  store float %93, ptr %91, align 4
  %partial_reduction_result111 = load float, ptr %91, align 4
  %94 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result111, i32 8, i32 31)
  store float %94, ptr %result_from_other_lane110, align 4
  call void @region_4_66(ptr %91, ptr %result_from_other_lane110, ptr %return_buffer112)
  %95 = load float, ptr %return_buffer112, align 4
  store float %95, ptr %91, align 4
  %partial_reduction_result114 = load float, ptr %91, align 4
  %96 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result114, i32 4, i32 31)
  store float %96, ptr %result_from_other_lane113, align 4
  call void @region_4_66(ptr %91, ptr %result_from_other_lane113, ptr %return_buffer115)
  %97 = load float, ptr %return_buffer115, align 4
  store float %97, ptr %91, align 4
  %partial_reduction_result117 = load float, ptr %91, align 4
  %98 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result117, i32 2, i32 31)
  store float %98, ptr %result_from_other_lane116, align 4
  call void @region_4_66(ptr %91, ptr %result_from_other_lane116, ptr %return_buffer118)
  %99 = load float, ptr %return_buffer118, align 4
  store float %99, ptr %91, align 4
  %partial_reduction_result120 = load float, ptr %91, align 4
  %100 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result120, i32 1, i32 31)
  store float %100, ptr %result_from_other_lane119, align 4
  call void @region_4_66(ptr %91, ptr %result_from_other_lane119, ptr %return_buffer121)
  %101 = load float, ptr %return_buffer121, align 4
  store float %101, ptr %91, align 4
  %102 = icmp ult i32 %thread_id.x, %tile_bound
  %103 = mul i32 %thread_id.y, 1
  %104 = icmp ult i32 %103, %tile_bound13
  %105 = and i1 %104, %102
  %106 = icmp eq i32 %lane_id, 0
  %107 = and i1 %105, %106
  br i1 %107, label %reduction_write_output-true122, label %reduction_write_output-after123

reduction_write_output-after123:                  ; preds = %reduction_write_output-true122, %reduction_write_output-after101
  %shmem_output_address126 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache67, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %108 = addrspacecast ptr addrspace(3) %shmem_output_address126 to ptr
  %current_output127 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  %109 = load float, ptr %current_output127, align 4
  store float %109, ptr %108, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr128 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache67, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %110 = addrspacecast ptr addrspace(3) %shmem_transposed_addr128 to ptr
  %partial_reduction_result130 = load float, ptr %110, align 4
  %111 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result130, i32 16, i32 31)
  store float %111, ptr %result_from_other_lane129, align 4
  call void @region_5_81(ptr %110, ptr %result_from_other_lane129, ptr %return_buffer131)
  %112 = load float, ptr %return_buffer131, align 4
  store float %112, ptr %110, align 4
  %partial_reduction_result133 = load float, ptr %110, align 4
  %113 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result133, i32 8, i32 31)
  store float %113, ptr %result_from_other_lane132, align 4
  call void @region_5_81(ptr %110, ptr %result_from_other_lane132, ptr %return_buffer134)
  %114 = load float, ptr %return_buffer134, align 4
  store float %114, ptr %110, align 4
  %partial_reduction_result136 = load float, ptr %110, align 4
  %115 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result136, i32 4, i32 31)
  store float %115, ptr %result_from_other_lane135, align 4
  call void @region_5_81(ptr %110, ptr %result_from_other_lane135, ptr %return_buffer137)
  %116 = load float, ptr %return_buffer137, align 4
  store float %116, ptr %110, align 4
  %partial_reduction_result139 = load float, ptr %110, align 4
  %117 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result139, i32 2, i32 31)
  store float %117, ptr %result_from_other_lane138, align 4
  call void @region_5_81(ptr %110, ptr %result_from_other_lane138, ptr %return_buffer140)
  %118 = load float, ptr %return_buffer140, align 4
  store float %118, ptr %110, align 4
  %partial_reduction_result142 = load float, ptr %110, align 4
  %119 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result142, i32 1, i32 31)
  store float %119, ptr %result_from_other_lane141, align 4
  call void @region_5_81(ptr %110, ptr %result_from_other_lane141, ptr %return_buffer143)
  %120 = load float, ptr %return_buffer143, align 4
  store float %120, ptr %110, align 4
  %121 = icmp ult i32 %thread_id.x, %tile_bound
  %122 = mul i32 %thread_id.y, 1
  %123 = icmp ult i32 %122, %tile_bound13
  %124 = and i1 %123, %121
  %125 = icmp eq i32 %lane_id, 0
  %126 = and i1 %124, %125
  br i1 %126, label %reduction_write_output-true144, label %reduction_write_output-after145

reduction_write_output-after145:                  ; preds = %reduction_write_output-true144, %reduction_write_output-after123
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %127 = mul nuw nsw i32 %30, 1
  %128 = add nuw nsw i32 0, %127
  %129 = mul nuw nsw i32 %29, 128
  %130 = add nuw nsw i32 %128, %129
  %131 = mul nuw nsw i32 %tile_origin.0, 16384
  %132 = add nuw nsw i32 %130, %131
  %133 = udiv i32 %132, 1
  %134 = urem i32 %133, 128
  %135 = udiv i32 %132, 128
  %136 = urem i32 %135, 128
  %137 = udiv i32 %132, 16384
  %138 = mul i32 %thread_id.x, 1
  %139 = sub i32 %x_loc, %138
  %140 = mul nuw nsw i32 %134, 1
  %141 = add nuw nsw i32 0, %140
  %142 = udiv i32 %141, 128
  %143 = mul nuw nsw i32 %136, 1
  %144 = add nuw nsw i32 0, %143
  %145 = mul nuw nsw i32 %137, 128
  %146 = add nuw nsw i32 %144, %145
  %147 = udiv i32 %146, 8192
  %Arg_0.1 = getelementptr inbounds float, ptr %arg0, i32 %132
  %Arg_0.115 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %148 = add i32 %146, 0
  %Arg_2.3 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 38, i32 %148, i32 0
  %Arg_2.316 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %Arg_1.2 = getelementptr inbounds [8192 x float], ptr %arg1, i32 0, i32 %146
  %Arg_1.217 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %multiply.11 = fmul float %Arg_2.316, %Arg_1.217
  %region_0_87_constant_12 = load float, ptr @65, align 4
  %subtract.14 = fsub float %region_0_87_constant_12, %Arg_1.217
  %multiply.15 = fmul float %multiply.11, %subtract.14
  %multiply.18 = fmul float %Arg_0.115, %multiply.15
  store float %multiply.18, ptr %reduction_input_address, align 4
  %149 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %139
  call void @region_1_21(ptr %149, ptr %reduction_input_address, ptr %return_buffer)
  %150 = load float, ptr %return_buffer, align 4
  store float %150, ptr %149, align 4
  %151 = mul nuw nsw i32 %134, 1
  %152 = add nuw nsw i32 0, %151
  %153 = udiv i32 %152, 128
  %154 = mul nuw nsw i32 %136, 1
  %155 = add nuw nsw i32 0, %154
  %156 = mul nuw nsw i32 %137, 128
  %157 = add nuw nsw i32 %155, %156
  %158 = udiv i32 %157, 8192
  %Arg_0.118 = getelementptr inbounds float, ptr %arg0, i32 %132
  %Arg_0.119 = load float, ptr %Arg_0.118, align 4, !invariant.load !297
  %159 = add i32 %157, 0
  %Arg_2.320 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 39, i32 %159, i32 0
  %Arg_2.321 = load float, ptr %Arg_2.320, align 4, !invariant.load !297
  %Arg_3.4 = getelementptr inbounds [8192 x float], ptr %arg3, i32 0, i32 %157
  %Arg_3.422 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  %multiply.29 = fmul float %Arg_2.321, %Arg_3.422
  %region_0_87_constant_1223 = load float, ptr @65, align 4
  %subtract.30 = fsub float %region_0_87_constant_1223, %Arg_3.422
  %multiply.31 = fmul float %multiply.29, %subtract.30
  %multiply.34 = fmul float %Arg_0.119, %multiply.31
  store float %multiply.34, ptr %reduction_input_address1, align 4
  %160 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 %139
  call void @region_2_36(ptr %160, ptr %reduction_input_address1, ptr %return_buffer24)
  %161 = load float, ptr %return_buffer24, align 4
  store float %161, ptr %160, align 4
  %162 = mul nuw nsw i32 %134, 1
  %163 = add nuw nsw i32 0, %162
  %164 = udiv i32 %163, 128
  %165 = mul nuw nsw i32 %136, 1
  %166 = add nuw nsw i32 0, %165
  %167 = mul nuw nsw i32 %137, 128
  %168 = add nuw nsw i32 %166, %167
  %169 = udiv i32 %168, 8192
  %Arg_0.125 = getelementptr inbounds float, ptr %arg0, i32 %132
  %Arg_0.126 = load float, ptr %Arg_0.125, align 4, !invariant.load !297
  %170 = add i32 %168, 0
  %Arg_2.327 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 40, i32 %170, i32 0
  %Arg_2.328 = load float, ptr %Arg_2.327, align 4, !invariant.load !297
  %Arg_4.5 = getelementptr inbounds [8192 x float], ptr %arg4, i32 0, i32 %168
  %Arg_4.529 = load float, ptr %Arg_4.5, align 4, !invariant.load !297
  %multiply.44 = fmul float %Arg_2.328, %Arg_4.529
  %region_0_87_constant_1230 = load float, ptr @65, align 4
  %subtract.45 = fsub float %region_0_87_constant_1230, %Arg_4.529
  %multiply.46 = fmul float %multiply.44, %subtract.45
  %multiply.49 = fmul float %Arg_0.126, %multiply.46
  store float %multiply.49, ptr %reduction_input_address4, align 4
  %171 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 %139
  call void @region_3_51(ptr %171, ptr %reduction_input_address4, ptr %return_buffer31)
  %172 = load float, ptr %return_buffer31, align 4
  store float %172, ptr %171, align 4
  %173 = mul nuw nsw i32 %134, 1
  %174 = add nuw nsw i32 0, %173
  %175 = udiv i32 %174, 128
  %176 = mul nuw nsw i32 %136, 1
  %177 = add nuw nsw i32 0, %176
  %178 = mul nuw nsw i32 %137, 128
  %179 = add nuw nsw i32 %177, %178
  %180 = udiv i32 %179, 8192
  %Arg_0.132 = getelementptr inbounds float, ptr %arg0, i32 %132
  %Arg_0.133 = load float, ptr %Arg_0.132, align 4, !invariant.load !297
  %181 = add i32 %179, 0
  %Arg_2.334 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 41, i32 %181, i32 0
  %Arg_2.335 = load float, ptr %Arg_2.334, align 4, !invariant.load !297
  %Arg_5.6 = getelementptr inbounds [8192 x float], ptr %arg5, i32 0, i32 %179
  %Arg_5.636 = load float, ptr %Arg_5.6, align 4, !invariant.load !297
  %multiply.59 = fmul float %Arg_2.335, %Arg_5.636
  %region_0_87_constant_1237 = load float, ptr @65, align 4
  %subtract.60 = fsub float %region_0_87_constant_1237, %Arg_5.636
  %multiply.61 = fmul float %multiply.59, %subtract.60
  %multiply.64 = fmul float %Arg_0.133, %multiply.61
  store float %multiply.64, ptr %reduction_input_address7, align 4
  %182 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 %139
  call void @region_4_66(ptr %182, ptr %reduction_input_address7, ptr %return_buffer38)
  %183 = load float, ptr %return_buffer38, align 4
  store float %183, ptr %182, align 4
  %184 = mul nuw nsw i32 %134, 1
  %185 = add nuw nsw i32 0, %184
  %186 = udiv i32 %185, 128
  %187 = mul nuw nsw i32 %136, 1
  %188 = add nuw nsw i32 0, %187
  %189 = mul nuw nsw i32 %137, 128
  %190 = add nuw nsw i32 %188, %189
  %191 = udiv i32 %190, 8192
  %Arg_0.139 = getelementptr inbounds float, ptr %arg0, i32 %132
  %Arg_0.140 = load float, ptr %Arg_0.139, align 4, !invariant.load !297
  %192 = add i32 %190, 0
  %Arg_2.341 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 42, i32 %192, i32 0
  %Arg_2.342 = load float, ptr %Arg_2.341, align 4, !invariant.load !297
  %Arg_6.7 = getelementptr inbounds [8192 x float], ptr %arg6, i32 0, i32 %190
  %Arg_6.743 = load float, ptr %Arg_6.7, align 4, !invariant.load !297
  %multiply.74 = fmul float %Arg_2.342, %Arg_6.743
  %region_0_87_constant_1244 = load float, ptr @65, align 4
  %subtract.75 = fsub float %region_0_87_constant_1244, %Arg_6.743
  %multiply.76 = fmul float %multiply.74, %subtract.75
  %multiply.79 = fmul float %Arg_0.140, %multiply.76
  store float %multiply.79, ptr %reduction_input_address10, align 4
  %193 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 %139
  call void @region_5_81(ptr %193, ptr %reduction_input_address10, ptr %return_buffer45)
  %194 = load float, ptr %return_buffer45, align 4
  store float %194, ptr %193, align 4
  br label %x_in_tile-after

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %195 = mul i32 %thread_id.y, 1
  %196 = add i32 %tile_origin.1, %thread_id.x
  %197 = add i32 %tile_origin.2, %195
  %198 = add i32 %197, 0
  %199 = mul i32 %tile_origin.0, 128
  %200 = add i32 %199, %198
  %201 = udiv i32 %200, 1
  %202 = urem i32 %201, 128
  %203 = udiv i32 %200, 128
  %output_element_address = getelementptr inbounds [64 x [128 x float]], ptr %arg7, i32 0, i32 %203, i32 %202
  %output = load float, ptr %34, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

reduction_write_output-true78:                    ; preds = %reduction_write_output-after
  %204 = mul i32 %thread_id.y, 1
  %205 = add i32 %tile_origin.1, %thread_id.x
  %206 = add i32 %tile_origin.2, %204
  %207 = add i32 %206, 0
  %208 = mul i32 %tile_origin.0, 128
  %209 = add i32 %208, %207
  %210 = udiv i32 %209, 1
  %211 = urem i32 %210, 128
  %212 = udiv i32 %209, 128
  %output_element_address80 = getelementptr inbounds [64 x [128 x float]], ptr %arg8, i32 0, i32 %212, i32 %211
  %output81 = load float, ptr %53, align 4
  store float %output81, ptr %output_element_address80, align 4
  br label %reduction_write_output-after79

reduction_write_output-true100:                   ; preds = %reduction_write_output-after79
  %213 = mul i32 %thread_id.y, 1
  %214 = add i32 %tile_origin.1, %thread_id.x
  %215 = add i32 %tile_origin.2, %213
  %216 = add i32 %215, 0
  %217 = mul i32 %tile_origin.0, 128
  %218 = add i32 %217, %216
  %219 = udiv i32 %218, 1
  %220 = urem i32 %219, 128
  %221 = udiv i32 %218, 128
  %output_element_address102 = getelementptr inbounds [64 x [128 x float]], ptr %arg9, i32 0, i32 %221, i32 %220
  %output103 = load float, ptr %72, align 4
  store float %output103, ptr %output_element_address102, align 4
  br label %reduction_write_output-after101

reduction_write_output-true122:                   ; preds = %reduction_write_output-after101
  %222 = mul i32 %thread_id.y, 1
  %223 = add i32 %tile_origin.1, %thread_id.x
  %224 = add i32 %tile_origin.2, %222
  %225 = add i32 %224, 0
  %226 = mul i32 %tile_origin.0, 128
  %227 = add i32 %226, %225
  %228 = udiv i32 %227, 1
  %229 = urem i32 %228, 128
  %230 = udiv i32 %227, 128
  %output_element_address124 = getelementptr inbounds [64 x [128 x float]], ptr %arg10, i32 0, i32 %230, i32 %229
  %output125 = load float, ptr %91, align 4
  store float %output125, ptr %output_element_address124, align 4
  br label %reduction_write_output-after123

reduction_write_output-true144:                   ; preds = %reduction_write_output-after123
  %231 = mul i32 %thread_id.y, 1
  %232 = add i32 %tile_origin.1, %thread_id.x
  %233 = add i32 %tile_origin.2, %231
  %234 = add i32 %233, 0
  %235 = mul i32 %tile_origin.0, 128
  %236 = add i32 %235, %234
  %237 = udiv i32 %236, 1
  %238 = urem i32 %237, 128
  %239 = udiv i32 %236, 128
  %output_element_address146 = getelementptr inbounds [64 x [128 x float]], ptr %arg11, i32 0, i32 %239, i32 %238
  %output147 = load float, ptr %110, align 4
  store float %output147, ptr %output_element_address146, align 4
  br label %reduction_write_output-after145
}

define internal void @region_1_21(ptr dereferenceable(4) %Arg_0.22.typed, ptr dereferenceable(4) %Arg_1.23.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.24.typed = alloca float, align 4
  %Arg_0.22 = load float, ptr %Arg_0.22.typed, align 4
  %Arg_1.23 = load float, ptr %Arg_1.23.typed, align 4
  %add.24 = fadd float %Arg_0.22, %Arg_1.23
  store float %add.24, ptr %add.24.typed, align 4
  %load_ret_value = load float, ptr %add.24.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_36(ptr dereferenceable(4) %Arg_0.37.typed, ptr dereferenceable(4) %Arg_1.38.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.39.typed = alloca float, align 4
  %Arg_0.37 = load float, ptr %Arg_0.37.typed, align 4
  %Arg_1.38 = load float, ptr %Arg_1.38.typed, align 4
  %add.39 = fadd float %Arg_0.37, %Arg_1.38
  store float %add.39, ptr %add.39.typed, align 4
  %load_ret_value = load float, ptr %add.39.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_3_51(ptr dereferenceable(4) %Arg_0.52.typed, ptr dereferenceable(4) %Arg_1.53.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.54.typed = alloca float, align 4
  %Arg_0.52 = load float, ptr %Arg_0.52.typed, align 4
  %Arg_1.53 = load float, ptr %Arg_1.53.typed, align 4
  %add.54 = fadd float %Arg_0.52, %Arg_1.53
  store float %add.54, ptr %add.54.typed, align 4
  %load_ret_value = load float, ptr %add.54.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_4_66(ptr dereferenceable(4) %Arg_0.67.typed, ptr dereferenceable(4) %Arg_1.68.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.69.typed = alloca float, align 4
  %Arg_0.67 = load float, ptr %Arg_0.67.typed, align 4
  %Arg_1.68 = load float, ptr %Arg_1.68.typed, align 4
  %add.69 = fadd float %Arg_0.67, %Arg_1.68
  store float %add.69, ptr %add.69.typed, align 4
  %load_ret_value = load float, ptr %add.69.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_5_81(ptr dereferenceable(4) %Arg_0.82.typed, ptr dereferenceable(4) %Arg_1.83.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.84.typed = alloca float, align 4
  %Arg_0.82 = load float, ptr %Arg_0.82.typed, align 4
  %Arg_1.83 = load float, ptr %Arg_1.83.typed, align 4
  %add.84 = fadd float %Arg_0.82, %Arg_1.83
  store float %add.84, ptr %add.84.typed, align 4
  %load_ret_value = load float, ptr %add.84.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_310(ptr noalias align 128 dereferenceable(4194304) %arg0, ptr noalias align 128 dereferenceable(32768) %arg1, ptr noalias align 128 dereferenceable(1966080) %arg2, ptr noalias align 128 dereferenceable(32768) %arg3, ptr noalias align 128 dereferenceable(32768) %arg4, ptr noalias align 128 dereferenceable(32768) %arg5, ptr noalias align 128 dereferenceable(32768) %arg6, ptr noalias align 128 dereferenceable(32768) %arg7, ptr noalias align 128 dereferenceable(32768) %arg8, ptr noalias align 128 dereferenceable(32768) %arg9, ptr noalias align 128 dereferenceable(32768) %arg10, ptr noalias align 128 dereferenceable(32768) %arg11) {
entry:
  %return_buffer143 = alloca float, align 4
  %result_from_other_lane141 = alloca float, align 4
  %return_buffer140 = alloca float, align 4
  %result_from_other_lane138 = alloca float, align 4
  %return_buffer137 = alloca float, align 4
  %result_from_other_lane135 = alloca float, align 4
  %return_buffer134 = alloca float, align 4
  %result_from_other_lane132 = alloca float, align 4
  %return_buffer131 = alloca float, align 4
  %result_from_other_lane129 = alloca float, align 4
  %return_buffer121 = alloca float, align 4
  %result_from_other_lane119 = alloca float, align 4
  %return_buffer118 = alloca float, align 4
  %result_from_other_lane116 = alloca float, align 4
  %return_buffer115 = alloca float, align 4
  %result_from_other_lane113 = alloca float, align 4
  %return_buffer112 = alloca float, align 4
  %result_from_other_lane110 = alloca float, align 4
  %return_buffer109 = alloca float, align 4
  %result_from_other_lane107 = alloca float, align 4
  %return_buffer99 = alloca float, align 4
  %result_from_other_lane97 = alloca float, align 4
  %return_buffer96 = alloca float, align 4
  %result_from_other_lane94 = alloca float, align 4
  %return_buffer93 = alloca float, align 4
  %result_from_other_lane91 = alloca float, align 4
  %return_buffer90 = alloca float, align 4
  %result_from_other_lane88 = alloca float, align 4
  %return_buffer87 = alloca float, align 4
  %result_from_other_lane85 = alloca float, align 4
  %return_buffer77 = alloca float, align 4
  %result_from_other_lane75 = alloca float, align 4
  %return_buffer74 = alloca float, align 4
  %result_from_other_lane72 = alloca float, align 4
  %return_buffer71 = alloca float, align 4
  %result_from_other_lane69 = alloca float, align 4
  %return_buffer68 = alloca float, align 4
  %result_from_other_lane66 = alloca float, align 4
  %return_buffer65 = alloca float, align 4
  %result_from_other_lane63 = alloca float, align 4
  %return_buffer59 = alloca float, align 4
  %result_from_other_lane57 = alloca float, align 4
  %return_buffer56 = alloca float, align 4
  %result_from_other_lane54 = alloca float, align 4
  %return_buffer53 = alloca float, align 4
  %result_from_other_lane51 = alloca float, align 4
  %return_buffer50 = alloca float, align 4
  %result_from_other_lane48 = alloca float, align 4
  %return_buffer47 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer45 = alloca float, align 4
  %return_buffer38 = alloca float, align 4
  %return_buffer31 = alloca float, align 4
  %return_buffer24 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result11 = alloca float, align 4
  %reduction_input_address10 = alloca float, align 4
  %partial_reduction_result8 = alloca float, align 4
  %reduction_input_address7 = alloca float, align 4
  %partial_reduction_result5 = alloca float, align 4
  %reduction_input_address4 = alloca float, align 4
  %partial_reduction_result2 = alloca float, align 4
  %reduction_input_address1 = alloca float, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after145, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_87_constant_20 = load float, ptr @66, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_87_constant_20, ptr %2, align 4
  %region_0_87_constant_203 = load float, ptr @66, align 4
  %3 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  store float %region_0_87_constant_203, ptr %3, align 4
  %region_0_87_constant_206 = load float, ptr @66, align 4
  %4 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  store float %region_0_87_constant_206, ptr %4, align 4
  %region_0_87_constant_209 = load float, ptr @66, align 4
  %5 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  store float %region_0_87_constant_209, ptr %5, align 4
  %region_0_87_constant_2012 = load float, ptr @66, align 4
  %6 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  store float %region_0_87_constant_2012, ptr %6, align 4
  %7 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %8 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !362
  %9 = urem i32 %7, 1024
  %10 = udiv i32 %7, 1024
  %11 = mul i32 %8, 1
  %12 = add i32 %11, %10
  %13 = icmp ult i32 %12, 256
  br i1 %13, label %14, label %early_return

14:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %9, 32
  %thread_id.y = udiv i32 %9, 32
  %lane_id = urem i32 %9, 32
  %15 = udiv i32 %12, 1
  %16 = urem i32 %15, 4
  %17 = udiv i32 %12, 4
  %18 = urem i32 %17, 1
  %19 = udiv i32 %12, 4
  %20 = icmp eq i32 %18, 0
  %tile_bound = select i1 %20, i32 128, i32 4096
  %21 = icmp eq i32 %16, 3
  %tile_bound13 = select i1 %21, i32 32, i32 32
  %tile_origin.0 = mul i32 %19, 1
  %tile_origin.1 = mul i32 %18, 4096
  %tile_origin.2 = mul i32 %16, 32
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %14
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %22 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %22, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %23 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %24 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %25 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %25, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc14 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc14, ptr %tile_loop.invar_address, align 4
  %26 = icmp eq i32 %tile_loop.indvar, 0
  %27 = mul i32 %tile_loop.indvar, 1
  %28 = add i32 %27, 0
  %x_loc = add i32 %28, %24
  %29 = add i32 %tile_origin.1, %y_in_tile.indvar
  %30 = add i32 %tile_origin.2, %x_loc
  %31 = icmp ult i32 %x_loc, %tile_bound13
  br i1 %31, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body
  br label %tile_loop.loop_header, !llvm.loop !430

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !431

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache68, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %32 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %33 = load float, ptr %current_output, align 4
  store float %33, ptr %32, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache68, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %34 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result46 = load float, ptr %34, align 4
  %35 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result46, i32 16, i32 31)
  store float %35, ptr %result_from_other_lane, align 4
  call void @region_1_21__1(ptr %34, ptr %result_from_other_lane, ptr %return_buffer47)
  %36 = load float, ptr %return_buffer47, align 4
  store float %36, ptr %34, align 4
  %partial_reduction_result49 = load float, ptr %34, align 4
  %37 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result49, i32 8, i32 31)
  store float %37, ptr %result_from_other_lane48, align 4
  call void @region_1_21__1(ptr %34, ptr %result_from_other_lane48, ptr %return_buffer50)
  %38 = load float, ptr %return_buffer50, align 4
  store float %38, ptr %34, align 4
  %partial_reduction_result52 = load float, ptr %34, align 4
  %39 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result52, i32 4, i32 31)
  store float %39, ptr %result_from_other_lane51, align 4
  call void @region_1_21__1(ptr %34, ptr %result_from_other_lane51, ptr %return_buffer53)
  %40 = load float, ptr %return_buffer53, align 4
  store float %40, ptr %34, align 4
  %partial_reduction_result55 = load float, ptr %34, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result55, i32 2, i32 31)
  store float %41, ptr %result_from_other_lane54, align 4
  call void @region_1_21__1(ptr %34, ptr %result_from_other_lane54, ptr %return_buffer56)
  %42 = load float, ptr %return_buffer56, align 4
  store float %42, ptr %34, align 4
  %partial_reduction_result58 = load float, ptr %34, align 4
  %43 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result58, i32 1, i32 31)
  store float %43, ptr %result_from_other_lane57, align 4
  call void @region_1_21__1(ptr %34, ptr %result_from_other_lane57, ptr %return_buffer59)
  %44 = load float, ptr %return_buffer59, align 4
  store float %44, ptr %34, align 4
  %45 = icmp ult i32 %thread_id.x, %tile_bound
  %46 = mul i32 %thread_id.y, 1
  %47 = icmp ult i32 %46, %tile_bound13
  %48 = and i1 %47, %45
  %49 = icmp eq i32 %lane_id, 0
  %50 = and i1 %48, %49
  br i1 %50, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %shmem_output_address60 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache69, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %51 = addrspacecast ptr addrspace(3) %shmem_output_address60 to ptr
  %current_output61 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  %52 = load float, ptr %current_output61, align 4
  store float %52, ptr %51, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr62 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache69, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %53 = addrspacecast ptr addrspace(3) %shmem_transposed_addr62 to ptr
  %partial_reduction_result64 = load float, ptr %53, align 4
  %54 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result64, i32 16, i32 31)
  store float %54, ptr %result_from_other_lane63, align 4
  call void @region_2_36__1(ptr %53, ptr %result_from_other_lane63, ptr %return_buffer65)
  %55 = load float, ptr %return_buffer65, align 4
  store float %55, ptr %53, align 4
  %partial_reduction_result67 = load float, ptr %53, align 4
  %56 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result67, i32 8, i32 31)
  store float %56, ptr %result_from_other_lane66, align 4
  call void @region_2_36__1(ptr %53, ptr %result_from_other_lane66, ptr %return_buffer68)
  %57 = load float, ptr %return_buffer68, align 4
  store float %57, ptr %53, align 4
  %partial_reduction_result70 = load float, ptr %53, align 4
  %58 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result70, i32 4, i32 31)
  store float %58, ptr %result_from_other_lane69, align 4
  call void @region_2_36__1(ptr %53, ptr %result_from_other_lane69, ptr %return_buffer71)
  %59 = load float, ptr %return_buffer71, align 4
  store float %59, ptr %53, align 4
  %partial_reduction_result73 = load float, ptr %53, align 4
  %60 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result73, i32 2, i32 31)
  store float %60, ptr %result_from_other_lane72, align 4
  call void @region_2_36__1(ptr %53, ptr %result_from_other_lane72, ptr %return_buffer74)
  %61 = load float, ptr %return_buffer74, align 4
  store float %61, ptr %53, align 4
  %partial_reduction_result76 = load float, ptr %53, align 4
  %62 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result76, i32 1, i32 31)
  store float %62, ptr %result_from_other_lane75, align 4
  call void @region_2_36__1(ptr %53, ptr %result_from_other_lane75, ptr %return_buffer77)
  %63 = load float, ptr %return_buffer77, align 4
  store float %63, ptr %53, align 4
  %64 = icmp ult i32 %thread_id.x, %tile_bound
  %65 = mul i32 %thread_id.y, 1
  %66 = icmp ult i32 %65, %tile_bound13
  %67 = and i1 %66, %64
  %68 = icmp eq i32 %lane_id, 0
  %69 = and i1 %67, %68
  br i1 %69, label %reduction_write_output-true78, label %reduction_write_output-after79

reduction_write_output-after79:                   ; preds = %reduction_write_output-true78, %reduction_write_output-after
  %shmem_output_address82 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache70, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %70 = addrspacecast ptr addrspace(3) %shmem_output_address82 to ptr
  %current_output83 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  %71 = load float, ptr %current_output83, align 4
  store float %71, ptr %70, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr84 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache70, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %72 = addrspacecast ptr addrspace(3) %shmem_transposed_addr84 to ptr
  %partial_reduction_result86 = load float, ptr %72, align 4
  %73 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result86, i32 16, i32 31)
  store float %73, ptr %result_from_other_lane85, align 4
  call void @region_3_51__1(ptr %72, ptr %result_from_other_lane85, ptr %return_buffer87)
  %74 = load float, ptr %return_buffer87, align 4
  store float %74, ptr %72, align 4
  %partial_reduction_result89 = load float, ptr %72, align 4
  %75 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result89, i32 8, i32 31)
  store float %75, ptr %result_from_other_lane88, align 4
  call void @region_3_51__1(ptr %72, ptr %result_from_other_lane88, ptr %return_buffer90)
  %76 = load float, ptr %return_buffer90, align 4
  store float %76, ptr %72, align 4
  %partial_reduction_result92 = load float, ptr %72, align 4
  %77 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result92, i32 4, i32 31)
  store float %77, ptr %result_from_other_lane91, align 4
  call void @region_3_51__1(ptr %72, ptr %result_from_other_lane91, ptr %return_buffer93)
  %78 = load float, ptr %return_buffer93, align 4
  store float %78, ptr %72, align 4
  %partial_reduction_result95 = load float, ptr %72, align 4
  %79 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result95, i32 2, i32 31)
  store float %79, ptr %result_from_other_lane94, align 4
  call void @region_3_51__1(ptr %72, ptr %result_from_other_lane94, ptr %return_buffer96)
  %80 = load float, ptr %return_buffer96, align 4
  store float %80, ptr %72, align 4
  %partial_reduction_result98 = load float, ptr %72, align 4
  %81 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result98, i32 1, i32 31)
  store float %81, ptr %result_from_other_lane97, align 4
  call void @region_3_51__1(ptr %72, ptr %result_from_other_lane97, ptr %return_buffer99)
  %82 = load float, ptr %return_buffer99, align 4
  store float %82, ptr %72, align 4
  %83 = icmp ult i32 %thread_id.x, %tile_bound
  %84 = mul i32 %thread_id.y, 1
  %85 = icmp ult i32 %84, %tile_bound13
  %86 = and i1 %85, %83
  %87 = icmp eq i32 %lane_id, 0
  %88 = and i1 %86, %87
  br i1 %88, label %reduction_write_output-true100, label %reduction_write_output-after101

reduction_write_output-after101:                  ; preds = %reduction_write_output-true100, %reduction_write_output-after79
  %shmem_output_address104 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache71, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %89 = addrspacecast ptr addrspace(3) %shmem_output_address104 to ptr
  %current_output105 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  %90 = load float, ptr %current_output105, align 4
  store float %90, ptr %89, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr106 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache71, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %91 = addrspacecast ptr addrspace(3) %shmem_transposed_addr106 to ptr
  %partial_reduction_result108 = load float, ptr %91, align 4
  %92 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result108, i32 16, i32 31)
  store float %92, ptr %result_from_other_lane107, align 4
  call void @region_4_66__1(ptr %91, ptr %result_from_other_lane107, ptr %return_buffer109)
  %93 = load float, ptr %return_buffer109, align 4
  store float %93, ptr %91, align 4
  %partial_reduction_result111 = load float, ptr %91, align 4
  %94 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result111, i32 8, i32 31)
  store float %94, ptr %result_from_other_lane110, align 4
  call void @region_4_66__1(ptr %91, ptr %result_from_other_lane110, ptr %return_buffer112)
  %95 = load float, ptr %return_buffer112, align 4
  store float %95, ptr %91, align 4
  %partial_reduction_result114 = load float, ptr %91, align 4
  %96 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result114, i32 4, i32 31)
  store float %96, ptr %result_from_other_lane113, align 4
  call void @region_4_66__1(ptr %91, ptr %result_from_other_lane113, ptr %return_buffer115)
  %97 = load float, ptr %return_buffer115, align 4
  store float %97, ptr %91, align 4
  %partial_reduction_result117 = load float, ptr %91, align 4
  %98 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result117, i32 2, i32 31)
  store float %98, ptr %result_from_other_lane116, align 4
  call void @region_4_66__1(ptr %91, ptr %result_from_other_lane116, ptr %return_buffer118)
  %99 = load float, ptr %return_buffer118, align 4
  store float %99, ptr %91, align 4
  %partial_reduction_result120 = load float, ptr %91, align 4
  %100 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result120, i32 1, i32 31)
  store float %100, ptr %result_from_other_lane119, align 4
  call void @region_4_66__1(ptr %91, ptr %result_from_other_lane119, ptr %return_buffer121)
  %101 = load float, ptr %return_buffer121, align 4
  store float %101, ptr %91, align 4
  %102 = icmp ult i32 %thread_id.x, %tile_bound
  %103 = mul i32 %thread_id.y, 1
  %104 = icmp ult i32 %103, %tile_bound13
  %105 = and i1 %104, %102
  %106 = icmp eq i32 %lane_id, 0
  %107 = and i1 %105, %106
  br i1 %107, label %reduction_write_output-true122, label %reduction_write_output-after123

reduction_write_output-after123:                  ; preds = %reduction_write_output-true122, %reduction_write_output-after101
  %shmem_output_address126 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache72, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %108 = addrspacecast ptr addrspace(3) %shmem_output_address126 to ptr
  %current_output127 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  %109 = load float, ptr %current_output127, align 4
  store float %109, ptr %108, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr128 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache72, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %110 = addrspacecast ptr addrspace(3) %shmem_transposed_addr128 to ptr
  %partial_reduction_result130 = load float, ptr %110, align 4
  %111 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result130, i32 16, i32 31)
  store float %111, ptr %result_from_other_lane129, align 4
  call void @region_5_81__1(ptr %110, ptr %result_from_other_lane129, ptr %return_buffer131)
  %112 = load float, ptr %return_buffer131, align 4
  store float %112, ptr %110, align 4
  %partial_reduction_result133 = load float, ptr %110, align 4
  %113 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result133, i32 8, i32 31)
  store float %113, ptr %result_from_other_lane132, align 4
  call void @region_5_81__1(ptr %110, ptr %result_from_other_lane132, ptr %return_buffer134)
  %114 = load float, ptr %return_buffer134, align 4
  store float %114, ptr %110, align 4
  %partial_reduction_result136 = load float, ptr %110, align 4
  %115 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result136, i32 4, i32 31)
  store float %115, ptr %result_from_other_lane135, align 4
  call void @region_5_81__1(ptr %110, ptr %result_from_other_lane135, ptr %return_buffer137)
  %116 = load float, ptr %return_buffer137, align 4
  store float %116, ptr %110, align 4
  %partial_reduction_result139 = load float, ptr %110, align 4
  %117 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result139, i32 2, i32 31)
  store float %117, ptr %result_from_other_lane138, align 4
  call void @region_5_81__1(ptr %110, ptr %result_from_other_lane138, ptr %return_buffer140)
  %118 = load float, ptr %return_buffer140, align 4
  store float %118, ptr %110, align 4
  %partial_reduction_result142 = load float, ptr %110, align 4
  %119 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result142, i32 1, i32 31)
  store float %119, ptr %result_from_other_lane141, align 4
  call void @region_5_81__1(ptr %110, ptr %result_from_other_lane141, ptr %return_buffer143)
  %120 = load float, ptr %return_buffer143, align 4
  store float %120, ptr %110, align 4
  %121 = icmp ult i32 %thread_id.x, %tile_bound
  %122 = mul i32 %thread_id.y, 1
  %123 = icmp ult i32 %122, %tile_bound13
  %124 = and i1 %123, %121
  %125 = icmp eq i32 %lane_id, 0
  %126 = and i1 %124, %125
  br i1 %126, label %reduction_write_output-true144, label %reduction_write_output-after145

reduction_write_output-after145:                  ; preds = %reduction_write_output-true144, %reduction_write_output-after123
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %127 = mul nuw nsw i32 %30, 1
  %128 = add nuw nsw i32 0, %127
  %129 = mul nuw nsw i32 %29, 128
  %130 = add nuw nsw i32 %128, %129
  %131 = mul nuw nsw i32 %tile_origin.0, 16384
  %132 = add nuw nsw i32 %130, %131
  %133 = udiv i32 %132, 1
  %134 = urem i32 %133, 128
  %135 = udiv i32 %132, 128
  %136 = urem i32 %135, 128
  %137 = udiv i32 %132, 16384
  %138 = mul i32 %thread_id.x, 1
  %139 = sub i32 %x_loc, %138
  %140 = mul nuw nsw i32 %134, 1
  %141 = add nuw nsw i32 0, %140
  %142 = udiv i32 %141, 128
  %143 = mul nuw nsw i32 %136, 1
  %144 = add nuw nsw i32 0, %143
  %145 = mul nuw nsw i32 %137, 128
  %146 = add nuw nsw i32 %144, %145
  %147 = udiv i32 %146, 8192
  %Arg_0.1 = getelementptr inbounds float, ptr %arg0, i32 %132
  %Arg_0.115 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %148 = add i32 %146, 0
  %Arg_2.3 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 32, i32 %148, i32 0
  %Arg_2.316 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %Arg_1.2 = getelementptr inbounds [8192 x float], ptr %arg1, i32 0, i32 %146
  %Arg_1.217 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %multiply.11 = fmul float %Arg_2.316, %Arg_1.217
  %region_0_87_constant_12 = load float, ptr @67, align 4
  %subtract.14 = fsub float %region_0_87_constant_12, %Arg_1.217
  %multiply.15 = fmul float %multiply.11, %subtract.14
  %multiply.18 = fmul float %Arg_0.115, %multiply.15
  store float %multiply.18, ptr %reduction_input_address, align 4
  %149 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %139
  call void @region_1_21__1(ptr %149, ptr %reduction_input_address, ptr %return_buffer)
  %150 = load float, ptr %return_buffer, align 4
  store float %150, ptr %149, align 4
  %151 = mul nuw nsw i32 %134, 1
  %152 = add nuw nsw i32 0, %151
  %153 = udiv i32 %152, 128
  %154 = mul nuw nsw i32 %136, 1
  %155 = add nuw nsw i32 0, %154
  %156 = mul nuw nsw i32 %137, 128
  %157 = add nuw nsw i32 %155, %156
  %158 = udiv i32 %157, 8192
  %Arg_0.118 = getelementptr inbounds float, ptr %arg0, i32 %132
  %Arg_0.119 = load float, ptr %Arg_0.118, align 4, !invariant.load !297
  %159 = add i32 %157, 0
  %Arg_2.320 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 33, i32 %159, i32 0
  %Arg_2.321 = load float, ptr %Arg_2.320, align 4, !invariant.load !297
  %Arg_3.4 = getelementptr inbounds [8192 x float], ptr %arg3, i32 0, i32 %157
  %Arg_3.422 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  %multiply.29 = fmul float %Arg_2.321, %Arg_3.422
  %region_0_87_constant_1223 = load float, ptr @67, align 4
  %subtract.30 = fsub float %region_0_87_constant_1223, %Arg_3.422
  %multiply.31 = fmul float %multiply.29, %subtract.30
  %multiply.34 = fmul float %Arg_0.119, %multiply.31
  store float %multiply.34, ptr %reduction_input_address1, align 4
  %160 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 %139
  call void @region_2_36__1(ptr %160, ptr %reduction_input_address1, ptr %return_buffer24)
  %161 = load float, ptr %return_buffer24, align 4
  store float %161, ptr %160, align 4
  %162 = mul nuw nsw i32 %134, 1
  %163 = add nuw nsw i32 0, %162
  %164 = udiv i32 %163, 128
  %165 = mul nuw nsw i32 %136, 1
  %166 = add nuw nsw i32 0, %165
  %167 = mul nuw nsw i32 %137, 128
  %168 = add nuw nsw i32 %166, %167
  %169 = udiv i32 %168, 8192
  %Arg_0.125 = getelementptr inbounds float, ptr %arg0, i32 %132
  %Arg_0.126 = load float, ptr %Arg_0.125, align 4, !invariant.load !297
  %170 = add i32 %168, 0
  %Arg_2.327 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 35, i32 %170, i32 0
  %Arg_2.328 = load float, ptr %Arg_2.327, align 4, !invariant.load !297
  %Arg_4.5 = getelementptr inbounds [8192 x float], ptr %arg4, i32 0, i32 %168
  %Arg_4.529 = load float, ptr %Arg_4.5, align 4, !invariant.load !297
  %multiply.44 = fmul float %Arg_2.328, %Arg_4.529
  %region_0_87_constant_1230 = load float, ptr @67, align 4
  %subtract.45 = fsub float %region_0_87_constant_1230, %Arg_4.529
  %multiply.46 = fmul float %multiply.44, %subtract.45
  %multiply.49 = fmul float %Arg_0.126, %multiply.46
  store float %multiply.49, ptr %reduction_input_address4, align 4
  %171 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 %139
  call void @region_3_51__1(ptr %171, ptr %reduction_input_address4, ptr %return_buffer31)
  %172 = load float, ptr %return_buffer31, align 4
  store float %172, ptr %171, align 4
  %173 = mul nuw nsw i32 %134, 1
  %174 = add nuw nsw i32 0, %173
  %175 = udiv i32 %174, 128
  %176 = mul nuw nsw i32 %136, 1
  %177 = add nuw nsw i32 0, %176
  %178 = mul nuw nsw i32 %137, 128
  %179 = add nuw nsw i32 %177, %178
  %180 = udiv i32 %179, 8192
  %Arg_0.132 = getelementptr inbounds float, ptr %arg0, i32 %132
  %Arg_0.133 = load float, ptr %Arg_0.132, align 4, !invariant.load !297
  %181 = add i32 %179, 0
  %Arg_2.334 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 36, i32 %181, i32 0
  %Arg_2.335 = load float, ptr %Arg_2.334, align 4, !invariant.load !297
  %Arg_5.6 = getelementptr inbounds [8192 x float], ptr %arg5, i32 0, i32 %179
  %Arg_5.636 = load float, ptr %Arg_5.6, align 4, !invariant.load !297
  %multiply.59 = fmul float %Arg_2.335, %Arg_5.636
  %region_0_87_constant_1237 = load float, ptr @67, align 4
  %subtract.60 = fsub float %region_0_87_constant_1237, %Arg_5.636
  %multiply.61 = fmul float %multiply.59, %subtract.60
  %multiply.64 = fmul float %Arg_0.133, %multiply.61
  store float %multiply.64, ptr %reduction_input_address7, align 4
  %182 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 %139
  call void @region_4_66__1(ptr %182, ptr %reduction_input_address7, ptr %return_buffer38)
  %183 = load float, ptr %return_buffer38, align 4
  store float %183, ptr %182, align 4
  %184 = mul nuw nsw i32 %134, 1
  %185 = add nuw nsw i32 0, %184
  %186 = udiv i32 %185, 128
  %187 = mul nuw nsw i32 %136, 1
  %188 = add nuw nsw i32 0, %187
  %189 = mul nuw nsw i32 %137, 128
  %190 = add nuw nsw i32 %188, %189
  %191 = udiv i32 %190, 8192
  %Arg_0.139 = getelementptr inbounds float, ptr %arg0, i32 %132
  %Arg_0.140 = load float, ptr %Arg_0.139, align 4, !invariant.load !297
  %192 = add i32 %190, 0
  %Arg_2.341 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 37, i32 %192, i32 0
  %Arg_2.342 = load float, ptr %Arg_2.341, align 4, !invariant.load !297
  %Arg_6.7 = getelementptr inbounds [8192 x float], ptr %arg6, i32 0, i32 %190
  %Arg_6.743 = load float, ptr %Arg_6.7, align 4, !invariant.load !297
  %multiply.74 = fmul float %Arg_2.342, %Arg_6.743
  %region_0_87_constant_1244 = load float, ptr @67, align 4
  %subtract.75 = fsub float %region_0_87_constant_1244, %Arg_6.743
  %multiply.76 = fmul float %multiply.74, %subtract.75
  %multiply.79 = fmul float %Arg_0.140, %multiply.76
  store float %multiply.79, ptr %reduction_input_address10, align 4
  %193 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 %139
  call void @region_5_81__1(ptr %193, ptr %reduction_input_address10, ptr %return_buffer45)
  %194 = load float, ptr %return_buffer45, align 4
  store float %194, ptr %193, align 4
  br label %x_in_tile-after

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %195 = mul i32 %thread_id.y, 1
  %196 = add i32 %tile_origin.1, %thread_id.x
  %197 = add i32 %tile_origin.2, %195
  %198 = add i32 %197, 0
  %199 = mul i32 %tile_origin.0, 128
  %200 = add i32 %199, %198
  %201 = udiv i32 %200, 1
  %202 = urem i32 %201, 128
  %203 = udiv i32 %200, 128
  %output_element_address = getelementptr inbounds [64 x [128 x float]], ptr %arg7, i32 0, i32 %203, i32 %202
  %output = load float, ptr %34, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

reduction_write_output-true78:                    ; preds = %reduction_write_output-after
  %204 = mul i32 %thread_id.y, 1
  %205 = add i32 %tile_origin.1, %thread_id.x
  %206 = add i32 %tile_origin.2, %204
  %207 = add i32 %206, 0
  %208 = mul i32 %tile_origin.0, 128
  %209 = add i32 %208, %207
  %210 = udiv i32 %209, 1
  %211 = urem i32 %210, 128
  %212 = udiv i32 %209, 128
  %output_element_address80 = getelementptr inbounds [64 x [128 x float]], ptr %arg8, i32 0, i32 %212, i32 %211
  %output81 = load float, ptr %53, align 4
  store float %output81, ptr %output_element_address80, align 4
  br label %reduction_write_output-after79

reduction_write_output-true100:                   ; preds = %reduction_write_output-after79
  %213 = mul i32 %thread_id.y, 1
  %214 = add i32 %tile_origin.1, %thread_id.x
  %215 = add i32 %tile_origin.2, %213
  %216 = add i32 %215, 0
  %217 = mul i32 %tile_origin.0, 128
  %218 = add i32 %217, %216
  %219 = udiv i32 %218, 1
  %220 = urem i32 %219, 128
  %221 = udiv i32 %218, 128
  %output_element_address102 = getelementptr inbounds [64 x [128 x float]], ptr %arg9, i32 0, i32 %221, i32 %220
  %output103 = load float, ptr %72, align 4
  store float %output103, ptr %output_element_address102, align 4
  br label %reduction_write_output-after101

reduction_write_output-true122:                   ; preds = %reduction_write_output-after101
  %222 = mul i32 %thread_id.y, 1
  %223 = add i32 %tile_origin.1, %thread_id.x
  %224 = add i32 %tile_origin.2, %222
  %225 = add i32 %224, 0
  %226 = mul i32 %tile_origin.0, 128
  %227 = add i32 %226, %225
  %228 = udiv i32 %227, 1
  %229 = urem i32 %228, 128
  %230 = udiv i32 %227, 128
  %output_element_address124 = getelementptr inbounds [64 x [128 x float]], ptr %arg10, i32 0, i32 %230, i32 %229
  %output125 = load float, ptr %91, align 4
  store float %output125, ptr %output_element_address124, align 4
  br label %reduction_write_output-after123

reduction_write_output-true144:                   ; preds = %reduction_write_output-after123
  %231 = mul i32 %thread_id.y, 1
  %232 = add i32 %tile_origin.1, %thread_id.x
  %233 = add i32 %tile_origin.2, %231
  %234 = add i32 %233, 0
  %235 = mul i32 %tile_origin.0, 128
  %236 = add i32 %235, %234
  %237 = udiv i32 %236, 1
  %238 = urem i32 %237, 128
  %239 = udiv i32 %236, 128
  %output_element_address146 = getelementptr inbounds [64 x [128 x float]], ptr %arg11, i32 0, i32 %239, i32 %238
  %output147 = load float, ptr %110, align 4
  store float %output147, ptr %output_element_address146, align 4
  br label %reduction_write_output-after145
}

define internal void @region_1_21__1(ptr dereferenceable(4) %Arg_0.22.typed, ptr dereferenceable(4) %Arg_1.23.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.24.typed = alloca float, align 4
  %Arg_0.22 = load float, ptr %Arg_0.22.typed, align 4
  %Arg_1.23 = load float, ptr %Arg_1.23.typed, align 4
  %add.24 = fadd float %Arg_0.22, %Arg_1.23
  store float %add.24, ptr %add.24.typed, align 4
  %load_ret_value = load float, ptr %add.24.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_36__1(ptr dereferenceable(4) %Arg_0.37.typed, ptr dereferenceable(4) %Arg_1.38.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.39.typed = alloca float, align 4
  %Arg_0.37 = load float, ptr %Arg_0.37.typed, align 4
  %Arg_1.38 = load float, ptr %Arg_1.38.typed, align 4
  %add.39 = fadd float %Arg_0.37, %Arg_1.38
  store float %add.39, ptr %add.39.typed, align 4
  %load_ret_value = load float, ptr %add.39.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_3_51__1(ptr dereferenceable(4) %Arg_0.52.typed, ptr dereferenceable(4) %Arg_1.53.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.54.typed = alloca float, align 4
  %Arg_0.52 = load float, ptr %Arg_0.52.typed, align 4
  %Arg_1.53 = load float, ptr %Arg_1.53.typed, align 4
  %add.54 = fadd float %Arg_0.52, %Arg_1.53
  store float %add.54, ptr %add.54.typed, align 4
  %load_ret_value = load float, ptr %add.54.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_4_66__1(ptr dereferenceable(4) %Arg_0.67.typed, ptr dereferenceable(4) %Arg_1.68.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.69.typed = alloca float, align 4
  %Arg_0.67 = load float, ptr %Arg_0.67.typed, align 4
  %Arg_1.68 = load float, ptr %Arg_1.68.typed, align 4
  %add.69 = fadd float %Arg_0.67, %Arg_1.68
  store float %add.69, ptr %add.69.typed, align 4
  %load_ret_value = load float, ptr %add.69.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_5_81__1(ptr dereferenceable(4) %Arg_0.82.typed, ptr dereferenceable(4) %Arg_1.83.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.84.typed = alloca float, align 4
  %Arg_0.82 = load float, ptr %Arg_0.82.typed, align 4
  %Arg_1.83 = load float, ptr %Arg_1.83.typed, align 4
  %add.84 = fadd float %Arg_0.82, %Arg_1.83
  store float %add.84, ptr %add.84.typed, align 4
  %load_ret_value = load float, ptr %add.84.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_761(ptr noalias align 128 dereferenceable(32768) %arg0, ptr noalias align 128 dereferenceable(4) %arg1, ptr noalias align 128 dereferenceable(32768) %arg2, ptr noalias align 128 dereferenceable(32768) %arg3, ptr noalias align 128 dereferenceable(32768) %arg4, ptr noalias align 128 dereferenceable(32768) %arg5, ptr noalias align 128 dereferenceable(512) %arg6, ptr noalias align 128 dereferenceable(512) %arg7, ptr noalias align 128 dereferenceable(512) %arg8, ptr noalias align 128 dereferenceable(512) %arg9, ptr noalias align 128 dereferenceable(512) %arg10) {
entry:
  %return_buffer357 = alloca float, align 4
  %result_from_other_lane355 = alloca float, align 4
  %return_buffer354 = alloca float, align 4
  %result_from_other_lane352 = alloca float, align 4
  %return_buffer351 = alloca float, align 4
  %result_from_other_lane349 = alloca float, align 4
  %return_buffer348 = alloca float, align 4
  %result_from_other_lane346 = alloca float, align 4
  %return_buffer345 = alloca float, align 4
  %result_from_other_lane343 = alloca float, align 4
  %return_buffer335 = alloca float, align 4
  %result_from_other_lane333 = alloca float, align 4
  %return_buffer332 = alloca float, align 4
  %result_from_other_lane330 = alloca float, align 4
  %return_buffer329 = alloca float, align 4
  %result_from_other_lane327 = alloca float, align 4
  %return_buffer326 = alloca float, align 4
  %result_from_other_lane324 = alloca float, align 4
  %return_buffer323 = alloca float, align 4
  %result_from_other_lane321 = alloca float, align 4
  %return_buffer317 = alloca float, align 4
  %return_buffer311 = alloca float, align 4
  %tile_loop.invar_address304 = alloca i32, align 4
  %y_in_tile.invar_address298 = alloca i32, align 4
  %partial_reduction_result284 = alloca float, i32 2, align 4
  %reduction_input_address283 = alloca float, align 4
  %return_buffer278 = alloca float, align 4
  %result_from_other_lane276 = alloca float, align 4
  %return_buffer275 = alloca float, align 4
  %result_from_other_lane273 = alloca float, align 4
  %return_buffer272 = alloca float, align 4
  %result_from_other_lane270 = alloca float, align 4
  %return_buffer269 = alloca float, align 4
  %result_from_other_lane267 = alloca float, align 4
  %return_buffer266 = alloca float, align 4
  %result_from_other_lane264 = alloca float, align 4
  %return_buffer256 = alloca float, align 4
  %result_from_other_lane254 = alloca float, align 4
  %return_buffer253 = alloca float, align 4
  %result_from_other_lane251 = alloca float, align 4
  %return_buffer250 = alloca float, align 4
  %result_from_other_lane248 = alloca float, align 4
  %return_buffer247 = alloca float, align 4
  %result_from_other_lane245 = alloca float, align 4
  %return_buffer244 = alloca float, align 4
  %result_from_other_lane242 = alloca float, align 4
  %return_buffer238 = alloca float, align 4
  %return_buffer232 = alloca float, align 4
  %tile_loop.invar_address225 = alloca i32, align 4
  %y_in_tile.invar_address219 = alloca i32, align 4
  %partial_reduction_result205 = alloca float, i32 2, align 4
  %reduction_input_address204 = alloca float, align 4
  %return_buffer199 = alloca float, align 4
  %result_from_other_lane197 = alloca float, align 4
  %return_buffer196 = alloca float, align 4
  %result_from_other_lane194 = alloca float, align 4
  %return_buffer193 = alloca float, align 4
  %result_from_other_lane191 = alloca float, align 4
  %return_buffer190 = alloca float, align 4
  %result_from_other_lane188 = alloca float, align 4
  %return_buffer187 = alloca float, align 4
  %result_from_other_lane185 = alloca float, align 4
  %return_buffer177 = alloca float, align 4
  %result_from_other_lane175 = alloca float, align 4
  %return_buffer174 = alloca float, align 4
  %result_from_other_lane172 = alloca float, align 4
  %return_buffer171 = alloca float, align 4
  %result_from_other_lane169 = alloca float, align 4
  %return_buffer168 = alloca float, align 4
  %result_from_other_lane166 = alloca float, align 4
  %return_buffer165 = alloca float, align 4
  %result_from_other_lane163 = alloca float, align 4
  %return_buffer159 = alloca float, align 4
  %return_buffer153 = alloca float, align 4
  %tile_loop.invar_address146 = alloca i32, align 4
  %y_in_tile.invar_address140 = alloca i32, align 4
  %partial_reduction_result126 = alloca float, i32 2, align 4
  %reduction_input_address125 = alloca float, align 4
  %return_buffer120 = alloca float, align 4
  %result_from_other_lane118 = alloca float, align 4
  %return_buffer117 = alloca float, align 4
  %result_from_other_lane115 = alloca float, align 4
  %return_buffer114 = alloca float, align 4
  %result_from_other_lane112 = alloca float, align 4
  %return_buffer111 = alloca float, align 4
  %result_from_other_lane109 = alloca float, align 4
  %return_buffer108 = alloca float, align 4
  %result_from_other_lane106 = alloca float, align 4
  %return_buffer98 = alloca float, align 4
  %result_from_other_lane96 = alloca float, align 4
  %return_buffer95 = alloca float, align 4
  %result_from_other_lane93 = alloca float, align 4
  %return_buffer92 = alloca float, align 4
  %result_from_other_lane90 = alloca float, align 4
  %return_buffer89 = alloca float, align 4
  %result_from_other_lane87 = alloca float, align 4
  %return_buffer86 = alloca float, align 4
  %result_from_other_lane84 = alloca float, align 4
  %return_buffer80 = alloca float, align 4
  %return_buffer74 = alloca float, align 4
  %tile_loop.invar_address67 = alloca i32, align 4
  %y_in_tile.invar_address61 = alloca i32, align 4
  %partial_reduction_result47 = alloca float, i32 2, align 4
  %reduction_input_address46 = alloca float, align 4
  %return_buffer41 = alloca float, align 4
  %result_from_other_lane39 = alloca float, align 4
  %return_buffer38 = alloca float, align 4
  %result_from_other_lane36 = alloca float, align 4
  %return_buffer35 = alloca float, align 4
  %result_from_other_lane33 = alloca float, align 4
  %return_buffer32 = alloca float, align 4
  %result_from_other_lane30 = alloca float, align 4
  %return_buffer29 = alloca float, align 4
  %result_from_other_lane27 = alloca float, align 4
  %return_buffer23 = alloca float, align 4
  %result_from_other_lane21 = alloca float, align 4
  %return_buffer20 = alloca float, align 4
  %result_from_other_lane18 = alloca float, align 4
  %return_buffer17 = alloca float, align 4
  %result_from_other_lane15 = alloca float, align 4
  %return_buffer14 = alloca float, align 4
  %result_from_other_lane12 = alloca float, align 4
  %return_buffer11 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer9 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, i32 2, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !432
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after43, %entry
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %reduce-group-1-true, label %reduce-group-1-after

reduce-group-1-after:                             ; preds = %reduction_write_output-after122, %reduce-group-0-after
  %3 = icmp eq i32 %0, 2
  br i1 %3, label %reduce-group-2-true, label %reduce-group-2-after

reduce-group-2-after:                             ; preds = %reduction_write_output-after201, %reduce-group-1-after
  %4 = icmp eq i32 %0, 3
  br i1 %4, label %reduce-group-3-true, label %reduce-group-3-after

reduce-group-3-after:                             ; preds = %reduction_write_output-after280, %reduce-group-2-after
  %5 = icmp eq i32 %0, 4
  br i1 %5, label %reduce-group-4-true, label %reduce-group-4-after

reduce-group-4-after:                             ; preds = %reduction_write_output-after359, %reduce-group-3-after
  ret void

reduce-group-0-true:                              ; preds = %entry
  %Arg_1.2 = load float, ptr %arg1, align 4, !invariant.load !297
  %6 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %Arg_1.2, ptr %6, align 4
  %7 = getelementptr inbounds float, ptr %partial_reduction_result, i32 1
  store float %Arg_1.2, ptr %7, align 4
  %8 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %9 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !344
  %10 = urem i32 %8, 1024
  %11 = udiv i32 %8, 1024
  %12 = mul i32 %9, 1
  %13 = add i32 %12, %11
  %14 = icmp ult i32 %13, 2
  br i1 %14, label %15, label %early_return

15:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %10, 32
  %thread_id.y = udiv i32 %10, 32
  %lane_id = urem i32 %10, 32
  %16 = udiv i32 %13, 1
  %17 = urem i32 %16, 2
  %18 = udiv i32 %13, 2
  %19 = urem i32 %18, 1
  %20 = udiv i32 %13, 2
  %21 = icmp eq i32 %19, 0
  %tile_bound = select i1 %21, i32 64, i32 4096
  %22 = icmp eq i32 %17, 1
  %tile_bound1 = select i1 %22, i32 64, i32 64
  %tile_origin.0 = mul i32 %20, 1
  %tile_origin.1 = mul i32 %19, 4096
  %tile_origin.2 = mul i32 %17, 64
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %15
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %23 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %23, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %24 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %25 = mul i32 %thread_id.x, 2
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after6, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %26 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %26, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %27 = icmp eq i32 %tile_loop.indvar, 0
  %28 = mul i32 %tile_loop.indvar, 2
  %29 = add i32 %28, 0
  %x_loc = add i32 %29, %25
  %30 = add i32 %tile_origin.1, %y_in_tile.indvar
  %31 = add i32 %tile_origin.2, %x_loc
  %32 = icmp ult i32 %x_loc, %tile_bound1
  br i1 %32, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body
  %33 = mul i32 %tile_loop.indvar, 2
  %34 = add i32 %33, 1
  %x_loc4 = add i32 %34, %25
  %35 = add i32 %tile_origin.1, %y_in_tile.indvar
  %36 = add i32 %tile_origin.2, %x_loc4
  %37 = icmp ult i32 %x_loc4, %tile_bound1
  br i1 %37, label %x_in_tile-true5, label %x_in_tile-after6

x_in_tile-after6:                                 ; preds = %x_in_tile-true5, %x_in_tile-after
  br label %tile_loop.loop_header, !llvm.loop !433

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !434

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache73, i32 0, i32 %11, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %38 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %39 = load float, ptr %current_output, align 4
  store float %39, ptr %38, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache73, i32 0, i32 %11, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %40 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result10 = load float, ptr %40, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result10, i32 16, i32 31)
  store float %41, ptr %result_from_other_lane, align 4
  call void @region_1_7(ptr %40, ptr %result_from_other_lane, ptr %return_buffer11)
  %42 = load float, ptr %return_buffer11, align 4
  store float %42, ptr %40, align 4
  %partial_reduction_result13 = load float, ptr %40, align 4
  %43 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result13, i32 8, i32 31)
  store float %43, ptr %result_from_other_lane12, align 4
  call void @region_1_7(ptr %40, ptr %result_from_other_lane12, ptr %return_buffer14)
  %44 = load float, ptr %return_buffer14, align 4
  store float %44, ptr %40, align 4
  %partial_reduction_result16 = load float, ptr %40, align 4
  %45 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result16, i32 4, i32 31)
  store float %45, ptr %result_from_other_lane15, align 4
  call void @region_1_7(ptr %40, ptr %result_from_other_lane15, ptr %return_buffer17)
  %46 = load float, ptr %return_buffer17, align 4
  store float %46, ptr %40, align 4
  %partial_reduction_result19 = load float, ptr %40, align 4
  %47 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result19, i32 2, i32 31)
  store float %47, ptr %result_from_other_lane18, align 4
  call void @region_1_7(ptr %40, ptr %result_from_other_lane18, ptr %return_buffer20)
  %48 = load float, ptr %return_buffer20, align 4
  store float %48, ptr %40, align 4
  %partial_reduction_result22 = load float, ptr %40, align 4
  %49 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result22, i32 1, i32 31)
  store float %49, ptr %result_from_other_lane21, align 4
  call void @region_1_7(ptr %40, ptr %result_from_other_lane21, ptr %return_buffer23)
  %50 = load float, ptr %return_buffer23, align 4
  store float %50, ptr %40, align 4
  %51 = icmp ult i32 %thread_id.x, %tile_bound
  %52 = mul i32 %thread_id.y, 2
  %53 = icmp ult i32 %52, %tile_bound1
  %54 = and i1 %53, %51
  %55 = icmp eq i32 %lane_id, 0
  %56 = and i1 %54, %55
  br i1 %56, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %shmem_output_address24 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache73, i32 0, i32 %11, i32 1, i32 %thread_id.x, i32 %thread_id.y
  %57 = addrspacecast ptr addrspace(3) %shmem_output_address24 to ptr
  %current_output25 = getelementptr inbounds float, ptr %partial_reduction_result, i32 1
  %58 = load float, ptr %current_output25, align 4
  store float %58, ptr %57, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr26 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache73, i32 0, i32 %11, i32 1, i32 %thread_id.y, i32 %thread_id.x
  %59 = addrspacecast ptr addrspace(3) %shmem_transposed_addr26 to ptr
  %partial_reduction_result28 = load float, ptr %59, align 4
  %60 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result28, i32 16, i32 31)
  store float %60, ptr %result_from_other_lane27, align 4
  call void @region_1_7(ptr %59, ptr %result_from_other_lane27, ptr %return_buffer29)
  %61 = load float, ptr %return_buffer29, align 4
  store float %61, ptr %59, align 4
  %partial_reduction_result31 = load float, ptr %59, align 4
  %62 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result31, i32 8, i32 31)
  store float %62, ptr %result_from_other_lane30, align 4
  call void @region_1_7(ptr %59, ptr %result_from_other_lane30, ptr %return_buffer32)
  %63 = load float, ptr %return_buffer32, align 4
  store float %63, ptr %59, align 4
  %partial_reduction_result34 = load float, ptr %59, align 4
  %64 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result34, i32 4, i32 31)
  store float %64, ptr %result_from_other_lane33, align 4
  call void @region_1_7(ptr %59, ptr %result_from_other_lane33, ptr %return_buffer35)
  %65 = load float, ptr %return_buffer35, align 4
  store float %65, ptr %59, align 4
  %partial_reduction_result37 = load float, ptr %59, align 4
  %66 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result37, i32 2, i32 31)
  store float %66, ptr %result_from_other_lane36, align 4
  call void @region_1_7(ptr %59, ptr %result_from_other_lane36, ptr %return_buffer38)
  %67 = load float, ptr %return_buffer38, align 4
  store float %67, ptr %59, align 4
  %partial_reduction_result40 = load float, ptr %59, align 4
  %68 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result40, i32 1, i32 31)
  store float %68, ptr %result_from_other_lane39, align 4
  call void @region_1_7(ptr %59, ptr %result_from_other_lane39, ptr %return_buffer41)
  %69 = load float, ptr %return_buffer41, align 4
  store float %69, ptr %59, align 4
  %70 = icmp ult i32 %thread_id.x, %tile_bound
  %71 = mul i32 %thread_id.y, 2
  %72 = icmp ult i32 %71, %tile_bound1
  %73 = and i1 %72, %70
  %74 = icmp eq i32 %lane_id, 0
  %75 = and i1 %73, %74
  br i1 %75, label %reduction_write_output-true42, label %reduction_write_output-after43

reduction_write_output-after43:                   ; preds = %reduction_write_output-true42, %reduction_write_output-after
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %76 = mul i32 %thread_id.x, 2
  %77 = sub i32 %x_loc, %76
  %Arg_0.1 = getelementptr inbounds [64 x [128 x float]], ptr %arg0, i32 0, i32 %30, i32 %31
  %Arg_0.13 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  store float %Arg_0.13, ptr %reduction_input_address, align 4
  %78 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %77
  call void @region_1_7(ptr %78, ptr %reduction_input_address, ptr %return_buffer)
  %79 = load float, ptr %return_buffer, align 4
  store float %79, ptr %78, align 4
  br label %x_in_tile-after

x_in_tile-true5:                                  ; preds = %x_in_tile-after
  %80 = mul i32 %thread_id.x, 2
  %81 = sub i32 %x_loc4, %80
  %Arg_0.17 = getelementptr inbounds [64 x [128 x float]], ptr %arg0, i32 0, i32 %35, i32 %36
  %Arg_0.18 = load float, ptr %Arg_0.17, align 4, !invariant.load !297
  store float %Arg_0.18, ptr %reduction_input_address, align 4
  %82 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %81
  call void @region_1_7(ptr %82, ptr %reduction_input_address, ptr %return_buffer9)
  %83 = load float, ptr %return_buffer9, align 4
  store float %83, ptr %82, align 4
  br label %x_in_tile-after6

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %84 = mul i32 %thread_id.y, 2
  %85 = add i32 %tile_origin.1, %thread_id.x
  %86 = add i32 %tile_origin.2, %84
  %87 = add i32 %86, 0
  %88 = mul i32 %tile_origin.0, 128
  %89 = add i32 %88, %87
  %90 = udiv i32 %89, 1
  %output_element_address = getelementptr inbounds [128 x float], ptr %arg6, i32 0, i32 %90
  %output = load float, ptr %40, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

reduction_write_output-true42:                    ; preds = %reduction_write_output-after
  %91 = mul i32 %thread_id.y, 2
  %92 = add i32 %tile_origin.1, %thread_id.x
  %93 = add i32 %tile_origin.2, %91
  %94 = add i32 %93, 1
  %95 = mul i32 %tile_origin.0, 128
  %96 = add i32 %95, %94
  %97 = udiv i32 %96, 1
  %output_element_address44 = getelementptr inbounds [128 x float], ptr %arg6, i32 0, i32 %97
  %output45 = load float, ptr %59, align 4
  store float %output45, ptr %output_element_address44, align 4
  br label %reduction_write_output-after43

reduce-group-1-true:                              ; preds = %reduce-group-0-after
  %Arg_1.248 = load float, ptr %arg1, align 4, !invariant.load !297
  %98 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 0
  store float %Arg_1.248, ptr %98, align 4
  %99 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 1
  store float %Arg_1.248, ptr %99, align 4
  %100 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %101 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !344
  %102 = urem i32 %100, 1024
  %103 = udiv i32 %100, 1024
  %104 = mul i32 %101, 1
  %105 = add i32 %104, %103
  %106 = icmp ult i32 %105, 2
  br i1 %106, label %107, label %early_return49

107:                                              ; preds = %reduce-group-1-true
  %thread_id.x50 = urem i32 %102, 32
  %thread_id.y51 = udiv i32 %102, 32
  %lane_id52 = urem i32 %102, 32
  %108 = udiv i32 %105, 1
  %109 = urem i32 %108, 2
  %110 = udiv i32 %105, 2
  %111 = urem i32 %110, 1
  %112 = udiv i32 %105, 2
  %113 = icmp eq i32 %111, 0
  %tile_bound53 = select i1 %113, i32 64, i32 4096
  %114 = icmp eq i32 %109, 1
  %tile_bound54 = select i1 %114, i32 64, i32 64
  %tile_origin.055 = mul i32 %112, 1
  %tile_origin.156 = mul i32 %111, 4096
  %tile_origin.257 = mul i32 %109, 64
  store i32 %thread_id.y51, ptr %y_in_tile.invar_address61, align 4
  br label %y_in_tile.loop_header59

y_in_tile.loop_header59:                          ; preds = %tile_loop.loop_exit64, %107
  %y_in_tile.indvar62 = load i32, ptr %y_in_tile.invar_address61, align 4
  %115 = icmp uge i32 %y_in_tile.indvar62, %tile_bound53
  br i1 %115, label %y_in_tile.loop_exit58, label %y_in_tile.loop_body60

y_in_tile.loop_body60:                            ; preds = %y_in_tile.loop_header59
  %invar.inc63 = add nuw nsw i32 %y_in_tile.indvar62, 32
  store i32 %invar.inc63, ptr %y_in_tile.invar_address61, align 4
  %116 = icmp eq i32 %y_in_tile.indvar62, %thread_id.y51
  %117 = mul i32 %thread_id.x50, 2
  store i32 0, ptr %tile_loop.invar_address67, align 4
  br label %tile_loop.loop_header65

tile_loop.loop_header65:                          ; preds = %x_in_tile-after77, %y_in_tile.loop_body60
  %tile_loop.indvar68 = load i32, ptr %tile_loop.invar_address67, align 4
  %118 = icmp uge i32 %tile_loop.indvar68, 1
  br i1 %118, label %tile_loop.loop_exit64, label %tile_loop.loop_body66

tile_loop.loop_body66:                            ; preds = %tile_loop.loop_header65
  %invar.inc69 = add nuw nsw i32 %tile_loop.indvar68, 1
  store i32 %invar.inc69, ptr %tile_loop.invar_address67, align 4
  %119 = icmp eq i32 %tile_loop.indvar68, 0
  %120 = mul i32 %tile_loop.indvar68, 2
  %121 = add i32 %120, 0
  %x_loc70 = add i32 %121, %117
  %122 = add i32 %tile_origin.156, %y_in_tile.indvar62
  %123 = add i32 %tile_origin.257, %x_loc70
  %124 = icmp ult i32 %x_loc70, %tile_bound54
  br i1 %124, label %x_in_tile-true71, label %x_in_tile-after72

x_in_tile-after72:                                ; preds = %x_in_tile-true71, %tile_loop.loop_body66
  %125 = mul i32 %tile_loop.indvar68, 2
  %126 = add i32 %125, 1
  %x_loc75 = add i32 %126, %117
  %127 = add i32 %tile_origin.156, %y_in_tile.indvar62
  %128 = add i32 %tile_origin.257, %x_loc75
  %129 = icmp ult i32 %x_loc75, %tile_bound54
  br i1 %129, label %x_in_tile-true76, label %x_in_tile-after77

x_in_tile-after77:                                ; preds = %x_in_tile-true76, %x_in_tile-after72
  br label %tile_loop.loop_header65, !llvm.loop !435

tile_loop.loop_exit64:                            ; preds = %tile_loop.loop_header65
  br label %y_in_tile.loop_header59, !llvm.loop !436

y_in_tile.loop_exit58:                            ; preds = %y_in_tile.loop_header59
  %shmem_output_address81 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache74, i32 0, i32 %103, i32 0, i32 %thread_id.x50, i32 %thread_id.y51
  %130 = addrspacecast ptr addrspace(3) %shmem_output_address81 to ptr
  %current_output82 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 0
  %131 = load float, ptr %current_output82, align 4
  store float %131, ptr %130, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr83 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache74, i32 0, i32 %103, i32 0, i32 %thread_id.y51, i32 %thread_id.x50
  %132 = addrspacecast ptr addrspace(3) %shmem_transposed_addr83 to ptr
  %partial_reduction_result85 = load float, ptr %132, align 4
  %133 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result85, i32 16, i32 31)
  store float %133, ptr %result_from_other_lane84, align 4
  call void @region_2_12(ptr %132, ptr %result_from_other_lane84, ptr %return_buffer86)
  %134 = load float, ptr %return_buffer86, align 4
  store float %134, ptr %132, align 4
  %partial_reduction_result88 = load float, ptr %132, align 4
  %135 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result88, i32 8, i32 31)
  store float %135, ptr %result_from_other_lane87, align 4
  call void @region_2_12(ptr %132, ptr %result_from_other_lane87, ptr %return_buffer89)
  %136 = load float, ptr %return_buffer89, align 4
  store float %136, ptr %132, align 4
  %partial_reduction_result91 = load float, ptr %132, align 4
  %137 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result91, i32 4, i32 31)
  store float %137, ptr %result_from_other_lane90, align 4
  call void @region_2_12(ptr %132, ptr %result_from_other_lane90, ptr %return_buffer92)
  %138 = load float, ptr %return_buffer92, align 4
  store float %138, ptr %132, align 4
  %partial_reduction_result94 = load float, ptr %132, align 4
  %139 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result94, i32 2, i32 31)
  store float %139, ptr %result_from_other_lane93, align 4
  call void @region_2_12(ptr %132, ptr %result_from_other_lane93, ptr %return_buffer95)
  %140 = load float, ptr %return_buffer95, align 4
  store float %140, ptr %132, align 4
  %partial_reduction_result97 = load float, ptr %132, align 4
  %141 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result97, i32 1, i32 31)
  store float %141, ptr %result_from_other_lane96, align 4
  call void @region_2_12(ptr %132, ptr %result_from_other_lane96, ptr %return_buffer98)
  %142 = load float, ptr %return_buffer98, align 4
  store float %142, ptr %132, align 4
  %143 = icmp ult i32 %thread_id.x50, %tile_bound53
  %144 = mul i32 %thread_id.y51, 2
  %145 = icmp ult i32 %144, %tile_bound54
  %146 = and i1 %145, %143
  %147 = icmp eq i32 %lane_id52, 0
  %148 = and i1 %146, %147
  br i1 %148, label %reduction_write_output-true99, label %reduction_write_output-after100

reduction_write_output-after100:                  ; preds = %reduction_write_output-true99, %y_in_tile.loop_exit58
  %shmem_output_address103 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache74, i32 0, i32 %103, i32 1, i32 %thread_id.x50, i32 %thread_id.y51
  %149 = addrspacecast ptr addrspace(3) %shmem_output_address103 to ptr
  %current_output104 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 1
  %150 = load float, ptr %current_output104, align 4
  store float %150, ptr %149, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr105 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache74, i32 0, i32 %103, i32 1, i32 %thread_id.y51, i32 %thread_id.x50
  %151 = addrspacecast ptr addrspace(3) %shmem_transposed_addr105 to ptr
  %partial_reduction_result107 = load float, ptr %151, align 4
  %152 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result107, i32 16, i32 31)
  store float %152, ptr %result_from_other_lane106, align 4
  call void @region_2_12(ptr %151, ptr %result_from_other_lane106, ptr %return_buffer108)
  %153 = load float, ptr %return_buffer108, align 4
  store float %153, ptr %151, align 4
  %partial_reduction_result110 = load float, ptr %151, align 4
  %154 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result110, i32 8, i32 31)
  store float %154, ptr %result_from_other_lane109, align 4
  call void @region_2_12(ptr %151, ptr %result_from_other_lane109, ptr %return_buffer111)
  %155 = load float, ptr %return_buffer111, align 4
  store float %155, ptr %151, align 4
  %partial_reduction_result113 = load float, ptr %151, align 4
  %156 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result113, i32 4, i32 31)
  store float %156, ptr %result_from_other_lane112, align 4
  call void @region_2_12(ptr %151, ptr %result_from_other_lane112, ptr %return_buffer114)
  %157 = load float, ptr %return_buffer114, align 4
  store float %157, ptr %151, align 4
  %partial_reduction_result116 = load float, ptr %151, align 4
  %158 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result116, i32 2, i32 31)
  store float %158, ptr %result_from_other_lane115, align 4
  call void @region_2_12(ptr %151, ptr %result_from_other_lane115, ptr %return_buffer117)
  %159 = load float, ptr %return_buffer117, align 4
  store float %159, ptr %151, align 4
  %partial_reduction_result119 = load float, ptr %151, align 4
  %160 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result119, i32 1, i32 31)
  store float %160, ptr %result_from_other_lane118, align 4
  call void @region_2_12(ptr %151, ptr %result_from_other_lane118, ptr %return_buffer120)
  %161 = load float, ptr %return_buffer120, align 4
  store float %161, ptr %151, align 4
  %162 = icmp ult i32 %thread_id.x50, %tile_bound53
  %163 = mul i32 %thread_id.y51, 2
  %164 = icmp ult i32 %163, %tile_bound54
  %165 = and i1 %164, %162
  %166 = icmp eq i32 %lane_id52, 0
  %167 = and i1 %165, %166
  br i1 %167, label %reduction_write_output-true121, label %reduction_write_output-after122

reduction_write_output-after122:                  ; preds = %reduction_write_output-true121, %reduction_write_output-after100
  br label %reduce-group-1-after

early_return49:                                   ; preds = %reduce-group-1-true
  ret void

x_in_tile-true71:                                 ; preds = %tile_loop.loop_body66
  %168 = mul i32 %thread_id.x50, 2
  %169 = sub i32 %x_loc70, %168
  %Arg_2.3 = getelementptr inbounds [64 x [128 x float]], ptr %arg2, i32 0, i32 %122, i32 %123
  %Arg_2.373 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  store float %Arg_2.373, ptr %reduction_input_address46, align 4
  %170 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 %169
  call void @region_2_12(ptr %170, ptr %reduction_input_address46, ptr %return_buffer74)
  %171 = load float, ptr %return_buffer74, align 4
  store float %171, ptr %170, align 4
  br label %x_in_tile-after72

x_in_tile-true76:                                 ; preds = %x_in_tile-after72
  %172 = mul i32 %thread_id.x50, 2
  %173 = sub i32 %x_loc75, %172
  %Arg_2.378 = getelementptr inbounds [64 x [128 x float]], ptr %arg2, i32 0, i32 %127, i32 %128
  %Arg_2.379 = load float, ptr %Arg_2.378, align 4, !invariant.load !297
  store float %Arg_2.379, ptr %reduction_input_address46, align 4
  %174 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 %173
  call void @region_2_12(ptr %174, ptr %reduction_input_address46, ptr %return_buffer80)
  %175 = load float, ptr %return_buffer80, align 4
  store float %175, ptr %174, align 4
  br label %x_in_tile-after77

reduction_write_output-true99:                    ; preds = %y_in_tile.loop_exit58
  %176 = mul i32 %thread_id.y51, 2
  %177 = add i32 %tile_origin.156, %thread_id.x50
  %178 = add i32 %tile_origin.257, %176
  %179 = add i32 %178, 0
  %180 = mul i32 %tile_origin.055, 128
  %181 = add i32 %180, %179
  %182 = udiv i32 %181, 1
  %output_element_address101 = getelementptr inbounds [128 x float], ptr %arg7, i32 0, i32 %182
  %output102 = load float, ptr %132, align 4
  store float %output102, ptr %output_element_address101, align 4
  br label %reduction_write_output-after100

reduction_write_output-true121:                   ; preds = %reduction_write_output-after100
  %183 = mul i32 %thread_id.y51, 2
  %184 = add i32 %tile_origin.156, %thread_id.x50
  %185 = add i32 %tile_origin.257, %183
  %186 = add i32 %185, 1
  %187 = mul i32 %tile_origin.055, 128
  %188 = add i32 %187, %186
  %189 = udiv i32 %188, 1
  %output_element_address123 = getelementptr inbounds [128 x float], ptr %arg7, i32 0, i32 %189
  %output124 = load float, ptr %151, align 4
  store float %output124, ptr %output_element_address123, align 4
  br label %reduction_write_output-after122

reduce-group-2-true:                              ; preds = %reduce-group-1-after
  %Arg_1.2127 = load float, ptr %arg1, align 4, !invariant.load !297
  %190 = getelementptr inbounds float, ptr %partial_reduction_result126, i32 0
  store float %Arg_1.2127, ptr %190, align 4
  %191 = getelementptr inbounds float, ptr %partial_reduction_result126, i32 1
  store float %Arg_1.2127, ptr %191, align 4
  %192 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %193 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !344
  %194 = urem i32 %192, 1024
  %195 = udiv i32 %192, 1024
  %196 = mul i32 %193, 1
  %197 = add i32 %196, %195
  %198 = icmp ult i32 %197, 2
  br i1 %198, label %199, label %early_return128

199:                                              ; preds = %reduce-group-2-true
  %thread_id.x129 = urem i32 %194, 32
  %thread_id.y130 = udiv i32 %194, 32
  %lane_id131 = urem i32 %194, 32
  %200 = udiv i32 %197, 1
  %201 = urem i32 %200, 2
  %202 = udiv i32 %197, 2
  %203 = urem i32 %202, 1
  %204 = udiv i32 %197, 2
  %205 = icmp eq i32 %203, 0
  %tile_bound132 = select i1 %205, i32 64, i32 4096
  %206 = icmp eq i32 %201, 1
  %tile_bound133 = select i1 %206, i32 64, i32 64
  %tile_origin.0134 = mul i32 %204, 1
  %tile_origin.1135 = mul i32 %203, 4096
  %tile_origin.2136 = mul i32 %201, 64
  store i32 %thread_id.y130, ptr %y_in_tile.invar_address140, align 4
  br label %y_in_tile.loop_header138

y_in_tile.loop_header138:                         ; preds = %tile_loop.loop_exit143, %199
  %y_in_tile.indvar141 = load i32, ptr %y_in_tile.invar_address140, align 4
  %207 = icmp uge i32 %y_in_tile.indvar141, %tile_bound132
  br i1 %207, label %y_in_tile.loop_exit137, label %y_in_tile.loop_body139

y_in_tile.loop_body139:                           ; preds = %y_in_tile.loop_header138
  %invar.inc142 = add nuw nsw i32 %y_in_tile.indvar141, 32
  store i32 %invar.inc142, ptr %y_in_tile.invar_address140, align 4
  %208 = icmp eq i32 %y_in_tile.indvar141, %thread_id.y130
  %209 = mul i32 %thread_id.x129, 2
  store i32 0, ptr %tile_loop.invar_address146, align 4
  br label %tile_loop.loop_header144

tile_loop.loop_header144:                         ; preds = %x_in_tile-after156, %y_in_tile.loop_body139
  %tile_loop.indvar147 = load i32, ptr %tile_loop.invar_address146, align 4
  %210 = icmp uge i32 %tile_loop.indvar147, 1
  br i1 %210, label %tile_loop.loop_exit143, label %tile_loop.loop_body145

tile_loop.loop_body145:                           ; preds = %tile_loop.loop_header144
  %invar.inc148 = add nuw nsw i32 %tile_loop.indvar147, 1
  store i32 %invar.inc148, ptr %tile_loop.invar_address146, align 4
  %211 = icmp eq i32 %tile_loop.indvar147, 0
  %212 = mul i32 %tile_loop.indvar147, 2
  %213 = add i32 %212, 0
  %x_loc149 = add i32 %213, %209
  %214 = add i32 %tile_origin.1135, %y_in_tile.indvar141
  %215 = add i32 %tile_origin.2136, %x_loc149
  %216 = icmp ult i32 %x_loc149, %tile_bound133
  br i1 %216, label %x_in_tile-true150, label %x_in_tile-after151

x_in_tile-after151:                               ; preds = %x_in_tile-true150, %tile_loop.loop_body145
  %217 = mul i32 %tile_loop.indvar147, 2
  %218 = add i32 %217, 1
  %x_loc154 = add i32 %218, %209
  %219 = add i32 %tile_origin.1135, %y_in_tile.indvar141
  %220 = add i32 %tile_origin.2136, %x_loc154
  %221 = icmp ult i32 %x_loc154, %tile_bound133
  br i1 %221, label %x_in_tile-true155, label %x_in_tile-after156

x_in_tile-after156:                               ; preds = %x_in_tile-true155, %x_in_tile-after151
  br label %tile_loop.loop_header144, !llvm.loop !437

tile_loop.loop_exit143:                           ; preds = %tile_loop.loop_header144
  br label %y_in_tile.loop_header138, !llvm.loop !438

y_in_tile.loop_exit137:                           ; preds = %y_in_tile.loop_header138
  %shmem_output_address160 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache75, i32 0, i32 %195, i32 0, i32 %thread_id.x129, i32 %thread_id.y130
  %222 = addrspacecast ptr addrspace(3) %shmem_output_address160 to ptr
  %current_output161 = getelementptr inbounds float, ptr %partial_reduction_result126, i32 0
  %223 = load float, ptr %current_output161, align 4
  store float %223, ptr %222, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr162 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache75, i32 0, i32 %195, i32 0, i32 %thread_id.y130, i32 %thread_id.x129
  %224 = addrspacecast ptr addrspace(3) %shmem_transposed_addr162 to ptr
  %partial_reduction_result164 = load float, ptr %224, align 4
  %225 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result164, i32 16, i32 31)
  store float %225, ptr %result_from_other_lane163, align 4
  call void @region_3_17(ptr %224, ptr %result_from_other_lane163, ptr %return_buffer165)
  %226 = load float, ptr %return_buffer165, align 4
  store float %226, ptr %224, align 4
  %partial_reduction_result167 = load float, ptr %224, align 4
  %227 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result167, i32 8, i32 31)
  store float %227, ptr %result_from_other_lane166, align 4
  call void @region_3_17(ptr %224, ptr %result_from_other_lane166, ptr %return_buffer168)
  %228 = load float, ptr %return_buffer168, align 4
  store float %228, ptr %224, align 4
  %partial_reduction_result170 = load float, ptr %224, align 4
  %229 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result170, i32 4, i32 31)
  store float %229, ptr %result_from_other_lane169, align 4
  call void @region_3_17(ptr %224, ptr %result_from_other_lane169, ptr %return_buffer171)
  %230 = load float, ptr %return_buffer171, align 4
  store float %230, ptr %224, align 4
  %partial_reduction_result173 = load float, ptr %224, align 4
  %231 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result173, i32 2, i32 31)
  store float %231, ptr %result_from_other_lane172, align 4
  call void @region_3_17(ptr %224, ptr %result_from_other_lane172, ptr %return_buffer174)
  %232 = load float, ptr %return_buffer174, align 4
  store float %232, ptr %224, align 4
  %partial_reduction_result176 = load float, ptr %224, align 4
  %233 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result176, i32 1, i32 31)
  store float %233, ptr %result_from_other_lane175, align 4
  call void @region_3_17(ptr %224, ptr %result_from_other_lane175, ptr %return_buffer177)
  %234 = load float, ptr %return_buffer177, align 4
  store float %234, ptr %224, align 4
  %235 = icmp ult i32 %thread_id.x129, %tile_bound132
  %236 = mul i32 %thread_id.y130, 2
  %237 = icmp ult i32 %236, %tile_bound133
  %238 = and i1 %237, %235
  %239 = icmp eq i32 %lane_id131, 0
  %240 = and i1 %238, %239
  br i1 %240, label %reduction_write_output-true178, label %reduction_write_output-after179

reduction_write_output-after179:                  ; preds = %reduction_write_output-true178, %y_in_tile.loop_exit137
  %shmem_output_address182 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache75, i32 0, i32 %195, i32 1, i32 %thread_id.x129, i32 %thread_id.y130
  %241 = addrspacecast ptr addrspace(3) %shmem_output_address182 to ptr
  %current_output183 = getelementptr inbounds float, ptr %partial_reduction_result126, i32 1
  %242 = load float, ptr %current_output183, align 4
  store float %242, ptr %241, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr184 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache75, i32 0, i32 %195, i32 1, i32 %thread_id.y130, i32 %thread_id.x129
  %243 = addrspacecast ptr addrspace(3) %shmem_transposed_addr184 to ptr
  %partial_reduction_result186 = load float, ptr %243, align 4
  %244 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result186, i32 16, i32 31)
  store float %244, ptr %result_from_other_lane185, align 4
  call void @region_3_17(ptr %243, ptr %result_from_other_lane185, ptr %return_buffer187)
  %245 = load float, ptr %return_buffer187, align 4
  store float %245, ptr %243, align 4
  %partial_reduction_result189 = load float, ptr %243, align 4
  %246 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result189, i32 8, i32 31)
  store float %246, ptr %result_from_other_lane188, align 4
  call void @region_3_17(ptr %243, ptr %result_from_other_lane188, ptr %return_buffer190)
  %247 = load float, ptr %return_buffer190, align 4
  store float %247, ptr %243, align 4
  %partial_reduction_result192 = load float, ptr %243, align 4
  %248 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result192, i32 4, i32 31)
  store float %248, ptr %result_from_other_lane191, align 4
  call void @region_3_17(ptr %243, ptr %result_from_other_lane191, ptr %return_buffer193)
  %249 = load float, ptr %return_buffer193, align 4
  store float %249, ptr %243, align 4
  %partial_reduction_result195 = load float, ptr %243, align 4
  %250 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result195, i32 2, i32 31)
  store float %250, ptr %result_from_other_lane194, align 4
  call void @region_3_17(ptr %243, ptr %result_from_other_lane194, ptr %return_buffer196)
  %251 = load float, ptr %return_buffer196, align 4
  store float %251, ptr %243, align 4
  %partial_reduction_result198 = load float, ptr %243, align 4
  %252 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result198, i32 1, i32 31)
  store float %252, ptr %result_from_other_lane197, align 4
  call void @region_3_17(ptr %243, ptr %result_from_other_lane197, ptr %return_buffer199)
  %253 = load float, ptr %return_buffer199, align 4
  store float %253, ptr %243, align 4
  %254 = icmp ult i32 %thread_id.x129, %tile_bound132
  %255 = mul i32 %thread_id.y130, 2
  %256 = icmp ult i32 %255, %tile_bound133
  %257 = and i1 %256, %254
  %258 = icmp eq i32 %lane_id131, 0
  %259 = and i1 %257, %258
  br i1 %259, label %reduction_write_output-true200, label %reduction_write_output-after201

reduction_write_output-after201:                  ; preds = %reduction_write_output-true200, %reduction_write_output-after179
  br label %reduce-group-2-after

early_return128:                                  ; preds = %reduce-group-2-true
  ret void

x_in_tile-true150:                                ; preds = %tile_loop.loop_body145
  %260 = mul i32 %thread_id.x129, 2
  %261 = sub i32 %x_loc149, %260
  %Arg_3.4 = getelementptr inbounds [64 x [128 x float]], ptr %arg3, i32 0, i32 %214, i32 %215
  %Arg_3.4152 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  store float %Arg_3.4152, ptr %reduction_input_address125, align 4
  %262 = getelementptr inbounds float, ptr %partial_reduction_result126, i32 %261
  call void @region_3_17(ptr %262, ptr %reduction_input_address125, ptr %return_buffer153)
  %263 = load float, ptr %return_buffer153, align 4
  store float %263, ptr %262, align 4
  br label %x_in_tile-after151

x_in_tile-true155:                                ; preds = %x_in_tile-after151
  %264 = mul i32 %thread_id.x129, 2
  %265 = sub i32 %x_loc154, %264
  %Arg_3.4157 = getelementptr inbounds [64 x [128 x float]], ptr %arg3, i32 0, i32 %219, i32 %220
  %Arg_3.4158 = load float, ptr %Arg_3.4157, align 4, !invariant.load !297
  store float %Arg_3.4158, ptr %reduction_input_address125, align 4
  %266 = getelementptr inbounds float, ptr %partial_reduction_result126, i32 %265
  call void @region_3_17(ptr %266, ptr %reduction_input_address125, ptr %return_buffer159)
  %267 = load float, ptr %return_buffer159, align 4
  store float %267, ptr %266, align 4
  br label %x_in_tile-after156

reduction_write_output-true178:                   ; preds = %y_in_tile.loop_exit137
  %268 = mul i32 %thread_id.y130, 2
  %269 = add i32 %tile_origin.1135, %thread_id.x129
  %270 = add i32 %tile_origin.2136, %268
  %271 = add i32 %270, 0
  %272 = mul i32 %tile_origin.0134, 128
  %273 = add i32 %272, %271
  %274 = udiv i32 %273, 1
  %output_element_address180 = getelementptr inbounds [128 x float], ptr %arg8, i32 0, i32 %274
  %output181 = load float, ptr %224, align 4
  store float %output181, ptr %output_element_address180, align 4
  br label %reduction_write_output-after179

reduction_write_output-true200:                   ; preds = %reduction_write_output-after179
  %275 = mul i32 %thread_id.y130, 2
  %276 = add i32 %tile_origin.1135, %thread_id.x129
  %277 = add i32 %tile_origin.2136, %275
  %278 = add i32 %277, 1
  %279 = mul i32 %tile_origin.0134, 128
  %280 = add i32 %279, %278
  %281 = udiv i32 %280, 1
  %output_element_address202 = getelementptr inbounds [128 x float], ptr %arg8, i32 0, i32 %281
  %output203 = load float, ptr %243, align 4
  store float %output203, ptr %output_element_address202, align 4
  br label %reduction_write_output-after201

reduce-group-3-true:                              ; preds = %reduce-group-2-after
  %Arg_1.2206 = load float, ptr %arg1, align 4, !invariant.load !297
  %282 = getelementptr inbounds float, ptr %partial_reduction_result205, i32 0
  store float %Arg_1.2206, ptr %282, align 4
  %283 = getelementptr inbounds float, ptr %partial_reduction_result205, i32 1
  store float %Arg_1.2206, ptr %283, align 4
  %284 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %285 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !344
  %286 = urem i32 %284, 1024
  %287 = udiv i32 %284, 1024
  %288 = mul i32 %285, 1
  %289 = add i32 %288, %287
  %290 = icmp ult i32 %289, 2
  br i1 %290, label %291, label %early_return207

291:                                              ; preds = %reduce-group-3-true
  %thread_id.x208 = urem i32 %286, 32
  %thread_id.y209 = udiv i32 %286, 32
  %lane_id210 = urem i32 %286, 32
  %292 = udiv i32 %289, 1
  %293 = urem i32 %292, 2
  %294 = udiv i32 %289, 2
  %295 = urem i32 %294, 1
  %296 = udiv i32 %289, 2
  %297 = icmp eq i32 %295, 0
  %tile_bound211 = select i1 %297, i32 64, i32 4096
  %298 = icmp eq i32 %293, 1
  %tile_bound212 = select i1 %298, i32 64, i32 64
  %tile_origin.0213 = mul i32 %296, 1
  %tile_origin.1214 = mul i32 %295, 4096
  %tile_origin.2215 = mul i32 %293, 64
  store i32 %thread_id.y209, ptr %y_in_tile.invar_address219, align 4
  br label %y_in_tile.loop_header217

y_in_tile.loop_header217:                         ; preds = %tile_loop.loop_exit222, %291
  %y_in_tile.indvar220 = load i32, ptr %y_in_tile.invar_address219, align 4
  %299 = icmp uge i32 %y_in_tile.indvar220, %tile_bound211
  br i1 %299, label %y_in_tile.loop_exit216, label %y_in_tile.loop_body218

y_in_tile.loop_body218:                           ; preds = %y_in_tile.loop_header217
  %invar.inc221 = add nuw nsw i32 %y_in_tile.indvar220, 32
  store i32 %invar.inc221, ptr %y_in_tile.invar_address219, align 4
  %300 = icmp eq i32 %y_in_tile.indvar220, %thread_id.y209
  %301 = mul i32 %thread_id.x208, 2
  store i32 0, ptr %tile_loop.invar_address225, align 4
  br label %tile_loop.loop_header223

tile_loop.loop_header223:                         ; preds = %x_in_tile-after235, %y_in_tile.loop_body218
  %tile_loop.indvar226 = load i32, ptr %tile_loop.invar_address225, align 4
  %302 = icmp uge i32 %tile_loop.indvar226, 1
  br i1 %302, label %tile_loop.loop_exit222, label %tile_loop.loop_body224

tile_loop.loop_body224:                           ; preds = %tile_loop.loop_header223
  %invar.inc227 = add nuw nsw i32 %tile_loop.indvar226, 1
  store i32 %invar.inc227, ptr %tile_loop.invar_address225, align 4
  %303 = icmp eq i32 %tile_loop.indvar226, 0
  %304 = mul i32 %tile_loop.indvar226, 2
  %305 = add i32 %304, 0
  %x_loc228 = add i32 %305, %301
  %306 = add i32 %tile_origin.1214, %y_in_tile.indvar220
  %307 = add i32 %tile_origin.2215, %x_loc228
  %308 = icmp ult i32 %x_loc228, %tile_bound212
  br i1 %308, label %x_in_tile-true229, label %x_in_tile-after230

x_in_tile-after230:                               ; preds = %x_in_tile-true229, %tile_loop.loop_body224
  %309 = mul i32 %tile_loop.indvar226, 2
  %310 = add i32 %309, 1
  %x_loc233 = add i32 %310, %301
  %311 = add i32 %tile_origin.1214, %y_in_tile.indvar220
  %312 = add i32 %tile_origin.2215, %x_loc233
  %313 = icmp ult i32 %x_loc233, %tile_bound212
  br i1 %313, label %x_in_tile-true234, label %x_in_tile-after235

x_in_tile-after235:                               ; preds = %x_in_tile-true234, %x_in_tile-after230
  br label %tile_loop.loop_header223, !llvm.loop !439

tile_loop.loop_exit222:                           ; preds = %tile_loop.loop_header223
  br label %y_in_tile.loop_header217, !llvm.loop !440

y_in_tile.loop_exit216:                           ; preds = %y_in_tile.loop_header217
  %shmem_output_address239 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache76, i32 0, i32 %287, i32 0, i32 %thread_id.x208, i32 %thread_id.y209
  %314 = addrspacecast ptr addrspace(3) %shmem_output_address239 to ptr
  %current_output240 = getelementptr inbounds float, ptr %partial_reduction_result205, i32 0
  %315 = load float, ptr %current_output240, align 4
  store float %315, ptr %314, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr241 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache76, i32 0, i32 %287, i32 0, i32 %thread_id.y209, i32 %thread_id.x208
  %316 = addrspacecast ptr addrspace(3) %shmem_transposed_addr241 to ptr
  %partial_reduction_result243 = load float, ptr %316, align 4
  %317 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result243, i32 16, i32 31)
  store float %317, ptr %result_from_other_lane242, align 4
  call void @region_4_22(ptr %316, ptr %result_from_other_lane242, ptr %return_buffer244)
  %318 = load float, ptr %return_buffer244, align 4
  store float %318, ptr %316, align 4
  %partial_reduction_result246 = load float, ptr %316, align 4
  %319 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result246, i32 8, i32 31)
  store float %319, ptr %result_from_other_lane245, align 4
  call void @region_4_22(ptr %316, ptr %result_from_other_lane245, ptr %return_buffer247)
  %320 = load float, ptr %return_buffer247, align 4
  store float %320, ptr %316, align 4
  %partial_reduction_result249 = load float, ptr %316, align 4
  %321 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result249, i32 4, i32 31)
  store float %321, ptr %result_from_other_lane248, align 4
  call void @region_4_22(ptr %316, ptr %result_from_other_lane248, ptr %return_buffer250)
  %322 = load float, ptr %return_buffer250, align 4
  store float %322, ptr %316, align 4
  %partial_reduction_result252 = load float, ptr %316, align 4
  %323 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result252, i32 2, i32 31)
  store float %323, ptr %result_from_other_lane251, align 4
  call void @region_4_22(ptr %316, ptr %result_from_other_lane251, ptr %return_buffer253)
  %324 = load float, ptr %return_buffer253, align 4
  store float %324, ptr %316, align 4
  %partial_reduction_result255 = load float, ptr %316, align 4
  %325 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result255, i32 1, i32 31)
  store float %325, ptr %result_from_other_lane254, align 4
  call void @region_4_22(ptr %316, ptr %result_from_other_lane254, ptr %return_buffer256)
  %326 = load float, ptr %return_buffer256, align 4
  store float %326, ptr %316, align 4
  %327 = icmp ult i32 %thread_id.x208, %tile_bound211
  %328 = mul i32 %thread_id.y209, 2
  %329 = icmp ult i32 %328, %tile_bound212
  %330 = and i1 %329, %327
  %331 = icmp eq i32 %lane_id210, 0
  %332 = and i1 %330, %331
  br i1 %332, label %reduction_write_output-true257, label %reduction_write_output-after258

reduction_write_output-after258:                  ; preds = %reduction_write_output-true257, %y_in_tile.loop_exit216
  %shmem_output_address261 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache76, i32 0, i32 %287, i32 1, i32 %thread_id.x208, i32 %thread_id.y209
  %333 = addrspacecast ptr addrspace(3) %shmem_output_address261 to ptr
  %current_output262 = getelementptr inbounds float, ptr %partial_reduction_result205, i32 1
  %334 = load float, ptr %current_output262, align 4
  store float %334, ptr %333, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr263 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache76, i32 0, i32 %287, i32 1, i32 %thread_id.y209, i32 %thread_id.x208
  %335 = addrspacecast ptr addrspace(3) %shmem_transposed_addr263 to ptr
  %partial_reduction_result265 = load float, ptr %335, align 4
  %336 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result265, i32 16, i32 31)
  store float %336, ptr %result_from_other_lane264, align 4
  call void @region_4_22(ptr %335, ptr %result_from_other_lane264, ptr %return_buffer266)
  %337 = load float, ptr %return_buffer266, align 4
  store float %337, ptr %335, align 4
  %partial_reduction_result268 = load float, ptr %335, align 4
  %338 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result268, i32 8, i32 31)
  store float %338, ptr %result_from_other_lane267, align 4
  call void @region_4_22(ptr %335, ptr %result_from_other_lane267, ptr %return_buffer269)
  %339 = load float, ptr %return_buffer269, align 4
  store float %339, ptr %335, align 4
  %partial_reduction_result271 = load float, ptr %335, align 4
  %340 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result271, i32 4, i32 31)
  store float %340, ptr %result_from_other_lane270, align 4
  call void @region_4_22(ptr %335, ptr %result_from_other_lane270, ptr %return_buffer272)
  %341 = load float, ptr %return_buffer272, align 4
  store float %341, ptr %335, align 4
  %partial_reduction_result274 = load float, ptr %335, align 4
  %342 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result274, i32 2, i32 31)
  store float %342, ptr %result_from_other_lane273, align 4
  call void @region_4_22(ptr %335, ptr %result_from_other_lane273, ptr %return_buffer275)
  %343 = load float, ptr %return_buffer275, align 4
  store float %343, ptr %335, align 4
  %partial_reduction_result277 = load float, ptr %335, align 4
  %344 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result277, i32 1, i32 31)
  store float %344, ptr %result_from_other_lane276, align 4
  call void @region_4_22(ptr %335, ptr %result_from_other_lane276, ptr %return_buffer278)
  %345 = load float, ptr %return_buffer278, align 4
  store float %345, ptr %335, align 4
  %346 = icmp ult i32 %thread_id.x208, %tile_bound211
  %347 = mul i32 %thread_id.y209, 2
  %348 = icmp ult i32 %347, %tile_bound212
  %349 = and i1 %348, %346
  %350 = icmp eq i32 %lane_id210, 0
  %351 = and i1 %349, %350
  br i1 %351, label %reduction_write_output-true279, label %reduction_write_output-after280

reduction_write_output-after280:                  ; preds = %reduction_write_output-true279, %reduction_write_output-after258
  br label %reduce-group-3-after

early_return207:                                  ; preds = %reduce-group-3-true
  ret void

x_in_tile-true229:                                ; preds = %tile_loop.loop_body224
  %352 = mul i32 %thread_id.x208, 2
  %353 = sub i32 %x_loc228, %352
  %Arg_4.5 = getelementptr inbounds [64 x [128 x float]], ptr %arg4, i32 0, i32 %306, i32 %307
  %Arg_4.5231 = load float, ptr %Arg_4.5, align 4, !invariant.load !297
  store float %Arg_4.5231, ptr %reduction_input_address204, align 4
  %354 = getelementptr inbounds float, ptr %partial_reduction_result205, i32 %353
  call void @region_4_22(ptr %354, ptr %reduction_input_address204, ptr %return_buffer232)
  %355 = load float, ptr %return_buffer232, align 4
  store float %355, ptr %354, align 4
  br label %x_in_tile-after230

x_in_tile-true234:                                ; preds = %x_in_tile-after230
  %356 = mul i32 %thread_id.x208, 2
  %357 = sub i32 %x_loc233, %356
  %Arg_4.5236 = getelementptr inbounds [64 x [128 x float]], ptr %arg4, i32 0, i32 %311, i32 %312
  %Arg_4.5237 = load float, ptr %Arg_4.5236, align 4, !invariant.load !297
  store float %Arg_4.5237, ptr %reduction_input_address204, align 4
  %358 = getelementptr inbounds float, ptr %partial_reduction_result205, i32 %357
  call void @region_4_22(ptr %358, ptr %reduction_input_address204, ptr %return_buffer238)
  %359 = load float, ptr %return_buffer238, align 4
  store float %359, ptr %358, align 4
  br label %x_in_tile-after235

reduction_write_output-true257:                   ; preds = %y_in_tile.loop_exit216
  %360 = mul i32 %thread_id.y209, 2
  %361 = add i32 %tile_origin.1214, %thread_id.x208
  %362 = add i32 %tile_origin.2215, %360
  %363 = add i32 %362, 0
  %364 = mul i32 %tile_origin.0213, 128
  %365 = add i32 %364, %363
  %366 = udiv i32 %365, 1
  %output_element_address259 = getelementptr inbounds [128 x float], ptr %arg9, i32 0, i32 %366
  %output260 = load float, ptr %316, align 4
  store float %output260, ptr %output_element_address259, align 4
  br label %reduction_write_output-after258

reduction_write_output-true279:                   ; preds = %reduction_write_output-after258
  %367 = mul i32 %thread_id.y209, 2
  %368 = add i32 %tile_origin.1214, %thread_id.x208
  %369 = add i32 %tile_origin.2215, %367
  %370 = add i32 %369, 1
  %371 = mul i32 %tile_origin.0213, 128
  %372 = add i32 %371, %370
  %373 = udiv i32 %372, 1
  %output_element_address281 = getelementptr inbounds [128 x float], ptr %arg9, i32 0, i32 %373
  %output282 = load float, ptr %335, align 4
  store float %output282, ptr %output_element_address281, align 4
  br label %reduction_write_output-after280

reduce-group-4-true:                              ; preds = %reduce-group-3-after
  %Arg_1.2285 = load float, ptr %arg1, align 4, !invariant.load !297
  %374 = getelementptr inbounds float, ptr %partial_reduction_result284, i32 0
  store float %Arg_1.2285, ptr %374, align 4
  %375 = getelementptr inbounds float, ptr %partial_reduction_result284, i32 1
  store float %Arg_1.2285, ptr %375, align 4
  %376 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %377 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !344
  %378 = urem i32 %376, 1024
  %379 = udiv i32 %376, 1024
  %380 = mul i32 %377, 1
  %381 = add i32 %380, %379
  %382 = icmp ult i32 %381, 2
  br i1 %382, label %383, label %early_return286

383:                                              ; preds = %reduce-group-4-true
  %thread_id.x287 = urem i32 %378, 32
  %thread_id.y288 = udiv i32 %378, 32
  %lane_id289 = urem i32 %378, 32
  %384 = udiv i32 %381, 1
  %385 = urem i32 %384, 2
  %386 = udiv i32 %381, 2
  %387 = urem i32 %386, 1
  %388 = udiv i32 %381, 2
  %389 = icmp eq i32 %387, 0
  %tile_bound290 = select i1 %389, i32 64, i32 4096
  %390 = icmp eq i32 %385, 1
  %tile_bound291 = select i1 %390, i32 64, i32 64
  %tile_origin.0292 = mul i32 %388, 1
  %tile_origin.1293 = mul i32 %387, 4096
  %tile_origin.2294 = mul i32 %385, 64
  store i32 %thread_id.y288, ptr %y_in_tile.invar_address298, align 4
  br label %y_in_tile.loop_header296

y_in_tile.loop_header296:                         ; preds = %tile_loop.loop_exit301, %383
  %y_in_tile.indvar299 = load i32, ptr %y_in_tile.invar_address298, align 4
  %391 = icmp uge i32 %y_in_tile.indvar299, %tile_bound290
  br i1 %391, label %y_in_tile.loop_exit295, label %y_in_tile.loop_body297

y_in_tile.loop_body297:                           ; preds = %y_in_tile.loop_header296
  %invar.inc300 = add nuw nsw i32 %y_in_tile.indvar299, 32
  store i32 %invar.inc300, ptr %y_in_tile.invar_address298, align 4
  %392 = icmp eq i32 %y_in_tile.indvar299, %thread_id.y288
  %393 = mul i32 %thread_id.x287, 2
  store i32 0, ptr %tile_loop.invar_address304, align 4
  br label %tile_loop.loop_header302

tile_loop.loop_header302:                         ; preds = %x_in_tile-after314, %y_in_tile.loop_body297
  %tile_loop.indvar305 = load i32, ptr %tile_loop.invar_address304, align 4
  %394 = icmp uge i32 %tile_loop.indvar305, 1
  br i1 %394, label %tile_loop.loop_exit301, label %tile_loop.loop_body303

tile_loop.loop_body303:                           ; preds = %tile_loop.loop_header302
  %invar.inc306 = add nuw nsw i32 %tile_loop.indvar305, 1
  store i32 %invar.inc306, ptr %tile_loop.invar_address304, align 4
  %395 = icmp eq i32 %tile_loop.indvar305, 0
  %396 = mul i32 %tile_loop.indvar305, 2
  %397 = add i32 %396, 0
  %x_loc307 = add i32 %397, %393
  %398 = add i32 %tile_origin.1293, %y_in_tile.indvar299
  %399 = add i32 %tile_origin.2294, %x_loc307
  %400 = icmp ult i32 %x_loc307, %tile_bound291
  br i1 %400, label %x_in_tile-true308, label %x_in_tile-after309

x_in_tile-after309:                               ; preds = %x_in_tile-true308, %tile_loop.loop_body303
  %401 = mul i32 %tile_loop.indvar305, 2
  %402 = add i32 %401, 1
  %x_loc312 = add i32 %402, %393
  %403 = add i32 %tile_origin.1293, %y_in_tile.indvar299
  %404 = add i32 %tile_origin.2294, %x_loc312
  %405 = icmp ult i32 %x_loc312, %tile_bound291
  br i1 %405, label %x_in_tile-true313, label %x_in_tile-after314

x_in_tile-after314:                               ; preds = %x_in_tile-true313, %x_in_tile-after309
  br label %tile_loop.loop_header302, !llvm.loop !441

tile_loop.loop_exit301:                           ; preds = %tile_loop.loop_header302
  br label %y_in_tile.loop_header296, !llvm.loop !442

y_in_tile.loop_exit295:                           ; preds = %y_in_tile.loop_header296
  %shmem_output_address318 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache77, i32 0, i32 %379, i32 0, i32 %thread_id.x287, i32 %thread_id.y288
  %406 = addrspacecast ptr addrspace(3) %shmem_output_address318 to ptr
  %current_output319 = getelementptr inbounds float, ptr %partial_reduction_result284, i32 0
  %407 = load float, ptr %current_output319, align 4
  store float %407, ptr %406, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr320 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache77, i32 0, i32 %379, i32 0, i32 %thread_id.y288, i32 %thread_id.x287
  %408 = addrspacecast ptr addrspace(3) %shmem_transposed_addr320 to ptr
  %partial_reduction_result322 = load float, ptr %408, align 4
  %409 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result322, i32 16, i32 31)
  store float %409, ptr %result_from_other_lane321, align 4
  call void @region_5_27(ptr %408, ptr %result_from_other_lane321, ptr %return_buffer323)
  %410 = load float, ptr %return_buffer323, align 4
  store float %410, ptr %408, align 4
  %partial_reduction_result325 = load float, ptr %408, align 4
  %411 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result325, i32 8, i32 31)
  store float %411, ptr %result_from_other_lane324, align 4
  call void @region_5_27(ptr %408, ptr %result_from_other_lane324, ptr %return_buffer326)
  %412 = load float, ptr %return_buffer326, align 4
  store float %412, ptr %408, align 4
  %partial_reduction_result328 = load float, ptr %408, align 4
  %413 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result328, i32 4, i32 31)
  store float %413, ptr %result_from_other_lane327, align 4
  call void @region_5_27(ptr %408, ptr %result_from_other_lane327, ptr %return_buffer329)
  %414 = load float, ptr %return_buffer329, align 4
  store float %414, ptr %408, align 4
  %partial_reduction_result331 = load float, ptr %408, align 4
  %415 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result331, i32 2, i32 31)
  store float %415, ptr %result_from_other_lane330, align 4
  call void @region_5_27(ptr %408, ptr %result_from_other_lane330, ptr %return_buffer332)
  %416 = load float, ptr %return_buffer332, align 4
  store float %416, ptr %408, align 4
  %partial_reduction_result334 = load float, ptr %408, align 4
  %417 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result334, i32 1, i32 31)
  store float %417, ptr %result_from_other_lane333, align 4
  call void @region_5_27(ptr %408, ptr %result_from_other_lane333, ptr %return_buffer335)
  %418 = load float, ptr %return_buffer335, align 4
  store float %418, ptr %408, align 4
  %419 = icmp ult i32 %thread_id.x287, %tile_bound290
  %420 = mul i32 %thread_id.y288, 2
  %421 = icmp ult i32 %420, %tile_bound291
  %422 = and i1 %421, %419
  %423 = icmp eq i32 %lane_id289, 0
  %424 = and i1 %422, %423
  br i1 %424, label %reduction_write_output-true336, label %reduction_write_output-after337

reduction_write_output-after337:                  ; preds = %reduction_write_output-true336, %y_in_tile.loop_exit295
  %shmem_output_address340 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache77, i32 0, i32 %379, i32 1, i32 %thread_id.x287, i32 %thread_id.y288
  %425 = addrspacecast ptr addrspace(3) %shmem_output_address340 to ptr
  %current_output341 = getelementptr inbounds float, ptr %partial_reduction_result284, i32 1
  %426 = load float, ptr %current_output341, align 4
  store float %426, ptr %425, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr342 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache77, i32 0, i32 %379, i32 1, i32 %thread_id.y288, i32 %thread_id.x287
  %427 = addrspacecast ptr addrspace(3) %shmem_transposed_addr342 to ptr
  %partial_reduction_result344 = load float, ptr %427, align 4
  %428 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result344, i32 16, i32 31)
  store float %428, ptr %result_from_other_lane343, align 4
  call void @region_5_27(ptr %427, ptr %result_from_other_lane343, ptr %return_buffer345)
  %429 = load float, ptr %return_buffer345, align 4
  store float %429, ptr %427, align 4
  %partial_reduction_result347 = load float, ptr %427, align 4
  %430 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result347, i32 8, i32 31)
  store float %430, ptr %result_from_other_lane346, align 4
  call void @region_5_27(ptr %427, ptr %result_from_other_lane346, ptr %return_buffer348)
  %431 = load float, ptr %return_buffer348, align 4
  store float %431, ptr %427, align 4
  %partial_reduction_result350 = load float, ptr %427, align 4
  %432 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result350, i32 4, i32 31)
  store float %432, ptr %result_from_other_lane349, align 4
  call void @region_5_27(ptr %427, ptr %result_from_other_lane349, ptr %return_buffer351)
  %433 = load float, ptr %return_buffer351, align 4
  store float %433, ptr %427, align 4
  %partial_reduction_result353 = load float, ptr %427, align 4
  %434 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result353, i32 2, i32 31)
  store float %434, ptr %result_from_other_lane352, align 4
  call void @region_5_27(ptr %427, ptr %result_from_other_lane352, ptr %return_buffer354)
  %435 = load float, ptr %return_buffer354, align 4
  store float %435, ptr %427, align 4
  %partial_reduction_result356 = load float, ptr %427, align 4
  %436 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result356, i32 1, i32 31)
  store float %436, ptr %result_from_other_lane355, align 4
  call void @region_5_27(ptr %427, ptr %result_from_other_lane355, ptr %return_buffer357)
  %437 = load float, ptr %return_buffer357, align 4
  store float %437, ptr %427, align 4
  %438 = icmp ult i32 %thread_id.x287, %tile_bound290
  %439 = mul i32 %thread_id.y288, 2
  %440 = icmp ult i32 %439, %tile_bound291
  %441 = and i1 %440, %438
  %442 = icmp eq i32 %lane_id289, 0
  %443 = and i1 %441, %442
  br i1 %443, label %reduction_write_output-true358, label %reduction_write_output-after359

reduction_write_output-after359:                  ; preds = %reduction_write_output-true358, %reduction_write_output-after337
  br label %reduce-group-4-after

early_return286:                                  ; preds = %reduce-group-4-true
  ret void

x_in_tile-true308:                                ; preds = %tile_loop.loop_body303
  %444 = mul i32 %thread_id.x287, 2
  %445 = sub i32 %x_loc307, %444
  %Arg_5.6 = getelementptr inbounds [64 x [128 x float]], ptr %arg5, i32 0, i32 %398, i32 %399
  %Arg_5.6310 = load float, ptr %Arg_5.6, align 4, !invariant.load !297
  store float %Arg_5.6310, ptr %reduction_input_address283, align 4
  %446 = getelementptr inbounds float, ptr %partial_reduction_result284, i32 %445
  call void @region_5_27(ptr %446, ptr %reduction_input_address283, ptr %return_buffer311)
  %447 = load float, ptr %return_buffer311, align 4
  store float %447, ptr %446, align 4
  br label %x_in_tile-after309

x_in_tile-true313:                                ; preds = %x_in_tile-after309
  %448 = mul i32 %thread_id.x287, 2
  %449 = sub i32 %x_loc312, %448
  %Arg_5.6315 = getelementptr inbounds [64 x [128 x float]], ptr %arg5, i32 0, i32 %403, i32 %404
  %Arg_5.6316 = load float, ptr %Arg_5.6315, align 4, !invariant.load !297
  store float %Arg_5.6316, ptr %reduction_input_address283, align 4
  %450 = getelementptr inbounds float, ptr %partial_reduction_result284, i32 %449
  call void @region_5_27(ptr %450, ptr %reduction_input_address283, ptr %return_buffer317)
  %451 = load float, ptr %return_buffer317, align 4
  store float %451, ptr %450, align 4
  br label %x_in_tile-after314

reduction_write_output-true336:                   ; preds = %y_in_tile.loop_exit295
  %452 = mul i32 %thread_id.y288, 2
  %453 = add i32 %tile_origin.1293, %thread_id.x287
  %454 = add i32 %tile_origin.2294, %452
  %455 = add i32 %454, 0
  %456 = mul i32 %tile_origin.0292, 128
  %457 = add i32 %456, %455
  %458 = udiv i32 %457, 1
  %output_element_address338 = getelementptr inbounds [128 x float], ptr %arg10, i32 0, i32 %458
  %output339 = load float, ptr %408, align 4
  store float %output339, ptr %output_element_address338, align 4
  br label %reduction_write_output-after337

reduction_write_output-true358:                   ; preds = %reduction_write_output-after337
  %459 = mul i32 %thread_id.y288, 2
  %460 = add i32 %tile_origin.1293, %thread_id.x287
  %461 = add i32 %tile_origin.2294, %459
  %462 = add i32 %461, 1
  %463 = mul i32 %tile_origin.0292, 128
  %464 = add i32 %463, %462
  %465 = udiv i32 %464, 1
  %output_element_address360 = getelementptr inbounds [128 x float], ptr %arg10, i32 0, i32 %465
  %output361 = load float, ptr %427, align 4
  store float %output361, ptr %output_element_address360, align 4
  br label %reduction_write_output-after359
}

define internal void @region_1_7(ptr dereferenceable(4) %Arg_0.8.typed, ptr dereferenceable(4) %Arg_1.9.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.10.typed = alloca float, align 4
  %Arg_0.8 = load float, ptr %Arg_0.8.typed, align 4
  %Arg_1.9 = load float, ptr %Arg_1.9.typed, align 4
  %add.10 = fadd float %Arg_0.8, %Arg_1.9
  store float %add.10, ptr %add.10.typed, align 4
  %load_ret_value = load float, ptr %add.10.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_12(ptr dereferenceable(4) %Arg_0.13.typed, ptr dereferenceable(4) %Arg_1.14.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.15.typed = alloca float, align 4
  %Arg_0.13 = load float, ptr %Arg_0.13.typed, align 4
  %Arg_1.14 = load float, ptr %Arg_1.14.typed, align 4
  %add.15 = fadd float %Arg_0.13, %Arg_1.14
  store float %add.15, ptr %add.15.typed, align 4
  %load_ret_value = load float, ptr %add.15.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_3_17(ptr dereferenceable(4) %Arg_0.18.typed, ptr dereferenceable(4) %Arg_1.19.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.20.typed = alloca float, align 4
  %Arg_0.18 = load float, ptr %Arg_0.18.typed, align 4
  %Arg_1.19 = load float, ptr %Arg_1.19.typed, align 4
  %add.20 = fadd float %Arg_0.18, %Arg_1.19
  store float %add.20, ptr %add.20.typed, align 4
  %load_ret_value = load float, ptr %add.20.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_4_22(ptr dereferenceable(4) %Arg_0.23.typed, ptr dereferenceable(4) %Arg_1.24.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.25.typed = alloca float, align 4
  %Arg_0.23 = load float, ptr %Arg_0.23.typed, align 4
  %Arg_1.24 = load float, ptr %Arg_1.24.typed, align 4
  %add.25 = fadd float %Arg_0.23, %Arg_1.24
  store float %add.25, ptr %add.25.typed, align 4
  %load_ret_value = load float, ptr %add.25.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_5_27(ptr dereferenceable(4) %Arg_0.28.typed, ptr dereferenceable(4) %Arg_1.29.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.30.typed = alloca float, align 4
  %Arg_0.28 = load float, ptr %Arg_0.28.typed, align 4
  %Arg_1.29 = load float, ptr %Arg_1.29.typed, align 4
  %add.30 = fadd float %Arg_0.28, %Arg_1.29
  store float %add.30, ptr %add.30.typed, align 4
  %load_ret_value = load float, ptr %add.30.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_302(ptr noalias align 16 dereferenceable(524288) %arg0, ptr noalias align 16 dereferenceable(64) %arg1, ptr noalias align 16 dereferenceable(64) %arg2, ptr noalias align 128 dereferenceable(32768) %arg3, ptr noalias align 128 dereferenceable(1966080) %arg4, ptr noalias align 128 dereferenceable(32768) %arg5, ptr noalias align 128 dereferenceable(524288) %arg6, ptr noalias align 128 dereferenceable(4096) %arg7, ptr noalias align 128 dereferenceable(4096) %arg8) {
entry:
  %return_buffer66 = alloca float, align 4
  %result_from_other_lane64 = alloca float, align 4
  %return_buffer63 = alloca float, align 4
  %result_from_other_lane61 = alloca float, align 4
  %return_buffer60 = alloca float, align 4
  %result_from_other_lane58 = alloca float, align 4
  %return_buffer57 = alloca float, align 4
  %result_from_other_lane55 = alloca float, align 4
  %return_buffer54 = alloca float, align 4
  %result_from_other_lane52 = alloca float, align 4
  %return_buffer48 = alloca float, align 4
  %result_from_other_lane46 = alloca float, align 4
  %return_buffer45 = alloca float, align 4
  %result_from_other_lane43 = alloca float, align 4
  %return_buffer42 = alloca float, align 4
  %result_from_other_lane40 = alloca float, align 4
  %return_buffer39 = alloca float, align 4
  %result_from_other_lane37 = alloca float, align 4
  %return_buffer36 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer15 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result2 = alloca float, align 4
  %reduction_input_address1 = alloca float, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after68, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_52_constant_38 = load float, ptr @70, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_52_constant_38, ptr %2, align 4
  %region_0_52_constant_383 = load float, ptr @70, align 4
  %3 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  store float %region_0_52_constant_383, ptr %3, align 4
  %4 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %5 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !360
  %6 = urem i32 %4, 1024
  %7 = udiv i32 %4, 1024
  %8 = mul i32 %5, 1
  %9 = add i32 %8, %7
  %10 = icmp ult i32 %9, 64
  br i1 %10, label %11, label %early_return

11:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %6, 32
  %thread_id.y = udiv i32 %6, 32
  %lane_id = urem i32 %6, 32
  %12 = udiv i32 %9, 1
  %13 = urem i32 %12, 1
  %14 = udiv i32 %9, 1
  %15 = urem i32 %14, 1
  %16 = udiv i32 %9, 1
  %17 = icmp eq i32 %15, 0
  %tile_bound = select i1 %17, i32 128, i32 4096
  %18 = icmp eq i32 %13, 0
  %tile_bound4 = select i1 %18, i32 16, i32 32
  %tile_origin.0 = mul i32 %16, 1
  %tile_origin.1 = mul i32 %15, 4096
  %tile_origin.2 = mul i32 %13, 32
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %11
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %19 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %19, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %20 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %21 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %22 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %22, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc5 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc5, ptr %tile_loop.invar_address, align 4
  %23 = icmp eq i32 %tile_loop.indvar, 0
  %24 = mul i32 %tile_loop.indvar, 1
  %25 = add i32 %24, 0
  %x_loc = add i32 %25, %21
  %26 = add i32 %tile_origin.1, %y_in_tile.indvar
  %27 = add i32 %tile_origin.2, %x_loc
  %28 = icmp ult i32 %x_loc, %tile_bound4
  br i1 %28, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body
  br label %tile_loop.loop_header, !llvm.loop !443

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !444

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache78, i32 0, i32 %7, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %29 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %30 = load float, ptr %current_output, align 4
  store float %30, ptr %29, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache78, i32 0, i32 %7, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %31 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result35 = load float, ptr %31, align 4
  %32 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result35, i32 16, i32 31)
  store float %32, ptr %result_from_other_lane, align 4
  call void @region_1_39(ptr %31, ptr %result_from_other_lane, ptr %return_buffer36)
  %33 = load float, ptr %return_buffer36, align 4
  store float %33, ptr %31, align 4
  %partial_reduction_result38 = load float, ptr %31, align 4
  %34 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result38, i32 8, i32 31)
  store float %34, ptr %result_from_other_lane37, align 4
  call void @region_1_39(ptr %31, ptr %result_from_other_lane37, ptr %return_buffer39)
  %35 = load float, ptr %return_buffer39, align 4
  store float %35, ptr %31, align 4
  %partial_reduction_result41 = load float, ptr %31, align 4
  %36 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result41, i32 4, i32 31)
  store float %36, ptr %result_from_other_lane40, align 4
  call void @region_1_39(ptr %31, ptr %result_from_other_lane40, ptr %return_buffer42)
  %37 = load float, ptr %return_buffer42, align 4
  store float %37, ptr %31, align 4
  %partial_reduction_result44 = load float, ptr %31, align 4
  %38 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result44, i32 2, i32 31)
  store float %38, ptr %result_from_other_lane43, align 4
  call void @region_1_39(ptr %31, ptr %result_from_other_lane43, ptr %return_buffer45)
  %39 = load float, ptr %return_buffer45, align 4
  store float %39, ptr %31, align 4
  %partial_reduction_result47 = load float, ptr %31, align 4
  %40 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result47, i32 1, i32 31)
  store float %40, ptr %result_from_other_lane46, align 4
  call void @region_1_39(ptr %31, ptr %result_from_other_lane46, ptr %return_buffer48)
  %41 = load float, ptr %return_buffer48, align 4
  store float %41, ptr %31, align 4
  %42 = icmp ult i32 %thread_id.x, %tile_bound
  %43 = mul i32 %thread_id.y, 1
  %44 = icmp ult i32 %43, %tile_bound4
  %45 = and i1 %44, %42
  %46 = icmp eq i32 %lane_id, 0
  %47 = and i1 %45, %46
  br i1 %47, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %shmem_output_address49 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache79, i32 0, i32 %7, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %48 = addrspacecast ptr addrspace(3) %shmem_output_address49 to ptr
  %current_output50 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  %49 = load float, ptr %current_output50, align 4
  store float %49, ptr %48, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr51 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache79, i32 0, i32 %7, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %50 = addrspacecast ptr addrspace(3) %shmem_transposed_addr51 to ptr
  %partial_reduction_result53 = load float, ptr %50, align 4
  %51 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result53, i32 16, i32 31)
  store float %51, ptr %result_from_other_lane52, align 4
  call void @region_2_46(ptr %50, ptr %result_from_other_lane52, ptr %return_buffer54)
  %52 = load float, ptr %return_buffer54, align 4
  store float %52, ptr %50, align 4
  %partial_reduction_result56 = load float, ptr %50, align 4
  %53 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result56, i32 8, i32 31)
  store float %53, ptr %result_from_other_lane55, align 4
  call void @region_2_46(ptr %50, ptr %result_from_other_lane55, ptr %return_buffer57)
  %54 = load float, ptr %return_buffer57, align 4
  store float %54, ptr %50, align 4
  %partial_reduction_result59 = load float, ptr %50, align 4
  %55 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result59, i32 4, i32 31)
  store float %55, ptr %result_from_other_lane58, align 4
  call void @region_2_46(ptr %50, ptr %result_from_other_lane58, ptr %return_buffer60)
  %56 = load float, ptr %return_buffer60, align 4
  store float %56, ptr %50, align 4
  %partial_reduction_result62 = load float, ptr %50, align 4
  %57 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result62, i32 2, i32 31)
  store float %57, ptr %result_from_other_lane61, align 4
  call void @region_2_46(ptr %50, ptr %result_from_other_lane61, ptr %return_buffer63)
  %58 = load float, ptr %return_buffer63, align 4
  store float %58, ptr %50, align 4
  %partial_reduction_result65 = load float, ptr %50, align 4
  %59 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result65, i32 1, i32 31)
  store float %59, ptr %result_from_other_lane64, align 4
  call void @region_2_46(ptr %50, ptr %result_from_other_lane64, ptr %return_buffer66)
  %60 = load float, ptr %return_buffer66, align 4
  store float %60, ptr %50, align 4
  %61 = icmp ult i32 %thread_id.x, %tile_bound
  %62 = mul i32 %thread_id.y, 1
  %63 = icmp ult i32 %62, %tile_bound4
  %64 = and i1 %63, %61
  %65 = icmp eq i32 %lane_id, 0
  %66 = and i1 %64, %65
  br i1 %66, label %reduction_write_output-true67, label %reduction_write_output-after68

reduction_write_output-after68:                   ; preds = %reduction_write_output-true67, %reduction_write_output-after
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %67 = mul nuw nsw i32 %27, 1
  %68 = add nuw nsw i32 0, %67
  %69 = mul nuw nsw i32 %26, 16
  %70 = add nuw nsw i32 %68, %69
  %71 = mul nuw nsw i32 %tile_origin.0, 2048
  %72 = add nuw nsw i32 %70, %71
  %73 = udiv i32 %72, 1
  %74 = urem i32 %73, 16
  %75 = udiv i32 %72, 16
  %76 = urem i32 %75, 128
  %77 = udiv i32 %72, 2048
  %78 = mul i32 %thread_id.x, 1
  %79 = sub i32 %x_loc, %78
  %80 = mul nuw nsw i32 %74, 1
  %81 = add nuw nsw i32 0, %80
  %82 = udiv i32 %81, 16
  %83 = mul nuw nsw i32 %76, 1
  %84 = add nuw nsw i32 0, %83
  %85 = mul nuw nsw i32 %77, 128
  %86 = add nuw nsw i32 %84, %85
  %87 = udiv i32 %86, 8192
  %Arg_0.1 = getelementptr inbounds float, ptr %arg0, i32 %72
  %Arg_0.16 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %88 = add i32 %86, 0
  %Arg_4.5 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg4, i32 0, i32 33, i32 %88, i32 0
  %Arg_4.57 = load float, ptr %Arg_4.5, align 4, !invariant.load !297
  %Arg_5.6 = getelementptr inbounds [8192 x float], ptr %arg5, i32 0, i32 %86
  %Arg_5.68 = load float, ptr %Arg_5.6, align 4, !invariant.load !297
  %multiply.25 = fmul float %Arg_4.57, %Arg_5.68
  %region_0_52_constant_13 = load float, ptr @68, align 4
  %subtract.26 = fsub float %region_0_52_constant_13, %Arg_5.68
  %multiply.27 = fmul float %multiply.25, %subtract.26
  %multiply.36 = fmul float %Arg_0.16, %multiply.27
  store float %multiply.36, ptr %reduction_input_address, align 4
  %89 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %79
  call void @region_1_39(ptr %89, ptr %reduction_input_address, ptr %return_buffer)
  %90 = load float, ptr %return_buffer, align 4
  store float %90, ptr %89, align 4
  %91 = mul nuw nsw i32 %74, 1
  %92 = add nuw nsw i32 0, %91
  %93 = udiv i32 %92, 16
  %94 = mul nuw nsw i32 %76, 1
  %95 = add nuw nsw i32 0, %94
  %96 = mul nuw nsw i32 %77, 128
  %97 = add nuw nsw i32 %95, %96
  %98 = udiv i32 %97, 8192
  %Arg_0.19 = getelementptr inbounds float, ptr %arg0, i32 %72
  %Arg_0.110 = load float, ptr %Arg_0.19, align 4, !invariant.load !297
  %99 = add i32 %97, 0
  %Arg_4.511 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg4, i32 0, i32 32, i32 %99, i32 0
  %Arg_4.512 = load float, ptr %Arg_4.511, align 4, !invariant.load !297
  %Arg_3.4 = getelementptr inbounds [8192 x float], ptr %arg3, i32 0, i32 %97
  %Arg_3.413 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  %multiply.12 = fmul float %Arg_4.512, %Arg_3.413
  %region_0_52_constant_1314 = load float, ptr @68, align 4
  %subtract.15 = fsub float %region_0_52_constant_1314, %Arg_3.413
  %multiply.16 = fmul float %multiply.12, %subtract.15
  %multiply.44 = fmul float %Arg_0.110, %multiply.16
  store float %multiply.44, ptr %reduction_input_address1, align 4
  %100 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 %79
  call void @region_2_46(ptr %100, ptr %reduction_input_address1, ptr %return_buffer15)
  %101 = load float, ptr %return_buffer15, align 4
  store float %101, ptr %100, align 4
  %102 = mul nuw nsw i32 %74, 1
  %103 = add nuw nsw i32 0, %102
  %104 = udiv i32 %103, 16
  %105 = mul nuw nsw i32 %76, 1
  %106 = add nuw nsw i32 0, %105
  %107 = mul nuw nsw i32 %77, 128
  %108 = add nuw nsw i32 %106, %107
  %109 = udiv i32 %108, 8192
  %Arg_0.116 = getelementptr inbounds float, ptr %arg0, i32 %72
  %Arg_0.117 = load float, ptr %Arg_0.116, align 4, !invariant.load !297
  %region_0_52_constant_7 = load float, ptr @69, align 4
  %110 = add i32 %108, 0
  %Arg_4.518 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg4, i32 0, i32 32, i32 %110, i32 0
  %Arg_4.519 = load float, ptr %Arg_4.518, align 4, !invariant.load !297
  %Arg_3.420 = getelementptr inbounds [8192 x float], ptr %arg3, i32 0, i32 %108
  %Arg_3.421 = load float, ptr %Arg_3.420, align 4, !invariant.load !297
  %multiply.1222 = fmul float %Arg_4.519, %Arg_3.421
  %region_0_52_constant_1323 = load float, ptr @68, align 4
  %subtract.1524 = fsub float %region_0_52_constant_1323, %Arg_3.421
  %multiply.1625 = fmul float %multiply.1222, %subtract.1524
  %Arg_1.2 = getelementptr inbounds [16 x [1 x float]], ptr %arg1, i32 0, i32 %103, i32 0
  %Arg_1.226 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %multiply.21 = fmul float %multiply.1625, %Arg_1.226
  %111 = add i32 %108, 0
  %Arg_4.527 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg4, i32 0, i32 33, i32 %111, i32 0
  %Arg_4.528 = load float, ptr %Arg_4.527, align 4, !invariant.load !297
  %Arg_5.629 = getelementptr inbounds [8192 x float], ptr %arg5, i32 0, i32 %108
  %Arg_5.630 = load float, ptr %Arg_5.629, align 4, !invariant.load !297
  %multiply.2531 = fmul float %Arg_4.528, %Arg_5.630
  %subtract.2632 = fsub float %region_0_52_constant_1323, %Arg_5.630
  %multiply.2733 = fmul float %multiply.2531, %subtract.2632
  %Arg_2.3 = getelementptr inbounds [16 x [1 x float]], ptr %arg2, i32 0, i32 %103, i32 0
  %Arg_2.334 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %multiply.32 = fmul float %multiply.2733, %Arg_2.334
  %add.33 = fadd float %multiply.21, %multiply.32
  %multiply.34 = fmul float %region_0_52_constant_7, %add.33
  %subtract.35 = fsub float %Arg_0.117, %multiply.34
  %112 = mul nuw nsw i32 %74, 1
  %113 = add nuw nsw i32 0, %112
  %114 = udiv i32 %113, 16
  %115 = mul nuw nsw i32 %76, 1
  %116 = add nuw nsw i32 0, %115
  %117 = mul nuw nsw i32 %77, 128
  %118 = add nuw nsw i32 %116, %117
  %119 = udiv i32 %118, 8192
  %120 = getelementptr inbounds float, ptr %arg6, i32 %72
  store float %subtract.35, ptr %120, align 4
  br label %x_in_tile-after

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %121 = mul i32 %thread_id.y, 1
  %122 = add i32 %tile_origin.1, %thread_id.x
  %123 = add i32 %tile_origin.2, %121
  %124 = add i32 %123, 0
  %125 = mul i32 %tile_origin.0, 16
  %126 = add i32 %125, %124
  %127 = udiv i32 %126, 1
  %128 = urem i32 %127, 16
  %129 = udiv i32 %126, 16
  %output_element_address = getelementptr inbounds [64 x [16 x float]], ptr %arg7, i32 0, i32 %129, i32 %128
  %output = load float, ptr %31, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

reduction_write_output-true67:                    ; preds = %reduction_write_output-after
  %130 = mul i32 %thread_id.y, 1
  %131 = add i32 %tile_origin.1, %thread_id.x
  %132 = add i32 %tile_origin.2, %130
  %133 = add i32 %132, 0
  %134 = mul i32 %tile_origin.0, 16
  %135 = add i32 %134, %133
  %136 = udiv i32 %135, 1
  %137 = urem i32 %136, 16
  %138 = udiv i32 %135, 16
  %output_element_address69 = getelementptr inbounds [64 x [16 x float]], ptr %arg8, i32 0, i32 %138, i32 %137
  %output70 = load float, ptr %50, align 4
  store float %output70, ptr %output_element_address69, align 4
  br label %reduction_write_output-after68
}

define internal void @region_1_39(ptr dereferenceable(4) %Arg_0.40.typed, ptr dereferenceable(4) %Arg_1.41.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.42.typed = alloca float, align 4
  %Arg_0.40 = load float, ptr %Arg_0.40.typed, align 4
  %Arg_1.41 = load float, ptr %Arg_1.41.typed, align 4
  %add.42 = fadd float %Arg_0.40, %Arg_1.41
  store float %add.42, ptr %add.42.typed, align 4
  %load_ret_value = load float, ptr %add.42.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_46(ptr dereferenceable(4) %Arg_0.47.typed, ptr dereferenceable(4) %Arg_1.48.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.49.typed = alloca float, align 4
  %Arg_0.47 = load float, ptr %Arg_0.47.typed, align 4
  %Arg_1.48 = load float, ptr %Arg_1.48.typed, align 4
  %add.49 = fadd float %Arg_0.47, %Arg_1.48
  store float %add.49, ptr %add.49.typed, align 4
  %load_ret_value = load float, ptr %add.49.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_793(ptr noalias align 128 dereferenceable(4096) %arg0, ptr noalias align 128 dereferenceable(4) %arg1, ptr noalias align 128 dereferenceable(4096) %arg2, ptr noalias align 128 dereferenceable(64) %arg3, ptr noalias align 128 dereferenceable(64) %arg4) {
entry:
  %return_buffer64 = alloca float, align 4
  %result_from_other_lane62 = alloca float, align 4
  %return_buffer61 = alloca float, align 4
  %result_from_other_lane59 = alloca float, align 4
  %return_buffer58 = alloca float, align 4
  %result_from_other_lane56 = alloca float, align 4
  %return_buffer55 = alloca float, align 4
  %result_from_other_lane53 = alloca float, align 4
  %return_buffer52 = alloca float, align 4
  %result_from_other_lane50 = alloca float, align 4
  %return_buffer46 = alloca float, align 4
  %tile_loop.invar_address39 = alloca i32, align 4
  %y_in_tile.invar_address33 = alloca i32, align 4
  %partial_reduction_result19 = alloca float, align 4
  %reduction_input_address18 = alloca float, align 4
  %return_buffer17 = alloca float, align 4
  %result_from_other_lane15 = alloca float, align 4
  %return_buffer14 = alloca float, align 4
  %result_from_other_lane12 = alloca float, align 4
  %return_buffer11 = alloca float, align 4
  %result_from_other_lane9 = alloca float, align 4
  %return_buffer8 = alloca float, align 4
  %result_from_other_lane6 = alloca float, align 4
  %return_buffer5 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !344
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after, %entry
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %reduce-group-1-true, label %reduce-group-1-after

reduce-group-1-after:                             ; preds = %reduction_write_output-after66, %reduce-group-0-after
  ret void

reduce-group-0-true:                              ; preds = %entry
  %Arg_1.2 = load float, ptr %arg1, align 4, !invariant.load !297
  %3 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %Arg_1.2, ptr %3, align 4
  %4 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %5 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %6 = urem i32 %4, 1024
  %7 = udiv i32 %4, 1024
  %8 = mul i32 %5, 1
  %9 = add i32 %8, %7
  %10 = icmp ult i32 %9, 1
  br i1 %10, label %11, label %early_return

11:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %6, 32
  %thread_id.y = udiv i32 %6, 32
  %lane_id = urem i32 %6, 32
  %12 = udiv i32 %9, 1
  %13 = urem i32 %12, 1
  %14 = udiv i32 %9, 1
  %15 = urem i32 %14, 1
  %16 = udiv i32 %9, 1
  %17 = icmp eq i32 %15, 0
  %tile_bound = select i1 %17, i32 64, i32 4096
  %18 = icmp eq i32 %13, 0
  %tile_bound1 = select i1 %18, i32 16, i32 32
  %tile_origin.0 = mul i32 %16, 1
  %tile_origin.1 = mul i32 %15, 4096
  %tile_origin.2 = mul i32 %13, 32
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %11
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %19 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %19, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %20 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %21 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %22 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %22, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %23 = icmp eq i32 %tile_loop.indvar, 0
  %24 = mul i32 %tile_loop.indvar, 1
  %25 = add i32 %24, 0
  %x_loc = add i32 %25, %21
  %26 = add i32 %tile_origin.1, %y_in_tile.indvar
  %27 = add i32 %tile_origin.2, %x_loc
  %28 = icmp ult i32 %x_loc, %tile_bound1
  br i1 %28, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body
  br label %tile_loop.loop_header, !llvm.loop !445

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !446

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache80, i32 0, i32 %7, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %29 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %30 = load float, ptr %current_output, align 4
  store float %30, ptr %29, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache80, i32 0, i32 %7, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %31 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result4 = load float, ptr %31, align 4
  %32 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result4, i32 16, i32 31)
  store float %32, ptr %result_from_other_lane, align 4
  call void @region_1_4(ptr %31, ptr %result_from_other_lane, ptr %return_buffer5)
  %33 = load float, ptr %return_buffer5, align 4
  store float %33, ptr %31, align 4
  %partial_reduction_result7 = load float, ptr %31, align 4
  %34 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result7, i32 8, i32 31)
  store float %34, ptr %result_from_other_lane6, align 4
  call void @region_1_4(ptr %31, ptr %result_from_other_lane6, ptr %return_buffer8)
  %35 = load float, ptr %return_buffer8, align 4
  store float %35, ptr %31, align 4
  %partial_reduction_result10 = load float, ptr %31, align 4
  %36 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result10, i32 4, i32 31)
  store float %36, ptr %result_from_other_lane9, align 4
  call void @region_1_4(ptr %31, ptr %result_from_other_lane9, ptr %return_buffer11)
  %37 = load float, ptr %return_buffer11, align 4
  store float %37, ptr %31, align 4
  %partial_reduction_result13 = load float, ptr %31, align 4
  %38 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result13, i32 2, i32 31)
  store float %38, ptr %result_from_other_lane12, align 4
  call void @region_1_4(ptr %31, ptr %result_from_other_lane12, ptr %return_buffer14)
  %39 = load float, ptr %return_buffer14, align 4
  store float %39, ptr %31, align 4
  %partial_reduction_result16 = load float, ptr %31, align 4
  %40 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result16, i32 1, i32 31)
  store float %40, ptr %result_from_other_lane15, align 4
  call void @region_1_4(ptr %31, ptr %result_from_other_lane15, ptr %return_buffer17)
  %41 = load float, ptr %return_buffer17, align 4
  store float %41, ptr %31, align 4
  %42 = icmp ult i32 %thread_id.x, %tile_bound
  %43 = mul i32 %thread_id.y, 1
  %44 = icmp ult i32 %43, %tile_bound1
  %45 = and i1 %44, %42
  %46 = icmp eq i32 %lane_id, 0
  %47 = and i1 %45, %46
  br i1 %47, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %48 = mul i32 %thread_id.x, 1
  %49 = sub i32 %x_loc, %48
  %Arg_0.1 = getelementptr inbounds [64 x [16 x float]], ptr %arg0, i32 0, i32 %26, i32 %27
  %Arg_0.13 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  store float %Arg_0.13, ptr %reduction_input_address, align 4
  %50 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %49
  call void @region_1_4(ptr %50, ptr %reduction_input_address, ptr %return_buffer)
  %51 = load float, ptr %return_buffer, align 4
  store float %51, ptr %50, align 4
  br label %x_in_tile-after

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %52 = mul i32 %thread_id.y, 1
  %53 = add i32 %tile_origin.1, %thread_id.x
  %54 = add i32 %tile_origin.2, %52
  %55 = add i32 %54, 0
  %56 = mul i32 %tile_origin.0, 16
  %57 = add i32 %56, %55
  %58 = udiv i32 %57, 1
  %output_element_address = getelementptr inbounds [16 x float], ptr %arg3, i32 0, i32 %58
  %output = load float, ptr %31, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

reduce-group-1-true:                              ; preds = %reduce-group-0-after
  %Arg_1.220 = load float, ptr %arg1, align 4, !invariant.load !297
  %59 = getelementptr inbounds float, ptr %partial_reduction_result19, i32 0
  store float %Arg_1.220, ptr %59, align 4
  %60 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %61 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %62 = urem i32 %60, 1024
  %63 = udiv i32 %60, 1024
  %64 = mul i32 %61, 1
  %65 = add i32 %64, %63
  %66 = icmp ult i32 %65, 1
  br i1 %66, label %67, label %early_return21

67:                                               ; preds = %reduce-group-1-true
  %thread_id.x22 = urem i32 %62, 32
  %thread_id.y23 = udiv i32 %62, 32
  %lane_id24 = urem i32 %62, 32
  %68 = udiv i32 %65, 1
  %69 = urem i32 %68, 1
  %70 = udiv i32 %65, 1
  %71 = urem i32 %70, 1
  %72 = udiv i32 %65, 1
  %73 = icmp eq i32 %71, 0
  %tile_bound25 = select i1 %73, i32 64, i32 4096
  %74 = icmp eq i32 %69, 0
  %tile_bound26 = select i1 %74, i32 16, i32 32
  %tile_origin.027 = mul i32 %72, 1
  %tile_origin.128 = mul i32 %71, 4096
  %tile_origin.229 = mul i32 %69, 32
  store i32 %thread_id.y23, ptr %y_in_tile.invar_address33, align 4
  br label %y_in_tile.loop_header31

y_in_tile.loop_header31:                          ; preds = %tile_loop.loop_exit36, %67
  %y_in_tile.indvar34 = load i32, ptr %y_in_tile.invar_address33, align 4
  %75 = icmp uge i32 %y_in_tile.indvar34, %tile_bound25
  br i1 %75, label %y_in_tile.loop_exit30, label %y_in_tile.loop_body32

y_in_tile.loop_body32:                            ; preds = %y_in_tile.loop_header31
  %invar.inc35 = add nuw nsw i32 %y_in_tile.indvar34, 32
  store i32 %invar.inc35, ptr %y_in_tile.invar_address33, align 4
  %76 = icmp eq i32 %y_in_tile.indvar34, %thread_id.y23
  %77 = mul i32 %thread_id.x22, 1
  store i32 0, ptr %tile_loop.invar_address39, align 4
  br label %tile_loop.loop_header37

tile_loop.loop_header37:                          ; preds = %x_in_tile-after44, %y_in_tile.loop_body32
  %tile_loop.indvar40 = load i32, ptr %tile_loop.invar_address39, align 4
  %78 = icmp uge i32 %tile_loop.indvar40, 1
  br i1 %78, label %tile_loop.loop_exit36, label %tile_loop.loop_body38

tile_loop.loop_body38:                            ; preds = %tile_loop.loop_header37
  %invar.inc41 = add nuw nsw i32 %tile_loop.indvar40, 1
  store i32 %invar.inc41, ptr %tile_loop.invar_address39, align 4
  %79 = icmp eq i32 %tile_loop.indvar40, 0
  %80 = mul i32 %tile_loop.indvar40, 1
  %81 = add i32 %80, 0
  %x_loc42 = add i32 %81, %77
  %82 = add i32 %tile_origin.128, %y_in_tile.indvar34
  %83 = add i32 %tile_origin.229, %x_loc42
  %84 = icmp ult i32 %x_loc42, %tile_bound26
  br i1 %84, label %x_in_tile-true43, label %x_in_tile-after44

x_in_tile-after44:                                ; preds = %x_in_tile-true43, %tile_loop.loop_body38
  br label %tile_loop.loop_header37, !llvm.loop !447

tile_loop.loop_exit36:                            ; preds = %tile_loop.loop_header37
  br label %y_in_tile.loop_header31, !llvm.loop !448

y_in_tile.loop_exit30:                            ; preds = %y_in_tile.loop_header31
  %shmem_output_address47 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache81, i32 0, i32 %63, i32 0, i32 %thread_id.x22, i32 %thread_id.y23
  %85 = addrspacecast ptr addrspace(3) %shmem_output_address47 to ptr
  %current_output48 = getelementptr inbounds float, ptr %partial_reduction_result19, i32 0
  %86 = load float, ptr %current_output48, align 4
  store float %86, ptr %85, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr49 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache81, i32 0, i32 %63, i32 0, i32 %thread_id.y23, i32 %thread_id.x22
  %87 = addrspacecast ptr addrspace(3) %shmem_transposed_addr49 to ptr
  %partial_reduction_result51 = load float, ptr %87, align 4
  %88 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result51, i32 16, i32 31)
  store float %88, ptr %result_from_other_lane50, align 4
  call void @region_2_9(ptr %87, ptr %result_from_other_lane50, ptr %return_buffer52)
  %89 = load float, ptr %return_buffer52, align 4
  store float %89, ptr %87, align 4
  %partial_reduction_result54 = load float, ptr %87, align 4
  %90 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result54, i32 8, i32 31)
  store float %90, ptr %result_from_other_lane53, align 4
  call void @region_2_9(ptr %87, ptr %result_from_other_lane53, ptr %return_buffer55)
  %91 = load float, ptr %return_buffer55, align 4
  store float %91, ptr %87, align 4
  %partial_reduction_result57 = load float, ptr %87, align 4
  %92 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result57, i32 4, i32 31)
  store float %92, ptr %result_from_other_lane56, align 4
  call void @region_2_9(ptr %87, ptr %result_from_other_lane56, ptr %return_buffer58)
  %93 = load float, ptr %return_buffer58, align 4
  store float %93, ptr %87, align 4
  %partial_reduction_result60 = load float, ptr %87, align 4
  %94 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result60, i32 2, i32 31)
  store float %94, ptr %result_from_other_lane59, align 4
  call void @region_2_9(ptr %87, ptr %result_from_other_lane59, ptr %return_buffer61)
  %95 = load float, ptr %return_buffer61, align 4
  store float %95, ptr %87, align 4
  %partial_reduction_result63 = load float, ptr %87, align 4
  %96 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result63, i32 1, i32 31)
  store float %96, ptr %result_from_other_lane62, align 4
  call void @region_2_9(ptr %87, ptr %result_from_other_lane62, ptr %return_buffer64)
  %97 = load float, ptr %return_buffer64, align 4
  store float %97, ptr %87, align 4
  %98 = icmp ult i32 %thread_id.x22, %tile_bound25
  %99 = mul i32 %thread_id.y23, 1
  %100 = icmp ult i32 %99, %tile_bound26
  %101 = and i1 %100, %98
  %102 = icmp eq i32 %lane_id24, 0
  %103 = and i1 %101, %102
  br i1 %103, label %reduction_write_output-true65, label %reduction_write_output-after66

reduction_write_output-after66:                   ; preds = %reduction_write_output-true65, %y_in_tile.loop_exit30
  br label %reduce-group-1-after

early_return21:                                   ; preds = %reduce-group-1-true
  ret void

x_in_tile-true43:                                 ; preds = %tile_loop.loop_body38
  %104 = mul i32 %thread_id.x22, 1
  %105 = sub i32 %x_loc42, %104
  %Arg_2.3 = getelementptr inbounds [64 x [16 x float]], ptr %arg2, i32 0, i32 %82, i32 %83
  %Arg_2.345 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  store float %Arg_2.345, ptr %reduction_input_address18, align 4
  %106 = getelementptr inbounds float, ptr %partial_reduction_result19, i32 %105
  call void @region_2_9(ptr %106, ptr %reduction_input_address18, ptr %return_buffer46)
  %107 = load float, ptr %return_buffer46, align 4
  store float %107, ptr %106, align 4
  br label %x_in_tile-after44

reduction_write_output-true65:                    ; preds = %y_in_tile.loop_exit30
  %108 = mul i32 %thread_id.y23, 1
  %109 = add i32 %tile_origin.128, %thread_id.x22
  %110 = add i32 %tile_origin.229, %108
  %111 = add i32 %110, 0
  %112 = mul i32 %tile_origin.027, 16
  %113 = add i32 %112, %111
  %114 = udiv i32 %113, 1
  %output_element_address67 = getelementptr inbounds [16 x float], ptr %arg4, i32 0, i32 %114
  %output68 = load float, ptr %87, align 4
  store float %output68, ptr %output_element_address67, align 4
  br label %reduction_write_output-after66
}

define internal void @region_1_4(ptr dereferenceable(4) %Arg_0.5.typed, ptr dereferenceable(4) %Arg_1.6.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.7.typed = alloca float, align 4
  %Arg_0.5 = load float, ptr %Arg_0.5.typed, align 4
  %Arg_1.6 = load float, ptr %Arg_1.6.typed, align 4
  %add.7 = fadd float %Arg_0.5, %Arg_1.6
  store float %add.7, ptr %add.7.typed, align 4
  %load_ret_value = load float, ptr %add.7.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_9(ptr dereferenceable(4) %Arg_0.10.typed, ptr dereferenceable(4) %Arg_1.11.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.12.typed = alloca float, align 4
  %Arg_0.10 = load float, ptr %Arg_0.10.typed, align 4
  %Arg_1.11 = load float, ptr %Arg_1.11.typed, align 4
  %add.12 = fadd float %Arg_0.10, %Arg_1.11
  store float %add.12, ptr %add.12.typed, align 4
  %load_ret_value = load float, ptr %add.12.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_59(ptr noalias align 128 dereferenceable(32768) %arg0, ptr noalias align 128 dereferenceable(32768) %arg1, ptr noalias align 128 dereferenceable(32768) %arg2, ptr noalias align 128 dereferenceable(32768) %arg3, ptr noalias align 128 dereferenceable(32768) %arg4, ptr noalias align 128 dereferenceable(32768) %arg5, ptr noalias align 128 dereferenceable(32768) %arg6, ptr noalias align 128 dereferenceable(32768) %arg7, ptr noalias align 128 dereferenceable(32768) %arg8, ptr noalias align 128 dereferenceable(32768) %arg9, ptr noalias align 128 dereferenceable(655360) %arg10, ptr noalias align 16 dereferenceable(80) %arg11, ptr noalias align 16 dereferenceable(4) %arg12, ptr noalias align 128 dereferenceable(32768) %arg13, ptr noalias align 128 dereferenceable(32768) %arg14, ptr noalias align 128 dereferenceable(1966080) %arg15, ptr noalias align 16 dereferenceable(4) %arg16, ptr noalias align 128 dereferenceable(32768) %arg17, ptr noalias align 128 dereferenceable(32768) %arg18, ptr noalias align 16 dereferenceable(4) %arg19, ptr noalias align 128 dereferenceable(32768) %arg20, ptr noalias align 128 dereferenceable(32768) %arg21, ptr noalias align 128 dereferenceable(32768) %arg22, ptr noalias align 128 dereferenceable(32768) %arg23, ptr noalias align 128 dereferenceable(32768) %arg24, ptr noalias align 128 dereferenceable(32768) %arg25, ptr noalias align 128 dereferenceable(32768) %arg26, ptr noalias align 128 dereferenceable(32768) %arg27, ptr noalias align 128 dereferenceable(32768) %arg28, ptr noalias align 128 dereferenceable(5120) %arg29, ptr noalias align 128 dereferenceable(655360) %arg30) {
entry:
  %return_buffer346 = alloca float, align 4
  %result_from_other_lane344 = alloca float, align 4
  %return_buffer343 = alloca float, align 4
  %result_from_other_lane341 = alloca float, align 4
  %return_buffer340 = alloca float, align 4
  %result_from_other_lane338 = alloca float, align 4
  %return_buffer337 = alloca float, align 4
  %result_from_other_lane335 = alloca float, align 4
  %return_buffer334 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_132_constant_125 = load float, ptr @72, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_132_constant_125, ptr %2, align 4
  %3 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %4 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !360
  %5 = urem i32 %3, 1024
  %6 = udiv i32 %3, 1024
  %7 = mul i32 %4, 1
  %8 = add i32 %7, %6
  %9 = icmp ult i32 %8, 64
  br i1 %9, label %10, label %early_return

10:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %5, 32
  %thread_id.y = udiv i32 %5, 32
  %lane_id = urem i32 %5, 32
  %11 = udiv i32 %8, 1
  %12 = urem i32 %11, 1
  %13 = udiv i32 %8, 1
  %14 = urem i32 %13, 1
  %15 = udiv i32 %8, 1
  %16 = icmp eq i32 %14, 0
  %tile_bound = select i1 %16, i32 128, i32 4096
  %17 = icmp eq i32 %12, 0
  %tile_bound1 = select i1 %17, i32 20, i32 32
  %tile_origin.0 = mul i32 %15, 1
  %tile_origin.1 = mul i32 %14, 4096
  %tile_origin.2 = mul i32 %12, 32
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %10
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %18 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %18, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %19 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %20 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %21 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %21, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %22 = icmp eq i32 %tile_loop.indvar, 0
  %23 = mul i32 %tile_loop.indvar, 1
  %24 = add i32 %23, 0
  %x_loc = add i32 %24, %20
  %25 = add i32 %tile_origin.1, %y_in_tile.indvar
  %26 = add i32 %tile_origin.2, %x_loc
  %27 = icmp ult i32 %x_loc, %tile_bound1
  br i1 %27, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %concatenate.123.merge108, %tile_loop.loop_body
  br label %tile_loop.loop_header, !llvm.loop !449

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !450

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache82, i32 0, i32 %6, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %28 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %29 = load float, ptr %current_output, align 4
  store float %29, ptr %28, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache82, i32 0, i32 %6, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %30 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result333 = load float, ptr %30, align 4
  %31 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result333, i32 16, i32 31)
  store float %31, ptr %result_from_other_lane, align 4
  call void @region_1_126(ptr %30, ptr %result_from_other_lane, ptr %return_buffer334)
  %32 = load float, ptr %return_buffer334, align 4
  store float %32, ptr %30, align 4
  %partial_reduction_result336 = load float, ptr %30, align 4
  %33 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result336, i32 8, i32 31)
  store float %33, ptr %result_from_other_lane335, align 4
  call void @region_1_126(ptr %30, ptr %result_from_other_lane335, ptr %return_buffer337)
  %34 = load float, ptr %return_buffer337, align 4
  store float %34, ptr %30, align 4
  %partial_reduction_result339 = load float, ptr %30, align 4
  %35 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result339, i32 4, i32 31)
  store float %35, ptr %result_from_other_lane338, align 4
  call void @region_1_126(ptr %30, ptr %result_from_other_lane338, ptr %return_buffer340)
  %36 = load float, ptr %return_buffer340, align 4
  store float %36, ptr %30, align 4
  %partial_reduction_result342 = load float, ptr %30, align 4
  %37 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result342, i32 2, i32 31)
  store float %37, ptr %result_from_other_lane341, align 4
  call void @region_1_126(ptr %30, ptr %result_from_other_lane341, ptr %return_buffer343)
  %38 = load float, ptr %return_buffer343, align 4
  store float %38, ptr %30, align 4
  %partial_reduction_result345 = load float, ptr %30, align 4
  %39 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result345, i32 1, i32 31)
  store float %39, ptr %result_from_other_lane344, align 4
  call void @region_1_126(ptr %30, ptr %result_from_other_lane344, ptr %return_buffer346)
  %40 = load float, ptr %return_buffer346, align 4
  store float %40, ptr %30, align 4
  %41 = icmp ult i32 %thread_id.x, %tile_bound
  %42 = mul i32 %thread_id.y, 1
  %43 = icmp ult i32 %42, %tile_bound1
  %44 = and i1 %43, %41
  %45 = icmp eq i32 %lane_id, 0
  %46 = and i1 %44, %45
  br i1 %46, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %47 = mul nuw nsw i32 %26, 1
  %48 = add nuw nsw i32 0, %47
  %49 = mul nuw nsw i32 %25, 20
  %50 = add nuw nsw i32 %48, %49
  %51 = mul nuw nsw i32 %tile_origin.0, 2560
  %52 = add nuw nsw i32 %50, %51
  %53 = udiv i32 %52, 1
  %54 = urem i32 %53, 20
  %55 = udiv i32 %52, 20
  %56 = urem i32 %55, 128
  %57 = udiv i32 %52, 2560
  %58 = mul i32 %thread_id.x, 1
  %59 = sub i32 %x_loc, %58
  %60 = mul nuw nsw i32 %54, 1
  %61 = add nuw nsw i32 0, %60
  %62 = udiv i32 %61, 20
  %63 = mul nuw nsw i32 %56, 1
  %64 = add nuw nsw i32 0, %63
  %65 = mul nuw nsw i32 %57, 128
  %66 = add nuw nsw i32 %64, %65
  %67 = udiv i32 %66, 8192
  br label %concatenate.pivot.10.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %68 = phi i32 [ 0, %concatenate.pivot.0. ]
  %69 = sub nsw i32 %61, %68
  %70 = udiv i32 %52, 20
  %71 = mul i32 %70, 1
  %72 = add i32 %71, %69
  %73 = udiv i32 %72, 1
  %74 = urem i32 %73, 1
  %75 = udiv i32 %72, 1
  %76 = add i32 %66, 0
  %77 = add i32 %69, 0
  %Arg_15.16 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg15, i32 0, i32 2, i32 %76, i32 0
  %Arg_15.163 = load float, ptr %Arg_15.16, align 4, !invariant.load !297
  %Arg_28.29 = getelementptr inbounds float, ptr %arg28, i32 %72
  %Arg_28.294 = load float, ptr %Arg_28.29, align 4, !invariant.load !297
  %multiply.32 = fmul float %Arg_15.163, %Arg_28.294
  %region_0_132_constant_33 = load float, ptr @71, align 4
  %Arg_28.295 = getelementptr inbounds float, ptr %arg28, i32 %72
  %Arg_28.296 = load float, ptr %Arg_28.295, align 4, !invariant.load !297
  %subtract.35 = fsub float %region_0_132_constant_33, %Arg_28.296
  %multiply.36 = fmul float %multiply.32, %subtract.35
  br label %concatenate.123.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.1.89
  %78 = phi i32 [ 1, %concatenate.pivot.1.89 ]
  %79 = sub nsw i32 %61, %78
  %80 = udiv i32 %52, 20
  %81 = mul i32 %80, 1
  %82 = add i32 %81, %79
  %83 = udiv i32 %82, 1
  %84 = urem i32 %83, 1
  %85 = udiv i32 %82, 1
  %86 = add i32 %66, 0
  %87 = add i32 %79, 0
  %Arg_15.167 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg15, i32 0, i32 3, i32 %86, i32 0
  %Arg_15.168 = load float, ptr %Arg_15.167, align 4, !invariant.load !297
  %Arg_27.28 = getelementptr inbounds float, ptr %arg27, i32 %82
  %Arg_27.289 = load float, ptr %Arg_27.28, align 4, !invariant.load !297
  %multiply.39 = fmul float %Arg_15.168, %Arg_27.289
  %region_0_132_constant_3310 = load float, ptr @71, align 4
  %Arg_27.2811 = getelementptr inbounds float, ptr %arg27, i32 %82
  %Arg_27.2812 = load float, ptr %Arg_27.2811, align 4, !invariant.load !297
  %subtract.40 = fsub float %region_0_132_constant_3310, %Arg_27.2812
  %multiply.41 = fmul float %multiply.39, %subtract.40
  br label %concatenate.123.merge

concat_index_from_operand_id2:                    ; preds = %concatenate.pivot.2.90
  %88 = phi i32 [ 2, %concatenate.pivot.2.90 ]
  %89 = sub nsw i32 %61, %88
  %90 = udiv i32 %52, 20
  %91 = mul i32 %90, 1
  %92 = add i32 %91, %89
  %93 = udiv i32 %92, 1
  %94 = urem i32 %93, 1
  %95 = udiv i32 %92, 1
  %96 = add i32 %66, 0
  %97 = add i32 %89, 0
  %Arg_15.1613 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg15, i32 0, i32 4, i32 %96, i32 0
  %Arg_15.1614 = load float, ptr %Arg_15.1613, align 4, !invariant.load !297
  %Arg_26.27 = getelementptr inbounds float, ptr %arg26, i32 %92
  %Arg_26.2715 = load float, ptr %Arg_26.27, align 4, !invariant.load !297
  %multiply.44 = fmul float %Arg_15.1614, %Arg_26.2715
  %region_0_132_constant_3316 = load float, ptr @71, align 4
  %Arg_26.2717 = getelementptr inbounds float, ptr %arg26, i32 %92
  %Arg_26.2718 = load float, ptr %Arg_26.2717, align 4, !invariant.load !297
  %subtract.45 = fsub float %region_0_132_constant_3316, %Arg_26.2718
  %multiply.46 = fmul float %multiply.44, %subtract.45
  br label %concatenate.123.merge

concat_index_from_operand_id3:                    ; preds = %concatenate.pivot.3.91
  %98 = phi i32 [ 3, %concatenate.pivot.3.91 ]
  %99 = sub nsw i32 %61, %98
  %100 = udiv i32 %52, 20
  %101 = mul i32 %100, 1
  %102 = add i32 %101, %99
  %103 = udiv i32 %102, 1
  %104 = urem i32 %103, 1
  %105 = udiv i32 %102, 1
  %106 = add i32 %66, 0
  %107 = add i32 %99, 0
  %Arg_15.1619 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg15, i32 0, i32 5, i32 %106, i32 0
  %Arg_15.1620 = load float, ptr %Arg_15.1619, align 4, !invariant.load !297
  %Arg_25.26 = getelementptr inbounds float, ptr %arg25, i32 %102
  %Arg_25.2621 = load float, ptr %Arg_25.26, align 4, !invariant.load !297
  %multiply.49 = fmul float %Arg_15.1620, %Arg_25.2621
  %region_0_132_constant_3322 = load float, ptr @71, align 4
  %Arg_25.2623 = getelementptr inbounds float, ptr %arg25, i32 %102
  %Arg_25.2624 = load float, ptr %Arg_25.2623, align 4, !invariant.load !297
  %subtract.50 = fsub float %region_0_132_constant_3322, %Arg_25.2624
  %multiply.51 = fmul float %multiply.49, %subtract.50
  br label %concatenate.123.merge

concat_index_from_operand_id4:                    ; preds = %concatenate.pivot.4.92
  %108 = phi i32 [ 4, %concatenate.pivot.4.92 ]
  %109 = sub nsw i32 %61, %108
  %110 = udiv i32 %52, 20
  %111 = mul i32 %110, 1
  %112 = add i32 %111, %109
  %113 = udiv i32 %112, 1
  %114 = urem i32 %113, 1
  %115 = udiv i32 %112, 1
  %Arg_0.1 = getelementptr inbounds float, ptr %arg0, i32 %112
  %Arg_0.125 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  br label %concatenate.123.merge

concat_index_from_operand_id5:                    ; preds = %concatenate.pivot.5.93
  %116 = phi i32 [ 5, %concatenate.pivot.5.93 ]
  %117 = sub nsw i32 %61, %116
  %118 = udiv i32 %52, 20
  %119 = mul i32 %118, 1
  %120 = add i32 %119, %117
  %121 = udiv i32 %120, 1
  %122 = urem i32 %121, 1
  %123 = udiv i32 %120, 1
  %Arg_1.2 = getelementptr inbounds float, ptr %arg1, i32 %120
  %Arg_1.226 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  br label %concatenate.123.merge

concat_index_from_operand_id6:                    ; preds = %concatenate.pivot.6.94
  %124 = phi i32 [ 6, %concatenate.pivot.6.94 ]
  %125 = sub nsw i32 %61, %124
  %126 = udiv i32 %52, 20
  %127 = mul i32 %126, 1
  %128 = add i32 %127, %125
  %129 = udiv i32 %128, 1
  %130 = urem i32 %129, 1
  %131 = udiv i32 %128, 1
  %Arg_2.3 = getelementptr inbounds float, ptr %arg2, i32 %128
  %Arg_2.327 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  br label %concatenate.123.merge

concat_index_from_operand_id7:                    ; preds = %concatenate.pivot.7.95
  %132 = phi i32 [ 7, %concatenate.pivot.7.95 ]
  %133 = sub nsw i32 %61, %132
  %134 = udiv i32 %52, 20
  %135 = mul i32 %134, 1
  %136 = add i32 %135, %133
  %137 = udiv i32 %136, 1
  %138 = urem i32 %137, 1
  %139 = udiv i32 %136, 1
  %140 = add i32 %66, 0
  %141 = add i32 %133, 0
  %Arg_15.1628 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg15, i32 0, i32 12, i32 %140, i32 0
  %Arg_15.1629 = load float, ptr %Arg_15.1628, align 4, !invariant.load !297
  %Arg_24.25 = getelementptr inbounds float, ptr %arg24, i32 %136
  %Arg_24.2530 = load float, ptr %Arg_24.25, align 4, !invariant.load !297
  %multiply.54 = fmul float %Arg_15.1629, %Arg_24.2530
  %region_0_132_constant_3331 = load float, ptr @71, align 4
  %Arg_24.2532 = getelementptr inbounds float, ptr %arg24, i32 %136
  %Arg_24.2533 = load float, ptr %Arg_24.2532, align 4, !invariant.load !297
  %subtract.55 = fsub float %region_0_132_constant_3331, %Arg_24.2533
  %multiply.56 = fmul float %multiply.54, %subtract.55
  br label %concatenate.123.merge

concat_index_from_operand_id8:                    ; preds = %concatenate.pivot.8.96
  %142 = phi i32 [ 8, %concatenate.pivot.8.96 ]
  %143 = sub nsw i32 %61, %142
  %144 = udiv i32 %52, 20
  %145 = mul i32 %144, 1
  %146 = add i32 %145, %143
  %147 = udiv i32 %146, 1
  %148 = urem i32 %147, 1
  %149 = udiv i32 %146, 1
  %150 = add i32 %66, 0
  %151 = add i32 %143, 0
  %Arg_15.1634 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg15, i32 0, i32 13, i32 %150, i32 0
  %Arg_15.1635 = load float, ptr %Arg_15.1634, align 4, !invariant.load !297
  %Arg_23.24 = getelementptr inbounds float, ptr %arg23, i32 %146
  %Arg_23.2436 = load float, ptr %Arg_23.24, align 4, !invariant.load !297
  %multiply.59 = fmul float %Arg_15.1635, %Arg_23.2436
  %region_0_132_constant_3337 = load float, ptr @71, align 4
  %Arg_23.2438 = getelementptr inbounds float, ptr %arg23, i32 %146
  %Arg_23.2439 = load float, ptr %Arg_23.2438, align 4, !invariant.load !297
  %subtract.60 = fsub float %region_0_132_constant_3337, %Arg_23.2439
  %multiply.61 = fmul float %multiply.59, %subtract.60
  br label %concatenate.123.merge

concat_index_from_operand_id9:                    ; preds = %concatenate.pivot.9.97
  %152 = phi i32 [ 9, %concatenate.pivot.9.97 ]
  %153 = sub nsw i32 %61, %152
  %154 = udiv i32 %52, 20
  %155 = mul i32 %154, 1
  %156 = add i32 %155, %153
  %157 = udiv i32 %156, 1
  %158 = urem i32 %157, 1
  %159 = udiv i32 %156, 1
  %160 = add i32 %66, 0
  %161 = add i32 %153, 0
  %Arg_15.1640 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg15, i32 0, i32 14, i32 %160, i32 0
  %Arg_15.1641 = load float, ptr %Arg_15.1640, align 4, !invariant.load !297
  %Arg_22.23 = getelementptr inbounds float, ptr %arg22, i32 %156
  %Arg_22.2342 = load float, ptr %Arg_22.23, align 4, !invariant.load !297
  %multiply.64 = fmul float %Arg_15.1641, %Arg_22.2342
  %region_0_132_constant_3343 = load float, ptr @71, align 4
  %Arg_22.2344 = getelementptr inbounds float, ptr %arg22, i32 %156
  %Arg_22.2345 = load float, ptr %Arg_22.2344, align 4, !invariant.load !297
  %subtract.65 = fsub float %region_0_132_constant_3343, %Arg_22.2345
  %multiply.66 = fmul float %multiply.64, %subtract.65
  br label %concatenate.123.merge

concat_index_from_operand_id10:                   ; preds = %concatenate.pivot.10.98
  %162 = phi i32 [ 10, %concatenate.pivot.10.98 ]
  %163 = sub nsw i32 %61, %162
  %164 = udiv i32 %52, 20
  %165 = mul i32 %164, 1
  %166 = add i32 %165, %163
  %167 = udiv i32 %166, 1
  %168 = urem i32 %167, 1
  %169 = udiv i32 %166, 1
  %Arg_3.4 = getelementptr inbounds float, ptr %arg3, i32 %166
  %Arg_3.446 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  br label %concatenate.123.merge

concat_index_from_operand_id11:                   ; preds = %concatenate.pivot.11.99
  %170 = phi i32 [ 11, %concatenate.pivot.11.99 ]
  %171 = sub nsw i32 %61, %170
  %172 = udiv i32 %52, 20
  %173 = mul i32 %172, 1
  %174 = add i32 %173, %171
  %175 = udiv i32 %174, 1
  %176 = urem i32 %175, 1
  %177 = udiv i32 %174, 1
  %Arg_4.5 = getelementptr inbounds float, ptr %arg4, i32 %174
  %Arg_4.547 = load float, ptr %Arg_4.5, align 4, !invariant.load !297
  br label %concatenate.123.merge

concat_index_from_operand_id12:                   ; preds = %concatenate.pivot.12.100
  %178 = phi i32 [ 12, %concatenate.pivot.12.100 ]
  %179 = sub nsw i32 %61, %178
  %180 = udiv i32 %52, 20
  %181 = mul i32 %180, 1
  %182 = add i32 %181, %179
  %183 = udiv i32 %182, 1
  %184 = urem i32 %183, 1
  %185 = udiv i32 %182, 1
  %Arg_5.6 = getelementptr inbounds float, ptr %arg5, i32 %182
  %Arg_5.648 = load float, ptr %Arg_5.6, align 4, !invariant.load !297
  br label %concatenate.123.merge

concat_index_from_operand_id13:                   ; preds = %concatenate.pivot.13.101
  %186 = phi i32 [ 13, %concatenate.pivot.13.101 ]
  %187 = sub nsw i32 %61, %186
  %188 = udiv i32 %52, 20
  %189 = mul i32 %188, 1
  %190 = add i32 %189, %187
  %191 = udiv i32 %190, 1
  %192 = urem i32 %191, 1
  %193 = udiv i32 %190, 1
  %Arg_6.7 = getelementptr inbounds float, ptr %arg6, i32 %190
  %Arg_6.749 = load float, ptr %Arg_6.7, align 4, !invariant.load !297
  br label %concatenate.123.merge

concat_index_from_operand_id14:                   ; preds = %concatenate.pivot.14.102
  %194 = phi i32 [ 14, %concatenate.pivot.14.102 ]
  %195 = sub nsw i32 %61, %194
  %196 = udiv i32 %52, 20
  %197 = mul i32 %196, 1
  %198 = add i32 %197, %195
  %199 = udiv i32 %198, 1
  %200 = urem i32 %199, 1
  %201 = udiv i32 %198, 1
  %Arg_7.8 = getelementptr inbounds float, ptr %arg7, i32 %198
  %Arg_7.850 = load float, ptr %Arg_7.8, align 4, !invariant.load !297
  br label %concatenate.123.merge

concat_index_from_operand_id15:                   ; preds = %concatenate.pivot.15.103
  %202 = phi i32 [ 15, %concatenate.pivot.15.103 ]
  %203 = sub nsw i32 %61, %202
  %204 = udiv i32 %52, 20
  %205 = mul i32 %204, 1
  %206 = add i32 %205, %203
  %207 = udiv i32 %206, 1
  %208 = urem i32 %207, 1
  %209 = udiv i32 %206, 1
  %Arg_8.9 = getelementptr inbounds float, ptr %arg8, i32 %206
  %Arg_8.951 = load float, ptr %Arg_8.9, align 4, !invariant.load !297
  br label %concatenate.123.merge

concat_index_from_operand_id16:                   ; preds = %concatenate.pivot.16.104
  %210 = phi i32 [ 16, %concatenate.pivot.16.104 ]
  %211 = sub nsw i32 %61, %210
  %212 = udiv i32 %52, 20
  %213 = mul i32 %212, 1
  %214 = add i32 %213, %211
  %215 = udiv i32 %214, 1
  %216 = urem i32 %215, 1
  %217 = udiv i32 %214, 1
  %Arg_9.10 = getelementptr inbounds float, ptr %arg9, i32 %214
  %Arg_9.1052 = load float, ptr %Arg_9.10, align 4, !invariant.load !297
  br label %concatenate.123.merge

concat_index_from_operand_id17:                   ; preds = %concatenate.pivot.17.105
  %218 = phi i32 [ 17, %concatenate.pivot.17.105 ]
  %219 = sub nsw i32 %61, %218
  %220 = udiv i32 %52, 20
  %221 = mul i32 %220, 1
  %222 = add i32 %221, %219
  %223 = udiv i32 %222, 1
  %224 = urem i32 %223, 1
  %225 = udiv i32 %222, 1
  %226 = add i32 %66, 0
  %227 = add i32 %219, 0
  %Arg_15.1653 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg15, i32 0, i32 54, i32 %226, i32 0
  %Arg_15.1654 = load float, ptr %Arg_15.1653, align 4, !invariant.load !297
  %228 = add i32 %66, 0
  %229 = add i32 %219, 0
  %Arg_15.1655 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg15, i32 0, i32 55, i32 %228, i32 0
  %Arg_15.1656 = load float, ptr %Arg_15.1655, align 4, !invariant.load !297
  %add.69 = fadd float %Arg_15.1654, %Arg_15.1656
  %region_0_132_constant_3357 = load float, ptr @71, align 4
  %230 = add i32 %66, 0
  %231 = add i32 %219, 17
  %Arg_10.11 = getelementptr inbounds [8192 x [20 x float]], ptr %arg10, i32 0, i32 %230, i32 %231
  %Arg_10.1158 = load float, ptr %Arg_10.11, align 4, !invariant.load !297
  %Arg_11.12 = getelementptr inbounds [20 x float], ptr %arg11, i32 0, i32 %231
  %Arg_11.1259 = load float, ptr %Arg_11.12, align 4, !invariant.load !297
  %add.72 = fadd float %Arg_10.1158, %Arg_11.1259
  %Arg_20.21 = getelementptr inbounds float, ptr %arg20, i32 %222
  %Arg_20.2160 = load float, ptr %Arg_20.21, align 4, !invariant.load !297
  %Arg_21.22 = getelementptr inbounds float, ptr %arg21, i32 %222
  %Arg_21.2261 = load float, ptr %Arg_21.22, align 4, !invariant.load !297
  %add.74 = fadd float %Arg_20.2160, %Arg_21.2261
  %Arg_19.20 = getelementptr inbounds [1 x float], ptr %arg19, i32 0, i32 0
  %Arg_19.2062 = load float, ptr %Arg_19.20, align 4, !invariant.load !297
  %add.77 = fadd float %add.74, %Arg_19.2062
  %add.79 = fadd float %add.72, %add.77
  %232 = fneg float %add.79
  %233 = call float @__nv_expf(float %232)
  %add.82 = fadd float %region_0_132_constant_3357, %233
  %divide.83 = fdiv float %region_0_132_constant_3357, %add.82
  %multiply.84 = fmul float %add.69, %divide.83
  %subtract.85 = fsub float %region_0_132_constant_3357, %divide.83
  %multiply.86 = fmul float %multiply.84, %subtract.85
  br label %concatenate.123.merge

concat_index_from_operand_id18:                   ; preds = %concatenate.pivot.18.106
  %234 = phi i32 [ 18, %concatenate.pivot.18.106 ]
  %235 = sub nsw i32 %61, %234
  %236 = udiv i32 %52, 20
  %237 = mul i32 %236, 1
  %238 = add i32 %237, %235
  %239 = udiv i32 %238, 1
  %240 = urem i32 %239, 1
  %241 = udiv i32 %238, 1
  %242 = add i32 %66, 0
  %243 = add i32 %235, 0
  %Arg_15.1663 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg15, i32 0, i32 58, i32 %242, i32 0
  %Arg_15.1664 = load float, ptr %Arg_15.1663, align 4, !invariant.load !297
  %244 = add i32 %66, 0
  %245 = add i32 %235, 0
  %Arg_15.1665 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg15, i32 0, i32 59, i32 %244, i32 0
  %Arg_15.1666 = load float, ptr %Arg_15.1665, align 4, !invariant.load !297
  %add.89 = fadd float %Arg_15.1664, %Arg_15.1666
  %region_0_132_constant_3367 = load float, ptr @71, align 4
  %246 = add i32 %66, 0
  %247 = add i32 %235, 18
  %Arg_10.1168 = getelementptr inbounds [8192 x [20 x float]], ptr %arg10, i32 0, i32 %246, i32 %247
  %Arg_10.1169 = load float, ptr %Arg_10.1168, align 4, !invariant.load !297
  %Arg_11.1270 = getelementptr inbounds [20 x float], ptr %arg11, i32 0, i32 %247
  %Arg_11.1271 = load float, ptr %Arg_11.1270, align 4, !invariant.load !297
  %add.7272 = fadd float %Arg_10.1169, %Arg_11.1271
  %Arg_17.18 = getelementptr inbounds float, ptr %arg17, i32 %238
  %Arg_17.1873 = load float, ptr %Arg_17.18, align 4, !invariant.load !297
  %Arg_18.19 = getelementptr inbounds float, ptr %arg18, i32 %238
  %Arg_18.1974 = load float, ptr %Arg_18.19, align 4, !invariant.load !297
  %add.92 = fadd float %Arg_17.1873, %Arg_18.1974
  %Arg_16.17 = getelementptr inbounds [1 x float], ptr %arg16, i32 0, i32 0
  %Arg_16.1775 = load float, ptr %Arg_16.17, align 4, !invariant.load !297
  %add.95 = fadd float %add.92, %Arg_16.1775
  %add.97 = fadd float %add.7272, %add.95
  %248 = fneg float %add.97
  %249 = call float @__nv_expf(float %248)
  %add.100 = fadd float %region_0_132_constant_3367, %249
  %divide.101 = fdiv float %region_0_132_constant_3367, %add.100
  %multiply.102 = fmul float %add.89, %divide.101
  %subtract.103 = fsub float %region_0_132_constant_3367, %divide.101
  %multiply.104 = fmul float %multiply.102, %subtract.103
  br label %concatenate.123.merge

concat_index_from_operand_id19:                   ; preds = %concatenate.pivot.19.107
  %250 = phi i32 [ 19, %concatenate.pivot.19.107 ]
  %251 = sub nsw i32 %61, %250
  %252 = udiv i32 %52, 20
  %253 = mul i32 %252, 1
  %254 = add i32 %253, %251
  %255 = udiv i32 %254, 1
  %256 = urem i32 %255, 1
  %257 = udiv i32 %254, 1
  %258 = add i32 %66, 0
  %259 = add i32 %251, 0
  %Arg_15.1676 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg15, i32 0, i32 56, i32 %258, i32 0
  %Arg_15.1677 = load float, ptr %Arg_15.1676, align 4, !invariant.load !297
  %260 = add i32 %66, 0
  %261 = add i32 %251, 0
  %Arg_15.1678 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg15, i32 0, i32 57, i32 %260, i32 0
  %Arg_15.1679 = load float, ptr %Arg_15.1678, align 4, !invariant.load !297
  %add.107 = fadd float %Arg_15.1677, %Arg_15.1679
  %region_0_132_constant_3380 = load float, ptr @71, align 4
  %Arg_13.14 = getelementptr inbounds float, ptr %arg13, i32 %254
  %Arg_13.1481 = load float, ptr %Arg_13.14, align 4, !invariant.load !297
  %Arg_14.15 = getelementptr inbounds float, ptr %arg14, i32 %254
  %Arg_14.1582 = load float, ptr %Arg_14.15, align 4, !invariant.load !297
  %add.109 = fadd float %Arg_13.1481, %Arg_14.1582
  %Arg_12.13 = getelementptr inbounds [1 x float], ptr %arg12, i32 0, i32 0
  %Arg_12.1383 = load float, ptr %Arg_12.13, align 4, !invariant.load !297
  %add.112 = fadd float %add.109, %Arg_12.1383
  %262 = add i32 %66, 0
  %263 = add i32 %251, 19
  %Arg_10.1184 = getelementptr inbounds [8192 x [20 x float]], ptr %arg10, i32 0, i32 %262, i32 %263
  %Arg_10.1185 = load float, ptr %Arg_10.1184, align 4, !invariant.load !297
  %Arg_11.1286 = getelementptr inbounds [20 x float], ptr %arg11, i32 0, i32 %263
  %Arg_11.1287 = load float, ptr %Arg_11.1286, align 4, !invariant.load !297
  %add.7288 = fadd float %Arg_10.1185, %Arg_11.1287
  %add.115 = fadd float %add.112, %add.7288
  %264 = fneg float %add.115
  %265 = call float @__nv_expf(float %264)
  %add.118 = fadd float %region_0_132_constant_3380, %265
  %divide.119 = fdiv float %region_0_132_constant_3380, %add.118
  %multiply.120 = fmul float %add.107, %divide.119
  %subtract.121 = fsub float %region_0_132_constant_3380, %divide.119
  %multiply.122 = fmul float %multiply.120, %subtract.121
  br label %concatenate.123.merge

concatenate.pivot.10.:                            ; preds = %x_in_tile-true
  %266 = icmp ult i32 %61, 10
  br i1 %266, label %concatenate.pivot.5., label %concatenate.pivot.15.

concatenate.pivot.5.:                             ; preds = %concatenate.pivot.10.
  %267 = icmp ult i32 %61, 5
  br i1 %267, label %concatenate.pivot.2., label %concatenate.pivot.7.

concatenate.pivot.2.:                             ; preds = %concatenate.pivot.5.
  %268 = icmp ult i32 %61, 2
  br i1 %268, label %concatenate.pivot.1., label %concatenate.pivot.3.

concatenate.pivot.1.:                             ; preds = %concatenate.pivot.2.
  %269 = icmp ult i32 %61, 1
  br i1 %269, label %concatenate.pivot.0., label %concatenate.pivot.1.89

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.1.
  br label %concat_index_from_operand_id0

concatenate.pivot.1.89:                           ; preds = %concatenate.pivot.1.
  br label %concat_index_from_operand_id1

concatenate.pivot.3.:                             ; preds = %concatenate.pivot.2.
  %270 = icmp ult i32 %61, 3
  br i1 %270, label %concatenate.pivot.2.90, label %concatenate.pivot.4.

concatenate.pivot.2.90:                           ; preds = %concatenate.pivot.3.
  br label %concat_index_from_operand_id2

concatenate.pivot.4.:                             ; preds = %concatenate.pivot.3.
  %271 = icmp ult i32 %61, 4
  br i1 %271, label %concatenate.pivot.3.91, label %concatenate.pivot.4.92

concatenate.pivot.3.91:                           ; preds = %concatenate.pivot.4.
  br label %concat_index_from_operand_id3

concatenate.pivot.4.92:                           ; preds = %concatenate.pivot.4.
  br label %concat_index_from_operand_id4

concatenate.pivot.7.:                             ; preds = %concatenate.pivot.5.
  %272 = icmp ult i32 %61, 7
  br i1 %272, label %concatenate.pivot.6., label %concatenate.pivot.8.

concatenate.pivot.6.:                             ; preds = %concatenate.pivot.7.
  %273 = icmp ult i32 %61, 6
  br i1 %273, label %concatenate.pivot.5.93, label %concatenate.pivot.6.94

concatenate.pivot.5.93:                           ; preds = %concatenate.pivot.6.
  br label %concat_index_from_operand_id5

concatenate.pivot.6.94:                           ; preds = %concatenate.pivot.6.
  br label %concat_index_from_operand_id6

concatenate.pivot.8.:                             ; preds = %concatenate.pivot.7.
  %274 = icmp ult i32 %61, 8
  br i1 %274, label %concatenate.pivot.7.95, label %concatenate.pivot.9.

concatenate.pivot.7.95:                           ; preds = %concatenate.pivot.8.
  br label %concat_index_from_operand_id7

concatenate.pivot.9.:                             ; preds = %concatenate.pivot.8.
  %275 = icmp ult i32 %61, 9
  br i1 %275, label %concatenate.pivot.8.96, label %concatenate.pivot.9.97

concatenate.pivot.8.96:                           ; preds = %concatenate.pivot.9.
  br label %concat_index_from_operand_id8

concatenate.pivot.9.97:                           ; preds = %concatenate.pivot.9.
  br label %concat_index_from_operand_id9

concatenate.pivot.15.:                            ; preds = %concatenate.pivot.10.
  %276 = icmp ult i32 %61, 15
  br i1 %276, label %concatenate.pivot.12., label %concatenate.pivot.17.

concatenate.pivot.12.:                            ; preds = %concatenate.pivot.15.
  %277 = icmp ult i32 %61, 12
  br i1 %277, label %concatenate.pivot.11., label %concatenate.pivot.13.

concatenate.pivot.11.:                            ; preds = %concatenate.pivot.12.
  %278 = icmp ult i32 %61, 11
  br i1 %278, label %concatenate.pivot.10.98, label %concatenate.pivot.11.99

concatenate.pivot.10.98:                          ; preds = %concatenate.pivot.11.
  br label %concat_index_from_operand_id10

concatenate.pivot.11.99:                          ; preds = %concatenate.pivot.11.
  br label %concat_index_from_operand_id11

concatenate.pivot.13.:                            ; preds = %concatenate.pivot.12.
  %279 = icmp ult i32 %61, 13
  br i1 %279, label %concatenate.pivot.12.100, label %concatenate.pivot.14.

concatenate.pivot.12.100:                         ; preds = %concatenate.pivot.13.
  br label %concat_index_from_operand_id12

concatenate.pivot.14.:                            ; preds = %concatenate.pivot.13.
  %280 = icmp ult i32 %61, 14
  br i1 %280, label %concatenate.pivot.13.101, label %concatenate.pivot.14.102

concatenate.pivot.13.101:                         ; preds = %concatenate.pivot.14.
  br label %concat_index_from_operand_id13

concatenate.pivot.14.102:                         ; preds = %concatenate.pivot.14.
  br label %concat_index_from_operand_id14

concatenate.pivot.17.:                            ; preds = %concatenate.pivot.15.
  %281 = icmp ult i32 %61, 17
  br i1 %281, label %concatenate.pivot.16., label %concatenate.pivot.18.

concatenate.pivot.16.:                            ; preds = %concatenate.pivot.17.
  %282 = icmp ult i32 %61, 16
  br i1 %282, label %concatenate.pivot.15.103, label %concatenate.pivot.16.104

concatenate.pivot.15.103:                         ; preds = %concatenate.pivot.16.
  br label %concat_index_from_operand_id15

concatenate.pivot.16.104:                         ; preds = %concatenate.pivot.16.
  br label %concat_index_from_operand_id16

concatenate.pivot.18.:                            ; preds = %concatenate.pivot.17.
  %283 = icmp ult i32 %61, 18
  br i1 %283, label %concatenate.pivot.17.105, label %concatenate.pivot.19.

concatenate.pivot.17.105:                         ; preds = %concatenate.pivot.18.
  br label %concat_index_from_operand_id17

concatenate.pivot.19.:                            ; preds = %concatenate.pivot.18.
  %284 = icmp ult i32 %61, 19
  br i1 %284, label %concatenate.pivot.18.106, label %concatenate.pivot.19.107

concatenate.pivot.18.106:                         ; preds = %concatenate.pivot.19.
  br label %concat_index_from_operand_id18

concatenate.pivot.19.107:                         ; preds = %concatenate.pivot.19.
  br label %concat_index_from_operand_id19

concatenate.123.merge:                            ; preds = %concat_index_from_operand_id19, %concat_index_from_operand_id18, %concat_index_from_operand_id17, %concat_index_from_operand_id16, %concat_index_from_operand_id15, %concat_index_from_operand_id14, %concat_index_from_operand_id13, %concat_index_from_operand_id12, %concat_index_from_operand_id11, %concat_index_from_operand_id10, %concat_index_from_operand_id9, %concat_index_from_operand_id8, %concat_index_from_operand_id7, %concat_index_from_operand_id6, %concat_index_from_operand_id5, %concat_index_from_operand_id4, %concat_index_from_operand_id3, %concat_index_from_operand_id2, %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %285 = phi float [ %multiply.36, %concat_index_from_operand_id0 ], [ %multiply.41, %concat_index_from_operand_id1 ], [ %multiply.46, %concat_index_from_operand_id2 ], [ %multiply.51, %concat_index_from_operand_id3 ], [ %Arg_0.125, %concat_index_from_operand_id4 ], [ %Arg_1.226, %concat_index_from_operand_id5 ], [ %Arg_2.327, %concat_index_from_operand_id6 ], [ %multiply.56, %concat_index_from_operand_id7 ], [ %multiply.61, %concat_index_from_operand_id8 ], [ %multiply.66, %concat_index_from_operand_id9 ], [ %Arg_3.446, %concat_index_from_operand_id10 ], [ %Arg_4.547, %concat_index_from_operand_id11 ], [ %Arg_5.648, %concat_index_from_operand_id12 ], [ %Arg_6.749, %concat_index_from_operand_id13 ], [ %Arg_7.850, %concat_index_from_operand_id14 ], [ %Arg_8.951, %concat_index_from_operand_id15 ], [ %Arg_9.1052, %concat_index_from_operand_id16 ], [ %multiply.86, %concat_index_from_operand_id17 ], [ %multiply.104, %concat_index_from_operand_id18 ], [ %multiply.122, %concat_index_from_operand_id19 ]
  store float %285, ptr %reduction_input_address, align 4
  %286 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %59
  call void @region_1_126(ptr %286, ptr %reduction_input_address, ptr %return_buffer)
  %287 = load float, ptr %return_buffer, align 4
  store float %287, ptr %286, align 4
  %288 = mul nuw nsw i32 %54, 1
  %289 = add nuw nsw i32 0, %288
  %290 = udiv i32 %289, 20
  %291 = mul nuw nsw i32 %56, 1
  %292 = add nuw nsw i32 0, %291
  %293 = mul nuw nsw i32 %57, 128
  %294 = add nuw nsw i32 %292, %293
  %295 = udiv i32 %294, 8192
  br label %concatenate.pivot.10.294

concat_index_from_operand_id0109:                 ; preds = %concatenate.pivot.0.298
  %296 = phi i32 [ 0, %concatenate.pivot.0.298 ]
  %297 = sub nsw i32 %289, %296
  %298 = udiv i32 %52, 20
  %299 = mul i32 %298, 1
  %300 = add i32 %299, %297
  %301 = udiv i32 %300, 1
  %302 = urem i32 %301, 1
  %303 = udiv i32 %300, 1
  %304 = add i32 %294, 0
  %305 = add i32 %297, 0
  %Arg_15.16110 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg15, i32 0, i32 2, i32 %304, i32 0
  %Arg_15.16111 = load float, ptr %Arg_15.16110, align 4, !invariant.load !297
  %Arg_28.29112 = getelementptr inbounds float, ptr %arg28, i32 %300
  %Arg_28.29113 = load float, ptr %Arg_28.29112, align 4, !invariant.load !297
  %multiply.32114 = fmul float %Arg_15.16111, %Arg_28.29113
  %region_0_132_constant_33115 = load float, ptr @71, align 4
  %Arg_28.29116 = getelementptr inbounds float, ptr %arg28, i32 %300
  %Arg_28.29117 = load float, ptr %Arg_28.29116, align 4, !invariant.load !297
  %subtract.35118 = fsub float %region_0_132_constant_33115, %Arg_28.29117
  %multiply.36119 = fmul float %multiply.32114, %subtract.35118
  br label %concatenate.123.merge108

concat_index_from_operand_id1120:                 ; preds = %concatenate.pivot.1.299
  %306 = phi i32 [ 1, %concatenate.pivot.1.299 ]
  %307 = sub nsw i32 %289, %306
  %308 = udiv i32 %52, 20
  %309 = mul i32 %308, 1
  %310 = add i32 %309, %307
  %311 = udiv i32 %310, 1
  %312 = urem i32 %311, 1
  %313 = udiv i32 %310, 1
  %314 = add i32 %294, 0
  %315 = add i32 %307, 0
  %Arg_15.16121 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg15, i32 0, i32 3, i32 %314, i32 0
  %Arg_15.16122 = load float, ptr %Arg_15.16121, align 4, !invariant.load !297
  %Arg_27.28123 = getelementptr inbounds float, ptr %arg27, i32 %310
  %Arg_27.28124 = load float, ptr %Arg_27.28123, align 4, !invariant.load !297
  %multiply.39125 = fmul float %Arg_15.16122, %Arg_27.28124
  %region_0_132_constant_33126 = load float, ptr @71, align 4
  %Arg_27.28127 = getelementptr inbounds float, ptr %arg27, i32 %310
  %Arg_27.28128 = load float, ptr %Arg_27.28127, align 4, !invariant.load !297
  %subtract.40129 = fsub float %region_0_132_constant_33126, %Arg_27.28128
  %multiply.41130 = fmul float %multiply.39125, %subtract.40129
  br label %concatenate.123.merge108

concat_index_from_operand_id2131:                 ; preds = %concatenate.pivot.2.301
  %316 = phi i32 [ 2, %concatenate.pivot.2.301 ]
  %317 = sub nsw i32 %289, %316
  %318 = udiv i32 %52, 20
  %319 = mul i32 %318, 1
  %320 = add i32 %319, %317
  %321 = udiv i32 %320, 1
  %322 = urem i32 %321, 1
  %323 = udiv i32 %320, 1
  %324 = add i32 %294, 0
  %325 = add i32 %317, 0
  %Arg_15.16132 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg15, i32 0, i32 4, i32 %324, i32 0
  %Arg_15.16133 = load float, ptr %Arg_15.16132, align 4, !invariant.load !297
  %Arg_26.27134 = getelementptr inbounds float, ptr %arg26, i32 %320
  %Arg_26.27135 = load float, ptr %Arg_26.27134, align 4, !invariant.load !297
  %multiply.44136 = fmul float %Arg_15.16133, %Arg_26.27135
  %region_0_132_constant_33137 = load float, ptr @71, align 4
  %Arg_26.27138 = getelementptr inbounds float, ptr %arg26, i32 %320
  %Arg_26.27139 = load float, ptr %Arg_26.27138, align 4, !invariant.load !297
  %subtract.45140 = fsub float %region_0_132_constant_33137, %Arg_26.27139
  %multiply.46141 = fmul float %multiply.44136, %subtract.45140
  br label %concatenate.123.merge108

concat_index_from_operand_id3142:                 ; preds = %concatenate.pivot.3.303
  %326 = phi i32 [ 3, %concatenate.pivot.3.303 ]
  %327 = sub nsw i32 %289, %326
  %328 = udiv i32 %52, 20
  %329 = mul i32 %328, 1
  %330 = add i32 %329, %327
  %331 = udiv i32 %330, 1
  %332 = urem i32 %331, 1
  %333 = udiv i32 %330, 1
  %334 = add i32 %294, 0
  %335 = add i32 %327, 0
  %Arg_15.16143 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg15, i32 0, i32 5, i32 %334, i32 0
  %Arg_15.16144 = load float, ptr %Arg_15.16143, align 4, !invariant.load !297
  %Arg_25.26145 = getelementptr inbounds float, ptr %arg25, i32 %330
  %Arg_25.26146 = load float, ptr %Arg_25.26145, align 4, !invariant.load !297
  %multiply.49147 = fmul float %Arg_15.16144, %Arg_25.26146
  %region_0_132_constant_33148 = load float, ptr @71, align 4
  %Arg_25.26149 = getelementptr inbounds float, ptr %arg25, i32 %330
  %Arg_25.26150 = load float, ptr %Arg_25.26149, align 4, !invariant.load !297
  %subtract.50151 = fsub float %region_0_132_constant_33148, %Arg_25.26150
  %multiply.51152 = fmul float %multiply.49147, %subtract.50151
  br label %concatenate.123.merge108

concat_index_from_operand_id4153:                 ; preds = %concatenate.pivot.4.304
  %336 = phi i32 [ 4, %concatenate.pivot.4.304 ]
  %337 = sub nsw i32 %289, %336
  %338 = udiv i32 %52, 20
  %339 = mul i32 %338, 1
  %340 = add i32 %339, %337
  %341 = udiv i32 %340, 1
  %342 = urem i32 %341, 1
  %343 = udiv i32 %340, 1
  %Arg_0.1154 = getelementptr inbounds float, ptr %arg0, i32 %340
  %Arg_0.1155 = load float, ptr %Arg_0.1154, align 4, !invariant.load !297
  br label %concatenate.123.merge108

concat_index_from_operand_id5156:                 ; preds = %concatenate.pivot.5.307
  %344 = phi i32 [ 5, %concatenate.pivot.5.307 ]
  %345 = sub nsw i32 %289, %344
  %346 = udiv i32 %52, 20
  %347 = mul i32 %346, 1
  %348 = add i32 %347, %345
  %349 = udiv i32 %348, 1
  %350 = urem i32 %349, 1
  %351 = udiv i32 %348, 1
  %Arg_1.2157 = getelementptr inbounds float, ptr %arg1, i32 %348
  %Arg_1.2158 = load float, ptr %Arg_1.2157, align 4, !invariant.load !297
  br label %concatenate.123.merge108

concat_index_from_operand_id6159:                 ; preds = %concatenate.pivot.6.308
  %352 = phi i32 [ 6, %concatenate.pivot.6.308 ]
  %353 = sub nsw i32 %289, %352
  %354 = udiv i32 %52, 20
  %355 = mul i32 %354, 1
  %356 = add i32 %355, %353
  %357 = udiv i32 %356, 1
  %358 = urem i32 %357, 1
  %359 = udiv i32 %356, 1
  %Arg_2.3160 = getelementptr inbounds float, ptr %arg2, i32 %356
  %Arg_2.3161 = load float, ptr %Arg_2.3160, align 4, !invariant.load !297
  br label %concatenate.123.merge108

concat_index_from_operand_id7162:                 ; preds = %concatenate.pivot.7.310
  %360 = phi i32 [ 7, %concatenate.pivot.7.310 ]
  %361 = sub nsw i32 %289, %360
  %362 = udiv i32 %52, 20
  %363 = mul i32 %362, 1
  %364 = add i32 %363, %361
  %365 = udiv i32 %364, 1
  %366 = urem i32 %365, 1
  %367 = udiv i32 %364, 1
  %368 = add i32 %294, 0
  %369 = add i32 %361, 0
  %Arg_15.16163 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg15, i32 0, i32 12, i32 %368, i32 0
  %Arg_15.16164 = load float, ptr %Arg_15.16163, align 4, !invariant.load !297
  %Arg_24.25165 = getelementptr inbounds float, ptr %arg24, i32 %364
  %Arg_24.25166 = load float, ptr %Arg_24.25165, align 4, !invariant.load !297
  %multiply.54167 = fmul float %Arg_15.16164, %Arg_24.25166
  %region_0_132_constant_33168 = load float, ptr @71, align 4
  %Arg_24.25169 = getelementptr inbounds float, ptr %arg24, i32 %364
  %Arg_24.25170 = load float, ptr %Arg_24.25169, align 4, !invariant.load !297
  %subtract.55171 = fsub float %region_0_132_constant_33168, %Arg_24.25170
  %multiply.56172 = fmul float %multiply.54167, %subtract.55171
  br label %concatenate.123.merge108

concat_index_from_operand_id8173:                 ; preds = %concatenate.pivot.8.312
  %370 = phi i32 [ 8, %concatenate.pivot.8.312 ]
  %371 = sub nsw i32 %289, %370
  %372 = udiv i32 %52, 20
  %373 = mul i32 %372, 1
  %374 = add i32 %373, %371
  %375 = udiv i32 %374, 1
  %376 = urem i32 %375, 1
  %377 = udiv i32 %374, 1
  %378 = add i32 %294, 0
  %379 = add i32 %371, 0
  %Arg_15.16174 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg15, i32 0, i32 13, i32 %378, i32 0
  %Arg_15.16175 = load float, ptr %Arg_15.16174, align 4, !invariant.load !297
  %Arg_23.24176 = getelementptr inbounds float, ptr %arg23, i32 %374
  %Arg_23.24177 = load float, ptr %Arg_23.24176, align 4, !invariant.load !297
  %multiply.59178 = fmul float %Arg_15.16175, %Arg_23.24177
  %region_0_132_constant_33179 = load float, ptr @71, align 4
  %Arg_23.24180 = getelementptr inbounds float, ptr %arg23, i32 %374
  %Arg_23.24181 = load float, ptr %Arg_23.24180, align 4, !invariant.load !297
  %subtract.60182 = fsub float %region_0_132_constant_33179, %Arg_23.24181
  %multiply.61183 = fmul float %multiply.59178, %subtract.60182
  br label %concatenate.123.merge108

concat_index_from_operand_id9184:                 ; preds = %concatenate.pivot.9.313
  %380 = phi i32 [ 9, %concatenate.pivot.9.313 ]
  %381 = sub nsw i32 %289, %380
  %382 = udiv i32 %52, 20
  %383 = mul i32 %382, 1
  %384 = add i32 %383, %381
  %385 = udiv i32 %384, 1
  %386 = urem i32 %385, 1
  %387 = udiv i32 %384, 1
  %388 = add i32 %294, 0
  %389 = add i32 %381, 0
  %Arg_15.16185 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg15, i32 0, i32 14, i32 %388, i32 0
  %Arg_15.16186 = load float, ptr %Arg_15.16185, align 4, !invariant.load !297
  %Arg_22.23187 = getelementptr inbounds float, ptr %arg22, i32 %384
  %Arg_22.23188 = load float, ptr %Arg_22.23187, align 4, !invariant.load !297
  %multiply.64189 = fmul float %Arg_15.16186, %Arg_22.23188
  %region_0_132_constant_33190 = load float, ptr @71, align 4
  %Arg_22.23191 = getelementptr inbounds float, ptr %arg22, i32 %384
  %Arg_22.23192 = load float, ptr %Arg_22.23191, align 4, !invariant.load !297
  %subtract.65193 = fsub float %region_0_132_constant_33190, %Arg_22.23192
  %multiply.66194 = fmul float %multiply.64189, %subtract.65193
  br label %concatenate.123.merge108

concat_index_from_operand_id10195:                ; preds = %concatenate.pivot.10.317
  %390 = phi i32 [ 10, %concatenate.pivot.10.317 ]
  %391 = sub nsw i32 %289, %390
  %392 = udiv i32 %52, 20
  %393 = mul i32 %392, 1
  %394 = add i32 %393, %391
  %395 = udiv i32 %394, 1
  %396 = urem i32 %395, 1
  %397 = udiv i32 %394, 1
  %Arg_3.4196 = getelementptr inbounds float, ptr %arg3, i32 %394
  %Arg_3.4197 = load float, ptr %Arg_3.4196, align 4, !invariant.load !297
  br label %concatenate.123.merge108

concat_index_from_operand_id11198:                ; preds = %concatenate.pivot.11.318
  %398 = phi i32 [ 11, %concatenate.pivot.11.318 ]
  %399 = sub nsw i32 %289, %398
  %400 = udiv i32 %52, 20
  %401 = mul i32 %400, 1
  %402 = add i32 %401, %399
  %403 = udiv i32 %402, 1
  %404 = urem i32 %403, 1
  %405 = udiv i32 %402, 1
  %Arg_4.5199 = getelementptr inbounds float, ptr %arg4, i32 %402
  %Arg_4.5200 = load float, ptr %Arg_4.5199, align 4, !invariant.load !297
  br label %concatenate.123.merge108

concat_index_from_operand_id12201:                ; preds = %concatenate.pivot.12.320
  %406 = phi i32 [ 12, %concatenate.pivot.12.320 ]
  %407 = sub nsw i32 %289, %406
  %408 = udiv i32 %52, 20
  %409 = mul i32 %408, 1
  %410 = add i32 %409, %407
  %411 = udiv i32 %410, 1
  %412 = urem i32 %411, 1
  %413 = udiv i32 %410, 1
  %Arg_5.6202 = getelementptr inbounds float, ptr %arg5, i32 %410
  %Arg_5.6203 = load float, ptr %Arg_5.6202, align 4, !invariant.load !297
  br label %concatenate.123.merge108

concat_index_from_operand_id13204:                ; preds = %concatenate.pivot.13.322
  %414 = phi i32 [ 13, %concatenate.pivot.13.322 ]
  %415 = sub nsw i32 %289, %414
  %416 = udiv i32 %52, 20
  %417 = mul i32 %416, 1
  %418 = add i32 %417, %415
  %419 = udiv i32 %418, 1
  %420 = urem i32 %419, 1
  %421 = udiv i32 %418, 1
  %Arg_6.7205 = getelementptr inbounds float, ptr %arg6, i32 %418
  %Arg_6.7206 = load float, ptr %Arg_6.7205, align 4, !invariant.load !297
  br label %concatenate.123.merge108

concat_index_from_operand_id14207:                ; preds = %concatenate.pivot.14.323
  %422 = phi i32 [ 14, %concatenate.pivot.14.323 ]
  %423 = sub nsw i32 %289, %422
  %424 = udiv i32 %52, 20
  %425 = mul i32 %424, 1
  %426 = add i32 %425, %423
  %427 = udiv i32 %426, 1
  %428 = urem i32 %427, 1
  %429 = udiv i32 %426, 1
  %Arg_7.8208 = getelementptr inbounds float, ptr %arg7, i32 %426
  %Arg_7.8209 = load float, ptr %Arg_7.8208, align 4, !invariant.load !297
  br label %concatenate.123.merge108

concat_index_from_operand_id15210:                ; preds = %concatenate.pivot.15.326
  %430 = phi i32 [ 15, %concatenate.pivot.15.326 ]
  %431 = sub nsw i32 %289, %430
  %432 = udiv i32 %52, 20
  %433 = mul i32 %432, 1
  %434 = add i32 %433, %431
  %435 = udiv i32 %434, 1
  %436 = urem i32 %435, 1
  %437 = udiv i32 %434, 1
  %Arg_8.9211 = getelementptr inbounds float, ptr %arg8, i32 %434
  %Arg_8.9212 = load float, ptr %Arg_8.9211, align 4, !invariant.load !297
  br label %concatenate.123.merge108

concat_index_from_operand_id16213:                ; preds = %concatenate.pivot.16.327
  %438 = phi i32 [ 16, %concatenate.pivot.16.327 ]
  %439 = sub nsw i32 %289, %438
  %440 = udiv i32 %52, 20
  %441 = mul i32 %440, 1
  %442 = add i32 %441, %439
  %443 = udiv i32 %442, 1
  %444 = urem i32 %443, 1
  %445 = udiv i32 %442, 1
  %Arg_9.10214 = getelementptr inbounds float, ptr %arg9, i32 %442
  %Arg_9.10215 = load float, ptr %Arg_9.10214, align 4, !invariant.load !297
  br label %concatenate.123.merge108

concat_index_from_operand_id17216:                ; preds = %concatenate.pivot.17.329
  %446 = phi i32 [ 17, %concatenate.pivot.17.329 ]
  %447 = sub nsw i32 %289, %446
  %448 = udiv i32 %52, 20
  %449 = mul i32 %448, 1
  %450 = add i32 %449, %447
  %451 = udiv i32 %450, 1
  %452 = urem i32 %451, 1
  %453 = udiv i32 %450, 1
  %454 = add i32 %294, 0
  %455 = add i32 %447, 0
  %Arg_15.16217 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg15, i32 0, i32 54, i32 %454, i32 0
  %Arg_15.16218 = load float, ptr %Arg_15.16217, align 4, !invariant.load !297
  %456 = add i32 %294, 0
  %457 = add i32 %447, 0
  %Arg_15.16219 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg15, i32 0, i32 55, i32 %456, i32 0
  %Arg_15.16220 = load float, ptr %Arg_15.16219, align 4, !invariant.load !297
  %add.69221 = fadd float %Arg_15.16218, %Arg_15.16220
  %region_0_132_constant_33222 = load float, ptr @71, align 4
  %458 = add i32 %294, 0
  %459 = add i32 %447, 17
  %Arg_10.11223 = getelementptr inbounds [8192 x [20 x float]], ptr %arg10, i32 0, i32 %458, i32 %459
  %Arg_10.11224 = load float, ptr %Arg_10.11223, align 4, !invariant.load !297
  %Arg_11.12225 = getelementptr inbounds [20 x float], ptr %arg11, i32 0, i32 %459
  %Arg_11.12226 = load float, ptr %Arg_11.12225, align 4, !invariant.load !297
  %add.72227 = fadd float %Arg_10.11224, %Arg_11.12226
  %Arg_20.21228 = getelementptr inbounds float, ptr %arg20, i32 %450
  %Arg_20.21229 = load float, ptr %Arg_20.21228, align 4, !invariant.load !297
  %Arg_21.22230 = getelementptr inbounds float, ptr %arg21, i32 %450
  %Arg_21.22231 = load float, ptr %Arg_21.22230, align 4, !invariant.load !297
  %add.74232 = fadd float %Arg_20.21229, %Arg_21.22231
  %Arg_19.20233 = getelementptr inbounds [1 x float], ptr %arg19, i32 0, i32 0
  %Arg_19.20234 = load float, ptr %Arg_19.20233, align 4, !invariant.load !297
  %add.77235 = fadd float %add.74232, %Arg_19.20234
  %add.79236 = fadd float %add.72227, %add.77235
  %460 = fneg float %add.79236
  %461 = call float @__nv_expf(float %460)
  %add.82237 = fadd float %region_0_132_constant_33222, %461
  %divide.83238 = fdiv float %region_0_132_constant_33222, %add.82237
  %multiply.84239 = fmul float %add.69221, %divide.83238
  %subtract.85240 = fsub float %region_0_132_constant_33222, %divide.83238
  %multiply.86241 = fmul float %multiply.84239, %subtract.85240
  br label %concatenate.123.merge108

concat_index_from_operand_id18242:                ; preds = %concatenate.pivot.18.331
  %462 = phi i32 [ 18, %concatenate.pivot.18.331 ]
  %463 = sub nsw i32 %289, %462
  %464 = udiv i32 %52, 20
  %465 = mul i32 %464, 1
  %466 = add i32 %465, %463
  %467 = udiv i32 %466, 1
  %468 = urem i32 %467, 1
  %469 = udiv i32 %466, 1
  %470 = add i32 %294, 0
  %471 = add i32 %463, 0
  %Arg_15.16243 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg15, i32 0, i32 58, i32 %470, i32 0
  %Arg_15.16244 = load float, ptr %Arg_15.16243, align 4, !invariant.load !297
  %472 = add i32 %294, 0
  %473 = add i32 %463, 0
  %Arg_15.16245 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg15, i32 0, i32 59, i32 %472, i32 0
  %Arg_15.16246 = load float, ptr %Arg_15.16245, align 4, !invariant.load !297
  %add.89247 = fadd float %Arg_15.16244, %Arg_15.16246
  %region_0_132_constant_33248 = load float, ptr @71, align 4
  %474 = add i32 %294, 0
  %475 = add i32 %463, 18
  %Arg_10.11249 = getelementptr inbounds [8192 x [20 x float]], ptr %arg10, i32 0, i32 %474, i32 %475
  %Arg_10.11250 = load float, ptr %Arg_10.11249, align 4, !invariant.load !297
  %Arg_11.12251 = getelementptr inbounds [20 x float], ptr %arg11, i32 0, i32 %475
  %Arg_11.12252 = load float, ptr %Arg_11.12251, align 4, !invariant.load !297
  %add.72253 = fadd float %Arg_10.11250, %Arg_11.12252
  %Arg_17.18254 = getelementptr inbounds float, ptr %arg17, i32 %466
  %Arg_17.18255 = load float, ptr %Arg_17.18254, align 4, !invariant.load !297
  %Arg_18.19256 = getelementptr inbounds float, ptr %arg18, i32 %466
  %Arg_18.19257 = load float, ptr %Arg_18.19256, align 4, !invariant.load !297
  %add.92258 = fadd float %Arg_17.18255, %Arg_18.19257
  %Arg_16.17259 = getelementptr inbounds [1 x float], ptr %arg16, i32 0, i32 0
  %Arg_16.17260 = load float, ptr %Arg_16.17259, align 4, !invariant.load !297
  %add.95261 = fadd float %add.92258, %Arg_16.17260
  %add.97262 = fadd float %add.72253, %add.95261
  %476 = fneg float %add.97262
  %477 = call float @__nv_expf(float %476)
  %add.100263 = fadd float %region_0_132_constant_33248, %477
  %divide.101264 = fdiv float %region_0_132_constant_33248, %add.100263
  %multiply.102265 = fmul float %add.89247, %divide.101264
  %subtract.103266 = fsub float %region_0_132_constant_33248, %divide.101264
  %multiply.104267 = fmul float %multiply.102265, %subtract.103266
  br label %concatenate.123.merge108

concat_index_from_operand_id19268:                ; preds = %concatenate.pivot.19.332
  %478 = phi i32 [ 19, %concatenate.pivot.19.332 ]
  %479 = sub nsw i32 %289, %478
  %480 = udiv i32 %52, 20
  %481 = mul i32 %480, 1
  %482 = add i32 %481, %479
  %483 = udiv i32 %482, 1
  %484 = urem i32 %483, 1
  %485 = udiv i32 %482, 1
  %486 = add i32 %294, 0
  %487 = add i32 %479, 0
  %Arg_15.16269 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg15, i32 0, i32 56, i32 %486, i32 0
  %Arg_15.16270 = load float, ptr %Arg_15.16269, align 4, !invariant.load !297
  %488 = add i32 %294, 0
  %489 = add i32 %479, 0
  %Arg_15.16271 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg15, i32 0, i32 57, i32 %488, i32 0
  %Arg_15.16272 = load float, ptr %Arg_15.16271, align 4, !invariant.load !297
  %add.107273 = fadd float %Arg_15.16270, %Arg_15.16272
  %region_0_132_constant_33274 = load float, ptr @71, align 4
  %Arg_13.14275 = getelementptr inbounds float, ptr %arg13, i32 %482
  %Arg_13.14276 = load float, ptr %Arg_13.14275, align 4, !invariant.load !297
  %Arg_14.15277 = getelementptr inbounds float, ptr %arg14, i32 %482
  %Arg_14.15278 = load float, ptr %Arg_14.15277, align 4, !invariant.load !297
  %add.109279 = fadd float %Arg_13.14276, %Arg_14.15278
  %Arg_12.13280 = getelementptr inbounds [1 x float], ptr %arg12, i32 0, i32 0
  %Arg_12.13281 = load float, ptr %Arg_12.13280, align 4, !invariant.load !297
  %add.112282 = fadd float %add.109279, %Arg_12.13281
  %490 = add i32 %294, 0
  %491 = add i32 %479, 19
  %Arg_10.11283 = getelementptr inbounds [8192 x [20 x float]], ptr %arg10, i32 0, i32 %490, i32 %491
  %Arg_10.11284 = load float, ptr %Arg_10.11283, align 4, !invariant.load !297
  %Arg_11.12285 = getelementptr inbounds [20 x float], ptr %arg11, i32 0, i32 %491
  %Arg_11.12286 = load float, ptr %Arg_11.12285, align 4, !invariant.load !297
  %add.72287 = fadd float %Arg_10.11284, %Arg_11.12286
  %add.115288 = fadd float %add.112282, %add.72287
  %492 = fneg float %add.115288
  %493 = call float @__nv_expf(float %492)
  %add.118289 = fadd float %region_0_132_constant_33274, %493
  %divide.119290 = fdiv float %region_0_132_constant_33274, %add.118289
  %multiply.120291 = fmul float %add.107273, %divide.119290
  %subtract.121292 = fsub float %region_0_132_constant_33274, %divide.119290
  %multiply.122293 = fmul float %multiply.120291, %subtract.121292
  br label %concatenate.123.merge108

concatenate.pivot.10.294:                         ; preds = %concatenate.123.merge
  %494 = icmp ult i32 %289, 10
  br i1 %494, label %concatenate.pivot.5.295, label %concatenate.pivot.15.314

concatenate.pivot.5.295:                          ; preds = %concatenate.pivot.10.294
  %495 = icmp ult i32 %289, 5
  br i1 %495, label %concatenate.pivot.2.296, label %concatenate.pivot.7.305

concatenate.pivot.2.296:                          ; preds = %concatenate.pivot.5.295
  %496 = icmp ult i32 %289, 2
  br i1 %496, label %concatenate.pivot.1.297, label %concatenate.pivot.3.300

concatenate.pivot.1.297:                          ; preds = %concatenate.pivot.2.296
  %497 = icmp ult i32 %289, 1
  br i1 %497, label %concatenate.pivot.0.298, label %concatenate.pivot.1.299

concatenate.pivot.0.298:                          ; preds = %concatenate.pivot.1.297
  br label %concat_index_from_operand_id0109

concatenate.pivot.1.299:                          ; preds = %concatenate.pivot.1.297
  br label %concat_index_from_operand_id1120

concatenate.pivot.3.300:                          ; preds = %concatenate.pivot.2.296
  %498 = icmp ult i32 %289, 3
  br i1 %498, label %concatenate.pivot.2.301, label %concatenate.pivot.4.302

concatenate.pivot.2.301:                          ; preds = %concatenate.pivot.3.300
  br label %concat_index_from_operand_id2131

concatenate.pivot.4.302:                          ; preds = %concatenate.pivot.3.300
  %499 = icmp ult i32 %289, 4
  br i1 %499, label %concatenate.pivot.3.303, label %concatenate.pivot.4.304

concatenate.pivot.3.303:                          ; preds = %concatenate.pivot.4.302
  br label %concat_index_from_operand_id3142

concatenate.pivot.4.304:                          ; preds = %concatenate.pivot.4.302
  br label %concat_index_from_operand_id4153

concatenate.pivot.7.305:                          ; preds = %concatenate.pivot.5.295
  %500 = icmp ult i32 %289, 7
  br i1 %500, label %concatenate.pivot.6.306, label %concatenate.pivot.8.309

concatenate.pivot.6.306:                          ; preds = %concatenate.pivot.7.305
  %501 = icmp ult i32 %289, 6
  br i1 %501, label %concatenate.pivot.5.307, label %concatenate.pivot.6.308

concatenate.pivot.5.307:                          ; preds = %concatenate.pivot.6.306
  br label %concat_index_from_operand_id5156

concatenate.pivot.6.308:                          ; preds = %concatenate.pivot.6.306
  br label %concat_index_from_operand_id6159

concatenate.pivot.8.309:                          ; preds = %concatenate.pivot.7.305
  %502 = icmp ult i32 %289, 8
  br i1 %502, label %concatenate.pivot.7.310, label %concatenate.pivot.9.311

concatenate.pivot.7.310:                          ; preds = %concatenate.pivot.8.309
  br label %concat_index_from_operand_id7162

concatenate.pivot.9.311:                          ; preds = %concatenate.pivot.8.309
  %503 = icmp ult i32 %289, 9
  br i1 %503, label %concatenate.pivot.8.312, label %concatenate.pivot.9.313

concatenate.pivot.8.312:                          ; preds = %concatenate.pivot.9.311
  br label %concat_index_from_operand_id8173

concatenate.pivot.9.313:                          ; preds = %concatenate.pivot.9.311
  br label %concat_index_from_operand_id9184

concatenate.pivot.15.314:                         ; preds = %concatenate.pivot.10.294
  %504 = icmp ult i32 %289, 15
  br i1 %504, label %concatenate.pivot.12.315, label %concatenate.pivot.17.324

concatenate.pivot.12.315:                         ; preds = %concatenate.pivot.15.314
  %505 = icmp ult i32 %289, 12
  br i1 %505, label %concatenate.pivot.11.316, label %concatenate.pivot.13.319

concatenate.pivot.11.316:                         ; preds = %concatenate.pivot.12.315
  %506 = icmp ult i32 %289, 11
  br i1 %506, label %concatenate.pivot.10.317, label %concatenate.pivot.11.318

concatenate.pivot.10.317:                         ; preds = %concatenate.pivot.11.316
  br label %concat_index_from_operand_id10195

concatenate.pivot.11.318:                         ; preds = %concatenate.pivot.11.316
  br label %concat_index_from_operand_id11198

concatenate.pivot.13.319:                         ; preds = %concatenate.pivot.12.315
  %507 = icmp ult i32 %289, 13
  br i1 %507, label %concatenate.pivot.12.320, label %concatenate.pivot.14.321

concatenate.pivot.12.320:                         ; preds = %concatenate.pivot.13.319
  br label %concat_index_from_operand_id12201

concatenate.pivot.14.321:                         ; preds = %concatenate.pivot.13.319
  %508 = icmp ult i32 %289, 14
  br i1 %508, label %concatenate.pivot.13.322, label %concatenate.pivot.14.323

concatenate.pivot.13.322:                         ; preds = %concatenate.pivot.14.321
  br label %concat_index_from_operand_id13204

concatenate.pivot.14.323:                         ; preds = %concatenate.pivot.14.321
  br label %concat_index_from_operand_id14207

concatenate.pivot.17.324:                         ; preds = %concatenate.pivot.15.314
  %509 = icmp ult i32 %289, 17
  br i1 %509, label %concatenate.pivot.16.325, label %concatenate.pivot.18.328

concatenate.pivot.16.325:                         ; preds = %concatenate.pivot.17.324
  %510 = icmp ult i32 %289, 16
  br i1 %510, label %concatenate.pivot.15.326, label %concatenate.pivot.16.327

concatenate.pivot.15.326:                         ; preds = %concatenate.pivot.16.325
  br label %concat_index_from_operand_id15210

concatenate.pivot.16.327:                         ; preds = %concatenate.pivot.16.325
  br label %concat_index_from_operand_id16213

concatenate.pivot.18.328:                         ; preds = %concatenate.pivot.17.324
  %511 = icmp ult i32 %289, 18
  br i1 %511, label %concatenate.pivot.17.329, label %concatenate.pivot.19.330

concatenate.pivot.17.329:                         ; preds = %concatenate.pivot.18.328
  br label %concat_index_from_operand_id17216

concatenate.pivot.19.330:                         ; preds = %concatenate.pivot.18.328
  %512 = icmp ult i32 %289, 19
  br i1 %512, label %concatenate.pivot.18.331, label %concatenate.pivot.19.332

concatenate.pivot.18.331:                         ; preds = %concatenate.pivot.19.330
  br label %concat_index_from_operand_id18242

concatenate.pivot.19.332:                         ; preds = %concatenate.pivot.19.330
  br label %concat_index_from_operand_id19268

concatenate.123.merge108:                         ; preds = %concat_index_from_operand_id19268, %concat_index_from_operand_id18242, %concat_index_from_operand_id17216, %concat_index_from_operand_id16213, %concat_index_from_operand_id15210, %concat_index_from_operand_id14207, %concat_index_from_operand_id13204, %concat_index_from_operand_id12201, %concat_index_from_operand_id11198, %concat_index_from_operand_id10195, %concat_index_from_operand_id9184, %concat_index_from_operand_id8173, %concat_index_from_operand_id7162, %concat_index_from_operand_id6159, %concat_index_from_operand_id5156, %concat_index_from_operand_id4153, %concat_index_from_operand_id3142, %concat_index_from_operand_id2131, %concat_index_from_operand_id1120, %concat_index_from_operand_id0109
  %513 = phi float [ %multiply.36119, %concat_index_from_operand_id0109 ], [ %multiply.41130, %concat_index_from_operand_id1120 ], [ %multiply.46141, %concat_index_from_operand_id2131 ], [ %multiply.51152, %concat_index_from_operand_id3142 ], [ %Arg_0.1155, %concat_index_from_operand_id4153 ], [ %Arg_1.2158, %concat_index_from_operand_id5156 ], [ %Arg_2.3161, %concat_index_from_operand_id6159 ], [ %multiply.56172, %concat_index_from_operand_id7162 ], [ %multiply.61183, %concat_index_from_operand_id8173 ], [ %multiply.66194, %concat_index_from_operand_id9184 ], [ %Arg_3.4197, %concat_index_from_operand_id10195 ], [ %Arg_4.5200, %concat_index_from_operand_id11198 ], [ %Arg_5.6203, %concat_index_from_operand_id12201 ], [ %Arg_6.7206, %concat_index_from_operand_id13204 ], [ %Arg_7.8209, %concat_index_from_operand_id14207 ], [ %Arg_8.9212, %concat_index_from_operand_id15210 ], [ %Arg_9.10215, %concat_index_from_operand_id16213 ], [ %multiply.86241, %concat_index_from_operand_id17216 ], [ %multiply.104267, %concat_index_from_operand_id18242 ], [ %multiply.122293, %concat_index_from_operand_id19268 ]
  %514 = mul nuw nsw i32 %54, 1
  %515 = add nuw nsw i32 0, %514
  %516 = udiv i32 %515, 20
  %517 = mul nuw nsw i32 %56, 1
  %518 = add nuw nsw i32 0, %517
  %519 = mul nuw nsw i32 %57, 128
  %520 = add nuw nsw i32 %518, %519
  %521 = udiv i32 %520, 8192
  %522 = getelementptr inbounds float, ptr %arg30, i32 %52
  store float %513, ptr %522, align 4
  br label %x_in_tile-after

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %523 = mul i32 %thread_id.y, 1
  %524 = add i32 %tile_origin.1, %thread_id.x
  %525 = add i32 %tile_origin.2, %523
  %526 = add i32 %525, 0
  %527 = mul i32 %tile_origin.0, 20
  %528 = add i32 %527, %526
  %529 = udiv i32 %528, 1
  %530 = urem i32 %529, 20
  %531 = udiv i32 %528, 20
  %output_element_address = getelementptr inbounds [64 x [20 x float]], ptr %arg29, i32 0, i32 %531, i32 %530
  %output = load float, ptr %30, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after
}

define internal void @region_1_126(ptr dereferenceable(4) %Arg_0.127.typed, ptr dereferenceable(4) %Arg_1.128.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.129.typed = alloca float, align 4
  %Arg_0.127 = load float, ptr %Arg_0.127.typed, align 4
  %Arg_1.128 = load float, ptr %Arg_1.128.typed, align 4
  %add.129 = fadd float %Arg_0.127, %Arg_1.128
  store float %add.129, ptr %add.129.typed, align 4
  %load_ret_value = load float, ptr %add.129.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_735(ptr noalias align 128 dereferenceable(5120) %arg0, ptr noalias align 128 dereferenceable(4) %arg1, ptr noalias align 128 dereferenceable(80) %arg2) {
entry:
  %return_buffer17 = alloca float, align 4
  %result_from_other_lane15 = alloca float, align 4
  %return_buffer14 = alloca float, align 4
  %result_from_other_lane12 = alloca float, align 4
  %return_buffer11 = alloca float, align 4
  %result_from_other_lane9 = alloca float, align 4
  %return_buffer8 = alloca float, align 4
  %result_from_other_lane6 = alloca float, align 4
  %return_buffer5 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %Arg_1.2 = load float, ptr %arg1, align 4, !invariant.load !297
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %Arg_1.2, ptr %2, align 4
  %3 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %4 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %5 = urem i32 %3, 1024
  %6 = udiv i32 %3, 1024
  %7 = mul i32 %4, 1
  %8 = add i32 %7, %6
  %9 = icmp ult i32 %8, 1
  br i1 %9, label %10, label %early_return

10:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %5, 32
  %thread_id.y = udiv i32 %5, 32
  %lane_id = urem i32 %5, 32
  %11 = udiv i32 %8, 1
  %12 = urem i32 %11, 1
  %13 = udiv i32 %8, 1
  %14 = urem i32 %13, 1
  %15 = udiv i32 %8, 1
  %16 = icmp eq i32 %14, 0
  %tile_bound = select i1 %16, i32 64, i32 4096
  %17 = icmp eq i32 %12, 0
  %tile_bound1 = select i1 %17, i32 20, i32 32
  %tile_origin.0 = mul i32 %15, 1
  %tile_origin.1 = mul i32 %14, 4096
  %tile_origin.2 = mul i32 %12, 32
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %10
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %18 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %18, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %19 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %20 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %21 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %21, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %22 = icmp eq i32 %tile_loop.indvar, 0
  %23 = mul i32 %tile_loop.indvar, 1
  %24 = add i32 %23, 0
  %x_loc = add i32 %24, %20
  %25 = add i32 %tile_origin.1, %y_in_tile.indvar
  %26 = add i32 %tile_origin.2, %x_loc
  %27 = icmp ult i32 %x_loc, %tile_bound1
  br i1 %27, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body
  br label %tile_loop.loop_header, !llvm.loop !451

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !452

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache83, i32 0, i32 %6, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %28 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %29 = load float, ptr %current_output, align 4
  store float %29, ptr %28, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache83, i32 0, i32 %6, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %30 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result4 = load float, ptr %30, align 4
  %31 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result4, i32 16, i32 31)
  store float %31, ptr %result_from_other_lane, align 4
  call void @region_1_3__1(ptr %30, ptr %result_from_other_lane, ptr %return_buffer5)
  %32 = load float, ptr %return_buffer5, align 4
  store float %32, ptr %30, align 4
  %partial_reduction_result7 = load float, ptr %30, align 4
  %33 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result7, i32 8, i32 31)
  store float %33, ptr %result_from_other_lane6, align 4
  call void @region_1_3__1(ptr %30, ptr %result_from_other_lane6, ptr %return_buffer8)
  %34 = load float, ptr %return_buffer8, align 4
  store float %34, ptr %30, align 4
  %partial_reduction_result10 = load float, ptr %30, align 4
  %35 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result10, i32 4, i32 31)
  store float %35, ptr %result_from_other_lane9, align 4
  call void @region_1_3__1(ptr %30, ptr %result_from_other_lane9, ptr %return_buffer11)
  %36 = load float, ptr %return_buffer11, align 4
  store float %36, ptr %30, align 4
  %partial_reduction_result13 = load float, ptr %30, align 4
  %37 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result13, i32 2, i32 31)
  store float %37, ptr %result_from_other_lane12, align 4
  call void @region_1_3__1(ptr %30, ptr %result_from_other_lane12, ptr %return_buffer14)
  %38 = load float, ptr %return_buffer14, align 4
  store float %38, ptr %30, align 4
  %partial_reduction_result16 = load float, ptr %30, align 4
  %39 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result16, i32 1, i32 31)
  store float %39, ptr %result_from_other_lane15, align 4
  call void @region_1_3__1(ptr %30, ptr %result_from_other_lane15, ptr %return_buffer17)
  %40 = load float, ptr %return_buffer17, align 4
  store float %40, ptr %30, align 4
  %41 = icmp ult i32 %thread_id.x, %tile_bound
  %42 = mul i32 %thread_id.y, 1
  %43 = icmp ult i32 %42, %tile_bound1
  %44 = and i1 %43, %41
  %45 = icmp eq i32 %lane_id, 0
  %46 = and i1 %44, %45
  br i1 %46, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %47 = mul i32 %thread_id.x, 1
  %48 = sub i32 %x_loc, %47
  %Arg_0.1 = getelementptr inbounds [64 x [20 x float]], ptr %arg0, i32 0, i32 %25, i32 %26
  %Arg_0.13 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  store float %Arg_0.13, ptr %reduction_input_address, align 4
  %49 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %48
  call void @region_1_3__1(ptr %49, ptr %reduction_input_address, ptr %return_buffer)
  %50 = load float, ptr %return_buffer, align 4
  store float %50, ptr %49, align 4
  br label %x_in_tile-after

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %51 = mul i32 %thread_id.y, 1
  %52 = add i32 %tile_origin.1, %thread_id.x
  %53 = add i32 %tile_origin.2, %51
  %54 = add i32 %53, 0
  %55 = mul i32 %tile_origin.0, 20
  %56 = add i32 %55, %54
  %57 = udiv i32 %56, 1
  %output_element_address = getelementptr inbounds [20 x float], ptr %arg2, i32 0, i32 %57
  %output = load float, ptr %30, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after
}

define internal void @region_1_3__1(ptr dereferenceable(4) %Arg_0.4.typed, ptr dereferenceable(4) %Arg_1.5.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.6.typed = alloca float, align 4
  %Arg_0.4 = load float, ptr %Arg_0.4.typed, align 4
  %Arg_1.5 = load float, ptr %Arg_1.5.typed, align 4
  %add.6 = fadd float %Arg_0.4, %Arg_1.5
  store float %add.6, ptr %add.6.typed, align 4
  %load_ret_value = load float, ptr %add.6.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_61(ptr noalias align 128 dereferenceable(1048576) %arg0, ptr noalias align 128 dereferenceable(1048576) %arg1, ptr noalias align 128 dereferenceable(8192) %arg2, ptr noalias align 128 dereferenceable(1048576) %arg3) {
entry:
  %return_buffer24 = alloca float, align 4
  %result_from_other_lane22 = alloca float, align 4
  %return_buffer21 = alloca float, align 4
  %result_from_other_lane19 = alloca float, align 4
  %return_buffer18 = alloca float, align 4
  %result_from_other_lane16 = alloca float, align 4
  %return_buffer15 = alloca float, align 4
  %result_from_other_lane13 = alloca float, align 4
  %return_buffer12 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_15_constant_8 = load float, ptr @74, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_15_constant_8, ptr %2, align 4
  %3 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %4 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !360
  %5 = urem i32 %3, 1024
  %6 = udiv i32 %3, 1024
  %7 = mul i32 %4, 1
  %8 = add i32 %7, %6
  %9 = icmp ult i32 %8, 64
  br i1 %9, label %10, label %early_return

10:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %5, 32
  %thread_id.y = udiv i32 %5, 32
  %lane_id = urem i32 %5, 32
  %11 = udiv i32 %8, 1
  %12 = urem i32 %11, 1
  %13 = udiv i32 %8, 1
  %14 = urem i32 %13, 1
  %15 = udiv i32 %8, 1
  %16 = icmp eq i32 %14, 0
  %tile_bound = select i1 %16, i32 128, i32 4096
  %17 = icmp eq i32 %12, 0
  %tile_bound1 = select i1 %17, i32 32, i32 32
  %tile_origin.0 = mul i32 %15, 1
  %tile_origin.1 = mul i32 %14, 4096
  %tile_origin.2 = mul i32 %12, 32
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %10
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %18 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %18, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %19 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %20 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %21 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %21, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %22 = icmp eq i32 %tile_loop.indvar, 0
  %23 = mul i32 %tile_loop.indvar, 1
  %24 = add i32 %23, 0
  %x_loc = add i32 %24, %20
  %25 = add i32 %tile_origin.1, %y_in_tile.indvar
  %26 = add i32 %tile_origin.2, %x_loc
  %27 = icmp ult i32 %x_loc, %tile_bound1
  br i1 %27, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body
  br label %tile_loop.loop_header, !llvm.loop !453

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !454

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache84, i32 0, i32 %6, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %28 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %29 = load float, ptr %current_output, align 4
  store float %29, ptr %28, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache84, i32 0, i32 %6, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %30 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result11 = load float, ptr %30, align 4
  %31 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result11, i32 16, i32 31)
  store float %31, ptr %result_from_other_lane, align 4
  call void @region_1_9(ptr %30, ptr %result_from_other_lane, ptr %return_buffer12)
  %32 = load float, ptr %return_buffer12, align 4
  store float %32, ptr %30, align 4
  %partial_reduction_result14 = load float, ptr %30, align 4
  %33 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result14, i32 8, i32 31)
  store float %33, ptr %result_from_other_lane13, align 4
  call void @region_1_9(ptr %30, ptr %result_from_other_lane13, ptr %return_buffer15)
  %34 = load float, ptr %return_buffer15, align 4
  store float %34, ptr %30, align 4
  %partial_reduction_result17 = load float, ptr %30, align 4
  %35 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result17, i32 4, i32 31)
  store float %35, ptr %result_from_other_lane16, align 4
  call void @region_1_9(ptr %30, ptr %result_from_other_lane16, ptr %return_buffer18)
  %36 = load float, ptr %return_buffer18, align 4
  store float %36, ptr %30, align 4
  %partial_reduction_result20 = load float, ptr %30, align 4
  %37 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result20, i32 2, i32 31)
  store float %37, ptr %result_from_other_lane19, align 4
  call void @region_1_9(ptr %30, ptr %result_from_other_lane19, ptr %return_buffer21)
  %38 = load float, ptr %return_buffer21, align 4
  store float %38, ptr %30, align 4
  %partial_reduction_result23 = load float, ptr %30, align 4
  %39 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result23, i32 1, i32 31)
  store float %39, ptr %result_from_other_lane22, align 4
  call void @region_1_9(ptr %30, ptr %result_from_other_lane22, ptr %return_buffer24)
  %40 = load float, ptr %return_buffer24, align 4
  store float %40, ptr %30, align 4
  %41 = icmp ult i32 %thread_id.x, %tile_bound
  %42 = mul i32 %thread_id.y, 1
  %43 = icmp ult i32 %42, %tile_bound1
  %44 = and i1 %43, %41
  %45 = icmp eq i32 %lane_id, 0
  %46 = and i1 %44, %45
  br i1 %46, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %47 = mul nuw nsw i32 %26, 1
  %48 = add nuw nsw i32 0, %47
  %49 = mul nuw nsw i32 %25, 32
  %50 = add nuw nsw i32 %48, %49
  %51 = mul nuw nsw i32 %tile_origin.0, 4096
  %52 = add nuw nsw i32 %50, %51
  %53 = udiv i32 %52, 1
  %54 = urem i32 %53, 32
  %55 = udiv i32 %52, 32
  %56 = urem i32 %55, 128
  %57 = udiv i32 %52, 4096
  %58 = mul i32 %thread_id.x, 1
  %59 = sub i32 %x_loc, %58
  %60 = mul nuw nsw i32 %54, 1
  %61 = add nuw nsw i32 0, %60
  %62 = udiv i32 %61, 32
  %63 = mul nuw nsw i32 %56, 1
  %64 = add nuw nsw i32 0, %63
  %65 = mul nuw nsw i32 %57, 128
  %66 = add nuw nsw i32 %64, %65
  %67 = udiv i32 %66, 8192
  %Arg_1.2 = getelementptr inbounds float, ptr %arg1, i32 %52
  %Arg_1.23 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %region_0_15_constant_3 = load float, ptr @73, align 4
  %compare.5 = fcmp ogt float %Arg_1.23, %region_0_15_constant_3
  %68 = zext i1 %compare.5 to i8
  %Arg_0.1 = getelementptr inbounds float, ptr %arg0, i32 %52
  %Arg_0.14 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %69 = trunc i8 %68 to i1
  %70 = select i1 %69, float %Arg_0.14, float %region_0_15_constant_3
  store float %70, ptr %reduction_input_address, align 4
  %71 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %59
  call void @region_1_9(ptr %71, ptr %reduction_input_address, ptr %return_buffer)
  %72 = load float, ptr %return_buffer, align 4
  store float %72, ptr %71, align 4
  %73 = mul nuw nsw i32 %54, 1
  %74 = add nuw nsw i32 0, %73
  %75 = udiv i32 %74, 32
  %76 = mul nuw nsw i32 %56, 1
  %77 = add nuw nsw i32 0, %76
  %78 = mul nuw nsw i32 %57, 128
  %79 = add nuw nsw i32 %77, %78
  %80 = udiv i32 %79, 8192
  %Arg_1.25 = getelementptr inbounds float, ptr %arg1, i32 %52
  %Arg_1.26 = load float, ptr %Arg_1.25, align 4, !invariant.load !297
  %region_0_15_constant_37 = load float, ptr @73, align 4
  %compare.58 = fcmp ogt float %Arg_1.26, %region_0_15_constant_37
  %81 = zext i1 %compare.58 to i8
  %Arg_0.19 = getelementptr inbounds float, ptr %arg0, i32 %52
  %Arg_0.110 = load float, ptr %Arg_0.19, align 4, !invariant.load !297
  %82 = trunc i8 %81 to i1
  %83 = select i1 %82, float %Arg_0.110, float %region_0_15_constant_37
  %84 = mul nuw nsw i32 %54, 1
  %85 = add nuw nsw i32 0, %84
  %86 = udiv i32 %85, 32
  %87 = mul nuw nsw i32 %56, 1
  %88 = add nuw nsw i32 0, %87
  %89 = mul nuw nsw i32 %57, 128
  %90 = add nuw nsw i32 %88, %89
  %91 = udiv i32 %90, 8192
  %92 = getelementptr inbounds float, ptr %arg3, i32 %52
  store float %83, ptr %92, align 4
  br label %x_in_tile-after

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %93 = mul i32 %thread_id.y, 1
  %94 = add i32 %tile_origin.1, %thread_id.x
  %95 = add i32 %tile_origin.2, %93
  %96 = add i32 %95, 0
  %97 = mul i32 %tile_origin.0, 32
  %98 = add i32 %97, %96
  %99 = udiv i32 %98, 1
  %100 = urem i32 %99, 32
  %101 = udiv i32 %98, 32
  %output_element_address = getelementptr inbounds [64 x [32 x float]], ptr %arg2, i32 0, i32 %101, i32 %100
  %output = load float, ptr %30, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after
}

define internal void @region_1_9(ptr dereferenceable(4) %Arg_0.10.typed, ptr dereferenceable(4) %Arg_1.11.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.12.typed = alloca float, align 4
  %Arg_0.10 = load float, ptr %Arg_0.10.typed, align 4
  %Arg_1.11 = load float, ptr %Arg_1.11.typed, align 4
  %add.12 = fadd float %Arg_0.10, %Arg_1.11
  store float %add.12, ptr %add.12.typed, align 4
  %load_ret_value = load float, ptr %add.12.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_63(ptr noalias align 128 dereferenceable(2097152) %arg0, ptr noalias align 128 dereferenceable(2097152) %arg1, ptr noalias align 128 dereferenceable(16384) %arg2, ptr noalias align 128 dereferenceable(2097152) %arg3) {
entry:
  %return_buffer58 = alloca float, align 4
  %result_from_other_lane56 = alloca float, align 4
  %return_buffer55 = alloca float, align 4
  %result_from_other_lane53 = alloca float, align 4
  %return_buffer52 = alloca float, align 4
  %result_from_other_lane50 = alloca float, align 4
  %return_buffer49 = alloca float, align 4
  %result_from_other_lane47 = alloca float, align 4
  %return_buffer46 = alloca float, align 4
  %result_from_other_lane44 = alloca float, align 4
  %return_buffer40 = alloca float, align 4
  %result_from_other_lane38 = alloca float, align 4
  %return_buffer37 = alloca float, align 4
  %result_from_other_lane35 = alloca float, align 4
  %return_buffer34 = alloca float, align 4
  %result_from_other_lane32 = alloca float, align 4
  %return_buffer31 = alloca float, align 4
  %result_from_other_lane29 = alloca float, align 4
  %return_buffer28 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer20 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, i32 2, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after60, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_15_constant_8 = load float, ptr @76, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_15_constant_8, ptr %2, align 4
  %3 = getelementptr inbounds float, ptr %partial_reduction_result, i32 1
  store float %region_0_15_constant_8, ptr %3, align 4
  %4 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %5 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !360
  %6 = urem i32 %4, 1024
  %7 = udiv i32 %4, 1024
  %8 = mul i32 %5, 1
  %9 = add i32 %8, %7
  %10 = icmp ult i32 %9, 64
  br i1 %10, label %11, label %early_return

11:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %6, 32
  %thread_id.y = udiv i32 %6, 32
  %lane_id = urem i32 %6, 32
  %12 = udiv i32 %9, 1
  %13 = urem i32 %12, 1
  %14 = udiv i32 %9, 1
  %15 = urem i32 %14, 1
  %16 = udiv i32 %9, 1
  %17 = icmp eq i32 %15, 0
  %tile_bound = select i1 %17, i32 128, i32 4096
  %18 = icmp eq i32 %13, 0
  %tile_bound1 = select i1 %18, i32 64, i32 64
  %tile_origin.0 = mul i32 %16, 1
  %tile_origin.1 = mul i32 %15, 4096
  %tile_origin.2 = mul i32 %13, 64
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %11
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %19 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %19, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %20 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %21 = mul i32 %thread_id.x, 2
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after13, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %22 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %22, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %23 = icmp eq i32 %tile_loop.indvar, 0
  %24 = mul i32 %tile_loop.indvar, 2
  %25 = add i32 %24, 0
  %x_loc = add i32 %25, %21
  %26 = add i32 %tile_origin.1, %y_in_tile.indvar
  %27 = add i32 %tile_origin.2, %x_loc
  %28 = icmp ult i32 %x_loc, %tile_bound1
  br i1 %28, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body
  %29 = mul i32 %tile_loop.indvar, 2
  %30 = add i32 %29, 1
  %x_loc11 = add i32 %30, %21
  %31 = add i32 %tile_origin.1, %y_in_tile.indvar
  %32 = add i32 %tile_origin.2, %x_loc11
  %33 = icmp ult i32 %x_loc11, %tile_bound1
  br i1 %33, label %x_in_tile-true12, label %x_in_tile-after13

x_in_tile-after13:                                ; preds = %x_in_tile-true12, %x_in_tile-after
  br label %tile_loop.loop_header, !llvm.loop !455

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !456

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache85, i32 0, i32 %7, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %34 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %35 = load float, ptr %current_output, align 4
  store float %35, ptr %34, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache85, i32 0, i32 %7, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %36 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result27 = load float, ptr %36, align 4
  %37 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result27, i32 16, i32 31)
  store float %37, ptr %result_from_other_lane, align 4
  call void @region_1_9__1(ptr %36, ptr %result_from_other_lane, ptr %return_buffer28)
  %38 = load float, ptr %return_buffer28, align 4
  store float %38, ptr %36, align 4
  %partial_reduction_result30 = load float, ptr %36, align 4
  %39 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result30, i32 8, i32 31)
  store float %39, ptr %result_from_other_lane29, align 4
  call void @region_1_9__1(ptr %36, ptr %result_from_other_lane29, ptr %return_buffer31)
  %40 = load float, ptr %return_buffer31, align 4
  store float %40, ptr %36, align 4
  %partial_reduction_result33 = load float, ptr %36, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result33, i32 4, i32 31)
  store float %41, ptr %result_from_other_lane32, align 4
  call void @region_1_9__1(ptr %36, ptr %result_from_other_lane32, ptr %return_buffer34)
  %42 = load float, ptr %return_buffer34, align 4
  store float %42, ptr %36, align 4
  %partial_reduction_result36 = load float, ptr %36, align 4
  %43 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result36, i32 2, i32 31)
  store float %43, ptr %result_from_other_lane35, align 4
  call void @region_1_9__1(ptr %36, ptr %result_from_other_lane35, ptr %return_buffer37)
  %44 = load float, ptr %return_buffer37, align 4
  store float %44, ptr %36, align 4
  %partial_reduction_result39 = load float, ptr %36, align 4
  %45 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result39, i32 1, i32 31)
  store float %45, ptr %result_from_other_lane38, align 4
  call void @region_1_9__1(ptr %36, ptr %result_from_other_lane38, ptr %return_buffer40)
  %46 = load float, ptr %return_buffer40, align 4
  store float %46, ptr %36, align 4
  %47 = icmp ult i32 %thread_id.x, %tile_bound
  %48 = mul i32 %thread_id.y, 2
  %49 = icmp ult i32 %48, %tile_bound1
  %50 = and i1 %49, %47
  %51 = icmp eq i32 %lane_id, 0
  %52 = and i1 %50, %51
  br i1 %52, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %shmem_output_address41 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache85, i32 0, i32 %7, i32 1, i32 %thread_id.x, i32 %thread_id.y
  %53 = addrspacecast ptr addrspace(3) %shmem_output_address41 to ptr
  %current_output42 = getelementptr inbounds float, ptr %partial_reduction_result, i32 1
  %54 = load float, ptr %current_output42, align 4
  store float %54, ptr %53, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr43 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache85, i32 0, i32 %7, i32 1, i32 %thread_id.y, i32 %thread_id.x
  %55 = addrspacecast ptr addrspace(3) %shmem_transposed_addr43 to ptr
  %partial_reduction_result45 = load float, ptr %55, align 4
  %56 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result45, i32 16, i32 31)
  store float %56, ptr %result_from_other_lane44, align 4
  call void @region_1_9__1(ptr %55, ptr %result_from_other_lane44, ptr %return_buffer46)
  %57 = load float, ptr %return_buffer46, align 4
  store float %57, ptr %55, align 4
  %partial_reduction_result48 = load float, ptr %55, align 4
  %58 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result48, i32 8, i32 31)
  store float %58, ptr %result_from_other_lane47, align 4
  call void @region_1_9__1(ptr %55, ptr %result_from_other_lane47, ptr %return_buffer49)
  %59 = load float, ptr %return_buffer49, align 4
  store float %59, ptr %55, align 4
  %partial_reduction_result51 = load float, ptr %55, align 4
  %60 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result51, i32 4, i32 31)
  store float %60, ptr %result_from_other_lane50, align 4
  call void @region_1_9__1(ptr %55, ptr %result_from_other_lane50, ptr %return_buffer52)
  %61 = load float, ptr %return_buffer52, align 4
  store float %61, ptr %55, align 4
  %partial_reduction_result54 = load float, ptr %55, align 4
  %62 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result54, i32 2, i32 31)
  store float %62, ptr %result_from_other_lane53, align 4
  call void @region_1_9__1(ptr %55, ptr %result_from_other_lane53, ptr %return_buffer55)
  %63 = load float, ptr %return_buffer55, align 4
  store float %63, ptr %55, align 4
  %partial_reduction_result57 = load float, ptr %55, align 4
  %64 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result57, i32 1, i32 31)
  store float %64, ptr %result_from_other_lane56, align 4
  call void @region_1_9__1(ptr %55, ptr %result_from_other_lane56, ptr %return_buffer58)
  %65 = load float, ptr %return_buffer58, align 4
  store float %65, ptr %55, align 4
  %66 = icmp ult i32 %thread_id.x, %tile_bound
  %67 = mul i32 %thread_id.y, 2
  %68 = icmp ult i32 %67, %tile_bound1
  %69 = and i1 %68, %66
  %70 = icmp eq i32 %lane_id, 0
  %71 = and i1 %69, %70
  br i1 %71, label %reduction_write_output-true59, label %reduction_write_output-after60

reduction_write_output-after60:                   ; preds = %reduction_write_output-true59, %reduction_write_output-after
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %72 = mul nuw nsw i32 %27, 1
  %73 = add nuw nsw i32 0, %72
  %74 = mul nuw nsw i32 %26, 64
  %75 = add nuw nsw i32 %73, %74
  %76 = mul nuw nsw i32 %tile_origin.0, 8192
  %77 = add nuw nsw i32 %75, %76
  %78 = udiv i32 %77, 1
  %79 = urem i32 %78, 64
  %80 = udiv i32 %77, 64
  %81 = urem i32 %80, 128
  %82 = udiv i32 %77, 8192
  %83 = mul i32 %thread_id.x, 2
  %84 = sub i32 %x_loc, %83
  %85 = mul nuw nsw i32 %79, 1
  %86 = add nuw nsw i32 0, %85
  %87 = udiv i32 %86, 64
  %88 = mul nuw nsw i32 %81, 1
  %89 = add nuw nsw i32 0, %88
  %90 = mul nuw nsw i32 %82, 128
  %91 = add nuw nsw i32 %89, %90
  %92 = udiv i32 %91, 8192
  %Arg_1.2 = getelementptr inbounds [8192 x [64 x float]], ptr %arg1, i32 0, i32 %91, i32 %86
  %Arg_1.23 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %region_0_15_constant_3 = load float, ptr @75, align 4
  %compare.5 = fcmp ogt float %Arg_1.23, %region_0_15_constant_3
  %93 = zext i1 %compare.5 to i8
  %Arg_0.1 = getelementptr inbounds [8192 x [64 x float]], ptr %arg0, i32 0, i32 %91, i32 %86
  %Arg_0.14 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %94 = trunc i8 %93 to i1
  %95 = select i1 %94, float %Arg_0.14, float %region_0_15_constant_3
  store float %95, ptr %reduction_input_address, align 4
  %96 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %84
  call void @region_1_9__1(ptr %96, ptr %reduction_input_address, ptr %return_buffer)
  %97 = load float, ptr %return_buffer, align 4
  store float %97, ptr %96, align 4
  %98 = mul nuw nsw i32 %79, 1
  %99 = add nuw nsw i32 0, %98
  %100 = udiv i32 %99, 64
  %101 = mul nuw nsw i32 %81, 1
  %102 = add nuw nsw i32 0, %101
  %103 = mul nuw nsw i32 %82, 128
  %104 = add nuw nsw i32 %102, %103
  %105 = udiv i32 %104, 8192
  %Arg_1.25 = getelementptr inbounds float, ptr %arg1, i32 %77
  %Arg_1.26 = load float, ptr %Arg_1.25, align 4, !invariant.load !297
  %region_0_15_constant_37 = load float, ptr @75, align 4
  %compare.58 = fcmp ogt float %Arg_1.26, %region_0_15_constant_37
  %106 = zext i1 %compare.58 to i8
  %Arg_0.19 = getelementptr inbounds float, ptr %arg0, i32 %77
  %Arg_0.110 = load float, ptr %Arg_0.19, align 4, !invariant.load !297
  %107 = trunc i8 %106 to i1
  %108 = select i1 %107, float %Arg_0.110, float %region_0_15_constant_37
  %109 = mul nuw nsw i32 %79, 1
  %110 = add nuw nsw i32 0, %109
  %111 = udiv i32 %110, 64
  %112 = mul nuw nsw i32 %81, 1
  %113 = add nuw nsw i32 0, %112
  %114 = mul nuw nsw i32 %82, 128
  %115 = add nuw nsw i32 %113, %114
  %116 = udiv i32 %115, 8192
  %117 = getelementptr inbounds [8192 x [64 x float]], ptr %arg3, i32 0, i32 %115, i32 %110
  store float %108, ptr %117, align 4
  br label %x_in_tile-after

x_in_tile-true12:                                 ; preds = %x_in_tile-after
  %118 = mul nuw nsw i32 %32, 1
  %119 = add nuw nsw i32 0, %118
  %120 = mul nuw nsw i32 %31, 64
  %121 = add nuw nsw i32 %119, %120
  %122 = mul nuw nsw i32 %tile_origin.0, 8192
  %123 = add nuw nsw i32 %121, %122
  %124 = udiv i32 %123, 1
  %125 = urem i32 %124, 64
  %126 = udiv i32 %123, 64
  %127 = urem i32 %126, 128
  %128 = udiv i32 %123, 8192
  %129 = mul i32 %thread_id.x, 2
  %130 = sub i32 %x_loc11, %129
  %131 = mul nuw nsw i32 %125, 1
  %132 = add nuw nsw i32 0, %131
  %133 = udiv i32 %132, 64
  %134 = mul nuw nsw i32 %127, 1
  %135 = add nuw nsw i32 0, %134
  %136 = mul nuw nsw i32 %128, 128
  %137 = add nuw nsw i32 %135, %136
  %138 = udiv i32 %137, 8192
  %Arg_1.214 = getelementptr inbounds [8192 x [64 x float]], ptr %arg1, i32 0, i32 %137, i32 %132
  %Arg_1.215 = load float, ptr %Arg_1.214, align 4, !invariant.load !297
  %region_0_15_constant_316 = load float, ptr @75, align 4
  %compare.517 = fcmp ogt float %Arg_1.215, %region_0_15_constant_316
  %139 = zext i1 %compare.517 to i8
  %Arg_0.118 = getelementptr inbounds [8192 x [64 x float]], ptr %arg0, i32 0, i32 %137, i32 %132
  %Arg_0.119 = load float, ptr %Arg_0.118, align 4, !invariant.load !297
  %140 = trunc i8 %139 to i1
  %141 = select i1 %140, float %Arg_0.119, float %region_0_15_constant_316
  store float %141, ptr %reduction_input_address, align 4
  %142 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %130
  call void @region_1_9__1(ptr %142, ptr %reduction_input_address, ptr %return_buffer20)
  %143 = load float, ptr %return_buffer20, align 4
  store float %143, ptr %142, align 4
  %144 = mul nuw nsw i32 %125, 1
  %145 = add nuw nsw i32 0, %144
  %146 = udiv i32 %145, 64
  %147 = mul nuw nsw i32 %127, 1
  %148 = add nuw nsw i32 0, %147
  %149 = mul nuw nsw i32 %128, 128
  %150 = add nuw nsw i32 %148, %149
  %151 = udiv i32 %150, 8192
  %Arg_1.221 = getelementptr inbounds float, ptr %arg1, i32 %123
  %Arg_1.222 = load float, ptr %Arg_1.221, align 4, !invariant.load !297
  %region_0_15_constant_323 = load float, ptr @75, align 4
  %compare.524 = fcmp ogt float %Arg_1.222, %region_0_15_constant_323
  %152 = zext i1 %compare.524 to i8
  %Arg_0.125 = getelementptr inbounds float, ptr %arg0, i32 %123
  %Arg_0.126 = load float, ptr %Arg_0.125, align 4, !invariant.load !297
  %153 = trunc i8 %152 to i1
  %154 = select i1 %153, float %Arg_0.126, float %region_0_15_constant_323
  %155 = mul nuw nsw i32 %125, 1
  %156 = add nuw nsw i32 0, %155
  %157 = udiv i32 %156, 64
  %158 = mul nuw nsw i32 %127, 1
  %159 = add nuw nsw i32 0, %158
  %160 = mul nuw nsw i32 %128, 128
  %161 = add nuw nsw i32 %159, %160
  %162 = udiv i32 %161, 8192
  %163 = getelementptr inbounds [8192 x [64 x float]], ptr %arg3, i32 0, i32 %161, i32 %156
  store float %154, ptr %163, align 4
  br label %x_in_tile-after13

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %164 = mul i32 %thread_id.y, 2
  %165 = add i32 %tile_origin.1, %thread_id.x
  %166 = add i32 %tile_origin.2, %164
  %167 = add i32 %166, 0
  %168 = mul i32 %tile_origin.0, 64
  %169 = add i32 %168, %167
  %170 = udiv i32 %169, 1
  %171 = urem i32 %170, 64
  %172 = udiv i32 %169, 64
  %output_element_address = getelementptr inbounds [64 x [64 x float]], ptr %arg2, i32 0, i32 %172, i32 %171
  %output = load float, ptr %36, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

reduction_write_output-true59:                    ; preds = %reduction_write_output-after
  %173 = mul i32 %thread_id.y, 2
  %174 = add i32 %tile_origin.1, %thread_id.x
  %175 = add i32 %tile_origin.2, %173
  %176 = add i32 %175, 1
  %177 = mul i32 %tile_origin.0, 64
  %178 = add i32 %177, %176
  %179 = udiv i32 %178, 1
  %180 = urem i32 %179, 64
  %181 = udiv i32 %178, 64
  %output_element_address61 = getelementptr inbounds [64 x [64 x float]], ptr %arg2, i32 0, i32 %181, i32 %180
  %output62 = load float, ptr %55, align 4
  store float %output62, ptr %output_element_address61, align 4
  br label %reduction_write_output-after60
}

define internal void @region_1_9__1(ptr dereferenceable(4) %Arg_0.10.typed, ptr dereferenceable(4) %Arg_1.11.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.12.typed = alloca float, align 4
  %Arg_0.10 = load float, ptr %Arg_0.10.typed, align 4
  %Arg_1.11 = load float, ptr %Arg_1.11.typed, align 4
  %add.12 = fadd float %Arg_0.10, %Arg_1.11
  store float %add.12, ptr %add.12.typed, align 4
  %load_ret_value = load float, ptr %add.12.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_736(ptr noalias align 128 dereferenceable(16384) %arg0, ptr noalias align 128 dereferenceable(4) %arg1, ptr noalias align 128 dereferenceable(256) %arg2) {
entry:
  %return_buffer41 = alloca float, align 4
  %result_from_other_lane39 = alloca float, align 4
  %return_buffer38 = alloca float, align 4
  %result_from_other_lane36 = alloca float, align 4
  %return_buffer35 = alloca float, align 4
  %result_from_other_lane33 = alloca float, align 4
  %return_buffer32 = alloca float, align 4
  %result_from_other_lane30 = alloca float, align 4
  %return_buffer29 = alloca float, align 4
  %result_from_other_lane27 = alloca float, align 4
  %return_buffer23 = alloca float, align 4
  %result_from_other_lane21 = alloca float, align 4
  %return_buffer20 = alloca float, align 4
  %result_from_other_lane18 = alloca float, align 4
  %return_buffer17 = alloca float, align 4
  %result_from_other_lane15 = alloca float, align 4
  %return_buffer14 = alloca float, align 4
  %result_from_other_lane12 = alloca float, align 4
  %return_buffer11 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer9 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, i32 2, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after43, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %Arg_1.2 = load float, ptr %arg1, align 4, !invariant.load !297
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %Arg_1.2, ptr %2, align 4
  %3 = getelementptr inbounds float, ptr %partial_reduction_result, i32 1
  store float %Arg_1.2, ptr %3, align 4
  %4 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %5 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %6 = urem i32 %4, 1024
  %7 = udiv i32 %4, 1024
  %8 = mul i32 %5, 1
  %9 = add i32 %8, %7
  %10 = icmp ult i32 %9, 1
  br i1 %10, label %11, label %early_return

11:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %6, 32
  %thread_id.y = udiv i32 %6, 32
  %lane_id = urem i32 %6, 32
  %12 = udiv i32 %9, 1
  %13 = urem i32 %12, 1
  %14 = udiv i32 %9, 1
  %15 = urem i32 %14, 1
  %16 = udiv i32 %9, 1
  %17 = icmp eq i32 %15, 0
  %tile_bound = select i1 %17, i32 64, i32 4096
  %18 = icmp eq i32 %13, 0
  %tile_bound1 = select i1 %18, i32 64, i32 64
  %tile_origin.0 = mul i32 %16, 1
  %tile_origin.1 = mul i32 %15, 4096
  %tile_origin.2 = mul i32 %13, 64
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %11
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %19 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %19, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %20 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %21 = mul i32 %thread_id.x, 2
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after6, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %22 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %22, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %23 = icmp eq i32 %tile_loop.indvar, 0
  %24 = mul i32 %tile_loop.indvar, 2
  %25 = add i32 %24, 0
  %x_loc = add i32 %25, %21
  %26 = add i32 %tile_origin.1, %y_in_tile.indvar
  %27 = add i32 %tile_origin.2, %x_loc
  %28 = icmp ult i32 %x_loc, %tile_bound1
  br i1 %28, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body
  %29 = mul i32 %tile_loop.indvar, 2
  %30 = add i32 %29, 1
  %x_loc4 = add i32 %30, %21
  %31 = add i32 %tile_origin.1, %y_in_tile.indvar
  %32 = add i32 %tile_origin.2, %x_loc4
  %33 = icmp ult i32 %x_loc4, %tile_bound1
  br i1 %33, label %x_in_tile-true5, label %x_in_tile-after6

x_in_tile-after6:                                 ; preds = %x_in_tile-true5, %x_in_tile-after
  br label %tile_loop.loop_header, !llvm.loop !457

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !458

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache86, i32 0, i32 %7, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %34 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %35 = load float, ptr %current_output, align 4
  store float %35, ptr %34, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache86, i32 0, i32 %7, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %36 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result10 = load float, ptr %36, align 4
  %37 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result10, i32 16, i32 31)
  store float %37, ptr %result_from_other_lane, align 4
  call void @region_1_3__2(ptr %36, ptr %result_from_other_lane, ptr %return_buffer11)
  %38 = load float, ptr %return_buffer11, align 4
  store float %38, ptr %36, align 4
  %partial_reduction_result13 = load float, ptr %36, align 4
  %39 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result13, i32 8, i32 31)
  store float %39, ptr %result_from_other_lane12, align 4
  call void @region_1_3__2(ptr %36, ptr %result_from_other_lane12, ptr %return_buffer14)
  %40 = load float, ptr %return_buffer14, align 4
  store float %40, ptr %36, align 4
  %partial_reduction_result16 = load float, ptr %36, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result16, i32 4, i32 31)
  store float %41, ptr %result_from_other_lane15, align 4
  call void @region_1_3__2(ptr %36, ptr %result_from_other_lane15, ptr %return_buffer17)
  %42 = load float, ptr %return_buffer17, align 4
  store float %42, ptr %36, align 4
  %partial_reduction_result19 = load float, ptr %36, align 4
  %43 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result19, i32 2, i32 31)
  store float %43, ptr %result_from_other_lane18, align 4
  call void @region_1_3__2(ptr %36, ptr %result_from_other_lane18, ptr %return_buffer20)
  %44 = load float, ptr %return_buffer20, align 4
  store float %44, ptr %36, align 4
  %partial_reduction_result22 = load float, ptr %36, align 4
  %45 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result22, i32 1, i32 31)
  store float %45, ptr %result_from_other_lane21, align 4
  call void @region_1_3__2(ptr %36, ptr %result_from_other_lane21, ptr %return_buffer23)
  %46 = load float, ptr %return_buffer23, align 4
  store float %46, ptr %36, align 4
  %47 = icmp ult i32 %thread_id.x, %tile_bound
  %48 = mul i32 %thread_id.y, 2
  %49 = icmp ult i32 %48, %tile_bound1
  %50 = and i1 %49, %47
  %51 = icmp eq i32 %lane_id, 0
  %52 = and i1 %50, %51
  br i1 %52, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %shmem_output_address24 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache86, i32 0, i32 %7, i32 1, i32 %thread_id.x, i32 %thread_id.y
  %53 = addrspacecast ptr addrspace(3) %shmem_output_address24 to ptr
  %current_output25 = getelementptr inbounds float, ptr %partial_reduction_result, i32 1
  %54 = load float, ptr %current_output25, align 4
  store float %54, ptr %53, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr26 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache86, i32 0, i32 %7, i32 1, i32 %thread_id.y, i32 %thread_id.x
  %55 = addrspacecast ptr addrspace(3) %shmem_transposed_addr26 to ptr
  %partial_reduction_result28 = load float, ptr %55, align 4
  %56 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result28, i32 16, i32 31)
  store float %56, ptr %result_from_other_lane27, align 4
  call void @region_1_3__2(ptr %55, ptr %result_from_other_lane27, ptr %return_buffer29)
  %57 = load float, ptr %return_buffer29, align 4
  store float %57, ptr %55, align 4
  %partial_reduction_result31 = load float, ptr %55, align 4
  %58 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result31, i32 8, i32 31)
  store float %58, ptr %result_from_other_lane30, align 4
  call void @region_1_3__2(ptr %55, ptr %result_from_other_lane30, ptr %return_buffer32)
  %59 = load float, ptr %return_buffer32, align 4
  store float %59, ptr %55, align 4
  %partial_reduction_result34 = load float, ptr %55, align 4
  %60 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result34, i32 4, i32 31)
  store float %60, ptr %result_from_other_lane33, align 4
  call void @region_1_3__2(ptr %55, ptr %result_from_other_lane33, ptr %return_buffer35)
  %61 = load float, ptr %return_buffer35, align 4
  store float %61, ptr %55, align 4
  %partial_reduction_result37 = load float, ptr %55, align 4
  %62 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result37, i32 2, i32 31)
  store float %62, ptr %result_from_other_lane36, align 4
  call void @region_1_3__2(ptr %55, ptr %result_from_other_lane36, ptr %return_buffer38)
  %63 = load float, ptr %return_buffer38, align 4
  store float %63, ptr %55, align 4
  %partial_reduction_result40 = load float, ptr %55, align 4
  %64 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result40, i32 1, i32 31)
  store float %64, ptr %result_from_other_lane39, align 4
  call void @region_1_3__2(ptr %55, ptr %result_from_other_lane39, ptr %return_buffer41)
  %65 = load float, ptr %return_buffer41, align 4
  store float %65, ptr %55, align 4
  %66 = icmp ult i32 %thread_id.x, %tile_bound
  %67 = mul i32 %thread_id.y, 2
  %68 = icmp ult i32 %67, %tile_bound1
  %69 = and i1 %68, %66
  %70 = icmp eq i32 %lane_id, 0
  %71 = and i1 %69, %70
  br i1 %71, label %reduction_write_output-true42, label %reduction_write_output-after43

reduction_write_output-after43:                   ; preds = %reduction_write_output-true42, %reduction_write_output-after
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %72 = mul i32 %thread_id.x, 2
  %73 = sub i32 %x_loc, %72
  %Arg_0.1 = getelementptr inbounds [64 x [64 x float]], ptr %arg0, i32 0, i32 %26, i32 %27
  %Arg_0.13 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  store float %Arg_0.13, ptr %reduction_input_address, align 4
  %74 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %73
  call void @region_1_3__2(ptr %74, ptr %reduction_input_address, ptr %return_buffer)
  %75 = load float, ptr %return_buffer, align 4
  store float %75, ptr %74, align 4
  br label %x_in_tile-after

x_in_tile-true5:                                  ; preds = %x_in_tile-after
  %76 = mul i32 %thread_id.x, 2
  %77 = sub i32 %x_loc4, %76
  %Arg_0.17 = getelementptr inbounds [64 x [64 x float]], ptr %arg0, i32 0, i32 %31, i32 %32
  %Arg_0.18 = load float, ptr %Arg_0.17, align 4, !invariant.load !297
  store float %Arg_0.18, ptr %reduction_input_address, align 4
  %78 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %77
  call void @region_1_3__2(ptr %78, ptr %reduction_input_address, ptr %return_buffer9)
  %79 = load float, ptr %return_buffer9, align 4
  store float %79, ptr %78, align 4
  br label %x_in_tile-after6

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %80 = mul i32 %thread_id.y, 2
  %81 = add i32 %tile_origin.1, %thread_id.x
  %82 = add i32 %tile_origin.2, %80
  %83 = add i32 %82, 0
  %84 = mul i32 %tile_origin.0, 64
  %85 = add i32 %84, %83
  %86 = udiv i32 %85, 1
  %output_element_address = getelementptr inbounds [64 x float], ptr %arg2, i32 0, i32 %86
  %output = load float, ptr %36, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

reduction_write_output-true42:                    ; preds = %reduction_write_output-after
  %87 = mul i32 %thread_id.y, 2
  %88 = add i32 %tile_origin.1, %thread_id.x
  %89 = add i32 %tile_origin.2, %87
  %90 = add i32 %89, 1
  %91 = mul i32 %tile_origin.0, 64
  %92 = add i32 %91, %90
  %93 = udiv i32 %92, 1
  %output_element_address44 = getelementptr inbounds [64 x float], ptr %arg2, i32 0, i32 %93
  %output45 = load float, ptr %55, align 4
  store float %output45, ptr %output_element_address44, align 4
  br label %reduction_write_output-after43
}

define internal void @region_1_3__2(ptr dereferenceable(4) %Arg_0.4.typed, ptr dereferenceable(4) %Arg_1.5.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.6.typed = alloca float, align 4
  %Arg_0.4 = load float, ptr %Arg_0.4.typed, align 4
  %Arg_1.5 = load float, ptr %Arg_1.5.typed, align 4
  %add.6 = fadd float %Arg_0.4, %Arg_1.5
  store float %add.6, ptr %add.6.typed, align 4
  %load_ret_value = load float, ptr %add.6.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_800(ptr noalias align 128 dereferenceable(8192) %arg0, ptr noalias align 128 dereferenceable(4) %arg1, ptr noalias align 128 dereferenceable(8192) %arg2, ptr noalias align 128 dereferenceable(128) %arg3, ptr noalias align 128 dereferenceable(128) %arg4) {
entry:
  %return_buffer64 = alloca float, align 4
  %result_from_other_lane62 = alloca float, align 4
  %return_buffer61 = alloca float, align 4
  %result_from_other_lane59 = alloca float, align 4
  %return_buffer58 = alloca float, align 4
  %result_from_other_lane56 = alloca float, align 4
  %return_buffer55 = alloca float, align 4
  %result_from_other_lane53 = alloca float, align 4
  %return_buffer52 = alloca float, align 4
  %result_from_other_lane50 = alloca float, align 4
  %return_buffer46 = alloca float, align 4
  %tile_loop.invar_address39 = alloca i32, align 4
  %y_in_tile.invar_address33 = alloca i32, align 4
  %partial_reduction_result19 = alloca float, align 4
  %reduction_input_address18 = alloca float, align 4
  %return_buffer17 = alloca float, align 4
  %result_from_other_lane15 = alloca float, align 4
  %return_buffer14 = alloca float, align 4
  %result_from_other_lane12 = alloca float, align 4
  %return_buffer11 = alloca float, align 4
  %result_from_other_lane9 = alloca float, align 4
  %return_buffer8 = alloca float, align 4
  %result_from_other_lane6 = alloca float, align 4
  %return_buffer5 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !344
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after, %entry
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %reduce-group-1-true, label %reduce-group-1-after

reduce-group-1-after:                             ; preds = %reduction_write_output-after66, %reduce-group-0-after
  ret void

reduce-group-0-true:                              ; preds = %entry
  %Arg_1.2 = load float, ptr %arg1, align 4, !invariant.load !297
  %3 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %Arg_1.2, ptr %3, align 4
  %4 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %5 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %6 = urem i32 %4, 1024
  %7 = udiv i32 %4, 1024
  %8 = mul i32 %5, 1
  %9 = add i32 %8, %7
  %10 = icmp ult i32 %9, 1
  br i1 %10, label %11, label %early_return

11:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %6, 32
  %thread_id.y = udiv i32 %6, 32
  %lane_id = urem i32 %6, 32
  %12 = udiv i32 %9, 1
  %13 = urem i32 %12, 1
  %14 = udiv i32 %9, 1
  %15 = urem i32 %14, 1
  %16 = udiv i32 %9, 1
  %17 = icmp eq i32 %15, 0
  %tile_bound = select i1 %17, i32 64, i32 4096
  %18 = icmp eq i32 %13, 0
  %tile_bound1 = select i1 %18, i32 32, i32 32
  %tile_origin.0 = mul i32 %16, 1
  %tile_origin.1 = mul i32 %15, 4096
  %tile_origin.2 = mul i32 %13, 32
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %11
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %19 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %19, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %20 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %21 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %22 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %22, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %23 = icmp eq i32 %tile_loop.indvar, 0
  %24 = mul i32 %tile_loop.indvar, 1
  %25 = add i32 %24, 0
  %x_loc = add i32 %25, %21
  %26 = add i32 %tile_origin.1, %y_in_tile.indvar
  %27 = add i32 %tile_origin.2, %x_loc
  %28 = icmp ult i32 %x_loc, %tile_bound1
  br i1 %28, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body
  br label %tile_loop.loop_header, !llvm.loop !459

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !460

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache87, i32 0, i32 %7, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %29 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %30 = load float, ptr %current_output, align 4
  store float %30, ptr %29, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache87, i32 0, i32 %7, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %31 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result4 = load float, ptr %31, align 4
  %32 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result4, i32 16, i32 31)
  store float %32, ptr %result_from_other_lane, align 4
  call void @region_1_4__1(ptr %31, ptr %result_from_other_lane, ptr %return_buffer5)
  %33 = load float, ptr %return_buffer5, align 4
  store float %33, ptr %31, align 4
  %partial_reduction_result7 = load float, ptr %31, align 4
  %34 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result7, i32 8, i32 31)
  store float %34, ptr %result_from_other_lane6, align 4
  call void @region_1_4__1(ptr %31, ptr %result_from_other_lane6, ptr %return_buffer8)
  %35 = load float, ptr %return_buffer8, align 4
  store float %35, ptr %31, align 4
  %partial_reduction_result10 = load float, ptr %31, align 4
  %36 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result10, i32 4, i32 31)
  store float %36, ptr %result_from_other_lane9, align 4
  call void @region_1_4__1(ptr %31, ptr %result_from_other_lane9, ptr %return_buffer11)
  %37 = load float, ptr %return_buffer11, align 4
  store float %37, ptr %31, align 4
  %partial_reduction_result13 = load float, ptr %31, align 4
  %38 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result13, i32 2, i32 31)
  store float %38, ptr %result_from_other_lane12, align 4
  call void @region_1_4__1(ptr %31, ptr %result_from_other_lane12, ptr %return_buffer14)
  %39 = load float, ptr %return_buffer14, align 4
  store float %39, ptr %31, align 4
  %partial_reduction_result16 = load float, ptr %31, align 4
  %40 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result16, i32 1, i32 31)
  store float %40, ptr %result_from_other_lane15, align 4
  call void @region_1_4__1(ptr %31, ptr %result_from_other_lane15, ptr %return_buffer17)
  %41 = load float, ptr %return_buffer17, align 4
  store float %41, ptr %31, align 4
  %42 = icmp ult i32 %thread_id.x, %tile_bound
  %43 = mul i32 %thread_id.y, 1
  %44 = icmp ult i32 %43, %tile_bound1
  %45 = and i1 %44, %42
  %46 = icmp eq i32 %lane_id, 0
  %47 = and i1 %45, %46
  br i1 %47, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %48 = mul i32 %thread_id.x, 1
  %49 = sub i32 %x_loc, %48
  %Arg_0.1 = getelementptr inbounds [64 x [32 x float]], ptr %arg0, i32 0, i32 %26, i32 %27
  %Arg_0.13 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  store float %Arg_0.13, ptr %reduction_input_address, align 4
  %50 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %49
  call void @region_1_4__1(ptr %50, ptr %reduction_input_address, ptr %return_buffer)
  %51 = load float, ptr %return_buffer, align 4
  store float %51, ptr %50, align 4
  br label %x_in_tile-after

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %52 = mul i32 %thread_id.y, 1
  %53 = add i32 %tile_origin.1, %thread_id.x
  %54 = add i32 %tile_origin.2, %52
  %55 = add i32 %54, 0
  %56 = mul i32 %tile_origin.0, 32
  %57 = add i32 %56, %55
  %58 = udiv i32 %57, 1
  %output_element_address = getelementptr inbounds [32 x float], ptr %arg3, i32 0, i32 %58
  %output = load float, ptr %31, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

reduce-group-1-true:                              ; preds = %reduce-group-0-after
  %Arg_1.220 = load float, ptr %arg1, align 4, !invariant.load !297
  %59 = getelementptr inbounds float, ptr %partial_reduction_result19, i32 0
  store float %Arg_1.220, ptr %59, align 4
  %60 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %61 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %62 = urem i32 %60, 1024
  %63 = udiv i32 %60, 1024
  %64 = mul i32 %61, 1
  %65 = add i32 %64, %63
  %66 = icmp ult i32 %65, 1
  br i1 %66, label %67, label %early_return21

67:                                               ; preds = %reduce-group-1-true
  %thread_id.x22 = urem i32 %62, 32
  %thread_id.y23 = udiv i32 %62, 32
  %lane_id24 = urem i32 %62, 32
  %68 = udiv i32 %65, 1
  %69 = urem i32 %68, 1
  %70 = udiv i32 %65, 1
  %71 = urem i32 %70, 1
  %72 = udiv i32 %65, 1
  %73 = icmp eq i32 %71, 0
  %tile_bound25 = select i1 %73, i32 64, i32 4096
  %74 = icmp eq i32 %69, 0
  %tile_bound26 = select i1 %74, i32 32, i32 32
  %tile_origin.027 = mul i32 %72, 1
  %tile_origin.128 = mul i32 %71, 4096
  %tile_origin.229 = mul i32 %69, 32
  store i32 %thread_id.y23, ptr %y_in_tile.invar_address33, align 4
  br label %y_in_tile.loop_header31

y_in_tile.loop_header31:                          ; preds = %tile_loop.loop_exit36, %67
  %y_in_tile.indvar34 = load i32, ptr %y_in_tile.invar_address33, align 4
  %75 = icmp uge i32 %y_in_tile.indvar34, %tile_bound25
  br i1 %75, label %y_in_tile.loop_exit30, label %y_in_tile.loop_body32

y_in_tile.loop_body32:                            ; preds = %y_in_tile.loop_header31
  %invar.inc35 = add nuw nsw i32 %y_in_tile.indvar34, 32
  store i32 %invar.inc35, ptr %y_in_tile.invar_address33, align 4
  %76 = icmp eq i32 %y_in_tile.indvar34, %thread_id.y23
  %77 = mul i32 %thread_id.x22, 1
  store i32 0, ptr %tile_loop.invar_address39, align 4
  br label %tile_loop.loop_header37

tile_loop.loop_header37:                          ; preds = %x_in_tile-after44, %y_in_tile.loop_body32
  %tile_loop.indvar40 = load i32, ptr %tile_loop.invar_address39, align 4
  %78 = icmp uge i32 %tile_loop.indvar40, 1
  br i1 %78, label %tile_loop.loop_exit36, label %tile_loop.loop_body38

tile_loop.loop_body38:                            ; preds = %tile_loop.loop_header37
  %invar.inc41 = add nuw nsw i32 %tile_loop.indvar40, 1
  store i32 %invar.inc41, ptr %tile_loop.invar_address39, align 4
  %79 = icmp eq i32 %tile_loop.indvar40, 0
  %80 = mul i32 %tile_loop.indvar40, 1
  %81 = add i32 %80, 0
  %x_loc42 = add i32 %81, %77
  %82 = add i32 %tile_origin.128, %y_in_tile.indvar34
  %83 = add i32 %tile_origin.229, %x_loc42
  %84 = icmp ult i32 %x_loc42, %tile_bound26
  br i1 %84, label %x_in_tile-true43, label %x_in_tile-after44

x_in_tile-after44:                                ; preds = %x_in_tile-true43, %tile_loop.loop_body38
  br label %tile_loop.loop_header37, !llvm.loop !461

tile_loop.loop_exit36:                            ; preds = %tile_loop.loop_header37
  br label %y_in_tile.loop_header31, !llvm.loop !462

y_in_tile.loop_exit30:                            ; preds = %y_in_tile.loop_header31
  %shmem_output_address47 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache88, i32 0, i32 %63, i32 0, i32 %thread_id.x22, i32 %thread_id.y23
  %85 = addrspacecast ptr addrspace(3) %shmem_output_address47 to ptr
  %current_output48 = getelementptr inbounds float, ptr %partial_reduction_result19, i32 0
  %86 = load float, ptr %current_output48, align 4
  store float %86, ptr %85, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr49 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache88, i32 0, i32 %63, i32 0, i32 %thread_id.y23, i32 %thread_id.x22
  %87 = addrspacecast ptr addrspace(3) %shmem_transposed_addr49 to ptr
  %partial_reduction_result51 = load float, ptr %87, align 4
  %88 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result51, i32 16, i32 31)
  store float %88, ptr %result_from_other_lane50, align 4
  call void @region_2_9__1(ptr %87, ptr %result_from_other_lane50, ptr %return_buffer52)
  %89 = load float, ptr %return_buffer52, align 4
  store float %89, ptr %87, align 4
  %partial_reduction_result54 = load float, ptr %87, align 4
  %90 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result54, i32 8, i32 31)
  store float %90, ptr %result_from_other_lane53, align 4
  call void @region_2_9__1(ptr %87, ptr %result_from_other_lane53, ptr %return_buffer55)
  %91 = load float, ptr %return_buffer55, align 4
  store float %91, ptr %87, align 4
  %partial_reduction_result57 = load float, ptr %87, align 4
  %92 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result57, i32 4, i32 31)
  store float %92, ptr %result_from_other_lane56, align 4
  call void @region_2_9__1(ptr %87, ptr %result_from_other_lane56, ptr %return_buffer58)
  %93 = load float, ptr %return_buffer58, align 4
  store float %93, ptr %87, align 4
  %partial_reduction_result60 = load float, ptr %87, align 4
  %94 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result60, i32 2, i32 31)
  store float %94, ptr %result_from_other_lane59, align 4
  call void @region_2_9__1(ptr %87, ptr %result_from_other_lane59, ptr %return_buffer61)
  %95 = load float, ptr %return_buffer61, align 4
  store float %95, ptr %87, align 4
  %partial_reduction_result63 = load float, ptr %87, align 4
  %96 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result63, i32 1, i32 31)
  store float %96, ptr %result_from_other_lane62, align 4
  call void @region_2_9__1(ptr %87, ptr %result_from_other_lane62, ptr %return_buffer64)
  %97 = load float, ptr %return_buffer64, align 4
  store float %97, ptr %87, align 4
  %98 = icmp ult i32 %thread_id.x22, %tile_bound25
  %99 = mul i32 %thread_id.y23, 1
  %100 = icmp ult i32 %99, %tile_bound26
  %101 = and i1 %100, %98
  %102 = icmp eq i32 %lane_id24, 0
  %103 = and i1 %101, %102
  br i1 %103, label %reduction_write_output-true65, label %reduction_write_output-after66

reduction_write_output-after66:                   ; preds = %reduction_write_output-true65, %y_in_tile.loop_exit30
  br label %reduce-group-1-after

early_return21:                                   ; preds = %reduce-group-1-true
  ret void

x_in_tile-true43:                                 ; preds = %tile_loop.loop_body38
  %104 = mul i32 %thread_id.x22, 1
  %105 = sub i32 %x_loc42, %104
  %Arg_2.3 = getelementptr inbounds [64 x [32 x float]], ptr %arg2, i32 0, i32 %82, i32 %83
  %Arg_2.345 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  store float %Arg_2.345, ptr %reduction_input_address18, align 4
  %106 = getelementptr inbounds float, ptr %partial_reduction_result19, i32 %105
  call void @region_2_9__1(ptr %106, ptr %reduction_input_address18, ptr %return_buffer46)
  %107 = load float, ptr %return_buffer46, align 4
  store float %107, ptr %106, align 4
  br label %x_in_tile-after44

reduction_write_output-true65:                    ; preds = %y_in_tile.loop_exit30
  %108 = mul i32 %thread_id.y23, 1
  %109 = add i32 %tile_origin.128, %thread_id.x22
  %110 = add i32 %tile_origin.229, %108
  %111 = add i32 %110, 0
  %112 = mul i32 %tile_origin.027, 32
  %113 = add i32 %112, %111
  %114 = udiv i32 %113, 1
  %output_element_address67 = getelementptr inbounds [32 x float], ptr %arg4, i32 0, i32 %114
  %output68 = load float, ptr %87, align 4
  store float %output68, ptr %output_element_address67, align 4
  br label %reduction_write_output-after66
}

define internal void @region_1_4__1(ptr dereferenceable(4) %Arg_0.5.typed, ptr dereferenceable(4) %Arg_1.6.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.7.typed = alloca float, align 4
  %Arg_0.5 = load float, ptr %Arg_0.5.typed, align 4
  %Arg_1.6 = load float, ptr %Arg_1.6.typed, align 4
  %add.7 = fadd float %Arg_0.5, %Arg_1.6
  store float %add.7, ptr %add.7.typed, align 4
  %load_ret_value = load float, ptr %add.7.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_9__1(ptr dereferenceable(4) %Arg_0.10.typed, ptr dereferenceable(4) %Arg_1.11.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.12.typed = alloca float, align 4
  %Arg_0.10 = load float, ptr %Arg_0.10.typed, align 4
  %Arg_1.11 = load float, ptr %Arg_1.11.typed, align 4
  %add.12 = fadd float %Arg_0.10, %Arg_1.11
  store float %add.12, ptr %add.12.typed, align 4
  %load_ret_value = load float, ptr %add.12.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_125(ptr noalias align 128 dereferenceable(4194304) %arg0, ptr noalias align 128 dereferenceable(4063232) %arg1, ptr noalias align 128 dereferenceable(32768) %arg2, ptr noalias align 128 dereferenceable(1966080) %arg3, ptr noalias align 128 dereferenceable(4194304) %arg4, ptr noalias align 128 dereferenceable(32768) %arg5, ptr noalias align 128 dereferenceable(32768) %arg6, ptr noalias align 128 dereferenceable(4194304) %arg7, ptr noalias align 16 dereferenceable(512) %arg8, ptr noalias align 128 dereferenceable(4194304) %arg9, ptr noalias align 128 dereferenceable(32768) %arg10, ptr noalias align 128 dereferenceable(4194304) %arg11, ptr noalias align 128 dereferenceable(32768) %arg12, ptr noalias align 128 dereferenceable(32768) %arg13, ptr noalias align 128 dereferenceable(32768) %arg14, ptr noalias align 128 dereferenceable(32768) %arg15, ptr noalias align 128 dereferenceable(32768) %arg16, ptr noalias align 128 dereferenceable(32768) %arg17) {
entry:
  %return_buffer144 = alloca float, align 4
  %result_from_other_lane142 = alloca float, align 4
  %return_buffer141 = alloca float, align 4
  %result_from_other_lane139 = alloca float, align 4
  %return_buffer138 = alloca float, align 4
  %result_from_other_lane136 = alloca float, align 4
  %return_buffer135 = alloca float, align 4
  %result_from_other_lane133 = alloca float, align 4
  %return_buffer132 = alloca float, align 4
  %result_from_other_lane130 = alloca float, align 4
  %return_buffer122 = alloca float, align 4
  %result_from_other_lane120 = alloca float, align 4
  %return_buffer119 = alloca float, align 4
  %result_from_other_lane117 = alloca float, align 4
  %return_buffer116 = alloca float, align 4
  %result_from_other_lane114 = alloca float, align 4
  %return_buffer113 = alloca float, align 4
  %result_from_other_lane111 = alloca float, align 4
  %return_buffer110 = alloca float, align 4
  %result_from_other_lane108 = alloca float, align 4
  %return_buffer100 = alloca float, align 4
  %result_from_other_lane98 = alloca float, align 4
  %return_buffer97 = alloca float, align 4
  %result_from_other_lane95 = alloca float, align 4
  %return_buffer94 = alloca float, align 4
  %result_from_other_lane92 = alloca float, align 4
  %return_buffer91 = alloca float, align 4
  %result_from_other_lane89 = alloca float, align 4
  %return_buffer88 = alloca float, align 4
  %result_from_other_lane86 = alloca float, align 4
  %return_buffer78 = alloca float, align 4
  %result_from_other_lane76 = alloca float, align 4
  %return_buffer75 = alloca float, align 4
  %result_from_other_lane73 = alloca float, align 4
  %return_buffer72 = alloca float, align 4
  %result_from_other_lane70 = alloca float, align 4
  %return_buffer69 = alloca float, align 4
  %result_from_other_lane67 = alloca float, align 4
  %return_buffer66 = alloca float, align 4
  %result_from_other_lane64 = alloca float, align 4
  %return_buffer60 = alloca float, align 4
  %result_from_other_lane58 = alloca float, align 4
  %return_buffer57 = alloca float, align 4
  %result_from_other_lane55 = alloca float, align 4
  %return_buffer54 = alloca float, align 4
  %result_from_other_lane52 = alloca float, align 4
  %return_buffer51 = alloca float, align 4
  %result_from_other_lane49 = alloca float, align 4
  %return_buffer48 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer46 = alloca float, align 4
  %return_buffer40 = alloca float, align 4
  %return_buffer34 = alloca float, align 4
  %return_buffer26 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result11 = alloca float, align 4
  %reduction_input_address10 = alloca float, align 4
  %partial_reduction_result8 = alloca float, align 4
  %reduction_input_address7 = alloca float, align 4
  %partial_reduction_result5 = alloca float, align 4
  %reduction_input_address4 = alloca float, align 4
  %partial_reduction_result2 = alloca float, align 4
  %reduction_input_address1 = alloca float, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after146, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_98_constant_27 = load float, ptr @77, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_98_constant_27, ptr %2, align 4
  %region_0_98_constant_273 = load float, ptr @77, align 4
  %3 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  store float %region_0_98_constant_273, ptr %3, align 4
  %region_0_98_constant_276 = load float, ptr @77, align 4
  %4 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  store float %region_0_98_constant_276, ptr %4, align 4
  %region_0_98_constant_279 = load float, ptr @77, align 4
  %5 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  store float %region_0_98_constant_279, ptr %5, align 4
  %region_0_98_constant_2712 = load float, ptr @77, align 4
  %6 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  store float %region_0_98_constant_2712, ptr %6, align 4
  %7 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %8 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !362
  %9 = urem i32 %7, 1024
  %10 = udiv i32 %7, 1024
  %11 = mul i32 %8, 1
  %12 = add i32 %11, %10
  %13 = icmp ult i32 %12, 256
  br i1 %13, label %14, label %early_return

14:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %9, 32
  %thread_id.y = udiv i32 %9, 32
  %lane_id = urem i32 %9, 32
  %15 = udiv i32 %12, 1
  %16 = urem i32 %15, 4
  %17 = udiv i32 %12, 4
  %18 = urem i32 %17, 1
  %19 = udiv i32 %12, 4
  %20 = icmp eq i32 %18, 0
  %tile_bound = select i1 %20, i32 128, i32 4096
  %21 = icmp eq i32 %16, 3
  %tile_bound13 = select i1 %21, i32 32, i32 32
  %tile_origin.0 = mul i32 %19, 1
  %tile_origin.1 = mul i32 %18, 4096
  %tile_origin.2 = mul i32 %16, 32
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %14
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %22 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %22, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %23 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %24 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %25 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %25, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc14 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc14, ptr %tile_loop.invar_address, align 4
  %26 = icmp eq i32 %tile_loop.indvar, 0
  %27 = mul i32 %tile_loop.indvar, 1
  %28 = add i32 %27, 0
  %x_loc = add i32 %28, %24
  %29 = add i32 %tile_origin.1, %y_in_tile.indvar
  %30 = add i32 %tile_origin.2, %x_loc
  %31 = icmp ult i32 %x_loc, %tile_bound13
  br i1 %31, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body
  br label %tile_loop.loop_header, !llvm.loop !463

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !464

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache89, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %32 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %33 = load float, ptr %current_output, align 4
  store float %33, ptr %32, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache89, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %34 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result47 = load float, ptr %34, align 4
  %35 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result47, i32 16, i32 31)
  store float %35, ptr %result_from_other_lane, align 4
  call void @region_1_28(ptr %34, ptr %result_from_other_lane, ptr %return_buffer48)
  %36 = load float, ptr %return_buffer48, align 4
  store float %36, ptr %34, align 4
  %partial_reduction_result50 = load float, ptr %34, align 4
  %37 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result50, i32 8, i32 31)
  store float %37, ptr %result_from_other_lane49, align 4
  call void @region_1_28(ptr %34, ptr %result_from_other_lane49, ptr %return_buffer51)
  %38 = load float, ptr %return_buffer51, align 4
  store float %38, ptr %34, align 4
  %partial_reduction_result53 = load float, ptr %34, align 4
  %39 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result53, i32 4, i32 31)
  store float %39, ptr %result_from_other_lane52, align 4
  call void @region_1_28(ptr %34, ptr %result_from_other_lane52, ptr %return_buffer54)
  %40 = load float, ptr %return_buffer54, align 4
  store float %40, ptr %34, align 4
  %partial_reduction_result56 = load float, ptr %34, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result56, i32 2, i32 31)
  store float %41, ptr %result_from_other_lane55, align 4
  call void @region_1_28(ptr %34, ptr %result_from_other_lane55, ptr %return_buffer57)
  %42 = load float, ptr %return_buffer57, align 4
  store float %42, ptr %34, align 4
  %partial_reduction_result59 = load float, ptr %34, align 4
  %43 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result59, i32 1, i32 31)
  store float %43, ptr %result_from_other_lane58, align 4
  call void @region_1_28(ptr %34, ptr %result_from_other_lane58, ptr %return_buffer60)
  %44 = load float, ptr %return_buffer60, align 4
  store float %44, ptr %34, align 4
  %45 = icmp ult i32 %thread_id.x, %tile_bound
  %46 = mul i32 %thread_id.y, 1
  %47 = icmp ult i32 %46, %tile_bound13
  %48 = and i1 %47, %45
  %49 = icmp eq i32 %lane_id, 0
  %50 = and i1 %48, %49
  br i1 %50, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %shmem_output_address61 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache90, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %51 = addrspacecast ptr addrspace(3) %shmem_output_address61 to ptr
  %current_output62 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  %52 = load float, ptr %current_output62, align 4
  store float %52, ptr %51, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr63 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache90, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %53 = addrspacecast ptr addrspace(3) %shmem_transposed_addr63 to ptr
  %partial_reduction_result65 = load float, ptr %53, align 4
  %54 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result65, i32 16, i32 31)
  store float %54, ptr %result_from_other_lane64, align 4
  call void @region_2_43(ptr %53, ptr %result_from_other_lane64, ptr %return_buffer66)
  %55 = load float, ptr %return_buffer66, align 4
  store float %55, ptr %53, align 4
  %partial_reduction_result68 = load float, ptr %53, align 4
  %56 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result68, i32 8, i32 31)
  store float %56, ptr %result_from_other_lane67, align 4
  call void @region_2_43(ptr %53, ptr %result_from_other_lane67, ptr %return_buffer69)
  %57 = load float, ptr %return_buffer69, align 4
  store float %57, ptr %53, align 4
  %partial_reduction_result71 = load float, ptr %53, align 4
  %58 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result71, i32 4, i32 31)
  store float %58, ptr %result_from_other_lane70, align 4
  call void @region_2_43(ptr %53, ptr %result_from_other_lane70, ptr %return_buffer72)
  %59 = load float, ptr %return_buffer72, align 4
  store float %59, ptr %53, align 4
  %partial_reduction_result74 = load float, ptr %53, align 4
  %60 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result74, i32 2, i32 31)
  store float %60, ptr %result_from_other_lane73, align 4
  call void @region_2_43(ptr %53, ptr %result_from_other_lane73, ptr %return_buffer75)
  %61 = load float, ptr %return_buffer75, align 4
  store float %61, ptr %53, align 4
  %partial_reduction_result77 = load float, ptr %53, align 4
  %62 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result77, i32 1, i32 31)
  store float %62, ptr %result_from_other_lane76, align 4
  call void @region_2_43(ptr %53, ptr %result_from_other_lane76, ptr %return_buffer78)
  %63 = load float, ptr %return_buffer78, align 4
  store float %63, ptr %53, align 4
  %64 = icmp ult i32 %thread_id.x, %tile_bound
  %65 = mul i32 %thread_id.y, 1
  %66 = icmp ult i32 %65, %tile_bound13
  %67 = and i1 %66, %64
  %68 = icmp eq i32 %lane_id, 0
  %69 = and i1 %67, %68
  br i1 %69, label %reduction_write_output-true79, label %reduction_write_output-after80

reduction_write_output-after80:                   ; preds = %reduction_write_output-true79, %reduction_write_output-after
  %shmem_output_address83 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache91, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %70 = addrspacecast ptr addrspace(3) %shmem_output_address83 to ptr
  %current_output84 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  %71 = load float, ptr %current_output84, align 4
  store float %71, ptr %70, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr85 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache91, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %72 = addrspacecast ptr addrspace(3) %shmem_transposed_addr85 to ptr
  %partial_reduction_result87 = load float, ptr %72, align 4
  %73 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result87, i32 16, i32 31)
  store float %73, ptr %result_from_other_lane86, align 4
  call void @region_3_62(ptr %72, ptr %result_from_other_lane86, ptr %return_buffer88)
  %74 = load float, ptr %return_buffer88, align 4
  store float %74, ptr %72, align 4
  %partial_reduction_result90 = load float, ptr %72, align 4
  %75 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result90, i32 8, i32 31)
  store float %75, ptr %result_from_other_lane89, align 4
  call void @region_3_62(ptr %72, ptr %result_from_other_lane89, ptr %return_buffer91)
  %76 = load float, ptr %return_buffer91, align 4
  store float %76, ptr %72, align 4
  %partial_reduction_result93 = load float, ptr %72, align 4
  %77 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result93, i32 4, i32 31)
  store float %77, ptr %result_from_other_lane92, align 4
  call void @region_3_62(ptr %72, ptr %result_from_other_lane92, ptr %return_buffer94)
  %78 = load float, ptr %return_buffer94, align 4
  store float %78, ptr %72, align 4
  %partial_reduction_result96 = load float, ptr %72, align 4
  %79 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result96, i32 2, i32 31)
  store float %79, ptr %result_from_other_lane95, align 4
  call void @region_3_62(ptr %72, ptr %result_from_other_lane95, ptr %return_buffer97)
  %80 = load float, ptr %return_buffer97, align 4
  store float %80, ptr %72, align 4
  %partial_reduction_result99 = load float, ptr %72, align 4
  %81 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result99, i32 1, i32 31)
  store float %81, ptr %result_from_other_lane98, align 4
  call void @region_3_62(ptr %72, ptr %result_from_other_lane98, ptr %return_buffer100)
  %82 = load float, ptr %return_buffer100, align 4
  store float %82, ptr %72, align 4
  %83 = icmp ult i32 %thread_id.x, %tile_bound
  %84 = mul i32 %thread_id.y, 1
  %85 = icmp ult i32 %84, %tile_bound13
  %86 = and i1 %85, %83
  %87 = icmp eq i32 %lane_id, 0
  %88 = and i1 %86, %87
  br i1 %88, label %reduction_write_output-true101, label %reduction_write_output-after102

reduction_write_output-after102:                  ; preds = %reduction_write_output-true101, %reduction_write_output-after80
  %shmem_output_address105 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache92, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %89 = addrspacecast ptr addrspace(3) %shmem_output_address105 to ptr
  %current_output106 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  %90 = load float, ptr %current_output106, align 4
  store float %90, ptr %89, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr107 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache92, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %91 = addrspacecast ptr addrspace(3) %shmem_transposed_addr107 to ptr
  %partial_reduction_result109 = load float, ptr %91, align 4
  %92 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result109, i32 16, i32 31)
  store float %92, ptr %result_from_other_lane108, align 4
  call void @region_4_77(ptr %91, ptr %result_from_other_lane108, ptr %return_buffer110)
  %93 = load float, ptr %return_buffer110, align 4
  store float %93, ptr %91, align 4
  %partial_reduction_result112 = load float, ptr %91, align 4
  %94 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result112, i32 8, i32 31)
  store float %94, ptr %result_from_other_lane111, align 4
  call void @region_4_77(ptr %91, ptr %result_from_other_lane111, ptr %return_buffer113)
  %95 = load float, ptr %return_buffer113, align 4
  store float %95, ptr %91, align 4
  %partial_reduction_result115 = load float, ptr %91, align 4
  %96 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result115, i32 4, i32 31)
  store float %96, ptr %result_from_other_lane114, align 4
  call void @region_4_77(ptr %91, ptr %result_from_other_lane114, ptr %return_buffer116)
  %97 = load float, ptr %return_buffer116, align 4
  store float %97, ptr %91, align 4
  %partial_reduction_result118 = load float, ptr %91, align 4
  %98 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result118, i32 2, i32 31)
  store float %98, ptr %result_from_other_lane117, align 4
  call void @region_4_77(ptr %91, ptr %result_from_other_lane117, ptr %return_buffer119)
  %99 = load float, ptr %return_buffer119, align 4
  store float %99, ptr %91, align 4
  %partial_reduction_result121 = load float, ptr %91, align 4
  %100 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result121, i32 1, i32 31)
  store float %100, ptr %result_from_other_lane120, align 4
  call void @region_4_77(ptr %91, ptr %result_from_other_lane120, ptr %return_buffer122)
  %101 = load float, ptr %return_buffer122, align 4
  store float %101, ptr %91, align 4
  %102 = icmp ult i32 %thread_id.x, %tile_bound
  %103 = mul i32 %thread_id.y, 1
  %104 = icmp ult i32 %103, %tile_bound13
  %105 = and i1 %104, %102
  %106 = icmp eq i32 %lane_id, 0
  %107 = and i1 %105, %106
  br i1 %107, label %reduction_write_output-true123, label %reduction_write_output-after124

reduction_write_output-after124:                  ; preds = %reduction_write_output-true123, %reduction_write_output-after102
  %shmem_output_address127 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache93, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %108 = addrspacecast ptr addrspace(3) %shmem_output_address127 to ptr
  %current_output128 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  %109 = load float, ptr %current_output128, align 4
  store float %109, ptr %108, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr129 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache93, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %110 = addrspacecast ptr addrspace(3) %shmem_transposed_addr129 to ptr
  %partial_reduction_result131 = load float, ptr %110, align 4
  %111 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result131, i32 16, i32 31)
  store float %111, ptr %result_from_other_lane130, align 4
  call void @region_5_92(ptr %110, ptr %result_from_other_lane130, ptr %return_buffer132)
  %112 = load float, ptr %return_buffer132, align 4
  store float %112, ptr %110, align 4
  %partial_reduction_result134 = load float, ptr %110, align 4
  %113 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result134, i32 8, i32 31)
  store float %113, ptr %result_from_other_lane133, align 4
  call void @region_5_92(ptr %110, ptr %result_from_other_lane133, ptr %return_buffer135)
  %114 = load float, ptr %return_buffer135, align 4
  store float %114, ptr %110, align 4
  %partial_reduction_result137 = load float, ptr %110, align 4
  %115 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result137, i32 4, i32 31)
  store float %115, ptr %result_from_other_lane136, align 4
  call void @region_5_92(ptr %110, ptr %result_from_other_lane136, ptr %return_buffer138)
  %116 = load float, ptr %return_buffer138, align 4
  store float %116, ptr %110, align 4
  %partial_reduction_result140 = load float, ptr %110, align 4
  %117 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result140, i32 2, i32 31)
  store float %117, ptr %result_from_other_lane139, align 4
  call void @region_5_92(ptr %110, ptr %result_from_other_lane139, ptr %return_buffer141)
  %118 = load float, ptr %return_buffer141, align 4
  store float %118, ptr %110, align 4
  %partial_reduction_result143 = load float, ptr %110, align 4
  %119 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result143, i32 1, i32 31)
  store float %119, ptr %result_from_other_lane142, align 4
  call void @region_5_92(ptr %110, ptr %result_from_other_lane142, ptr %return_buffer144)
  %120 = load float, ptr %return_buffer144, align 4
  store float %120, ptr %110, align 4
  %121 = icmp ult i32 %thread_id.x, %tile_bound
  %122 = mul i32 %thread_id.y, 1
  %123 = icmp ult i32 %122, %tile_bound13
  %124 = and i1 %123, %121
  %125 = icmp eq i32 %lane_id, 0
  %126 = and i1 %124, %125
  br i1 %126, label %reduction_write_output-true145, label %reduction_write_output-after146

reduction_write_output-after146:                  ; preds = %reduction_write_output-true145, %reduction_write_output-after124
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %127 = mul nuw nsw i32 %30, 1
  %128 = add nuw nsw i32 0, %127
  %129 = mul nuw nsw i32 %29, 128
  %130 = add nuw nsw i32 %128, %129
  %131 = mul nuw nsw i32 %tile_origin.0, 16384
  %132 = add nuw nsw i32 %130, %131
  %133 = udiv i32 %132, 1
  %134 = urem i32 %133, 128
  %135 = udiv i32 %132, 128
  %136 = urem i32 %135, 128
  %137 = udiv i32 %132, 16384
  %138 = mul i32 %thread_id.x, 1
  %139 = sub i32 %x_loc, %138
  %140 = mul nuw nsw i32 %134, 1
  %141 = add nuw nsw i32 0, %140
  %142 = udiv i32 %141, 128
  %143 = mul nuw nsw i32 %136, 1
  %144 = add nuw nsw i32 0, %143
  %145 = mul nuw nsw i32 %137, 128
  %146 = add nuw nsw i32 %144, %145
  %147 = udiv i32 %146, 8192
  %Arg_0.1 = getelementptr inbounds float, ptr %arg0, i32 %132
  %Arg_0.115 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %148 = add i32 %146, 0
  %Arg_3.4 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg3, i32 0, i32 4, i32 %148, i32 0
  %Arg_3.416 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  %Arg_2.3 = getelementptr inbounds [8192 x [1 x float]], ptr %arg2, i32 0, i32 %146, i32 0
  %Arg_2.317 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %multiply.16 = fmul float %Arg_3.416, %Arg_2.317
  %region_0_98_constant_17 = load float, ptr @78, align 4
  %Arg_2.318 = getelementptr inbounds [8192 x [1 x float]], ptr %arg2, i32 0, i32 %146, i32 0
  %Arg_2.319 = load float, ptr %Arg_2.318, align 4, !invariant.load !297
  %subtract.19 = fsub float %region_0_98_constant_17, %Arg_2.319
  %multiply.20 = fmul float %multiply.16, %subtract.19
  %149 = add i32 %146, 0
  %Arg_1.2 = getelementptr inbounds [8192 x [124 x float]], ptr %arg1, i32 0, i32 %149, i32 2
  %Arg_1.220 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %add.22 = fadd float %multiply.20, %Arg_1.220
  %multiply.25 = fmul float %Arg_0.115, %add.22
  store float %multiply.25, ptr %reduction_input_address, align 4
  %150 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %139
  call void @region_1_28(ptr %150, ptr %reduction_input_address, ptr %return_buffer)
  %151 = load float, ptr %return_buffer, align 4
  store float %151, ptr %150, align 4
  %152 = mul nuw nsw i32 %134, 1
  %153 = add nuw nsw i32 0, %152
  %154 = udiv i32 %153, 128
  %155 = mul nuw nsw i32 %136, 1
  %156 = add nuw nsw i32 0, %155
  %157 = mul nuw nsw i32 %137, 128
  %158 = add nuw nsw i32 %156, %157
  %159 = udiv i32 %158, 8192
  %Arg_4.5 = getelementptr inbounds float, ptr %arg4, i32 %132
  %Arg_4.521 = load float, ptr %Arg_4.5, align 4, !invariant.load !297
  %160 = add i32 %158, 0
  %Arg_3.422 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg3, i32 0, i32 43, i32 %160, i32 0
  %Arg_3.423 = load float, ptr %Arg_3.422, align 4, !invariant.load !297
  %Arg_5.6 = getelementptr inbounds [8192 x float], ptr %arg5, i32 0, i32 %158
  %Arg_5.624 = load float, ptr %Arg_5.6, align 4, !invariant.load !297
  %multiply.36 = fmul float %Arg_3.423, %Arg_5.624
  %region_0_98_constant_1725 = load float, ptr @78, align 4
  %subtract.37 = fsub float %region_0_98_constant_1725, %Arg_5.624
  %multiply.38 = fmul float %multiply.36, %subtract.37
  %multiply.41 = fmul float %Arg_4.521, %multiply.38
  store float %multiply.41, ptr %reduction_input_address1, align 4
  %161 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 %139
  call void @region_2_43(ptr %161, ptr %reduction_input_address1, ptr %return_buffer26)
  %162 = load float, ptr %return_buffer26, align 4
  store float %162, ptr %161, align 4
  %163 = mul nuw nsw i32 %134, 1
  %164 = add nuw nsw i32 0, %163
  %165 = udiv i32 %164, 128
  %166 = mul nuw nsw i32 %136, 1
  %167 = add nuw nsw i32 0, %166
  %168 = mul nuw nsw i32 %137, 128
  %169 = add nuw nsw i32 %167, %168
  %170 = udiv i32 %169, 8192
  %Arg_7.8 = getelementptr inbounds float, ptr %arg7, i32 %132
  %Arg_7.827 = load float, ptr %Arg_7.8, align 4, !invariant.load !297
  %Arg_8.9 = getelementptr inbounds [128 x float], ptr %arg8, i32 0, i32 %164
  %Arg_8.928 = load float, ptr %Arg_8.9, align 4, !invariant.load !297
  %add.49 = fadd float %Arg_7.827, %Arg_8.928
  %region_0_98_constant_2729 = load float, ptr @77, align 4
  %171 = fcmp oge float %add.49, %region_0_98_constant_2729
  %172 = fcmp une float %add.49, %add.49
  %173 = or i1 %171, %172
  %maximum.51 = select i1 %173, float %add.49, float %region_0_98_constant_2729
  %174 = add i32 %169, 0
  %Arg_3.430 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg3, i32 0, i32 6, i32 %174, i32 0
  %Arg_3.431 = load float, ptr %Arg_3.430, align 4, !invariant.load !297
  %Arg_6.7 = getelementptr inbounds [8192 x float], ptr %arg6, i32 0, i32 %169
  %Arg_6.732 = load float, ptr %Arg_6.7, align 4, !invariant.load !297
  %multiply.55 = fmul float %Arg_3.431, %Arg_6.732
  %region_0_98_constant_1733 = load float, ptr @78, align 4
  %subtract.56 = fsub float %region_0_98_constant_1733, %Arg_6.732
  %multiply.57 = fmul float %multiply.55, %subtract.56
  %multiply.60 = fmul float %maximum.51, %multiply.57
  store float %multiply.60, ptr %reduction_input_address4, align 4
  %175 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 %139
  call void @region_3_62(ptr %175, ptr %reduction_input_address4, ptr %return_buffer34)
  %176 = load float, ptr %return_buffer34, align 4
  store float %176, ptr %175, align 4
  %177 = mul nuw nsw i32 %134, 1
  %178 = add nuw nsw i32 0, %177
  %179 = udiv i32 %178, 128
  %180 = mul nuw nsw i32 %136, 1
  %181 = add nuw nsw i32 0, %180
  %182 = mul nuw nsw i32 %137, 128
  %183 = add nuw nsw i32 %181, %182
  %184 = udiv i32 %183, 8192
  %Arg_9.10 = getelementptr inbounds float, ptr %arg9, i32 %132
  %Arg_9.1035 = load float, ptr %Arg_9.10, align 4, !invariant.load !297
  %185 = add i32 %183, 0
  %Arg_3.436 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg3, i32 0, i32 44, i32 %185, i32 0
  %Arg_3.437 = load float, ptr %Arg_3.436, align 4, !invariant.load !297
  %Arg_10.11 = getelementptr inbounds [8192 x float], ptr %arg10, i32 0, i32 %183
  %Arg_10.1138 = load float, ptr %Arg_10.11, align 4, !invariant.load !297
  %multiply.70 = fmul float %Arg_3.437, %Arg_10.1138
  %region_0_98_constant_1739 = load float, ptr @78, align 4
  %subtract.71 = fsub float %region_0_98_constant_1739, %Arg_10.1138
  %multiply.72 = fmul float %multiply.70, %subtract.71
  %multiply.75 = fmul float %Arg_9.1035, %multiply.72
  store float %multiply.75, ptr %reduction_input_address7, align 4
  %186 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 %139
  call void @region_4_77(ptr %186, ptr %reduction_input_address7, ptr %return_buffer40)
  %187 = load float, ptr %return_buffer40, align 4
  store float %187, ptr %186, align 4
  %188 = mul nuw nsw i32 %134, 1
  %189 = add nuw nsw i32 0, %188
  %190 = udiv i32 %189, 128
  %191 = mul nuw nsw i32 %136, 1
  %192 = add nuw nsw i32 0, %191
  %193 = mul nuw nsw i32 %137, 128
  %194 = add nuw nsw i32 %192, %193
  %195 = udiv i32 %194, 8192
  %Arg_11.12 = getelementptr inbounds float, ptr %arg11, i32 %132
  %Arg_11.1241 = load float, ptr %Arg_11.12, align 4, !invariant.load !297
  %196 = add i32 %194, 0
  %Arg_3.442 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg3, i32 0, i32 45, i32 %196, i32 0
  %Arg_3.443 = load float, ptr %Arg_3.442, align 4, !invariant.load !297
  %Arg_12.13 = getelementptr inbounds [8192 x float], ptr %arg12, i32 0, i32 %194
  %Arg_12.1344 = load float, ptr %Arg_12.13, align 4, !invariant.load !297
  %multiply.85 = fmul float %Arg_3.443, %Arg_12.1344
  %region_0_98_constant_1745 = load float, ptr @78, align 4
  %subtract.86 = fsub float %region_0_98_constant_1745, %Arg_12.1344
  %multiply.87 = fmul float %multiply.85, %subtract.86
  %multiply.90 = fmul float %Arg_11.1241, %multiply.87
  store float %multiply.90, ptr %reduction_input_address10, align 4
  %197 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 %139
  call void @region_5_92(ptr %197, ptr %reduction_input_address10, ptr %return_buffer46)
  %198 = load float, ptr %return_buffer46, align 4
  store float %198, ptr %197, align 4
  br label %x_in_tile-after

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %199 = mul i32 %thread_id.y, 1
  %200 = add i32 %tile_origin.1, %thread_id.x
  %201 = add i32 %tile_origin.2, %199
  %202 = add i32 %201, 0
  %203 = mul i32 %tile_origin.0, 128
  %204 = add i32 %203, %202
  %205 = udiv i32 %204, 1
  %206 = urem i32 %205, 128
  %207 = udiv i32 %204, 128
  %output_element_address = getelementptr inbounds [64 x [128 x float]], ptr %arg13, i32 0, i32 %207, i32 %206
  %output = load float, ptr %34, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

reduction_write_output-true79:                    ; preds = %reduction_write_output-after
  %208 = mul i32 %thread_id.y, 1
  %209 = add i32 %tile_origin.1, %thread_id.x
  %210 = add i32 %tile_origin.2, %208
  %211 = add i32 %210, 0
  %212 = mul i32 %tile_origin.0, 128
  %213 = add i32 %212, %211
  %214 = udiv i32 %213, 1
  %215 = urem i32 %214, 128
  %216 = udiv i32 %213, 128
  %output_element_address81 = getelementptr inbounds [64 x [128 x float]], ptr %arg14, i32 0, i32 %216, i32 %215
  %output82 = load float, ptr %53, align 4
  store float %output82, ptr %output_element_address81, align 4
  br label %reduction_write_output-after80

reduction_write_output-true101:                   ; preds = %reduction_write_output-after80
  %217 = mul i32 %thread_id.y, 1
  %218 = add i32 %tile_origin.1, %thread_id.x
  %219 = add i32 %tile_origin.2, %217
  %220 = add i32 %219, 0
  %221 = mul i32 %tile_origin.0, 128
  %222 = add i32 %221, %220
  %223 = udiv i32 %222, 1
  %224 = urem i32 %223, 128
  %225 = udiv i32 %222, 128
  %output_element_address103 = getelementptr inbounds [64 x [128 x float]], ptr %arg15, i32 0, i32 %225, i32 %224
  %output104 = load float, ptr %72, align 4
  store float %output104, ptr %output_element_address103, align 4
  br label %reduction_write_output-after102

reduction_write_output-true123:                   ; preds = %reduction_write_output-after102
  %226 = mul i32 %thread_id.y, 1
  %227 = add i32 %tile_origin.1, %thread_id.x
  %228 = add i32 %tile_origin.2, %226
  %229 = add i32 %228, 0
  %230 = mul i32 %tile_origin.0, 128
  %231 = add i32 %230, %229
  %232 = udiv i32 %231, 1
  %233 = urem i32 %232, 128
  %234 = udiv i32 %231, 128
  %output_element_address125 = getelementptr inbounds [64 x [128 x float]], ptr %arg16, i32 0, i32 %234, i32 %233
  %output126 = load float, ptr %91, align 4
  store float %output126, ptr %output_element_address125, align 4
  br label %reduction_write_output-after124

reduction_write_output-true145:                   ; preds = %reduction_write_output-after124
  %235 = mul i32 %thread_id.y, 1
  %236 = add i32 %tile_origin.1, %thread_id.x
  %237 = add i32 %tile_origin.2, %235
  %238 = add i32 %237, 0
  %239 = mul i32 %tile_origin.0, 128
  %240 = add i32 %239, %238
  %241 = udiv i32 %240, 1
  %242 = urem i32 %241, 128
  %243 = udiv i32 %240, 128
  %output_element_address147 = getelementptr inbounds [64 x [128 x float]], ptr %arg17, i32 0, i32 %243, i32 %242
  %output148 = load float, ptr %110, align 4
  store float %output148, ptr %output_element_address147, align 4
  br label %reduction_write_output-after146
}

define internal void @region_1_28(ptr dereferenceable(4) %Arg_0.29.typed, ptr dereferenceable(4) %Arg_1.30.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.31.typed = alloca float, align 4
  %Arg_0.29 = load float, ptr %Arg_0.29.typed, align 4
  %Arg_1.30 = load float, ptr %Arg_1.30.typed, align 4
  %add.31 = fadd float %Arg_0.29, %Arg_1.30
  store float %add.31, ptr %add.31.typed, align 4
  %load_ret_value = load float, ptr %add.31.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_43(ptr dereferenceable(4) %Arg_0.44.typed, ptr dereferenceable(4) %Arg_1.45.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.46.typed = alloca float, align 4
  %Arg_0.44 = load float, ptr %Arg_0.44.typed, align 4
  %Arg_1.45 = load float, ptr %Arg_1.45.typed, align 4
  %add.46 = fadd float %Arg_0.44, %Arg_1.45
  store float %add.46, ptr %add.46.typed, align 4
  %load_ret_value = load float, ptr %add.46.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_3_62(ptr dereferenceable(4) %Arg_0.63.typed, ptr dereferenceable(4) %Arg_1.64.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.65.typed = alloca float, align 4
  %Arg_0.63 = load float, ptr %Arg_0.63.typed, align 4
  %Arg_1.64 = load float, ptr %Arg_1.64.typed, align 4
  %add.65 = fadd float %Arg_0.63, %Arg_1.64
  store float %add.65, ptr %add.65.typed, align 4
  %load_ret_value = load float, ptr %add.65.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_4_77(ptr dereferenceable(4) %Arg_0.78.typed, ptr dereferenceable(4) %Arg_1.79.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.80.typed = alloca float, align 4
  %Arg_0.78 = load float, ptr %Arg_0.78.typed, align 4
  %Arg_1.79 = load float, ptr %Arg_1.79.typed, align 4
  %add.80 = fadd float %Arg_0.78, %Arg_1.79
  store float %add.80, ptr %add.80.typed, align 4
  %load_ret_value = load float, ptr %add.80.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_5_92(ptr dereferenceable(4) %Arg_0.93.typed, ptr dereferenceable(4) %Arg_1.94.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.95.typed = alloca float, align 4
  %Arg_0.93 = load float, ptr %Arg_0.93.typed, align 4
  %Arg_1.94 = load float, ptr %Arg_1.94.typed, align 4
  %add.95 = fadd float %Arg_0.93, %Arg_1.94
  store float %add.95, ptr %add.95.typed, align 4
  %load_ret_value = load float, ptr %add.95.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_689(ptr noalias align 128 dereferenceable(32768) %arg0, ptr noalias align 128 dereferenceable(1966080) %arg1, ptr noalias align 128 dereferenceable(32768) %arg2, ptr noalias align 128 dereferenceable(4063232) %arg3, ptr noalias align 128 dereferenceable(32768) %arg4, ptr noalias align 16 dereferenceable(4) %arg5, ptr noalias align 128 dereferenceable(32768) %arg6, ptr noalias align 128 dereferenceable(32768) %arg7, ptr noalias align 128 dereferenceable(655360) %arg8, ptr noalias align 16 dereferenceable(80) %arg9, ptr noalias align 128 dereferenceable(32768) %arg10, ptr noalias align 128 dereferenceable(32768) %arg11, ptr noalias align 16 dereferenceable(4) %arg12, ptr noalias align 128 dereferenceable(32768) %arg13, ptr noalias align 128 dereferenceable(32768) %arg14, ptr noalias align 128 dereferenceable(4) %arg15, ptr noalias align 128 dereferenceable(32768) %arg16, ptr noalias align 128 dereferenceable(4) %arg17, ptr noalias align 128 dereferenceable(32768) %arg18, ptr noalias align 128 dereferenceable(4) %arg19, ptr noalias align 128 dereferenceable(32768) %arg20, ptr noalias align 128 dereferenceable(4) %arg21, ptr noalias align 128 dereferenceable(4) %arg22, ptr noalias align 128 dereferenceable(32768) %arg23, ptr noalias align 128 dereferenceable(4) %arg24, ptr noalias align 128 dereferenceable(32768) %arg25, ptr noalias align 128 dereferenceable(4) %arg26, ptr noalias align 128 dereferenceable(4) %arg27) {
entry:
  %return_buffer704 = alloca float, align 4
  %result_from_other_lane702 = alloca float, align 4
  %return_buffer701 = alloca float, align 4
  %result_from_other_lane699 = alloca float, align 4
  %return_buffer698 = alloca float, align 4
  %result_from_other_lane696 = alloca float, align 4
  %return_buffer695 = alloca float, align 4
  %result_from_other_lane693 = alloca float, align 4
  %return_buffer692 = alloca float, align 4
  %result_from_other_lane690 = alloca float, align 4
  %initial_value_addr689 = alloca float, align 4
  %return_buffer684 = alloca float, align 4
  %result_from_other_lane682 = alloca float, align 4
  %return_buffer681 = alloca float, align 4
  %result_from_other_lane679 = alloca float, align 4
  %return_buffer678 = alloca float, align 4
  %result_from_other_lane676 = alloca float, align 4
  %return_buffer675 = alloca float, align 4
  %result_from_other_lane673 = alloca float, align 4
  %return_buffer672 = alloca float, align 4
  %result_from_other_lane670 = alloca float, align 4
  %return_buffer665 = alloca float, align 4
  %result_from_other_lane663 = alloca float, align 4
  %return_buffer662 = alloca float, align 4
  %result_from_other_lane660 = alloca float, align 4
  %return_buffer659 = alloca float, align 4
  %result_from_other_lane657 = alloca float, align 4
  %return_buffer656 = alloca float, align 4
  %result_from_other_lane654 = alloca float, align 4
  %return_buffer653 = alloca float, align 4
  %result_from_other_lane651 = alloca float, align 4
  %initial_value_addr650 = alloca float, align 4
  %return_buffer645 = alloca float, align 4
  %result_from_other_lane643 = alloca float, align 4
  %return_buffer642 = alloca float, align 4
  %result_from_other_lane640 = alloca float, align 4
  %return_buffer639 = alloca float, align 4
  %result_from_other_lane637 = alloca float, align 4
  %return_buffer636 = alloca float, align 4
  %result_from_other_lane634 = alloca float, align 4
  %return_buffer633 = alloca float, align 4
  %result_from_other_lane631 = alloca float, align 4
  %return_buffer626 = alloca float, align 4
  %result_from_other_lane624 = alloca float, align 4
  %return_buffer623 = alloca float, align 4
  %result_from_other_lane621 = alloca float, align 4
  %return_buffer620 = alloca float, align 4
  %result_from_other_lane618 = alloca float, align 4
  %return_buffer617 = alloca float, align 4
  %result_from_other_lane615 = alloca float, align 4
  %return_buffer614 = alloca float, align 4
  %result_from_other_lane612 = alloca float, align 4
  %initial_value_addr611 = alloca float, align 4
  %return_buffer606 = alloca float, align 4
  %result_from_other_lane604 = alloca float, align 4
  %return_buffer603 = alloca float, align 4
  %result_from_other_lane601 = alloca float, align 4
  %return_buffer600 = alloca float, align 4
  %result_from_other_lane598 = alloca float, align 4
  %return_buffer597 = alloca float, align 4
  %result_from_other_lane595 = alloca float, align 4
  %return_buffer594 = alloca float, align 4
  %result_from_other_lane592 = alloca float, align 4
  %return_buffer587 = alloca float, align 4
  %result_from_other_lane585 = alloca float, align 4
  %return_buffer584 = alloca float, align 4
  %result_from_other_lane582 = alloca float, align 4
  %return_buffer581 = alloca float, align 4
  %result_from_other_lane579 = alloca float, align 4
  %return_buffer578 = alloca float, align 4
  %result_from_other_lane576 = alloca float, align 4
  %return_buffer575 = alloca float, align 4
  %result_from_other_lane573 = alloca float, align 4
  %initial_value_addr572 = alloca float, align 4
  %return_buffer567 = alloca float, align 4
  %result_from_other_lane565 = alloca float, align 4
  %return_buffer564 = alloca float, align 4
  %result_from_other_lane562 = alloca float, align 4
  %return_buffer561 = alloca float, align 4
  %result_from_other_lane559 = alloca float, align 4
  %return_buffer558 = alloca float, align 4
  %result_from_other_lane556 = alloca float, align 4
  %return_buffer555 = alloca float, align 4
  %result_from_other_lane553 = alloca float, align 4
  %return_buffer548 = alloca float, align 4
  %result_from_other_lane546 = alloca float, align 4
  %return_buffer545 = alloca float, align 4
  %result_from_other_lane543 = alloca float, align 4
  %return_buffer542 = alloca float, align 4
  %result_from_other_lane540 = alloca float, align 4
  %return_buffer539 = alloca float, align 4
  %result_from_other_lane537 = alloca float, align 4
  %return_buffer536 = alloca float, align 4
  %result_from_other_lane534 = alloca float, align 4
  %initial_value_addr533 = alloca float, align 4
  %return_buffer528 = alloca float, align 4
  %result_from_other_lane526 = alloca float, align 4
  %return_buffer525 = alloca float, align 4
  %result_from_other_lane523 = alloca float, align 4
  %return_buffer522 = alloca float, align 4
  %result_from_other_lane520 = alloca float, align 4
  %return_buffer519 = alloca float, align 4
  %result_from_other_lane517 = alloca float, align 4
  %return_buffer516 = alloca float, align 4
  %result_from_other_lane514 = alloca float, align 4
  %return_buffer509 = alloca float, align 4
  %result_from_other_lane507 = alloca float, align 4
  %return_buffer506 = alloca float, align 4
  %result_from_other_lane504 = alloca float, align 4
  %return_buffer503 = alloca float, align 4
  %result_from_other_lane501 = alloca float, align 4
  %return_buffer500 = alloca float, align 4
  %result_from_other_lane498 = alloca float, align 4
  %return_buffer497 = alloca float, align 4
  %result_from_other_lane495 = alloca float, align 4
  %initial_value_addr494 = alloca float, align 4
  %return_buffer489 = alloca float, align 4
  %result_from_other_lane487 = alloca float, align 4
  %return_buffer486 = alloca float, align 4
  %result_from_other_lane484 = alloca float, align 4
  %return_buffer483 = alloca float, align 4
  %result_from_other_lane481 = alloca float, align 4
  %return_buffer480 = alloca float, align 4
  %result_from_other_lane478 = alloca float, align 4
  %return_buffer477 = alloca float, align 4
  %result_from_other_lane475 = alloca float, align 4
  %return_buffer470 = alloca float, align 4
  %result_from_other_lane468 = alloca float, align 4
  %return_buffer467 = alloca float, align 4
  %result_from_other_lane465 = alloca float, align 4
  %return_buffer464 = alloca float, align 4
  %result_from_other_lane462 = alloca float, align 4
  %return_buffer461 = alloca float, align 4
  %result_from_other_lane459 = alloca float, align 4
  %return_buffer458 = alloca float, align 4
  %result_from_other_lane456 = alloca float, align 4
  %initial_value_addr455 = alloca float, align 4
  %return_buffer450 = alloca float, align 4
  %result_from_other_lane448 = alloca float, align 4
  %return_buffer447 = alloca float, align 4
  %result_from_other_lane445 = alloca float, align 4
  %return_buffer444 = alloca float, align 4
  %result_from_other_lane442 = alloca float, align 4
  %return_buffer441 = alloca float, align 4
  %result_from_other_lane439 = alloca float, align 4
  %return_buffer438 = alloca float, align 4
  %result_from_other_lane436 = alloca float, align 4
  %return_buffer434 = alloca float, align 4
  %result_from_other_lane432 = alloca float, align 4
  %return_buffer431 = alloca float, align 4
  %result_from_other_lane429 = alloca float, align 4
  %return_buffer428 = alloca float, align 4
  %result_from_other_lane426 = alloca float, align 4
  %return_buffer425 = alloca float, align 4
  %result_from_other_lane423 = alloca float, align 4
  %return_buffer422 = alloca float, align 4
  %result_from_other_lane420 = alloca float, align 4
  %initial_value_addr = alloca float, align 4
  %return_buffer419 = alloca float, align 4
  %result_from_other_lane417 = alloca float, align 4
  %return_buffer416 = alloca float, align 4
  %result_from_other_lane414 = alloca float, align 4
  %return_buffer413 = alloca float, align 4
  %result_from_other_lane411 = alloca float, align 4
  %return_buffer410 = alloca float, align 4
  %result_from_other_lane408 = alloca float, align 4
  %return_buffer407 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer405 = alloca float, align 4
  %return_buffer397 = alloca float, align 4
  %return_buffer389 = alloca float, align 4
  %return_buffer372 = alloca float, align 4
  %return_buffer361 = alloca float, align 4
  %return_buffer348 = alloca float, align 4
  %return_buffer320 = alloca float, align 4
  %return_buffer309 = alloca float, align 4
  %return_buffer294 = alloca float, align 4
  %return_buffer286 = alloca float, align 4
  %return_buffer278 = alloca float, align 4
  %return_buffer261 = alloca float, align 4
  %return_buffer250 = alloca float, align 4
  %return_buffer237 = alloca float, align 4
  %return_buffer209 = alloca float, align 4
  %return_buffer198 = alloca float, align 4
  %tile_loop.invar_address183 = alloca i32, align 4
  %return_buffer179 = alloca float, align 4
  %return_buffer171 = alloca float, align 4
  %return_buffer163 = alloca float, align 4
  %return_buffer148 = alloca float, align 4
  %return_buffer137 = alloca float, align 4
  %return_buffer124 = alloca float, align 4
  %return_buffer98 = alloca float, align 4
  %return_buffer87 = alloca float, align 4
  %return_buffer74 = alloca float, align 4
  %return_buffer70 = alloca float, align 4
  %return_buffer66 = alloca float, align 4
  %return_buffer58 = alloca float, align 4
  %return_buffer52 = alloca float, align 4
  %return_buffer44 = alloca float, align 4
  %return_buffer33 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result20 = alloca float, align 4
  %reduction_input_address19 = alloca float, align 4
  %partial_reduction_result17 = alloca float, align 4
  %reduction_input_address16 = alloca float, align 4
  %partial_reduction_result14 = alloca float, align 4
  %reduction_input_address13 = alloca float, align 4
  %partial_reduction_result11 = alloca float, align 4
  %reduction_input_address10 = alloca float, align 4
  %partial_reduction_result8 = alloca float, align 4
  %reduction_input_address7 = alloca float, align 4
  %partial_reduction_result5 = alloca float, align 4
  %reduction_input_address4 = alloca float, align 4
  %partial_reduction_result2 = alloca float, align 4
  %reduction_input_address1 = alloca float, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %inter_warp_reduce-after688, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_149_constant_27 = load float, ptr @80, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_149_constant_27, ptr %2, align 4
  %region_0_149_constant_273 = load float, ptr @80, align 4
  %3 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  store float %region_0_149_constant_273, ptr %3, align 4
  %region_0_149_constant_276 = load float, ptr @80, align 4
  %4 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  store float %region_0_149_constant_276, ptr %4, align 4
  %region_0_149_constant_279 = load float, ptr @80, align 4
  %5 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  store float %region_0_149_constant_279, ptr %5, align 4
  %region_0_149_constant_2712 = load float, ptr @80, align 4
  %6 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  store float %region_0_149_constant_2712, ptr %6, align 4
  %region_0_149_constant_2715 = load float, ptr @80, align 4
  %7 = getelementptr inbounds float, ptr %partial_reduction_result14, i32 0
  store float %region_0_149_constant_2715, ptr %7, align 4
  %region_0_149_constant_2718 = load float, ptr @80, align 4
  %8 = getelementptr inbounds float, ptr %partial_reduction_result17, i32 0
  store float %region_0_149_constant_2718, ptr %8, align 4
  %region_0_149_constant_2721 = load float, ptr @80, align 4
  %9 = getelementptr inbounds float, ptr %partial_reduction_result20, i32 0
  store float %region_0_149_constant_2721, ptr %9, align 4
  %10 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !293
  %11 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %12 = urem i32 %10, 512
  %13 = udiv i32 %10, 512
  %14 = mul i32 %11, 1
  %15 = add i32 %14, %13
  %16 = icmp ult i32 %15, 1
  br i1 %16, label %17, label %early_return

17:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %12, 512
  %thread_id.y = udiv i32 %12, 512
  %lane_id = urem i32 %12, 32
  %18 = udiv i32 %15, 1
  %19 = urem i32 %18, 1
  %20 = udiv i32 %15, 1
  %21 = urem i32 %20, 1
  %22 = udiv i32 %15, 1
  %23 = icmp eq i32 %21, 0
  %tile_bound = select i1 %23, i32 1, i32 1
  %24 = icmp eq i32 %19, 0
  %tile_bound22 = select i1 %24, i32 8192, i32 8192
  %tile_origin.0 = mul i32 %22, 1
  %tile_origin.1 = mul i32 %21, 1
  %tile_origin.2 = mul i32 %19, 8192
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %is_full_tile-after, %17
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %25 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %25, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 1
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %26 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %27 = icmp eq i32 8192, %tile_bound22
  br i1 %27, label %is_full_tile-true, label %is_full_tile-false

is_full_tile-after:                               ; preds = %tile_loop.loop_exit180, %tile_loop.loop_exit
  br label %y_in_tile.loop_header, !llvm.loop !465

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %partial_reduction_result406 = load float, ptr %current_output, align 4
  %28 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result406, i32 16, i32 31)
  store float %28, ptr %result_from_other_lane, align 4
  call void @region_1_28__1(ptr %current_output, ptr %result_from_other_lane, ptr %return_buffer407)
  %29 = load float, ptr %return_buffer407, align 4
  store float %29, ptr %current_output, align 4
  %partial_reduction_result409 = load float, ptr %current_output, align 4
  %30 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result409, i32 8, i32 31)
  store float %30, ptr %result_from_other_lane408, align 4
  call void @region_1_28__1(ptr %current_output, ptr %result_from_other_lane408, ptr %return_buffer410)
  %31 = load float, ptr %return_buffer410, align 4
  store float %31, ptr %current_output, align 4
  %partial_reduction_result412 = load float, ptr %current_output, align 4
  %32 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result412, i32 4, i32 31)
  store float %32, ptr %result_from_other_lane411, align 4
  call void @region_1_28__1(ptr %current_output, ptr %result_from_other_lane411, ptr %return_buffer413)
  %33 = load float, ptr %return_buffer413, align 4
  store float %33, ptr %current_output, align 4
  %partial_reduction_result415 = load float, ptr %current_output, align 4
  %34 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result415, i32 2, i32 31)
  store float %34, ptr %result_from_other_lane414, align 4
  call void @region_1_28__1(ptr %current_output, ptr %result_from_other_lane414, ptr %return_buffer416)
  %35 = load float, ptr %return_buffer416, align 4
  store float %35, ptr %current_output, align 4
  %partial_reduction_result418 = load float, ptr %current_output, align 4
  %36 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result418, i32 1, i32 31)
  store float %36, ptr %result_from_other_lane417, align 4
  call void @region_1_28__1(ptr %current_output, ptr %result_from_other_lane417, ptr %return_buffer419)
  %37 = load float, ptr %return_buffer419, align 4
  store float %37, ptr %current_output, align 4
  %38 = udiv i32 %thread_id.x, 32
  %39 = icmp eq i32 %lane_id, 0
  br i1 %39, label %intra_warp_reduce_write-true, label %intra_warp_reduce_write-after

intra_warp_reduce_write-after:                    ; preds = %intra_warp_reduce_write-true, %y_in_tile.loop_exit
  call void @llvm.nvvm.barrier0()
  %40 = icmp eq i32 %38, 0
  br i1 %40, label %inter_warp_reduce-true, label %inter_warp_reduce-after

inter_warp_reduce-after:                          ; preds = %reduction_write_output-after, %intra_warp_reduce_write-after
  %current_output435 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  %partial_reduction_result437 = load float, ptr %current_output435, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result437, i32 16, i32 31)
  store float %41, ptr %result_from_other_lane436, align 4
  call void @region_2_42(ptr %current_output435, ptr %result_from_other_lane436, ptr %return_buffer438)
  %42 = load float, ptr %return_buffer438, align 4
  store float %42, ptr %current_output435, align 4
  %partial_reduction_result440 = load float, ptr %current_output435, align 4
  %43 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result440, i32 8, i32 31)
  store float %43, ptr %result_from_other_lane439, align 4
  call void @region_2_42(ptr %current_output435, ptr %result_from_other_lane439, ptr %return_buffer441)
  %44 = load float, ptr %return_buffer441, align 4
  store float %44, ptr %current_output435, align 4
  %partial_reduction_result443 = load float, ptr %current_output435, align 4
  %45 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result443, i32 4, i32 31)
  store float %45, ptr %result_from_other_lane442, align 4
  call void @region_2_42(ptr %current_output435, ptr %result_from_other_lane442, ptr %return_buffer444)
  %46 = load float, ptr %return_buffer444, align 4
  store float %46, ptr %current_output435, align 4
  %partial_reduction_result446 = load float, ptr %current_output435, align 4
  %47 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result446, i32 2, i32 31)
  store float %47, ptr %result_from_other_lane445, align 4
  call void @region_2_42(ptr %current_output435, ptr %result_from_other_lane445, ptr %return_buffer447)
  %48 = load float, ptr %return_buffer447, align 4
  store float %48, ptr %current_output435, align 4
  %partial_reduction_result449 = load float, ptr %current_output435, align 4
  %49 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result449, i32 1, i32 31)
  store float %49, ptr %result_from_other_lane448, align 4
  call void @region_2_42(ptr %current_output435, ptr %result_from_other_lane448, ptr %return_buffer450)
  %50 = load float, ptr %return_buffer450, align 4
  store float %50, ptr %current_output435, align 4
  %51 = udiv i32 %thread_id.x, 32
  %52 = icmp eq i32 %lane_id, 0
  br i1 %52, label %intra_warp_reduce_write-true451, label %intra_warp_reduce_write-after452

intra_warp_reduce_write-after452:                 ; preds = %intra_warp_reduce_write-true451, %inter_warp_reduce-after
  call void @llvm.nvvm.barrier0()
  %53 = icmp eq i32 %51, 0
  br i1 %53, label %inter_warp_reduce-true453, label %inter_warp_reduce-after454

inter_warp_reduce-after454:                       ; preds = %reduction_write_output-after472, %intra_warp_reduce_write-after452
  %current_output474 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  %partial_reduction_result476 = load float, ptr %current_output474, align 4
  %54 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result476, i32 16, i32 31)
  store float %54, ptr %result_from_other_lane475, align 4
  call void @region_3_70(ptr %current_output474, ptr %result_from_other_lane475, ptr %return_buffer477)
  %55 = load float, ptr %return_buffer477, align 4
  store float %55, ptr %current_output474, align 4
  %partial_reduction_result479 = load float, ptr %current_output474, align 4
  %56 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result479, i32 8, i32 31)
  store float %56, ptr %result_from_other_lane478, align 4
  call void @region_3_70(ptr %current_output474, ptr %result_from_other_lane478, ptr %return_buffer480)
  %57 = load float, ptr %return_buffer480, align 4
  store float %57, ptr %current_output474, align 4
  %partial_reduction_result482 = load float, ptr %current_output474, align 4
  %58 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result482, i32 4, i32 31)
  store float %58, ptr %result_from_other_lane481, align 4
  call void @region_3_70(ptr %current_output474, ptr %result_from_other_lane481, ptr %return_buffer483)
  %59 = load float, ptr %return_buffer483, align 4
  store float %59, ptr %current_output474, align 4
  %partial_reduction_result485 = load float, ptr %current_output474, align 4
  %60 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result485, i32 2, i32 31)
  store float %60, ptr %result_from_other_lane484, align 4
  call void @region_3_70(ptr %current_output474, ptr %result_from_other_lane484, ptr %return_buffer486)
  %61 = load float, ptr %return_buffer486, align 4
  store float %61, ptr %current_output474, align 4
  %partial_reduction_result488 = load float, ptr %current_output474, align 4
  %62 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result488, i32 1, i32 31)
  store float %62, ptr %result_from_other_lane487, align 4
  call void @region_3_70(ptr %current_output474, ptr %result_from_other_lane487, ptr %return_buffer489)
  %63 = load float, ptr %return_buffer489, align 4
  store float %63, ptr %current_output474, align 4
  %64 = udiv i32 %thread_id.x, 32
  %65 = icmp eq i32 %lane_id, 0
  br i1 %65, label %intra_warp_reduce_write-true490, label %intra_warp_reduce_write-after491

intra_warp_reduce_write-after491:                 ; preds = %intra_warp_reduce_write-true490, %inter_warp_reduce-after454
  call void @llvm.nvvm.barrier0()
  %66 = icmp eq i32 %64, 0
  br i1 %66, label %inter_warp_reduce-true492, label %inter_warp_reduce-after493

inter_warp_reduce-after493:                       ; preds = %reduction_write_output-after511, %intra_warp_reduce_write-after491
  %current_output513 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  %partial_reduction_result515 = load float, ptr %current_output513, align 4
  %67 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result515, i32 16, i32 31)
  store float %67, ptr %result_from_other_lane514, align 4
  call void @region_4_83(ptr %current_output513, ptr %result_from_other_lane514, ptr %return_buffer516)
  %68 = load float, ptr %return_buffer516, align 4
  store float %68, ptr %current_output513, align 4
  %partial_reduction_result518 = load float, ptr %current_output513, align 4
  %69 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result518, i32 8, i32 31)
  store float %69, ptr %result_from_other_lane517, align 4
  call void @region_4_83(ptr %current_output513, ptr %result_from_other_lane517, ptr %return_buffer519)
  %70 = load float, ptr %return_buffer519, align 4
  store float %70, ptr %current_output513, align 4
  %partial_reduction_result521 = load float, ptr %current_output513, align 4
  %71 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result521, i32 4, i32 31)
  store float %71, ptr %result_from_other_lane520, align 4
  call void @region_4_83(ptr %current_output513, ptr %result_from_other_lane520, ptr %return_buffer522)
  %72 = load float, ptr %return_buffer522, align 4
  store float %72, ptr %current_output513, align 4
  %partial_reduction_result524 = load float, ptr %current_output513, align 4
  %73 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result524, i32 2, i32 31)
  store float %73, ptr %result_from_other_lane523, align 4
  call void @region_4_83(ptr %current_output513, ptr %result_from_other_lane523, ptr %return_buffer525)
  %74 = load float, ptr %return_buffer525, align 4
  store float %74, ptr %current_output513, align 4
  %partial_reduction_result527 = load float, ptr %current_output513, align 4
  %75 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result527, i32 1, i32 31)
  store float %75, ptr %result_from_other_lane526, align 4
  call void @region_4_83(ptr %current_output513, ptr %result_from_other_lane526, ptr %return_buffer528)
  %76 = load float, ptr %return_buffer528, align 4
  store float %76, ptr %current_output513, align 4
  %77 = udiv i32 %thread_id.x, 32
  %78 = icmp eq i32 %lane_id, 0
  br i1 %78, label %intra_warp_reduce_write-true529, label %intra_warp_reduce_write-after530

intra_warp_reduce_write-after530:                 ; preds = %intra_warp_reduce_write-true529, %inter_warp_reduce-after493
  call void @llvm.nvvm.barrier0()
  %79 = icmp eq i32 %77, 0
  br i1 %79, label %inter_warp_reduce-true531, label %inter_warp_reduce-after532

inter_warp_reduce-after532:                       ; preds = %reduction_write_output-after550, %intra_warp_reduce_write-after530
  %current_output552 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  %partial_reduction_result554 = load float, ptr %current_output552, align 4
  %80 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result554, i32 16, i32 31)
  store float %80, ptr %result_from_other_lane553, align 4
  call void @region_5_97(ptr %current_output552, ptr %result_from_other_lane553, ptr %return_buffer555)
  %81 = load float, ptr %return_buffer555, align 4
  store float %81, ptr %current_output552, align 4
  %partial_reduction_result557 = load float, ptr %current_output552, align 4
  %82 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result557, i32 8, i32 31)
  store float %82, ptr %result_from_other_lane556, align 4
  call void @region_5_97(ptr %current_output552, ptr %result_from_other_lane556, ptr %return_buffer558)
  %83 = load float, ptr %return_buffer558, align 4
  store float %83, ptr %current_output552, align 4
  %partial_reduction_result560 = load float, ptr %current_output552, align 4
  %84 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result560, i32 4, i32 31)
  store float %84, ptr %result_from_other_lane559, align 4
  call void @region_5_97(ptr %current_output552, ptr %result_from_other_lane559, ptr %return_buffer561)
  %85 = load float, ptr %return_buffer561, align 4
  store float %85, ptr %current_output552, align 4
  %partial_reduction_result563 = load float, ptr %current_output552, align 4
  %86 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result563, i32 2, i32 31)
  store float %86, ptr %result_from_other_lane562, align 4
  call void @region_5_97(ptr %current_output552, ptr %result_from_other_lane562, ptr %return_buffer564)
  %87 = load float, ptr %return_buffer564, align 4
  store float %87, ptr %current_output552, align 4
  %partial_reduction_result566 = load float, ptr %current_output552, align 4
  %88 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result566, i32 1, i32 31)
  store float %88, ptr %result_from_other_lane565, align 4
  call void @region_5_97(ptr %current_output552, ptr %result_from_other_lane565, ptr %return_buffer567)
  %89 = load float, ptr %return_buffer567, align 4
  store float %89, ptr %current_output552, align 4
  %90 = udiv i32 %thread_id.x, 32
  %91 = icmp eq i32 %lane_id, 0
  br i1 %91, label %intra_warp_reduce_write-true568, label %intra_warp_reduce_write-after569

intra_warp_reduce_write-after569:                 ; preds = %intra_warp_reduce_write-true568, %inter_warp_reduce-after532
  call void @llvm.nvvm.barrier0()
  %92 = icmp eq i32 %90, 0
  br i1 %92, label %inter_warp_reduce-true570, label %inter_warp_reduce-after571

inter_warp_reduce-after571:                       ; preds = %reduction_write_output-after589, %intra_warp_reduce_write-after569
  %current_output591 = getelementptr inbounds float, ptr %partial_reduction_result14, i32 0
  %partial_reduction_result593 = load float, ptr %current_output591, align 4
  %93 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result593, i32 16, i32 31)
  store float %93, ptr %result_from_other_lane592, align 4
  call void @region_6_119(ptr %current_output591, ptr %result_from_other_lane592, ptr %return_buffer594)
  %94 = load float, ptr %return_buffer594, align 4
  store float %94, ptr %current_output591, align 4
  %partial_reduction_result596 = load float, ptr %current_output591, align 4
  %95 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result596, i32 8, i32 31)
  store float %95, ptr %result_from_other_lane595, align 4
  call void @region_6_119(ptr %current_output591, ptr %result_from_other_lane595, ptr %return_buffer597)
  %96 = load float, ptr %return_buffer597, align 4
  store float %96, ptr %current_output591, align 4
  %partial_reduction_result599 = load float, ptr %current_output591, align 4
  %97 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result599, i32 4, i32 31)
  store float %97, ptr %result_from_other_lane598, align 4
  call void @region_6_119(ptr %current_output591, ptr %result_from_other_lane598, ptr %return_buffer600)
  %98 = load float, ptr %return_buffer600, align 4
  store float %98, ptr %current_output591, align 4
  %partial_reduction_result602 = load float, ptr %current_output591, align 4
  %99 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result602, i32 2, i32 31)
  store float %99, ptr %result_from_other_lane601, align 4
  call void @region_6_119(ptr %current_output591, ptr %result_from_other_lane601, ptr %return_buffer603)
  %100 = load float, ptr %return_buffer603, align 4
  store float %100, ptr %current_output591, align 4
  %partial_reduction_result605 = load float, ptr %current_output591, align 4
  %101 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result605, i32 1, i32 31)
  store float %101, ptr %result_from_other_lane604, align 4
  call void @region_6_119(ptr %current_output591, ptr %result_from_other_lane604, ptr %return_buffer606)
  %102 = load float, ptr %return_buffer606, align 4
  store float %102, ptr %current_output591, align 4
  %103 = udiv i32 %thread_id.x, 32
  %104 = icmp eq i32 %lane_id, 0
  br i1 %104, label %intra_warp_reduce_write-true607, label %intra_warp_reduce_write-after608

intra_warp_reduce_write-after608:                 ; preds = %intra_warp_reduce_write-true607, %inter_warp_reduce-after571
  call void @llvm.nvvm.barrier0()
  %105 = icmp eq i32 %103, 0
  br i1 %105, label %inter_warp_reduce-true609, label %inter_warp_reduce-after610

inter_warp_reduce-after610:                       ; preds = %reduction_write_output-after628, %intra_warp_reduce_write-after608
  %current_output630 = getelementptr inbounds float, ptr %partial_reduction_result17, i32 0
  %partial_reduction_result632 = load float, ptr %current_output630, align 4
  %106 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result632, i32 16, i32 31)
  store float %106, ptr %result_from_other_lane631, align 4
  call void @region_7_131(ptr %current_output630, ptr %result_from_other_lane631, ptr %return_buffer633)
  %107 = load float, ptr %return_buffer633, align 4
  store float %107, ptr %current_output630, align 4
  %partial_reduction_result635 = load float, ptr %current_output630, align 4
  %108 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result635, i32 8, i32 31)
  store float %108, ptr %result_from_other_lane634, align 4
  call void @region_7_131(ptr %current_output630, ptr %result_from_other_lane634, ptr %return_buffer636)
  %109 = load float, ptr %return_buffer636, align 4
  store float %109, ptr %current_output630, align 4
  %partial_reduction_result638 = load float, ptr %current_output630, align 4
  %110 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result638, i32 4, i32 31)
  store float %110, ptr %result_from_other_lane637, align 4
  call void @region_7_131(ptr %current_output630, ptr %result_from_other_lane637, ptr %return_buffer639)
  %111 = load float, ptr %return_buffer639, align 4
  store float %111, ptr %current_output630, align 4
  %partial_reduction_result641 = load float, ptr %current_output630, align 4
  %112 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result641, i32 2, i32 31)
  store float %112, ptr %result_from_other_lane640, align 4
  call void @region_7_131(ptr %current_output630, ptr %result_from_other_lane640, ptr %return_buffer642)
  %113 = load float, ptr %return_buffer642, align 4
  store float %113, ptr %current_output630, align 4
  %partial_reduction_result644 = load float, ptr %current_output630, align 4
  %114 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result644, i32 1, i32 31)
  store float %114, ptr %result_from_other_lane643, align 4
  call void @region_7_131(ptr %current_output630, ptr %result_from_other_lane643, ptr %return_buffer645)
  %115 = load float, ptr %return_buffer645, align 4
  store float %115, ptr %current_output630, align 4
  %116 = udiv i32 %thread_id.x, 32
  %117 = icmp eq i32 %lane_id, 0
  br i1 %117, label %intra_warp_reduce_write-true646, label %intra_warp_reduce_write-after647

intra_warp_reduce_write-after647:                 ; preds = %intra_warp_reduce_write-true646, %inter_warp_reduce-after610
  call void @llvm.nvvm.barrier0()
  %118 = icmp eq i32 %116, 0
  br i1 %118, label %inter_warp_reduce-true648, label %inter_warp_reduce-after649

inter_warp_reduce-after649:                       ; preds = %reduction_write_output-after667, %intra_warp_reduce_write-after647
  %current_output669 = getelementptr inbounds float, ptr %partial_reduction_result20, i32 0
  %partial_reduction_result671 = load float, ptr %current_output669, align 4
  %119 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result671, i32 16, i32 31)
  store float %119, ptr %result_from_other_lane670, align 4
  call void @region_8_143(ptr %current_output669, ptr %result_from_other_lane670, ptr %return_buffer672)
  %120 = load float, ptr %return_buffer672, align 4
  store float %120, ptr %current_output669, align 4
  %partial_reduction_result674 = load float, ptr %current_output669, align 4
  %121 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result674, i32 8, i32 31)
  store float %121, ptr %result_from_other_lane673, align 4
  call void @region_8_143(ptr %current_output669, ptr %result_from_other_lane673, ptr %return_buffer675)
  %122 = load float, ptr %return_buffer675, align 4
  store float %122, ptr %current_output669, align 4
  %partial_reduction_result677 = load float, ptr %current_output669, align 4
  %123 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result677, i32 4, i32 31)
  store float %123, ptr %result_from_other_lane676, align 4
  call void @region_8_143(ptr %current_output669, ptr %result_from_other_lane676, ptr %return_buffer678)
  %124 = load float, ptr %return_buffer678, align 4
  store float %124, ptr %current_output669, align 4
  %partial_reduction_result680 = load float, ptr %current_output669, align 4
  %125 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result680, i32 2, i32 31)
  store float %125, ptr %result_from_other_lane679, align 4
  call void @region_8_143(ptr %current_output669, ptr %result_from_other_lane679, ptr %return_buffer681)
  %126 = load float, ptr %return_buffer681, align 4
  store float %126, ptr %current_output669, align 4
  %partial_reduction_result683 = load float, ptr %current_output669, align 4
  %127 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result683, i32 1, i32 31)
  store float %127, ptr %result_from_other_lane682, align 4
  call void @region_8_143(ptr %current_output669, ptr %result_from_other_lane682, ptr %return_buffer684)
  %128 = load float, ptr %return_buffer684, align 4
  store float %128, ptr %current_output669, align 4
  %129 = udiv i32 %thread_id.x, 32
  %130 = icmp eq i32 %lane_id, 0
  br i1 %130, label %intra_warp_reduce_write-true685, label %intra_warp_reduce_write-after686

intra_warp_reduce_write-after686:                 ; preds = %intra_warp_reduce_write-true685, %inter_warp_reduce-after649
  call void @llvm.nvvm.barrier0()
  %131 = icmp eq i32 %129, 0
  br i1 %131, label %inter_warp_reduce-true687, label %inter_warp_reduce-after688

inter_warp_reduce-after688:                       ; preds = %reduction_write_output-after706, %intra_warp_reduce_write-after686
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

is_full_tile-true:                                ; preds = %y_in_tile.loop_body
  %132 = mul i32 %thread_id.x, 2
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %tile_loop.loop_body, %is_full_tile-true
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %133 = icmp uge i32 %tile_loop.indvar, 8
  br i1 %133, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc23 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc23, ptr %tile_loop.invar_address, align 4
  %134 = icmp eq i32 %tile_loop.indvar, 0
  %135 = mul i32 %tile_loop.indvar, 1024
  %136 = add i32 %135, 0
  %x_loc = add i32 %136, %132
  %137 = add i32 %tile_origin.1, %y_in_tile.indvar
  %138 = add i32 %tile_origin.2, %x_loc
  %139 = mul nuw nsw i32 %138, 1
  %140 = add nuw nsw i32 0, %139
  %141 = mul nuw nsw i32 %137, 8192
  %142 = add nuw nsw i32 %140, %141
  %143 = mul nuw nsw i32 %tile_origin.0, 8192
  %144 = add nuw nsw i32 %142, %143
  %145 = udiv i32 %144, 1
  %146 = add i32 %145, 0
  %Arg_1.2 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 46, i32 %146, i32 0
  %Arg_1.224 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %147 = add i32 %145, 0
  %Arg_1.225 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 47, i32 %147, i32 0
  %Arg_1.226 = load float, ptr %Arg_1.225, align 4, !invariant.load !297
  %add.18 = fadd float %Arg_1.224, %Arg_1.226
  %Arg_0.1 = getelementptr inbounds float, ptr %arg0, i32 %144
  %Arg_0.127 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %multiply.21 = fmul float %add.18, %Arg_0.127
  %region_0_149_constant_22 = load float, ptr @79, align 4
  %subtract.24 = fsub float %region_0_149_constant_22, %Arg_0.127
  %multiply.25 = fmul float %multiply.21, %subtract.24
  store float %multiply.25, ptr %reduction_input_address, align 4
  %148 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_28__1(ptr %148, ptr %reduction_input_address, ptr %return_buffer)
  %149 = load float, ptr %return_buffer, align 4
  store float %149, ptr %148, align 4
  %150 = add i32 %145, 0
  %Arg_1.228 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 50, i32 %150, i32 0
  %Arg_1.229 = load float, ptr %Arg_1.228, align 4, !invariant.load !297
  %151 = add i32 %145, 0
  %Arg_1.230 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 51, i32 %151, i32 0
  %Arg_1.231 = load float, ptr %Arg_1.230, align 4, !invariant.load !297
  %add.35 = fadd float %Arg_1.229, %Arg_1.231
  %Arg_2.3 = getelementptr inbounds float, ptr %arg2, i32 %144
  %Arg_2.332 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %multiply.38 = fmul float %add.35, %Arg_2.332
  %subtract.39 = fsub float %region_0_149_constant_22, %Arg_2.332
  %multiply.40 = fmul float %multiply.38, %subtract.39
  store float %multiply.40, ptr %reduction_input_address1, align 4
  %152 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_42(ptr %152, ptr %reduction_input_address1, ptr %return_buffer33)
  %153 = load float, ptr %return_buffer33, align 4
  store float %153, ptr %152, align 4
  %154 = add i32 %145, 0
  %Arg_1.234 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 58, i32 %154, i32 0
  %Arg_1.235 = load float, ptr %Arg_1.234, align 4, !invariant.load !297
  %155 = add i32 %145, 0
  %Arg_1.236 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 59, i32 %155, i32 0
  %Arg_1.237 = load float, ptr %Arg_1.236, align 4, !invariant.load !297
  %add.49 = fadd float %Arg_1.235, %Arg_1.237
  %156 = add i32 %145, 0
  %Arg_8.9 = getelementptr inbounds [8192 x [20 x float]], ptr %arg8, i32 0, i32 %156, i32 18
  %Arg_8.938 = load float, ptr %Arg_8.9, align 4, !invariant.load !297
  %Arg_9.10 = getelementptr inbounds [20 x float], ptr %arg9, i32 0, i32 18
  %Arg_9.1039 = load float, ptr %Arg_9.10, align 4, !invariant.load !297
  %add.52 = fadd float %Arg_8.938, %Arg_9.1039
  %Arg_6.7 = getelementptr inbounds float, ptr %arg6, i32 %144
  %Arg_6.740 = load float, ptr %Arg_6.7, align 4, !invariant.load !297
  %Arg_7.8 = getelementptr inbounds float, ptr %arg7, i32 %144
  %Arg_7.841 = load float, ptr %Arg_7.8, align 4, !invariant.load !297
  %add.54 = fadd float %Arg_6.740, %Arg_7.841
  %Arg_5.6 = getelementptr inbounds [1 x float], ptr %arg5, i32 0, i32 0
  %Arg_5.642 = load float, ptr %Arg_5.6, align 4, !invariant.load !297
  %add.57 = fadd float %add.54, %Arg_5.642
  %add.59 = fadd float %add.52, %add.57
  %157 = fneg float %add.59
  %158 = call float @__nv_expf(float %157)
  %add.62 = fadd float %region_0_149_constant_22, %158
  %divide.63 = fdiv float %region_0_149_constant_22, %add.62
  %multiply.64 = fmul float %add.49, %divide.63
  %subtract.65 = fsub float %region_0_149_constant_22, %divide.63
  %multiply.66 = fmul float %multiply.64, %subtract.65
  %159 = add i32 %145, 0
  %Arg_3.4 = getelementptr inbounds [8192 x [124 x float]], ptr %arg3, i32 0, i32 %159, i32 18
  %Arg_3.443 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  %add.68 = fadd float %multiply.66, %Arg_3.443
  store float %add.68, ptr %reduction_input_address4, align 4
  %160 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  call void @region_3_70(ptr %160, ptr %reduction_input_address4, ptr %return_buffer44)
  %161 = load float, ptr %return_buffer44, align 4
  store float %161, ptr %160, align 4
  %162 = add i32 %145, 0
  %Arg_1.245 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 4, i32 %162, i32 0
  %Arg_1.246 = load float, ptr %Arg_1.245, align 4, !invariant.load !297
  %Arg_4.5 = getelementptr inbounds float, ptr %arg4, i32 %144
  %Arg_4.547 = load float, ptr %Arg_4.5, align 4, !invariant.load !297
  %multiply.77 = fmul float %Arg_1.246, %Arg_4.547
  %Arg_4.548 = getelementptr inbounds float, ptr %arg4, i32 %144
  %Arg_4.549 = load float, ptr %Arg_4.548, align 4, !invariant.load !297
  %subtract.78 = fsub float %region_0_149_constant_22, %Arg_4.549
  %multiply.79 = fmul float %multiply.77, %subtract.78
  %163 = add i32 %145, 0
  %Arg_3.450 = getelementptr inbounds [8192 x [124 x float]], ptr %arg3, i32 0, i32 %163, i32 2
  %Arg_3.451 = load float, ptr %Arg_3.450, align 4, !invariant.load !297
  %add.81 = fadd float %multiply.79, %Arg_3.451
  store float %add.81, ptr %reduction_input_address7, align 4
  %164 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  call void @region_4_83(ptr %164, ptr %reduction_input_address7, ptr %return_buffer52)
  %165 = load float, ptr %return_buffer52, align 4
  store float %165, ptr %164, align 4
  %166 = add i32 %145, 0
  %Arg_1.253 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 48, i32 %166, i32 0
  %Arg_1.254 = load float, ptr %Arg_1.253, align 4, !invariant.load !297
  %167 = add i32 %145, 0
  %Arg_1.255 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 49, i32 %167, i32 0
  %Arg_1.256 = load float, ptr %Arg_1.255, align 4, !invariant.load !297
  %add.90 = fadd float %Arg_1.254, %Arg_1.256
  %Arg_10.11 = getelementptr inbounds float, ptr %arg10, i32 %144
  %Arg_10.1157 = load float, ptr %Arg_10.11, align 4, !invariant.load !297
  %multiply.93 = fmul float %add.90, %Arg_10.1157
  %subtract.94 = fsub float %region_0_149_constant_22, %Arg_10.1157
  %multiply.95 = fmul float %multiply.93, %subtract.94
  store float %multiply.95, ptr %reduction_input_address10, align 4
  %168 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  call void @region_5_97(ptr %168, ptr %reduction_input_address10, ptr %return_buffer58)
  %169 = load float, ptr %return_buffer58, align 4
  store float %169, ptr %168, align 4
  %170 = add i32 %145, 0
  %Arg_1.259 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 52, i32 %170, i32 0
  %Arg_1.260 = load float, ptr %Arg_1.259, align 4, !invariant.load !297
  %171 = add i32 %145, 0
  %Arg_1.261 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 53, i32 %171, i32 0
  %Arg_1.262 = load float, ptr %Arg_1.261, align 4, !invariant.load !297
  %add.104 = fadd float %Arg_1.260, %Arg_1.262
  %region_0_149_constant_2263 = load float, ptr @79, align 4
  %Arg_11.12 = getelementptr inbounds float, ptr %arg11, i32 %144
  %Arg_11.1264 = load float, ptr %Arg_11.12, align 4, !invariant.load !297
  %Arg_12.13 = getelementptr inbounds [1 x float], ptr %arg12, i32 0, i32 0
  %Arg_12.1365 = load float, ptr %Arg_12.13, align 4, !invariant.load !297
  %add.109 = fadd float %Arg_11.1264, %Arg_12.1365
  %172 = fneg float %add.109
  %173 = call float @__nv_expf(float %172)
  %add.112 = fadd float %region_0_149_constant_2263, %173
  %divide.113 = fdiv float %region_0_149_constant_2263, %add.112
  %multiply.115 = fmul float %add.104, %divide.113
  %subtract.116 = fsub float %region_0_149_constant_22, %divide.113
  %multiply.117 = fmul float %multiply.115, %subtract.116
  store float %multiply.117, ptr %reduction_input_address13, align 4
  %174 = getelementptr inbounds float, ptr %partial_reduction_result14, i32 0
  call void @region_6_119(ptr %174, ptr %reduction_input_address13, ptr %return_buffer66)
  %175 = load float, ptr %return_buffer66, align 4
  store float %175, ptr %174, align 4
  %176 = add i32 %145, 0
  %Arg_1.267 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 45, i32 %176, i32 0
  %Arg_1.268 = load float, ptr %Arg_1.267, align 4, !invariant.load !297
  %Arg_13.14 = getelementptr inbounds float, ptr %arg13, i32 %144
  %Arg_13.1469 = load float, ptr %Arg_13.14, align 4, !invariant.load !297
  %multiply.127 = fmul float %Arg_1.268, %Arg_13.1469
  %subtract.128 = fsub float %region_0_149_constant_22, %Arg_13.1469
  %multiply.129 = fmul float %multiply.127, %subtract.128
  store float %multiply.129, ptr %reduction_input_address16, align 4
  %177 = getelementptr inbounds float, ptr %partial_reduction_result17, i32 0
  call void @region_7_131(ptr %177, ptr %reduction_input_address16, ptr %return_buffer70)
  %178 = load float, ptr %return_buffer70, align 4
  store float %178, ptr %177, align 4
  %179 = add i32 %145, 0
  %Arg_1.271 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 44, i32 %179, i32 0
  %Arg_1.272 = load float, ptr %Arg_1.271, align 4, !invariant.load !297
  %Arg_14.15 = getelementptr inbounds float, ptr %arg14, i32 %144
  %Arg_14.1573 = load float, ptr %Arg_14.15, align 4, !invariant.load !297
  %multiply.139 = fmul float %Arg_1.272, %Arg_14.1573
  %subtract.140 = fsub float %region_0_149_constant_22, %Arg_14.1573
  %multiply.141 = fmul float %multiply.139, %subtract.140
  store float %multiply.141, ptr %reduction_input_address19, align 4
  %180 = getelementptr inbounds float, ptr %partial_reduction_result20, i32 0
  call void @region_8_143(ptr %180, ptr %reduction_input_address19, ptr %return_buffer74)
  %181 = load float, ptr %return_buffer74, align 4
  store float %181, ptr %180, align 4
  %182 = getelementptr inbounds float, ptr %arg23, i32 %144
  store float %multiply.95, ptr %182, align 4
  %183 = getelementptr inbounds float, ptr %arg16, i32 %144
  store float %multiply.25, ptr %183, align 4
  %184 = getelementptr inbounds float, ptr %arg20, i32 %144
  store float %add.68, ptr %184, align 4
  %185 = getelementptr inbounds float, ptr %arg18, i32 %144
  store float %multiply.40, ptr %185, align 4
  %186 = getelementptr inbounds float, ptr %arg25, i32 %144
  store float %multiply.117, ptr %186, align 4
  %187 = mul i32 %tile_loop.indvar, 1024
  %188 = add i32 %187, 1
  %x_loc75 = add i32 %188, %132
  %189 = add i32 %tile_origin.1, %y_in_tile.indvar
  %190 = add i32 %tile_origin.2, %x_loc75
  %191 = mul nuw nsw i32 %190, 1
  %192 = add nuw nsw i32 0, %191
  %193 = mul nuw nsw i32 %189, 8192
  %194 = add nuw nsw i32 %192, %193
  %195 = mul nuw nsw i32 %tile_origin.0, 8192
  %196 = add nuw nsw i32 %194, %195
  %197 = udiv i32 %196, 1
  %198 = add i32 %197, 0
  %Arg_1.276 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 46, i32 %198, i32 0
  %Arg_1.277 = load float, ptr %Arg_1.276, align 4, !invariant.load !297
  %199 = add i32 %197, 0
  %Arg_1.278 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 47, i32 %199, i32 0
  %Arg_1.279 = load float, ptr %Arg_1.278, align 4, !invariant.load !297
  %add.1880 = fadd float %Arg_1.277, %Arg_1.279
  %Arg_0.181 = getelementptr inbounds float, ptr %arg0, i32 %196
  %Arg_0.182 = load float, ptr %Arg_0.181, align 4, !invariant.load !297
  %multiply.2183 = fmul float %add.1880, %Arg_0.182
  %region_0_149_constant_2284 = load float, ptr @79, align 4
  %subtract.2485 = fsub float %region_0_149_constant_2284, %Arg_0.182
  %multiply.2586 = fmul float %multiply.2183, %subtract.2485
  store float %multiply.2586, ptr %reduction_input_address, align 4
  %200 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_28__1(ptr %200, ptr %reduction_input_address, ptr %return_buffer87)
  %201 = load float, ptr %return_buffer87, align 4
  store float %201, ptr %200, align 4
  %202 = add i32 %197, 0
  %Arg_1.288 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 50, i32 %202, i32 0
  %Arg_1.289 = load float, ptr %Arg_1.288, align 4, !invariant.load !297
  %203 = add i32 %197, 0
  %Arg_1.290 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 51, i32 %203, i32 0
  %Arg_1.291 = load float, ptr %Arg_1.290, align 4, !invariant.load !297
  %add.3592 = fadd float %Arg_1.289, %Arg_1.291
  %Arg_2.393 = getelementptr inbounds float, ptr %arg2, i32 %196
  %Arg_2.394 = load float, ptr %Arg_2.393, align 4, !invariant.load !297
  %multiply.3895 = fmul float %add.3592, %Arg_2.394
  %subtract.3996 = fsub float %region_0_149_constant_2284, %Arg_2.394
  %multiply.4097 = fmul float %multiply.3895, %subtract.3996
  store float %multiply.4097, ptr %reduction_input_address1, align 4
  %204 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_42(ptr %204, ptr %reduction_input_address1, ptr %return_buffer98)
  %205 = load float, ptr %return_buffer98, align 4
  store float %205, ptr %204, align 4
  %206 = add i32 %197, 0
  %Arg_1.299 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 58, i32 %206, i32 0
  %Arg_1.2100 = load float, ptr %Arg_1.299, align 4, !invariant.load !297
  %207 = add i32 %197, 0
  %Arg_1.2101 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 59, i32 %207, i32 0
  %Arg_1.2102 = load float, ptr %Arg_1.2101, align 4, !invariant.load !297
  %add.49103 = fadd float %Arg_1.2100, %Arg_1.2102
  %208 = add i32 %197, 0
  %Arg_8.9104 = getelementptr inbounds [8192 x [20 x float]], ptr %arg8, i32 0, i32 %208, i32 18
  %Arg_8.9105 = load float, ptr %Arg_8.9104, align 4, !invariant.load !297
  %Arg_9.10106 = getelementptr inbounds [20 x float], ptr %arg9, i32 0, i32 18
  %Arg_9.10107 = load float, ptr %Arg_9.10106, align 4, !invariant.load !297
  %add.52108 = fadd float %Arg_8.9105, %Arg_9.10107
  %Arg_6.7109 = getelementptr inbounds float, ptr %arg6, i32 %196
  %Arg_6.7110 = load float, ptr %Arg_6.7109, align 4, !invariant.load !297
  %Arg_7.8111 = getelementptr inbounds float, ptr %arg7, i32 %196
  %Arg_7.8112 = load float, ptr %Arg_7.8111, align 4, !invariant.load !297
  %add.54113 = fadd float %Arg_6.7110, %Arg_7.8112
  %add.57114 = fadd float %add.54113, %Arg_5.642
  %add.59115 = fadd float %add.52108, %add.57114
  %209 = fneg float %add.59115
  %210 = call float @__nv_expf(float %209)
  %add.62116 = fadd float %region_0_149_constant_2284, %210
  %divide.63117 = fdiv float %region_0_149_constant_2284, %add.62116
  %multiply.64118 = fmul float %add.49103, %divide.63117
  %subtract.65119 = fsub float %region_0_149_constant_2284, %divide.63117
  %multiply.66120 = fmul float %multiply.64118, %subtract.65119
  %211 = add i32 %197, 0
  %Arg_3.4121 = getelementptr inbounds [8192 x [124 x float]], ptr %arg3, i32 0, i32 %211, i32 18
  %Arg_3.4122 = load float, ptr %Arg_3.4121, align 4, !invariant.load !297
  %add.68123 = fadd float %multiply.66120, %Arg_3.4122
  store float %add.68123, ptr %reduction_input_address4, align 4
  %212 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  call void @region_3_70(ptr %212, ptr %reduction_input_address4, ptr %return_buffer124)
  %213 = load float, ptr %return_buffer124, align 4
  store float %213, ptr %212, align 4
  %214 = add i32 %197, 0
  %Arg_1.2125 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 4, i32 %214, i32 0
  %Arg_1.2126 = load float, ptr %Arg_1.2125, align 4, !invariant.load !297
  %Arg_4.5127 = getelementptr inbounds float, ptr %arg4, i32 %196
  %Arg_4.5128 = load float, ptr %Arg_4.5127, align 4, !invariant.load !297
  %multiply.77129 = fmul float %Arg_1.2126, %Arg_4.5128
  %Arg_4.5130 = getelementptr inbounds float, ptr %arg4, i32 %196
  %Arg_4.5131 = load float, ptr %Arg_4.5130, align 4, !invariant.load !297
  %subtract.78132 = fsub float %region_0_149_constant_2284, %Arg_4.5131
  %multiply.79133 = fmul float %multiply.77129, %subtract.78132
  %215 = add i32 %197, 0
  %Arg_3.4134 = getelementptr inbounds [8192 x [124 x float]], ptr %arg3, i32 0, i32 %215, i32 2
  %Arg_3.4135 = load float, ptr %Arg_3.4134, align 4, !invariant.load !297
  %add.81136 = fadd float %multiply.79133, %Arg_3.4135
  store float %add.81136, ptr %reduction_input_address7, align 4
  %216 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  call void @region_4_83(ptr %216, ptr %reduction_input_address7, ptr %return_buffer137)
  %217 = load float, ptr %return_buffer137, align 4
  store float %217, ptr %216, align 4
  %218 = add i32 %197, 0
  %Arg_1.2138 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 48, i32 %218, i32 0
  %Arg_1.2139 = load float, ptr %Arg_1.2138, align 4, !invariant.load !297
  %219 = add i32 %197, 0
  %Arg_1.2140 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 49, i32 %219, i32 0
  %Arg_1.2141 = load float, ptr %Arg_1.2140, align 4, !invariant.load !297
  %add.90142 = fadd float %Arg_1.2139, %Arg_1.2141
  %Arg_10.11143 = getelementptr inbounds float, ptr %arg10, i32 %196
  %Arg_10.11144 = load float, ptr %Arg_10.11143, align 4, !invariant.load !297
  %multiply.93145 = fmul float %add.90142, %Arg_10.11144
  %subtract.94146 = fsub float %region_0_149_constant_2284, %Arg_10.11144
  %multiply.95147 = fmul float %multiply.93145, %subtract.94146
  store float %multiply.95147, ptr %reduction_input_address10, align 4
  %220 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  call void @region_5_97(ptr %220, ptr %reduction_input_address10, ptr %return_buffer148)
  %221 = load float, ptr %return_buffer148, align 4
  store float %221, ptr %220, align 4
  %222 = add i32 %197, 0
  %Arg_1.2149 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 52, i32 %222, i32 0
  %Arg_1.2150 = load float, ptr %Arg_1.2149, align 4, !invariant.load !297
  %223 = add i32 %197, 0
  %Arg_1.2151 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 53, i32 %223, i32 0
  %Arg_1.2152 = load float, ptr %Arg_1.2151, align 4, !invariant.load !297
  %add.104153 = fadd float %Arg_1.2150, %Arg_1.2152
  %region_0_149_constant_22154 = load float, ptr @79, align 4
  %Arg_11.12155 = getelementptr inbounds float, ptr %arg11, i32 %196
  %Arg_11.12156 = load float, ptr %Arg_11.12155, align 4, !invariant.load !297
  %add.109157 = fadd float %Arg_11.12156, %Arg_12.1365
  %224 = fneg float %add.109157
  %225 = call float @__nv_expf(float %224)
  %add.112158 = fadd float %region_0_149_constant_22154, %225
  %divide.113159 = fdiv float %region_0_149_constant_22154, %add.112158
  %multiply.115160 = fmul float %add.104153, %divide.113159
  %subtract.116161 = fsub float %region_0_149_constant_2284, %divide.113159
  %multiply.117162 = fmul float %multiply.115160, %subtract.116161
  store float %multiply.117162, ptr %reduction_input_address13, align 4
  %226 = getelementptr inbounds float, ptr %partial_reduction_result14, i32 0
  call void @region_6_119(ptr %226, ptr %reduction_input_address13, ptr %return_buffer163)
  %227 = load float, ptr %return_buffer163, align 4
  store float %227, ptr %226, align 4
  %228 = add i32 %197, 0
  %Arg_1.2164 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 45, i32 %228, i32 0
  %Arg_1.2165 = load float, ptr %Arg_1.2164, align 4, !invariant.load !297
  %Arg_13.14166 = getelementptr inbounds float, ptr %arg13, i32 %196
  %Arg_13.14167 = load float, ptr %Arg_13.14166, align 4, !invariant.load !297
  %multiply.127168 = fmul float %Arg_1.2165, %Arg_13.14167
  %subtract.128169 = fsub float %region_0_149_constant_2284, %Arg_13.14167
  %multiply.129170 = fmul float %multiply.127168, %subtract.128169
  store float %multiply.129170, ptr %reduction_input_address16, align 4
  %229 = getelementptr inbounds float, ptr %partial_reduction_result17, i32 0
  call void @region_7_131(ptr %229, ptr %reduction_input_address16, ptr %return_buffer171)
  %230 = load float, ptr %return_buffer171, align 4
  store float %230, ptr %229, align 4
  %231 = add i32 %197, 0
  %Arg_1.2172 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 44, i32 %231, i32 0
  %Arg_1.2173 = load float, ptr %Arg_1.2172, align 4, !invariant.load !297
  %Arg_14.15174 = getelementptr inbounds float, ptr %arg14, i32 %196
  %Arg_14.15175 = load float, ptr %Arg_14.15174, align 4, !invariant.load !297
  %multiply.139176 = fmul float %Arg_1.2173, %Arg_14.15175
  %subtract.140177 = fsub float %region_0_149_constant_2284, %Arg_14.15175
  %multiply.141178 = fmul float %multiply.139176, %subtract.140177
  store float %multiply.141178, ptr %reduction_input_address19, align 4
  %232 = getelementptr inbounds float, ptr %partial_reduction_result20, i32 0
  call void @region_8_143(ptr %232, ptr %reduction_input_address19, ptr %return_buffer179)
  %233 = load float, ptr %return_buffer179, align 4
  store float %233, ptr %232, align 4
  %234 = getelementptr inbounds float, ptr %arg16, i32 %196
  store float %multiply.2586, ptr %234, align 4
  %235 = getelementptr inbounds float, ptr %arg23, i32 %196
  store float %multiply.95147, ptr %235, align 4
  %236 = getelementptr inbounds float, ptr %arg20, i32 %196
  store float %add.68123, ptr %236, align 4
  %237 = getelementptr inbounds float, ptr %arg18, i32 %196
  store float %multiply.4097, ptr %237, align 4
  %238 = getelementptr inbounds float, ptr %arg25, i32 %196
  store float %multiply.117162, ptr %238, align 4
  br label %tile_loop.loop_header, !llvm.loop !466

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %is_full_tile-after

is_full_tile-false:                               ; preds = %y_in_tile.loop_body
  %239 = mul i32 %thread_id.x, 2
  store i32 0, ptr %tile_loop.invar_address183, align 4
  br label %tile_loop.loop_header181

tile_loop.loop_header181:                         ; preds = %x_in_tile-after297, %is_full_tile-false
  %tile_loop.indvar184 = load i32, ptr %tile_loop.invar_address183, align 4
  %240 = icmp uge i32 %tile_loop.indvar184, 8
  br i1 %240, label %tile_loop.loop_exit180, label %tile_loop.loop_body182

tile_loop.loop_body182:                           ; preds = %tile_loop.loop_header181
  %invar.inc185 = add nuw nsw i32 %tile_loop.indvar184, 1
  store i32 %invar.inc185, ptr %tile_loop.invar_address183, align 4
  %241 = icmp eq i32 %tile_loop.indvar184, 0
  %242 = mul i32 %tile_loop.indvar184, 1024
  %243 = add i32 %242, 0
  %x_loc186 = add i32 %243, %239
  %244 = add i32 %tile_origin.1, %y_in_tile.indvar
  %245 = add i32 %tile_origin.2, %x_loc186
  %246 = icmp ult i32 %x_loc186, %tile_bound22
  br i1 %246, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body182
  %247 = mul i32 %tile_loop.indvar184, 1024
  %248 = add i32 %247, 1
  %x_loc295 = add i32 %248, %239
  %249 = add i32 %tile_origin.1, %y_in_tile.indvar
  %250 = add i32 %tile_origin.2, %x_loc295
  %251 = icmp ult i32 %x_loc295, %tile_bound22
  br i1 %251, label %x_in_tile-true296, label %x_in_tile-after297

x_in_tile-after297:                               ; preds = %x_in_tile-true296, %x_in_tile-after
  br label %tile_loop.loop_header181, !llvm.loop !467

tile_loop.loop_exit180:                           ; preds = %tile_loop.loop_header181
  br label %is_full_tile-after

x_in_tile-true:                                   ; preds = %tile_loop.loop_body182
  %252 = mul nuw nsw i32 %245, 1
  %253 = add nuw nsw i32 0, %252
  %254 = mul nuw nsw i32 %244, 8192
  %255 = add nuw nsw i32 %253, %254
  %256 = mul nuw nsw i32 %tile_origin.0, 8192
  %257 = add nuw nsw i32 %255, %256
  %258 = udiv i32 %257, 1
  %259 = add i32 %258, 0
  %Arg_1.2187 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 46, i32 %259, i32 0
  %Arg_1.2188 = load float, ptr %Arg_1.2187, align 4, !invariant.load !297
  %260 = add i32 %258, 0
  %Arg_1.2189 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 47, i32 %260, i32 0
  %Arg_1.2190 = load float, ptr %Arg_1.2189, align 4, !invariant.load !297
  %add.18191 = fadd float %Arg_1.2188, %Arg_1.2190
  %Arg_0.1192 = getelementptr inbounds float, ptr %arg0, i32 %257
  %Arg_0.1193 = load float, ptr %Arg_0.1192, align 4, !invariant.load !297
  %multiply.21194 = fmul float %add.18191, %Arg_0.1193
  %region_0_149_constant_22195 = load float, ptr @79, align 4
  %subtract.24196 = fsub float %region_0_149_constant_22195, %Arg_0.1193
  %multiply.25197 = fmul float %multiply.21194, %subtract.24196
  store float %multiply.25197, ptr %reduction_input_address, align 4
  %261 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_28__1(ptr %261, ptr %reduction_input_address, ptr %return_buffer198)
  %262 = load float, ptr %return_buffer198, align 4
  store float %262, ptr %261, align 4
  %263 = add i32 %258, 0
  %Arg_1.2199 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 50, i32 %263, i32 0
  %Arg_1.2200 = load float, ptr %Arg_1.2199, align 4, !invariant.load !297
  %264 = add i32 %258, 0
  %Arg_1.2201 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 51, i32 %264, i32 0
  %Arg_1.2202 = load float, ptr %Arg_1.2201, align 4, !invariant.load !297
  %add.35203 = fadd float %Arg_1.2200, %Arg_1.2202
  %Arg_2.3204 = getelementptr inbounds float, ptr %arg2, i32 %257
  %Arg_2.3205 = load float, ptr %Arg_2.3204, align 4, !invariant.load !297
  %multiply.38206 = fmul float %add.35203, %Arg_2.3205
  %subtract.39207 = fsub float %region_0_149_constant_22195, %Arg_2.3205
  %multiply.40208 = fmul float %multiply.38206, %subtract.39207
  store float %multiply.40208, ptr %reduction_input_address1, align 4
  %265 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_42(ptr %265, ptr %reduction_input_address1, ptr %return_buffer209)
  %266 = load float, ptr %return_buffer209, align 4
  store float %266, ptr %265, align 4
  %267 = add i32 %258, 0
  %Arg_1.2210 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 58, i32 %267, i32 0
  %Arg_1.2211 = load float, ptr %Arg_1.2210, align 4, !invariant.load !297
  %268 = add i32 %258, 0
  %Arg_1.2212 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 59, i32 %268, i32 0
  %Arg_1.2213 = load float, ptr %Arg_1.2212, align 4, !invariant.load !297
  %add.49214 = fadd float %Arg_1.2211, %Arg_1.2213
  %269 = add i32 %258, 0
  %Arg_8.9215 = getelementptr inbounds [8192 x [20 x float]], ptr %arg8, i32 0, i32 %269, i32 18
  %Arg_8.9216 = load float, ptr %Arg_8.9215, align 4, !invariant.load !297
  %Arg_9.10217 = getelementptr inbounds [20 x float], ptr %arg9, i32 0, i32 18
  %Arg_9.10218 = load float, ptr %Arg_9.10217, align 4, !invariant.load !297
  %add.52219 = fadd float %Arg_8.9216, %Arg_9.10218
  %Arg_6.7220 = getelementptr inbounds float, ptr %arg6, i32 %257
  %Arg_6.7221 = load float, ptr %Arg_6.7220, align 4, !invariant.load !297
  %Arg_7.8222 = getelementptr inbounds float, ptr %arg7, i32 %257
  %Arg_7.8223 = load float, ptr %Arg_7.8222, align 4, !invariant.load !297
  %add.54224 = fadd float %Arg_6.7221, %Arg_7.8223
  %Arg_5.6225 = getelementptr inbounds [1 x float], ptr %arg5, i32 0, i32 0
  %Arg_5.6226 = load float, ptr %Arg_5.6225, align 4, !invariant.load !297
  %add.57227 = fadd float %add.54224, %Arg_5.6226
  %add.59228 = fadd float %add.52219, %add.57227
  %270 = fneg float %add.59228
  %271 = call float @__nv_expf(float %270)
  %add.62229 = fadd float %region_0_149_constant_22195, %271
  %divide.63230 = fdiv float %region_0_149_constant_22195, %add.62229
  %multiply.64231 = fmul float %add.49214, %divide.63230
  %subtract.65232 = fsub float %region_0_149_constant_22195, %divide.63230
  %multiply.66233 = fmul float %multiply.64231, %subtract.65232
  %272 = add i32 %258, 0
  %Arg_3.4234 = getelementptr inbounds [8192 x [124 x float]], ptr %arg3, i32 0, i32 %272, i32 18
  %Arg_3.4235 = load float, ptr %Arg_3.4234, align 4, !invariant.load !297
  %add.68236 = fadd float %multiply.66233, %Arg_3.4235
  store float %add.68236, ptr %reduction_input_address4, align 4
  %273 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  call void @region_3_70(ptr %273, ptr %reduction_input_address4, ptr %return_buffer237)
  %274 = load float, ptr %return_buffer237, align 4
  store float %274, ptr %273, align 4
  %275 = add i32 %258, 0
  %Arg_1.2238 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 4, i32 %275, i32 0
  %Arg_1.2239 = load float, ptr %Arg_1.2238, align 4, !invariant.load !297
  %Arg_4.5240 = getelementptr inbounds float, ptr %arg4, i32 %257
  %Arg_4.5241 = load float, ptr %Arg_4.5240, align 4, !invariant.load !297
  %multiply.77242 = fmul float %Arg_1.2239, %Arg_4.5241
  %Arg_4.5243 = getelementptr inbounds float, ptr %arg4, i32 %257
  %Arg_4.5244 = load float, ptr %Arg_4.5243, align 4, !invariant.load !297
  %subtract.78245 = fsub float %region_0_149_constant_22195, %Arg_4.5244
  %multiply.79246 = fmul float %multiply.77242, %subtract.78245
  %276 = add i32 %258, 0
  %Arg_3.4247 = getelementptr inbounds [8192 x [124 x float]], ptr %arg3, i32 0, i32 %276, i32 2
  %Arg_3.4248 = load float, ptr %Arg_3.4247, align 4, !invariant.load !297
  %add.81249 = fadd float %multiply.79246, %Arg_3.4248
  store float %add.81249, ptr %reduction_input_address7, align 4
  %277 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  call void @region_4_83(ptr %277, ptr %reduction_input_address7, ptr %return_buffer250)
  %278 = load float, ptr %return_buffer250, align 4
  store float %278, ptr %277, align 4
  %279 = add i32 %258, 0
  %Arg_1.2251 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 48, i32 %279, i32 0
  %Arg_1.2252 = load float, ptr %Arg_1.2251, align 4, !invariant.load !297
  %280 = add i32 %258, 0
  %Arg_1.2253 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 49, i32 %280, i32 0
  %Arg_1.2254 = load float, ptr %Arg_1.2253, align 4, !invariant.load !297
  %add.90255 = fadd float %Arg_1.2252, %Arg_1.2254
  %Arg_10.11256 = getelementptr inbounds float, ptr %arg10, i32 %257
  %Arg_10.11257 = load float, ptr %Arg_10.11256, align 4, !invariant.load !297
  %multiply.93258 = fmul float %add.90255, %Arg_10.11257
  %subtract.94259 = fsub float %region_0_149_constant_22195, %Arg_10.11257
  %multiply.95260 = fmul float %multiply.93258, %subtract.94259
  store float %multiply.95260, ptr %reduction_input_address10, align 4
  %281 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  call void @region_5_97(ptr %281, ptr %reduction_input_address10, ptr %return_buffer261)
  %282 = load float, ptr %return_buffer261, align 4
  store float %282, ptr %281, align 4
  %283 = add i32 %258, 0
  %Arg_1.2262 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 52, i32 %283, i32 0
  %Arg_1.2263 = load float, ptr %Arg_1.2262, align 4, !invariant.load !297
  %284 = add i32 %258, 0
  %Arg_1.2264 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 53, i32 %284, i32 0
  %Arg_1.2265 = load float, ptr %Arg_1.2264, align 4, !invariant.load !297
  %add.104266 = fadd float %Arg_1.2263, %Arg_1.2265
  %region_0_149_constant_22267 = load float, ptr @79, align 4
  %Arg_11.12268 = getelementptr inbounds float, ptr %arg11, i32 %257
  %Arg_11.12269 = load float, ptr %Arg_11.12268, align 4, !invariant.load !297
  %Arg_12.13270 = getelementptr inbounds [1 x float], ptr %arg12, i32 0, i32 0
  %Arg_12.13271 = load float, ptr %Arg_12.13270, align 4, !invariant.load !297
  %add.109272 = fadd float %Arg_11.12269, %Arg_12.13271
  %285 = fneg float %add.109272
  %286 = call float @__nv_expf(float %285)
  %add.112273 = fadd float %region_0_149_constant_22267, %286
  %divide.113274 = fdiv float %region_0_149_constant_22267, %add.112273
  %multiply.115275 = fmul float %add.104266, %divide.113274
  %subtract.116276 = fsub float %region_0_149_constant_22195, %divide.113274
  %multiply.117277 = fmul float %multiply.115275, %subtract.116276
  store float %multiply.117277, ptr %reduction_input_address13, align 4
  %287 = getelementptr inbounds float, ptr %partial_reduction_result14, i32 0
  call void @region_6_119(ptr %287, ptr %reduction_input_address13, ptr %return_buffer278)
  %288 = load float, ptr %return_buffer278, align 4
  store float %288, ptr %287, align 4
  %289 = add i32 %258, 0
  %Arg_1.2279 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 45, i32 %289, i32 0
  %Arg_1.2280 = load float, ptr %Arg_1.2279, align 4, !invariant.load !297
  %Arg_13.14281 = getelementptr inbounds float, ptr %arg13, i32 %257
  %Arg_13.14282 = load float, ptr %Arg_13.14281, align 4, !invariant.load !297
  %multiply.127283 = fmul float %Arg_1.2280, %Arg_13.14282
  %subtract.128284 = fsub float %region_0_149_constant_22195, %Arg_13.14282
  %multiply.129285 = fmul float %multiply.127283, %subtract.128284
  store float %multiply.129285, ptr %reduction_input_address16, align 4
  %290 = getelementptr inbounds float, ptr %partial_reduction_result17, i32 0
  call void @region_7_131(ptr %290, ptr %reduction_input_address16, ptr %return_buffer286)
  %291 = load float, ptr %return_buffer286, align 4
  store float %291, ptr %290, align 4
  %292 = add i32 %258, 0
  %Arg_1.2287 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 44, i32 %292, i32 0
  %Arg_1.2288 = load float, ptr %Arg_1.2287, align 4, !invariant.load !297
  %Arg_14.15289 = getelementptr inbounds float, ptr %arg14, i32 %257
  %Arg_14.15290 = load float, ptr %Arg_14.15289, align 4, !invariant.load !297
  %multiply.139291 = fmul float %Arg_1.2288, %Arg_14.15290
  %subtract.140292 = fsub float %region_0_149_constant_22195, %Arg_14.15290
  %multiply.141293 = fmul float %multiply.139291, %subtract.140292
  store float %multiply.141293, ptr %reduction_input_address19, align 4
  %293 = getelementptr inbounds float, ptr %partial_reduction_result20, i32 0
  call void @region_8_143(ptr %293, ptr %reduction_input_address19, ptr %return_buffer294)
  %294 = load float, ptr %return_buffer294, align 4
  store float %294, ptr %293, align 4
  %295 = getelementptr inbounds float, ptr %arg23, i32 %257
  store float %multiply.95260, ptr %295, align 4
  %296 = getelementptr inbounds float, ptr %arg18, i32 %257
  store float %multiply.40208, ptr %296, align 4
  %297 = getelementptr inbounds float, ptr %arg25, i32 %257
  store float %multiply.117277, ptr %297, align 4
  %298 = getelementptr inbounds float, ptr %arg20, i32 %257
  store float %add.68236, ptr %298, align 4
  %299 = getelementptr inbounds float, ptr %arg16, i32 %257
  store float %multiply.25197, ptr %299, align 4
  br label %x_in_tile-after

x_in_tile-true296:                                ; preds = %x_in_tile-after
  %300 = mul nuw nsw i32 %250, 1
  %301 = add nuw nsw i32 0, %300
  %302 = mul nuw nsw i32 %249, 8192
  %303 = add nuw nsw i32 %301, %302
  %304 = mul nuw nsw i32 %tile_origin.0, 8192
  %305 = add nuw nsw i32 %303, %304
  %306 = udiv i32 %305, 1
  %307 = add i32 %306, 0
  %Arg_1.2298 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 46, i32 %307, i32 0
  %Arg_1.2299 = load float, ptr %Arg_1.2298, align 4, !invariant.load !297
  %308 = add i32 %306, 0
  %Arg_1.2300 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 47, i32 %308, i32 0
  %Arg_1.2301 = load float, ptr %Arg_1.2300, align 4, !invariant.load !297
  %add.18302 = fadd float %Arg_1.2299, %Arg_1.2301
  %Arg_0.1303 = getelementptr inbounds float, ptr %arg0, i32 %305
  %Arg_0.1304 = load float, ptr %Arg_0.1303, align 4, !invariant.load !297
  %multiply.21305 = fmul float %add.18302, %Arg_0.1304
  %region_0_149_constant_22306 = load float, ptr @79, align 4
  %subtract.24307 = fsub float %region_0_149_constant_22306, %Arg_0.1304
  %multiply.25308 = fmul float %multiply.21305, %subtract.24307
  store float %multiply.25308, ptr %reduction_input_address, align 4
  %309 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_28__1(ptr %309, ptr %reduction_input_address, ptr %return_buffer309)
  %310 = load float, ptr %return_buffer309, align 4
  store float %310, ptr %309, align 4
  %311 = add i32 %306, 0
  %Arg_1.2310 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 50, i32 %311, i32 0
  %Arg_1.2311 = load float, ptr %Arg_1.2310, align 4, !invariant.load !297
  %312 = add i32 %306, 0
  %Arg_1.2312 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 51, i32 %312, i32 0
  %Arg_1.2313 = load float, ptr %Arg_1.2312, align 4, !invariant.load !297
  %add.35314 = fadd float %Arg_1.2311, %Arg_1.2313
  %Arg_2.3315 = getelementptr inbounds float, ptr %arg2, i32 %305
  %Arg_2.3316 = load float, ptr %Arg_2.3315, align 4, !invariant.load !297
  %multiply.38317 = fmul float %add.35314, %Arg_2.3316
  %subtract.39318 = fsub float %region_0_149_constant_22306, %Arg_2.3316
  %multiply.40319 = fmul float %multiply.38317, %subtract.39318
  store float %multiply.40319, ptr %reduction_input_address1, align 4
  %313 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_42(ptr %313, ptr %reduction_input_address1, ptr %return_buffer320)
  %314 = load float, ptr %return_buffer320, align 4
  store float %314, ptr %313, align 4
  %315 = add i32 %306, 0
  %Arg_1.2321 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 58, i32 %315, i32 0
  %Arg_1.2322 = load float, ptr %Arg_1.2321, align 4, !invariant.load !297
  %316 = add i32 %306, 0
  %Arg_1.2323 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 59, i32 %316, i32 0
  %Arg_1.2324 = load float, ptr %Arg_1.2323, align 4, !invariant.load !297
  %add.49325 = fadd float %Arg_1.2322, %Arg_1.2324
  %317 = add i32 %306, 0
  %Arg_8.9326 = getelementptr inbounds [8192 x [20 x float]], ptr %arg8, i32 0, i32 %317, i32 18
  %Arg_8.9327 = load float, ptr %Arg_8.9326, align 4, !invariant.load !297
  %Arg_9.10328 = getelementptr inbounds [20 x float], ptr %arg9, i32 0, i32 18
  %Arg_9.10329 = load float, ptr %Arg_9.10328, align 4, !invariant.load !297
  %add.52330 = fadd float %Arg_8.9327, %Arg_9.10329
  %Arg_6.7331 = getelementptr inbounds float, ptr %arg6, i32 %305
  %Arg_6.7332 = load float, ptr %Arg_6.7331, align 4, !invariant.load !297
  %Arg_7.8333 = getelementptr inbounds float, ptr %arg7, i32 %305
  %Arg_7.8334 = load float, ptr %Arg_7.8333, align 4, !invariant.load !297
  %add.54335 = fadd float %Arg_6.7332, %Arg_7.8334
  %Arg_5.6336 = getelementptr inbounds [1 x float], ptr %arg5, i32 0, i32 0
  %Arg_5.6337 = load float, ptr %Arg_5.6336, align 4, !invariant.load !297
  %add.57338 = fadd float %add.54335, %Arg_5.6337
  %add.59339 = fadd float %add.52330, %add.57338
  %318 = fneg float %add.59339
  %319 = call float @__nv_expf(float %318)
  %add.62340 = fadd float %region_0_149_constant_22306, %319
  %divide.63341 = fdiv float %region_0_149_constant_22306, %add.62340
  %multiply.64342 = fmul float %add.49325, %divide.63341
  %subtract.65343 = fsub float %region_0_149_constant_22306, %divide.63341
  %multiply.66344 = fmul float %multiply.64342, %subtract.65343
  %320 = add i32 %306, 0
  %Arg_3.4345 = getelementptr inbounds [8192 x [124 x float]], ptr %arg3, i32 0, i32 %320, i32 18
  %Arg_3.4346 = load float, ptr %Arg_3.4345, align 4, !invariant.load !297
  %add.68347 = fadd float %multiply.66344, %Arg_3.4346
  store float %add.68347, ptr %reduction_input_address4, align 4
  %321 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  call void @region_3_70(ptr %321, ptr %reduction_input_address4, ptr %return_buffer348)
  %322 = load float, ptr %return_buffer348, align 4
  store float %322, ptr %321, align 4
  %323 = add i32 %306, 0
  %Arg_1.2349 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 4, i32 %323, i32 0
  %Arg_1.2350 = load float, ptr %Arg_1.2349, align 4, !invariant.load !297
  %Arg_4.5351 = getelementptr inbounds float, ptr %arg4, i32 %305
  %Arg_4.5352 = load float, ptr %Arg_4.5351, align 4, !invariant.load !297
  %multiply.77353 = fmul float %Arg_1.2350, %Arg_4.5352
  %Arg_4.5354 = getelementptr inbounds float, ptr %arg4, i32 %305
  %Arg_4.5355 = load float, ptr %Arg_4.5354, align 4, !invariant.load !297
  %subtract.78356 = fsub float %region_0_149_constant_22306, %Arg_4.5355
  %multiply.79357 = fmul float %multiply.77353, %subtract.78356
  %324 = add i32 %306, 0
  %Arg_3.4358 = getelementptr inbounds [8192 x [124 x float]], ptr %arg3, i32 0, i32 %324, i32 2
  %Arg_3.4359 = load float, ptr %Arg_3.4358, align 4, !invariant.load !297
  %add.81360 = fadd float %multiply.79357, %Arg_3.4359
  store float %add.81360, ptr %reduction_input_address7, align 4
  %325 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  call void @region_4_83(ptr %325, ptr %reduction_input_address7, ptr %return_buffer361)
  %326 = load float, ptr %return_buffer361, align 4
  store float %326, ptr %325, align 4
  %327 = add i32 %306, 0
  %Arg_1.2362 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 48, i32 %327, i32 0
  %Arg_1.2363 = load float, ptr %Arg_1.2362, align 4, !invariant.load !297
  %328 = add i32 %306, 0
  %Arg_1.2364 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 49, i32 %328, i32 0
  %Arg_1.2365 = load float, ptr %Arg_1.2364, align 4, !invariant.load !297
  %add.90366 = fadd float %Arg_1.2363, %Arg_1.2365
  %Arg_10.11367 = getelementptr inbounds float, ptr %arg10, i32 %305
  %Arg_10.11368 = load float, ptr %Arg_10.11367, align 4, !invariant.load !297
  %multiply.93369 = fmul float %add.90366, %Arg_10.11368
  %subtract.94370 = fsub float %region_0_149_constant_22306, %Arg_10.11368
  %multiply.95371 = fmul float %multiply.93369, %subtract.94370
  store float %multiply.95371, ptr %reduction_input_address10, align 4
  %329 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  call void @region_5_97(ptr %329, ptr %reduction_input_address10, ptr %return_buffer372)
  %330 = load float, ptr %return_buffer372, align 4
  store float %330, ptr %329, align 4
  %331 = add i32 %306, 0
  %Arg_1.2373 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 52, i32 %331, i32 0
  %Arg_1.2374 = load float, ptr %Arg_1.2373, align 4, !invariant.load !297
  %332 = add i32 %306, 0
  %Arg_1.2375 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 53, i32 %332, i32 0
  %Arg_1.2376 = load float, ptr %Arg_1.2375, align 4, !invariant.load !297
  %add.104377 = fadd float %Arg_1.2374, %Arg_1.2376
  %region_0_149_constant_22378 = load float, ptr @79, align 4
  %Arg_11.12379 = getelementptr inbounds float, ptr %arg11, i32 %305
  %Arg_11.12380 = load float, ptr %Arg_11.12379, align 4, !invariant.load !297
  %Arg_12.13381 = getelementptr inbounds [1 x float], ptr %arg12, i32 0, i32 0
  %Arg_12.13382 = load float, ptr %Arg_12.13381, align 4, !invariant.load !297
  %add.109383 = fadd float %Arg_11.12380, %Arg_12.13382
  %333 = fneg float %add.109383
  %334 = call float @__nv_expf(float %333)
  %add.112384 = fadd float %region_0_149_constant_22378, %334
  %divide.113385 = fdiv float %region_0_149_constant_22378, %add.112384
  %multiply.115386 = fmul float %add.104377, %divide.113385
  %subtract.116387 = fsub float %region_0_149_constant_22306, %divide.113385
  %multiply.117388 = fmul float %multiply.115386, %subtract.116387
  store float %multiply.117388, ptr %reduction_input_address13, align 4
  %335 = getelementptr inbounds float, ptr %partial_reduction_result14, i32 0
  call void @region_6_119(ptr %335, ptr %reduction_input_address13, ptr %return_buffer389)
  %336 = load float, ptr %return_buffer389, align 4
  store float %336, ptr %335, align 4
  %337 = add i32 %306, 0
  %Arg_1.2390 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 45, i32 %337, i32 0
  %Arg_1.2391 = load float, ptr %Arg_1.2390, align 4, !invariant.load !297
  %Arg_13.14392 = getelementptr inbounds float, ptr %arg13, i32 %305
  %Arg_13.14393 = load float, ptr %Arg_13.14392, align 4, !invariant.load !297
  %multiply.127394 = fmul float %Arg_1.2391, %Arg_13.14393
  %subtract.128395 = fsub float %region_0_149_constant_22306, %Arg_13.14393
  %multiply.129396 = fmul float %multiply.127394, %subtract.128395
  store float %multiply.129396, ptr %reduction_input_address16, align 4
  %338 = getelementptr inbounds float, ptr %partial_reduction_result17, i32 0
  call void @region_7_131(ptr %338, ptr %reduction_input_address16, ptr %return_buffer397)
  %339 = load float, ptr %return_buffer397, align 4
  store float %339, ptr %338, align 4
  %340 = add i32 %306, 0
  %Arg_1.2398 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg1, i32 0, i32 44, i32 %340, i32 0
  %Arg_1.2399 = load float, ptr %Arg_1.2398, align 4, !invariant.load !297
  %Arg_14.15400 = getelementptr inbounds float, ptr %arg14, i32 %305
  %Arg_14.15401 = load float, ptr %Arg_14.15400, align 4, !invariant.load !297
  %multiply.139402 = fmul float %Arg_1.2399, %Arg_14.15401
  %subtract.140403 = fsub float %region_0_149_constant_22306, %Arg_14.15401
  %multiply.141404 = fmul float %multiply.139402, %subtract.140403
  store float %multiply.141404, ptr %reduction_input_address19, align 4
  %341 = getelementptr inbounds float, ptr %partial_reduction_result20, i32 0
  call void @region_8_143(ptr %341, ptr %reduction_input_address19, ptr %return_buffer405)
  %342 = load float, ptr %return_buffer405, align 4
  store float %342, ptr %341, align 4
  %343 = getelementptr inbounds float, ptr %arg20, i32 %305
  store float %add.68347, ptr %343, align 4
  %344 = getelementptr inbounds float, ptr %arg25, i32 %305
  store float %multiply.117388, ptr %344, align 4
  %345 = getelementptr inbounds float, ptr %arg23, i32 %305
  store float %multiply.95371, ptr %345, align 4
  %346 = getelementptr inbounds float, ptr %arg16, i32 %305
  store float %multiply.25308, ptr %346, align 4
  %347 = getelementptr inbounds float, ptr %arg18, i32 %305
  store float %multiply.40319, ptr %347, align 4
  br label %x_in_tile-after297

intra_warp_reduce_write-true:                     ; preds = %y_in_tile.loop_exit
  %348 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache94, i32 0, i32 %13, i32 0, i32 %38
  %349 = addrspacecast ptr addrspace(3) %348 to ptr
  %350 = load float, ptr %current_output, align 4
  store float %350, ptr %349, align 4
  br label %intra_warp_reduce_write-after

inter_warp_reduce-true:                           ; preds = %intra_warp_reduce_write-after
  %351 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache94, i32 0, i32 %13, i32 0, i32 %lane_id
  %352 = addrspacecast ptr addrspace(3) %351 to ptr
  store float %region_0_149_constant_27, ptr %initial_value_addr, align 4
  %353 = icmp ult i32 %thread_id.x, 16
  %354 = select i1 %353, ptr %352, ptr %initial_value_addr
  %partial_reduction_result421 = load float, ptr %354, align 4
  %355 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result421, i32 16, i32 31)
  store float %355, ptr %result_from_other_lane420, align 4
  call void @region_1_28__1(ptr %354, ptr %result_from_other_lane420, ptr %return_buffer422)
  %356 = load float, ptr %return_buffer422, align 4
  store float %356, ptr %354, align 4
  %partial_reduction_result424 = load float, ptr %354, align 4
  %357 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result424, i32 8, i32 31)
  store float %357, ptr %result_from_other_lane423, align 4
  call void @region_1_28__1(ptr %354, ptr %result_from_other_lane423, ptr %return_buffer425)
  %358 = load float, ptr %return_buffer425, align 4
  store float %358, ptr %354, align 4
  %partial_reduction_result427 = load float, ptr %354, align 4
  %359 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result427, i32 4, i32 31)
  store float %359, ptr %result_from_other_lane426, align 4
  call void @region_1_28__1(ptr %354, ptr %result_from_other_lane426, ptr %return_buffer428)
  %360 = load float, ptr %return_buffer428, align 4
  store float %360, ptr %354, align 4
  %partial_reduction_result430 = load float, ptr %354, align 4
  %361 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result430, i32 2, i32 31)
  store float %361, ptr %result_from_other_lane429, align 4
  call void @region_1_28__1(ptr %354, ptr %result_from_other_lane429, ptr %return_buffer431)
  %362 = load float, ptr %return_buffer431, align 4
  store float %362, ptr %354, align 4
  %partial_reduction_result433 = load float, ptr %354, align 4
  %363 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result433, i32 1, i32 31)
  store float %363, ptr %result_from_other_lane432, align 4
  call void @region_1_28__1(ptr %354, ptr %result_from_other_lane432, ptr %return_buffer434)
  %364 = load float, ptr %return_buffer434, align 4
  store float %364, ptr %354, align 4
  %365 = icmp eq i32 %thread_id.x, 0
  br i1 %365, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %inter_warp_reduce-true
  br label %inter_warp_reduce-after

reduction_write_output-true:                      ; preds = %inter_warp_reduce-true
  %366 = mul i32 %thread_id.x, 2
  %367 = add i32 %tile_origin.1, %thread_id.y
  %368 = add i32 %tile_origin.2, %366
  %369 = add i32 %368, 0
  %output = load float, ptr %354, align 4
  store float %output, ptr %arg15, align 4
  br label %reduction_write_output-after

intra_warp_reduce_write-true451:                  ; preds = %inter_warp_reduce-after
  %370 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache95, i32 0, i32 %13, i32 0, i32 %51
  %371 = addrspacecast ptr addrspace(3) %370 to ptr
  %372 = load float, ptr %current_output435, align 4
  store float %372, ptr %371, align 4
  br label %intra_warp_reduce_write-after452

inter_warp_reduce-true453:                        ; preds = %intra_warp_reduce_write-after452
  %373 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache95, i32 0, i32 %13, i32 0, i32 %lane_id
  %374 = addrspacecast ptr addrspace(3) %373 to ptr
  store float %region_0_149_constant_273, ptr %initial_value_addr455, align 4
  %375 = icmp ult i32 %thread_id.x, 16
  %376 = select i1 %375, ptr %374, ptr %initial_value_addr455
  %partial_reduction_result457 = load float, ptr %376, align 4
  %377 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result457, i32 16, i32 31)
  store float %377, ptr %result_from_other_lane456, align 4
  call void @region_2_42(ptr %376, ptr %result_from_other_lane456, ptr %return_buffer458)
  %378 = load float, ptr %return_buffer458, align 4
  store float %378, ptr %376, align 4
  %partial_reduction_result460 = load float, ptr %376, align 4
  %379 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result460, i32 8, i32 31)
  store float %379, ptr %result_from_other_lane459, align 4
  call void @region_2_42(ptr %376, ptr %result_from_other_lane459, ptr %return_buffer461)
  %380 = load float, ptr %return_buffer461, align 4
  store float %380, ptr %376, align 4
  %partial_reduction_result463 = load float, ptr %376, align 4
  %381 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result463, i32 4, i32 31)
  store float %381, ptr %result_from_other_lane462, align 4
  call void @region_2_42(ptr %376, ptr %result_from_other_lane462, ptr %return_buffer464)
  %382 = load float, ptr %return_buffer464, align 4
  store float %382, ptr %376, align 4
  %partial_reduction_result466 = load float, ptr %376, align 4
  %383 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result466, i32 2, i32 31)
  store float %383, ptr %result_from_other_lane465, align 4
  call void @region_2_42(ptr %376, ptr %result_from_other_lane465, ptr %return_buffer467)
  %384 = load float, ptr %return_buffer467, align 4
  store float %384, ptr %376, align 4
  %partial_reduction_result469 = load float, ptr %376, align 4
  %385 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result469, i32 1, i32 31)
  store float %385, ptr %result_from_other_lane468, align 4
  call void @region_2_42(ptr %376, ptr %result_from_other_lane468, ptr %return_buffer470)
  %386 = load float, ptr %return_buffer470, align 4
  store float %386, ptr %376, align 4
  %387 = icmp eq i32 %thread_id.x, 0
  br i1 %387, label %reduction_write_output-true471, label %reduction_write_output-after472

reduction_write_output-after472:                  ; preds = %reduction_write_output-true471, %inter_warp_reduce-true453
  br label %inter_warp_reduce-after454

reduction_write_output-true471:                   ; preds = %inter_warp_reduce-true453
  %388 = mul i32 %thread_id.x, 2
  %389 = add i32 %tile_origin.1, %thread_id.y
  %390 = add i32 %tile_origin.2, %388
  %391 = add i32 %390, 0
  %output473 = load float, ptr %376, align 4
  store float %output473, ptr %arg17, align 4
  br label %reduction_write_output-after472

intra_warp_reduce_write-true490:                  ; preds = %inter_warp_reduce-after454
  %392 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache96, i32 0, i32 %13, i32 0, i32 %64
  %393 = addrspacecast ptr addrspace(3) %392 to ptr
  %394 = load float, ptr %current_output474, align 4
  store float %394, ptr %393, align 4
  br label %intra_warp_reduce_write-after491

inter_warp_reduce-true492:                        ; preds = %intra_warp_reduce_write-after491
  %395 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache96, i32 0, i32 %13, i32 0, i32 %lane_id
  %396 = addrspacecast ptr addrspace(3) %395 to ptr
  store float %region_0_149_constant_276, ptr %initial_value_addr494, align 4
  %397 = icmp ult i32 %thread_id.x, 16
  %398 = select i1 %397, ptr %396, ptr %initial_value_addr494
  %partial_reduction_result496 = load float, ptr %398, align 4
  %399 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result496, i32 16, i32 31)
  store float %399, ptr %result_from_other_lane495, align 4
  call void @region_3_70(ptr %398, ptr %result_from_other_lane495, ptr %return_buffer497)
  %400 = load float, ptr %return_buffer497, align 4
  store float %400, ptr %398, align 4
  %partial_reduction_result499 = load float, ptr %398, align 4
  %401 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result499, i32 8, i32 31)
  store float %401, ptr %result_from_other_lane498, align 4
  call void @region_3_70(ptr %398, ptr %result_from_other_lane498, ptr %return_buffer500)
  %402 = load float, ptr %return_buffer500, align 4
  store float %402, ptr %398, align 4
  %partial_reduction_result502 = load float, ptr %398, align 4
  %403 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result502, i32 4, i32 31)
  store float %403, ptr %result_from_other_lane501, align 4
  call void @region_3_70(ptr %398, ptr %result_from_other_lane501, ptr %return_buffer503)
  %404 = load float, ptr %return_buffer503, align 4
  store float %404, ptr %398, align 4
  %partial_reduction_result505 = load float, ptr %398, align 4
  %405 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result505, i32 2, i32 31)
  store float %405, ptr %result_from_other_lane504, align 4
  call void @region_3_70(ptr %398, ptr %result_from_other_lane504, ptr %return_buffer506)
  %406 = load float, ptr %return_buffer506, align 4
  store float %406, ptr %398, align 4
  %partial_reduction_result508 = load float, ptr %398, align 4
  %407 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result508, i32 1, i32 31)
  store float %407, ptr %result_from_other_lane507, align 4
  call void @region_3_70(ptr %398, ptr %result_from_other_lane507, ptr %return_buffer509)
  %408 = load float, ptr %return_buffer509, align 4
  store float %408, ptr %398, align 4
  %409 = icmp eq i32 %thread_id.x, 0
  br i1 %409, label %reduction_write_output-true510, label %reduction_write_output-after511

reduction_write_output-after511:                  ; preds = %reduction_write_output-true510, %inter_warp_reduce-true492
  br label %inter_warp_reduce-after493

reduction_write_output-true510:                   ; preds = %inter_warp_reduce-true492
  %410 = mul i32 %thread_id.x, 2
  %411 = add i32 %tile_origin.1, %thread_id.y
  %412 = add i32 %tile_origin.2, %410
  %413 = add i32 %412, 0
  %output512 = load float, ptr %398, align 4
  store float %output512, ptr %arg19, align 4
  br label %reduction_write_output-after511

intra_warp_reduce_write-true529:                  ; preds = %inter_warp_reduce-after493
  %414 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache97, i32 0, i32 %13, i32 0, i32 %77
  %415 = addrspacecast ptr addrspace(3) %414 to ptr
  %416 = load float, ptr %current_output513, align 4
  store float %416, ptr %415, align 4
  br label %intra_warp_reduce_write-after530

inter_warp_reduce-true531:                        ; preds = %intra_warp_reduce_write-after530
  %417 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache97, i32 0, i32 %13, i32 0, i32 %lane_id
  %418 = addrspacecast ptr addrspace(3) %417 to ptr
  store float %region_0_149_constant_279, ptr %initial_value_addr533, align 4
  %419 = icmp ult i32 %thread_id.x, 16
  %420 = select i1 %419, ptr %418, ptr %initial_value_addr533
  %partial_reduction_result535 = load float, ptr %420, align 4
  %421 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result535, i32 16, i32 31)
  store float %421, ptr %result_from_other_lane534, align 4
  call void @region_4_83(ptr %420, ptr %result_from_other_lane534, ptr %return_buffer536)
  %422 = load float, ptr %return_buffer536, align 4
  store float %422, ptr %420, align 4
  %partial_reduction_result538 = load float, ptr %420, align 4
  %423 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result538, i32 8, i32 31)
  store float %423, ptr %result_from_other_lane537, align 4
  call void @region_4_83(ptr %420, ptr %result_from_other_lane537, ptr %return_buffer539)
  %424 = load float, ptr %return_buffer539, align 4
  store float %424, ptr %420, align 4
  %partial_reduction_result541 = load float, ptr %420, align 4
  %425 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result541, i32 4, i32 31)
  store float %425, ptr %result_from_other_lane540, align 4
  call void @region_4_83(ptr %420, ptr %result_from_other_lane540, ptr %return_buffer542)
  %426 = load float, ptr %return_buffer542, align 4
  store float %426, ptr %420, align 4
  %partial_reduction_result544 = load float, ptr %420, align 4
  %427 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result544, i32 2, i32 31)
  store float %427, ptr %result_from_other_lane543, align 4
  call void @region_4_83(ptr %420, ptr %result_from_other_lane543, ptr %return_buffer545)
  %428 = load float, ptr %return_buffer545, align 4
  store float %428, ptr %420, align 4
  %partial_reduction_result547 = load float, ptr %420, align 4
  %429 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result547, i32 1, i32 31)
  store float %429, ptr %result_from_other_lane546, align 4
  call void @region_4_83(ptr %420, ptr %result_from_other_lane546, ptr %return_buffer548)
  %430 = load float, ptr %return_buffer548, align 4
  store float %430, ptr %420, align 4
  %431 = icmp eq i32 %thread_id.x, 0
  br i1 %431, label %reduction_write_output-true549, label %reduction_write_output-after550

reduction_write_output-after550:                  ; preds = %reduction_write_output-true549, %inter_warp_reduce-true531
  br label %inter_warp_reduce-after532

reduction_write_output-true549:                   ; preds = %inter_warp_reduce-true531
  %432 = mul i32 %thread_id.x, 2
  %433 = add i32 %tile_origin.1, %thread_id.y
  %434 = add i32 %tile_origin.2, %432
  %435 = add i32 %434, 0
  %output551 = load float, ptr %420, align 4
  store float %output551, ptr %arg21, align 4
  br label %reduction_write_output-after550

intra_warp_reduce_write-true568:                  ; preds = %inter_warp_reduce-after532
  %436 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache98, i32 0, i32 %13, i32 0, i32 %90
  %437 = addrspacecast ptr addrspace(3) %436 to ptr
  %438 = load float, ptr %current_output552, align 4
  store float %438, ptr %437, align 4
  br label %intra_warp_reduce_write-after569

inter_warp_reduce-true570:                        ; preds = %intra_warp_reduce_write-after569
  %439 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache98, i32 0, i32 %13, i32 0, i32 %lane_id
  %440 = addrspacecast ptr addrspace(3) %439 to ptr
  store float %region_0_149_constant_2712, ptr %initial_value_addr572, align 4
  %441 = icmp ult i32 %thread_id.x, 16
  %442 = select i1 %441, ptr %440, ptr %initial_value_addr572
  %partial_reduction_result574 = load float, ptr %442, align 4
  %443 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result574, i32 16, i32 31)
  store float %443, ptr %result_from_other_lane573, align 4
  call void @region_5_97(ptr %442, ptr %result_from_other_lane573, ptr %return_buffer575)
  %444 = load float, ptr %return_buffer575, align 4
  store float %444, ptr %442, align 4
  %partial_reduction_result577 = load float, ptr %442, align 4
  %445 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result577, i32 8, i32 31)
  store float %445, ptr %result_from_other_lane576, align 4
  call void @region_5_97(ptr %442, ptr %result_from_other_lane576, ptr %return_buffer578)
  %446 = load float, ptr %return_buffer578, align 4
  store float %446, ptr %442, align 4
  %partial_reduction_result580 = load float, ptr %442, align 4
  %447 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result580, i32 4, i32 31)
  store float %447, ptr %result_from_other_lane579, align 4
  call void @region_5_97(ptr %442, ptr %result_from_other_lane579, ptr %return_buffer581)
  %448 = load float, ptr %return_buffer581, align 4
  store float %448, ptr %442, align 4
  %partial_reduction_result583 = load float, ptr %442, align 4
  %449 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result583, i32 2, i32 31)
  store float %449, ptr %result_from_other_lane582, align 4
  call void @region_5_97(ptr %442, ptr %result_from_other_lane582, ptr %return_buffer584)
  %450 = load float, ptr %return_buffer584, align 4
  store float %450, ptr %442, align 4
  %partial_reduction_result586 = load float, ptr %442, align 4
  %451 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result586, i32 1, i32 31)
  store float %451, ptr %result_from_other_lane585, align 4
  call void @region_5_97(ptr %442, ptr %result_from_other_lane585, ptr %return_buffer587)
  %452 = load float, ptr %return_buffer587, align 4
  store float %452, ptr %442, align 4
  %453 = icmp eq i32 %thread_id.x, 0
  br i1 %453, label %reduction_write_output-true588, label %reduction_write_output-after589

reduction_write_output-after589:                  ; preds = %reduction_write_output-true588, %inter_warp_reduce-true570
  br label %inter_warp_reduce-after571

reduction_write_output-true588:                   ; preds = %inter_warp_reduce-true570
  %454 = mul i32 %thread_id.x, 2
  %455 = add i32 %tile_origin.1, %thread_id.y
  %456 = add i32 %tile_origin.2, %454
  %457 = add i32 %456, 0
  %output590 = load float, ptr %442, align 4
  store float %output590, ptr %arg22, align 4
  br label %reduction_write_output-after589

intra_warp_reduce_write-true607:                  ; preds = %inter_warp_reduce-after571
  %458 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache99, i32 0, i32 %13, i32 0, i32 %103
  %459 = addrspacecast ptr addrspace(3) %458 to ptr
  %460 = load float, ptr %current_output591, align 4
  store float %460, ptr %459, align 4
  br label %intra_warp_reduce_write-after608

inter_warp_reduce-true609:                        ; preds = %intra_warp_reduce_write-after608
  %461 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache99, i32 0, i32 %13, i32 0, i32 %lane_id
  %462 = addrspacecast ptr addrspace(3) %461 to ptr
  store float %region_0_149_constant_2715, ptr %initial_value_addr611, align 4
  %463 = icmp ult i32 %thread_id.x, 16
  %464 = select i1 %463, ptr %462, ptr %initial_value_addr611
  %partial_reduction_result613 = load float, ptr %464, align 4
  %465 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result613, i32 16, i32 31)
  store float %465, ptr %result_from_other_lane612, align 4
  call void @region_6_119(ptr %464, ptr %result_from_other_lane612, ptr %return_buffer614)
  %466 = load float, ptr %return_buffer614, align 4
  store float %466, ptr %464, align 4
  %partial_reduction_result616 = load float, ptr %464, align 4
  %467 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result616, i32 8, i32 31)
  store float %467, ptr %result_from_other_lane615, align 4
  call void @region_6_119(ptr %464, ptr %result_from_other_lane615, ptr %return_buffer617)
  %468 = load float, ptr %return_buffer617, align 4
  store float %468, ptr %464, align 4
  %partial_reduction_result619 = load float, ptr %464, align 4
  %469 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result619, i32 4, i32 31)
  store float %469, ptr %result_from_other_lane618, align 4
  call void @region_6_119(ptr %464, ptr %result_from_other_lane618, ptr %return_buffer620)
  %470 = load float, ptr %return_buffer620, align 4
  store float %470, ptr %464, align 4
  %partial_reduction_result622 = load float, ptr %464, align 4
  %471 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result622, i32 2, i32 31)
  store float %471, ptr %result_from_other_lane621, align 4
  call void @region_6_119(ptr %464, ptr %result_from_other_lane621, ptr %return_buffer623)
  %472 = load float, ptr %return_buffer623, align 4
  store float %472, ptr %464, align 4
  %partial_reduction_result625 = load float, ptr %464, align 4
  %473 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result625, i32 1, i32 31)
  store float %473, ptr %result_from_other_lane624, align 4
  call void @region_6_119(ptr %464, ptr %result_from_other_lane624, ptr %return_buffer626)
  %474 = load float, ptr %return_buffer626, align 4
  store float %474, ptr %464, align 4
  %475 = icmp eq i32 %thread_id.x, 0
  br i1 %475, label %reduction_write_output-true627, label %reduction_write_output-after628

reduction_write_output-after628:                  ; preds = %reduction_write_output-true627, %inter_warp_reduce-true609
  br label %inter_warp_reduce-after610

reduction_write_output-true627:                   ; preds = %inter_warp_reduce-true609
  %476 = mul i32 %thread_id.x, 2
  %477 = add i32 %tile_origin.1, %thread_id.y
  %478 = add i32 %tile_origin.2, %476
  %479 = add i32 %478, 0
  %output629 = load float, ptr %464, align 4
  store float %output629, ptr %arg24, align 4
  br label %reduction_write_output-after628

intra_warp_reduce_write-true646:                  ; preds = %inter_warp_reduce-after610
  %480 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache100, i32 0, i32 %13, i32 0, i32 %116
  %481 = addrspacecast ptr addrspace(3) %480 to ptr
  %482 = load float, ptr %current_output630, align 4
  store float %482, ptr %481, align 4
  br label %intra_warp_reduce_write-after647

inter_warp_reduce-true648:                        ; preds = %intra_warp_reduce_write-after647
  %483 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache100, i32 0, i32 %13, i32 0, i32 %lane_id
  %484 = addrspacecast ptr addrspace(3) %483 to ptr
  store float %region_0_149_constant_2718, ptr %initial_value_addr650, align 4
  %485 = icmp ult i32 %thread_id.x, 16
  %486 = select i1 %485, ptr %484, ptr %initial_value_addr650
  %partial_reduction_result652 = load float, ptr %486, align 4
  %487 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result652, i32 16, i32 31)
  store float %487, ptr %result_from_other_lane651, align 4
  call void @region_7_131(ptr %486, ptr %result_from_other_lane651, ptr %return_buffer653)
  %488 = load float, ptr %return_buffer653, align 4
  store float %488, ptr %486, align 4
  %partial_reduction_result655 = load float, ptr %486, align 4
  %489 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result655, i32 8, i32 31)
  store float %489, ptr %result_from_other_lane654, align 4
  call void @region_7_131(ptr %486, ptr %result_from_other_lane654, ptr %return_buffer656)
  %490 = load float, ptr %return_buffer656, align 4
  store float %490, ptr %486, align 4
  %partial_reduction_result658 = load float, ptr %486, align 4
  %491 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result658, i32 4, i32 31)
  store float %491, ptr %result_from_other_lane657, align 4
  call void @region_7_131(ptr %486, ptr %result_from_other_lane657, ptr %return_buffer659)
  %492 = load float, ptr %return_buffer659, align 4
  store float %492, ptr %486, align 4
  %partial_reduction_result661 = load float, ptr %486, align 4
  %493 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result661, i32 2, i32 31)
  store float %493, ptr %result_from_other_lane660, align 4
  call void @region_7_131(ptr %486, ptr %result_from_other_lane660, ptr %return_buffer662)
  %494 = load float, ptr %return_buffer662, align 4
  store float %494, ptr %486, align 4
  %partial_reduction_result664 = load float, ptr %486, align 4
  %495 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result664, i32 1, i32 31)
  store float %495, ptr %result_from_other_lane663, align 4
  call void @region_7_131(ptr %486, ptr %result_from_other_lane663, ptr %return_buffer665)
  %496 = load float, ptr %return_buffer665, align 4
  store float %496, ptr %486, align 4
  %497 = icmp eq i32 %thread_id.x, 0
  br i1 %497, label %reduction_write_output-true666, label %reduction_write_output-after667

reduction_write_output-after667:                  ; preds = %reduction_write_output-true666, %inter_warp_reduce-true648
  br label %inter_warp_reduce-after649

reduction_write_output-true666:                   ; preds = %inter_warp_reduce-true648
  %498 = mul i32 %thread_id.x, 2
  %499 = add i32 %tile_origin.1, %thread_id.y
  %500 = add i32 %tile_origin.2, %498
  %501 = add i32 %500, 0
  %output668 = load float, ptr %486, align 4
  store float %output668, ptr %arg26, align 4
  br label %reduction_write_output-after667

intra_warp_reduce_write-true685:                  ; preds = %inter_warp_reduce-after649
  %502 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache101, i32 0, i32 %13, i32 0, i32 %129
  %503 = addrspacecast ptr addrspace(3) %502 to ptr
  %504 = load float, ptr %current_output669, align 4
  store float %504, ptr %503, align 4
  br label %intra_warp_reduce_write-after686

inter_warp_reduce-true687:                        ; preds = %intra_warp_reduce_write-after686
  %505 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache101, i32 0, i32 %13, i32 0, i32 %lane_id
  %506 = addrspacecast ptr addrspace(3) %505 to ptr
  store float %region_0_149_constant_2721, ptr %initial_value_addr689, align 4
  %507 = icmp ult i32 %thread_id.x, 16
  %508 = select i1 %507, ptr %506, ptr %initial_value_addr689
  %partial_reduction_result691 = load float, ptr %508, align 4
  %509 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result691, i32 16, i32 31)
  store float %509, ptr %result_from_other_lane690, align 4
  call void @region_8_143(ptr %508, ptr %result_from_other_lane690, ptr %return_buffer692)
  %510 = load float, ptr %return_buffer692, align 4
  store float %510, ptr %508, align 4
  %partial_reduction_result694 = load float, ptr %508, align 4
  %511 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result694, i32 8, i32 31)
  store float %511, ptr %result_from_other_lane693, align 4
  call void @region_8_143(ptr %508, ptr %result_from_other_lane693, ptr %return_buffer695)
  %512 = load float, ptr %return_buffer695, align 4
  store float %512, ptr %508, align 4
  %partial_reduction_result697 = load float, ptr %508, align 4
  %513 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result697, i32 4, i32 31)
  store float %513, ptr %result_from_other_lane696, align 4
  call void @region_8_143(ptr %508, ptr %result_from_other_lane696, ptr %return_buffer698)
  %514 = load float, ptr %return_buffer698, align 4
  store float %514, ptr %508, align 4
  %partial_reduction_result700 = load float, ptr %508, align 4
  %515 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result700, i32 2, i32 31)
  store float %515, ptr %result_from_other_lane699, align 4
  call void @region_8_143(ptr %508, ptr %result_from_other_lane699, ptr %return_buffer701)
  %516 = load float, ptr %return_buffer701, align 4
  store float %516, ptr %508, align 4
  %partial_reduction_result703 = load float, ptr %508, align 4
  %517 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result703, i32 1, i32 31)
  store float %517, ptr %result_from_other_lane702, align 4
  call void @region_8_143(ptr %508, ptr %result_from_other_lane702, ptr %return_buffer704)
  %518 = load float, ptr %return_buffer704, align 4
  store float %518, ptr %508, align 4
  %519 = icmp eq i32 %thread_id.x, 0
  br i1 %519, label %reduction_write_output-true705, label %reduction_write_output-after706

reduction_write_output-after706:                  ; preds = %reduction_write_output-true705, %inter_warp_reduce-true687
  br label %inter_warp_reduce-after688

reduction_write_output-true705:                   ; preds = %inter_warp_reduce-true687
  %520 = mul i32 %thread_id.x, 2
  %521 = add i32 %tile_origin.1, %thread_id.y
  %522 = add i32 %tile_origin.2, %520
  %523 = add i32 %522, 0
  %output707 = load float, ptr %508, align 4
  store float %output707, ptr %arg27, align 4
  br label %reduction_write_output-after706
}

define internal void @region_1_28__1(ptr dereferenceable(4) %Arg_0.29.typed, ptr dereferenceable(4) %Arg_1.30.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.31.typed = alloca float, align 4
  %Arg_0.29 = load float, ptr %Arg_0.29.typed, align 4
  %Arg_1.30 = load float, ptr %Arg_1.30.typed, align 4
  %add.31 = fadd float %Arg_0.29, %Arg_1.30
  store float %add.31, ptr %add.31.typed, align 4
  %load_ret_value = load float, ptr %add.31.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_42(ptr dereferenceable(4) %Arg_0.43.typed, ptr dereferenceable(4) %Arg_1.44.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.45.typed = alloca float, align 4
  %Arg_0.43 = load float, ptr %Arg_0.43.typed, align 4
  %Arg_1.44 = load float, ptr %Arg_1.44.typed, align 4
  %add.45 = fadd float %Arg_0.43, %Arg_1.44
  store float %add.45, ptr %add.45.typed, align 4
  %load_ret_value = load float, ptr %add.45.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_3_70(ptr dereferenceable(4) %Arg_0.71.typed, ptr dereferenceable(4) %Arg_1.72.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.73.typed = alloca float, align 4
  %Arg_0.71 = load float, ptr %Arg_0.71.typed, align 4
  %Arg_1.72 = load float, ptr %Arg_1.72.typed, align 4
  %add.73 = fadd float %Arg_0.71, %Arg_1.72
  store float %add.73, ptr %add.73.typed, align 4
  %load_ret_value = load float, ptr %add.73.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_4_83(ptr dereferenceable(4) %Arg_0.84.typed, ptr dereferenceable(4) %Arg_1.85.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.86.typed = alloca float, align 4
  %Arg_0.84 = load float, ptr %Arg_0.84.typed, align 4
  %Arg_1.85 = load float, ptr %Arg_1.85.typed, align 4
  %add.86 = fadd float %Arg_0.84, %Arg_1.85
  store float %add.86, ptr %add.86.typed, align 4
  %load_ret_value = load float, ptr %add.86.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_5_97(ptr dereferenceable(4) %Arg_0.98.typed, ptr dereferenceable(4) %Arg_1.99.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.100.typed = alloca float, align 4
  %Arg_0.98 = load float, ptr %Arg_0.98.typed, align 4
  %Arg_1.99 = load float, ptr %Arg_1.99.typed, align 4
  %add.100 = fadd float %Arg_0.98, %Arg_1.99
  store float %add.100, ptr %add.100.typed, align 4
  %load_ret_value = load float, ptr %add.100.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_6_119(ptr dereferenceable(4) %Arg_0.120.typed, ptr dereferenceable(4) %Arg_1.121.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.122.typed = alloca float, align 4
  %Arg_0.120 = load float, ptr %Arg_0.120.typed, align 4
  %Arg_1.121 = load float, ptr %Arg_1.121.typed, align 4
  %add.122 = fadd float %Arg_0.120, %Arg_1.121
  store float %add.122, ptr %add.122.typed, align 4
  %load_ret_value = load float, ptr %add.122.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_7_131(ptr dereferenceable(4) %Arg_0.132.typed, ptr dereferenceable(4) %Arg_1.133.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.134.typed = alloca float, align 4
  %Arg_0.132 = load float, ptr %Arg_0.132.typed, align 4
  %Arg_1.133 = load float, ptr %Arg_1.133.typed, align 4
  %add.134 = fadd float %Arg_0.132, %Arg_1.133
  store float %add.134, ptr %add.134.typed, align 4
  %load_ret_value = load float, ptr %add.134.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_8_143(ptr dereferenceable(4) %Arg_0.144.typed, ptr dereferenceable(4) %Arg_1.145.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.146.typed = alloca float, align 4
  %Arg_0.144 = load float, ptr %Arg_0.144.typed, align 4
  %Arg_1.145 = load float, ptr %Arg_1.145.typed, align 4
  %add.146 = fadd float %Arg_0.144, %Arg_1.145
  store float %add.146, ptr %add.146.typed, align 4
  %load_ret_value = load float, ptr %add.146.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_656(ptr noalias align 128 dereferenceable(4063232) %arg0, ptr noalias align 128 dereferenceable(32768) %arg1, ptr noalias align 128 dereferenceable(1966080) %arg2, ptr noalias align 128 dereferenceable(32768) %arg3, ptr noalias align 128 dereferenceable(32768) %arg4, ptr noalias align 128 dereferenceable(32768) %arg5, ptr noalias align 128 dereferenceable(32768) %arg6, ptr noalias align 128 dereferenceable(32768) %arg7, ptr noalias align 16 dereferenceable(4) %arg8, ptr noalias align 128 dereferenceable(32768) %arg9, ptr noalias align 128 dereferenceable(32768) %arg10, ptr noalias align 128 dereferenceable(655360) %arg11, ptr noalias align 16 dereferenceable(80) %arg12, ptr noalias align 16 dereferenceable(4) %arg13, ptr noalias align 128 dereferenceable(32768) %arg14, ptr noalias align 128 dereferenceable(32768) %arg15, ptr noalias align 128 dereferenceable(4) %arg16, ptr noalias align 128 dereferenceable(32768) %arg17, ptr noalias align 128 dereferenceable(4) %arg18, ptr noalias align 128 dereferenceable(32768) %arg19, ptr noalias align 128 dereferenceable(4) %arg20, ptr noalias align 128 dereferenceable(32768) %arg21, ptr noalias align 128 dereferenceable(4) %arg22, ptr noalias align 128 dereferenceable(32768) %arg23, ptr noalias align 128 dereferenceable(4) %arg24, ptr noalias align 128 dereferenceable(32768) %arg25, ptr noalias align 128 dereferenceable(4) %arg26, ptr noalias align 128 dereferenceable(32768) %arg27, ptr noalias align 128 dereferenceable(4) %arg28, ptr noalias align 128 dereferenceable(32768) %arg29, ptr noalias align 128 dereferenceable(4) %arg30, ptr noalias align 128 dereferenceable(32768) %arg31, ptr noalias align 128 dereferenceable(32768) %arg32, ptr noalias align 128 dereferenceable(32768) %arg33, ptr noalias align 128 dereferenceable(32768) %arg34, ptr noalias align 128 dereferenceable(32768) %arg35, ptr noalias align 128 dereferenceable(32768) %arg36, ptr noalias align 128 dereferenceable(32768) %arg37, ptr noalias align 128 dereferenceable(32768) %arg38, ptr noalias align 128 dereferenceable(32768) %arg39, ptr noalias align 128 dereferenceable(32768) %arg40, ptr noalias align 128 dereferenceable(32768) %arg41, ptr noalias align 128 dereferenceable(32768) %arg42, ptr noalias align 128 dereferenceable(32768) %arg43, ptr noalias align 128 dereferenceable(32768) %arg44, ptr noalias align 128 dereferenceable(32768) %arg45, ptr noalias align 128 dereferenceable(32768) %arg46) {
entry:
  %return_buffer926 = alloca float, align 4
  %result_from_other_lane924 = alloca float, align 4
  %return_buffer923 = alloca float, align 4
  %result_from_other_lane921 = alloca float, align 4
  %return_buffer920 = alloca float, align 4
  %result_from_other_lane918 = alloca float, align 4
  %return_buffer917 = alloca float, align 4
  %result_from_other_lane915 = alloca float, align 4
  %return_buffer914 = alloca float, align 4
  %result_from_other_lane912 = alloca float, align 4
  %initial_value_addr911 = alloca float, align 4
  %return_buffer906 = alloca float, align 4
  %result_from_other_lane904 = alloca float, align 4
  %return_buffer903 = alloca float, align 4
  %result_from_other_lane901 = alloca float, align 4
  %return_buffer900 = alloca float, align 4
  %result_from_other_lane898 = alloca float, align 4
  %return_buffer897 = alloca float, align 4
  %result_from_other_lane895 = alloca float, align 4
  %return_buffer894 = alloca float, align 4
  %result_from_other_lane892 = alloca float, align 4
  %return_buffer887 = alloca float, align 4
  %result_from_other_lane885 = alloca float, align 4
  %return_buffer884 = alloca float, align 4
  %result_from_other_lane882 = alloca float, align 4
  %return_buffer881 = alloca float, align 4
  %result_from_other_lane879 = alloca float, align 4
  %return_buffer878 = alloca float, align 4
  %result_from_other_lane876 = alloca float, align 4
  %return_buffer875 = alloca float, align 4
  %result_from_other_lane873 = alloca float, align 4
  %initial_value_addr872 = alloca float, align 4
  %return_buffer867 = alloca float, align 4
  %result_from_other_lane865 = alloca float, align 4
  %return_buffer864 = alloca float, align 4
  %result_from_other_lane862 = alloca float, align 4
  %return_buffer861 = alloca float, align 4
  %result_from_other_lane859 = alloca float, align 4
  %return_buffer858 = alloca float, align 4
  %result_from_other_lane856 = alloca float, align 4
  %return_buffer855 = alloca float, align 4
  %result_from_other_lane853 = alloca float, align 4
  %return_buffer848 = alloca float, align 4
  %result_from_other_lane846 = alloca float, align 4
  %return_buffer845 = alloca float, align 4
  %result_from_other_lane843 = alloca float, align 4
  %return_buffer842 = alloca float, align 4
  %result_from_other_lane840 = alloca float, align 4
  %return_buffer839 = alloca float, align 4
  %result_from_other_lane837 = alloca float, align 4
  %return_buffer836 = alloca float, align 4
  %result_from_other_lane834 = alloca float, align 4
  %initial_value_addr833 = alloca float, align 4
  %return_buffer828 = alloca float, align 4
  %result_from_other_lane826 = alloca float, align 4
  %return_buffer825 = alloca float, align 4
  %result_from_other_lane823 = alloca float, align 4
  %return_buffer822 = alloca float, align 4
  %result_from_other_lane820 = alloca float, align 4
  %return_buffer819 = alloca float, align 4
  %result_from_other_lane817 = alloca float, align 4
  %return_buffer816 = alloca float, align 4
  %result_from_other_lane814 = alloca float, align 4
  %return_buffer809 = alloca float, align 4
  %result_from_other_lane807 = alloca float, align 4
  %return_buffer806 = alloca float, align 4
  %result_from_other_lane804 = alloca float, align 4
  %return_buffer803 = alloca float, align 4
  %result_from_other_lane801 = alloca float, align 4
  %return_buffer800 = alloca float, align 4
  %result_from_other_lane798 = alloca float, align 4
  %return_buffer797 = alloca float, align 4
  %result_from_other_lane795 = alloca float, align 4
  %initial_value_addr794 = alloca float, align 4
  %return_buffer789 = alloca float, align 4
  %result_from_other_lane787 = alloca float, align 4
  %return_buffer786 = alloca float, align 4
  %result_from_other_lane784 = alloca float, align 4
  %return_buffer783 = alloca float, align 4
  %result_from_other_lane781 = alloca float, align 4
  %return_buffer780 = alloca float, align 4
  %result_from_other_lane778 = alloca float, align 4
  %return_buffer777 = alloca float, align 4
  %result_from_other_lane775 = alloca float, align 4
  %return_buffer770 = alloca float, align 4
  %result_from_other_lane768 = alloca float, align 4
  %return_buffer767 = alloca float, align 4
  %result_from_other_lane765 = alloca float, align 4
  %return_buffer764 = alloca float, align 4
  %result_from_other_lane762 = alloca float, align 4
  %return_buffer761 = alloca float, align 4
  %result_from_other_lane759 = alloca float, align 4
  %return_buffer758 = alloca float, align 4
  %result_from_other_lane756 = alloca float, align 4
  %initial_value_addr755 = alloca float, align 4
  %return_buffer750 = alloca float, align 4
  %result_from_other_lane748 = alloca float, align 4
  %return_buffer747 = alloca float, align 4
  %result_from_other_lane745 = alloca float, align 4
  %return_buffer744 = alloca float, align 4
  %result_from_other_lane742 = alloca float, align 4
  %return_buffer741 = alloca float, align 4
  %result_from_other_lane739 = alloca float, align 4
  %return_buffer738 = alloca float, align 4
  %result_from_other_lane736 = alloca float, align 4
  %return_buffer731 = alloca float, align 4
  %result_from_other_lane729 = alloca float, align 4
  %return_buffer728 = alloca float, align 4
  %result_from_other_lane726 = alloca float, align 4
  %return_buffer725 = alloca float, align 4
  %result_from_other_lane723 = alloca float, align 4
  %return_buffer722 = alloca float, align 4
  %result_from_other_lane720 = alloca float, align 4
  %return_buffer719 = alloca float, align 4
  %result_from_other_lane717 = alloca float, align 4
  %initial_value_addr716 = alloca float, align 4
  %return_buffer711 = alloca float, align 4
  %result_from_other_lane709 = alloca float, align 4
  %return_buffer708 = alloca float, align 4
  %result_from_other_lane706 = alloca float, align 4
  %return_buffer705 = alloca float, align 4
  %result_from_other_lane703 = alloca float, align 4
  %return_buffer702 = alloca float, align 4
  %result_from_other_lane700 = alloca float, align 4
  %return_buffer699 = alloca float, align 4
  %result_from_other_lane697 = alloca float, align 4
  %return_buffer692 = alloca float, align 4
  %result_from_other_lane690 = alloca float, align 4
  %return_buffer689 = alloca float, align 4
  %result_from_other_lane687 = alloca float, align 4
  %return_buffer686 = alloca float, align 4
  %result_from_other_lane684 = alloca float, align 4
  %return_buffer683 = alloca float, align 4
  %result_from_other_lane681 = alloca float, align 4
  %return_buffer680 = alloca float, align 4
  %result_from_other_lane678 = alloca float, align 4
  %initial_value_addr677 = alloca float, align 4
  %return_buffer672 = alloca float, align 4
  %result_from_other_lane670 = alloca float, align 4
  %return_buffer669 = alloca float, align 4
  %result_from_other_lane667 = alloca float, align 4
  %return_buffer666 = alloca float, align 4
  %result_from_other_lane664 = alloca float, align 4
  %return_buffer663 = alloca float, align 4
  %result_from_other_lane661 = alloca float, align 4
  %return_buffer660 = alloca float, align 4
  %result_from_other_lane658 = alloca float, align 4
  %return_buffer656 = alloca float, align 4
  %result_from_other_lane654 = alloca float, align 4
  %return_buffer653 = alloca float, align 4
  %result_from_other_lane651 = alloca float, align 4
  %return_buffer650 = alloca float, align 4
  %result_from_other_lane648 = alloca float, align 4
  %return_buffer647 = alloca float, align 4
  %result_from_other_lane645 = alloca float, align 4
  %return_buffer644 = alloca float, align 4
  %result_from_other_lane642 = alloca float, align 4
  %initial_value_addr = alloca float, align 4
  %return_buffer641 = alloca float, align 4
  %result_from_other_lane639 = alloca float, align 4
  %return_buffer638 = alloca float, align 4
  %result_from_other_lane636 = alloca float, align 4
  %return_buffer635 = alloca float, align 4
  %result_from_other_lane633 = alloca float, align 4
  %return_buffer632 = alloca float, align 4
  %result_from_other_lane630 = alloca float, align 4
  %return_buffer629 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer597 = alloca float, align 4
  %return_buffer569 = alloca float, align 4
  %return_buffer541 = alloca float, align 4
  %return_buffer528 = alloca float, align 4
  %return_buffer515 = alloca float, align 4
  %return_buffer502 = alloca float, align 4
  %return_buffer489 = alloca float, align 4
  %return_buffer476 = alloca float, align 4
  %return_buffer429 = alloca float, align 4
  %return_buffer401 = alloca float, align 4
  %return_buffer373 = alloca float, align 4
  %return_buffer360 = alloca float, align 4
  %return_buffer347 = alloca float, align 4
  %return_buffer334 = alloca float, align 4
  %return_buffer321 = alloca float, align 4
  %return_buffer308 = alloca float, align 4
  %tile_loop.invar_address291 = alloca i32, align 4
  %return_buffer257 = alloca float, align 4
  %return_buffer231 = alloca float, align 4
  %return_buffer205 = alloca float, align 4
  %return_buffer192 = alloca float, align 4
  %return_buffer179 = alloca float, align 4
  %return_buffer166 = alloca float, align 4
  %return_buffer153 = alloca float, align 4
  %return_buffer140 = alloca float, align 4
  %return_buffer95 = alloca float, align 4
  %return_buffer80 = alloca float, align 4
  %return_buffer68 = alloca float, align 4
  %return_buffer60 = alloca float, align 4
  %return_buffer52 = alloca float, align 4
  %return_buffer44 = alloca float, align 4
  %return_buffer36 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result20 = alloca float, align 4
  %reduction_input_address19 = alloca float, align 4
  %partial_reduction_result17 = alloca float, align 4
  %reduction_input_address16 = alloca float, align 4
  %partial_reduction_result14 = alloca float, align 4
  %reduction_input_address13 = alloca float, align 4
  %partial_reduction_result11 = alloca float, align 4
  %reduction_input_address10 = alloca float, align 4
  %partial_reduction_result8 = alloca float, align 4
  %reduction_input_address7 = alloca float, align 4
  %partial_reduction_result5 = alloca float, align 4
  %reduction_input_address4 = alloca float, align 4
  %partial_reduction_result2 = alloca float, align 4
  %reduction_input_address1 = alloca float, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %inter_warp_reduce-after910, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_183_constant_27 = load float, ptr @82, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_183_constant_27, ptr %2, align 4
  %region_0_183_constant_273 = load float, ptr @82, align 4
  %3 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  store float %region_0_183_constant_273, ptr %3, align 4
  %region_0_183_constant_276 = load float, ptr @82, align 4
  %4 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  store float %region_0_183_constant_276, ptr %4, align 4
  %region_0_183_constant_279 = load float, ptr @82, align 4
  %5 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  store float %region_0_183_constant_279, ptr %5, align 4
  %region_0_183_constant_2712 = load float, ptr @82, align 4
  %6 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  store float %region_0_183_constant_2712, ptr %6, align 4
  %region_0_183_constant_2715 = load float, ptr @82, align 4
  %7 = getelementptr inbounds float, ptr %partial_reduction_result14, i32 0
  store float %region_0_183_constant_2715, ptr %7, align 4
  %region_0_183_constant_2718 = load float, ptr @82, align 4
  %8 = getelementptr inbounds float, ptr %partial_reduction_result17, i32 0
  store float %region_0_183_constant_2718, ptr %8, align 4
  %region_0_183_constant_2721 = load float, ptr @82, align 4
  %9 = getelementptr inbounds float, ptr %partial_reduction_result20, i32 0
  store float %region_0_183_constant_2721, ptr %9, align 4
  %10 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !293
  %11 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %12 = urem i32 %10, 512
  %13 = udiv i32 %10, 512
  %14 = mul i32 %11, 1
  %15 = add i32 %14, %13
  %16 = icmp ult i32 %15, 1
  br i1 %16, label %17, label %early_return

17:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %12, 512
  %thread_id.y = udiv i32 %12, 512
  %lane_id = urem i32 %12, 32
  %18 = udiv i32 %15, 1
  %19 = urem i32 %18, 1
  %20 = udiv i32 %15, 1
  %21 = urem i32 %20, 1
  %22 = udiv i32 %15, 1
  %23 = icmp eq i32 %21, 0
  %tile_bound = select i1 %23, i32 1, i32 1
  %24 = icmp eq i32 %19, 0
  %tile_bound22 = select i1 %24, i32 8192, i32 8192
  %tile_origin.0 = mul i32 %22, 1
  %tile_origin.1 = mul i32 %21, 1
  %tile_origin.2 = mul i32 %19, 8192
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %is_full_tile-after, %17
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %25 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %25, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 1
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %26 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %27 = icmp eq i32 8192, %tile_bound22
  br i1 %27, label %is_full_tile-true, label %is_full_tile-false

is_full_tile-after:                               ; preds = %tile_loop.loop_exit288, %tile_loop.loop_exit
  br label %y_in_tile.loop_header, !llvm.loop !468

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %partial_reduction_result628 = load float, ptr %current_output, align 4
  %28 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result628, i32 16, i32 31)
  store float %28, ptr %result_from_other_lane, align 4
  call void @region_1_28__2(ptr %current_output, ptr %result_from_other_lane, ptr %return_buffer629)
  %29 = load float, ptr %return_buffer629, align 4
  store float %29, ptr %current_output, align 4
  %partial_reduction_result631 = load float, ptr %current_output, align 4
  %30 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result631, i32 8, i32 31)
  store float %30, ptr %result_from_other_lane630, align 4
  call void @region_1_28__2(ptr %current_output, ptr %result_from_other_lane630, ptr %return_buffer632)
  %31 = load float, ptr %return_buffer632, align 4
  store float %31, ptr %current_output, align 4
  %partial_reduction_result634 = load float, ptr %current_output, align 4
  %32 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result634, i32 4, i32 31)
  store float %32, ptr %result_from_other_lane633, align 4
  call void @region_1_28__2(ptr %current_output, ptr %result_from_other_lane633, ptr %return_buffer635)
  %33 = load float, ptr %return_buffer635, align 4
  store float %33, ptr %current_output, align 4
  %partial_reduction_result637 = load float, ptr %current_output, align 4
  %34 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result637, i32 2, i32 31)
  store float %34, ptr %result_from_other_lane636, align 4
  call void @region_1_28__2(ptr %current_output, ptr %result_from_other_lane636, ptr %return_buffer638)
  %35 = load float, ptr %return_buffer638, align 4
  store float %35, ptr %current_output, align 4
  %partial_reduction_result640 = load float, ptr %current_output, align 4
  %36 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result640, i32 1, i32 31)
  store float %36, ptr %result_from_other_lane639, align 4
  call void @region_1_28__2(ptr %current_output, ptr %result_from_other_lane639, ptr %return_buffer641)
  %37 = load float, ptr %return_buffer641, align 4
  store float %37, ptr %current_output, align 4
  %38 = udiv i32 %thread_id.x, 32
  %39 = icmp eq i32 %lane_id, 0
  br i1 %39, label %intra_warp_reduce_write-true, label %intra_warp_reduce_write-after

intra_warp_reduce_write-after:                    ; preds = %intra_warp_reduce_write-true, %y_in_tile.loop_exit
  call void @llvm.nvvm.barrier0()
  %40 = icmp eq i32 %38, 0
  br i1 %40, label %inter_warp_reduce-true, label %inter_warp_reduce-after

inter_warp_reduce-after:                          ; preds = %reduction_write_output-after, %intra_warp_reduce_write-after
  %current_output657 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  %partial_reduction_result659 = load float, ptr %current_output657, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result659, i32 16, i32 31)
  store float %41, ptr %result_from_other_lane658, align 4
  call void @region_2_41(ptr %current_output657, ptr %result_from_other_lane658, ptr %return_buffer660)
  %42 = load float, ptr %return_buffer660, align 4
  store float %42, ptr %current_output657, align 4
  %partial_reduction_result662 = load float, ptr %current_output657, align 4
  %43 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result662, i32 8, i32 31)
  store float %43, ptr %result_from_other_lane661, align 4
  call void @region_2_41(ptr %current_output657, ptr %result_from_other_lane661, ptr %return_buffer663)
  %44 = load float, ptr %return_buffer663, align 4
  store float %44, ptr %current_output657, align 4
  %partial_reduction_result665 = load float, ptr %current_output657, align 4
  %45 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result665, i32 4, i32 31)
  store float %45, ptr %result_from_other_lane664, align 4
  call void @region_2_41(ptr %current_output657, ptr %result_from_other_lane664, ptr %return_buffer666)
  %46 = load float, ptr %return_buffer666, align 4
  store float %46, ptr %current_output657, align 4
  %partial_reduction_result668 = load float, ptr %current_output657, align 4
  %47 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result668, i32 2, i32 31)
  store float %47, ptr %result_from_other_lane667, align 4
  call void @region_2_41(ptr %current_output657, ptr %result_from_other_lane667, ptr %return_buffer669)
  %48 = load float, ptr %return_buffer669, align 4
  store float %48, ptr %current_output657, align 4
  %partial_reduction_result671 = load float, ptr %current_output657, align 4
  %49 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result671, i32 1, i32 31)
  store float %49, ptr %result_from_other_lane670, align 4
  call void @region_2_41(ptr %current_output657, ptr %result_from_other_lane670, ptr %return_buffer672)
  %50 = load float, ptr %return_buffer672, align 4
  store float %50, ptr %current_output657, align 4
  %51 = udiv i32 %thread_id.x, 32
  %52 = icmp eq i32 %lane_id, 0
  br i1 %52, label %intra_warp_reduce_write-true673, label %intra_warp_reduce_write-after674

intra_warp_reduce_write-after674:                 ; preds = %intra_warp_reduce_write-true673, %inter_warp_reduce-after
  call void @llvm.nvvm.barrier0()
  %53 = icmp eq i32 %51, 0
  br i1 %53, label %inter_warp_reduce-true675, label %inter_warp_reduce-after676

inter_warp_reduce-after676:                       ; preds = %reduction_write_output-after694, %intra_warp_reduce_write-after674
  %current_output696 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  %partial_reduction_result698 = load float, ptr %current_output696, align 4
  %54 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result698, i32 16, i32 31)
  store float %54, ptr %result_from_other_lane697, align 4
  call void @region_3_54(ptr %current_output696, ptr %result_from_other_lane697, ptr %return_buffer699)
  %55 = load float, ptr %return_buffer699, align 4
  store float %55, ptr %current_output696, align 4
  %partial_reduction_result701 = load float, ptr %current_output696, align 4
  %56 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result701, i32 8, i32 31)
  store float %56, ptr %result_from_other_lane700, align 4
  call void @region_3_54(ptr %current_output696, ptr %result_from_other_lane700, ptr %return_buffer702)
  %57 = load float, ptr %return_buffer702, align 4
  store float %57, ptr %current_output696, align 4
  %partial_reduction_result704 = load float, ptr %current_output696, align 4
  %58 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result704, i32 4, i32 31)
  store float %58, ptr %result_from_other_lane703, align 4
  call void @region_3_54(ptr %current_output696, ptr %result_from_other_lane703, ptr %return_buffer705)
  %59 = load float, ptr %return_buffer705, align 4
  store float %59, ptr %current_output696, align 4
  %partial_reduction_result707 = load float, ptr %current_output696, align 4
  %60 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result707, i32 2, i32 31)
  store float %60, ptr %result_from_other_lane706, align 4
  call void @region_3_54(ptr %current_output696, ptr %result_from_other_lane706, ptr %return_buffer708)
  %61 = load float, ptr %return_buffer708, align 4
  store float %61, ptr %current_output696, align 4
  %partial_reduction_result710 = load float, ptr %current_output696, align 4
  %62 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result710, i32 1, i32 31)
  store float %62, ptr %result_from_other_lane709, align 4
  call void @region_3_54(ptr %current_output696, ptr %result_from_other_lane709, ptr %return_buffer711)
  %63 = load float, ptr %return_buffer711, align 4
  store float %63, ptr %current_output696, align 4
  %64 = udiv i32 %thread_id.x, 32
  %65 = icmp eq i32 %lane_id, 0
  br i1 %65, label %intra_warp_reduce_write-true712, label %intra_warp_reduce_write-after713

intra_warp_reduce_write-after713:                 ; preds = %intra_warp_reduce_write-true712, %inter_warp_reduce-after676
  call void @llvm.nvvm.barrier0()
  %66 = icmp eq i32 %64, 0
  br i1 %66, label %inter_warp_reduce-true714, label %inter_warp_reduce-after715

inter_warp_reduce-after715:                       ; preds = %reduction_write_output-after733, %intra_warp_reduce_write-after713
  %current_output735 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  %partial_reduction_result737 = load float, ptr %current_output735, align 4
  %67 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result737, i32 16, i32 31)
  store float %67, ptr %result_from_other_lane736, align 4
  call void @region_4_67(ptr %current_output735, ptr %result_from_other_lane736, ptr %return_buffer738)
  %68 = load float, ptr %return_buffer738, align 4
  store float %68, ptr %current_output735, align 4
  %partial_reduction_result740 = load float, ptr %current_output735, align 4
  %69 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result740, i32 8, i32 31)
  store float %69, ptr %result_from_other_lane739, align 4
  call void @region_4_67(ptr %current_output735, ptr %result_from_other_lane739, ptr %return_buffer741)
  %70 = load float, ptr %return_buffer741, align 4
  store float %70, ptr %current_output735, align 4
  %partial_reduction_result743 = load float, ptr %current_output735, align 4
  %71 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result743, i32 4, i32 31)
  store float %71, ptr %result_from_other_lane742, align 4
  call void @region_4_67(ptr %current_output735, ptr %result_from_other_lane742, ptr %return_buffer744)
  %72 = load float, ptr %return_buffer744, align 4
  store float %72, ptr %current_output735, align 4
  %partial_reduction_result746 = load float, ptr %current_output735, align 4
  %73 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result746, i32 2, i32 31)
  store float %73, ptr %result_from_other_lane745, align 4
  call void @region_4_67(ptr %current_output735, ptr %result_from_other_lane745, ptr %return_buffer747)
  %74 = load float, ptr %return_buffer747, align 4
  store float %74, ptr %current_output735, align 4
  %partial_reduction_result749 = load float, ptr %current_output735, align 4
  %75 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result749, i32 1, i32 31)
  store float %75, ptr %result_from_other_lane748, align 4
  call void @region_4_67(ptr %current_output735, ptr %result_from_other_lane748, ptr %return_buffer750)
  %76 = load float, ptr %return_buffer750, align 4
  store float %76, ptr %current_output735, align 4
  %77 = udiv i32 %thread_id.x, 32
  %78 = icmp eq i32 %lane_id, 0
  br i1 %78, label %intra_warp_reduce_write-true751, label %intra_warp_reduce_write-after752

intra_warp_reduce_write-after752:                 ; preds = %intra_warp_reduce_write-true751, %inter_warp_reduce-after715
  call void @llvm.nvvm.barrier0()
  %79 = icmp eq i32 %77, 0
  br i1 %79, label %inter_warp_reduce-true753, label %inter_warp_reduce-after754

inter_warp_reduce-after754:                       ; preds = %reduction_write_output-after772, %intra_warp_reduce_write-after752
  %current_output774 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  %partial_reduction_result776 = load float, ptr %current_output774, align 4
  %80 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result776, i32 16, i32 31)
  store float %80, ptr %result_from_other_lane775, align 4
  call void @region_5_80(ptr %current_output774, ptr %result_from_other_lane775, ptr %return_buffer777)
  %81 = load float, ptr %return_buffer777, align 4
  store float %81, ptr %current_output774, align 4
  %partial_reduction_result779 = load float, ptr %current_output774, align 4
  %82 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result779, i32 8, i32 31)
  store float %82, ptr %result_from_other_lane778, align 4
  call void @region_5_80(ptr %current_output774, ptr %result_from_other_lane778, ptr %return_buffer780)
  %83 = load float, ptr %return_buffer780, align 4
  store float %83, ptr %current_output774, align 4
  %partial_reduction_result782 = load float, ptr %current_output774, align 4
  %84 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result782, i32 4, i32 31)
  store float %84, ptr %result_from_other_lane781, align 4
  call void @region_5_80(ptr %current_output774, ptr %result_from_other_lane781, ptr %return_buffer783)
  %85 = load float, ptr %return_buffer783, align 4
  store float %85, ptr %current_output774, align 4
  %partial_reduction_result785 = load float, ptr %current_output774, align 4
  %86 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result785, i32 2, i32 31)
  store float %86, ptr %result_from_other_lane784, align 4
  call void @region_5_80(ptr %current_output774, ptr %result_from_other_lane784, ptr %return_buffer786)
  %87 = load float, ptr %return_buffer786, align 4
  store float %87, ptr %current_output774, align 4
  %partial_reduction_result788 = load float, ptr %current_output774, align 4
  %88 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result788, i32 1, i32 31)
  store float %88, ptr %result_from_other_lane787, align 4
  call void @region_5_80(ptr %current_output774, ptr %result_from_other_lane787, ptr %return_buffer789)
  %89 = load float, ptr %return_buffer789, align 4
  store float %89, ptr %current_output774, align 4
  %90 = udiv i32 %thread_id.x, 32
  %91 = icmp eq i32 %lane_id, 0
  br i1 %91, label %intra_warp_reduce_write-true790, label %intra_warp_reduce_write-after791

intra_warp_reduce_write-after791:                 ; preds = %intra_warp_reduce_write-true790, %inter_warp_reduce-after754
  call void @llvm.nvvm.barrier0()
  %92 = icmp eq i32 %90, 0
  br i1 %92, label %inter_warp_reduce-true792, label %inter_warp_reduce-after793

inter_warp_reduce-after793:                       ; preds = %reduction_write_output-after811, %intra_warp_reduce_write-after791
  %current_output813 = getelementptr inbounds float, ptr %partial_reduction_result14, i32 0
  %partial_reduction_result815 = load float, ptr %current_output813, align 4
  %93 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result815, i32 16, i32 31)
  store float %93, ptr %result_from_other_lane814, align 4
  call void @region_6_93(ptr %current_output813, ptr %result_from_other_lane814, ptr %return_buffer816)
  %94 = load float, ptr %return_buffer816, align 4
  store float %94, ptr %current_output813, align 4
  %partial_reduction_result818 = load float, ptr %current_output813, align 4
  %95 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result818, i32 8, i32 31)
  store float %95, ptr %result_from_other_lane817, align 4
  call void @region_6_93(ptr %current_output813, ptr %result_from_other_lane817, ptr %return_buffer819)
  %96 = load float, ptr %return_buffer819, align 4
  store float %96, ptr %current_output813, align 4
  %partial_reduction_result821 = load float, ptr %current_output813, align 4
  %97 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result821, i32 4, i32 31)
  store float %97, ptr %result_from_other_lane820, align 4
  call void @region_6_93(ptr %current_output813, ptr %result_from_other_lane820, ptr %return_buffer822)
  %98 = load float, ptr %return_buffer822, align 4
  store float %98, ptr %current_output813, align 4
  %partial_reduction_result824 = load float, ptr %current_output813, align 4
  %99 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result824, i32 2, i32 31)
  store float %99, ptr %result_from_other_lane823, align 4
  call void @region_6_93(ptr %current_output813, ptr %result_from_other_lane823, ptr %return_buffer825)
  %100 = load float, ptr %return_buffer825, align 4
  store float %100, ptr %current_output813, align 4
  %partial_reduction_result827 = load float, ptr %current_output813, align 4
  %101 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result827, i32 1, i32 31)
  store float %101, ptr %result_from_other_lane826, align 4
  call void @region_6_93(ptr %current_output813, ptr %result_from_other_lane826, ptr %return_buffer828)
  %102 = load float, ptr %return_buffer828, align 4
  store float %102, ptr %current_output813, align 4
  %103 = udiv i32 %thread_id.x, 32
  %104 = icmp eq i32 %lane_id, 0
  br i1 %104, label %intra_warp_reduce_write-true829, label %intra_warp_reduce_write-after830

intra_warp_reduce_write-after830:                 ; preds = %intra_warp_reduce_write-true829, %inter_warp_reduce-after793
  call void @llvm.nvvm.barrier0()
  %105 = icmp eq i32 %103, 0
  br i1 %105, label %inter_warp_reduce-true831, label %inter_warp_reduce-after832

inter_warp_reduce-after832:                       ; preds = %reduction_write_output-after850, %intra_warp_reduce_write-after830
  %current_output852 = getelementptr inbounds float, ptr %partial_reduction_result17, i32 0
  %partial_reduction_result854 = load float, ptr %current_output852, align 4
  %106 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result854, i32 16, i32 31)
  store float %106, ptr %result_from_other_lane853, align 4
  call void @region_7_121(ptr %current_output852, ptr %result_from_other_lane853, ptr %return_buffer855)
  %107 = load float, ptr %return_buffer855, align 4
  store float %107, ptr %current_output852, align 4
  %partial_reduction_result857 = load float, ptr %current_output852, align 4
  %108 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result857, i32 8, i32 31)
  store float %108, ptr %result_from_other_lane856, align 4
  call void @region_7_121(ptr %current_output852, ptr %result_from_other_lane856, ptr %return_buffer858)
  %109 = load float, ptr %return_buffer858, align 4
  store float %109, ptr %current_output852, align 4
  %partial_reduction_result860 = load float, ptr %current_output852, align 4
  %110 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result860, i32 4, i32 31)
  store float %110, ptr %result_from_other_lane859, align 4
  call void @region_7_121(ptr %current_output852, ptr %result_from_other_lane859, ptr %return_buffer861)
  %111 = load float, ptr %return_buffer861, align 4
  store float %111, ptr %current_output852, align 4
  %partial_reduction_result863 = load float, ptr %current_output852, align 4
  %112 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result863, i32 2, i32 31)
  store float %112, ptr %result_from_other_lane862, align 4
  call void @region_7_121(ptr %current_output852, ptr %result_from_other_lane862, ptr %return_buffer864)
  %113 = load float, ptr %return_buffer864, align 4
  store float %113, ptr %current_output852, align 4
  %partial_reduction_result866 = load float, ptr %current_output852, align 4
  %114 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result866, i32 1, i32 31)
  store float %114, ptr %result_from_other_lane865, align 4
  call void @region_7_121(ptr %current_output852, ptr %result_from_other_lane865, ptr %return_buffer867)
  %115 = load float, ptr %return_buffer867, align 4
  store float %115, ptr %current_output852, align 4
  %116 = udiv i32 %thread_id.x, 32
  %117 = icmp eq i32 %lane_id, 0
  br i1 %117, label %intra_warp_reduce_write-true868, label %intra_warp_reduce_write-after869

intra_warp_reduce_write-after869:                 ; preds = %intra_warp_reduce_write-true868, %inter_warp_reduce-after832
  call void @llvm.nvvm.barrier0()
  %118 = icmp eq i32 %116, 0
  br i1 %118, label %inter_warp_reduce-true870, label %inter_warp_reduce-after871

inter_warp_reduce-after871:                       ; preds = %reduction_write_output-after889, %intra_warp_reduce_write-after869
  %current_output891 = getelementptr inbounds float, ptr %partial_reduction_result20, i32 0
  %partial_reduction_result893 = load float, ptr %current_output891, align 4
  %119 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result893, i32 16, i32 31)
  store float %119, ptr %result_from_other_lane892, align 4
  call void @region_8_147(ptr %current_output891, ptr %result_from_other_lane892, ptr %return_buffer894)
  %120 = load float, ptr %return_buffer894, align 4
  store float %120, ptr %current_output891, align 4
  %partial_reduction_result896 = load float, ptr %current_output891, align 4
  %121 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result896, i32 8, i32 31)
  store float %121, ptr %result_from_other_lane895, align 4
  call void @region_8_147(ptr %current_output891, ptr %result_from_other_lane895, ptr %return_buffer897)
  %122 = load float, ptr %return_buffer897, align 4
  store float %122, ptr %current_output891, align 4
  %partial_reduction_result899 = load float, ptr %current_output891, align 4
  %123 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result899, i32 4, i32 31)
  store float %123, ptr %result_from_other_lane898, align 4
  call void @region_8_147(ptr %current_output891, ptr %result_from_other_lane898, ptr %return_buffer900)
  %124 = load float, ptr %return_buffer900, align 4
  store float %124, ptr %current_output891, align 4
  %partial_reduction_result902 = load float, ptr %current_output891, align 4
  %125 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result902, i32 2, i32 31)
  store float %125, ptr %result_from_other_lane901, align 4
  call void @region_8_147(ptr %current_output891, ptr %result_from_other_lane901, ptr %return_buffer903)
  %126 = load float, ptr %return_buffer903, align 4
  store float %126, ptr %current_output891, align 4
  %partial_reduction_result905 = load float, ptr %current_output891, align 4
  %127 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result905, i32 1, i32 31)
  store float %127, ptr %result_from_other_lane904, align 4
  call void @region_8_147(ptr %current_output891, ptr %result_from_other_lane904, ptr %return_buffer906)
  %128 = load float, ptr %return_buffer906, align 4
  store float %128, ptr %current_output891, align 4
  %129 = udiv i32 %thread_id.x, 32
  %130 = icmp eq i32 %lane_id, 0
  br i1 %130, label %intra_warp_reduce_write-true907, label %intra_warp_reduce_write-after908

intra_warp_reduce_write-after908:                 ; preds = %intra_warp_reduce_write-true907, %inter_warp_reduce-after871
  call void @llvm.nvvm.barrier0()
  %131 = icmp eq i32 %129, 0
  br i1 %131, label %inter_warp_reduce-true909, label %inter_warp_reduce-after910

inter_warp_reduce-after910:                       ; preds = %reduction_write_output-after928, %intra_warp_reduce_write-after908
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

is_full_tile-true:                                ; preds = %y_in_tile.loop_body
  %132 = mul i32 %thread_id.x, 2
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %tile_loop.loop_body, %is_full_tile-true
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %133 = icmp uge i32 %tile_loop.indvar, 8
  br i1 %133, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc23 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc23, ptr %tile_loop.invar_address, align 4
  %134 = icmp eq i32 %tile_loop.indvar, 0
  %135 = mul i32 %tile_loop.indvar, 1024
  %136 = add i32 %135, 0
  %x_loc = add i32 %136, %132
  %137 = add i32 %tile_origin.1, %y_in_tile.indvar
  %138 = add i32 %tile_origin.2, %x_loc
  %139 = mul nuw nsw i32 %138, 1
  %140 = add nuw nsw i32 0, %139
  %141 = mul nuw nsw i32 %137, 8192
  %142 = add nuw nsw i32 %140, %141
  %143 = mul nuw nsw i32 %tile_origin.0, 8192
  %144 = add nuw nsw i32 %142, %143
  %145 = udiv i32 %144, 1
  %146 = add i32 %145, 0
  %Arg_2.3 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 2, i32 %146, i32 0
  %Arg_2.324 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %Arg_1.2 = getelementptr inbounds float, ptr %arg1, i32 %144
  %Arg_1.225 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %multiply.19 = fmul float %Arg_2.324, %Arg_1.225
  %region_0_183_constant_20 = load float, ptr @81, align 4
  %Arg_1.226 = getelementptr inbounds float, ptr %arg1, i32 %144
  %Arg_1.227 = load float, ptr %Arg_1.226, align 4, !invariant.load !297
  %subtract.22 = fsub float %region_0_183_constant_20, %Arg_1.227
  %multiply.23 = fmul float %multiply.19, %subtract.22
  %147 = add i32 %145, 0
  %Arg_0.1 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %147, i32 0
  %Arg_0.128 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %add.25 = fadd float %multiply.23, %Arg_0.128
  store float %add.25, ptr %reduction_input_address, align 4
  %148 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_28__2(ptr %148, ptr %reduction_input_address, ptr %return_buffer)
  %149 = load float, ptr %return_buffer, align 4
  store float %149, ptr %148, align 4
  %150 = add i32 %145, 0
  %Arg_2.329 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 3, i32 %150, i32 0
  %Arg_2.330 = load float, ptr %Arg_2.329, align 4, !invariant.load !297
  %Arg_3.4 = getelementptr inbounds float, ptr %arg3, i32 %144
  %Arg_3.431 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  %multiply.35 = fmul float %Arg_2.330, %Arg_3.431
  %Arg_3.432 = getelementptr inbounds float, ptr %arg3, i32 %144
  %Arg_3.433 = load float, ptr %Arg_3.432, align 4, !invariant.load !297
  %subtract.36 = fsub float %region_0_183_constant_20, %Arg_3.433
  %multiply.37 = fmul float %multiply.35, %subtract.36
  %151 = add i32 %145, 0
  %Arg_0.134 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %151, i32 1
  %Arg_0.135 = load float, ptr %Arg_0.134, align 4, !invariant.load !297
  %add.39 = fadd float %multiply.37, %Arg_0.135
  store float %add.39, ptr %reduction_input_address1, align 4
  %152 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_41(ptr %152, ptr %reduction_input_address1, ptr %return_buffer36)
  %153 = load float, ptr %return_buffer36, align 4
  store float %153, ptr %152, align 4
  %154 = add i32 %145, 0
  %Arg_2.337 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 5, i32 %154, i32 0
  %Arg_2.338 = load float, ptr %Arg_2.337, align 4, !invariant.load !297
  %Arg_4.5 = getelementptr inbounds float, ptr %arg4, i32 %144
  %Arg_4.539 = load float, ptr %Arg_4.5, align 4, !invariant.load !297
  %multiply.48 = fmul float %Arg_2.338, %Arg_4.539
  %Arg_4.540 = getelementptr inbounds float, ptr %arg4, i32 %144
  %Arg_4.541 = load float, ptr %Arg_4.540, align 4, !invariant.load !297
  %subtract.49 = fsub float %region_0_183_constant_20, %Arg_4.541
  %multiply.50 = fmul float %multiply.48, %subtract.49
  %155 = add i32 %145, 0
  %Arg_0.142 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %155, i32 3
  %Arg_0.143 = load float, ptr %Arg_0.142, align 4, !invariant.load !297
  %add.52 = fadd float %multiply.50, %Arg_0.143
  store float %add.52, ptr %reduction_input_address4, align 4
  %156 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  call void @region_3_54(ptr %156, ptr %reduction_input_address4, ptr %return_buffer44)
  %157 = load float, ptr %return_buffer44, align 4
  store float %157, ptr %156, align 4
  %158 = add i32 %145, 0
  %Arg_2.345 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 12, i32 %158, i32 0
  %Arg_2.346 = load float, ptr %Arg_2.345, align 4, !invariant.load !297
  %Arg_5.6 = getelementptr inbounds float, ptr %arg5, i32 %144
  %Arg_5.647 = load float, ptr %Arg_5.6, align 4, !invariant.load !297
  %multiply.61 = fmul float %Arg_2.346, %Arg_5.647
  %Arg_5.648 = getelementptr inbounds float, ptr %arg5, i32 %144
  %Arg_5.649 = load float, ptr %Arg_5.648, align 4, !invariant.load !297
  %subtract.62 = fsub float %region_0_183_constant_20, %Arg_5.649
  %multiply.63 = fmul float %multiply.61, %subtract.62
  %159 = add i32 %145, 0
  %Arg_0.150 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %159, i32 7
  %Arg_0.151 = load float, ptr %Arg_0.150, align 4, !invariant.load !297
  %add.65 = fadd float %multiply.63, %Arg_0.151
  store float %add.65, ptr %reduction_input_address7, align 4
  %160 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  call void @region_4_67(ptr %160, ptr %reduction_input_address7, ptr %return_buffer52)
  %161 = load float, ptr %return_buffer52, align 4
  store float %161, ptr %160, align 4
  %162 = add i32 %145, 0
  %Arg_2.353 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 13, i32 %162, i32 0
  %Arg_2.354 = load float, ptr %Arg_2.353, align 4, !invariant.load !297
  %Arg_6.7 = getelementptr inbounds float, ptr %arg6, i32 %144
  %Arg_6.755 = load float, ptr %Arg_6.7, align 4, !invariant.load !297
  %multiply.74 = fmul float %Arg_2.354, %Arg_6.755
  %Arg_6.756 = getelementptr inbounds float, ptr %arg6, i32 %144
  %Arg_6.757 = load float, ptr %Arg_6.756, align 4, !invariant.load !297
  %subtract.75 = fsub float %region_0_183_constant_20, %Arg_6.757
  %multiply.76 = fmul float %multiply.74, %subtract.75
  %163 = add i32 %145, 0
  %Arg_0.158 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %163, i32 8
  %Arg_0.159 = load float, ptr %Arg_0.158, align 4, !invariant.load !297
  %add.78 = fadd float %multiply.76, %Arg_0.159
  store float %add.78, ptr %reduction_input_address10, align 4
  %164 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  call void @region_5_80(ptr %164, ptr %reduction_input_address10, ptr %return_buffer60)
  %165 = load float, ptr %return_buffer60, align 4
  store float %165, ptr %164, align 4
  %166 = add i32 %145, 0
  %Arg_2.361 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 14, i32 %166, i32 0
  %Arg_2.362 = load float, ptr %Arg_2.361, align 4, !invariant.load !297
  %Arg_7.8 = getelementptr inbounds float, ptr %arg7, i32 %144
  %Arg_7.863 = load float, ptr %Arg_7.8, align 4, !invariant.load !297
  %multiply.87 = fmul float %Arg_2.362, %Arg_7.863
  %Arg_7.864 = getelementptr inbounds float, ptr %arg7, i32 %144
  %Arg_7.865 = load float, ptr %Arg_7.864, align 4, !invariant.load !297
  %subtract.88 = fsub float %region_0_183_constant_20, %Arg_7.865
  %multiply.89 = fmul float %multiply.87, %subtract.88
  %167 = add i32 %145, 0
  %Arg_0.166 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %167, i32 9
  %Arg_0.167 = load float, ptr %Arg_0.166, align 4, !invariant.load !297
  %add.91 = fadd float %multiply.89, %Arg_0.167
  store float %add.91, ptr %reduction_input_address13, align 4
  %168 = getelementptr inbounds float, ptr %partial_reduction_result14, i32 0
  call void @region_6_93(ptr %168, ptr %reduction_input_address13, ptr %return_buffer68)
  %169 = load float, ptr %return_buffer68, align 4
  store float %169, ptr %168, align 4
  %170 = add i32 %145, 0
  %Arg_2.369 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 54, i32 %170, i32 0
  %Arg_2.370 = load float, ptr %Arg_2.369, align 4, !invariant.load !297
  %171 = add i32 %145, 0
  %Arg_2.371 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 55, i32 %171, i32 0
  %Arg_2.372 = load float, ptr %Arg_2.371, align 4, !invariant.load !297
  %add.100 = fadd float %Arg_2.370, %Arg_2.372
  %172 = add i32 %145, 0
  %Arg_11.12 = getelementptr inbounds [8192 x [20 x float]], ptr %arg11, i32 0, i32 %172, i32 17
  %Arg_11.1273 = load float, ptr %Arg_11.12, align 4, !invariant.load !297
  %Arg_12.13 = getelementptr inbounds [20 x float], ptr %arg12, i32 0, i32 17
  %Arg_12.1374 = load float, ptr %Arg_12.13, align 4, !invariant.load !297
  %add.103 = fadd float %Arg_11.1273, %Arg_12.1374
  %Arg_9.10 = getelementptr inbounds float, ptr %arg9, i32 %144
  %Arg_9.1075 = load float, ptr %Arg_9.10, align 4, !invariant.load !297
  %Arg_10.11 = getelementptr inbounds float, ptr %arg10, i32 %144
  %Arg_10.1176 = load float, ptr %Arg_10.11, align 4, !invariant.load !297
  %add.105 = fadd float %Arg_9.1075, %Arg_10.1176
  %Arg_8.9 = getelementptr inbounds [1 x float], ptr %arg8, i32 0, i32 0
  %Arg_8.977 = load float, ptr %Arg_8.9, align 4, !invariant.load !297
  %add.108 = fadd float %add.105, %Arg_8.977
  %add.110 = fadd float %add.103, %add.108
  %173 = fneg float %add.110
  %174 = call float @__nv_expf(float %173)
  %add.113 = fadd float %region_0_183_constant_20, %174
  %divide.114 = fdiv float %region_0_183_constant_20, %add.113
  %multiply.115 = fmul float %add.100, %divide.114
  %subtract.116 = fsub float %region_0_183_constant_20, %divide.114
  %multiply.117 = fmul float %multiply.115, %subtract.116
  %175 = add i32 %145, 0
  %Arg_0.178 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %175, i32 17
  %Arg_0.179 = load float, ptr %Arg_0.178, align 4, !invariant.load !297
  %add.119 = fadd float %multiply.117, %Arg_0.179
  store float %add.119, ptr %reduction_input_address16, align 4
  %176 = getelementptr inbounds float, ptr %partial_reduction_result17, i32 0
  call void @region_7_121(ptr %176, ptr %reduction_input_address16, ptr %return_buffer80)
  %177 = load float, ptr %return_buffer80, align 4
  store float %177, ptr %176, align 4
  %178 = add i32 %145, 0
  %Arg_2.381 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 56, i32 %178, i32 0
  %Arg_2.382 = load float, ptr %Arg_2.381, align 4, !invariant.load !297
  %179 = add i32 %145, 0
  %Arg_2.383 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 57, i32 %179, i32 0
  %Arg_2.384 = load float, ptr %Arg_2.383, align 4, !invariant.load !297
  %add.128 = fadd float %Arg_2.382, %Arg_2.384
  %Arg_14.15 = getelementptr inbounds float, ptr %arg14, i32 %144
  %Arg_14.1585 = load float, ptr %Arg_14.15, align 4, !invariant.load !297
  %Arg_15.16 = getelementptr inbounds float, ptr %arg15, i32 %144
  %Arg_15.1686 = load float, ptr %Arg_15.16, align 4, !invariant.load !297
  %add.130 = fadd float %Arg_14.1585, %Arg_15.1686
  %Arg_13.14 = getelementptr inbounds [1 x float], ptr %arg13, i32 0, i32 0
  %Arg_13.1487 = load float, ptr %Arg_13.14, align 4, !invariant.load !297
  %add.133 = fadd float %add.130, %Arg_13.1487
  %180 = add i32 %145, 0
  %Arg_11.1288 = getelementptr inbounds [8192 x [20 x float]], ptr %arg11, i32 0, i32 %180, i32 19
  %Arg_11.1289 = load float, ptr %Arg_11.1288, align 4, !invariant.load !297
  %Arg_12.1390 = getelementptr inbounds [20 x float], ptr %arg12, i32 0, i32 19
  %Arg_12.1391 = load float, ptr %Arg_12.1390, align 4, !invariant.load !297
  %add.10392 = fadd float %Arg_11.1289, %Arg_12.1391
  %add.136 = fadd float %add.133, %add.10392
  %181 = fneg float %add.136
  %182 = call float @__nv_expf(float %181)
  %add.139 = fadd float %region_0_183_constant_20, %182
  %divide.140 = fdiv float %region_0_183_constant_20, %add.139
  %multiply.141 = fmul float %add.128, %divide.140
  %subtract.142 = fsub float %region_0_183_constant_20, %divide.140
  %multiply.143 = fmul float %multiply.141, %subtract.142
  %183 = add i32 %145, 0
  %Arg_0.193 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %183, i32 19
  %Arg_0.194 = load float, ptr %Arg_0.193, align 4, !invariant.load !297
  %add.145 = fadd float %multiply.143, %Arg_0.194
  store float %add.145, ptr %reduction_input_address19, align 4
  %184 = getelementptr inbounds float, ptr %partial_reduction_result20, i32 0
  call void @region_8_147(ptr %184, ptr %reduction_input_address19, ptr %return_buffer95)
  %185 = load float, ptr %return_buffer95, align 4
  store float %185, ptr %184, align 4
  %186 = add i32 %145, 0
  %Arg_2.396 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 0, i32 %186, i32 0
  %Arg_2.397 = load float, ptr %Arg_2.396, align 4, !invariant.load !297
  %187 = add i32 %145, 0
  %Arg_2.398 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 1, i32 %187, i32 0
  %Arg_2.399 = load float, ptr %Arg_2.398, align 4, !invariant.load !297
  %188 = add i32 %145, 0
  %Arg_2.3100 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 9, i32 %188, i32 0
  %Arg_2.3101 = load float, ptr %Arg_2.3100, align 4, !invariant.load !297
  %189 = add i32 %145, 0
  %Arg_2.3102 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 17, i32 %189, i32 0
  %Arg_2.3103 = load float, ptr %Arg_2.3102, align 4, !invariant.load !297
  %190 = add i32 %145, 0
  %Arg_2.3104 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 21, i32 %190, i32 0
  %Arg_2.3105 = load float, ptr %Arg_2.3104, align 4, !invariant.load !297
  %191 = add i32 %145, 0
  %Arg_2.3106 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 22, i32 %191, i32 0
  %Arg_2.3107 = load float, ptr %Arg_2.3106, align 4, !invariant.load !297
  %192 = add i32 %145, 0
  %Arg_2.3108 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 23, i32 %192, i32 0
  %Arg_2.3109 = load float, ptr %Arg_2.3108, align 4, !invariant.load !297
  %193 = add i32 %145, 0
  %Arg_2.3110 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 24, i32 %193, i32 0
  %Arg_2.3111 = load float, ptr %Arg_2.3110, align 4, !invariant.load !297
  %194 = add i32 %145, 0
  %Arg_2.3112 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 25, i32 %194, i32 0
  %Arg_2.3113 = load float, ptr %Arg_2.3112, align 4, !invariant.load !297
  %195 = add i32 %145, 0
  %Arg_2.3114 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 26, i32 %195, i32 0
  %Arg_2.3115 = load float, ptr %Arg_2.3114, align 4, !invariant.load !297
  %196 = add i32 %145, 0
  %Arg_2.3116 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 27, i32 %196, i32 0
  %Arg_2.3117 = load float, ptr %Arg_2.3116, align 4, !invariant.load !297
  %197 = add i32 %145, 0
  %Arg_2.3118 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 28, i32 %197, i32 0
  %Arg_2.3119 = load float, ptr %Arg_2.3118, align 4, !invariant.load !297
  %198 = add i32 %145, 0
  %Arg_2.3120 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 29, i32 %198, i32 0
  %Arg_2.3121 = load float, ptr %Arg_2.3120, align 4, !invariant.load !297
  %199 = add i32 %145, 0
  %Arg_2.3122 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 30, i32 %199, i32 0
  %Arg_2.3123 = load float, ptr %Arg_2.3122, align 4, !invariant.load !297
  %200 = add i32 %145, 0
  %Arg_2.3124 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 31, i32 %200, i32 0
  %Arg_2.3125 = load float, ptr %Arg_2.3124, align 4, !invariant.load !297
  %201 = getelementptr inbounds float, ptr %arg34, i32 %144
  store float %Arg_2.3101, ptr %201, align 4
  %202 = getelementptr inbounds float, ptr %arg31, i32 %144
  store float %add.145, ptr %202, align 4
  %203 = getelementptr inbounds float, ptr %arg23, i32 %144
  store float %add.65, ptr %203, align 4
  %204 = getelementptr inbounds float, ptr %arg45, i32 %144
  store float %Arg_2.3123, ptr %204, align 4
  %205 = getelementptr inbounds float, ptr %arg36, i32 %144
  store float %Arg_2.3105, ptr %205, align 4
  %206 = getelementptr inbounds float, ptr %arg37, i32 %144
  store float %Arg_2.3107, ptr %206, align 4
  %207 = getelementptr inbounds float, ptr %arg35, i32 %144
  store float %Arg_2.3103, ptr %207, align 4
  %208 = getelementptr inbounds float, ptr %arg17, i32 %144
  store float %add.25, ptr %208, align 4
  %209 = getelementptr inbounds float, ptr %arg38, i32 %144
  store float %Arg_2.3109, ptr %209, align 4
  %210 = getelementptr inbounds float, ptr %arg39, i32 %144
  store float %Arg_2.3111, ptr %210, align 4
  %211 = getelementptr inbounds float, ptr %arg40, i32 %144
  store float %Arg_2.3113, ptr %211, align 4
  %212 = getelementptr inbounds float, ptr %arg32, i32 %144
  store float %Arg_2.397, ptr %212, align 4
  %213 = getelementptr inbounds float, ptr %arg21, i32 %144
  store float %add.52, ptr %213, align 4
  %214 = getelementptr inbounds float, ptr %arg41, i32 %144
  store float %Arg_2.3115, ptr %214, align 4
  %215 = getelementptr inbounds float, ptr %arg46, i32 %144
  store float %Arg_2.3125, ptr %215, align 4
  %216 = getelementptr inbounds float, ptr %arg19, i32 %144
  store float %add.39, ptr %216, align 4
  %217 = getelementptr inbounds float, ptr %arg43, i32 %144
  store float %Arg_2.3119, ptr %217, align 4
  %218 = getelementptr inbounds float, ptr %arg29, i32 %144
  store float %add.119, ptr %218, align 4
  %219 = getelementptr inbounds float, ptr %arg25, i32 %144
  store float %add.78, ptr %219, align 4
  %220 = getelementptr inbounds float, ptr %arg33, i32 %144
  store float %Arg_2.399, ptr %220, align 4
  %221 = getelementptr inbounds float, ptr %arg27, i32 %144
  store float %add.91, ptr %221, align 4
  %222 = getelementptr inbounds float, ptr %arg42, i32 %144
  store float %Arg_2.3117, ptr %222, align 4
  %223 = getelementptr inbounds float, ptr %arg44, i32 %144
  store float %Arg_2.3121, ptr %223, align 4
  %224 = mul i32 %tile_loop.indvar, 1024
  %225 = add i32 %224, 1
  %x_loc126 = add i32 %225, %132
  %226 = add i32 %tile_origin.1, %y_in_tile.indvar
  %227 = add i32 %tile_origin.2, %x_loc126
  %228 = mul nuw nsw i32 %227, 1
  %229 = add nuw nsw i32 0, %228
  %230 = mul nuw nsw i32 %226, 8192
  %231 = add nuw nsw i32 %229, %230
  %232 = mul nuw nsw i32 %tile_origin.0, 8192
  %233 = add nuw nsw i32 %231, %232
  %234 = udiv i32 %233, 1
  %235 = add i32 %234, 0
  %Arg_2.3127 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 2, i32 %235, i32 0
  %Arg_2.3128 = load float, ptr %Arg_2.3127, align 4, !invariant.load !297
  %Arg_1.2129 = getelementptr inbounds float, ptr %arg1, i32 %233
  %Arg_1.2130 = load float, ptr %Arg_1.2129, align 4, !invariant.load !297
  %multiply.19131 = fmul float %Arg_2.3128, %Arg_1.2130
  %region_0_183_constant_20132 = load float, ptr @81, align 4
  %Arg_1.2133 = getelementptr inbounds float, ptr %arg1, i32 %233
  %Arg_1.2134 = load float, ptr %Arg_1.2133, align 4, !invariant.load !297
  %subtract.22135 = fsub float %region_0_183_constant_20132, %Arg_1.2134
  %multiply.23136 = fmul float %multiply.19131, %subtract.22135
  %236 = add i32 %234, 0
  %Arg_0.1137 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %236, i32 0
  %Arg_0.1138 = load float, ptr %Arg_0.1137, align 4, !invariant.load !297
  %add.25139 = fadd float %multiply.23136, %Arg_0.1138
  store float %add.25139, ptr %reduction_input_address, align 4
  %237 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_28__2(ptr %237, ptr %reduction_input_address, ptr %return_buffer140)
  %238 = load float, ptr %return_buffer140, align 4
  store float %238, ptr %237, align 4
  %239 = add i32 %234, 0
  %Arg_2.3141 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 3, i32 %239, i32 0
  %Arg_2.3142 = load float, ptr %Arg_2.3141, align 4, !invariant.load !297
  %Arg_3.4143 = getelementptr inbounds float, ptr %arg3, i32 %233
  %Arg_3.4144 = load float, ptr %Arg_3.4143, align 4, !invariant.load !297
  %multiply.35145 = fmul float %Arg_2.3142, %Arg_3.4144
  %Arg_3.4146 = getelementptr inbounds float, ptr %arg3, i32 %233
  %Arg_3.4147 = load float, ptr %Arg_3.4146, align 4, !invariant.load !297
  %subtract.36148 = fsub float %region_0_183_constant_20132, %Arg_3.4147
  %multiply.37149 = fmul float %multiply.35145, %subtract.36148
  %240 = add i32 %234, 0
  %Arg_0.1150 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %240, i32 1
  %Arg_0.1151 = load float, ptr %Arg_0.1150, align 4, !invariant.load !297
  %add.39152 = fadd float %multiply.37149, %Arg_0.1151
  store float %add.39152, ptr %reduction_input_address1, align 4
  %241 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_41(ptr %241, ptr %reduction_input_address1, ptr %return_buffer153)
  %242 = load float, ptr %return_buffer153, align 4
  store float %242, ptr %241, align 4
  %243 = add i32 %234, 0
  %Arg_2.3154 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 5, i32 %243, i32 0
  %Arg_2.3155 = load float, ptr %Arg_2.3154, align 4, !invariant.load !297
  %Arg_4.5156 = getelementptr inbounds float, ptr %arg4, i32 %233
  %Arg_4.5157 = load float, ptr %Arg_4.5156, align 4, !invariant.load !297
  %multiply.48158 = fmul float %Arg_2.3155, %Arg_4.5157
  %Arg_4.5159 = getelementptr inbounds float, ptr %arg4, i32 %233
  %Arg_4.5160 = load float, ptr %Arg_4.5159, align 4, !invariant.load !297
  %subtract.49161 = fsub float %region_0_183_constant_20132, %Arg_4.5160
  %multiply.50162 = fmul float %multiply.48158, %subtract.49161
  %244 = add i32 %234, 0
  %Arg_0.1163 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %244, i32 3
  %Arg_0.1164 = load float, ptr %Arg_0.1163, align 4, !invariant.load !297
  %add.52165 = fadd float %multiply.50162, %Arg_0.1164
  store float %add.52165, ptr %reduction_input_address4, align 4
  %245 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  call void @region_3_54(ptr %245, ptr %reduction_input_address4, ptr %return_buffer166)
  %246 = load float, ptr %return_buffer166, align 4
  store float %246, ptr %245, align 4
  %247 = add i32 %234, 0
  %Arg_2.3167 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 12, i32 %247, i32 0
  %Arg_2.3168 = load float, ptr %Arg_2.3167, align 4, !invariant.load !297
  %Arg_5.6169 = getelementptr inbounds float, ptr %arg5, i32 %233
  %Arg_5.6170 = load float, ptr %Arg_5.6169, align 4, !invariant.load !297
  %multiply.61171 = fmul float %Arg_2.3168, %Arg_5.6170
  %Arg_5.6172 = getelementptr inbounds float, ptr %arg5, i32 %233
  %Arg_5.6173 = load float, ptr %Arg_5.6172, align 4, !invariant.load !297
  %subtract.62174 = fsub float %region_0_183_constant_20132, %Arg_5.6173
  %multiply.63175 = fmul float %multiply.61171, %subtract.62174
  %248 = add i32 %234, 0
  %Arg_0.1176 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %248, i32 7
  %Arg_0.1177 = load float, ptr %Arg_0.1176, align 4, !invariant.load !297
  %add.65178 = fadd float %multiply.63175, %Arg_0.1177
  store float %add.65178, ptr %reduction_input_address7, align 4
  %249 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  call void @region_4_67(ptr %249, ptr %reduction_input_address7, ptr %return_buffer179)
  %250 = load float, ptr %return_buffer179, align 4
  store float %250, ptr %249, align 4
  %251 = add i32 %234, 0
  %Arg_2.3180 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 13, i32 %251, i32 0
  %Arg_2.3181 = load float, ptr %Arg_2.3180, align 4, !invariant.load !297
  %Arg_6.7182 = getelementptr inbounds float, ptr %arg6, i32 %233
  %Arg_6.7183 = load float, ptr %Arg_6.7182, align 4, !invariant.load !297
  %multiply.74184 = fmul float %Arg_2.3181, %Arg_6.7183
  %Arg_6.7185 = getelementptr inbounds float, ptr %arg6, i32 %233
  %Arg_6.7186 = load float, ptr %Arg_6.7185, align 4, !invariant.load !297
  %subtract.75187 = fsub float %region_0_183_constant_20132, %Arg_6.7186
  %multiply.76188 = fmul float %multiply.74184, %subtract.75187
  %252 = add i32 %234, 0
  %Arg_0.1189 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %252, i32 8
  %Arg_0.1190 = load float, ptr %Arg_0.1189, align 4, !invariant.load !297
  %add.78191 = fadd float %multiply.76188, %Arg_0.1190
  store float %add.78191, ptr %reduction_input_address10, align 4
  %253 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  call void @region_5_80(ptr %253, ptr %reduction_input_address10, ptr %return_buffer192)
  %254 = load float, ptr %return_buffer192, align 4
  store float %254, ptr %253, align 4
  %255 = add i32 %234, 0
  %Arg_2.3193 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 14, i32 %255, i32 0
  %Arg_2.3194 = load float, ptr %Arg_2.3193, align 4, !invariant.load !297
  %Arg_7.8195 = getelementptr inbounds float, ptr %arg7, i32 %233
  %Arg_7.8196 = load float, ptr %Arg_7.8195, align 4, !invariant.load !297
  %multiply.87197 = fmul float %Arg_2.3194, %Arg_7.8196
  %Arg_7.8198 = getelementptr inbounds float, ptr %arg7, i32 %233
  %Arg_7.8199 = load float, ptr %Arg_7.8198, align 4, !invariant.load !297
  %subtract.88200 = fsub float %region_0_183_constant_20132, %Arg_7.8199
  %multiply.89201 = fmul float %multiply.87197, %subtract.88200
  %256 = add i32 %234, 0
  %Arg_0.1202 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %256, i32 9
  %Arg_0.1203 = load float, ptr %Arg_0.1202, align 4, !invariant.load !297
  %add.91204 = fadd float %multiply.89201, %Arg_0.1203
  store float %add.91204, ptr %reduction_input_address13, align 4
  %257 = getelementptr inbounds float, ptr %partial_reduction_result14, i32 0
  call void @region_6_93(ptr %257, ptr %reduction_input_address13, ptr %return_buffer205)
  %258 = load float, ptr %return_buffer205, align 4
  store float %258, ptr %257, align 4
  %259 = add i32 %234, 0
  %Arg_2.3206 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 54, i32 %259, i32 0
  %Arg_2.3207 = load float, ptr %Arg_2.3206, align 4, !invariant.load !297
  %260 = add i32 %234, 0
  %Arg_2.3208 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 55, i32 %260, i32 0
  %Arg_2.3209 = load float, ptr %Arg_2.3208, align 4, !invariant.load !297
  %add.100210 = fadd float %Arg_2.3207, %Arg_2.3209
  %261 = add i32 %234, 0
  %Arg_11.12211 = getelementptr inbounds [8192 x [20 x float]], ptr %arg11, i32 0, i32 %261, i32 17
  %Arg_11.12212 = load float, ptr %Arg_11.12211, align 4, !invariant.load !297
  %Arg_12.13213 = getelementptr inbounds [20 x float], ptr %arg12, i32 0, i32 17
  %Arg_12.13214 = load float, ptr %Arg_12.13213, align 4, !invariant.load !297
  %add.103215 = fadd float %Arg_11.12212, %Arg_12.13214
  %Arg_9.10216 = getelementptr inbounds float, ptr %arg9, i32 %233
  %Arg_9.10217 = load float, ptr %Arg_9.10216, align 4, !invariant.load !297
  %Arg_10.11218 = getelementptr inbounds float, ptr %arg10, i32 %233
  %Arg_10.11219 = load float, ptr %Arg_10.11218, align 4, !invariant.load !297
  %add.105220 = fadd float %Arg_9.10217, %Arg_10.11219
  %add.108221 = fadd float %add.105220, %Arg_8.977
  %add.110222 = fadd float %add.103215, %add.108221
  %262 = fneg float %add.110222
  %263 = call float @__nv_expf(float %262)
  %add.113223 = fadd float %region_0_183_constant_20132, %263
  %divide.114224 = fdiv float %region_0_183_constant_20132, %add.113223
  %multiply.115225 = fmul float %add.100210, %divide.114224
  %subtract.116226 = fsub float %region_0_183_constant_20132, %divide.114224
  %multiply.117227 = fmul float %multiply.115225, %subtract.116226
  %264 = add i32 %234, 0
  %Arg_0.1228 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %264, i32 17
  %Arg_0.1229 = load float, ptr %Arg_0.1228, align 4, !invariant.load !297
  %add.119230 = fadd float %multiply.117227, %Arg_0.1229
  store float %add.119230, ptr %reduction_input_address16, align 4
  %265 = getelementptr inbounds float, ptr %partial_reduction_result17, i32 0
  call void @region_7_121(ptr %265, ptr %reduction_input_address16, ptr %return_buffer231)
  %266 = load float, ptr %return_buffer231, align 4
  store float %266, ptr %265, align 4
  %267 = add i32 %234, 0
  %Arg_2.3232 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 56, i32 %267, i32 0
  %Arg_2.3233 = load float, ptr %Arg_2.3232, align 4, !invariant.load !297
  %268 = add i32 %234, 0
  %Arg_2.3234 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 57, i32 %268, i32 0
  %Arg_2.3235 = load float, ptr %Arg_2.3234, align 4, !invariant.load !297
  %add.128236 = fadd float %Arg_2.3233, %Arg_2.3235
  %Arg_14.15237 = getelementptr inbounds float, ptr %arg14, i32 %233
  %Arg_14.15238 = load float, ptr %Arg_14.15237, align 4, !invariant.load !297
  %Arg_15.16239 = getelementptr inbounds float, ptr %arg15, i32 %233
  %Arg_15.16240 = load float, ptr %Arg_15.16239, align 4, !invariant.load !297
  %add.130241 = fadd float %Arg_14.15238, %Arg_15.16240
  %add.133242 = fadd float %add.130241, %Arg_13.1487
  %269 = add i32 %234, 0
  %Arg_11.12243 = getelementptr inbounds [8192 x [20 x float]], ptr %arg11, i32 0, i32 %269, i32 19
  %Arg_11.12244 = load float, ptr %Arg_11.12243, align 4, !invariant.load !297
  %Arg_12.13245 = getelementptr inbounds [20 x float], ptr %arg12, i32 0, i32 19
  %Arg_12.13246 = load float, ptr %Arg_12.13245, align 4, !invariant.load !297
  %add.103247 = fadd float %Arg_11.12244, %Arg_12.13246
  %add.136248 = fadd float %add.133242, %add.103247
  %270 = fneg float %add.136248
  %271 = call float @__nv_expf(float %270)
  %add.139249 = fadd float %region_0_183_constant_20132, %271
  %divide.140250 = fdiv float %region_0_183_constant_20132, %add.139249
  %multiply.141251 = fmul float %add.128236, %divide.140250
  %subtract.142252 = fsub float %region_0_183_constant_20132, %divide.140250
  %multiply.143253 = fmul float %multiply.141251, %subtract.142252
  %272 = add i32 %234, 0
  %Arg_0.1254 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %272, i32 19
  %Arg_0.1255 = load float, ptr %Arg_0.1254, align 4, !invariant.load !297
  %add.145256 = fadd float %multiply.143253, %Arg_0.1255
  store float %add.145256, ptr %reduction_input_address19, align 4
  %273 = getelementptr inbounds float, ptr %partial_reduction_result20, i32 0
  call void @region_8_147(ptr %273, ptr %reduction_input_address19, ptr %return_buffer257)
  %274 = load float, ptr %return_buffer257, align 4
  store float %274, ptr %273, align 4
  %275 = add i32 %234, 0
  %Arg_2.3258 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 0, i32 %275, i32 0
  %Arg_2.3259 = load float, ptr %Arg_2.3258, align 4, !invariant.load !297
  %276 = add i32 %234, 0
  %Arg_2.3260 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 1, i32 %276, i32 0
  %Arg_2.3261 = load float, ptr %Arg_2.3260, align 4, !invariant.load !297
  %277 = add i32 %234, 0
  %Arg_2.3262 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 9, i32 %277, i32 0
  %Arg_2.3263 = load float, ptr %Arg_2.3262, align 4, !invariant.load !297
  %278 = add i32 %234, 0
  %Arg_2.3264 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 17, i32 %278, i32 0
  %Arg_2.3265 = load float, ptr %Arg_2.3264, align 4, !invariant.load !297
  %279 = add i32 %234, 0
  %Arg_2.3266 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 21, i32 %279, i32 0
  %Arg_2.3267 = load float, ptr %Arg_2.3266, align 4, !invariant.load !297
  %280 = add i32 %234, 0
  %Arg_2.3268 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 22, i32 %280, i32 0
  %Arg_2.3269 = load float, ptr %Arg_2.3268, align 4, !invariant.load !297
  %281 = add i32 %234, 0
  %Arg_2.3270 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 23, i32 %281, i32 0
  %Arg_2.3271 = load float, ptr %Arg_2.3270, align 4, !invariant.load !297
  %282 = add i32 %234, 0
  %Arg_2.3272 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 24, i32 %282, i32 0
  %Arg_2.3273 = load float, ptr %Arg_2.3272, align 4, !invariant.load !297
  %283 = add i32 %234, 0
  %Arg_2.3274 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 25, i32 %283, i32 0
  %Arg_2.3275 = load float, ptr %Arg_2.3274, align 4, !invariant.load !297
  %284 = add i32 %234, 0
  %Arg_2.3276 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 26, i32 %284, i32 0
  %Arg_2.3277 = load float, ptr %Arg_2.3276, align 4, !invariant.load !297
  %285 = add i32 %234, 0
  %Arg_2.3278 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 27, i32 %285, i32 0
  %Arg_2.3279 = load float, ptr %Arg_2.3278, align 4, !invariant.load !297
  %286 = add i32 %234, 0
  %Arg_2.3280 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 28, i32 %286, i32 0
  %Arg_2.3281 = load float, ptr %Arg_2.3280, align 4, !invariant.load !297
  %287 = add i32 %234, 0
  %Arg_2.3282 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 29, i32 %287, i32 0
  %Arg_2.3283 = load float, ptr %Arg_2.3282, align 4, !invariant.load !297
  %288 = add i32 %234, 0
  %Arg_2.3284 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 30, i32 %288, i32 0
  %Arg_2.3285 = load float, ptr %Arg_2.3284, align 4, !invariant.load !297
  %289 = add i32 %234, 0
  %Arg_2.3286 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 31, i32 %289, i32 0
  %Arg_2.3287 = load float, ptr %Arg_2.3286, align 4, !invariant.load !297
  %290 = getelementptr inbounds float, ptr %arg34, i32 %233
  store float %Arg_2.3263, ptr %290, align 4
  %291 = getelementptr inbounds float, ptr %arg31, i32 %233
  store float %add.145256, ptr %291, align 4
  %292 = getelementptr inbounds float, ptr %arg23, i32 %233
  store float %add.65178, ptr %292, align 4
  %293 = getelementptr inbounds float, ptr %arg45, i32 %233
  store float %Arg_2.3285, ptr %293, align 4
  %294 = getelementptr inbounds float, ptr %arg36, i32 %233
  store float %Arg_2.3267, ptr %294, align 4
  %295 = getelementptr inbounds float, ptr %arg37, i32 %233
  store float %Arg_2.3269, ptr %295, align 4
  %296 = getelementptr inbounds float, ptr %arg35, i32 %233
  store float %Arg_2.3265, ptr %296, align 4
  %297 = getelementptr inbounds float, ptr %arg17, i32 %233
  store float %add.25139, ptr %297, align 4
  %298 = getelementptr inbounds float, ptr %arg38, i32 %233
  store float %Arg_2.3271, ptr %298, align 4
  %299 = getelementptr inbounds float, ptr %arg39, i32 %233
  store float %Arg_2.3273, ptr %299, align 4
  %300 = getelementptr inbounds float, ptr %arg40, i32 %233
  store float %Arg_2.3275, ptr %300, align 4
  %301 = getelementptr inbounds float, ptr %arg32, i32 %233
  store float %Arg_2.3259, ptr %301, align 4
  %302 = getelementptr inbounds float, ptr %arg21, i32 %233
  store float %add.52165, ptr %302, align 4
  %303 = getelementptr inbounds float, ptr %arg41, i32 %233
  store float %Arg_2.3277, ptr %303, align 4
  %304 = getelementptr inbounds float, ptr %arg46, i32 %233
  store float %Arg_2.3287, ptr %304, align 4
  %305 = getelementptr inbounds float, ptr %arg19, i32 %233
  store float %add.39152, ptr %305, align 4
  %306 = getelementptr inbounds float, ptr %arg43, i32 %233
  store float %Arg_2.3281, ptr %306, align 4
  %307 = getelementptr inbounds float, ptr %arg29, i32 %233
  store float %add.119230, ptr %307, align 4
  %308 = getelementptr inbounds float, ptr %arg25, i32 %233
  store float %add.78191, ptr %308, align 4
  %309 = getelementptr inbounds float, ptr %arg33, i32 %233
  store float %Arg_2.3261, ptr %309, align 4
  %310 = getelementptr inbounds float, ptr %arg27, i32 %233
  store float %add.91204, ptr %310, align 4
  %311 = getelementptr inbounds float, ptr %arg42, i32 %233
  store float %Arg_2.3279, ptr %311, align 4
  %312 = getelementptr inbounds float, ptr %arg44, i32 %233
  store float %Arg_2.3283, ptr %312, align 4
  br label %tile_loop.loop_header, !llvm.loop !469

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %is_full_tile-after

is_full_tile-false:                               ; preds = %y_in_tile.loop_body
  %313 = mul i32 %thread_id.x, 2
  store i32 0, ptr %tile_loop.invar_address291, align 4
  br label %tile_loop.loop_header289

tile_loop.loop_header289:                         ; preds = %x_in_tile-after462, %is_full_tile-false
  %tile_loop.indvar292 = load i32, ptr %tile_loop.invar_address291, align 4
  %314 = icmp uge i32 %tile_loop.indvar292, 8
  br i1 %314, label %tile_loop.loop_exit288, label %tile_loop.loop_body290

tile_loop.loop_body290:                           ; preds = %tile_loop.loop_header289
  %invar.inc293 = add nuw nsw i32 %tile_loop.indvar292, 1
  store i32 %invar.inc293, ptr %tile_loop.invar_address291, align 4
  %315 = icmp eq i32 %tile_loop.indvar292, 0
  %316 = mul i32 %tile_loop.indvar292, 1024
  %317 = add i32 %316, 0
  %x_loc294 = add i32 %317, %313
  %318 = add i32 %tile_origin.1, %y_in_tile.indvar
  %319 = add i32 %tile_origin.2, %x_loc294
  %320 = icmp ult i32 %x_loc294, %tile_bound22
  br i1 %320, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body290
  %321 = mul i32 %tile_loop.indvar292, 1024
  %322 = add i32 %321, 1
  %x_loc460 = add i32 %322, %313
  %323 = add i32 %tile_origin.1, %y_in_tile.indvar
  %324 = add i32 %tile_origin.2, %x_loc460
  %325 = icmp ult i32 %x_loc460, %tile_bound22
  br i1 %325, label %x_in_tile-true461, label %x_in_tile-after462

x_in_tile-after462:                               ; preds = %x_in_tile-true461, %x_in_tile-after
  br label %tile_loop.loop_header289, !llvm.loop !470

tile_loop.loop_exit288:                           ; preds = %tile_loop.loop_header289
  br label %is_full_tile-after

x_in_tile-true:                                   ; preds = %tile_loop.loop_body290
  %326 = mul nuw nsw i32 %319, 1
  %327 = add nuw nsw i32 0, %326
  %328 = mul nuw nsw i32 %318, 8192
  %329 = add nuw nsw i32 %327, %328
  %330 = mul nuw nsw i32 %tile_origin.0, 8192
  %331 = add nuw nsw i32 %329, %330
  %332 = udiv i32 %331, 1
  %333 = add i32 %332, 0
  %Arg_2.3295 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 2, i32 %333, i32 0
  %Arg_2.3296 = load float, ptr %Arg_2.3295, align 4, !invariant.load !297
  %Arg_1.2297 = getelementptr inbounds float, ptr %arg1, i32 %331
  %Arg_1.2298 = load float, ptr %Arg_1.2297, align 4, !invariant.load !297
  %multiply.19299 = fmul float %Arg_2.3296, %Arg_1.2298
  %region_0_183_constant_20300 = load float, ptr @81, align 4
  %Arg_1.2301 = getelementptr inbounds float, ptr %arg1, i32 %331
  %Arg_1.2302 = load float, ptr %Arg_1.2301, align 4, !invariant.load !297
  %subtract.22303 = fsub float %region_0_183_constant_20300, %Arg_1.2302
  %multiply.23304 = fmul float %multiply.19299, %subtract.22303
  %334 = add i32 %332, 0
  %Arg_0.1305 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %334, i32 0
  %Arg_0.1306 = load float, ptr %Arg_0.1305, align 4, !invariant.load !297
  %add.25307 = fadd float %multiply.23304, %Arg_0.1306
  store float %add.25307, ptr %reduction_input_address, align 4
  %335 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_28__2(ptr %335, ptr %reduction_input_address, ptr %return_buffer308)
  %336 = load float, ptr %return_buffer308, align 4
  store float %336, ptr %335, align 4
  %337 = add i32 %332, 0
  %Arg_2.3309 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 3, i32 %337, i32 0
  %Arg_2.3310 = load float, ptr %Arg_2.3309, align 4, !invariant.load !297
  %Arg_3.4311 = getelementptr inbounds float, ptr %arg3, i32 %331
  %Arg_3.4312 = load float, ptr %Arg_3.4311, align 4, !invariant.load !297
  %multiply.35313 = fmul float %Arg_2.3310, %Arg_3.4312
  %Arg_3.4314 = getelementptr inbounds float, ptr %arg3, i32 %331
  %Arg_3.4315 = load float, ptr %Arg_3.4314, align 4, !invariant.load !297
  %subtract.36316 = fsub float %region_0_183_constant_20300, %Arg_3.4315
  %multiply.37317 = fmul float %multiply.35313, %subtract.36316
  %338 = add i32 %332, 0
  %Arg_0.1318 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %338, i32 1
  %Arg_0.1319 = load float, ptr %Arg_0.1318, align 4, !invariant.load !297
  %add.39320 = fadd float %multiply.37317, %Arg_0.1319
  store float %add.39320, ptr %reduction_input_address1, align 4
  %339 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_41(ptr %339, ptr %reduction_input_address1, ptr %return_buffer321)
  %340 = load float, ptr %return_buffer321, align 4
  store float %340, ptr %339, align 4
  %341 = add i32 %332, 0
  %Arg_2.3322 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 5, i32 %341, i32 0
  %Arg_2.3323 = load float, ptr %Arg_2.3322, align 4, !invariant.load !297
  %Arg_4.5324 = getelementptr inbounds float, ptr %arg4, i32 %331
  %Arg_4.5325 = load float, ptr %Arg_4.5324, align 4, !invariant.load !297
  %multiply.48326 = fmul float %Arg_2.3323, %Arg_4.5325
  %Arg_4.5327 = getelementptr inbounds float, ptr %arg4, i32 %331
  %Arg_4.5328 = load float, ptr %Arg_4.5327, align 4, !invariant.load !297
  %subtract.49329 = fsub float %region_0_183_constant_20300, %Arg_4.5328
  %multiply.50330 = fmul float %multiply.48326, %subtract.49329
  %342 = add i32 %332, 0
  %Arg_0.1331 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %342, i32 3
  %Arg_0.1332 = load float, ptr %Arg_0.1331, align 4, !invariant.load !297
  %add.52333 = fadd float %multiply.50330, %Arg_0.1332
  store float %add.52333, ptr %reduction_input_address4, align 4
  %343 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  call void @region_3_54(ptr %343, ptr %reduction_input_address4, ptr %return_buffer334)
  %344 = load float, ptr %return_buffer334, align 4
  store float %344, ptr %343, align 4
  %345 = add i32 %332, 0
  %Arg_2.3335 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 12, i32 %345, i32 0
  %Arg_2.3336 = load float, ptr %Arg_2.3335, align 4, !invariant.load !297
  %Arg_5.6337 = getelementptr inbounds float, ptr %arg5, i32 %331
  %Arg_5.6338 = load float, ptr %Arg_5.6337, align 4, !invariant.load !297
  %multiply.61339 = fmul float %Arg_2.3336, %Arg_5.6338
  %Arg_5.6340 = getelementptr inbounds float, ptr %arg5, i32 %331
  %Arg_5.6341 = load float, ptr %Arg_5.6340, align 4, !invariant.load !297
  %subtract.62342 = fsub float %region_0_183_constant_20300, %Arg_5.6341
  %multiply.63343 = fmul float %multiply.61339, %subtract.62342
  %346 = add i32 %332, 0
  %Arg_0.1344 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %346, i32 7
  %Arg_0.1345 = load float, ptr %Arg_0.1344, align 4, !invariant.load !297
  %add.65346 = fadd float %multiply.63343, %Arg_0.1345
  store float %add.65346, ptr %reduction_input_address7, align 4
  %347 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  call void @region_4_67(ptr %347, ptr %reduction_input_address7, ptr %return_buffer347)
  %348 = load float, ptr %return_buffer347, align 4
  store float %348, ptr %347, align 4
  %349 = add i32 %332, 0
  %Arg_2.3348 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 13, i32 %349, i32 0
  %Arg_2.3349 = load float, ptr %Arg_2.3348, align 4, !invariant.load !297
  %Arg_6.7350 = getelementptr inbounds float, ptr %arg6, i32 %331
  %Arg_6.7351 = load float, ptr %Arg_6.7350, align 4, !invariant.load !297
  %multiply.74352 = fmul float %Arg_2.3349, %Arg_6.7351
  %Arg_6.7353 = getelementptr inbounds float, ptr %arg6, i32 %331
  %Arg_6.7354 = load float, ptr %Arg_6.7353, align 4, !invariant.load !297
  %subtract.75355 = fsub float %region_0_183_constant_20300, %Arg_6.7354
  %multiply.76356 = fmul float %multiply.74352, %subtract.75355
  %350 = add i32 %332, 0
  %Arg_0.1357 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %350, i32 8
  %Arg_0.1358 = load float, ptr %Arg_0.1357, align 4, !invariant.load !297
  %add.78359 = fadd float %multiply.76356, %Arg_0.1358
  store float %add.78359, ptr %reduction_input_address10, align 4
  %351 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  call void @region_5_80(ptr %351, ptr %reduction_input_address10, ptr %return_buffer360)
  %352 = load float, ptr %return_buffer360, align 4
  store float %352, ptr %351, align 4
  %353 = add i32 %332, 0
  %Arg_2.3361 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 14, i32 %353, i32 0
  %Arg_2.3362 = load float, ptr %Arg_2.3361, align 4, !invariant.load !297
  %Arg_7.8363 = getelementptr inbounds float, ptr %arg7, i32 %331
  %Arg_7.8364 = load float, ptr %Arg_7.8363, align 4, !invariant.load !297
  %multiply.87365 = fmul float %Arg_2.3362, %Arg_7.8364
  %Arg_7.8366 = getelementptr inbounds float, ptr %arg7, i32 %331
  %Arg_7.8367 = load float, ptr %Arg_7.8366, align 4, !invariant.load !297
  %subtract.88368 = fsub float %region_0_183_constant_20300, %Arg_7.8367
  %multiply.89369 = fmul float %multiply.87365, %subtract.88368
  %354 = add i32 %332, 0
  %Arg_0.1370 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %354, i32 9
  %Arg_0.1371 = load float, ptr %Arg_0.1370, align 4, !invariant.load !297
  %add.91372 = fadd float %multiply.89369, %Arg_0.1371
  store float %add.91372, ptr %reduction_input_address13, align 4
  %355 = getelementptr inbounds float, ptr %partial_reduction_result14, i32 0
  call void @region_6_93(ptr %355, ptr %reduction_input_address13, ptr %return_buffer373)
  %356 = load float, ptr %return_buffer373, align 4
  store float %356, ptr %355, align 4
  %357 = add i32 %332, 0
  %Arg_2.3374 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 54, i32 %357, i32 0
  %Arg_2.3375 = load float, ptr %Arg_2.3374, align 4, !invariant.load !297
  %358 = add i32 %332, 0
  %Arg_2.3376 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 55, i32 %358, i32 0
  %Arg_2.3377 = load float, ptr %Arg_2.3376, align 4, !invariant.load !297
  %add.100378 = fadd float %Arg_2.3375, %Arg_2.3377
  %359 = add i32 %332, 0
  %Arg_11.12379 = getelementptr inbounds [8192 x [20 x float]], ptr %arg11, i32 0, i32 %359, i32 17
  %Arg_11.12380 = load float, ptr %Arg_11.12379, align 4, !invariant.load !297
  %Arg_12.13381 = getelementptr inbounds [20 x float], ptr %arg12, i32 0, i32 17
  %Arg_12.13382 = load float, ptr %Arg_12.13381, align 4, !invariant.load !297
  %add.103383 = fadd float %Arg_11.12380, %Arg_12.13382
  %Arg_9.10384 = getelementptr inbounds float, ptr %arg9, i32 %331
  %Arg_9.10385 = load float, ptr %Arg_9.10384, align 4, !invariant.load !297
  %Arg_10.11386 = getelementptr inbounds float, ptr %arg10, i32 %331
  %Arg_10.11387 = load float, ptr %Arg_10.11386, align 4, !invariant.load !297
  %add.105388 = fadd float %Arg_9.10385, %Arg_10.11387
  %Arg_8.9389 = getelementptr inbounds [1 x float], ptr %arg8, i32 0, i32 0
  %Arg_8.9390 = load float, ptr %Arg_8.9389, align 4, !invariant.load !297
  %add.108391 = fadd float %add.105388, %Arg_8.9390
  %add.110392 = fadd float %add.103383, %add.108391
  %360 = fneg float %add.110392
  %361 = call float @__nv_expf(float %360)
  %add.113393 = fadd float %region_0_183_constant_20300, %361
  %divide.114394 = fdiv float %region_0_183_constant_20300, %add.113393
  %multiply.115395 = fmul float %add.100378, %divide.114394
  %subtract.116396 = fsub float %region_0_183_constant_20300, %divide.114394
  %multiply.117397 = fmul float %multiply.115395, %subtract.116396
  %362 = add i32 %332, 0
  %Arg_0.1398 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %362, i32 17
  %Arg_0.1399 = load float, ptr %Arg_0.1398, align 4, !invariant.load !297
  %add.119400 = fadd float %multiply.117397, %Arg_0.1399
  store float %add.119400, ptr %reduction_input_address16, align 4
  %363 = getelementptr inbounds float, ptr %partial_reduction_result17, i32 0
  call void @region_7_121(ptr %363, ptr %reduction_input_address16, ptr %return_buffer401)
  %364 = load float, ptr %return_buffer401, align 4
  store float %364, ptr %363, align 4
  %365 = add i32 %332, 0
  %Arg_2.3402 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 56, i32 %365, i32 0
  %Arg_2.3403 = load float, ptr %Arg_2.3402, align 4, !invariant.load !297
  %366 = add i32 %332, 0
  %Arg_2.3404 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 57, i32 %366, i32 0
  %Arg_2.3405 = load float, ptr %Arg_2.3404, align 4, !invariant.load !297
  %add.128406 = fadd float %Arg_2.3403, %Arg_2.3405
  %Arg_14.15407 = getelementptr inbounds float, ptr %arg14, i32 %331
  %Arg_14.15408 = load float, ptr %Arg_14.15407, align 4, !invariant.load !297
  %Arg_15.16409 = getelementptr inbounds float, ptr %arg15, i32 %331
  %Arg_15.16410 = load float, ptr %Arg_15.16409, align 4, !invariant.load !297
  %add.130411 = fadd float %Arg_14.15408, %Arg_15.16410
  %Arg_13.14412 = getelementptr inbounds [1 x float], ptr %arg13, i32 0, i32 0
  %Arg_13.14413 = load float, ptr %Arg_13.14412, align 4, !invariant.load !297
  %add.133414 = fadd float %add.130411, %Arg_13.14413
  %367 = add i32 %332, 0
  %Arg_11.12415 = getelementptr inbounds [8192 x [20 x float]], ptr %arg11, i32 0, i32 %367, i32 19
  %Arg_11.12416 = load float, ptr %Arg_11.12415, align 4, !invariant.load !297
  %Arg_12.13417 = getelementptr inbounds [20 x float], ptr %arg12, i32 0, i32 19
  %Arg_12.13418 = load float, ptr %Arg_12.13417, align 4, !invariant.load !297
  %add.103419 = fadd float %Arg_11.12416, %Arg_12.13418
  %add.136420 = fadd float %add.133414, %add.103419
  %368 = fneg float %add.136420
  %369 = call float @__nv_expf(float %368)
  %add.139421 = fadd float %region_0_183_constant_20300, %369
  %divide.140422 = fdiv float %region_0_183_constant_20300, %add.139421
  %multiply.141423 = fmul float %add.128406, %divide.140422
  %subtract.142424 = fsub float %region_0_183_constant_20300, %divide.140422
  %multiply.143425 = fmul float %multiply.141423, %subtract.142424
  %370 = add i32 %332, 0
  %Arg_0.1426 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %370, i32 19
  %Arg_0.1427 = load float, ptr %Arg_0.1426, align 4, !invariant.load !297
  %add.145428 = fadd float %multiply.143425, %Arg_0.1427
  store float %add.145428, ptr %reduction_input_address19, align 4
  %371 = getelementptr inbounds float, ptr %partial_reduction_result20, i32 0
  call void @region_8_147(ptr %371, ptr %reduction_input_address19, ptr %return_buffer429)
  %372 = load float, ptr %return_buffer429, align 4
  store float %372, ptr %371, align 4
  %373 = add i32 %332, 0
  %Arg_2.3430 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 0, i32 %373, i32 0
  %Arg_2.3431 = load float, ptr %Arg_2.3430, align 4, !invariant.load !297
  %374 = add i32 %332, 0
  %Arg_2.3432 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 1, i32 %374, i32 0
  %Arg_2.3433 = load float, ptr %Arg_2.3432, align 4, !invariant.load !297
  %375 = add i32 %332, 0
  %Arg_2.3434 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 9, i32 %375, i32 0
  %Arg_2.3435 = load float, ptr %Arg_2.3434, align 4, !invariant.load !297
  %376 = add i32 %332, 0
  %Arg_2.3436 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 17, i32 %376, i32 0
  %Arg_2.3437 = load float, ptr %Arg_2.3436, align 4, !invariant.load !297
  %377 = add i32 %332, 0
  %Arg_2.3438 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 21, i32 %377, i32 0
  %Arg_2.3439 = load float, ptr %Arg_2.3438, align 4, !invariant.load !297
  %378 = add i32 %332, 0
  %Arg_2.3440 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 22, i32 %378, i32 0
  %Arg_2.3441 = load float, ptr %Arg_2.3440, align 4, !invariant.load !297
  %379 = add i32 %332, 0
  %Arg_2.3442 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 23, i32 %379, i32 0
  %Arg_2.3443 = load float, ptr %Arg_2.3442, align 4, !invariant.load !297
  %380 = add i32 %332, 0
  %Arg_2.3444 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 24, i32 %380, i32 0
  %Arg_2.3445 = load float, ptr %Arg_2.3444, align 4, !invariant.load !297
  %381 = add i32 %332, 0
  %Arg_2.3446 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 25, i32 %381, i32 0
  %Arg_2.3447 = load float, ptr %Arg_2.3446, align 4, !invariant.load !297
  %382 = add i32 %332, 0
  %Arg_2.3448 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 26, i32 %382, i32 0
  %Arg_2.3449 = load float, ptr %Arg_2.3448, align 4, !invariant.load !297
  %383 = add i32 %332, 0
  %Arg_2.3450 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 27, i32 %383, i32 0
  %Arg_2.3451 = load float, ptr %Arg_2.3450, align 4, !invariant.load !297
  %384 = add i32 %332, 0
  %Arg_2.3452 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 28, i32 %384, i32 0
  %Arg_2.3453 = load float, ptr %Arg_2.3452, align 4, !invariant.load !297
  %385 = add i32 %332, 0
  %Arg_2.3454 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 29, i32 %385, i32 0
  %Arg_2.3455 = load float, ptr %Arg_2.3454, align 4, !invariant.load !297
  %386 = add i32 %332, 0
  %Arg_2.3456 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 30, i32 %386, i32 0
  %Arg_2.3457 = load float, ptr %Arg_2.3456, align 4, !invariant.load !297
  %387 = add i32 %332, 0
  %Arg_2.3458 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 31, i32 %387, i32 0
  %Arg_2.3459 = load float, ptr %Arg_2.3458, align 4, !invariant.load !297
  %388 = getelementptr inbounds float, ptr %arg34, i32 %331
  store float %Arg_2.3435, ptr %388, align 4
  %389 = getelementptr inbounds float, ptr %arg31, i32 %331
  store float %add.145428, ptr %389, align 4
  %390 = getelementptr inbounds float, ptr %arg23, i32 %331
  store float %add.65346, ptr %390, align 4
  %391 = getelementptr inbounds float, ptr %arg45, i32 %331
  store float %Arg_2.3457, ptr %391, align 4
  %392 = getelementptr inbounds float, ptr %arg36, i32 %331
  store float %Arg_2.3439, ptr %392, align 4
  %393 = getelementptr inbounds float, ptr %arg37, i32 %331
  store float %Arg_2.3441, ptr %393, align 4
  %394 = getelementptr inbounds float, ptr %arg35, i32 %331
  store float %Arg_2.3437, ptr %394, align 4
  %395 = getelementptr inbounds float, ptr %arg17, i32 %331
  store float %add.25307, ptr %395, align 4
  %396 = getelementptr inbounds float, ptr %arg38, i32 %331
  store float %Arg_2.3443, ptr %396, align 4
  %397 = getelementptr inbounds float, ptr %arg39, i32 %331
  store float %Arg_2.3445, ptr %397, align 4
  %398 = getelementptr inbounds float, ptr %arg40, i32 %331
  store float %Arg_2.3447, ptr %398, align 4
  %399 = getelementptr inbounds float, ptr %arg32, i32 %331
  store float %Arg_2.3431, ptr %399, align 4
  %400 = getelementptr inbounds float, ptr %arg21, i32 %331
  store float %add.52333, ptr %400, align 4
  %401 = getelementptr inbounds float, ptr %arg41, i32 %331
  store float %Arg_2.3449, ptr %401, align 4
  %402 = getelementptr inbounds float, ptr %arg46, i32 %331
  store float %Arg_2.3459, ptr %402, align 4
  %403 = getelementptr inbounds float, ptr %arg19, i32 %331
  store float %add.39320, ptr %403, align 4
  %404 = getelementptr inbounds float, ptr %arg43, i32 %331
  store float %Arg_2.3453, ptr %404, align 4
  %405 = getelementptr inbounds float, ptr %arg29, i32 %331
  store float %add.119400, ptr %405, align 4
  %406 = getelementptr inbounds float, ptr %arg25, i32 %331
  store float %add.78359, ptr %406, align 4
  %407 = getelementptr inbounds float, ptr %arg33, i32 %331
  store float %Arg_2.3433, ptr %407, align 4
  %408 = getelementptr inbounds float, ptr %arg27, i32 %331
  store float %add.91372, ptr %408, align 4
  %409 = getelementptr inbounds float, ptr %arg42, i32 %331
  store float %Arg_2.3451, ptr %409, align 4
  %410 = getelementptr inbounds float, ptr %arg44, i32 %331
  store float %Arg_2.3455, ptr %410, align 4
  br label %x_in_tile-after

x_in_tile-true461:                                ; preds = %x_in_tile-after
  %411 = mul nuw nsw i32 %324, 1
  %412 = add nuw nsw i32 0, %411
  %413 = mul nuw nsw i32 %323, 8192
  %414 = add nuw nsw i32 %412, %413
  %415 = mul nuw nsw i32 %tile_origin.0, 8192
  %416 = add nuw nsw i32 %414, %415
  %417 = udiv i32 %416, 1
  %418 = add i32 %417, 0
  %Arg_2.3463 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 2, i32 %418, i32 0
  %Arg_2.3464 = load float, ptr %Arg_2.3463, align 4, !invariant.load !297
  %Arg_1.2465 = getelementptr inbounds float, ptr %arg1, i32 %416
  %Arg_1.2466 = load float, ptr %Arg_1.2465, align 4, !invariant.load !297
  %multiply.19467 = fmul float %Arg_2.3464, %Arg_1.2466
  %region_0_183_constant_20468 = load float, ptr @81, align 4
  %Arg_1.2469 = getelementptr inbounds float, ptr %arg1, i32 %416
  %Arg_1.2470 = load float, ptr %Arg_1.2469, align 4, !invariant.load !297
  %subtract.22471 = fsub float %region_0_183_constant_20468, %Arg_1.2470
  %multiply.23472 = fmul float %multiply.19467, %subtract.22471
  %419 = add i32 %417, 0
  %Arg_0.1473 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %419, i32 0
  %Arg_0.1474 = load float, ptr %Arg_0.1473, align 4, !invariant.load !297
  %add.25475 = fadd float %multiply.23472, %Arg_0.1474
  store float %add.25475, ptr %reduction_input_address, align 4
  %420 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  call void @region_1_28__2(ptr %420, ptr %reduction_input_address, ptr %return_buffer476)
  %421 = load float, ptr %return_buffer476, align 4
  store float %421, ptr %420, align 4
  %422 = add i32 %417, 0
  %Arg_2.3477 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 3, i32 %422, i32 0
  %Arg_2.3478 = load float, ptr %Arg_2.3477, align 4, !invariant.load !297
  %Arg_3.4479 = getelementptr inbounds float, ptr %arg3, i32 %416
  %Arg_3.4480 = load float, ptr %Arg_3.4479, align 4, !invariant.load !297
  %multiply.35481 = fmul float %Arg_2.3478, %Arg_3.4480
  %Arg_3.4482 = getelementptr inbounds float, ptr %arg3, i32 %416
  %Arg_3.4483 = load float, ptr %Arg_3.4482, align 4, !invariant.load !297
  %subtract.36484 = fsub float %region_0_183_constant_20468, %Arg_3.4483
  %multiply.37485 = fmul float %multiply.35481, %subtract.36484
  %423 = add i32 %417, 0
  %Arg_0.1486 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %423, i32 1
  %Arg_0.1487 = load float, ptr %Arg_0.1486, align 4, !invariant.load !297
  %add.39488 = fadd float %multiply.37485, %Arg_0.1487
  store float %add.39488, ptr %reduction_input_address1, align 4
  %424 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  call void @region_2_41(ptr %424, ptr %reduction_input_address1, ptr %return_buffer489)
  %425 = load float, ptr %return_buffer489, align 4
  store float %425, ptr %424, align 4
  %426 = add i32 %417, 0
  %Arg_2.3490 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 5, i32 %426, i32 0
  %Arg_2.3491 = load float, ptr %Arg_2.3490, align 4, !invariant.load !297
  %Arg_4.5492 = getelementptr inbounds float, ptr %arg4, i32 %416
  %Arg_4.5493 = load float, ptr %Arg_4.5492, align 4, !invariant.load !297
  %multiply.48494 = fmul float %Arg_2.3491, %Arg_4.5493
  %Arg_4.5495 = getelementptr inbounds float, ptr %arg4, i32 %416
  %Arg_4.5496 = load float, ptr %Arg_4.5495, align 4, !invariant.load !297
  %subtract.49497 = fsub float %region_0_183_constant_20468, %Arg_4.5496
  %multiply.50498 = fmul float %multiply.48494, %subtract.49497
  %427 = add i32 %417, 0
  %Arg_0.1499 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %427, i32 3
  %Arg_0.1500 = load float, ptr %Arg_0.1499, align 4, !invariant.load !297
  %add.52501 = fadd float %multiply.50498, %Arg_0.1500
  store float %add.52501, ptr %reduction_input_address4, align 4
  %428 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  call void @region_3_54(ptr %428, ptr %reduction_input_address4, ptr %return_buffer502)
  %429 = load float, ptr %return_buffer502, align 4
  store float %429, ptr %428, align 4
  %430 = add i32 %417, 0
  %Arg_2.3503 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 12, i32 %430, i32 0
  %Arg_2.3504 = load float, ptr %Arg_2.3503, align 4, !invariant.load !297
  %Arg_5.6505 = getelementptr inbounds float, ptr %arg5, i32 %416
  %Arg_5.6506 = load float, ptr %Arg_5.6505, align 4, !invariant.load !297
  %multiply.61507 = fmul float %Arg_2.3504, %Arg_5.6506
  %Arg_5.6508 = getelementptr inbounds float, ptr %arg5, i32 %416
  %Arg_5.6509 = load float, ptr %Arg_5.6508, align 4, !invariant.load !297
  %subtract.62510 = fsub float %region_0_183_constant_20468, %Arg_5.6509
  %multiply.63511 = fmul float %multiply.61507, %subtract.62510
  %431 = add i32 %417, 0
  %Arg_0.1512 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %431, i32 7
  %Arg_0.1513 = load float, ptr %Arg_0.1512, align 4, !invariant.load !297
  %add.65514 = fadd float %multiply.63511, %Arg_0.1513
  store float %add.65514, ptr %reduction_input_address7, align 4
  %432 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  call void @region_4_67(ptr %432, ptr %reduction_input_address7, ptr %return_buffer515)
  %433 = load float, ptr %return_buffer515, align 4
  store float %433, ptr %432, align 4
  %434 = add i32 %417, 0
  %Arg_2.3516 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 13, i32 %434, i32 0
  %Arg_2.3517 = load float, ptr %Arg_2.3516, align 4, !invariant.load !297
  %Arg_6.7518 = getelementptr inbounds float, ptr %arg6, i32 %416
  %Arg_6.7519 = load float, ptr %Arg_6.7518, align 4, !invariant.load !297
  %multiply.74520 = fmul float %Arg_2.3517, %Arg_6.7519
  %Arg_6.7521 = getelementptr inbounds float, ptr %arg6, i32 %416
  %Arg_6.7522 = load float, ptr %Arg_6.7521, align 4, !invariant.load !297
  %subtract.75523 = fsub float %region_0_183_constant_20468, %Arg_6.7522
  %multiply.76524 = fmul float %multiply.74520, %subtract.75523
  %435 = add i32 %417, 0
  %Arg_0.1525 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %435, i32 8
  %Arg_0.1526 = load float, ptr %Arg_0.1525, align 4, !invariant.load !297
  %add.78527 = fadd float %multiply.76524, %Arg_0.1526
  store float %add.78527, ptr %reduction_input_address10, align 4
  %436 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  call void @region_5_80(ptr %436, ptr %reduction_input_address10, ptr %return_buffer528)
  %437 = load float, ptr %return_buffer528, align 4
  store float %437, ptr %436, align 4
  %438 = add i32 %417, 0
  %Arg_2.3529 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 14, i32 %438, i32 0
  %Arg_2.3530 = load float, ptr %Arg_2.3529, align 4, !invariant.load !297
  %Arg_7.8531 = getelementptr inbounds float, ptr %arg7, i32 %416
  %Arg_7.8532 = load float, ptr %Arg_7.8531, align 4, !invariant.load !297
  %multiply.87533 = fmul float %Arg_2.3530, %Arg_7.8532
  %Arg_7.8534 = getelementptr inbounds float, ptr %arg7, i32 %416
  %Arg_7.8535 = load float, ptr %Arg_7.8534, align 4, !invariant.load !297
  %subtract.88536 = fsub float %region_0_183_constant_20468, %Arg_7.8535
  %multiply.89537 = fmul float %multiply.87533, %subtract.88536
  %439 = add i32 %417, 0
  %Arg_0.1538 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %439, i32 9
  %Arg_0.1539 = load float, ptr %Arg_0.1538, align 4, !invariant.load !297
  %add.91540 = fadd float %multiply.89537, %Arg_0.1539
  store float %add.91540, ptr %reduction_input_address13, align 4
  %440 = getelementptr inbounds float, ptr %partial_reduction_result14, i32 0
  call void @region_6_93(ptr %440, ptr %reduction_input_address13, ptr %return_buffer541)
  %441 = load float, ptr %return_buffer541, align 4
  store float %441, ptr %440, align 4
  %442 = add i32 %417, 0
  %Arg_2.3542 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 54, i32 %442, i32 0
  %Arg_2.3543 = load float, ptr %Arg_2.3542, align 4, !invariant.load !297
  %443 = add i32 %417, 0
  %Arg_2.3544 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 55, i32 %443, i32 0
  %Arg_2.3545 = load float, ptr %Arg_2.3544, align 4, !invariant.load !297
  %add.100546 = fadd float %Arg_2.3543, %Arg_2.3545
  %444 = add i32 %417, 0
  %Arg_11.12547 = getelementptr inbounds [8192 x [20 x float]], ptr %arg11, i32 0, i32 %444, i32 17
  %Arg_11.12548 = load float, ptr %Arg_11.12547, align 4, !invariant.load !297
  %Arg_12.13549 = getelementptr inbounds [20 x float], ptr %arg12, i32 0, i32 17
  %Arg_12.13550 = load float, ptr %Arg_12.13549, align 4, !invariant.load !297
  %add.103551 = fadd float %Arg_11.12548, %Arg_12.13550
  %Arg_9.10552 = getelementptr inbounds float, ptr %arg9, i32 %416
  %Arg_9.10553 = load float, ptr %Arg_9.10552, align 4, !invariant.load !297
  %Arg_10.11554 = getelementptr inbounds float, ptr %arg10, i32 %416
  %Arg_10.11555 = load float, ptr %Arg_10.11554, align 4, !invariant.load !297
  %add.105556 = fadd float %Arg_9.10553, %Arg_10.11555
  %Arg_8.9557 = getelementptr inbounds [1 x float], ptr %arg8, i32 0, i32 0
  %Arg_8.9558 = load float, ptr %Arg_8.9557, align 4, !invariant.load !297
  %add.108559 = fadd float %add.105556, %Arg_8.9558
  %add.110560 = fadd float %add.103551, %add.108559
  %445 = fneg float %add.110560
  %446 = call float @__nv_expf(float %445)
  %add.113561 = fadd float %region_0_183_constant_20468, %446
  %divide.114562 = fdiv float %region_0_183_constant_20468, %add.113561
  %multiply.115563 = fmul float %add.100546, %divide.114562
  %subtract.116564 = fsub float %region_0_183_constant_20468, %divide.114562
  %multiply.117565 = fmul float %multiply.115563, %subtract.116564
  %447 = add i32 %417, 0
  %Arg_0.1566 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %447, i32 17
  %Arg_0.1567 = load float, ptr %Arg_0.1566, align 4, !invariant.load !297
  %add.119568 = fadd float %multiply.117565, %Arg_0.1567
  store float %add.119568, ptr %reduction_input_address16, align 4
  %448 = getelementptr inbounds float, ptr %partial_reduction_result17, i32 0
  call void @region_7_121(ptr %448, ptr %reduction_input_address16, ptr %return_buffer569)
  %449 = load float, ptr %return_buffer569, align 4
  store float %449, ptr %448, align 4
  %450 = add i32 %417, 0
  %Arg_2.3570 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 56, i32 %450, i32 0
  %Arg_2.3571 = load float, ptr %Arg_2.3570, align 4, !invariant.load !297
  %451 = add i32 %417, 0
  %Arg_2.3572 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 57, i32 %451, i32 0
  %Arg_2.3573 = load float, ptr %Arg_2.3572, align 4, !invariant.load !297
  %add.128574 = fadd float %Arg_2.3571, %Arg_2.3573
  %Arg_14.15575 = getelementptr inbounds float, ptr %arg14, i32 %416
  %Arg_14.15576 = load float, ptr %Arg_14.15575, align 4, !invariant.load !297
  %Arg_15.16577 = getelementptr inbounds float, ptr %arg15, i32 %416
  %Arg_15.16578 = load float, ptr %Arg_15.16577, align 4, !invariant.load !297
  %add.130579 = fadd float %Arg_14.15576, %Arg_15.16578
  %Arg_13.14580 = getelementptr inbounds [1 x float], ptr %arg13, i32 0, i32 0
  %Arg_13.14581 = load float, ptr %Arg_13.14580, align 4, !invariant.load !297
  %add.133582 = fadd float %add.130579, %Arg_13.14581
  %452 = add i32 %417, 0
  %Arg_11.12583 = getelementptr inbounds [8192 x [20 x float]], ptr %arg11, i32 0, i32 %452, i32 19
  %Arg_11.12584 = load float, ptr %Arg_11.12583, align 4, !invariant.load !297
  %Arg_12.13585 = getelementptr inbounds [20 x float], ptr %arg12, i32 0, i32 19
  %Arg_12.13586 = load float, ptr %Arg_12.13585, align 4, !invariant.load !297
  %add.103587 = fadd float %Arg_11.12584, %Arg_12.13586
  %add.136588 = fadd float %add.133582, %add.103587
  %453 = fneg float %add.136588
  %454 = call float @__nv_expf(float %453)
  %add.139589 = fadd float %region_0_183_constant_20468, %454
  %divide.140590 = fdiv float %region_0_183_constant_20468, %add.139589
  %multiply.141591 = fmul float %add.128574, %divide.140590
  %subtract.142592 = fsub float %region_0_183_constant_20468, %divide.140590
  %multiply.143593 = fmul float %multiply.141591, %subtract.142592
  %455 = add i32 %417, 0
  %Arg_0.1594 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %455, i32 19
  %Arg_0.1595 = load float, ptr %Arg_0.1594, align 4, !invariant.load !297
  %add.145596 = fadd float %multiply.143593, %Arg_0.1595
  store float %add.145596, ptr %reduction_input_address19, align 4
  %456 = getelementptr inbounds float, ptr %partial_reduction_result20, i32 0
  call void @region_8_147(ptr %456, ptr %reduction_input_address19, ptr %return_buffer597)
  %457 = load float, ptr %return_buffer597, align 4
  store float %457, ptr %456, align 4
  %458 = add i32 %417, 0
  %Arg_2.3598 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 0, i32 %458, i32 0
  %Arg_2.3599 = load float, ptr %Arg_2.3598, align 4, !invariant.load !297
  %459 = add i32 %417, 0
  %Arg_2.3600 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 1, i32 %459, i32 0
  %Arg_2.3601 = load float, ptr %Arg_2.3600, align 4, !invariant.load !297
  %460 = add i32 %417, 0
  %Arg_2.3602 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 9, i32 %460, i32 0
  %Arg_2.3603 = load float, ptr %Arg_2.3602, align 4, !invariant.load !297
  %461 = add i32 %417, 0
  %Arg_2.3604 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 17, i32 %461, i32 0
  %Arg_2.3605 = load float, ptr %Arg_2.3604, align 4, !invariant.load !297
  %462 = add i32 %417, 0
  %Arg_2.3606 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 21, i32 %462, i32 0
  %Arg_2.3607 = load float, ptr %Arg_2.3606, align 4, !invariant.load !297
  %463 = add i32 %417, 0
  %Arg_2.3608 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 22, i32 %463, i32 0
  %Arg_2.3609 = load float, ptr %Arg_2.3608, align 4, !invariant.load !297
  %464 = add i32 %417, 0
  %Arg_2.3610 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 23, i32 %464, i32 0
  %Arg_2.3611 = load float, ptr %Arg_2.3610, align 4, !invariant.load !297
  %465 = add i32 %417, 0
  %Arg_2.3612 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 24, i32 %465, i32 0
  %Arg_2.3613 = load float, ptr %Arg_2.3612, align 4, !invariant.load !297
  %466 = add i32 %417, 0
  %Arg_2.3614 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 25, i32 %466, i32 0
  %Arg_2.3615 = load float, ptr %Arg_2.3614, align 4, !invariant.load !297
  %467 = add i32 %417, 0
  %Arg_2.3616 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 26, i32 %467, i32 0
  %Arg_2.3617 = load float, ptr %Arg_2.3616, align 4, !invariant.load !297
  %468 = add i32 %417, 0
  %Arg_2.3618 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 27, i32 %468, i32 0
  %Arg_2.3619 = load float, ptr %Arg_2.3618, align 4, !invariant.load !297
  %469 = add i32 %417, 0
  %Arg_2.3620 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 28, i32 %469, i32 0
  %Arg_2.3621 = load float, ptr %Arg_2.3620, align 4, !invariant.load !297
  %470 = add i32 %417, 0
  %Arg_2.3622 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 29, i32 %470, i32 0
  %Arg_2.3623 = load float, ptr %Arg_2.3622, align 4, !invariant.load !297
  %471 = add i32 %417, 0
  %Arg_2.3624 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 30, i32 %471, i32 0
  %Arg_2.3625 = load float, ptr %Arg_2.3624, align 4, !invariant.load !297
  %472 = add i32 %417, 0
  %Arg_2.3626 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 31, i32 %472, i32 0
  %Arg_2.3627 = load float, ptr %Arg_2.3626, align 4, !invariant.load !297
  %473 = getelementptr inbounds float, ptr %arg34, i32 %416
  store float %Arg_2.3603, ptr %473, align 4
  %474 = getelementptr inbounds float, ptr %arg31, i32 %416
  store float %add.145596, ptr %474, align 4
  %475 = getelementptr inbounds float, ptr %arg23, i32 %416
  store float %add.65514, ptr %475, align 4
  %476 = getelementptr inbounds float, ptr %arg45, i32 %416
  store float %Arg_2.3625, ptr %476, align 4
  %477 = getelementptr inbounds float, ptr %arg36, i32 %416
  store float %Arg_2.3607, ptr %477, align 4
  %478 = getelementptr inbounds float, ptr %arg37, i32 %416
  store float %Arg_2.3609, ptr %478, align 4
  %479 = getelementptr inbounds float, ptr %arg35, i32 %416
  store float %Arg_2.3605, ptr %479, align 4
  %480 = getelementptr inbounds float, ptr %arg17, i32 %416
  store float %add.25475, ptr %480, align 4
  %481 = getelementptr inbounds float, ptr %arg38, i32 %416
  store float %Arg_2.3611, ptr %481, align 4
  %482 = getelementptr inbounds float, ptr %arg39, i32 %416
  store float %Arg_2.3613, ptr %482, align 4
  %483 = getelementptr inbounds float, ptr %arg40, i32 %416
  store float %Arg_2.3615, ptr %483, align 4
  %484 = getelementptr inbounds float, ptr %arg32, i32 %416
  store float %Arg_2.3599, ptr %484, align 4
  %485 = getelementptr inbounds float, ptr %arg21, i32 %416
  store float %add.52501, ptr %485, align 4
  %486 = getelementptr inbounds float, ptr %arg41, i32 %416
  store float %Arg_2.3617, ptr %486, align 4
  %487 = getelementptr inbounds float, ptr %arg46, i32 %416
  store float %Arg_2.3627, ptr %487, align 4
  %488 = getelementptr inbounds float, ptr %arg19, i32 %416
  store float %add.39488, ptr %488, align 4
  %489 = getelementptr inbounds float, ptr %arg43, i32 %416
  store float %Arg_2.3621, ptr %489, align 4
  %490 = getelementptr inbounds float, ptr %arg29, i32 %416
  store float %add.119568, ptr %490, align 4
  %491 = getelementptr inbounds float, ptr %arg25, i32 %416
  store float %add.78527, ptr %491, align 4
  %492 = getelementptr inbounds float, ptr %arg33, i32 %416
  store float %Arg_2.3601, ptr %492, align 4
  %493 = getelementptr inbounds float, ptr %arg27, i32 %416
  store float %add.91540, ptr %493, align 4
  %494 = getelementptr inbounds float, ptr %arg42, i32 %416
  store float %Arg_2.3619, ptr %494, align 4
  %495 = getelementptr inbounds float, ptr %arg44, i32 %416
  store float %Arg_2.3623, ptr %495, align 4
  br label %x_in_tile-after462

intra_warp_reduce_write-true:                     ; preds = %y_in_tile.loop_exit
  %496 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache102, i32 0, i32 %13, i32 0, i32 %38
  %497 = addrspacecast ptr addrspace(3) %496 to ptr
  %498 = load float, ptr %current_output, align 4
  store float %498, ptr %497, align 4
  br label %intra_warp_reduce_write-after

inter_warp_reduce-true:                           ; preds = %intra_warp_reduce_write-after
  %499 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache102, i32 0, i32 %13, i32 0, i32 %lane_id
  %500 = addrspacecast ptr addrspace(3) %499 to ptr
  store float %region_0_183_constant_27, ptr %initial_value_addr, align 4
  %501 = icmp ult i32 %thread_id.x, 16
  %502 = select i1 %501, ptr %500, ptr %initial_value_addr
  %partial_reduction_result643 = load float, ptr %502, align 4
  %503 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result643, i32 16, i32 31)
  store float %503, ptr %result_from_other_lane642, align 4
  call void @region_1_28__2(ptr %502, ptr %result_from_other_lane642, ptr %return_buffer644)
  %504 = load float, ptr %return_buffer644, align 4
  store float %504, ptr %502, align 4
  %partial_reduction_result646 = load float, ptr %502, align 4
  %505 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result646, i32 8, i32 31)
  store float %505, ptr %result_from_other_lane645, align 4
  call void @region_1_28__2(ptr %502, ptr %result_from_other_lane645, ptr %return_buffer647)
  %506 = load float, ptr %return_buffer647, align 4
  store float %506, ptr %502, align 4
  %partial_reduction_result649 = load float, ptr %502, align 4
  %507 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result649, i32 4, i32 31)
  store float %507, ptr %result_from_other_lane648, align 4
  call void @region_1_28__2(ptr %502, ptr %result_from_other_lane648, ptr %return_buffer650)
  %508 = load float, ptr %return_buffer650, align 4
  store float %508, ptr %502, align 4
  %partial_reduction_result652 = load float, ptr %502, align 4
  %509 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result652, i32 2, i32 31)
  store float %509, ptr %result_from_other_lane651, align 4
  call void @region_1_28__2(ptr %502, ptr %result_from_other_lane651, ptr %return_buffer653)
  %510 = load float, ptr %return_buffer653, align 4
  store float %510, ptr %502, align 4
  %partial_reduction_result655 = load float, ptr %502, align 4
  %511 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result655, i32 1, i32 31)
  store float %511, ptr %result_from_other_lane654, align 4
  call void @region_1_28__2(ptr %502, ptr %result_from_other_lane654, ptr %return_buffer656)
  %512 = load float, ptr %return_buffer656, align 4
  store float %512, ptr %502, align 4
  %513 = icmp eq i32 %thread_id.x, 0
  br i1 %513, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %inter_warp_reduce-true
  br label %inter_warp_reduce-after

reduction_write_output-true:                      ; preds = %inter_warp_reduce-true
  %514 = mul i32 %thread_id.x, 2
  %515 = add i32 %tile_origin.1, %thread_id.y
  %516 = add i32 %tile_origin.2, %514
  %517 = add i32 %516, 0
  %output = load float, ptr %502, align 4
  store float %output, ptr %arg16, align 4
  br label %reduction_write_output-after

intra_warp_reduce_write-true673:                  ; preds = %inter_warp_reduce-after
  %518 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache103, i32 0, i32 %13, i32 0, i32 %51
  %519 = addrspacecast ptr addrspace(3) %518 to ptr
  %520 = load float, ptr %current_output657, align 4
  store float %520, ptr %519, align 4
  br label %intra_warp_reduce_write-after674

inter_warp_reduce-true675:                        ; preds = %intra_warp_reduce_write-after674
  %521 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache103, i32 0, i32 %13, i32 0, i32 %lane_id
  %522 = addrspacecast ptr addrspace(3) %521 to ptr
  store float %region_0_183_constant_273, ptr %initial_value_addr677, align 4
  %523 = icmp ult i32 %thread_id.x, 16
  %524 = select i1 %523, ptr %522, ptr %initial_value_addr677
  %partial_reduction_result679 = load float, ptr %524, align 4
  %525 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result679, i32 16, i32 31)
  store float %525, ptr %result_from_other_lane678, align 4
  call void @region_2_41(ptr %524, ptr %result_from_other_lane678, ptr %return_buffer680)
  %526 = load float, ptr %return_buffer680, align 4
  store float %526, ptr %524, align 4
  %partial_reduction_result682 = load float, ptr %524, align 4
  %527 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result682, i32 8, i32 31)
  store float %527, ptr %result_from_other_lane681, align 4
  call void @region_2_41(ptr %524, ptr %result_from_other_lane681, ptr %return_buffer683)
  %528 = load float, ptr %return_buffer683, align 4
  store float %528, ptr %524, align 4
  %partial_reduction_result685 = load float, ptr %524, align 4
  %529 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result685, i32 4, i32 31)
  store float %529, ptr %result_from_other_lane684, align 4
  call void @region_2_41(ptr %524, ptr %result_from_other_lane684, ptr %return_buffer686)
  %530 = load float, ptr %return_buffer686, align 4
  store float %530, ptr %524, align 4
  %partial_reduction_result688 = load float, ptr %524, align 4
  %531 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result688, i32 2, i32 31)
  store float %531, ptr %result_from_other_lane687, align 4
  call void @region_2_41(ptr %524, ptr %result_from_other_lane687, ptr %return_buffer689)
  %532 = load float, ptr %return_buffer689, align 4
  store float %532, ptr %524, align 4
  %partial_reduction_result691 = load float, ptr %524, align 4
  %533 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result691, i32 1, i32 31)
  store float %533, ptr %result_from_other_lane690, align 4
  call void @region_2_41(ptr %524, ptr %result_from_other_lane690, ptr %return_buffer692)
  %534 = load float, ptr %return_buffer692, align 4
  store float %534, ptr %524, align 4
  %535 = icmp eq i32 %thread_id.x, 0
  br i1 %535, label %reduction_write_output-true693, label %reduction_write_output-after694

reduction_write_output-after694:                  ; preds = %reduction_write_output-true693, %inter_warp_reduce-true675
  br label %inter_warp_reduce-after676

reduction_write_output-true693:                   ; preds = %inter_warp_reduce-true675
  %536 = mul i32 %thread_id.x, 2
  %537 = add i32 %tile_origin.1, %thread_id.y
  %538 = add i32 %tile_origin.2, %536
  %539 = add i32 %538, 0
  %output695 = load float, ptr %524, align 4
  store float %output695, ptr %arg18, align 4
  br label %reduction_write_output-after694

intra_warp_reduce_write-true712:                  ; preds = %inter_warp_reduce-after676
  %540 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache104, i32 0, i32 %13, i32 0, i32 %64
  %541 = addrspacecast ptr addrspace(3) %540 to ptr
  %542 = load float, ptr %current_output696, align 4
  store float %542, ptr %541, align 4
  br label %intra_warp_reduce_write-after713

inter_warp_reduce-true714:                        ; preds = %intra_warp_reduce_write-after713
  %543 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache104, i32 0, i32 %13, i32 0, i32 %lane_id
  %544 = addrspacecast ptr addrspace(3) %543 to ptr
  store float %region_0_183_constant_276, ptr %initial_value_addr716, align 4
  %545 = icmp ult i32 %thread_id.x, 16
  %546 = select i1 %545, ptr %544, ptr %initial_value_addr716
  %partial_reduction_result718 = load float, ptr %546, align 4
  %547 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result718, i32 16, i32 31)
  store float %547, ptr %result_from_other_lane717, align 4
  call void @region_3_54(ptr %546, ptr %result_from_other_lane717, ptr %return_buffer719)
  %548 = load float, ptr %return_buffer719, align 4
  store float %548, ptr %546, align 4
  %partial_reduction_result721 = load float, ptr %546, align 4
  %549 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result721, i32 8, i32 31)
  store float %549, ptr %result_from_other_lane720, align 4
  call void @region_3_54(ptr %546, ptr %result_from_other_lane720, ptr %return_buffer722)
  %550 = load float, ptr %return_buffer722, align 4
  store float %550, ptr %546, align 4
  %partial_reduction_result724 = load float, ptr %546, align 4
  %551 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result724, i32 4, i32 31)
  store float %551, ptr %result_from_other_lane723, align 4
  call void @region_3_54(ptr %546, ptr %result_from_other_lane723, ptr %return_buffer725)
  %552 = load float, ptr %return_buffer725, align 4
  store float %552, ptr %546, align 4
  %partial_reduction_result727 = load float, ptr %546, align 4
  %553 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result727, i32 2, i32 31)
  store float %553, ptr %result_from_other_lane726, align 4
  call void @region_3_54(ptr %546, ptr %result_from_other_lane726, ptr %return_buffer728)
  %554 = load float, ptr %return_buffer728, align 4
  store float %554, ptr %546, align 4
  %partial_reduction_result730 = load float, ptr %546, align 4
  %555 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result730, i32 1, i32 31)
  store float %555, ptr %result_from_other_lane729, align 4
  call void @region_3_54(ptr %546, ptr %result_from_other_lane729, ptr %return_buffer731)
  %556 = load float, ptr %return_buffer731, align 4
  store float %556, ptr %546, align 4
  %557 = icmp eq i32 %thread_id.x, 0
  br i1 %557, label %reduction_write_output-true732, label %reduction_write_output-after733

reduction_write_output-after733:                  ; preds = %reduction_write_output-true732, %inter_warp_reduce-true714
  br label %inter_warp_reduce-after715

reduction_write_output-true732:                   ; preds = %inter_warp_reduce-true714
  %558 = mul i32 %thread_id.x, 2
  %559 = add i32 %tile_origin.1, %thread_id.y
  %560 = add i32 %tile_origin.2, %558
  %561 = add i32 %560, 0
  %output734 = load float, ptr %546, align 4
  store float %output734, ptr %arg20, align 4
  br label %reduction_write_output-after733

intra_warp_reduce_write-true751:                  ; preds = %inter_warp_reduce-after715
  %562 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache105, i32 0, i32 %13, i32 0, i32 %77
  %563 = addrspacecast ptr addrspace(3) %562 to ptr
  %564 = load float, ptr %current_output735, align 4
  store float %564, ptr %563, align 4
  br label %intra_warp_reduce_write-after752

inter_warp_reduce-true753:                        ; preds = %intra_warp_reduce_write-after752
  %565 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache105, i32 0, i32 %13, i32 0, i32 %lane_id
  %566 = addrspacecast ptr addrspace(3) %565 to ptr
  store float %region_0_183_constant_279, ptr %initial_value_addr755, align 4
  %567 = icmp ult i32 %thread_id.x, 16
  %568 = select i1 %567, ptr %566, ptr %initial_value_addr755
  %partial_reduction_result757 = load float, ptr %568, align 4
  %569 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result757, i32 16, i32 31)
  store float %569, ptr %result_from_other_lane756, align 4
  call void @region_4_67(ptr %568, ptr %result_from_other_lane756, ptr %return_buffer758)
  %570 = load float, ptr %return_buffer758, align 4
  store float %570, ptr %568, align 4
  %partial_reduction_result760 = load float, ptr %568, align 4
  %571 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result760, i32 8, i32 31)
  store float %571, ptr %result_from_other_lane759, align 4
  call void @region_4_67(ptr %568, ptr %result_from_other_lane759, ptr %return_buffer761)
  %572 = load float, ptr %return_buffer761, align 4
  store float %572, ptr %568, align 4
  %partial_reduction_result763 = load float, ptr %568, align 4
  %573 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result763, i32 4, i32 31)
  store float %573, ptr %result_from_other_lane762, align 4
  call void @region_4_67(ptr %568, ptr %result_from_other_lane762, ptr %return_buffer764)
  %574 = load float, ptr %return_buffer764, align 4
  store float %574, ptr %568, align 4
  %partial_reduction_result766 = load float, ptr %568, align 4
  %575 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result766, i32 2, i32 31)
  store float %575, ptr %result_from_other_lane765, align 4
  call void @region_4_67(ptr %568, ptr %result_from_other_lane765, ptr %return_buffer767)
  %576 = load float, ptr %return_buffer767, align 4
  store float %576, ptr %568, align 4
  %partial_reduction_result769 = load float, ptr %568, align 4
  %577 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result769, i32 1, i32 31)
  store float %577, ptr %result_from_other_lane768, align 4
  call void @region_4_67(ptr %568, ptr %result_from_other_lane768, ptr %return_buffer770)
  %578 = load float, ptr %return_buffer770, align 4
  store float %578, ptr %568, align 4
  %579 = icmp eq i32 %thread_id.x, 0
  br i1 %579, label %reduction_write_output-true771, label %reduction_write_output-after772

reduction_write_output-after772:                  ; preds = %reduction_write_output-true771, %inter_warp_reduce-true753
  br label %inter_warp_reduce-after754

reduction_write_output-true771:                   ; preds = %inter_warp_reduce-true753
  %580 = mul i32 %thread_id.x, 2
  %581 = add i32 %tile_origin.1, %thread_id.y
  %582 = add i32 %tile_origin.2, %580
  %583 = add i32 %582, 0
  %output773 = load float, ptr %568, align 4
  store float %output773, ptr %arg22, align 4
  br label %reduction_write_output-after772

intra_warp_reduce_write-true790:                  ; preds = %inter_warp_reduce-after754
  %584 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache106, i32 0, i32 %13, i32 0, i32 %90
  %585 = addrspacecast ptr addrspace(3) %584 to ptr
  %586 = load float, ptr %current_output774, align 4
  store float %586, ptr %585, align 4
  br label %intra_warp_reduce_write-after791

inter_warp_reduce-true792:                        ; preds = %intra_warp_reduce_write-after791
  %587 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache106, i32 0, i32 %13, i32 0, i32 %lane_id
  %588 = addrspacecast ptr addrspace(3) %587 to ptr
  store float %region_0_183_constant_2712, ptr %initial_value_addr794, align 4
  %589 = icmp ult i32 %thread_id.x, 16
  %590 = select i1 %589, ptr %588, ptr %initial_value_addr794
  %partial_reduction_result796 = load float, ptr %590, align 4
  %591 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result796, i32 16, i32 31)
  store float %591, ptr %result_from_other_lane795, align 4
  call void @region_5_80(ptr %590, ptr %result_from_other_lane795, ptr %return_buffer797)
  %592 = load float, ptr %return_buffer797, align 4
  store float %592, ptr %590, align 4
  %partial_reduction_result799 = load float, ptr %590, align 4
  %593 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result799, i32 8, i32 31)
  store float %593, ptr %result_from_other_lane798, align 4
  call void @region_5_80(ptr %590, ptr %result_from_other_lane798, ptr %return_buffer800)
  %594 = load float, ptr %return_buffer800, align 4
  store float %594, ptr %590, align 4
  %partial_reduction_result802 = load float, ptr %590, align 4
  %595 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result802, i32 4, i32 31)
  store float %595, ptr %result_from_other_lane801, align 4
  call void @region_5_80(ptr %590, ptr %result_from_other_lane801, ptr %return_buffer803)
  %596 = load float, ptr %return_buffer803, align 4
  store float %596, ptr %590, align 4
  %partial_reduction_result805 = load float, ptr %590, align 4
  %597 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result805, i32 2, i32 31)
  store float %597, ptr %result_from_other_lane804, align 4
  call void @region_5_80(ptr %590, ptr %result_from_other_lane804, ptr %return_buffer806)
  %598 = load float, ptr %return_buffer806, align 4
  store float %598, ptr %590, align 4
  %partial_reduction_result808 = load float, ptr %590, align 4
  %599 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result808, i32 1, i32 31)
  store float %599, ptr %result_from_other_lane807, align 4
  call void @region_5_80(ptr %590, ptr %result_from_other_lane807, ptr %return_buffer809)
  %600 = load float, ptr %return_buffer809, align 4
  store float %600, ptr %590, align 4
  %601 = icmp eq i32 %thread_id.x, 0
  br i1 %601, label %reduction_write_output-true810, label %reduction_write_output-after811

reduction_write_output-after811:                  ; preds = %reduction_write_output-true810, %inter_warp_reduce-true792
  br label %inter_warp_reduce-after793

reduction_write_output-true810:                   ; preds = %inter_warp_reduce-true792
  %602 = mul i32 %thread_id.x, 2
  %603 = add i32 %tile_origin.1, %thread_id.y
  %604 = add i32 %tile_origin.2, %602
  %605 = add i32 %604, 0
  %output812 = load float, ptr %590, align 4
  store float %output812, ptr %arg24, align 4
  br label %reduction_write_output-after811

intra_warp_reduce_write-true829:                  ; preds = %inter_warp_reduce-after793
  %606 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache107, i32 0, i32 %13, i32 0, i32 %103
  %607 = addrspacecast ptr addrspace(3) %606 to ptr
  %608 = load float, ptr %current_output813, align 4
  store float %608, ptr %607, align 4
  br label %intra_warp_reduce_write-after830

inter_warp_reduce-true831:                        ; preds = %intra_warp_reduce_write-after830
  %609 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache107, i32 0, i32 %13, i32 0, i32 %lane_id
  %610 = addrspacecast ptr addrspace(3) %609 to ptr
  store float %region_0_183_constant_2715, ptr %initial_value_addr833, align 4
  %611 = icmp ult i32 %thread_id.x, 16
  %612 = select i1 %611, ptr %610, ptr %initial_value_addr833
  %partial_reduction_result835 = load float, ptr %612, align 4
  %613 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result835, i32 16, i32 31)
  store float %613, ptr %result_from_other_lane834, align 4
  call void @region_6_93(ptr %612, ptr %result_from_other_lane834, ptr %return_buffer836)
  %614 = load float, ptr %return_buffer836, align 4
  store float %614, ptr %612, align 4
  %partial_reduction_result838 = load float, ptr %612, align 4
  %615 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result838, i32 8, i32 31)
  store float %615, ptr %result_from_other_lane837, align 4
  call void @region_6_93(ptr %612, ptr %result_from_other_lane837, ptr %return_buffer839)
  %616 = load float, ptr %return_buffer839, align 4
  store float %616, ptr %612, align 4
  %partial_reduction_result841 = load float, ptr %612, align 4
  %617 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result841, i32 4, i32 31)
  store float %617, ptr %result_from_other_lane840, align 4
  call void @region_6_93(ptr %612, ptr %result_from_other_lane840, ptr %return_buffer842)
  %618 = load float, ptr %return_buffer842, align 4
  store float %618, ptr %612, align 4
  %partial_reduction_result844 = load float, ptr %612, align 4
  %619 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result844, i32 2, i32 31)
  store float %619, ptr %result_from_other_lane843, align 4
  call void @region_6_93(ptr %612, ptr %result_from_other_lane843, ptr %return_buffer845)
  %620 = load float, ptr %return_buffer845, align 4
  store float %620, ptr %612, align 4
  %partial_reduction_result847 = load float, ptr %612, align 4
  %621 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result847, i32 1, i32 31)
  store float %621, ptr %result_from_other_lane846, align 4
  call void @region_6_93(ptr %612, ptr %result_from_other_lane846, ptr %return_buffer848)
  %622 = load float, ptr %return_buffer848, align 4
  store float %622, ptr %612, align 4
  %623 = icmp eq i32 %thread_id.x, 0
  br i1 %623, label %reduction_write_output-true849, label %reduction_write_output-after850

reduction_write_output-after850:                  ; preds = %reduction_write_output-true849, %inter_warp_reduce-true831
  br label %inter_warp_reduce-after832

reduction_write_output-true849:                   ; preds = %inter_warp_reduce-true831
  %624 = mul i32 %thread_id.x, 2
  %625 = add i32 %tile_origin.1, %thread_id.y
  %626 = add i32 %tile_origin.2, %624
  %627 = add i32 %626, 0
  %output851 = load float, ptr %612, align 4
  store float %output851, ptr %arg26, align 4
  br label %reduction_write_output-after850

intra_warp_reduce_write-true868:                  ; preds = %inter_warp_reduce-after832
  %628 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache108, i32 0, i32 %13, i32 0, i32 %116
  %629 = addrspacecast ptr addrspace(3) %628 to ptr
  %630 = load float, ptr %current_output852, align 4
  store float %630, ptr %629, align 4
  br label %intra_warp_reduce_write-after869

inter_warp_reduce-true870:                        ; preds = %intra_warp_reduce_write-after869
  %631 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache108, i32 0, i32 %13, i32 0, i32 %lane_id
  %632 = addrspacecast ptr addrspace(3) %631 to ptr
  store float %region_0_183_constant_2718, ptr %initial_value_addr872, align 4
  %633 = icmp ult i32 %thread_id.x, 16
  %634 = select i1 %633, ptr %632, ptr %initial_value_addr872
  %partial_reduction_result874 = load float, ptr %634, align 4
  %635 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result874, i32 16, i32 31)
  store float %635, ptr %result_from_other_lane873, align 4
  call void @region_7_121(ptr %634, ptr %result_from_other_lane873, ptr %return_buffer875)
  %636 = load float, ptr %return_buffer875, align 4
  store float %636, ptr %634, align 4
  %partial_reduction_result877 = load float, ptr %634, align 4
  %637 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result877, i32 8, i32 31)
  store float %637, ptr %result_from_other_lane876, align 4
  call void @region_7_121(ptr %634, ptr %result_from_other_lane876, ptr %return_buffer878)
  %638 = load float, ptr %return_buffer878, align 4
  store float %638, ptr %634, align 4
  %partial_reduction_result880 = load float, ptr %634, align 4
  %639 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result880, i32 4, i32 31)
  store float %639, ptr %result_from_other_lane879, align 4
  call void @region_7_121(ptr %634, ptr %result_from_other_lane879, ptr %return_buffer881)
  %640 = load float, ptr %return_buffer881, align 4
  store float %640, ptr %634, align 4
  %partial_reduction_result883 = load float, ptr %634, align 4
  %641 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result883, i32 2, i32 31)
  store float %641, ptr %result_from_other_lane882, align 4
  call void @region_7_121(ptr %634, ptr %result_from_other_lane882, ptr %return_buffer884)
  %642 = load float, ptr %return_buffer884, align 4
  store float %642, ptr %634, align 4
  %partial_reduction_result886 = load float, ptr %634, align 4
  %643 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result886, i32 1, i32 31)
  store float %643, ptr %result_from_other_lane885, align 4
  call void @region_7_121(ptr %634, ptr %result_from_other_lane885, ptr %return_buffer887)
  %644 = load float, ptr %return_buffer887, align 4
  store float %644, ptr %634, align 4
  %645 = icmp eq i32 %thread_id.x, 0
  br i1 %645, label %reduction_write_output-true888, label %reduction_write_output-after889

reduction_write_output-after889:                  ; preds = %reduction_write_output-true888, %inter_warp_reduce-true870
  br label %inter_warp_reduce-after871

reduction_write_output-true888:                   ; preds = %inter_warp_reduce-true870
  %646 = mul i32 %thread_id.x, 2
  %647 = add i32 %tile_origin.1, %thread_id.y
  %648 = add i32 %tile_origin.2, %646
  %649 = add i32 %648, 0
  %output890 = load float, ptr %634, align 4
  store float %output890, ptr %arg28, align 4
  br label %reduction_write_output-after889

intra_warp_reduce_write-true907:                  ; preds = %inter_warp_reduce-after871
  %650 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache109, i32 0, i32 %13, i32 0, i32 %129
  %651 = addrspacecast ptr addrspace(3) %650 to ptr
  %652 = load float, ptr %current_output891, align 4
  store float %652, ptr %651, align 4
  br label %intra_warp_reduce_write-after908

inter_warp_reduce-true909:                        ; preds = %intra_warp_reduce_write-after908
  %653 = getelementptr inbounds [1 x [1 x [16 x float]]], ptr addrspace(3) @shared_cache109, i32 0, i32 %13, i32 0, i32 %lane_id
  %654 = addrspacecast ptr addrspace(3) %653 to ptr
  store float %region_0_183_constant_2721, ptr %initial_value_addr911, align 4
  %655 = icmp ult i32 %thread_id.x, 16
  %656 = select i1 %655, ptr %654, ptr %initial_value_addr911
  %partial_reduction_result913 = load float, ptr %656, align 4
  %657 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result913, i32 16, i32 31)
  store float %657, ptr %result_from_other_lane912, align 4
  call void @region_8_147(ptr %656, ptr %result_from_other_lane912, ptr %return_buffer914)
  %658 = load float, ptr %return_buffer914, align 4
  store float %658, ptr %656, align 4
  %partial_reduction_result916 = load float, ptr %656, align 4
  %659 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result916, i32 8, i32 31)
  store float %659, ptr %result_from_other_lane915, align 4
  call void @region_8_147(ptr %656, ptr %result_from_other_lane915, ptr %return_buffer917)
  %660 = load float, ptr %return_buffer917, align 4
  store float %660, ptr %656, align 4
  %partial_reduction_result919 = load float, ptr %656, align 4
  %661 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result919, i32 4, i32 31)
  store float %661, ptr %result_from_other_lane918, align 4
  call void @region_8_147(ptr %656, ptr %result_from_other_lane918, ptr %return_buffer920)
  %662 = load float, ptr %return_buffer920, align 4
  store float %662, ptr %656, align 4
  %partial_reduction_result922 = load float, ptr %656, align 4
  %663 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result922, i32 2, i32 31)
  store float %663, ptr %result_from_other_lane921, align 4
  call void @region_8_147(ptr %656, ptr %result_from_other_lane921, ptr %return_buffer923)
  %664 = load float, ptr %return_buffer923, align 4
  store float %664, ptr %656, align 4
  %partial_reduction_result925 = load float, ptr %656, align 4
  %665 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result925, i32 1, i32 31)
  store float %665, ptr %result_from_other_lane924, align 4
  call void @region_8_147(ptr %656, ptr %result_from_other_lane924, ptr %return_buffer926)
  %666 = load float, ptr %return_buffer926, align 4
  store float %666, ptr %656, align 4
  %667 = icmp eq i32 %thread_id.x, 0
  br i1 %667, label %reduction_write_output-true927, label %reduction_write_output-after928

reduction_write_output-after928:                  ; preds = %reduction_write_output-true927, %inter_warp_reduce-true909
  br label %inter_warp_reduce-after910

reduction_write_output-true927:                   ; preds = %inter_warp_reduce-true909
  %668 = mul i32 %thread_id.x, 2
  %669 = add i32 %tile_origin.1, %thread_id.y
  %670 = add i32 %tile_origin.2, %668
  %671 = add i32 %670, 0
  %output929 = load float, ptr %656, align 4
  store float %output929, ptr %arg30, align 4
  br label %reduction_write_output-after928
}

define internal void @region_1_28__2(ptr dereferenceable(4) %Arg_0.29.typed, ptr dereferenceable(4) %Arg_1.30.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.31.typed = alloca float, align 4
  %Arg_0.29 = load float, ptr %Arg_0.29.typed, align 4
  %Arg_1.30 = load float, ptr %Arg_1.30.typed, align 4
  %add.31 = fadd float %Arg_0.29, %Arg_1.30
  store float %add.31, ptr %add.31.typed, align 4
  %load_ret_value = load float, ptr %add.31.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_41(ptr dereferenceable(4) %Arg_0.42.typed, ptr dereferenceable(4) %Arg_1.43.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.44.typed = alloca float, align 4
  %Arg_0.42 = load float, ptr %Arg_0.42.typed, align 4
  %Arg_1.43 = load float, ptr %Arg_1.43.typed, align 4
  %add.44 = fadd float %Arg_0.42, %Arg_1.43
  store float %add.44, ptr %add.44.typed, align 4
  %load_ret_value = load float, ptr %add.44.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_3_54(ptr dereferenceable(4) %Arg_0.55.typed, ptr dereferenceable(4) %Arg_1.56.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.57.typed = alloca float, align 4
  %Arg_0.55 = load float, ptr %Arg_0.55.typed, align 4
  %Arg_1.56 = load float, ptr %Arg_1.56.typed, align 4
  %add.57 = fadd float %Arg_0.55, %Arg_1.56
  store float %add.57, ptr %add.57.typed, align 4
  %load_ret_value = load float, ptr %add.57.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_4_67(ptr dereferenceable(4) %Arg_0.68.typed, ptr dereferenceable(4) %Arg_1.69.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.70.typed = alloca float, align 4
  %Arg_0.68 = load float, ptr %Arg_0.68.typed, align 4
  %Arg_1.69 = load float, ptr %Arg_1.69.typed, align 4
  %add.70 = fadd float %Arg_0.68, %Arg_1.69
  store float %add.70, ptr %add.70.typed, align 4
  %load_ret_value = load float, ptr %add.70.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_5_80(ptr dereferenceable(4) %Arg_0.81.typed, ptr dereferenceable(4) %Arg_1.82.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.83.typed = alloca float, align 4
  %Arg_0.81 = load float, ptr %Arg_0.81.typed, align 4
  %Arg_1.82 = load float, ptr %Arg_1.82.typed, align 4
  %add.83 = fadd float %Arg_0.81, %Arg_1.82
  store float %add.83, ptr %add.83.typed, align 4
  %load_ret_value = load float, ptr %add.83.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_6_93(ptr dereferenceable(4) %Arg_0.94.typed, ptr dereferenceable(4) %Arg_1.95.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.96.typed = alloca float, align 4
  %Arg_0.94 = load float, ptr %Arg_0.94.typed, align 4
  %Arg_1.95 = load float, ptr %Arg_1.95.typed, align 4
  %add.96 = fadd float %Arg_0.94, %Arg_1.95
  store float %add.96, ptr %add.96.typed, align 4
  %load_ret_value = load float, ptr %add.96.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_7_121(ptr dereferenceable(4) %Arg_0.122.typed, ptr dereferenceable(4) %Arg_1.123.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.124.typed = alloca float, align 4
  %Arg_0.122 = load float, ptr %Arg_0.122.typed, align 4
  %Arg_1.123 = load float, ptr %Arg_1.123.typed, align 4
  %add.124 = fadd float %Arg_0.122, %Arg_1.123
  store float %add.124, ptr %add.124.typed, align 4
  %load_ret_value = load float, ptr %add.124.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_8_147(ptr dereferenceable(4) %Arg_0.148.typed, ptr dereferenceable(4) %Arg_1.149.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.150.typed = alloca float, align 4
  %Arg_0.148 = load float, ptr %Arg_0.148.typed, align 4
  %Arg_1.149 = load float, ptr %Arg_1.149.typed, align 4
  %add.150 = fadd float %Arg_0.148, %Arg_1.149
  store float %add.150, ptr %add.150.typed, align 4
  %load_ret_value = load float, ptr %add.150.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_75(ptr noalias align 16 dereferenceable(512) %arg0, ptr noalias align 128 dereferenceable(32768) %arg1, ptr noalias align 128 dereferenceable(4194304) %arg2, ptr noalias align 16 dereferenceable(512) %arg3, ptr noalias align 128 dereferenceable(4194304) %arg4, ptr noalias align 16 dereferenceable(512) %arg5, ptr noalias align 128 dereferenceable(4194304) %arg6, ptr noalias align 128 dereferenceable(32768) %arg7, ptr noalias align 128 dereferenceable(4194304) %arg8, ptr noalias align 128 dereferenceable(32768) %arg9, ptr noalias align 128 dereferenceable(4194304) %arg10, ptr noalias align 128 dereferenceable(32768) %arg11) {
entry:
  %return_buffer105 = alloca float, align 4
  %result_from_other_lane103 = alloca float, align 4
  %return_buffer102 = alloca float, align 4
  %result_from_other_lane100 = alloca float, align 4
  %return_buffer99 = alloca float, align 4
  %result_from_other_lane97 = alloca float, align 4
  %return_buffer96 = alloca float, align 4
  %result_from_other_lane94 = alloca float, align 4
  %return_buffer93 = alloca float, align 4
  %result_from_other_lane91 = alloca float, align 4
  %return_buffer83 = alloca float, align 4
  %result_from_other_lane81 = alloca float, align 4
  %return_buffer80 = alloca float, align 4
  %result_from_other_lane78 = alloca float, align 4
  %return_buffer77 = alloca float, align 4
  %result_from_other_lane75 = alloca float, align 4
  %return_buffer74 = alloca float, align 4
  %result_from_other_lane72 = alloca float, align 4
  %return_buffer71 = alloca float, align 4
  %result_from_other_lane69 = alloca float, align 4
  %return_buffer65 = alloca float, align 4
  %result_from_other_lane63 = alloca float, align 4
  %return_buffer62 = alloca float, align 4
  %result_from_other_lane60 = alloca float, align 4
  %return_buffer59 = alloca float, align 4
  %result_from_other_lane57 = alloca float, align 4
  %return_buffer56 = alloca float, align 4
  %result_from_other_lane54 = alloca float, align 4
  %return_buffer53 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer25 = alloca float, align 4
  %return_buffer21 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result5 = alloca float, align 4
  %reduction_input_address4 = alloca float, align 4
  %partial_reduction_result2 = alloca float, align 4
  %reduction_input_address1 = alloca float, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after107, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_45_constant_20 = load float, ptr @84, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_45_constant_20, ptr %2, align 4
  %region_0_45_constant_203 = load float, ptr @84, align 4
  %3 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  store float %region_0_45_constant_203, ptr %3, align 4
  %region_0_45_constant_10 = load float, ptr @83, align 4
  %4 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  store float %region_0_45_constant_10, ptr %4, align 4
  %5 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %6 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !362
  %7 = urem i32 %5, 1024
  %8 = udiv i32 %5, 1024
  %9 = mul i32 %6, 1
  %10 = add i32 %9, %8
  %11 = icmp ult i32 %10, 256
  br i1 %11, label %12, label %early_return

12:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %7, 32
  %thread_id.y = udiv i32 %7, 32
  %lane_id = urem i32 %7, 32
  %13 = udiv i32 %10, 1
  %14 = urem i32 %13, 4
  %15 = udiv i32 %10, 4
  %16 = urem i32 %15, 1
  %17 = udiv i32 %10, 4
  %18 = icmp eq i32 %16, 0
  %tile_bound = select i1 %18, i32 128, i32 4096
  %19 = icmp eq i32 %14, 3
  %tile_bound6 = select i1 %19, i32 32, i32 32
  %tile_origin.0 = mul i32 %17, 1
  %tile_origin.1 = mul i32 %16, 4096
  %tile_origin.2 = mul i32 %14, 32
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %12
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %20 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %20, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %21 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %22 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %23 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %23, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc7 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc7, ptr %tile_loop.invar_address, align 4
  %24 = icmp eq i32 %tile_loop.indvar, 0
  %25 = mul i32 %tile_loop.indvar, 1
  %26 = add i32 %25, 0
  %x_loc = add i32 %26, %22
  %27 = add i32 %tile_origin.1, %y_in_tile.indvar
  %28 = add i32 %tile_origin.2, %x_loc
  %29 = icmp ult i32 %x_loc, %tile_bound6
  br i1 %29, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body
  br label %tile_loop.loop_header, !llvm.loop !471

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !472

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache110, i32 0, i32 %8, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %30 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %31 = load float, ptr %current_output, align 4
  store float %31, ptr %30, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache110, i32 0, i32 %8, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %32 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result52 = load float, ptr %32, align 4
  %33 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result52, i32 16, i32 31)
  store float %33, ptr %result_from_other_lane, align 4
  call void @region_1_21__2(ptr %32, ptr %result_from_other_lane, ptr %return_buffer53)
  %34 = load float, ptr %return_buffer53, align 4
  store float %34, ptr %32, align 4
  %partial_reduction_result55 = load float, ptr %32, align 4
  %35 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result55, i32 8, i32 31)
  store float %35, ptr %result_from_other_lane54, align 4
  call void @region_1_21__2(ptr %32, ptr %result_from_other_lane54, ptr %return_buffer56)
  %36 = load float, ptr %return_buffer56, align 4
  store float %36, ptr %32, align 4
  %partial_reduction_result58 = load float, ptr %32, align 4
  %37 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result58, i32 4, i32 31)
  store float %37, ptr %result_from_other_lane57, align 4
  call void @region_1_21__2(ptr %32, ptr %result_from_other_lane57, ptr %return_buffer59)
  %38 = load float, ptr %return_buffer59, align 4
  store float %38, ptr %32, align 4
  %partial_reduction_result61 = load float, ptr %32, align 4
  %39 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result61, i32 2, i32 31)
  store float %39, ptr %result_from_other_lane60, align 4
  call void @region_1_21__2(ptr %32, ptr %result_from_other_lane60, ptr %return_buffer62)
  %40 = load float, ptr %return_buffer62, align 4
  store float %40, ptr %32, align 4
  %partial_reduction_result64 = load float, ptr %32, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result64, i32 1, i32 31)
  store float %41, ptr %result_from_other_lane63, align 4
  call void @region_1_21__2(ptr %32, ptr %result_from_other_lane63, ptr %return_buffer65)
  %42 = load float, ptr %return_buffer65, align 4
  store float %42, ptr %32, align 4
  %43 = icmp ult i32 %thread_id.x, %tile_bound
  %44 = mul i32 %thread_id.y, 1
  %45 = icmp ult i32 %44, %tile_bound6
  %46 = and i1 %45, %43
  %47 = icmp eq i32 %lane_id, 0
  %48 = and i1 %46, %47
  br i1 %48, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %shmem_output_address66 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache111, i32 0, i32 %8, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %49 = addrspacecast ptr addrspace(3) %shmem_output_address66 to ptr
  %current_output67 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  %50 = load float, ptr %current_output67, align 4
  store float %50, ptr %49, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr68 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache111, i32 0, i32 %8, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %51 = addrspacecast ptr addrspace(3) %shmem_transposed_addr68 to ptr
  %partial_reduction_result70 = load float, ptr %51, align 4
  %52 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result70, i32 16, i32 31)
  store float %52, ptr %result_from_other_lane69, align 4
  call void @region_2_32(ptr %51, ptr %result_from_other_lane69, ptr %return_buffer71)
  %53 = load float, ptr %return_buffer71, align 4
  store float %53, ptr %51, align 4
  %partial_reduction_result73 = load float, ptr %51, align 4
  %54 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result73, i32 8, i32 31)
  store float %54, ptr %result_from_other_lane72, align 4
  call void @region_2_32(ptr %51, ptr %result_from_other_lane72, ptr %return_buffer74)
  %55 = load float, ptr %return_buffer74, align 4
  store float %55, ptr %51, align 4
  %partial_reduction_result76 = load float, ptr %51, align 4
  %56 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result76, i32 4, i32 31)
  store float %56, ptr %result_from_other_lane75, align 4
  call void @region_2_32(ptr %51, ptr %result_from_other_lane75, ptr %return_buffer77)
  %57 = load float, ptr %return_buffer77, align 4
  store float %57, ptr %51, align 4
  %partial_reduction_result79 = load float, ptr %51, align 4
  %58 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result79, i32 2, i32 31)
  store float %58, ptr %result_from_other_lane78, align 4
  call void @region_2_32(ptr %51, ptr %result_from_other_lane78, ptr %return_buffer80)
  %59 = load float, ptr %return_buffer80, align 4
  store float %59, ptr %51, align 4
  %partial_reduction_result82 = load float, ptr %51, align 4
  %60 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result82, i32 1, i32 31)
  store float %60, ptr %result_from_other_lane81, align 4
  call void @region_2_32(ptr %51, ptr %result_from_other_lane81, ptr %return_buffer83)
  %61 = load float, ptr %return_buffer83, align 4
  store float %61, ptr %51, align 4
  %62 = icmp ult i32 %thread_id.x, %tile_bound
  %63 = mul i32 %thread_id.y, 1
  %64 = icmp ult i32 %63, %tile_bound6
  %65 = and i1 %64, %62
  %66 = icmp eq i32 %lane_id, 0
  %67 = and i1 %65, %66
  br i1 %67, label %reduction_write_output-true84, label %reduction_write_output-after85

reduction_write_output-after85:                   ; preds = %reduction_write_output-true84, %reduction_write_output-after
  %shmem_output_address88 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache112, i32 0, i32 %8, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %68 = addrspacecast ptr addrspace(3) %shmem_output_address88 to ptr
  %current_output89 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  %69 = load float, ptr %current_output89, align 4
  store float %69, ptr %68, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr90 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache112, i32 0, i32 %8, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %70 = addrspacecast ptr addrspace(3) %shmem_transposed_addr90 to ptr
  %partial_reduction_result92 = load float, ptr %70, align 4
  %71 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result92, i32 16, i32 31)
  store float %71, ptr %result_from_other_lane91, align 4
  call void @region_3_39(ptr %70, ptr %result_from_other_lane91, ptr %return_buffer93)
  %72 = load float, ptr %return_buffer93, align 4
  store float %72, ptr %70, align 4
  %partial_reduction_result95 = load float, ptr %70, align 4
  %73 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result95, i32 8, i32 31)
  store float %73, ptr %result_from_other_lane94, align 4
  call void @region_3_39(ptr %70, ptr %result_from_other_lane94, ptr %return_buffer96)
  %74 = load float, ptr %return_buffer96, align 4
  store float %74, ptr %70, align 4
  %partial_reduction_result98 = load float, ptr %70, align 4
  %75 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result98, i32 4, i32 31)
  store float %75, ptr %result_from_other_lane97, align 4
  call void @region_3_39(ptr %70, ptr %result_from_other_lane97, ptr %return_buffer99)
  %76 = load float, ptr %return_buffer99, align 4
  store float %76, ptr %70, align 4
  %partial_reduction_result101 = load float, ptr %70, align 4
  %77 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result101, i32 2, i32 31)
  store float %77, ptr %result_from_other_lane100, align 4
  call void @region_3_39(ptr %70, ptr %result_from_other_lane100, ptr %return_buffer102)
  %78 = load float, ptr %return_buffer102, align 4
  store float %78, ptr %70, align 4
  %partial_reduction_result104 = load float, ptr %70, align 4
  %79 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result104, i32 1, i32 31)
  store float %79, ptr %result_from_other_lane103, align 4
  call void @region_3_39(ptr %70, ptr %result_from_other_lane103, ptr %return_buffer105)
  %80 = load float, ptr %return_buffer105, align 4
  store float %80, ptr %70, align 4
  %81 = icmp ult i32 %thread_id.x, %tile_bound
  %82 = mul i32 %thread_id.y, 1
  %83 = icmp ult i32 %82, %tile_bound6
  %84 = and i1 %83, %81
  %85 = icmp eq i32 %lane_id, 0
  %86 = and i1 %84, %85
  br i1 %86, label %reduction_write_output-true106, label %reduction_write_output-after107

reduction_write_output-after107:                  ; preds = %reduction_write_output-true106, %reduction_write_output-after85
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %87 = mul nuw nsw i32 %28, 1
  %88 = add nuw nsw i32 0, %87
  %89 = mul nuw nsw i32 %27, 128
  %90 = add nuw nsw i32 %88, %89
  %91 = mul nuw nsw i32 %tile_origin.0, 16384
  %92 = add nuw nsw i32 %90, %91
  %93 = udiv i32 %92, 1
  %94 = urem i32 %93, 128
  %95 = udiv i32 %92, 128
  %96 = urem i32 %95, 128
  %97 = udiv i32 %92, 16384
  %98 = mul i32 %thread_id.x, 1
  %99 = sub i32 %x_loc, %98
  %100 = mul nuw nsw i32 %94, 1
  %101 = add nuw nsw i32 0, %100
  %102 = udiv i32 %101, 128
  %103 = mul nuw nsw i32 %96, 1
  %104 = add nuw nsw i32 0, %103
  %105 = mul nuw nsw i32 %97, 128
  %106 = add nuw nsw i32 %104, %105
  %107 = udiv i32 %106, 8192
  %Arg_2.3 = getelementptr inbounds float, ptr %arg2, i32 %92
  %Arg_2.38 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %Arg_3.4 = getelementptr inbounds [128 x float], ptr %arg3, i32 0, i32 %101
  %Arg_3.49 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  %add.9 = fadd float %Arg_2.38, %Arg_3.49
  %region_0_45_constant_1010 = load float, ptr @83, align 4
  %108 = fcmp oge float %add.9, %region_0_45_constant_1010
  %109 = fcmp une float %add.9, %add.9
  %110 = or i1 %108, %109
  %maximum.12 = select i1 %110, float %add.9, float %region_0_45_constant_1010
  %compare.13 = fcmp ogt float %maximum.12, %region_0_45_constant_1010
  %111 = zext i1 %compare.13 to i8
  %Arg_1.2 = getelementptr inbounds [8192 x float], ptr %arg1, i32 0, i32 %106
  %Arg_1.211 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %Arg_0.1 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %101, i32 0
  %Arg_0.112 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %multiply.17 = fmul float %Arg_1.211, %Arg_0.112
  %112 = trunc i8 %111 to i1
  %113 = select i1 %112, float %multiply.17, float %region_0_45_constant_1010
  store float %113, ptr %reduction_input_address, align 4
  %114 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %99
  call void @region_1_21__2(ptr %114, ptr %reduction_input_address, ptr %return_buffer)
  %115 = load float, ptr %return_buffer, align 4
  store float %115, ptr %114, align 4
  %116 = mul nuw nsw i32 %94, 1
  %117 = add nuw nsw i32 0, %116
  %118 = udiv i32 %117, 128
  %119 = mul nuw nsw i32 %96, 1
  %120 = add nuw nsw i32 0, %119
  %121 = mul nuw nsw i32 %97, 128
  %122 = add nuw nsw i32 %120, %121
  %123 = udiv i32 %122, 8192
  %Arg_4.5 = getelementptr inbounds float, ptr %arg4, i32 %92
  %Arg_4.513 = load float, ptr %Arg_4.5, align 4, !invariant.load !297
  %Arg_5.6 = getelementptr inbounds [128 x float], ptr %arg5, i32 0, i32 %117
  %Arg_5.614 = load float, ptr %Arg_5.6, align 4, !invariant.load !297
  %add.27 = fadd float %Arg_4.513, %Arg_5.614
  %region_0_45_constant_1015 = load float, ptr @83, align 4
  %124 = fcmp oge float %add.27, %region_0_45_constant_1015
  %125 = fcmp une float %add.27, %add.27
  %126 = or i1 %124, %125
  %maximum.28 = select i1 %126, float %add.27, float %region_0_45_constant_1015
  %compare.29 = fcmp ogt float %maximum.28, %region_0_45_constant_1015
  %127 = zext i1 %compare.29 to i8
  %Arg_1.216 = getelementptr inbounds [8192 x float], ptr %arg1, i32 0, i32 %122
  %Arg_1.217 = load float, ptr %Arg_1.216, align 4, !invariant.load !297
  %Arg_0.118 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %117, i32 0
  %Arg_0.119 = load float, ptr %Arg_0.118, align 4, !invariant.load !297
  %multiply.1720 = fmul float %Arg_1.217, %Arg_0.119
  %128 = trunc i8 %127 to i1
  %129 = select i1 %128, float %multiply.1720, float %region_0_45_constant_1015
  store float %129, ptr %reduction_input_address1, align 4
  %130 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 %99
  call void @region_2_32(ptr %130, ptr %reduction_input_address1, ptr %return_buffer21)
  %131 = load float, ptr %return_buffer21, align 4
  store float %131, ptr %130, align 4
  %132 = mul nuw nsw i32 %94, 1
  %133 = add nuw nsw i32 0, %132
  %134 = udiv i32 %133, 128
  %135 = mul nuw nsw i32 %96, 1
  %136 = add nuw nsw i32 0, %135
  %137 = mul nuw nsw i32 %97, 128
  %138 = add nuw nsw i32 %136, %137
  %139 = udiv i32 %138, 8192
  %Arg_6.7 = getelementptr inbounds float, ptr %arg6, i32 %92
  %Arg_6.722 = load float, ptr %Arg_6.7, align 4, !invariant.load !297
  %Arg_1.223 = getelementptr inbounds [8192 x float], ptr %arg1, i32 0, i32 %138
  %Arg_1.224 = load float, ptr %Arg_1.223, align 4, !invariant.load !297
  %multiply.37 = fmul float %Arg_6.722, %Arg_1.224
  store float %multiply.37, ptr %reduction_input_address4, align 4
  %140 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 %99
  call void @region_3_39(ptr %140, ptr %reduction_input_address4, ptr %return_buffer25)
  %141 = load float, ptr %return_buffer25, align 4
  store float %141, ptr %140, align 4
  %142 = mul nuw nsw i32 %94, 1
  %143 = add nuw nsw i32 0, %142
  %144 = udiv i32 %143, 128
  %145 = mul nuw nsw i32 %96, 1
  %146 = add nuw nsw i32 0, %145
  %147 = mul nuw nsw i32 %97, 128
  %148 = add nuw nsw i32 %146, %147
  %149 = udiv i32 %148, 8192
  %Arg_2.326 = getelementptr inbounds float, ptr %arg2, i32 %92
  %Arg_2.327 = load float, ptr %Arg_2.326, align 4, !invariant.load !297
  %Arg_3.428 = getelementptr inbounds [128 x float], ptr %arg3, i32 0, i32 %143
  %Arg_3.429 = load float, ptr %Arg_3.428, align 4, !invariant.load !297
  %add.930 = fadd float %Arg_2.327, %Arg_3.429
  %region_0_45_constant_1031 = load float, ptr @83, align 4
  %150 = fcmp oge float %add.930, %region_0_45_constant_1031
  %151 = fcmp une float %add.930, %add.930
  %152 = or i1 %150, %151
  %maximum.1232 = select i1 %152, float %add.930, float %region_0_45_constant_1031
  %compare.1333 = fcmp ogt float %maximum.1232, %region_0_45_constant_1031
  %153 = zext i1 %compare.1333 to i8
  %Arg_1.234 = getelementptr inbounds [8192 x float], ptr %arg1, i32 0, i32 %148
  %Arg_1.235 = load float, ptr %Arg_1.234, align 4, !invariant.load !297
  %Arg_0.136 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %143, i32 0
  %Arg_0.137 = load float, ptr %Arg_0.136, align 4, !invariant.load !297
  %multiply.1738 = fmul float %Arg_1.235, %Arg_0.137
  %154 = trunc i8 %153 to i1
  %155 = select i1 %154, float %multiply.1738, float %region_0_45_constant_1031
  %156 = mul nuw nsw i32 %94, 1
  %157 = add nuw nsw i32 0, %156
  %158 = udiv i32 %157, 128
  %159 = mul nuw nsw i32 %96, 1
  %160 = add nuw nsw i32 0, %159
  %161 = mul nuw nsw i32 %97, 128
  %162 = add nuw nsw i32 %160, %161
  %163 = udiv i32 %162, 8192
  %Arg_4.539 = getelementptr inbounds float, ptr %arg4, i32 %92
  %Arg_4.540 = load float, ptr %Arg_4.539, align 4, !invariant.load !297
  %Arg_5.641 = getelementptr inbounds [128 x float], ptr %arg5, i32 0, i32 %157
  %Arg_5.642 = load float, ptr %Arg_5.641, align 4, !invariant.load !297
  %add.2743 = fadd float %Arg_4.540, %Arg_5.642
  %region_0_45_constant_1044 = load float, ptr @83, align 4
  %164 = fcmp oge float %add.2743, %region_0_45_constant_1044
  %165 = fcmp une float %add.2743, %add.2743
  %166 = or i1 %164, %165
  %maximum.2845 = select i1 %166, float %add.2743, float %region_0_45_constant_1044
  %compare.2946 = fcmp ogt float %maximum.2845, %region_0_45_constant_1044
  %167 = zext i1 %compare.2946 to i8
  %Arg_1.247 = getelementptr inbounds [8192 x float], ptr %arg1, i32 0, i32 %162
  %Arg_1.248 = load float, ptr %Arg_1.247, align 4, !invariant.load !297
  %Arg_0.149 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %157, i32 0
  %Arg_0.150 = load float, ptr %Arg_0.149, align 4, !invariant.load !297
  %multiply.1751 = fmul float %Arg_1.248, %Arg_0.150
  %168 = trunc i8 %167 to i1
  %169 = select i1 %168, float %multiply.1751, float %region_0_45_constant_1044
  %170 = mul nuw nsw i32 %94, 1
  %171 = add nuw nsw i32 0, %170
  %172 = udiv i32 %171, 128
  %173 = mul nuw nsw i32 %96, 1
  %174 = add nuw nsw i32 0, %173
  %175 = mul nuw nsw i32 %97, 128
  %176 = add nuw nsw i32 %174, %175
  %177 = udiv i32 %176, 8192
  %178 = getelementptr inbounds float, ptr %arg8, i32 %92
  store float %155, ptr %178, align 4
  %179 = mul nuw nsw i32 %94, 1
  %180 = add nuw nsw i32 0, %179
  %181 = udiv i32 %180, 128
  %182 = mul nuw nsw i32 %96, 1
  %183 = add nuw nsw i32 0, %182
  %184 = mul nuw nsw i32 %97, 128
  %185 = add nuw nsw i32 %183, %184
  %186 = udiv i32 %185, 8192
  %187 = getelementptr inbounds float, ptr %arg10, i32 %92
  store float %169, ptr %187, align 4
  br label %x_in_tile-after

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %188 = mul i32 %thread_id.y, 1
  %189 = add i32 %tile_origin.1, %thread_id.x
  %190 = add i32 %tile_origin.2, %188
  %191 = add i32 %190, 0
  %192 = mul i32 %tile_origin.0, 128
  %193 = add i32 %192, %191
  %194 = udiv i32 %193, 1
  %195 = urem i32 %194, 128
  %196 = udiv i32 %193, 128
  %output_element_address = getelementptr inbounds [64 x [128 x float]], ptr %arg7, i32 0, i32 %196, i32 %195
  %output = load float, ptr %32, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

reduction_write_output-true84:                    ; preds = %reduction_write_output-after
  %197 = mul i32 %thread_id.y, 1
  %198 = add i32 %tile_origin.1, %thread_id.x
  %199 = add i32 %tile_origin.2, %197
  %200 = add i32 %199, 0
  %201 = mul i32 %tile_origin.0, 128
  %202 = add i32 %201, %200
  %203 = udiv i32 %202, 1
  %204 = urem i32 %203, 128
  %205 = udiv i32 %202, 128
  %output_element_address86 = getelementptr inbounds [64 x [128 x float]], ptr %arg9, i32 0, i32 %205, i32 %204
  %output87 = load float, ptr %51, align 4
  store float %output87, ptr %output_element_address86, align 4
  br label %reduction_write_output-after85

reduction_write_output-true106:                   ; preds = %reduction_write_output-after85
  %206 = mul i32 %thread_id.y, 1
  %207 = add i32 %tile_origin.1, %thread_id.x
  %208 = add i32 %tile_origin.2, %206
  %209 = add i32 %208, 0
  %210 = mul i32 %tile_origin.0, 128
  %211 = add i32 %210, %209
  %212 = udiv i32 %211, 1
  %213 = urem i32 %212, 128
  %214 = udiv i32 %211, 128
  %output_element_address108 = getelementptr inbounds [64 x [128 x float]], ptr %arg11, i32 0, i32 %214, i32 %213
  %output109 = load float, ptr %70, align 4
  store float %output109, ptr %output_element_address108, align 4
  br label %reduction_write_output-after107
}

define internal void @region_1_21__2(ptr dereferenceable(4) %Arg_0.22.typed, ptr dereferenceable(4) %Arg_1.23.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.24.typed = alloca float, align 4
  %Arg_0.22 = load float, ptr %Arg_0.22.typed, align 4
  %Arg_1.23 = load float, ptr %Arg_1.23.typed, align 4
  %add.24 = fadd float %Arg_0.22, %Arg_1.23
  store float %add.24, ptr %add.24.typed, align 4
  %load_ret_value = load float, ptr %add.24.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_32(ptr dereferenceable(4) %Arg_0.33.typed, ptr dereferenceable(4) %Arg_1.34.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.35.typed = alloca float, align 4
  %Arg_0.33 = load float, ptr %Arg_0.33.typed, align 4
  %Arg_1.34 = load float, ptr %Arg_1.34.typed, align 4
  %add.35 = fadd float %Arg_0.33, %Arg_1.34
  store float %add.35, ptr %add.35.typed, align 4
  %load_ret_value = load float, ptr %add.35.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_3_39(ptr dereferenceable(4) %Arg_0.40.typed, ptr dereferenceable(4) %Arg_1.41.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.42.typed = alloca float, align 4
  %Arg_0.40 = load float, ptr %Arg_0.40.typed, align 4
  %Arg_1.41 = load float, ptr %Arg_1.41.typed, align 4
  %add.42 = fadd float %Arg_0.40, %Arg_1.41
  store float %add.42, ptr %add.42.typed, align 4
  %load_ret_value = load float, ptr %add.42.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_26(ptr noalias align 16 dereferenceable(512) %arg0, ptr noalias align 128 dereferenceable(32768) %arg1, ptr noalias align 16 dereferenceable(512) %arg2, ptr noalias align 128 dereferenceable(32768) %arg3, ptr noalias align 128 dereferenceable(4194304) %arg4, ptr noalias align 16 dereferenceable(512) %arg5, ptr noalias align 128 dereferenceable(4194304) %arg6, ptr noalias align 16 dereferenceable(512) %arg7, ptr noalias align 128 dereferenceable(4194304) %arg8, ptr noalias align 128 dereferenceable(32768) %arg9, ptr noalias align 128 dereferenceable(4194304) %arg10, ptr noalias align 128 dereferenceable(32768) %arg11, ptr noalias align 128 dereferenceable(4194304) %arg12, ptr noalias align 128 dereferenceable(32768) %arg13, ptr noalias align 128 dereferenceable(32768) %arg14) {
entry:
  %return_buffer155 = alloca float, align 4
  %result_from_other_lane153 = alloca float, align 4
  %return_buffer152 = alloca float, align 4
  %result_from_other_lane150 = alloca float, align 4
  %return_buffer149 = alloca float, align 4
  %result_from_other_lane147 = alloca float, align 4
  %return_buffer146 = alloca float, align 4
  %result_from_other_lane144 = alloca float, align 4
  %return_buffer143 = alloca float, align 4
  %result_from_other_lane141 = alloca float, align 4
  %return_buffer133 = alloca float, align 4
  %result_from_other_lane131 = alloca float, align 4
  %return_buffer130 = alloca float, align 4
  %result_from_other_lane128 = alloca float, align 4
  %return_buffer127 = alloca float, align 4
  %result_from_other_lane125 = alloca float, align 4
  %return_buffer124 = alloca float, align 4
  %result_from_other_lane122 = alloca float, align 4
  %return_buffer121 = alloca float, align 4
  %result_from_other_lane119 = alloca float, align 4
  %return_buffer111 = alloca float, align 4
  %result_from_other_lane109 = alloca float, align 4
  %return_buffer108 = alloca float, align 4
  %result_from_other_lane106 = alloca float, align 4
  %return_buffer105 = alloca float, align 4
  %result_from_other_lane103 = alloca float, align 4
  %return_buffer102 = alloca float, align 4
  %result_from_other_lane100 = alloca float, align 4
  %return_buffer99 = alloca float, align 4
  %result_from_other_lane97 = alloca float, align 4
  %return_buffer93 = alloca float, align 4
  %result_from_other_lane91 = alloca float, align 4
  %return_buffer90 = alloca float, align 4
  %result_from_other_lane88 = alloca float, align 4
  %return_buffer87 = alloca float, align 4
  %result_from_other_lane85 = alloca float, align 4
  %return_buffer84 = alloca float, align 4
  %result_from_other_lane82 = alloca float, align 4
  %return_buffer81 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer41 = alloca float, align 4
  %return_buffer36 = alloca float, align 4
  %return_buffer32 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result7 = alloca float, align 4
  %reduction_input_address6 = alloca float, align 4
  %partial_reduction_result5 = alloca float, align 4
  %reduction_input_address4 = alloca float, align 4
  %partial_reduction_result2 = alloca float, align 4
  %reduction_input_address1 = alloca float, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after157, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_59_constant_27 = load float, ptr @86, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_59_constant_27, ptr %2, align 4
  %region_0_59_constant_273 = load float, ptr @86, align 4
  %3 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  store float %region_0_59_constant_273, ptr %3, align 4
  %region_0_59_constant_12 = load float, ptr @85, align 4
  %4 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  store float %region_0_59_constant_12, ptr %4, align 4
  %region_0_59_constant_128 = load float, ptr @85, align 4
  %5 = getelementptr inbounds float, ptr %partial_reduction_result7, i32 0
  store float %region_0_59_constant_128, ptr %5, align 4
  %6 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %7 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !362
  %8 = urem i32 %6, 1024
  %9 = udiv i32 %6, 1024
  %10 = mul i32 %7, 1
  %11 = add i32 %10, %9
  %12 = icmp ult i32 %11, 256
  br i1 %12, label %13, label %early_return

13:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %8, 32
  %thread_id.y = udiv i32 %8, 32
  %lane_id = urem i32 %8, 32
  %14 = udiv i32 %11, 1
  %15 = urem i32 %14, 4
  %16 = udiv i32 %11, 4
  %17 = urem i32 %16, 1
  %18 = udiv i32 %11, 4
  %19 = icmp eq i32 %17, 0
  %tile_bound = select i1 %19, i32 128, i32 4096
  %20 = icmp eq i32 %15, 3
  %tile_bound9 = select i1 %20, i32 32, i32 32
  %tile_origin.0 = mul i32 %18, 1
  %tile_origin.1 = mul i32 %17, 4096
  %tile_origin.2 = mul i32 %15, 32
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %13
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %21 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %21, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %22 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %23 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %24 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %24, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc10 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc10, ptr %tile_loop.invar_address, align 4
  %25 = icmp eq i32 %tile_loop.indvar, 0
  %26 = mul i32 %tile_loop.indvar, 1
  %27 = add i32 %26, 0
  %x_loc = add i32 %27, %23
  %28 = add i32 %tile_origin.1, %y_in_tile.indvar
  %29 = add i32 %tile_origin.2, %x_loc
  %30 = icmp ult i32 %x_loc, %tile_bound9
  br i1 %30, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body
  br label %tile_loop.loop_header, !llvm.loop !473

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !474

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache113, i32 0, i32 %9, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %31 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %32 = load float, ptr %current_output, align 4
  store float %32, ptr %31, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache113, i32 0, i32 %9, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %33 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result80 = load float, ptr %33, align 4
  %34 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result80, i32 16, i32 31)
  store float %34, ptr %result_from_other_lane, align 4
  call void @region_1_28__3(ptr %33, ptr %result_from_other_lane, ptr %return_buffer81)
  %35 = load float, ptr %return_buffer81, align 4
  store float %35, ptr %33, align 4
  %partial_reduction_result83 = load float, ptr %33, align 4
  %36 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result83, i32 8, i32 31)
  store float %36, ptr %result_from_other_lane82, align 4
  call void @region_1_28__3(ptr %33, ptr %result_from_other_lane82, ptr %return_buffer84)
  %37 = load float, ptr %return_buffer84, align 4
  store float %37, ptr %33, align 4
  %partial_reduction_result86 = load float, ptr %33, align 4
  %38 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result86, i32 4, i32 31)
  store float %38, ptr %result_from_other_lane85, align 4
  call void @region_1_28__3(ptr %33, ptr %result_from_other_lane85, ptr %return_buffer87)
  %39 = load float, ptr %return_buffer87, align 4
  store float %39, ptr %33, align 4
  %partial_reduction_result89 = load float, ptr %33, align 4
  %40 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result89, i32 2, i32 31)
  store float %40, ptr %result_from_other_lane88, align 4
  call void @region_1_28__3(ptr %33, ptr %result_from_other_lane88, ptr %return_buffer90)
  %41 = load float, ptr %return_buffer90, align 4
  store float %41, ptr %33, align 4
  %partial_reduction_result92 = load float, ptr %33, align 4
  %42 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result92, i32 1, i32 31)
  store float %42, ptr %result_from_other_lane91, align 4
  call void @region_1_28__3(ptr %33, ptr %result_from_other_lane91, ptr %return_buffer93)
  %43 = load float, ptr %return_buffer93, align 4
  store float %43, ptr %33, align 4
  %44 = icmp ult i32 %thread_id.x, %tile_bound
  %45 = mul i32 %thread_id.y, 1
  %46 = icmp ult i32 %45, %tile_bound9
  %47 = and i1 %46, %44
  %48 = icmp eq i32 %lane_id, 0
  %49 = and i1 %47, %48
  br i1 %49, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %shmem_output_address94 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache114, i32 0, i32 %9, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %50 = addrspacecast ptr addrspace(3) %shmem_output_address94 to ptr
  %current_output95 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  %51 = load float, ptr %current_output95, align 4
  store float %51, ptr %50, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr96 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache114, i32 0, i32 %9, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %52 = addrspacecast ptr addrspace(3) %shmem_transposed_addr96 to ptr
  %partial_reduction_result98 = load float, ptr %52, align 4
  %53 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result98, i32 16, i32 31)
  store float %53, ptr %result_from_other_lane97, align 4
  call void @region_2_39(ptr %52, ptr %result_from_other_lane97, ptr %return_buffer99)
  %54 = load float, ptr %return_buffer99, align 4
  store float %54, ptr %52, align 4
  %partial_reduction_result101 = load float, ptr %52, align 4
  %55 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result101, i32 8, i32 31)
  store float %55, ptr %result_from_other_lane100, align 4
  call void @region_2_39(ptr %52, ptr %result_from_other_lane100, ptr %return_buffer102)
  %56 = load float, ptr %return_buffer102, align 4
  store float %56, ptr %52, align 4
  %partial_reduction_result104 = load float, ptr %52, align 4
  %57 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result104, i32 4, i32 31)
  store float %57, ptr %result_from_other_lane103, align 4
  call void @region_2_39(ptr %52, ptr %result_from_other_lane103, ptr %return_buffer105)
  %58 = load float, ptr %return_buffer105, align 4
  store float %58, ptr %52, align 4
  %partial_reduction_result107 = load float, ptr %52, align 4
  %59 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result107, i32 2, i32 31)
  store float %59, ptr %result_from_other_lane106, align 4
  call void @region_2_39(ptr %52, ptr %result_from_other_lane106, ptr %return_buffer108)
  %60 = load float, ptr %return_buffer108, align 4
  store float %60, ptr %52, align 4
  %partial_reduction_result110 = load float, ptr %52, align 4
  %61 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result110, i32 1, i32 31)
  store float %61, ptr %result_from_other_lane109, align 4
  call void @region_2_39(ptr %52, ptr %result_from_other_lane109, ptr %return_buffer111)
  %62 = load float, ptr %return_buffer111, align 4
  store float %62, ptr %52, align 4
  %63 = icmp ult i32 %thread_id.x, %tile_bound
  %64 = mul i32 %thread_id.y, 1
  %65 = icmp ult i32 %64, %tile_bound9
  %66 = and i1 %65, %63
  %67 = icmp eq i32 %lane_id, 0
  %68 = and i1 %66, %67
  br i1 %68, label %reduction_write_output-true112, label %reduction_write_output-after113

reduction_write_output-after113:                  ; preds = %reduction_write_output-true112, %reduction_write_output-after
  %shmem_output_address116 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache115, i32 0, i32 %9, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %69 = addrspacecast ptr addrspace(3) %shmem_output_address116 to ptr
  %current_output117 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  %70 = load float, ptr %current_output117, align 4
  store float %70, ptr %69, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr118 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache115, i32 0, i32 %9, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %71 = addrspacecast ptr addrspace(3) %shmem_transposed_addr118 to ptr
  %partial_reduction_result120 = load float, ptr %71, align 4
  %72 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result120, i32 16, i32 31)
  store float %72, ptr %result_from_other_lane119, align 4
  call void @region_3_46(ptr %71, ptr %result_from_other_lane119, ptr %return_buffer121)
  %73 = load float, ptr %return_buffer121, align 4
  store float %73, ptr %71, align 4
  %partial_reduction_result123 = load float, ptr %71, align 4
  %74 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result123, i32 8, i32 31)
  store float %74, ptr %result_from_other_lane122, align 4
  call void @region_3_46(ptr %71, ptr %result_from_other_lane122, ptr %return_buffer124)
  %75 = load float, ptr %return_buffer124, align 4
  store float %75, ptr %71, align 4
  %partial_reduction_result126 = load float, ptr %71, align 4
  %76 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result126, i32 4, i32 31)
  store float %76, ptr %result_from_other_lane125, align 4
  call void @region_3_46(ptr %71, ptr %result_from_other_lane125, ptr %return_buffer127)
  %77 = load float, ptr %return_buffer127, align 4
  store float %77, ptr %71, align 4
  %partial_reduction_result129 = load float, ptr %71, align 4
  %78 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result129, i32 2, i32 31)
  store float %78, ptr %result_from_other_lane128, align 4
  call void @region_3_46(ptr %71, ptr %result_from_other_lane128, ptr %return_buffer130)
  %79 = load float, ptr %return_buffer130, align 4
  store float %79, ptr %71, align 4
  %partial_reduction_result132 = load float, ptr %71, align 4
  %80 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result132, i32 1, i32 31)
  store float %80, ptr %result_from_other_lane131, align 4
  call void @region_3_46(ptr %71, ptr %result_from_other_lane131, ptr %return_buffer133)
  %81 = load float, ptr %return_buffer133, align 4
  store float %81, ptr %71, align 4
  %82 = icmp ult i32 %thread_id.x, %tile_bound
  %83 = mul i32 %thread_id.y, 1
  %84 = icmp ult i32 %83, %tile_bound9
  %85 = and i1 %84, %82
  %86 = icmp eq i32 %lane_id, 0
  %87 = and i1 %85, %86
  br i1 %87, label %reduction_write_output-true134, label %reduction_write_output-after135

reduction_write_output-after135:                  ; preds = %reduction_write_output-true134, %reduction_write_output-after113
  %shmem_output_address138 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache116, i32 0, i32 %9, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %88 = addrspacecast ptr addrspace(3) %shmem_output_address138 to ptr
  %current_output139 = getelementptr inbounds float, ptr %partial_reduction_result7, i32 0
  %89 = load float, ptr %current_output139, align 4
  store float %89, ptr %88, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr140 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache116, i32 0, i32 %9, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %90 = addrspacecast ptr addrspace(3) %shmem_transposed_addr140 to ptr
  %partial_reduction_result142 = load float, ptr %90, align 4
  %91 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result142, i32 16, i32 31)
  store float %91, ptr %result_from_other_lane141, align 4
  call void @region_4_53(ptr %90, ptr %result_from_other_lane141, ptr %return_buffer143)
  %92 = load float, ptr %return_buffer143, align 4
  store float %92, ptr %90, align 4
  %partial_reduction_result145 = load float, ptr %90, align 4
  %93 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result145, i32 8, i32 31)
  store float %93, ptr %result_from_other_lane144, align 4
  call void @region_4_53(ptr %90, ptr %result_from_other_lane144, ptr %return_buffer146)
  %94 = load float, ptr %return_buffer146, align 4
  store float %94, ptr %90, align 4
  %partial_reduction_result148 = load float, ptr %90, align 4
  %95 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result148, i32 4, i32 31)
  store float %95, ptr %result_from_other_lane147, align 4
  call void @region_4_53(ptr %90, ptr %result_from_other_lane147, ptr %return_buffer149)
  %96 = load float, ptr %return_buffer149, align 4
  store float %96, ptr %90, align 4
  %partial_reduction_result151 = load float, ptr %90, align 4
  %97 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result151, i32 2, i32 31)
  store float %97, ptr %result_from_other_lane150, align 4
  call void @region_4_53(ptr %90, ptr %result_from_other_lane150, ptr %return_buffer152)
  %98 = load float, ptr %return_buffer152, align 4
  store float %98, ptr %90, align 4
  %partial_reduction_result154 = load float, ptr %90, align 4
  %99 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result154, i32 1, i32 31)
  store float %99, ptr %result_from_other_lane153, align 4
  call void @region_4_53(ptr %90, ptr %result_from_other_lane153, ptr %return_buffer155)
  %100 = load float, ptr %return_buffer155, align 4
  store float %100, ptr %90, align 4
  %101 = icmp ult i32 %thread_id.x, %tile_bound
  %102 = mul i32 %thread_id.y, 1
  %103 = icmp ult i32 %102, %tile_bound9
  %104 = and i1 %103, %101
  %105 = icmp eq i32 %lane_id, 0
  %106 = and i1 %104, %105
  br i1 %106, label %reduction_write_output-true156, label %reduction_write_output-after157

reduction_write_output-after157:                  ; preds = %reduction_write_output-true156, %reduction_write_output-after135
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %107 = mul nuw nsw i32 %29, 1
  %108 = add nuw nsw i32 0, %107
  %109 = mul nuw nsw i32 %28, 128
  %110 = add nuw nsw i32 %108, %109
  %111 = mul nuw nsw i32 %tile_origin.0, 16384
  %112 = add nuw nsw i32 %110, %111
  %113 = udiv i32 %112, 1
  %114 = urem i32 %113, 128
  %115 = udiv i32 %112, 128
  %116 = urem i32 %115, 128
  %117 = udiv i32 %112, 16384
  %118 = mul i32 %thread_id.x, 1
  %119 = sub i32 %x_loc, %118
  %120 = mul nuw nsw i32 %114, 1
  %121 = add nuw nsw i32 0, %120
  %122 = udiv i32 %121, 128
  %123 = mul nuw nsw i32 %116, 1
  %124 = add nuw nsw i32 0, %123
  %125 = mul nuw nsw i32 %117, 128
  %126 = add nuw nsw i32 %124, %125
  %127 = udiv i32 %126, 8192
  %Arg_4.5 = getelementptr inbounds float, ptr %arg4, i32 %112
  %Arg_4.511 = load float, ptr %Arg_4.5, align 4, !invariant.load !297
  %Arg_5.6 = getelementptr inbounds [128 x float], ptr %arg5, i32 0, i32 %121
  %Arg_5.612 = load float, ptr %Arg_5.6, align 4, !invariant.load !297
  %add.11 = fadd float %Arg_4.511, %Arg_5.612
  %region_0_59_constant_1213 = load float, ptr @85, align 4
  %128 = fcmp oge float %add.11, %region_0_59_constant_1213
  %129 = fcmp une float %add.11, %add.11
  %130 = or i1 %128, %129
  %maximum.14 = select i1 %130, float %add.11, float %region_0_59_constant_1213
  %compare.15 = fcmp ogt float %maximum.14, %region_0_59_constant_1213
  %131 = zext i1 %compare.15 to i8
  %Arg_3.4 = getelementptr inbounds [8192 x float], ptr %arg3, i32 0, i32 %126
  %Arg_3.414 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  %Arg_2.3 = getelementptr inbounds [128 x [1 x float]], ptr %arg2, i32 0, i32 %121, i32 0
  %Arg_2.315 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %multiply.19 = fmul float %Arg_3.414, %Arg_2.315
  %Arg_1.2 = getelementptr inbounds [8192 x float], ptr %arg1, i32 0, i32 %126
  %Arg_1.216 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %Arg_0.1 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %121, i32 0
  %Arg_0.117 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %multiply.23 = fmul float %Arg_1.216, %Arg_0.117
  %add.24 = fadd float %multiply.19, %multiply.23
  %132 = trunc i8 %131 to i1
  %133 = select i1 %132, float %add.24, float %region_0_59_constant_1213
  store float %133, ptr %reduction_input_address, align 4
  %134 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %119
  call void @region_1_28__3(ptr %134, ptr %reduction_input_address, ptr %return_buffer)
  %135 = load float, ptr %return_buffer, align 4
  store float %135, ptr %134, align 4
  %136 = mul nuw nsw i32 %114, 1
  %137 = add nuw nsw i32 0, %136
  %138 = udiv i32 %137, 128
  %139 = mul nuw nsw i32 %116, 1
  %140 = add nuw nsw i32 0, %139
  %141 = mul nuw nsw i32 %117, 128
  %142 = add nuw nsw i32 %140, %141
  %143 = udiv i32 %142, 8192
  %Arg_6.7 = getelementptr inbounds float, ptr %arg6, i32 %112
  %Arg_6.718 = load float, ptr %Arg_6.7, align 4, !invariant.load !297
  %Arg_7.8 = getelementptr inbounds [128 x float], ptr %arg7, i32 0, i32 %137
  %Arg_7.819 = load float, ptr %Arg_7.8, align 4, !invariant.load !297
  %add.34 = fadd float %Arg_6.718, %Arg_7.819
  %region_0_59_constant_1220 = load float, ptr @85, align 4
  %144 = fcmp oge float %add.34, %region_0_59_constant_1220
  %145 = fcmp une float %add.34, %add.34
  %146 = or i1 %144, %145
  %maximum.35 = select i1 %146, float %add.34, float %region_0_59_constant_1220
  %compare.36 = fcmp ogt float %maximum.35, %region_0_59_constant_1220
  %147 = zext i1 %compare.36 to i8
  %Arg_3.421 = getelementptr inbounds [8192 x float], ptr %arg3, i32 0, i32 %142
  %Arg_3.422 = load float, ptr %Arg_3.421, align 4, !invariant.load !297
  %Arg_2.323 = getelementptr inbounds [128 x [1 x float]], ptr %arg2, i32 0, i32 %137, i32 0
  %Arg_2.324 = load float, ptr %Arg_2.323, align 4, !invariant.load !297
  %multiply.1925 = fmul float %Arg_3.422, %Arg_2.324
  %Arg_1.226 = getelementptr inbounds [8192 x float], ptr %arg1, i32 0, i32 %142
  %Arg_1.227 = load float, ptr %Arg_1.226, align 4, !invariant.load !297
  %Arg_0.128 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %137, i32 0
  %Arg_0.129 = load float, ptr %Arg_0.128, align 4, !invariant.load !297
  %multiply.2330 = fmul float %Arg_1.227, %Arg_0.129
  %add.2431 = fadd float %multiply.1925, %multiply.2330
  %148 = trunc i8 %147 to i1
  %149 = select i1 %148, float %add.2431, float %region_0_59_constant_1220
  store float %149, ptr %reduction_input_address1, align 4
  %150 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 %119
  call void @region_2_39(ptr %150, ptr %reduction_input_address1, ptr %return_buffer32)
  %151 = load float, ptr %return_buffer32, align 4
  store float %151, ptr %150, align 4
  %152 = mul nuw nsw i32 %114, 1
  %153 = add nuw nsw i32 0, %152
  %154 = udiv i32 %153, 128
  %155 = mul nuw nsw i32 %116, 1
  %156 = add nuw nsw i32 0, %155
  %157 = mul nuw nsw i32 %117, 128
  %158 = add nuw nsw i32 %156, %157
  %159 = udiv i32 %158, 8192
  %Arg_8.9 = getelementptr inbounds float, ptr %arg8, i32 %112
  %Arg_8.933 = load float, ptr %Arg_8.9, align 4, !invariant.load !297
  %Arg_3.434 = getelementptr inbounds [8192 x float], ptr %arg3, i32 0, i32 %158
  %Arg_3.435 = load float, ptr %Arg_3.434, align 4, !invariant.load !297
  %multiply.44 = fmul float %Arg_8.933, %Arg_3.435
  store float %multiply.44, ptr %reduction_input_address4, align 4
  %160 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 %119
  call void @region_3_46(ptr %160, ptr %reduction_input_address4, ptr %return_buffer36)
  %161 = load float, ptr %return_buffer36, align 4
  store float %161, ptr %160, align 4
  %162 = mul nuw nsw i32 %114, 1
  %163 = add nuw nsw i32 0, %162
  %164 = udiv i32 %163, 128
  %165 = mul nuw nsw i32 %116, 1
  %166 = add nuw nsw i32 0, %165
  %167 = mul nuw nsw i32 %117, 128
  %168 = add nuw nsw i32 %166, %167
  %169 = udiv i32 %168, 8192
  %Arg_8.937 = getelementptr inbounds float, ptr %arg8, i32 %112
  %Arg_8.938 = load float, ptr %Arg_8.937, align 4, !invariant.load !297
  %Arg_1.239 = getelementptr inbounds [8192 x float], ptr %arg1, i32 0, i32 %168
  %Arg_1.240 = load float, ptr %Arg_1.239, align 4, !invariant.load !297
  %multiply.51 = fmul float %Arg_8.938, %Arg_1.240
  store float %multiply.51, ptr %reduction_input_address6, align 4
  %170 = getelementptr inbounds float, ptr %partial_reduction_result7, i32 %119
  call void @region_4_53(ptr %170, ptr %reduction_input_address6, ptr %return_buffer41)
  %171 = load float, ptr %return_buffer41, align 4
  store float %171, ptr %170, align 4
  %172 = mul nuw nsw i32 %114, 1
  %173 = add nuw nsw i32 0, %172
  %174 = udiv i32 %173, 128
  %175 = mul nuw nsw i32 %116, 1
  %176 = add nuw nsw i32 0, %175
  %177 = mul nuw nsw i32 %117, 128
  %178 = add nuw nsw i32 %176, %177
  %179 = udiv i32 %178, 8192
  %Arg_4.542 = getelementptr inbounds float, ptr %arg4, i32 %112
  %Arg_4.543 = load float, ptr %Arg_4.542, align 4, !invariant.load !297
  %Arg_5.644 = getelementptr inbounds [128 x float], ptr %arg5, i32 0, i32 %173
  %Arg_5.645 = load float, ptr %Arg_5.644, align 4, !invariant.load !297
  %add.1146 = fadd float %Arg_4.543, %Arg_5.645
  %region_0_59_constant_1247 = load float, ptr @85, align 4
  %180 = fcmp oge float %add.1146, %region_0_59_constant_1247
  %181 = fcmp une float %add.1146, %add.1146
  %182 = or i1 %180, %181
  %maximum.1448 = select i1 %182, float %add.1146, float %region_0_59_constant_1247
  %compare.1549 = fcmp ogt float %maximum.1448, %region_0_59_constant_1247
  %183 = zext i1 %compare.1549 to i8
  %Arg_3.450 = getelementptr inbounds [8192 x float], ptr %arg3, i32 0, i32 %178
  %Arg_3.451 = load float, ptr %Arg_3.450, align 4, !invariant.load !297
  %Arg_2.352 = getelementptr inbounds [128 x [1 x float]], ptr %arg2, i32 0, i32 %173, i32 0
  %Arg_2.353 = load float, ptr %Arg_2.352, align 4, !invariant.load !297
  %multiply.1954 = fmul float %Arg_3.451, %Arg_2.353
  %Arg_1.255 = getelementptr inbounds [8192 x float], ptr %arg1, i32 0, i32 %178
  %Arg_1.256 = load float, ptr %Arg_1.255, align 4, !invariant.load !297
  %Arg_0.157 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %173, i32 0
  %Arg_0.158 = load float, ptr %Arg_0.157, align 4, !invariant.load !297
  %multiply.2359 = fmul float %Arg_1.256, %Arg_0.158
  %add.2460 = fadd float %multiply.1954, %multiply.2359
  %184 = trunc i8 %183 to i1
  %185 = select i1 %184, float %add.2460, float %region_0_59_constant_1247
  %186 = mul nuw nsw i32 %114, 1
  %187 = add nuw nsw i32 0, %186
  %188 = udiv i32 %187, 128
  %189 = mul nuw nsw i32 %116, 1
  %190 = add nuw nsw i32 0, %189
  %191 = mul nuw nsw i32 %117, 128
  %192 = add nuw nsw i32 %190, %191
  %193 = udiv i32 %192, 8192
  %Arg_6.761 = getelementptr inbounds float, ptr %arg6, i32 %112
  %Arg_6.762 = load float, ptr %Arg_6.761, align 4, !invariant.load !297
  %Arg_7.863 = getelementptr inbounds [128 x float], ptr %arg7, i32 0, i32 %187
  %Arg_7.864 = load float, ptr %Arg_7.863, align 4, !invariant.load !297
  %add.3465 = fadd float %Arg_6.762, %Arg_7.864
  %region_0_59_constant_1266 = load float, ptr @85, align 4
  %194 = fcmp oge float %add.3465, %region_0_59_constant_1266
  %195 = fcmp une float %add.3465, %add.3465
  %196 = or i1 %194, %195
  %maximum.3567 = select i1 %196, float %add.3465, float %region_0_59_constant_1266
  %compare.3668 = fcmp ogt float %maximum.3567, %region_0_59_constant_1266
  %197 = zext i1 %compare.3668 to i8
  %Arg_3.469 = getelementptr inbounds [8192 x float], ptr %arg3, i32 0, i32 %192
  %Arg_3.470 = load float, ptr %Arg_3.469, align 4, !invariant.load !297
  %Arg_2.371 = getelementptr inbounds [128 x [1 x float]], ptr %arg2, i32 0, i32 %187, i32 0
  %Arg_2.372 = load float, ptr %Arg_2.371, align 4, !invariant.load !297
  %multiply.1973 = fmul float %Arg_3.470, %Arg_2.372
  %Arg_1.274 = getelementptr inbounds [8192 x float], ptr %arg1, i32 0, i32 %192
  %Arg_1.275 = load float, ptr %Arg_1.274, align 4, !invariant.load !297
  %Arg_0.176 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %187, i32 0
  %Arg_0.177 = load float, ptr %Arg_0.176, align 4, !invariant.load !297
  %multiply.2378 = fmul float %Arg_1.275, %Arg_0.177
  %add.2479 = fadd float %multiply.1973, %multiply.2378
  %198 = trunc i8 %197 to i1
  %199 = select i1 %198, float %add.2479, float %region_0_59_constant_1266
  %200 = mul nuw nsw i32 %114, 1
  %201 = add nuw nsw i32 0, %200
  %202 = udiv i32 %201, 128
  %203 = mul nuw nsw i32 %116, 1
  %204 = add nuw nsw i32 0, %203
  %205 = mul nuw nsw i32 %117, 128
  %206 = add nuw nsw i32 %204, %205
  %207 = udiv i32 %206, 8192
  %208 = getelementptr inbounds float, ptr %arg12, i32 %112
  store float %199, ptr %208, align 4
  %209 = mul nuw nsw i32 %114, 1
  %210 = add nuw nsw i32 0, %209
  %211 = udiv i32 %210, 128
  %212 = mul nuw nsw i32 %116, 1
  %213 = add nuw nsw i32 0, %212
  %214 = mul nuw nsw i32 %117, 128
  %215 = add nuw nsw i32 %213, %214
  %216 = udiv i32 %215, 8192
  %217 = getelementptr inbounds float, ptr %arg10, i32 %112
  store float %185, ptr %217, align 4
  br label %x_in_tile-after

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %218 = mul i32 %thread_id.y, 1
  %219 = add i32 %tile_origin.1, %thread_id.x
  %220 = add i32 %tile_origin.2, %218
  %221 = add i32 %220, 0
  %222 = mul i32 %tile_origin.0, 128
  %223 = add i32 %222, %221
  %224 = udiv i32 %223, 1
  %225 = urem i32 %224, 128
  %226 = udiv i32 %223, 128
  %output_element_address = getelementptr inbounds [64 x [128 x float]], ptr %arg9, i32 0, i32 %226, i32 %225
  %output = load float, ptr %33, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

reduction_write_output-true112:                   ; preds = %reduction_write_output-after
  %227 = mul i32 %thread_id.y, 1
  %228 = add i32 %tile_origin.1, %thread_id.x
  %229 = add i32 %tile_origin.2, %227
  %230 = add i32 %229, 0
  %231 = mul i32 %tile_origin.0, 128
  %232 = add i32 %231, %230
  %233 = udiv i32 %232, 1
  %234 = urem i32 %233, 128
  %235 = udiv i32 %232, 128
  %output_element_address114 = getelementptr inbounds [64 x [128 x float]], ptr %arg11, i32 0, i32 %235, i32 %234
  %output115 = load float, ptr %52, align 4
  store float %output115, ptr %output_element_address114, align 4
  br label %reduction_write_output-after113

reduction_write_output-true134:                   ; preds = %reduction_write_output-after113
  %236 = mul i32 %thread_id.y, 1
  %237 = add i32 %tile_origin.1, %thread_id.x
  %238 = add i32 %tile_origin.2, %236
  %239 = add i32 %238, 0
  %240 = mul i32 %tile_origin.0, 128
  %241 = add i32 %240, %239
  %242 = udiv i32 %241, 1
  %243 = urem i32 %242, 128
  %244 = udiv i32 %241, 128
  %output_element_address136 = getelementptr inbounds [64 x [128 x float]], ptr %arg13, i32 0, i32 %244, i32 %243
  %output137 = load float, ptr %71, align 4
  store float %output137, ptr %output_element_address136, align 4
  br label %reduction_write_output-after135

reduction_write_output-true156:                   ; preds = %reduction_write_output-after135
  %245 = mul i32 %thread_id.y, 1
  %246 = add i32 %tile_origin.1, %thread_id.x
  %247 = add i32 %tile_origin.2, %245
  %248 = add i32 %247, 0
  %249 = mul i32 %tile_origin.0, 128
  %250 = add i32 %249, %248
  %251 = udiv i32 %250, 1
  %252 = urem i32 %251, 128
  %253 = udiv i32 %250, 128
  %output_element_address158 = getelementptr inbounds [64 x [128 x float]], ptr %arg14, i32 0, i32 %253, i32 %252
  %output159 = load float, ptr %90, align 4
  store float %output159, ptr %output_element_address158, align 4
  br label %reduction_write_output-after157
}

define internal void @region_1_28__3(ptr dereferenceable(4) %Arg_0.29.typed, ptr dereferenceable(4) %Arg_1.30.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.31.typed = alloca float, align 4
  %Arg_0.29 = load float, ptr %Arg_0.29.typed, align 4
  %Arg_1.30 = load float, ptr %Arg_1.30.typed, align 4
  %add.31 = fadd float %Arg_0.29, %Arg_1.30
  store float %add.31, ptr %add.31.typed, align 4
  %load_ret_value = load float, ptr %add.31.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_39(ptr dereferenceable(4) %Arg_0.40.typed, ptr dereferenceable(4) %Arg_1.41.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.42.typed = alloca float, align 4
  %Arg_0.40 = load float, ptr %Arg_0.40.typed, align 4
  %Arg_1.41 = load float, ptr %Arg_1.41.typed, align 4
  %add.42 = fadd float %Arg_0.40, %Arg_1.41
  store float %add.42, ptr %add.42.typed, align 4
  %load_ret_value = load float, ptr %add.42.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_3_46(ptr dereferenceable(4) %Arg_0.47.typed, ptr dereferenceable(4) %Arg_1.48.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.49.typed = alloca float, align 4
  %Arg_0.47 = load float, ptr %Arg_0.47.typed, align 4
  %Arg_1.48 = load float, ptr %Arg_1.48.typed, align 4
  %add.49 = fadd float %Arg_0.47, %Arg_1.48
  store float %add.49, ptr %add.49.typed, align 4
  %load_ret_value = load float, ptr %add.49.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_4_53(ptr dereferenceable(4) %Arg_0.54.typed, ptr dereferenceable(4) %Arg_1.55.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.56.typed = alloca float, align 4
  %Arg_0.54 = load float, ptr %Arg_0.54.typed, align 4
  %Arg_1.55 = load float, ptr %Arg_1.55.typed, align 4
  %add.56 = fadd float %Arg_0.54, %Arg_1.55
  store float %add.56, ptr %add.56.typed, align 4
  %load_ret_value = load float, ptr %add.56.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_690(ptr noalias align 16 dereferenceable(4) %arg0, ptr noalias align 128 dereferenceable(4) %arg1, ptr noalias align 16 dereferenceable(4) %arg2, ptr noalias align 128 dereferenceable(4) %arg3, ptr noalias align 16 dereferenceable(4) %arg4, ptr noalias align 128 dereferenceable(4) %arg5, ptr noalias align 16 dereferenceable(4) %arg6, ptr noalias align 128 dereferenceable(4) %arg7, ptr noalias align 16 dereferenceable(4) %arg8, ptr noalias align 128 dereferenceable(4) %arg9, ptr noalias align 16 dereferenceable(4) %arg10, ptr noalias align 128 dereferenceable(4) %arg11, ptr noalias align 16 dereferenceable(4) %arg12, ptr noalias align 128 dereferenceable(4) %arg13, ptr noalias align 16 dereferenceable(4) %arg14, ptr noalias align 128 dereferenceable(4) %arg15, ptr noalias align 16 dereferenceable(4) %arg16, ptr noalias align 128 dereferenceable(4) %arg17, ptr noalias align 16 dereferenceable(4) %arg18, ptr noalias align 128 dereferenceable(4) %arg19, ptr noalias align 16 dereferenceable(4) %arg20, ptr noalias align 128 dereferenceable(4) %arg21, ptr noalias align 16 dereferenceable(4) %arg22, ptr noalias align 128 dereferenceable(4) %arg23, ptr noalias align 16 dereferenceable(4) %arg24, ptr noalias align 128 dereferenceable(4) %arg25, ptr noalias align 16 dereferenceable(4) %arg26, ptr noalias align 128 dereferenceable(4) %arg27, ptr noalias align 16 dereferenceable(4) %arg28, ptr noalias align 128 dereferenceable(4) %arg29, ptr noalias align 16 dereferenceable(4) %arg30, ptr noalias align 128 dereferenceable(4) %arg31, ptr noalias align 16 dereferenceable(4) %arg32, ptr noalias align 128 dereferenceable(4) %arg33, ptr noalias align 16 dereferenceable(4) %arg34, ptr noalias align 128 dereferenceable(4) %arg35, ptr noalias align 16 dereferenceable(4) %arg36, ptr noalias align 128 dereferenceable(4) %arg37, ptr noalias align 16 dereferenceable(4) %arg38, ptr noalias align 128 dereferenceable(4) %arg39, ptr noalias align 16 dereferenceable(4) %arg40, ptr noalias align 128 dereferenceable(4) %arg41, ptr noalias align 16 dereferenceable(4) %arg42, ptr noalias align 128 dereferenceable(4) %arg43, ptr noalias align 16 dereferenceable(4) %arg44, ptr noalias align 128 dereferenceable(4) %arg45, ptr noalias align 16 dereferenceable(4) %arg46, ptr noalias align 128 dereferenceable(4) %arg47, ptr noalias align 16 dereferenceable(4) %arg48, ptr noalias align 128 dereferenceable(4) %arg49, ptr noalias align 16 dereferenceable(4) %arg50, ptr noalias align 128 dereferenceable(4) %arg51, ptr noalias align 16 dereferenceable(4) %arg52, ptr noalias align 128 dereferenceable(4) %arg53, ptr noalias align 16 dereferenceable(4) %arg54, ptr noalias align 128 dereferenceable(4) %arg55, ptr noalias align 128 dereferenceable(4) %arg56, ptr noalias align 128 dereferenceable(4) %arg57, ptr noalias align 128 dereferenceable(4) %arg58, ptr noalias align 128 dereferenceable(4) %arg59, ptr noalias align 128 dereferenceable(4) %arg60, ptr noalias align 128 dereferenceable(4) %arg61, ptr noalias align 128 dereferenceable(4) %arg62, ptr noalias align 128 dereferenceable(4) %arg63, ptr noalias align 128 dereferenceable(4) %arg64, ptr noalias align 128 dereferenceable(4) %arg65, ptr noalias align 128 dereferenceable(4) %arg66, ptr noalias align 128 dereferenceable(4) %arg67, ptr noalias align 128 dereferenceable(4) %arg68, ptr noalias align 128 dereferenceable(4) %arg69, ptr noalias align 128 dereferenceable(4) %arg70, ptr noalias align 128 dereferenceable(4) %arg71, ptr noalias align 128 dereferenceable(4) %arg72, ptr noalias align 128 dereferenceable(4) %arg73, ptr noalias align 128 dereferenceable(4) %arg74, ptr noalias align 128 dereferenceable(4) %arg75, ptr noalias align 128 dereferenceable(4) %arg76, ptr noalias align 128 dereferenceable(4) %arg77, ptr noalias align 128 dereferenceable(4) %arg78, ptr noalias align 128 dereferenceable(4) %arg79, ptr noalias align 128 dereferenceable(4) %arg80, ptr noalias align 128 dereferenceable(4) %arg81, ptr noalias align 128 dereferenceable(4) %arg82, ptr noalias align 128 dereferenceable(4) %arg83) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !294
  %2 = mul nuw nsw i32 %0, 1
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 1
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = icmp ult i32 %linear_index, 1
  br i1 %4, label %fusion_690.in_bounds-true, label %fusion_690.in_bounds-after

fusion_690.in_bounds-after:                       ; preds = %fusion_690.in_bounds-true, %entry
  ret void

fusion_690.in_bounds-true:                        ; preds = %entry
  %5 = getelementptr inbounds float, ptr %arg0, i32 %linear_index
  %6 = load float, ptr %5, align 4, !invariant.load !297
  %region_0_143_constant_57 = getelementptr inbounds float, ptr @87, i32 %linear_index
  %region_0_143_constant_571 = load float, ptr %region_0_143_constant_57, align 4
  %7 = load float, ptr %arg1, align 4, !invariant.load !297
  %multiply.59 = fmul float %region_0_143_constant_571, %7
  %subtract.60 = fsub float %6, %multiply.59
  %8 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } undef, float %subtract.60, 0
  %9 = getelementptr inbounds float, ptr %arg2, i32 %linear_index
  %10 = load float, ptr %9, align 4, !invariant.load !297
  %region_0_143_constant_572 = getelementptr inbounds float, ptr @87, i32 %linear_index
  %region_0_143_constant_573 = load float, ptr %region_0_143_constant_572, align 4
  %11 = load float, ptr %arg3, align 4, !invariant.load !297
  %multiply.62 = fmul float %region_0_143_constant_573, %11
  %subtract.63 = fsub float %10, %multiply.62
  %12 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %8, float %subtract.63, 1
  %13 = getelementptr inbounds float, ptr %arg4, i32 %linear_index
  %14 = load float, ptr %13, align 4, !invariant.load !297
  %region_0_143_constant_574 = getelementptr inbounds float, ptr @87, i32 %linear_index
  %region_0_143_constant_575 = load float, ptr %region_0_143_constant_574, align 4
  %15 = load float, ptr %arg5, align 4, !invariant.load !297
  %multiply.65 = fmul float %region_0_143_constant_575, %15
  %subtract.66 = fsub float %14, %multiply.65
  %16 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %12, float %subtract.66, 2
  %17 = getelementptr inbounds float, ptr %arg6, i32 %linear_index
  %18 = load float, ptr %17, align 4, !invariant.load !297
  %region_0_143_constant_576 = getelementptr inbounds float, ptr @87, i32 %linear_index
  %region_0_143_constant_577 = load float, ptr %region_0_143_constant_576, align 4
  %19 = load float, ptr %arg7, align 4, !invariant.load !297
  %multiply.68 = fmul float %region_0_143_constant_577, %19
  %subtract.69 = fsub float %18, %multiply.68
  %20 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %16, float %subtract.69, 3
  %21 = getelementptr inbounds float, ptr %arg8, i32 %linear_index
  %22 = load float, ptr %21, align 4, !invariant.load !297
  %region_0_143_constant_578 = getelementptr inbounds float, ptr @87, i32 %linear_index
  %region_0_143_constant_579 = load float, ptr %region_0_143_constant_578, align 4
  %23 = load float, ptr %arg9, align 4, !invariant.load !297
  %multiply.71 = fmul float %region_0_143_constant_579, %23
  %subtract.72 = fsub float %22, %multiply.71
  %24 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %20, float %subtract.72, 4
  %25 = getelementptr inbounds float, ptr %arg10, i32 %linear_index
  %26 = load float, ptr %25, align 4, !invariant.load !297
  %region_0_143_constant_5710 = getelementptr inbounds float, ptr @87, i32 %linear_index
  %region_0_143_constant_5711 = load float, ptr %region_0_143_constant_5710, align 4
  %27 = load float, ptr %arg11, align 4, !invariant.load !297
  %multiply.74 = fmul float %region_0_143_constant_5711, %27
  %subtract.75 = fsub float %26, %multiply.74
  %28 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %24, float %subtract.75, 5
  %29 = getelementptr inbounds float, ptr %arg12, i32 %linear_index
  %30 = load float, ptr %29, align 4, !invariant.load !297
  %region_0_143_constant_5712 = getelementptr inbounds float, ptr @87, i32 %linear_index
  %region_0_143_constant_5713 = load float, ptr %region_0_143_constant_5712, align 4
  %31 = load float, ptr %arg13, align 4, !invariant.load !297
  %multiply.77 = fmul float %region_0_143_constant_5713, %31
  %subtract.78 = fsub float %30, %multiply.77
  %32 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %28, float %subtract.78, 6
  %33 = getelementptr inbounds float, ptr %arg14, i32 %linear_index
  %34 = load float, ptr %33, align 4, !invariant.load !297
  %region_0_143_constant_5714 = getelementptr inbounds float, ptr @87, i32 %linear_index
  %region_0_143_constant_5715 = load float, ptr %region_0_143_constant_5714, align 4
  %35 = load float, ptr %arg15, align 4, !invariant.load !297
  %multiply.80 = fmul float %region_0_143_constant_5715, %35
  %subtract.81 = fsub float %34, %multiply.80
  %36 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %32, float %subtract.81, 7
  %37 = getelementptr inbounds float, ptr %arg16, i32 %linear_index
  %38 = load float, ptr %37, align 4, !invariant.load !297
  %region_0_143_constant_5716 = getelementptr inbounds float, ptr @87, i32 %linear_index
  %region_0_143_constant_5717 = load float, ptr %region_0_143_constant_5716, align 4
  %39 = load float, ptr %arg17, align 4, !invariant.load !297
  %multiply.83 = fmul float %region_0_143_constant_5717, %39
  %subtract.84 = fsub float %38, %multiply.83
  %40 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %36, float %subtract.84, 8
  %41 = getelementptr inbounds float, ptr %arg18, i32 %linear_index
  %42 = load float, ptr %41, align 4, !invariant.load !297
  %region_0_143_constant_5718 = getelementptr inbounds float, ptr @87, i32 %linear_index
  %region_0_143_constant_5719 = load float, ptr %region_0_143_constant_5718, align 4
  %43 = load float, ptr %arg19, align 4, !invariant.load !297
  %multiply.86 = fmul float %region_0_143_constant_5719, %43
  %subtract.87 = fsub float %42, %multiply.86
  %44 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %40, float %subtract.87, 9
  %45 = getelementptr inbounds float, ptr %arg20, i32 %linear_index
  %46 = load float, ptr %45, align 4, !invariant.load !297
  %region_0_143_constant_5720 = getelementptr inbounds float, ptr @87, i32 %linear_index
  %region_0_143_constant_5721 = load float, ptr %region_0_143_constant_5720, align 4
  %47 = load float, ptr %arg21, align 4, !invariant.load !297
  %multiply.89 = fmul float %region_0_143_constant_5721, %47
  %subtract.90 = fsub float %46, %multiply.89
  %48 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %44, float %subtract.90, 10
  %49 = getelementptr inbounds float, ptr %arg22, i32 %linear_index
  %50 = load float, ptr %49, align 4, !invariant.load !297
  %region_0_143_constant_5722 = getelementptr inbounds float, ptr @87, i32 %linear_index
  %region_0_143_constant_5723 = load float, ptr %region_0_143_constant_5722, align 4
  %51 = load float, ptr %arg23, align 4, !invariant.load !297
  %multiply.92 = fmul float %region_0_143_constant_5723, %51
  %subtract.93 = fsub float %50, %multiply.92
  %52 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %48, float %subtract.93, 11
  %53 = getelementptr inbounds float, ptr %arg24, i32 %linear_index
  %54 = load float, ptr %53, align 4, !invariant.load !297
  %region_0_143_constant_5724 = getelementptr inbounds float, ptr @87, i32 %linear_index
  %region_0_143_constant_5725 = load float, ptr %region_0_143_constant_5724, align 4
  %55 = load float, ptr %arg25, align 4, !invariant.load !297
  %multiply.95 = fmul float %region_0_143_constant_5725, %55
  %subtract.96 = fsub float %54, %multiply.95
  %56 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %52, float %subtract.96, 12
  %57 = getelementptr inbounds float, ptr %arg26, i32 %linear_index
  %58 = load float, ptr %57, align 4, !invariant.load !297
  %region_0_143_constant_5726 = getelementptr inbounds float, ptr @87, i32 %linear_index
  %region_0_143_constant_5727 = load float, ptr %region_0_143_constant_5726, align 4
  %59 = load float, ptr %arg27, align 4, !invariant.load !297
  %multiply.98 = fmul float %region_0_143_constant_5727, %59
  %subtract.99 = fsub float %58, %multiply.98
  %60 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %56, float %subtract.99, 13
  %61 = getelementptr inbounds float, ptr %arg28, i32 %linear_index
  %62 = load float, ptr %61, align 4, !invariant.load !297
  %region_0_143_constant_5728 = getelementptr inbounds float, ptr @87, i32 %linear_index
  %region_0_143_constant_5729 = load float, ptr %region_0_143_constant_5728, align 4
  %63 = load float, ptr %arg29, align 4, !invariant.load !297
  %multiply.101 = fmul float %region_0_143_constant_5729, %63
  %subtract.102 = fsub float %62, %multiply.101
  %64 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %60, float %subtract.102, 14
  %65 = getelementptr inbounds float, ptr %arg30, i32 %linear_index
  %66 = load float, ptr %65, align 4, !invariant.load !297
  %region_0_143_constant_5730 = getelementptr inbounds float, ptr @87, i32 %linear_index
  %region_0_143_constant_5731 = load float, ptr %region_0_143_constant_5730, align 4
  %67 = load float, ptr %arg31, align 4, !invariant.load !297
  %multiply.104 = fmul float %region_0_143_constant_5731, %67
  %subtract.105 = fsub float %66, %multiply.104
  %68 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %64, float %subtract.105, 15
  %69 = getelementptr inbounds float, ptr %arg32, i32 %linear_index
  %70 = load float, ptr %69, align 4, !invariant.load !297
  %region_0_143_constant_5732 = getelementptr inbounds float, ptr @87, i32 %linear_index
  %region_0_143_constant_5733 = load float, ptr %region_0_143_constant_5732, align 4
  %71 = load float, ptr %arg33, align 4, !invariant.load !297
  %multiply.107 = fmul float %region_0_143_constant_5733, %71
  %subtract.108 = fsub float %70, %multiply.107
  %72 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %68, float %subtract.108, 16
  %73 = getelementptr inbounds float, ptr %arg34, i32 %linear_index
  %74 = load float, ptr %73, align 4, !invariant.load !297
  %region_0_143_constant_5734 = getelementptr inbounds float, ptr @87, i32 %linear_index
  %region_0_143_constant_5735 = load float, ptr %region_0_143_constant_5734, align 4
  %75 = load float, ptr %arg35, align 4, !invariant.load !297
  %multiply.110 = fmul float %region_0_143_constant_5735, %75
  %subtract.111 = fsub float %74, %multiply.110
  %76 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %72, float %subtract.111, 17
  %77 = getelementptr inbounds float, ptr %arg36, i32 %linear_index
  %78 = load float, ptr %77, align 4, !invariant.load !297
  %region_0_143_constant_5736 = getelementptr inbounds float, ptr @87, i32 %linear_index
  %region_0_143_constant_5737 = load float, ptr %region_0_143_constant_5736, align 4
  %79 = load float, ptr %arg37, align 4, !invariant.load !297
  %multiply.113 = fmul float %region_0_143_constant_5737, %79
  %subtract.114 = fsub float %78, %multiply.113
  %80 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %76, float %subtract.114, 18
  %81 = getelementptr inbounds float, ptr %arg38, i32 %linear_index
  %82 = load float, ptr %81, align 4, !invariant.load !297
  %region_0_143_constant_5738 = getelementptr inbounds float, ptr @87, i32 %linear_index
  %region_0_143_constant_5739 = load float, ptr %region_0_143_constant_5738, align 4
  %83 = load float, ptr %arg39, align 4, !invariant.load !297
  %multiply.116 = fmul float %region_0_143_constant_5739, %83
  %subtract.117 = fsub float %82, %multiply.116
  %84 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %80, float %subtract.117, 19
  %85 = getelementptr inbounds float, ptr %arg40, i32 %linear_index
  %86 = load float, ptr %85, align 4, !invariant.load !297
  %region_0_143_constant_5740 = getelementptr inbounds float, ptr @87, i32 %linear_index
  %region_0_143_constant_5741 = load float, ptr %region_0_143_constant_5740, align 4
  %87 = load float, ptr %arg41, align 4, !invariant.load !297
  %multiply.119 = fmul float %region_0_143_constant_5741, %87
  %subtract.120 = fsub float %86, %multiply.119
  %88 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %84, float %subtract.120, 20
  %89 = getelementptr inbounds float, ptr %arg42, i32 %linear_index
  %90 = load float, ptr %89, align 4, !invariant.load !297
  %region_0_143_constant_5742 = getelementptr inbounds float, ptr @87, i32 %linear_index
  %region_0_143_constant_5743 = load float, ptr %region_0_143_constant_5742, align 4
  %91 = load float, ptr %arg43, align 4, !invariant.load !297
  %multiply.122 = fmul float %region_0_143_constant_5743, %91
  %subtract.123 = fsub float %90, %multiply.122
  %92 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %88, float %subtract.123, 21
  %93 = getelementptr inbounds float, ptr %arg44, i32 %linear_index
  %94 = load float, ptr %93, align 4, !invariant.load !297
  %region_0_143_constant_5744 = getelementptr inbounds float, ptr @87, i32 %linear_index
  %region_0_143_constant_5745 = load float, ptr %region_0_143_constant_5744, align 4
  %95 = load float, ptr %arg45, align 4, !invariant.load !297
  %multiply.125 = fmul float %region_0_143_constant_5745, %95
  %subtract.126 = fsub float %94, %multiply.125
  %96 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %92, float %subtract.126, 22
  %97 = getelementptr inbounds float, ptr %arg46, i32 %linear_index
  %98 = load float, ptr %97, align 4, !invariant.load !297
  %region_0_143_constant_5746 = getelementptr inbounds float, ptr @87, i32 %linear_index
  %region_0_143_constant_5747 = load float, ptr %region_0_143_constant_5746, align 4
  %99 = load float, ptr %arg47, align 4, !invariant.load !297
  %multiply.128 = fmul float %region_0_143_constant_5747, %99
  %subtract.129 = fsub float %98, %multiply.128
  %100 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %96, float %subtract.129, 23
  %101 = getelementptr inbounds float, ptr %arg48, i32 %linear_index
  %102 = load float, ptr %101, align 4, !invariant.load !297
  %region_0_143_constant_5748 = getelementptr inbounds float, ptr @87, i32 %linear_index
  %region_0_143_constant_5749 = load float, ptr %region_0_143_constant_5748, align 4
  %103 = load float, ptr %arg49, align 4, !invariant.load !297
  %multiply.131 = fmul float %region_0_143_constant_5749, %103
  %subtract.132 = fsub float %102, %multiply.131
  %104 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %100, float %subtract.132, 24
  %105 = getelementptr inbounds float, ptr %arg50, i32 %linear_index
  %106 = load float, ptr %105, align 4, !invariant.load !297
  %region_0_143_constant_5750 = getelementptr inbounds float, ptr @87, i32 %linear_index
  %region_0_143_constant_5751 = load float, ptr %region_0_143_constant_5750, align 4
  %107 = load float, ptr %arg51, align 4, !invariant.load !297
  %multiply.134 = fmul float %region_0_143_constant_5751, %107
  %subtract.135 = fsub float %106, %multiply.134
  %108 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %104, float %subtract.135, 25
  %109 = getelementptr inbounds float, ptr %arg52, i32 %linear_index
  %110 = load float, ptr %109, align 4, !invariant.load !297
  %region_0_143_constant_5752 = getelementptr inbounds float, ptr @87, i32 %linear_index
  %region_0_143_constant_5753 = load float, ptr %region_0_143_constant_5752, align 4
  %111 = load float, ptr %arg53, align 4, !invariant.load !297
  %multiply.137 = fmul float %region_0_143_constant_5753, %111
  %subtract.138 = fsub float %110, %multiply.137
  %112 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %108, float %subtract.138, 26
  %113 = getelementptr inbounds float, ptr %arg54, i32 %linear_index
  %114 = load float, ptr %113, align 4, !invariant.load !297
  %region_0_143_constant_5754 = getelementptr inbounds float, ptr @87, i32 %linear_index
  %region_0_143_constant_5755 = load float, ptr %region_0_143_constant_5754, align 4
  %115 = load float, ptr %arg55, align 4, !invariant.load !297
  %multiply.140 = fmul float %region_0_143_constant_5755, %115
  %subtract.141 = fsub float %114, %multiply.140
  %116 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %112, float %subtract.141, 27
  %117 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 0
  %118 = getelementptr inbounds float, ptr %arg56, i32 %linear_index
  store float %117, ptr %118, align 4
  %119 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 1
  %120 = getelementptr inbounds float, ptr %arg57, i32 %linear_index
  store float %119, ptr %120, align 4
  %121 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 2
  %122 = getelementptr inbounds float, ptr %arg58, i32 %linear_index
  store float %121, ptr %122, align 4
  %123 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 3
  %124 = getelementptr inbounds float, ptr %arg59, i32 %linear_index
  store float %123, ptr %124, align 4
  %125 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 4
  %126 = getelementptr inbounds float, ptr %arg60, i32 %linear_index
  store float %125, ptr %126, align 4
  %127 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 5
  %128 = getelementptr inbounds float, ptr %arg61, i32 %linear_index
  store float %127, ptr %128, align 4
  %129 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 6
  %130 = getelementptr inbounds float, ptr %arg62, i32 %linear_index
  store float %129, ptr %130, align 4
  %131 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 7
  %132 = getelementptr inbounds float, ptr %arg63, i32 %linear_index
  store float %131, ptr %132, align 4
  %133 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 8
  %134 = getelementptr inbounds float, ptr %arg64, i32 %linear_index
  store float %133, ptr %134, align 4
  %135 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 9
  %136 = getelementptr inbounds float, ptr %arg65, i32 %linear_index
  store float %135, ptr %136, align 4
  %137 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 10
  %138 = getelementptr inbounds float, ptr %arg66, i32 %linear_index
  store float %137, ptr %138, align 4
  %139 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 11
  %140 = getelementptr inbounds float, ptr %arg67, i32 %linear_index
  store float %139, ptr %140, align 4
  %141 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 12
  %142 = getelementptr inbounds float, ptr %arg68, i32 %linear_index
  store float %141, ptr %142, align 4
  %143 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 13
  %144 = getelementptr inbounds float, ptr %arg69, i32 %linear_index
  store float %143, ptr %144, align 4
  %145 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 14
  %146 = getelementptr inbounds float, ptr %arg70, i32 %linear_index
  store float %145, ptr %146, align 4
  %147 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 15
  %148 = getelementptr inbounds float, ptr %arg71, i32 %linear_index
  store float %147, ptr %148, align 4
  %149 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 16
  %150 = getelementptr inbounds float, ptr %arg72, i32 %linear_index
  store float %149, ptr %150, align 4
  %151 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 17
  %152 = getelementptr inbounds float, ptr %arg73, i32 %linear_index
  store float %151, ptr %152, align 4
  %153 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 18
  %154 = getelementptr inbounds float, ptr %arg74, i32 %linear_index
  store float %153, ptr %154, align 4
  %155 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 19
  %156 = getelementptr inbounds float, ptr %arg75, i32 %linear_index
  store float %155, ptr %156, align 4
  %157 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 20
  %158 = getelementptr inbounds float, ptr %arg76, i32 %linear_index
  store float %157, ptr %158, align 4
  %159 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 21
  %160 = getelementptr inbounds float, ptr %arg77, i32 %linear_index
  store float %159, ptr %160, align 4
  %161 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 22
  %162 = getelementptr inbounds float, ptr %arg78, i32 %linear_index
  store float %161, ptr %162, align 4
  %163 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 23
  %164 = getelementptr inbounds float, ptr %arg79, i32 %linear_index
  store float %163, ptr %164, align 4
  %165 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 24
  %166 = getelementptr inbounds float, ptr %arg80, i32 %linear_index
  store float %165, ptr %166, align 4
  %167 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 25
  %168 = getelementptr inbounds float, ptr %arg81, i32 %linear_index
  store float %167, ptr %168, align 4
  %169 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 26
  %170 = getelementptr inbounds float, ptr %arg82, i32 %linear_index
  store float %169, ptr %170, align 4
  %171 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 27
  %172 = getelementptr inbounds float, ptr %arg83, i32 %linear_index
  store float %171, ptr %172, align 4
  br label %fusion_690.in_bounds-after
}

define void @slice_268(ptr noalias align 128 dereferenceable(4063232) %arg0, ptr noalias align 128 dereferenceable(32768) %arg1) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !319
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 8192
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 1
  %5 = udiv i32 %linear_index, 1
  %6 = icmp ult i32 %linear_index, 8192
  br i1 %6, label %slice_268.in_bounds-true, label %slice_268.in_bounds-after

slice_268.in_bounds-after:                        ; preds = %slice_268.in_bounds-true, %entry
  ret void

slice_268.in_bounds-true:                         ; preds = %entry
  %7 = add i32 %5, 0
  %8 = add i32 %4, 16
  %9 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %7, i32 %8
  %10 = load float, ptr %9, align 4, !invariant.load !297
  %11 = getelementptr inbounds float, ptr %arg1, i32 %linear_index
  store float %10, ptr %11, align 4
  br label %slice_268.in_bounds-after
}

define void @slice_267(ptr noalias align 128 dereferenceable(4063232) %arg0, ptr noalias align 128 dereferenceable(32768) %arg1) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !319
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 8192
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 1
  %5 = udiv i32 %linear_index, 1
  %6 = icmp ult i32 %linear_index, 8192
  br i1 %6, label %slice_267.in_bounds-true, label %slice_267.in_bounds-after

slice_267.in_bounds-after:                        ; preds = %slice_267.in_bounds-true, %entry
  ret void

slice_267.in_bounds-true:                         ; preds = %entry
  %7 = add i32 %5, 0
  %8 = add i32 %4, 15
  %9 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %7, i32 %8
  %10 = load float, ptr %9, align 4, !invariant.load !297
  %11 = getelementptr inbounds float, ptr %arg1, i32 %linear_index
  store float %10, ptr %11, align 4
  br label %slice_267.in_bounds-after
}

define void @slice_266(ptr noalias align 128 dereferenceable(4063232) %arg0, ptr noalias align 128 dereferenceable(32768) %arg1) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !319
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 8192
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 1
  %5 = udiv i32 %linear_index, 1
  %6 = icmp ult i32 %linear_index, 8192
  br i1 %6, label %slice_266.in_bounds-true, label %slice_266.in_bounds-after

slice_266.in_bounds-after:                        ; preds = %slice_266.in_bounds-true, %entry
  ret void

slice_266.in_bounds-true:                         ; preds = %entry
  %7 = add i32 %5, 0
  %8 = add i32 %4, 14
  %9 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %7, i32 %8
  %10 = load float, ptr %9, align 4, !invariant.load !297
  %11 = getelementptr inbounds float, ptr %arg1, i32 %linear_index
  store float %10, ptr %11, align 4
  br label %slice_266.in_bounds-after
}

define void @slice_265(ptr noalias align 128 dereferenceable(4063232) %arg0, ptr noalias align 128 dereferenceable(32768) %arg1) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !319
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 8192
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 1
  %5 = udiv i32 %linear_index, 1
  %6 = icmp ult i32 %linear_index, 8192
  br i1 %6, label %slice_265.in_bounds-true, label %slice_265.in_bounds-after

slice_265.in_bounds-after:                        ; preds = %slice_265.in_bounds-true, %entry
  ret void

slice_265.in_bounds-true:                         ; preds = %entry
  %7 = add i32 %5, 0
  %8 = add i32 %4, 13
  %9 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %7, i32 %8
  %10 = load float, ptr %9, align 4, !invariant.load !297
  %11 = getelementptr inbounds float, ptr %arg1, i32 %linear_index
  store float %10, ptr %11, align 4
  br label %slice_265.in_bounds-after
}

define void @slice_264(ptr noalias align 128 dereferenceable(4063232) %arg0, ptr noalias align 128 dereferenceable(32768) %arg1) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !319
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 8192
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 1
  %5 = udiv i32 %linear_index, 1
  %6 = icmp ult i32 %linear_index, 8192
  br i1 %6, label %slice_264.in_bounds-true, label %slice_264.in_bounds-after

slice_264.in_bounds-after:                        ; preds = %slice_264.in_bounds-true, %entry
  ret void

slice_264.in_bounds-true:                         ; preds = %entry
  %7 = add i32 %5, 0
  %8 = add i32 %4, 12
  %9 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %7, i32 %8
  %10 = load float, ptr %9, align 4, !invariant.load !297
  %11 = getelementptr inbounds float, ptr %arg1, i32 %linear_index
  store float %10, ptr %11, align 4
  br label %slice_264.in_bounds-after
}

define void @slice_263(ptr noalias align 128 dereferenceable(4063232) %arg0, ptr noalias align 128 dereferenceable(32768) %arg1) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !319
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 8192
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 1
  %5 = udiv i32 %linear_index, 1
  %6 = icmp ult i32 %linear_index, 8192
  br i1 %6, label %slice_263.in_bounds-true, label %slice_263.in_bounds-after

slice_263.in_bounds-after:                        ; preds = %slice_263.in_bounds-true, %entry
  ret void

slice_263.in_bounds-true:                         ; preds = %entry
  %7 = add i32 %5, 0
  %8 = add i32 %4, 11
  %9 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %7, i32 %8
  %10 = load float, ptr %9, align 4, !invariant.load !297
  %11 = getelementptr inbounds float, ptr %arg1, i32 %linear_index
  store float %10, ptr %11, align 4
  br label %slice_263.in_bounds-after
}

define void @slice_262(ptr noalias align 128 dereferenceable(4063232) %arg0, ptr noalias align 128 dereferenceable(32768) %arg1) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !319
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 8192
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 1
  %5 = udiv i32 %linear_index, 1
  %6 = icmp ult i32 %linear_index, 8192
  br i1 %6, label %slice_262.in_bounds-true, label %slice_262.in_bounds-after

slice_262.in_bounds-after:                        ; preds = %slice_262.in_bounds-true, %entry
  ret void

slice_262.in_bounds-true:                         ; preds = %entry
  %7 = add i32 %5, 0
  %8 = add i32 %4, 10
  %9 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %7, i32 %8
  %10 = load float, ptr %9, align 4, !invariant.load !297
  %11 = getelementptr inbounds float, ptr %arg1, i32 %linear_index
  store float %10, ptr %11, align 4
  br label %slice_262.in_bounds-after
}

define void @slice_261(ptr noalias align 128 dereferenceable(4063232) %arg0, ptr noalias align 128 dereferenceable(32768) %arg1) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !319
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 8192
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 1
  %5 = udiv i32 %linear_index, 1
  %6 = icmp ult i32 %linear_index, 8192
  br i1 %6, label %slice_261.in_bounds-true, label %slice_261.in_bounds-after

slice_261.in_bounds-after:                        ; preds = %slice_261.in_bounds-true, %entry
  ret void

slice_261.in_bounds-true:                         ; preds = %entry
  %7 = add i32 %5, 0
  %8 = add i32 %4, 6
  %9 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %7, i32 %8
  %10 = load float, ptr %9, align 4, !invariant.load !297
  %11 = getelementptr inbounds float, ptr %arg1, i32 %linear_index
  store float %10, ptr %11, align 4
  br label %slice_261.in_bounds-after
}

define void @slice_260(ptr noalias align 128 dereferenceable(4063232) %arg0, ptr noalias align 128 dereferenceable(32768) %arg1) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !319
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 8192
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 1
  %5 = udiv i32 %linear_index, 1
  %6 = icmp ult i32 %linear_index, 8192
  br i1 %6, label %slice_260.in_bounds-true, label %slice_260.in_bounds-after

slice_260.in_bounds-after:                        ; preds = %slice_260.in_bounds-true, %entry
  ret void

slice_260.in_bounds-true:                         ; preds = %entry
  %7 = add i32 %5, 0
  %8 = add i32 %4, 5
  %9 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %7, i32 %8
  %10 = load float, ptr %9, align 4, !invariant.load !297
  %11 = getelementptr inbounds float, ptr %arg1, i32 %linear_index
  store float %10, ptr %11, align 4
  br label %slice_260.in_bounds-after
}

define void @slice_259(ptr noalias align 128 dereferenceable(4063232) %arg0, ptr noalias align 128 dereferenceable(32768) %arg1) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !319
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 8192
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 1
  %5 = udiv i32 %linear_index, 1
  %6 = icmp ult i32 %linear_index, 8192
  br i1 %6, label %slice_259.in_bounds-true, label %slice_259.in_bounds-after

slice_259.in_bounds-after:                        ; preds = %slice_259.in_bounds-true, %entry
  ret void

slice_259.in_bounds-true:                         ; preds = %entry
  %7 = add i32 %5, 0
  %8 = add i32 %4, 4
  %9 = getelementptr inbounds [8192 x [124 x float]], ptr %arg0, i32 0, i32 %7, i32 %8
  %10 = load float, ptr %9, align 4, !invariant.load !297
  %11 = getelementptr inbounds float, ptr %arg1, i32 %linear_index
  store float %10, ptr %11, align 4
  br label %slice_259.in_bounds-after
}

define void @fusion_137(ptr noalias align 16 dereferenceable(512) %arg0, ptr noalias align 128 dereferenceable(32768) %arg1, ptr noalias align 16 dereferenceable(512) %arg2, ptr noalias align 128 dereferenceable(32768) %arg3, ptr noalias align 16 dereferenceable(512) %arg4, ptr noalias align 128 dereferenceable(32768) %arg5, ptr noalias align 16 dereferenceable(512) %arg6, ptr noalias align 128 dereferenceable(32768) %arg7, ptr noalias align 128 dereferenceable(4194304) %arg8, ptr noalias align 16 dereferenceable(512) %arg9, ptr noalias align 128 dereferenceable(32768) %arg10, ptr noalias align 128 dereferenceable(4194304) %arg11, ptr noalias align 128 dereferenceable(32768) %arg12, ptr noalias align 128 dereferenceable(32768) %arg13, ptr noalias align 128 dereferenceable(32768) %arg14, ptr noalias align 128 dereferenceable(32768) %arg15) {
entry:
  %return_buffer193 = alloca float, align 4
  %result_from_other_lane191 = alloca float, align 4
  %return_buffer190 = alloca float, align 4
  %result_from_other_lane188 = alloca float, align 4
  %return_buffer187 = alloca float, align 4
  %result_from_other_lane185 = alloca float, align 4
  %return_buffer184 = alloca float, align 4
  %result_from_other_lane182 = alloca float, align 4
  %return_buffer181 = alloca float, align 4
  %result_from_other_lane179 = alloca float, align 4
  %return_buffer171 = alloca float, align 4
  %result_from_other_lane169 = alloca float, align 4
  %return_buffer168 = alloca float, align 4
  %result_from_other_lane166 = alloca float, align 4
  %return_buffer165 = alloca float, align 4
  %result_from_other_lane163 = alloca float, align 4
  %return_buffer162 = alloca float, align 4
  %result_from_other_lane160 = alloca float, align 4
  %return_buffer159 = alloca float, align 4
  %result_from_other_lane157 = alloca float, align 4
  %return_buffer149 = alloca float, align 4
  %result_from_other_lane147 = alloca float, align 4
  %return_buffer146 = alloca float, align 4
  %result_from_other_lane144 = alloca float, align 4
  %return_buffer143 = alloca float, align 4
  %result_from_other_lane141 = alloca float, align 4
  %return_buffer140 = alloca float, align 4
  %result_from_other_lane138 = alloca float, align 4
  %return_buffer137 = alloca float, align 4
  %result_from_other_lane135 = alloca float, align 4
  %return_buffer127 = alloca float, align 4
  %result_from_other_lane125 = alloca float, align 4
  %return_buffer124 = alloca float, align 4
  %result_from_other_lane122 = alloca float, align 4
  %return_buffer121 = alloca float, align 4
  %result_from_other_lane119 = alloca float, align 4
  %return_buffer118 = alloca float, align 4
  %result_from_other_lane116 = alloca float, align 4
  %return_buffer115 = alloca float, align 4
  %result_from_other_lane113 = alloca float, align 4
  %return_buffer109 = alloca float, align 4
  %result_from_other_lane107 = alloca float, align 4
  %return_buffer106 = alloca float, align 4
  %result_from_other_lane104 = alloca float, align 4
  %return_buffer103 = alloca float, align 4
  %result_from_other_lane101 = alloca float, align 4
  %return_buffer100 = alloca float, align 4
  %result_from_other_lane98 = alloca float, align 4
  %return_buffer97 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer64 = alloca float, align 4
  %return_buffer54 = alloca float, align 4
  %return_buffer44 = alloca float, align 4
  %return_buffer34 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result10 = alloca float, align 4
  %reduction_input_address9 = alloca float, align 4
  %partial_reduction_result7 = alloca float, align 4
  %reduction_input_address6 = alloca float, align 4
  %partial_reduction_result4 = alloca float, align 4
  %reduction_input_address3 = alloca float, align 4
  %partial_reduction_result2 = alloca float, align 4
  %reduction_input_address1 = alloca float, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after195, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_73_constant_38 = load float, ptr @89, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_73_constant_38, ptr %2, align 4
  %region_0_73_constant_13 = load float, ptr @88, align 4
  %3 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  store float %region_0_73_constant_13, ptr %3, align 4
  %region_0_73_constant_135 = load float, ptr @88, align 4
  %4 = getelementptr inbounds float, ptr %partial_reduction_result4, i32 0
  store float %region_0_73_constant_135, ptr %4, align 4
  %region_0_73_constant_138 = load float, ptr @88, align 4
  %5 = getelementptr inbounds float, ptr %partial_reduction_result7, i32 0
  store float %region_0_73_constant_138, ptr %5, align 4
  %region_0_73_constant_1311 = load float, ptr @88, align 4
  %6 = getelementptr inbounds float, ptr %partial_reduction_result10, i32 0
  store float %region_0_73_constant_1311, ptr %6, align 4
  %7 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %8 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !362
  %9 = urem i32 %7, 1024
  %10 = udiv i32 %7, 1024
  %11 = mul i32 %8, 1
  %12 = add i32 %11, %10
  %13 = icmp ult i32 %12, 256
  br i1 %13, label %14, label %early_return

14:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %9, 32
  %thread_id.y = udiv i32 %9, 32
  %lane_id = urem i32 %9, 32
  %15 = udiv i32 %12, 1
  %16 = urem i32 %15, 4
  %17 = udiv i32 %12, 4
  %18 = urem i32 %17, 1
  %19 = udiv i32 %12, 4
  %20 = icmp eq i32 %18, 0
  %tile_bound = select i1 %20, i32 128, i32 4096
  %21 = icmp eq i32 %16, 3
  %tile_bound12 = select i1 %21, i32 32, i32 32
  %tile_origin.0 = mul i32 %19, 1
  %tile_origin.1 = mul i32 %18, 4096
  %tile_origin.2 = mul i32 %16, 32
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %14
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %22 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %22, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %23 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %24 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %25 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %25, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc13 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc13, ptr %tile_loop.invar_address, align 4
  %26 = icmp eq i32 %tile_loop.indvar, 0
  %27 = mul i32 %tile_loop.indvar, 1
  %28 = add i32 %27, 0
  %x_loc = add i32 %28, %24
  %29 = add i32 %tile_origin.1, %y_in_tile.indvar
  %30 = add i32 %tile_origin.2, %x_loc
  %31 = icmp ult i32 %x_loc, %tile_bound12
  br i1 %31, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body
  br label %tile_loop.loop_header, !llvm.loop !475

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !476

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache117, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %32 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %33 = load float, ptr %current_output, align 4
  store float %33, ptr %32, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache117, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %34 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result96 = load float, ptr %34, align 4
  %35 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result96, i32 16, i32 31)
  store float %35, ptr %result_from_other_lane, align 4
  call void @region_1_39__1(ptr %34, ptr %result_from_other_lane, ptr %return_buffer97)
  %36 = load float, ptr %return_buffer97, align 4
  store float %36, ptr %34, align 4
  %partial_reduction_result99 = load float, ptr %34, align 4
  %37 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result99, i32 8, i32 31)
  store float %37, ptr %result_from_other_lane98, align 4
  call void @region_1_39__1(ptr %34, ptr %result_from_other_lane98, ptr %return_buffer100)
  %38 = load float, ptr %return_buffer100, align 4
  store float %38, ptr %34, align 4
  %partial_reduction_result102 = load float, ptr %34, align 4
  %39 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result102, i32 4, i32 31)
  store float %39, ptr %result_from_other_lane101, align 4
  call void @region_1_39__1(ptr %34, ptr %result_from_other_lane101, ptr %return_buffer103)
  %40 = load float, ptr %return_buffer103, align 4
  store float %40, ptr %34, align 4
  %partial_reduction_result105 = load float, ptr %34, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result105, i32 2, i32 31)
  store float %41, ptr %result_from_other_lane104, align 4
  call void @region_1_39__1(ptr %34, ptr %result_from_other_lane104, ptr %return_buffer106)
  %42 = load float, ptr %return_buffer106, align 4
  store float %42, ptr %34, align 4
  %partial_reduction_result108 = load float, ptr %34, align 4
  %43 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result108, i32 1, i32 31)
  store float %43, ptr %result_from_other_lane107, align 4
  call void @region_1_39__1(ptr %34, ptr %result_from_other_lane107, ptr %return_buffer109)
  %44 = load float, ptr %return_buffer109, align 4
  store float %44, ptr %34, align 4
  %45 = icmp ult i32 %thread_id.x, %tile_bound
  %46 = mul i32 %thread_id.y, 1
  %47 = icmp ult i32 %46, %tile_bound12
  %48 = and i1 %47, %45
  %49 = icmp eq i32 %lane_id, 0
  %50 = and i1 %48, %49
  br i1 %50, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %shmem_output_address110 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache118, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %51 = addrspacecast ptr addrspace(3) %shmem_output_address110 to ptr
  %current_output111 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  %52 = load float, ptr %current_output111, align 4
  store float %52, ptr %51, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr112 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache118, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %53 = addrspacecast ptr addrspace(3) %shmem_transposed_addr112 to ptr
  %partial_reduction_result114 = load float, ptr %53, align 4
  %54 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result114, i32 16, i32 31)
  store float %54, ptr %result_from_other_lane113, align 4
  call void @region_2_46__1(ptr %53, ptr %result_from_other_lane113, ptr %return_buffer115)
  %55 = load float, ptr %return_buffer115, align 4
  store float %55, ptr %53, align 4
  %partial_reduction_result117 = load float, ptr %53, align 4
  %56 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result117, i32 8, i32 31)
  store float %56, ptr %result_from_other_lane116, align 4
  call void @region_2_46__1(ptr %53, ptr %result_from_other_lane116, ptr %return_buffer118)
  %57 = load float, ptr %return_buffer118, align 4
  store float %57, ptr %53, align 4
  %partial_reduction_result120 = load float, ptr %53, align 4
  %58 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result120, i32 4, i32 31)
  store float %58, ptr %result_from_other_lane119, align 4
  call void @region_2_46__1(ptr %53, ptr %result_from_other_lane119, ptr %return_buffer121)
  %59 = load float, ptr %return_buffer121, align 4
  store float %59, ptr %53, align 4
  %partial_reduction_result123 = load float, ptr %53, align 4
  %60 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result123, i32 2, i32 31)
  store float %60, ptr %result_from_other_lane122, align 4
  call void @region_2_46__1(ptr %53, ptr %result_from_other_lane122, ptr %return_buffer124)
  %61 = load float, ptr %return_buffer124, align 4
  store float %61, ptr %53, align 4
  %partial_reduction_result126 = load float, ptr %53, align 4
  %62 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result126, i32 1, i32 31)
  store float %62, ptr %result_from_other_lane125, align 4
  call void @region_2_46__1(ptr %53, ptr %result_from_other_lane125, ptr %return_buffer127)
  %63 = load float, ptr %return_buffer127, align 4
  store float %63, ptr %53, align 4
  %64 = icmp ult i32 %thread_id.x, %tile_bound
  %65 = mul i32 %thread_id.y, 1
  %66 = icmp ult i32 %65, %tile_bound12
  %67 = and i1 %66, %64
  %68 = icmp eq i32 %lane_id, 0
  %69 = and i1 %67, %68
  br i1 %69, label %reduction_write_output-true128, label %reduction_write_output-after129

reduction_write_output-after129:                  ; preds = %reduction_write_output-true128, %reduction_write_output-after
  %shmem_output_address132 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache119, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %70 = addrspacecast ptr addrspace(3) %shmem_output_address132 to ptr
  %current_output133 = getelementptr inbounds float, ptr %partial_reduction_result4, i32 0
  %71 = load float, ptr %current_output133, align 4
  store float %71, ptr %70, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr134 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache119, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %72 = addrspacecast ptr addrspace(3) %shmem_transposed_addr134 to ptr
  %partial_reduction_result136 = load float, ptr %72, align 4
  %73 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result136, i32 16, i32 31)
  store float %73, ptr %result_from_other_lane135, align 4
  call void @region_3_53(ptr %72, ptr %result_from_other_lane135, ptr %return_buffer137)
  %74 = load float, ptr %return_buffer137, align 4
  store float %74, ptr %72, align 4
  %partial_reduction_result139 = load float, ptr %72, align 4
  %75 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result139, i32 8, i32 31)
  store float %75, ptr %result_from_other_lane138, align 4
  call void @region_3_53(ptr %72, ptr %result_from_other_lane138, ptr %return_buffer140)
  %76 = load float, ptr %return_buffer140, align 4
  store float %76, ptr %72, align 4
  %partial_reduction_result142 = load float, ptr %72, align 4
  %77 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result142, i32 4, i32 31)
  store float %77, ptr %result_from_other_lane141, align 4
  call void @region_3_53(ptr %72, ptr %result_from_other_lane141, ptr %return_buffer143)
  %78 = load float, ptr %return_buffer143, align 4
  store float %78, ptr %72, align 4
  %partial_reduction_result145 = load float, ptr %72, align 4
  %79 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result145, i32 2, i32 31)
  store float %79, ptr %result_from_other_lane144, align 4
  call void @region_3_53(ptr %72, ptr %result_from_other_lane144, ptr %return_buffer146)
  %80 = load float, ptr %return_buffer146, align 4
  store float %80, ptr %72, align 4
  %partial_reduction_result148 = load float, ptr %72, align 4
  %81 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result148, i32 1, i32 31)
  store float %81, ptr %result_from_other_lane147, align 4
  call void @region_3_53(ptr %72, ptr %result_from_other_lane147, ptr %return_buffer149)
  %82 = load float, ptr %return_buffer149, align 4
  store float %82, ptr %72, align 4
  %83 = icmp ult i32 %thread_id.x, %tile_bound
  %84 = mul i32 %thread_id.y, 1
  %85 = icmp ult i32 %84, %tile_bound12
  %86 = and i1 %85, %83
  %87 = icmp eq i32 %lane_id, 0
  %88 = and i1 %86, %87
  br i1 %88, label %reduction_write_output-true150, label %reduction_write_output-after151

reduction_write_output-after151:                  ; preds = %reduction_write_output-true150, %reduction_write_output-after129
  %shmem_output_address154 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache120, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %89 = addrspacecast ptr addrspace(3) %shmem_output_address154 to ptr
  %current_output155 = getelementptr inbounds float, ptr %partial_reduction_result7, i32 0
  %90 = load float, ptr %current_output155, align 4
  store float %90, ptr %89, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr156 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache120, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %91 = addrspacecast ptr addrspace(3) %shmem_transposed_addr156 to ptr
  %partial_reduction_result158 = load float, ptr %91, align 4
  %92 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result158, i32 16, i32 31)
  store float %92, ptr %result_from_other_lane157, align 4
  call void @region_4_60(ptr %91, ptr %result_from_other_lane157, ptr %return_buffer159)
  %93 = load float, ptr %return_buffer159, align 4
  store float %93, ptr %91, align 4
  %partial_reduction_result161 = load float, ptr %91, align 4
  %94 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result161, i32 8, i32 31)
  store float %94, ptr %result_from_other_lane160, align 4
  call void @region_4_60(ptr %91, ptr %result_from_other_lane160, ptr %return_buffer162)
  %95 = load float, ptr %return_buffer162, align 4
  store float %95, ptr %91, align 4
  %partial_reduction_result164 = load float, ptr %91, align 4
  %96 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result164, i32 4, i32 31)
  store float %96, ptr %result_from_other_lane163, align 4
  call void @region_4_60(ptr %91, ptr %result_from_other_lane163, ptr %return_buffer165)
  %97 = load float, ptr %return_buffer165, align 4
  store float %97, ptr %91, align 4
  %partial_reduction_result167 = load float, ptr %91, align 4
  %98 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result167, i32 2, i32 31)
  store float %98, ptr %result_from_other_lane166, align 4
  call void @region_4_60(ptr %91, ptr %result_from_other_lane166, ptr %return_buffer168)
  %99 = load float, ptr %return_buffer168, align 4
  store float %99, ptr %91, align 4
  %partial_reduction_result170 = load float, ptr %91, align 4
  %100 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result170, i32 1, i32 31)
  store float %100, ptr %result_from_other_lane169, align 4
  call void @region_4_60(ptr %91, ptr %result_from_other_lane169, ptr %return_buffer171)
  %101 = load float, ptr %return_buffer171, align 4
  store float %101, ptr %91, align 4
  %102 = icmp ult i32 %thread_id.x, %tile_bound
  %103 = mul i32 %thread_id.y, 1
  %104 = icmp ult i32 %103, %tile_bound12
  %105 = and i1 %104, %102
  %106 = icmp eq i32 %lane_id, 0
  %107 = and i1 %105, %106
  br i1 %107, label %reduction_write_output-true172, label %reduction_write_output-after173

reduction_write_output-after173:                  ; preds = %reduction_write_output-true172, %reduction_write_output-after151
  %shmem_output_address176 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache121, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %108 = addrspacecast ptr addrspace(3) %shmem_output_address176 to ptr
  %current_output177 = getelementptr inbounds float, ptr %partial_reduction_result10, i32 0
  %109 = load float, ptr %current_output177, align 4
  store float %109, ptr %108, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr178 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache121, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %110 = addrspacecast ptr addrspace(3) %shmem_transposed_addr178 to ptr
  %partial_reduction_result180 = load float, ptr %110, align 4
  %111 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result180, i32 16, i32 31)
  store float %111, ptr %result_from_other_lane179, align 4
  call void @region_5_67(ptr %110, ptr %result_from_other_lane179, ptr %return_buffer181)
  %112 = load float, ptr %return_buffer181, align 4
  store float %112, ptr %110, align 4
  %partial_reduction_result183 = load float, ptr %110, align 4
  %113 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result183, i32 8, i32 31)
  store float %113, ptr %result_from_other_lane182, align 4
  call void @region_5_67(ptr %110, ptr %result_from_other_lane182, ptr %return_buffer184)
  %114 = load float, ptr %return_buffer184, align 4
  store float %114, ptr %110, align 4
  %partial_reduction_result186 = load float, ptr %110, align 4
  %115 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result186, i32 4, i32 31)
  store float %115, ptr %result_from_other_lane185, align 4
  call void @region_5_67(ptr %110, ptr %result_from_other_lane185, ptr %return_buffer187)
  %116 = load float, ptr %return_buffer187, align 4
  store float %116, ptr %110, align 4
  %partial_reduction_result189 = load float, ptr %110, align 4
  %117 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result189, i32 2, i32 31)
  store float %117, ptr %result_from_other_lane188, align 4
  call void @region_5_67(ptr %110, ptr %result_from_other_lane188, ptr %return_buffer190)
  %118 = load float, ptr %return_buffer190, align 4
  store float %118, ptr %110, align 4
  %partial_reduction_result192 = load float, ptr %110, align 4
  %119 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result192, i32 1, i32 31)
  store float %119, ptr %result_from_other_lane191, align 4
  call void @region_5_67(ptr %110, ptr %result_from_other_lane191, ptr %return_buffer193)
  %120 = load float, ptr %return_buffer193, align 4
  store float %120, ptr %110, align 4
  %121 = icmp ult i32 %thread_id.x, %tile_bound
  %122 = mul i32 %thread_id.y, 1
  %123 = icmp ult i32 %122, %tile_bound12
  %124 = and i1 %123, %121
  %125 = icmp eq i32 %lane_id, 0
  %126 = and i1 %124, %125
  br i1 %126, label %reduction_write_output-true194, label %reduction_write_output-after195

reduction_write_output-after195:                  ; preds = %reduction_write_output-true194, %reduction_write_output-after173
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %127 = mul nuw nsw i32 %30, 1
  %128 = add nuw nsw i32 0, %127
  %129 = mul nuw nsw i32 %29, 128
  %130 = add nuw nsw i32 %128, %129
  %131 = mul nuw nsw i32 %tile_origin.0, 16384
  %132 = add nuw nsw i32 %130, %131
  %133 = udiv i32 %132, 1
  %134 = urem i32 %133, 128
  %135 = udiv i32 %132, 128
  %136 = urem i32 %135, 128
  %137 = udiv i32 %132, 16384
  %138 = mul i32 %thread_id.x, 1
  %139 = sub i32 %x_loc, %138
  %140 = mul nuw nsw i32 %134, 1
  %141 = add nuw nsw i32 0, %140
  %142 = udiv i32 %141, 128
  %143 = mul nuw nsw i32 %136, 1
  %144 = add nuw nsw i32 0, %143
  %145 = mul nuw nsw i32 %137, 128
  %146 = add nuw nsw i32 %144, %145
  %147 = udiv i32 %146, 8192
  %Arg_8.9 = getelementptr inbounds float, ptr %arg8, i32 %132
  %Arg_8.914 = load float, ptr %Arg_8.9, align 4, !invariant.load !297
  %Arg_9.10 = getelementptr inbounds [128 x float], ptr %arg9, i32 0, i32 %141
  %Arg_9.1015 = load float, ptr %Arg_9.10, align 4, !invariant.load !297
  %add.12 = fadd float %Arg_8.914, %Arg_9.1015
  %region_0_73_constant_1316 = load float, ptr @88, align 4
  %148 = fcmp oge float %add.12, %region_0_73_constant_1316
  %149 = fcmp une float %add.12, %add.12
  %150 = or i1 %148, %149
  %maximum.15 = select i1 %150, float %add.12, float %region_0_73_constant_1316
  %compare.16 = fcmp ogt float %maximum.15, %region_0_73_constant_1316
  %151 = zext i1 %compare.16 to i8
  %Arg_7.8 = getelementptr inbounds [8192 x float], ptr %arg7, i32 0, i32 %146
  %Arg_7.817 = load float, ptr %Arg_7.8, align 4, !invariant.load !297
  %Arg_6.7 = getelementptr inbounds [128 x [1 x float]], ptr %arg6, i32 0, i32 %141, i32 0
  %Arg_6.718 = load float, ptr %Arg_6.7, align 4, !invariant.load !297
  %multiply.20 = fmul float %Arg_7.817, %Arg_6.718
  %Arg_5.6 = getelementptr inbounds [8192 x float], ptr %arg5, i32 0, i32 %146
  %Arg_5.619 = load float, ptr %Arg_5.6, align 4, !invariant.load !297
  %Arg_4.5 = getelementptr inbounds [128 x [1 x float]], ptr %arg4, i32 0, i32 %141, i32 0
  %Arg_4.520 = load float, ptr %Arg_4.5, align 4, !invariant.load !297
  %multiply.24 = fmul float %Arg_5.619, %Arg_4.520
  %add.25 = fadd float %multiply.20, %multiply.24
  %Arg_3.4 = getelementptr inbounds [8192 x float], ptr %arg3, i32 0, i32 %146
  %Arg_3.421 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  %Arg_2.3 = getelementptr inbounds [128 x [1 x float]], ptr %arg2, i32 0, i32 %141, i32 0
  %Arg_2.322 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %multiply.29 = fmul float %Arg_3.421, %Arg_2.322
  %add.30 = fadd float %add.25, %multiply.29
  %Arg_1.2 = getelementptr inbounds [8192 x float], ptr %arg1, i32 0, i32 %146
  %Arg_1.223 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %Arg_0.1 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %141, i32 0
  %Arg_0.124 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %multiply.34 = fmul float %Arg_1.223, %Arg_0.124
  %add.35 = fadd float %add.30, %multiply.34
  %152 = trunc i8 %151 to i1
  %153 = select i1 %152, float %add.35, float %region_0_73_constant_1316
  store float %153, ptr %reduction_input_address, align 4
  %154 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %139
  call void @region_1_39__1(ptr %154, ptr %reduction_input_address, ptr %return_buffer)
  %155 = load float, ptr %return_buffer, align 4
  store float %155, ptr %154, align 4
  %156 = mul nuw nsw i32 %134, 1
  %157 = add nuw nsw i32 0, %156
  %158 = udiv i32 %157, 128
  %159 = mul nuw nsw i32 %136, 1
  %160 = add nuw nsw i32 0, %159
  %161 = mul nuw nsw i32 %137, 128
  %162 = add nuw nsw i32 %160, %161
  %163 = udiv i32 %162, 8192
  %Arg_8.925 = getelementptr inbounds float, ptr %arg8, i32 %132
  %Arg_8.926 = load float, ptr %Arg_8.925, align 4, !invariant.load !297
  %Arg_9.1027 = getelementptr inbounds [128 x float], ptr %arg9, i32 0, i32 %157
  %Arg_9.1028 = load float, ptr %Arg_9.1027, align 4, !invariant.load !297
  %add.1229 = fadd float %Arg_8.926, %Arg_9.1028
  %region_0_73_constant_1330 = load float, ptr @88, align 4
  %164 = fcmp oge float %add.1229, %region_0_73_constant_1330
  %165 = fcmp une float %add.1229, %add.1229
  %166 = or i1 %164, %165
  %maximum.1531 = select i1 %166, float %add.1229, float %region_0_73_constant_1330
  %Arg_5.632 = getelementptr inbounds [8192 x float], ptr %arg5, i32 0, i32 %162
  %Arg_5.633 = load float, ptr %Arg_5.632, align 4, !invariant.load !297
  %multiply.44 = fmul float %maximum.1531, %Arg_5.633
  store float %multiply.44, ptr %reduction_input_address1, align 4
  %167 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 %139
  call void @region_2_46__1(ptr %167, ptr %reduction_input_address1, ptr %return_buffer34)
  %168 = load float, ptr %return_buffer34, align 4
  store float %168, ptr %167, align 4
  %169 = mul nuw nsw i32 %134, 1
  %170 = add nuw nsw i32 0, %169
  %171 = udiv i32 %170, 128
  %172 = mul nuw nsw i32 %136, 1
  %173 = add nuw nsw i32 0, %172
  %174 = mul nuw nsw i32 %137, 128
  %175 = add nuw nsw i32 %173, %174
  %176 = udiv i32 %175, 8192
  %Arg_8.935 = getelementptr inbounds float, ptr %arg8, i32 %132
  %Arg_8.936 = load float, ptr %Arg_8.935, align 4, !invariant.load !297
  %Arg_9.1037 = getelementptr inbounds [128 x float], ptr %arg9, i32 0, i32 %170
  %Arg_9.1038 = load float, ptr %Arg_9.1037, align 4, !invariant.load !297
  %add.1239 = fadd float %Arg_8.936, %Arg_9.1038
  %region_0_73_constant_1340 = load float, ptr @88, align 4
  %177 = fcmp oge float %add.1239, %region_0_73_constant_1340
  %178 = fcmp une float %add.1239, %add.1239
  %179 = or i1 %177, %178
  %maximum.1541 = select i1 %179, float %add.1239, float %region_0_73_constant_1340
  %Arg_3.442 = getelementptr inbounds [8192 x float], ptr %arg3, i32 0, i32 %175
  %Arg_3.443 = load float, ptr %Arg_3.442, align 4, !invariant.load !297
  %multiply.51 = fmul float %maximum.1541, %Arg_3.443
  store float %multiply.51, ptr %reduction_input_address3, align 4
  %180 = getelementptr inbounds float, ptr %partial_reduction_result4, i32 %139
  call void @region_3_53(ptr %180, ptr %reduction_input_address3, ptr %return_buffer44)
  %181 = load float, ptr %return_buffer44, align 4
  store float %181, ptr %180, align 4
  %182 = mul nuw nsw i32 %134, 1
  %183 = add nuw nsw i32 0, %182
  %184 = udiv i32 %183, 128
  %185 = mul nuw nsw i32 %136, 1
  %186 = add nuw nsw i32 0, %185
  %187 = mul nuw nsw i32 %137, 128
  %188 = add nuw nsw i32 %186, %187
  %189 = udiv i32 %188, 8192
  %Arg_8.945 = getelementptr inbounds float, ptr %arg8, i32 %132
  %Arg_8.946 = load float, ptr %Arg_8.945, align 4, !invariant.load !297
  %Arg_9.1047 = getelementptr inbounds [128 x float], ptr %arg9, i32 0, i32 %183
  %Arg_9.1048 = load float, ptr %Arg_9.1047, align 4, !invariant.load !297
  %add.1249 = fadd float %Arg_8.946, %Arg_9.1048
  %region_0_73_constant_1350 = load float, ptr @88, align 4
  %190 = fcmp oge float %add.1249, %region_0_73_constant_1350
  %191 = fcmp une float %add.1249, %add.1249
  %192 = or i1 %190, %191
  %maximum.1551 = select i1 %192, float %add.1249, float %region_0_73_constant_1350
  %Arg_1.252 = getelementptr inbounds [8192 x float], ptr %arg1, i32 0, i32 %188
  %Arg_1.253 = load float, ptr %Arg_1.252, align 4, !invariant.load !297
  %multiply.58 = fmul float %maximum.1551, %Arg_1.253
  store float %multiply.58, ptr %reduction_input_address6, align 4
  %193 = getelementptr inbounds float, ptr %partial_reduction_result7, i32 %139
  call void @region_4_60(ptr %193, ptr %reduction_input_address6, ptr %return_buffer54)
  %194 = load float, ptr %return_buffer54, align 4
  store float %194, ptr %193, align 4
  %195 = mul nuw nsw i32 %134, 1
  %196 = add nuw nsw i32 0, %195
  %197 = udiv i32 %196, 128
  %198 = mul nuw nsw i32 %136, 1
  %199 = add nuw nsw i32 0, %198
  %200 = mul nuw nsw i32 %137, 128
  %201 = add nuw nsw i32 %199, %200
  %202 = udiv i32 %201, 8192
  %Arg_8.955 = getelementptr inbounds float, ptr %arg8, i32 %132
  %Arg_8.956 = load float, ptr %Arg_8.955, align 4, !invariant.load !297
  %Arg_9.1057 = getelementptr inbounds [128 x float], ptr %arg9, i32 0, i32 %196
  %Arg_9.1058 = load float, ptr %Arg_9.1057, align 4, !invariant.load !297
  %add.1259 = fadd float %Arg_8.956, %Arg_9.1058
  %region_0_73_constant_1360 = load float, ptr @88, align 4
  %203 = fcmp oge float %add.1259, %region_0_73_constant_1360
  %204 = fcmp une float %add.1259, %add.1259
  %205 = or i1 %203, %204
  %maximum.1561 = select i1 %205, float %add.1259, float %region_0_73_constant_1360
  %Arg_7.862 = getelementptr inbounds [8192 x float], ptr %arg7, i32 0, i32 %201
  %Arg_7.863 = load float, ptr %Arg_7.862, align 4, !invariant.load !297
  %multiply.65 = fmul float %maximum.1561, %Arg_7.863
  store float %multiply.65, ptr %reduction_input_address9, align 4
  %206 = getelementptr inbounds float, ptr %partial_reduction_result10, i32 %139
  call void @region_5_67(ptr %206, ptr %reduction_input_address9, ptr %return_buffer64)
  %207 = load float, ptr %return_buffer64, align 4
  store float %207, ptr %206, align 4
  %208 = mul nuw nsw i32 %134, 1
  %209 = add nuw nsw i32 0, %208
  %210 = udiv i32 %209, 128
  %211 = mul nuw nsw i32 %136, 1
  %212 = add nuw nsw i32 0, %211
  %213 = mul nuw nsw i32 %137, 128
  %214 = add nuw nsw i32 %212, %213
  %215 = udiv i32 %214, 8192
  %Arg_8.965 = getelementptr inbounds float, ptr %arg8, i32 %132
  %Arg_8.966 = load float, ptr %Arg_8.965, align 4, !invariant.load !297
  %Arg_9.1067 = getelementptr inbounds [128 x float], ptr %arg9, i32 0, i32 %209
  %Arg_9.1068 = load float, ptr %Arg_9.1067, align 4, !invariant.load !297
  %add.1269 = fadd float %Arg_8.966, %Arg_9.1068
  %region_0_73_constant_1370 = load float, ptr @88, align 4
  %216 = fcmp oge float %add.1269, %region_0_73_constant_1370
  %217 = fcmp une float %add.1269, %add.1269
  %218 = or i1 %216, %217
  %maximum.1571 = select i1 %218, float %add.1269, float %region_0_73_constant_1370
  %compare.1672 = fcmp ogt float %maximum.1571, %region_0_73_constant_1370
  %219 = zext i1 %compare.1672 to i8
  %Arg_7.873 = getelementptr inbounds [8192 x float], ptr %arg7, i32 0, i32 %214
  %Arg_7.874 = load float, ptr %Arg_7.873, align 4, !invariant.load !297
  %Arg_6.775 = getelementptr inbounds [128 x [1 x float]], ptr %arg6, i32 0, i32 %209, i32 0
  %Arg_6.776 = load float, ptr %Arg_6.775, align 4, !invariant.load !297
  %multiply.2077 = fmul float %Arg_7.874, %Arg_6.776
  %Arg_5.678 = getelementptr inbounds [8192 x float], ptr %arg5, i32 0, i32 %214
  %Arg_5.679 = load float, ptr %Arg_5.678, align 4, !invariant.load !297
  %Arg_4.580 = getelementptr inbounds [128 x [1 x float]], ptr %arg4, i32 0, i32 %209, i32 0
  %Arg_4.581 = load float, ptr %Arg_4.580, align 4, !invariant.load !297
  %multiply.2482 = fmul float %Arg_5.679, %Arg_4.581
  %add.2583 = fadd float %multiply.2077, %multiply.2482
  %Arg_3.484 = getelementptr inbounds [8192 x float], ptr %arg3, i32 0, i32 %214
  %Arg_3.485 = load float, ptr %Arg_3.484, align 4, !invariant.load !297
  %Arg_2.386 = getelementptr inbounds [128 x [1 x float]], ptr %arg2, i32 0, i32 %209, i32 0
  %Arg_2.387 = load float, ptr %Arg_2.386, align 4, !invariant.load !297
  %multiply.2988 = fmul float %Arg_3.485, %Arg_2.387
  %add.3089 = fadd float %add.2583, %multiply.2988
  %Arg_1.290 = getelementptr inbounds [8192 x float], ptr %arg1, i32 0, i32 %214
  %Arg_1.291 = load float, ptr %Arg_1.290, align 4, !invariant.load !297
  %Arg_0.192 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %209, i32 0
  %Arg_0.193 = load float, ptr %Arg_0.192, align 4, !invariant.load !297
  %multiply.3494 = fmul float %Arg_1.291, %Arg_0.193
  %add.3595 = fadd float %add.3089, %multiply.3494
  %220 = trunc i8 %219 to i1
  %221 = select i1 %220, float %add.3595, float %region_0_73_constant_1370
  %222 = mul nuw nsw i32 %134, 1
  %223 = add nuw nsw i32 0, %222
  %224 = udiv i32 %223, 128
  %225 = mul nuw nsw i32 %136, 1
  %226 = add nuw nsw i32 0, %225
  %227 = mul nuw nsw i32 %137, 128
  %228 = add nuw nsw i32 %226, %227
  %229 = udiv i32 %228, 8192
  %230 = getelementptr inbounds float, ptr %arg11, i32 %132
  store float %221, ptr %230, align 4
  br label %x_in_tile-after

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %231 = mul i32 %thread_id.y, 1
  %232 = add i32 %tile_origin.1, %thread_id.x
  %233 = add i32 %tile_origin.2, %231
  %234 = add i32 %233, 0
  %235 = mul i32 %tile_origin.0, 128
  %236 = add i32 %235, %234
  %237 = udiv i32 %236, 1
  %238 = urem i32 %237, 128
  %239 = udiv i32 %236, 128
  %output_element_address = getelementptr inbounds [64 x [128 x float]], ptr %arg10, i32 0, i32 %239, i32 %238
  %output = load float, ptr %34, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

reduction_write_output-true128:                   ; preds = %reduction_write_output-after
  %240 = mul i32 %thread_id.y, 1
  %241 = add i32 %tile_origin.1, %thread_id.x
  %242 = add i32 %tile_origin.2, %240
  %243 = add i32 %242, 0
  %244 = mul i32 %tile_origin.0, 128
  %245 = add i32 %244, %243
  %246 = udiv i32 %245, 1
  %247 = urem i32 %246, 128
  %248 = udiv i32 %245, 128
  %output_element_address130 = getelementptr inbounds [64 x [128 x float]], ptr %arg12, i32 0, i32 %248, i32 %247
  %output131 = load float, ptr %53, align 4
  store float %output131, ptr %output_element_address130, align 4
  br label %reduction_write_output-after129

reduction_write_output-true150:                   ; preds = %reduction_write_output-after129
  %249 = mul i32 %thread_id.y, 1
  %250 = add i32 %tile_origin.1, %thread_id.x
  %251 = add i32 %tile_origin.2, %249
  %252 = add i32 %251, 0
  %253 = mul i32 %tile_origin.0, 128
  %254 = add i32 %253, %252
  %255 = udiv i32 %254, 1
  %256 = urem i32 %255, 128
  %257 = udiv i32 %254, 128
  %output_element_address152 = getelementptr inbounds [64 x [128 x float]], ptr %arg13, i32 0, i32 %257, i32 %256
  %output153 = load float, ptr %72, align 4
  store float %output153, ptr %output_element_address152, align 4
  br label %reduction_write_output-after151

reduction_write_output-true172:                   ; preds = %reduction_write_output-after151
  %258 = mul i32 %thread_id.y, 1
  %259 = add i32 %tile_origin.1, %thread_id.x
  %260 = add i32 %tile_origin.2, %258
  %261 = add i32 %260, 0
  %262 = mul i32 %tile_origin.0, 128
  %263 = add i32 %262, %261
  %264 = udiv i32 %263, 1
  %265 = urem i32 %264, 128
  %266 = udiv i32 %263, 128
  %output_element_address174 = getelementptr inbounds [64 x [128 x float]], ptr %arg14, i32 0, i32 %266, i32 %265
  %output175 = load float, ptr %91, align 4
  store float %output175, ptr %output_element_address174, align 4
  br label %reduction_write_output-after173

reduction_write_output-true194:                   ; preds = %reduction_write_output-after173
  %267 = mul i32 %thread_id.y, 1
  %268 = add i32 %tile_origin.1, %thread_id.x
  %269 = add i32 %tile_origin.2, %267
  %270 = add i32 %269, 0
  %271 = mul i32 %tile_origin.0, 128
  %272 = add i32 %271, %270
  %273 = udiv i32 %272, 1
  %274 = urem i32 %273, 128
  %275 = udiv i32 %272, 128
  %output_element_address196 = getelementptr inbounds [64 x [128 x float]], ptr %arg15, i32 0, i32 %275, i32 %274
  %output197 = load float, ptr %110, align 4
  store float %output197, ptr %output_element_address196, align 4
  br label %reduction_write_output-after195
}

define internal void @region_1_39__1(ptr dereferenceable(4) %Arg_0.40.typed, ptr dereferenceable(4) %Arg_1.41.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.42.typed = alloca float, align 4
  %Arg_0.40 = load float, ptr %Arg_0.40.typed, align 4
  %Arg_1.41 = load float, ptr %Arg_1.41.typed, align 4
  %add.42 = fadd float %Arg_0.40, %Arg_1.41
  store float %add.42, ptr %add.42.typed, align 4
  %load_ret_value = load float, ptr %add.42.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_46__1(ptr dereferenceable(4) %Arg_0.47.typed, ptr dereferenceable(4) %Arg_1.48.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.49.typed = alloca float, align 4
  %Arg_0.47 = load float, ptr %Arg_0.47.typed, align 4
  %Arg_1.48 = load float, ptr %Arg_1.48.typed, align 4
  %add.49 = fadd float %Arg_0.47, %Arg_1.48
  store float %add.49, ptr %add.49.typed, align 4
  %load_ret_value = load float, ptr %add.49.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_3_53(ptr dereferenceable(4) %Arg_0.54.typed, ptr dereferenceable(4) %Arg_1.55.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.56.typed = alloca float, align 4
  %Arg_0.54 = load float, ptr %Arg_0.54.typed, align 4
  %Arg_1.55 = load float, ptr %Arg_1.55.typed, align 4
  %add.56 = fadd float %Arg_0.54, %Arg_1.55
  store float %add.56, ptr %add.56.typed, align 4
  %load_ret_value = load float, ptr %add.56.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_4_60(ptr dereferenceable(4) %Arg_0.61.typed, ptr dereferenceable(4) %Arg_1.62.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.63.typed = alloca float, align 4
  %Arg_0.61 = load float, ptr %Arg_0.61.typed, align 4
  %Arg_1.62 = load float, ptr %Arg_1.62.typed, align 4
  %add.63 = fadd float %Arg_0.61, %Arg_1.62
  store float %add.63, ptr %add.63.typed, align 4
  %load_ret_value = load float, ptr %add.63.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_5_67(ptr dereferenceable(4) %Arg_0.68.typed, ptr dereferenceable(4) %Arg_1.69.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.70.typed = alloca float, align 4
  %Arg_0.68 = load float, ptr %Arg_0.68.typed, align 4
  %Arg_1.69 = load float, ptr %Arg_1.69.typed, align 4
  %add.70 = fadd float %Arg_0.68, %Arg_1.69
  store float %add.70, ptr %add.70.typed, align 4
  %load_ret_value = load float, ptr %add.70.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_781(ptr noalias align 128 dereferenceable(32768) %arg0, ptr noalias align 128 dereferenceable(4) %arg1, ptr noalias align 128 dereferenceable(32768) %arg2, ptr noalias align 128 dereferenceable(512) %arg3, ptr noalias align 128 dereferenceable(512) %arg4) {
entry:
  %return_buffer120 = alloca float, align 4
  %result_from_other_lane118 = alloca float, align 4
  %return_buffer117 = alloca float, align 4
  %result_from_other_lane115 = alloca float, align 4
  %return_buffer114 = alloca float, align 4
  %result_from_other_lane112 = alloca float, align 4
  %return_buffer111 = alloca float, align 4
  %result_from_other_lane109 = alloca float, align 4
  %return_buffer108 = alloca float, align 4
  %result_from_other_lane106 = alloca float, align 4
  %return_buffer98 = alloca float, align 4
  %result_from_other_lane96 = alloca float, align 4
  %return_buffer95 = alloca float, align 4
  %result_from_other_lane93 = alloca float, align 4
  %return_buffer92 = alloca float, align 4
  %result_from_other_lane90 = alloca float, align 4
  %return_buffer89 = alloca float, align 4
  %result_from_other_lane87 = alloca float, align 4
  %return_buffer86 = alloca float, align 4
  %result_from_other_lane84 = alloca float, align 4
  %return_buffer80 = alloca float, align 4
  %return_buffer74 = alloca float, align 4
  %tile_loop.invar_address67 = alloca i32, align 4
  %y_in_tile.invar_address61 = alloca i32, align 4
  %partial_reduction_result47 = alloca float, i32 2, align 4
  %reduction_input_address46 = alloca float, align 4
  %return_buffer41 = alloca float, align 4
  %result_from_other_lane39 = alloca float, align 4
  %return_buffer38 = alloca float, align 4
  %result_from_other_lane36 = alloca float, align 4
  %return_buffer35 = alloca float, align 4
  %result_from_other_lane33 = alloca float, align 4
  %return_buffer32 = alloca float, align 4
  %result_from_other_lane30 = alloca float, align 4
  %return_buffer29 = alloca float, align 4
  %result_from_other_lane27 = alloca float, align 4
  %return_buffer23 = alloca float, align 4
  %result_from_other_lane21 = alloca float, align 4
  %return_buffer20 = alloca float, align 4
  %result_from_other_lane18 = alloca float, align 4
  %return_buffer17 = alloca float, align 4
  %result_from_other_lane15 = alloca float, align 4
  %return_buffer14 = alloca float, align 4
  %result_from_other_lane12 = alloca float, align 4
  %return_buffer11 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer9 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, i32 2, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !344
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after43, %entry
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %reduce-group-1-true, label %reduce-group-1-after

reduce-group-1-after:                             ; preds = %reduction_write_output-after122, %reduce-group-0-after
  ret void

reduce-group-0-true:                              ; preds = %entry
  %Arg_1.2 = load float, ptr %arg1, align 4, !invariant.load !297
  %3 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %Arg_1.2, ptr %3, align 4
  %4 = getelementptr inbounds float, ptr %partial_reduction_result, i32 1
  store float %Arg_1.2, ptr %4, align 4
  %5 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %6 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !344
  %7 = urem i32 %5, 1024
  %8 = udiv i32 %5, 1024
  %9 = mul i32 %6, 1
  %10 = add i32 %9, %8
  %11 = icmp ult i32 %10, 2
  br i1 %11, label %12, label %early_return

12:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %7, 32
  %thread_id.y = udiv i32 %7, 32
  %lane_id = urem i32 %7, 32
  %13 = udiv i32 %10, 1
  %14 = urem i32 %13, 2
  %15 = udiv i32 %10, 2
  %16 = urem i32 %15, 1
  %17 = udiv i32 %10, 2
  %18 = icmp eq i32 %16, 0
  %tile_bound = select i1 %18, i32 64, i32 4096
  %19 = icmp eq i32 %14, 1
  %tile_bound1 = select i1 %19, i32 64, i32 64
  %tile_origin.0 = mul i32 %17, 1
  %tile_origin.1 = mul i32 %16, 4096
  %tile_origin.2 = mul i32 %14, 64
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %12
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %20 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %20, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %21 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %22 = mul i32 %thread_id.x, 2
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after6, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %23 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %23, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %24 = icmp eq i32 %tile_loop.indvar, 0
  %25 = mul i32 %tile_loop.indvar, 2
  %26 = add i32 %25, 0
  %x_loc = add i32 %26, %22
  %27 = add i32 %tile_origin.1, %y_in_tile.indvar
  %28 = add i32 %tile_origin.2, %x_loc
  %29 = icmp ult i32 %x_loc, %tile_bound1
  br i1 %29, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body
  %30 = mul i32 %tile_loop.indvar, 2
  %31 = add i32 %30, 1
  %x_loc4 = add i32 %31, %22
  %32 = add i32 %tile_origin.1, %y_in_tile.indvar
  %33 = add i32 %tile_origin.2, %x_loc4
  %34 = icmp ult i32 %x_loc4, %tile_bound1
  br i1 %34, label %x_in_tile-true5, label %x_in_tile-after6

x_in_tile-after6:                                 ; preds = %x_in_tile-true5, %x_in_tile-after
  br label %tile_loop.loop_header, !llvm.loop !477

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !478

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache122, i32 0, i32 %8, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %35 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %36 = load float, ptr %current_output, align 4
  store float %36, ptr %35, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache122, i32 0, i32 %8, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %37 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result10 = load float, ptr %37, align 4
  %38 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result10, i32 16, i32 31)
  store float %38, ptr %result_from_other_lane, align 4
  call void @region_1_4__2(ptr %37, ptr %result_from_other_lane, ptr %return_buffer11)
  %39 = load float, ptr %return_buffer11, align 4
  store float %39, ptr %37, align 4
  %partial_reduction_result13 = load float, ptr %37, align 4
  %40 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result13, i32 8, i32 31)
  store float %40, ptr %result_from_other_lane12, align 4
  call void @region_1_4__2(ptr %37, ptr %result_from_other_lane12, ptr %return_buffer14)
  %41 = load float, ptr %return_buffer14, align 4
  store float %41, ptr %37, align 4
  %partial_reduction_result16 = load float, ptr %37, align 4
  %42 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result16, i32 4, i32 31)
  store float %42, ptr %result_from_other_lane15, align 4
  call void @region_1_4__2(ptr %37, ptr %result_from_other_lane15, ptr %return_buffer17)
  %43 = load float, ptr %return_buffer17, align 4
  store float %43, ptr %37, align 4
  %partial_reduction_result19 = load float, ptr %37, align 4
  %44 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result19, i32 2, i32 31)
  store float %44, ptr %result_from_other_lane18, align 4
  call void @region_1_4__2(ptr %37, ptr %result_from_other_lane18, ptr %return_buffer20)
  %45 = load float, ptr %return_buffer20, align 4
  store float %45, ptr %37, align 4
  %partial_reduction_result22 = load float, ptr %37, align 4
  %46 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result22, i32 1, i32 31)
  store float %46, ptr %result_from_other_lane21, align 4
  call void @region_1_4__2(ptr %37, ptr %result_from_other_lane21, ptr %return_buffer23)
  %47 = load float, ptr %return_buffer23, align 4
  store float %47, ptr %37, align 4
  %48 = icmp ult i32 %thread_id.x, %tile_bound
  %49 = mul i32 %thread_id.y, 2
  %50 = icmp ult i32 %49, %tile_bound1
  %51 = and i1 %50, %48
  %52 = icmp eq i32 %lane_id, 0
  %53 = and i1 %51, %52
  br i1 %53, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %shmem_output_address24 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache122, i32 0, i32 %8, i32 1, i32 %thread_id.x, i32 %thread_id.y
  %54 = addrspacecast ptr addrspace(3) %shmem_output_address24 to ptr
  %current_output25 = getelementptr inbounds float, ptr %partial_reduction_result, i32 1
  %55 = load float, ptr %current_output25, align 4
  store float %55, ptr %54, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr26 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache122, i32 0, i32 %8, i32 1, i32 %thread_id.y, i32 %thread_id.x
  %56 = addrspacecast ptr addrspace(3) %shmem_transposed_addr26 to ptr
  %partial_reduction_result28 = load float, ptr %56, align 4
  %57 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result28, i32 16, i32 31)
  store float %57, ptr %result_from_other_lane27, align 4
  call void @region_1_4__2(ptr %56, ptr %result_from_other_lane27, ptr %return_buffer29)
  %58 = load float, ptr %return_buffer29, align 4
  store float %58, ptr %56, align 4
  %partial_reduction_result31 = load float, ptr %56, align 4
  %59 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result31, i32 8, i32 31)
  store float %59, ptr %result_from_other_lane30, align 4
  call void @region_1_4__2(ptr %56, ptr %result_from_other_lane30, ptr %return_buffer32)
  %60 = load float, ptr %return_buffer32, align 4
  store float %60, ptr %56, align 4
  %partial_reduction_result34 = load float, ptr %56, align 4
  %61 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result34, i32 4, i32 31)
  store float %61, ptr %result_from_other_lane33, align 4
  call void @region_1_4__2(ptr %56, ptr %result_from_other_lane33, ptr %return_buffer35)
  %62 = load float, ptr %return_buffer35, align 4
  store float %62, ptr %56, align 4
  %partial_reduction_result37 = load float, ptr %56, align 4
  %63 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result37, i32 2, i32 31)
  store float %63, ptr %result_from_other_lane36, align 4
  call void @region_1_4__2(ptr %56, ptr %result_from_other_lane36, ptr %return_buffer38)
  %64 = load float, ptr %return_buffer38, align 4
  store float %64, ptr %56, align 4
  %partial_reduction_result40 = load float, ptr %56, align 4
  %65 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result40, i32 1, i32 31)
  store float %65, ptr %result_from_other_lane39, align 4
  call void @region_1_4__2(ptr %56, ptr %result_from_other_lane39, ptr %return_buffer41)
  %66 = load float, ptr %return_buffer41, align 4
  store float %66, ptr %56, align 4
  %67 = icmp ult i32 %thread_id.x, %tile_bound
  %68 = mul i32 %thread_id.y, 2
  %69 = icmp ult i32 %68, %tile_bound1
  %70 = and i1 %69, %67
  %71 = icmp eq i32 %lane_id, 0
  %72 = and i1 %70, %71
  br i1 %72, label %reduction_write_output-true42, label %reduction_write_output-after43

reduction_write_output-after43:                   ; preds = %reduction_write_output-true42, %reduction_write_output-after
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %73 = mul i32 %thread_id.x, 2
  %74 = sub i32 %x_loc, %73
  %Arg_0.1 = getelementptr inbounds [64 x [128 x float]], ptr %arg0, i32 0, i32 %27, i32 %28
  %Arg_0.13 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  store float %Arg_0.13, ptr %reduction_input_address, align 4
  %75 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %74
  call void @region_1_4__2(ptr %75, ptr %reduction_input_address, ptr %return_buffer)
  %76 = load float, ptr %return_buffer, align 4
  store float %76, ptr %75, align 4
  br label %x_in_tile-after

x_in_tile-true5:                                  ; preds = %x_in_tile-after
  %77 = mul i32 %thread_id.x, 2
  %78 = sub i32 %x_loc4, %77
  %Arg_0.17 = getelementptr inbounds [64 x [128 x float]], ptr %arg0, i32 0, i32 %32, i32 %33
  %Arg_0.18 = load float, ptr %Arg_0.17, align 4, !invariant.load !297
  store float %Arg_0.18, ptr %reduction_input_address, align 4
  %79 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %78
  call void @region_1_4__2(ptr %79, ptr %reduction_input_address, ptr %return_buffer9)
  %80 = load float, ptr %return_buffer9, align 4
  store float %80, ptr %79, align 4
  br label %x_in_tile-after6

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %81 = mul i32 %thread_id.y, 2
  %82 = add i32 %tile_origin.1, %thread_id.x
  %83 = add i32 %tile_origin.2, %81
  %84 = add i32 %83, 0
  %85 = mul i32 %tile_origin.0, 128
  %86 = add i32 %85, %84
  %87 = udiv i32 %86, 1
  %output_element_address = getelementptr inbounds [128 x float], ptr %arg3, i32 0, i32 %87
  %output = load float, ptr %37, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

reduction_write_output-true42:                    ; preds = %reduction_write_output-after
  %88 = mul i32 %thread_id.y, 2
  %89 = add i32 %tile_origin.1, %thread_id.x
  %90 = add i32 %tile_origin.2, %88
  %91 = add i32 %90, 1
  %92 = mul i32 %tile_origin.0, 128
  %93 = add i32 %92, %91
  %94 = udiv i32 %93, 1
  %output_element_address44 = getelementptr inbounds [128 x float], ptr %arg3, i32 0, i32 %94
  %output45 = load float, ptr %56, align 4
  store float %output45, ptr %output_element_address44, align 4
  br label %reduction_write_output-after43

reduce-group-1-true:                              ; preds = %reduce-group-0-after
  %Arg_1.248 = load float, ptr %arg1, align 4, !invariant.load !297
  %95 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 0
  store float %Arg_1.248, ptr %95, align 4
  %96 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 1
  store float %Arg_1.248, ptr %96, align 4
  %97 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %98 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !344
  %99 = urem i32 %97, 1024
  %100 = udiv i32 %97, 1024
  %101 = mul i32 %98, 1
  %102 = add i32 %101, %100
  %103 = icmp ult i32 %102, 2
  br i1 %103, label %104, label %early_return49

104:                                              ; preds = %reduce-group-1-true
  %thread_id.x50 = urem i32 %99, 32
  %thread_id.y51 = udiv i32 %99, 32
  %lane_id52 = urem i32 %99, 32
  %105 = udiv i32 %102, 1
  %106 = urem i32 %105, 2
  %107 = udiv i32 %102, 2
  %108 = urem i32 %107, 1
  %109 = udiv i32 %102, 2
  %110 = icmp eq i32 %108, 0
  %tile_bound53 = select i1 %110, i32 64, i32 4096
  %111 = icmp eq i32 %106, 1
  %tile_bound54 = select i1 %111, i32 64, i32 64
  %tile_origin.055 = mul i32 %109, 1
  %tile_origin.156 = mul i32 %108, 4096
  %tile_origin.257 = mul i32 %106, 64
  store i32 %thread_id.y51, ptr %y_in_tile.invar_address61, align 4
  br label %y_in_tile.loop_header59

y_in_tile.loop_header59:                          ; preds = %tile_loop.loop_exit64, %104
  %y_in_tile.indvar62 = load i32, ptr %y_in_tile.invar_address61, align 4
  %112 = icmp uge i32 %y_in_tile.indvar62, %tile_bound53
  br i1 %112, label %y_in_tile.loop_exit58, label %y_in_tile.loop_body60

y_in_tile.loop_body60:                            ; preds = %y_in_tile.loop_header59
  %invar.inc63 = add nuw nsw i32 %y_in_tile.indvar62, 32
  store i32 %invar.inc63, ptr %y_in_tile.invar_address61, align 4
  %113 = icmp eq i32 %y_in_tile.indvar62, %thread_id.y51
  %114 = mul i32 %thread_id.x50, 2
  store i32 0, ptr %tile_loop.invar_address67, align 4
  br label %tile_loop.loop_header65

tile_loop.loop_header65:                          ; preds = %x_in_tile-after77, %y_in_tile.loop_body60
  %tile_loop.indvar68 = load i32, ptr %tile_loop.invar_address67, align 4
  %115 = icmp uge i32 %tile_loop.indvar68, 1
  br i1 %115, label %tile_loop.loop_exit64, label %tile_loop.loop_body66

tile_loop.loop_body66:                            ; preds = %tile_loop.loop_header65
  %invar.inc69 = add nuw nsw i32 %tile_loop.indvar68, 1
  store i32 %invar.inc69, ptr %tile_loop.invar_address67, align 4
  %116 = icmp eq i32 %tile_loop.indvar68, 0
  %117 = mul i32 %tile_loop.indvar68, 2
  %118 = add i32 %117, 0
  %x_loc70 = add i32 %118, %114
  %119 = add i32 %tile_origin.156, %y_in_tile.indvar62
  %120 = add i32 %tile_origin.257, %x_loc70
  %121 = icmp ult i32 %x_loc70, %tile_bound54
  br i1 %121, label %x_in_tile-true71, label %x_in_tile-after72

x_in_tile-after72:                                ; preds = %x_in_tile-true71, %tile_loop.loop_body66
  %122 = mul i32 %tile_loop.indvar68, 2
  %123 = add i32 %122, 1
  %x_loc75 = add i32 %123, %114
  %124 = add i32 %tile_origin.156, %y_in_tile.indvar62
  %125 = add i32 %tile_origin.257, %x_loc75
  %126 = icmp ult i32 %x_loc75, %tile_bound54
  br i1 %126, label %x_in_tile-true76, label %x_in_tile-after77

x_in_tile-after77:                                ; preds = %x_in_tile-true76, %x_in_tile-after72
  br label %tile_loop.loop_header65, !llvm.loop !479

tile_loop.loop_exit64:                            ; preds = %tile_loop.loop_header65
  br label %y_in_tile.loop_header59, !llvm.loop !480

y_in_tile.loop_exit58:                            ; preds = %y_in_tile.loop_header59
  %shmem_output_address81 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache123, i32 0, i32 %100, i32 0, i32 %thread_id.x50, i32 %thread_id.y51
  %127 = addrspacecast ptr addrspace(3) %shmem_output_address81 to ptr
  %current_output82 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 0
  %128 = load float, ptr %current_output82, align 4
  store float %128, ptr %127, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr83 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache123, i32 0, i32 %100, i32 0, i32 %thread_id.y51, i32 %thread_id.x50
  %129 = addrspacecast ptr addrspace(3) %shmem_transposed_addr83 to ptr
  %partial_reduction_result85 = load float, ptr %129, align 4
  %130 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result85, i32 16, i32 31)
  store float %130, ptr %result_from_other_lane84, align 4
  call void @region_2_9__2(ptr %129, ptr %result_from_other_lane84, ptr %return_buffer86)
  %131 = load float, ptr %return_buffer86, align 4
  store float %131, ptr %129, align 4
  %partial_reduction_result88 = load float, ptr %129, align 4
  %132 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result88, i32 8, i32 31)
  store float %132, ptr %result_from_other_lane87, align 4
  call void @region_2_9__2(ptr %129, ptr %result_from_other_lane87, ptr %return_buffer89)
  %133 = load float, ptr %return_buffer89, align 4
  store float %133, ptr %129, align 4
  %partial_reduction_result91 = load float, ptr %129, align 4
  %134 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result91, i32 4, i32 31)
  store float %134, ptr %result_from_other_lane90, align 4
  call void @region_2_9__2(ptr %129, ptr %result_from_other_lane90, ptr %return_buffer92)
  %135 = load float, ptr %return_buffer92, align 4
  store float %135, ptr %129, align 4
  %partial_reduction_result94 = load float, ptr %129, align 4
  %136 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result94, i32 2, i32 31)
  store float %136, ptr %result_from_other_lane93, align 4
  call void @region_2_9__2(ptr %129, ptr %result_from_other_lane93, ptr %return_buffer95)
  %137 = load float, ptr %return_buffer95, align 4
  store float %137, ptr %129, align 4
  %partial_reduction_result97 = load float, ptr %129, align 4
  %138 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result97, i32 1, i32 31)
  store float %138, ptr %result_from_other_lane96, align 4
  call void @region_2_9__2(ptr %129, ptr %result_from_other_lane96, ptr %return_buffer98)
  %139 = load float, ptr %return_buffer98, align 4
  store float %139, ptr %129, align 4
  %140 = icmp ult i32 %thread_id.x50, %tile_bound53
  %141 = mul i32 %thread_id.y51, 2
  %142 = icmp ult i32 %141, %tile_bound54
  %143 = and i1 %142, %140
  %144 = icmp eq i32 %lane_id52, 0
  %145 = and i1 %143, %144
  br i1 %145, label %reduction_write_output-true99, label %reduction_write_output-after100

reduction_write_output-after100:                  ; preds = %reduction_write_output-true99, %y_in_tile.loop_exit58
  %shmem_output_address103 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache123, i32 0, i32 %100, i32 1, i32 %thread_id.x50, i32 %thread_id.y51
  %146 = addrspacecast ptr addrspace(3) %shmem_output_address103 to ptr
  %current_output104 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 1
  %147 = load float, ptr %current_output104, align 4
  store float %147, ptr %146, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr105 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache123, i32 0, i32 %100, i32 1, i32 %thread_id.y51, i32 %thread_id.x50
  %148 = addrspacecast ptr addrspace(3) %shmem_transposed_addr105 to ptr
  %partial_reduction_result107 = load float, ptr %148, align 4
  %149 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result107, i32 16, i32 31)
  store float %149, ptr %result_from_other_lane106, align 4
  call void @region_2_9__2(ptr %148, ptr %result_from_other_lane106, ptr %return_buffer108)
  %150 = load float, ptr %return_buffer108, align 4
  store float %150, ptr %148, align 4
  %partial_reduction_result110 = load float, ptr %148, align 4
  %151 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result110, i32 8, i32 31)
  store float %151, ptr %result_from_other_lane109, align 4
  call void @region_2_9__2(ptr %148, ptr %result_from_other_lane109, ptr %return_buffer111)
  %152 = load float, ptr %return_buffer111, align 4
  store float %152, ptr %148, align 4
  %partial_reduction_result113 = load float, ptr %148, align 4
  %153 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result113, i32 4, i32 31)
  store float %153, ptr %result_from_other_lane112, align 4
  call void @region_2_9__2(ptr %148, ptr %result_from_other_lane112, ptr %return_buffer114)
  %154 = load float, ptr %return_buffer114, align 4
  store float %154, ptr %148, align 4
  %partial_reduction_result116 = load float, ptr %148, align 4
  %155 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result116, i32 2, i32 31)
  store float %155, ptr %result_from_other_lane115, align 4
  call void @region_2_9__2(ptr %148, ptr %result_from_other_lane115, ptr %return_buffer117)
  %156 = load float, ptr %return_buffer117, align 4
  store float %156, ptr %148, align 4
  %partial_reduction_result119 = load float, ptr %148, align 4
  %157 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result119, i32 1, i32 31)
  store float %157, ptr %result_from_other_lane118, align 4
  call void @region_2_9__2(ptr %148, ptr %result_from_other_lane118, ptr %return_buffer120)
  %158 = load float, ptr %return_buffer120, align 4
  store float %158, ptr %148, align 4
  %159 = icmp ult i32 %thread_id.x50, %tile_bound53
  %160 = mul i32 %thread_id.y51, 2
  %161 = icmp ult i32 %160, %tile_bound54
  %162 = and i1 %161, %159
  %163 = icmp eq i32 %lane_id52, 0
  %164 = and i1 %162, %163
  br i1 %164, label %reduction_write_output-true121, label %reduction_write_output-after122

reduction_write_output-after122:                  ; preds = %reduction_write_output-true121, %reduction_write_output-after100
  br label %reduce-group-1-after

early_return49:                                   ; preds = %reduce-group-1-true
  ret void

x_in_tile-true71:                                 ; preds = %tile_loop.loop_body66
  %165 = mul i32 %thread_id.x50, 2
  %166 = sub i32 %x_loc70, %165
  %Arg_2.3 = getelementptr inbounds [64 x [128 x float]], ptr %arg2, i32 0, i32 %119, i32 %120
  %Arg_2.373 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  store float %Arg_2.373, ptr %reduction_input_address46, align 4
  %167 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 %166
  call void @region_2_9__2(ptr %167, ptr %reduction_input_address46, ptr %return_buffer74)
  %168 = load float, ptr %return_buffer74, align 4
  store float %168, ptr %167, align 4
  br label %x_in_tile-after72

x_in_tile-true76:                                 ; preds = %x_in_tile-after72
  %169 = mul i32 %thread_id.x50, 2
  %170 = sub i32 %x_loc75, %169
  %Arg_2.378 = getelementptr inbounds [64 x [128 x float]], ptr %arg2, i32 0, i32 %124, i32 %125
  %Arg_2.379 = load float, ptr %Arg_2.378, align 4, !invariant.load !297
  store float %Arg_2.379, ptr %reduction_input_address46, align 4
  %171 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 %170
  call void @region_2_9__2(ptr %171, ptr %reduction_input_address46, ptr %return_buffer80)
  %172 = load float, ptr %return_buffer80, align 4
  store float %172, ptr %171, align 4
  br label %x_in_tile-after77

reduction_write_output-true99:                    ; preds = %y_in_tile.loop_exit58
  %173 = mul i32 %thread_id.y51, 2
  %174 = add i32 %tile_origin.156, %thread_id.x50
  %175 = add i32 %tile_origin.257, %173
  %176 = add i32 %175, 0
  %177 = mul i32 %tile_origin.055, 128
  %178 = add i32 %177, %176
  %179 = udiv i32 %178, 1
  %output_element_address101 = getelementptr inbounds [128 x float], ptr %arg4, i32 0, i32 %179
  %output102 = load float, ptr %129, align 4
  store float %output102, ptr %output_element_address101, align 4
  br label %reduction_write_output-after100

reduction_write_output-true121:                   ; preds = %reduction_write_output-after100
  %180 = mul i32 %thread_id.y51, 2
  %181 = add i32 %tile_origin.156, %thread_id.x50
  %182 = add i32 %tile_origin.257, %180
  %183 = add i32 %182, 1
  %184 = mul i32 %tile_origin.055, 128
  %185 = add i32 %184, %183
  %186 = udiv i32 %185, 1
  %output_element_address123 = getelementptr inbounds [128 x float], ptr %arg4, i32 0, i32 %186
  %output124 = load float, ptr %148, align 4
  store float %output124, ptr %output_element_address123, align 4
  br label %reduction_write_output-after122
}

define internal void @region_1_4__2(ptr dereferenceable(4) %Arg_0.5.typed, ptr dereferenceable(4) %Arg_1.6.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.7.typed = alloca float, align 4
  %Arg_0.5 = load float, ptr %Arg_0.5.typed, align 4
  %Arg_1.6 = load float, ptr %Arg_1.6.typed, align 4
  %add.7 = fadd float %Arg_0.5, %Arg_1.6
  store float %add.7, ptr %add.7.typed, align 4
  %load_ret_value = load float, ptr %add.7.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_9__2(ptr dereferenceable(4) %Arg_0.10.typed, ptr dereferenceable(4) %Arg_1.11.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.12.typed = alloca float, align 4
  %Arg_0.10 = load float, ptr %Arg_0.10.typed, align 4
  %Arg_1.11 = load float, ptr %Arg_1.11.typed, align 4
  %add.12 = fadd float %Arg_0.10, %Arg_1.11
  store float %add.12, ptr %add.12.typed, align 4
  %load_ret_value = load float, ptr %add.12.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_715(ptr noalias align 16 dereferenceable(512) %arg0, ptr noalias align 128 dereferenceable(512) %arg1, ptr noalias align 16 dereferenceable(512) %arg2, ptr noalias align 128 dereferenceable(512) %arg3, ptr noalias align 16 dereferenceable(512) %arg4, ptr noalias align 128 dereferenceable(512) %arg5, ptr noalias align 16 dereferenceable(512) %arg6, ptr noalias align 128 dereferenceable(512) %arg7, ptr noalias align 16 dereferenceable(512) %arg8, ptr noalias align 128 dereferenceable(512) %arg9, ptr noalias align 16 dereferenceable(512) %arg10, ptr noalias align 128 dereferenceable(512) %arg11, ptr noalias align 16 dereferenceable(512) %arg12, ptr noalias align 128 dereferenceable(512) %arg13, ptr noalias align 16 dereferenceable(512) %arg14, ptr noalias align 128 dereferenceable(512) %arg15, ptr noalias align 16 dereferenceable(512) %arg16, ptr noalias align 128 dereferenceable(512) %arg17, ptr noalias align 16 dereferenceable(512) %arg18, ptr noalias align 128 dereferenceable(512) %arg19, ptr noalias align 16 dereferenceable(512) %arg20, ptr noalias align 128 dereferenceable(512) %arg21, ptr noalias align 16 dereferenceable(512) %arg22, ptr noalias align 128 dereferenceable(512) %arg23, ptr noalias align 16 dereferenceable(512) %arg24, ptr noalias align 128 dereferenceable(512) %arg25, ptr noalias align 16 dereferenceable(512) %arg26, ptr noalias align 128 dereferenceable(512) %arg27, ptr noalias align 16 dereferenceable(512) %arg28, ptr noalias align 128 dereferenceable(512) %arg29, ptr noalias align 16 dereferenceable(512) %arg30, ptr noalias align 128 dereferenceable(512) %arg31, ptr noalias align 16 dereferenceable(512) %arg32, ptr noalias align 128 dereferenceable(512) %arg33, ptr noalias align 16 dereferenceable(512) %arg34, ptr noalias align 128 dereferenceable(512) %arg35, ptr noalias align 16 dereferenceable(512) %arg36, ptr noalias align 128 dereferenceable(512) %arg37, ptr noalias align 16 dereferenceable(512) %arg38, ptr noalias align 128 dereferenceable(512) %arg39, ptr noalias align 16 dereferenceable(512) %arg40, ptr noalias align 128 dereferenceable(512) %arg41, ptr noalias align 16 dereferenceable(512) %arg42, ptr noalias align 128 dereferenceable(512) %arg43, ptr noalias align 128 dereferenceable(512) %arg44, ptr noalias align 128 dereferenceable(512) %arg45, ptr noalias align 128 dereferenceable(512) %arg46, ptr noalias align 128 dereferenceable(512) %arg47, ptr noalias align 128 dereferenceable(512) %arg48, ptr noalias align 128 dereferenceable(512) %arg49, ptr noalias align 128 dereferenceable(512) %arg50, ptr noalias align 128 dereferenceable(512) %arg51, ptr noalias align 128 dereferenceable(512) %arg52, ptr noalias align 128 dereferenceable(512) %arg53, ptr noalias align 128 dereferenceable(512) %arg54, ptr noalias align 128 dereferenceable(512) %arg55, ptr noalias align 128 dereferenceable(512) %arg56, ptr noalias align 128 dereferenceable(512) %arg57, ptr noalias align 128 dereferenceable(512) %arg58, ptr noalias align 128 dereferenceable(512) %arg59, ptr noalias align 128 dereferenceable(512) %arg60, ptr noalias align 128 dereferenceable(512) %arg61, ptr noalias align 128 dereferenceable(512) %arg62, ptr noalias align 128 dereferenceable(512) %arg63, ptr noalias align 128 dereferenceable(512) %arg64, ptr noalias align 128 dereferenceable(512) %arg65) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !361
  %2 = mul nuw nsw i32 %0, 128
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 128
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 1
  %5 = udiv i32 %linear_index, 1
  %6 = icmp ult i32 %linear_index, 128
  br i1 %6, label %fusion_715.in_bounds-true, label %fusion_715.in_bounds-after

fusion_715.in_bounds-after:                       ; preds = %fusion_715.in_bounds-true, %entry
  ret void

fusion_715.in_bounds-true:                        ; preds = %entry
  %7 = getelementptr inbounds float, ptr %arg0, i32 %linear_index
  %8 = load float, ptr %7, align 4, !invariant.load !297
  %region_0_114_constant_45 = load float, ptr @90, align 4
  %9 = getelementptr inbounds float, ptr %arg1, i32 %linear_index
  %10 = load float, ptr %9, align 4, !invariant.load !297
  %multiply.47 = fmul float %region_0_114_constant_45, %10
  %subtract.49 = fsub float %8, %multiply.47
  %11 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } undef, float %subtract.49, 0
  %12 = getelementptr inbounds float, ptr %arg2, i32 %linear_index
  %13 = load float, ptr %12, align 4, !invariant.load !297
  %14 = getelementptr inbounds float, ptr %arg3, i32 %linear_index
  %15 = load float, ptr %14, align 4, !invariant.load !297
  %multiply.50 = fmul float %region_0_114_constant_45, %15
  %subtract.52 = fsub float %13, %multiply.50
  %16 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %11, float %subtract.52, 1
  %17 = getelementptr inbounds float, ptr %arg4, i32 %linear_index
  %18 = load float, ptr %17, align 4, !invariant.load !297
  %19 = getelementptr inbounds float, ptr %arg5, i32 %linear_index
  %20 = load float, ptr %19, align 4, !invariant.load !297
  %multiply.53 = fmul float %region_0_114_constant_45, %20
  %subtract.55 = fsub float %18, %multiply.53
  %21 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %16, float %subtract.55, 2
  %22 = getelementptr inbounds float, ptr %arg6, i32 %linear_index
  %23 = load float, ptr %22, align 4, !invariant.load !297
  %24 = getelementptr inbounds float, ptr %arg7, i32 %linear_index
  %25 = load float, ptr %24, align 4, !invariant.load !297
  %multiply.56 = fmul float %region_0_114_constant_45, %25
  %subtract.58 = fsub float %23, %multiply.56
  %26 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %21, float %subtract.58, 3
  %27 = getelementptr inbounds float, ptr %arg8, i32 %linear_index
  %28 = load float, ptr %27, align 4, !invariant.load !297
  %29 = getelementptr inbounds float, ptr %arg9, i32 %linear_index
  %30 = load float, ptr %29, align 4, !invariant.load !297
  %multiply.59 = fmul float %region_0_114_constant_45, %30
  %subtract.61 = fsub float %28, %multiply.59
  %31 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %26, float %subtract.61, 4
  %32 = getelementptr inbounds float, ptr %arg10, i32 %linear_index
  %33 = load float, ptr %32, align 4, !invariant.load !297
  %34 = getelementptr inbounds float, ptr %arg11, i32 %linear_index
  %35 = load float, ptr %34, align 4, !invariant.load !297
  %multiply.62 = fmul float %region_0_114_constant_45, %35
  %subtract.64 = fsub float %33, %multiply.62
  %36 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %31, float %subtract.64, 5
  %37 = getelementptr inbounds float, ptr %arg12, i32 %linear_index
  %38 = load float, ptr %37, align 4, !invariant.load !297
  %39 = getelementptr inbounds float, ptr %arg13, i32 %linear_index
  %40 = load float, ptr %39, align 4, !invariant.load !297
  %multiply.65 = fmul float %region_0_114_constant_45, %40
  %subtract.67 = fsub float %38, %multiply.65
  %41 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %36, float %subtract.67, 6
  %42 = getelementptr inbounds float, ptr %arg14, i32 %linear_index
  %43 = load float, ptr %42, align 4, !invariant.load !297
  %44 = getelementptr inbounds float, ptr %arg15, i32 %linear_index
  %45 = load float, ptr %44, align 4, !invariant.load !297
  %multiply.68 = fmul float %region_0_114_constant_45, %45
  %subtract.70 = fsub float %43, %multiply.68
  %46 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %41, float %subtract.70, 7
  %47 = getelementptr inbounds float, ptr %arg16, i32 %linear_index
  %48 = load float, ptr %47, align 4, !invariant.load !297
  %49 = getelementptr inbounds float, ptr %arg17, i32 %linear_index
  %50 = load float, ptr %49, align 4, !invariant.load !297
  %multiply.71 = fmul float %region_0_114_constant_45, %50
  %subtract.73 = fsub float %48, %multiply.71
  %51 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %46, float %subtract.73, 8
  %52 = getelementptr inbounds float, ptr %arg18, i32 %linear_index
  %53 = load float, ptr %52, align 4, !invariant.load !297
  %54 = getelementptr inbounds float, ptr %arg19, i32 %linear_index
  %55 = load float, ptr %54, align 4, !invariant.load !297
  %multiply.74 = fmul float %region_0_114_constant_45, %55
  %subtract.76 = fsub float %53, %multiply.74
  %56 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %51, float %subtract.76, 9
  %57 = getelementptr inbounds float, ptr %arg20, i32 %linear_index
  %58 = load float, ptr %57, align 4, !invariant.load !297
  %59 = getelementptr inbounds float, ptr %arg21, i32 %linear_index
  %60 = load float, ptr %59, align 4, !invariant.load !297
  %multiply.77 = fmul float %region_0_114_constant_45, %60
  %subtract.79 = fsub float %58, %multiply.77
  %61 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %56, float %subtract.79, 10
  %62 = getelementptr inbounds float, ptr %arg22, i32 %linear_index
  %63 = load float, ptr %62, align 4, !invariant.load !297
  %64 = getelementptr inbounds float, ptr %arg23, i32 %linear_index
  %65 = load float, ptr %64, align 4, !invariant.load !297
  %multiply.80 = fmul float %region_0_114_constant_45, %65
  %subtract.82 = fsub float %63, %multiply.80
  %66 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %61, float %subtract.82, 11
  %67 = getelementptr inbounds float, ptr %arg24, i32 %linear_index
  %68 = load float, ptr %67, align 4, !invariant.load !297
  %69 = getelementptr inbounds float, ptr %arg25, i32 %linear_index
  %70 = load float, ptr %69, align 4, !invariant.load !297
  %multiply.83 = fmul float %region_0_114_constant_45, %70
  %subtract.85 = fsub float %68, %multiply.83
  %71 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %66, float %subtract.85, 12
  %72 = getelementptr inbounds float, ptr %arg26, i32 %linear_index
  %73 = load float, ptr %72, align 4, !invariant.load !297
  %74 = getelementptr inbounds float, ptr %arg27, i32 %linear_index
  %75 = load float, ptr %74, align 4, !invariant.load !297
  %multiply.86 = fmul float %region_0_114_constant_45, %75
  %subtract.88 = fsub float %73, %multiply.86
  %76 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %71, float %subtract.88, 13
  %77 = getelementptr inbounds float, ptr %arg28, i32 %linear_index
  %78 = load float, ptr %77, align 4, !invariant.load !297
  %79 = getelementptr inbounds float, ptr %arg29, i32 %linear_index
  %80 = load float, ptr %79, align 4, !invariant.load !297
  %multiply.89 = fmul float %region_0_114_constant_45, %80
  %subtract.91 = fsub float %78, %multiply.89
  %81 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %76, float %subtract.91, 14
  %82 = getelementptr inbounds float, ptr %arg30, i32 %linear_index
  %83 = load float, ptr %82, align 4, !invariant.load !297
  %84 = getelementptr inbounds float, ptr %arg31, i32 %linear_index
  %85 = load float, ptr %84, align 4, !invariant.load !297
  %multiply.92 = fmul float %region_0_114_constant_45, %85
  %subtract.94 = fsub float %83, %multiply.92
  %86 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %81, float %subtract.94, 15
  %87 = getelementptr inbounds float, ptr %arg32, i32 %linear_index
  %88 = load float, ptr %87, align 4, !invariant.load !297
  %89 = getelementptr inbounds float, ptr %arg33, i32 %linear_index
  %90 = load float, ptr %89, align 4, !invariant.load !297
  %multiply.95 = fmul float %region_0_114_constant_45, %90
  %subtract.97 = fsub float %88, %multiply.95
  %91 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %86, float %subtract.97, 16
  %92 = getelementptr inbounds float, ptr %arg34, i32 %linear_index
  %93 = load float, ptr %92, align 4, !invariant.load !297
  %94 = getelementptr inbounds float, ptr %arg35, i32 %linear_index
  %95 = load float, ptr %94, align 4, !invariant.load !297
  %multiply.98 = fmul float %region_0_114_constant_45, %95
  %subtract.100 = fsub float %93, %multiply.98
  %96 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %91, float %subtract.100, 17
  %97 = getelementptr inbounds float, ptr %arg36, i32 %linear_index
  %98 = load float, ptr %97, align 4, !invariant.load !297
  %99 = getelementptr inbounds float, ptr %arg37, i32 %linear_index
  %100 = load float, ptr %99, align 4, !invariant.load !297
  %multiply.101 = fmul float %region_0_114_constant_45, %100
  %subtract.103 = fsub float %98, %multiply.101
  %101 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %96, float %subtract.103, 18
  %102 = getelementptr inbounds float, ptr %arg38, i32 %linear_index
  %103 = load float, ptr %102, align 4, !invariant.load !297
  %104 = getelementptr inbounds float, ptr %arg39, i32 %linear_index
  %105 = load float, ptr %104, align 4, !invariant.load !297
  %multiply.104 = fmul float %region_0_114_constant_45, %105
  %subtract.106 = fsub float %103, %multiply.104
  %106 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %101, float %subtract.106, 19
  %107 = getelementptr inbounds float, ptr %arg40, i32 %linear_index
  %108 = load float, ptr %107, align 4, !invariant.load !297
  %109 = getelementptr inbounds float, ptr %arg41, i32 %linear_index
  %110 = load float, ptr %109, align 4, !invariant.load !297
  %multiply.107 = fmul float %region_0_114_constant_45, %110
  %subtract.109 = fsub float %108, %multiply.107
  %111 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %106, float %subtract.109, 20
  %112 = getelementptr inbounds float, ptr %arg42, i32 %linear_index
  %113 = load float, ptr %112, align 4, !invariant.load !297
  %114 = getelementptr inbounds float, ptr %arg43, i32 %linear_index
  %115 = load float, ptr %114, align 4, !invariant.load !297
  %multiply.110 = fmul float %region_0_114_constant_45, %115
  %subtract.112 = fsub float %113, %multiply.110
  %116 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %111, float %subtract.112, 21
  %117 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 0
  %118 = getelementptr inbounds float, ptr %arg44, i32 %linear_index
  store float %117, ptr %118, align 4
  %119 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 1
  %120 = getelementptr inbounds float, ptr %arg45, i32 %linear_index
  store float %119, ptr %120, align 4
  %121 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 2
  %122 = getelementptr inbounds float, ptr %arg46, i32 %linear_index
  store float %121, ptr %122, align 4
  %123 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 3
  %124 = getelementptr inbounds float, ptr %arg47, i32 %linear_index
  store float %123, ptr %124, align 4
  %125 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 4
  %126 = getelementptr inbounds float, ptr %arg48, i32 %linear_index
  store float %125, ptr %126, align 4
  %127 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 5
  %128 = getelementptr inbounds float, ptr %arg49, i32 %linear_index
  store float %127, ptr %128, align 4
  %129 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 6
  %130 = getelementptr inbounds float, ptr %arg50, i32 %linear_index
  store float %129, ptr %130, align 4
  %131 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 7
  %132 = getelementptr inbounds float, ptr %arg51, i32 %linear_index
  store float %131, ptr %132, align 4
  %133 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 8
  %134 = getelementptr inbounds float, ptr %arg52, i32 %linear_index
  store float %133, ptr %134, align 4
  %135 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 9
  %136 = getelementptr inbounds float, ptr %arg53, i32 %linear_index
  store float %135, ptr %136, align 4
  %137 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 10
  %138 = getelementptr inbounds float, ptr %arg54, i32 %linear_index
  store float %137, ptr %138, align 4
  %139 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 11
  %140 = getelementptr inbounds float, ptr %arg55, i32 %linear_index
  store float %139, ptr %140, align 4
  %141 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 12
  %142 = getelementptr inbounds float, ptr %arg56, i32 %linear_index
  store float %141, ptr %142, align 4
  %143 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 13
  %144 = getelementptr inbounds float, ptr %arg57, i32 %linear_index
  store float %143, ptr %144, align 4
  %145 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 14
  %146 = getelementptr inbounds float, ptr %arg58, i32 %linear_index
  store float %145, ptr %146, align 4
  %147 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 15
  %148 = getelementptr inbounds float, ptr %arg59, i32 %linear_index
  store float %147, ptr %148, align 4
  %149 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 16
  %150 = getelementptr inbounds float, ptr %arg60, i32 %linear_index
  store float %149, ptr %150, align 4
  %151 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 17
  %152 = getelementptr inbounds float, ptr %arg61, i32 %linear_index
  store float %151, ptr %152, align 4
  %153 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 18
  %154 = getelementptr inbounds float, ptr %arg62, i32 %linear_index
  store float %153, ptr %154, align 4
  %155 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 19
  %156 = getelementptr inbounds float, ptr %arg63, i32 %linear_index
  store float %155, ptr %156, align 4
  %157 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 20
  %158 = getelementptr inbounds float, ptr %arg64, i32 %linear_index
  store float %157, ptr %158, align 4
  %159 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %116, 21
  %160 = getelementptr inbounds float, ptr %arg65, i32 %linear_index
  store float %159, ptr %160, align 4
  br label %fusion_715.in_bounds-after
}

define void @fusion_314(ptr noalias align 128 dereferenceable(1048576) %arg0, ptr noalias align 128 dereferenceable(32768) %arg1, ptr noalias align 128 dereferenceable(1966080) %arg2, ptr noalias align 128 dereferenceable(32768) %arg3, ptr noalias align 128 dereferenceable(32768) %arg4, ptr noalias align 128 dereferenceable(32768) %arg5, ptr noalias align 128 dereferenceable(32768) %arg6, ptr noalias align 128 dereferenceable(8192) %arg7, ptr noalias align 128 dereferenceable(8192) %arg8, ptr noalias align 128 dereferenceable(8192) %arg9, ptr noalias align 128 dereferenceable(8192) %arg10, ptr noalias align 128 dereferenceable(8192) %arg11) {
entry:
  %return_buffer131 = alloca float, align 4
  %result_from_other_lane129 = alloca float, align 4
  %return_buffer128 = alloca float, align 4
  %result_from_other_lane126 = alloca float, align 4
  %return_buffer125 = alloca float, align 4
  %result_from_other_lane123 = alloca float, align 4
  %return_buffer122 = alloca float, align 4
  %result_from_other_lane120 = alloca float, align 4
  %return_buffer119 = alloca float, align 4
  %result_from_other_lane117 = alloca float, align 4
  %return_buffer109 = alloca float, align 4
  %result_from_other_lane107 = alloca float, align 4
  %return_buffer106 = alloca float, align 4
  %result_from_other_lane104 = alloca float, align 4
  %return_buffer103 = alloca float, align 4
  %result_from_other_lane101 = alloca float, align 4
  %return_buffer100 = alloca float, align 4
  %result_from_other_lane98 = alloca float, align 4
  %return_buffer97 = alloca float, align 4
  %result_from_other_lane95 = alloca float, align 4
  %return_buffer87 = alloca float, align 4
  %result_from_other_lane85 = alloca float, align 4
  %return_buffer84 = alloca float, align 4
  %result_from_other_lane82 = alloca float, align 4
  %return_buffer81 = alloca float, align 4
  %result_from_other_lane79 = alloca float, align 4
  %return_buffer78 = alloca float, align 4
  %result_from_other_lane76 = alloca float, align 4
  %return_buffer75 = alloca float, align 4
  %result_from_other_lane73 = alloca float, align 4
  %return_buffer65 = alloca float, align 4
  %result_from_other_lane63 = alloca float, align 4
  %return_buffer62 = alloca float, align 4
  %result_from_other_lane60 = alloca float, align 4
  %return_buffer59 = alloca float, align 4
  %result_from_other_lane57 = alloca float, align 4
  %return_buffer56 = alloca float, align 4
  %result_from_other_lane54 = alloca float, align 4
  %return_buffer53 = alloca float, align 4
  %result_from_other_lane51 = alloca float, align 4
  %return_buffer47 = alloca float, align 4
  %result_from_other_lane45 = alloca float, align 4
  %return_buffer44 = alloca float, align 4
  %result_from_other_lane42 = alloca float, align 4
  %return_buffer41 = alloca float, align 4
  %result_from_other_lane39 = alloca float, align 4
  %return_buffer38 = alloca float, align 4
  %result_from_other_lane36 = alloca float, align 4
  %return_buffer35 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer33 = alloca float, align 4
  %return_buffer29 = alloca float, align 4
  %return_buffer25 = alloca float, align 4
  %return_buffer21 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result11 = alloca float, align 4
  %reduction_input_address10 = alloca float, align 4
  %partial_reduction_result8 = alloca float, align 4
  %reduction_input_address7 = alloca float, align 4
  %partial_reduction_result5 = alloca float, align 4
  %reduction_input_address4 = alloca float, align 4
  %partial_reduction_result2 = alloca float, align 4
  %reduction_input_address1 = alloca float, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after133, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_63_constant_20 = load float, ptr @91, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_63_constant_20, ptr %2, align 4
  %region_0_63_constant_203 = load float, ptr @91, align 4
  %3 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  store float %region_0_63_constant_203, ptr %3, align 4
  %region_0_63_constant_206 = load float, ptr @91, align 4
  %4 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  store float %region_0_63_constant_206, ptr %4, align 4
  %region_0_63_constant_209 = load float, ptr @91, align 4
  %5 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  store float %region_0_63_constant_209, ptr %5, align 4
  %region_0_63_constant_2012 = load float, ptr @91, align 4
  %6 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  store float %region_0_63_constant_2012, ptr %6, align 4
  %7 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %8 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !360
  %9 = urem i32 %7, 1024
  %10 = udiv i32 %7, 1024
  %11 = mul i32 %8, 1
  %12 = add i32 %11, %10
  %13 = icmp ult i32 %12, 64
  br i1 %13, label %14, label %early_return

14:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %9, 32
  %thread_id.y = udiv i32 %9, 32
  %lane_id = urem i32 %9, 32
  %15 = udiv i32 %12, 1
  %16 = urem i32 %15, 1
  %17 = udiv i32 %12, 1
  %18 = urem i32 %17, 1
  %19 = udiv i32 %12, 1
  %20 = icmp eq i32 %18, 0
  %tile_bound = select i1 %20, i32 128, i32 4096
  %21 = icmp eq i32 %16, 0
  %tile_bound13 = select i1 %21, i32 32, i32 32
  %tile_origin.0 = mul i32 %19, 1
  %tile_origin.1 = mul i32 %18, 4096
  %tile_origin.2 = mul i32 %16, 32
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %14
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %22 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %22, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %23 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %24 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %25 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %25, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc14 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc14, ptr %tile_loop.invar_address, align 4
  %26 = icmp eq i32 %tile_loop.indvar, 0
  %27 = mul i32 %tile_loop.indvar, 1
  %28 = add i32 %27, 0
  %x_loc = add i32 %28, %24
  %29 = add i32 %tile_origin.1, %y_in_tile.indvar
  %30 = add i32 %tile_origin.2, %x_loc
  %31 = icmp ult i32 %x_loc, %tile_bound13
  br i1 %31, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body
  br label %tile_loop.loop_header, !llvm.loop !481

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !482

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache124, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %32 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %33 = load float, ptr %current_output, align 4
  store float %33, ptr %32, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache124, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %34 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result34 = load float, ptr %34, align 4
  %35 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result34, i32 16, i32 31)
  store float %35, ptr %result_from_other_lane, align 4
  call void @region_1_21__3(ptr %34, ptr %result_from_other_lane, ptr %return_buffer35)
  %36 = load float, ptr %return_buffer35, align 4
  store float %36, ptr %34, align 4
  %partial_reduction_result37 = load float, ptr %34, align 4
  %37 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result37, i32 8, i32 31)
  store float %37, ptr %result_from_other_lane36, align 4
  call void @region_1_21__3(ptr %34, ptr %result_from_other_lane36, ptr %return_buffer38)
  %38 = load float, ptr %return_buffer38, align 4
  store float %38, ptr %34, align 4
  %partial_reduction_result40 = load float, ptr %34, align 4
  %39 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result40, i32 4, i32 31)
  store float %39, ptr %result_from_other_lane39, align 4
  call void @region_1_21__3(ptr %34, ptr %result_from_other_lane39, ptr %return_buffer41)
  %40 = load float, ptr %return_buffer41, align 4
  store float %40, ptr %34, align 4
  %partial_reduction_result43 = load float, ptr %34, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result43, i32 2, i32 31)
  store float %41, ptr %result_from_other_lane42, align 4
  call void @region_1_21__3(ptr %34, ptr %result_from_other_lane42, ptr %return_buffer44)
  %42 = load float, ptr %return_buffer44, align 4
  store float %42, ptr %34, align 4
  %partial_reduction_result46 = load float, ptr %34, align 4
  %43 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result46, i32 1, i32 31)
  store float %43, ptr %result_from_other_lane45, align 4
  call void @region_1_21__3(ptr %34, ptr %result_from_other_lane45, ptr %return_buffer47)
  %44 = load float, ptr %return_buffer47, align 4
  store float %44, ptr %34, align 4
  %45 = icmp ult i32 %thread_id.x, %tile_bound
  %46 = mul i32 %thread_id.y, 1
  %47 = icmp ult i32 %46, %tile_bound13
  %48 = and i1 %47, %45
  %49 = icmp eq i32 %lane_id, 0
  %50 = and i1 %48, %49
  br i1 %50, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %shmem_output_address48 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache125, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %51 = addrspacecast ptr addrspace(3) %shmem_output_address48 to ptr
  %current_output49 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  %52 = load float, ptr %current_output49, align 4
  store float %52, ptr %51, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr50 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache125, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %53 = addrspacecast ptr addrspace(3) %shmem_transposed_addr50 to ptr
  %partial_reduction_result52 = load float, ptr %53, align 4
  %54 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result52, i32 16, i32 31)
  store float %54, ptr %result_from_other_lane51, align 4
  call void @region_2_30(ptr %53, ptr %result_from_other_lane51, ptr %return_buffer53)
  %55 = load float, ptr %return_buffer53, align 4
  store float %55, ptr %53, align 4
  %partial_reduction_result55 = load float, ptr %53, align 4
  %56 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result55, i32 8, i32 31)
  store float %56, ptr %result_from_other_lane54, align 4
  call void @region_2_30(ptr %53, ptr %result_from_other_lane54, ptr %return_buffer56)
  %57 = load float, ptr %return_buffer56, align 4
  store float %57, ptr %53, align 4
  %partial_reduction_result58 = load float, ptr %53, align 4
  %58 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result58, i32 4, i32 31)
  store float %58, ptr %result_from_other_lane57, align 4
  call void @region_2_30(ptr %53, ptr %result_from_other_lane57, ptr %return_buffer59)
  %59 = load float, ptr %return_buffer59, align 4
  store float %59, ptr %53, align 4
  %partial_reduction_result61 = load float, ptr %53, align 4
  %60 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result61, i32 2, i32 31)
  store float %60, ptr %result_from_other_lane60, align 4
  call void @region_2_30(ptr %53, ptr %result_from_other_lane60, ptr %return_buffer62)
  %61 = load float, ptr %return_buffer62, align 4
  store float %61, ptr %53, align 4
  %partial_reduction_result64 = load float, ptr %53, align 4
  %62 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result64, i32 1, i32 31)
  store float %62, ptr %result_from_other_lane63, align 4
  call void @region_2_30(ptr %53, ptr %result_from_other_lane63, ptr %return_buffer65)
  %63 = load float, ptr %return_buffer65, align 4
  store float %63, ptr %53, align 4
  %64 = icmp ult i32 %thread_id.x, %tile_bound
  %65 = mul i32 %thread_id.y, 1
  %66 = icmp ult i32 %65, %tile_bound13
  %67 = and i1 %66, %64
  %68 = icmp eq i32 %lane_id, 0
  %69 = and i1 %67, %68
  br i1 %69, label %reduction_write_output-true66, label %reduction_write_output-after67

reduction_write_output-after67:                   ; preds = %reduction_write_output-true66, %reduction_write_output-after
  %shmem_output_address70 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache126, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %70 = addrspacecast ptr addrspace(3) %shmem_output_address70 to ptr
  %current_output71 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  %71 = load float, ptr %current_output71, align 4
  store float %71, ptr %70, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr72 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache126, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %72 = addrspacecast ptr addrspace(3) %shmem_transposed_addr72 to ptr
  %partial_reduction_result74 = load float, ptr %72, align 4
  %73 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result74, i32 16, i32 31)
  store float %73, ptr %result_from_other_lane73, align 4
  call void @region_3_39__1(ptr %72, ptr %result_from_other_lane73, ptr %return_buffer75)
  %74 = load float, ptr %return_buffer75, align 4
  store float %74, ptr %72, align 4
  %partial_reduction_result77 = load float, ptr %72, align 4
  %75 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result77, i32 8, i32 31)
  store float %75, ptr %result_from_other_lane76, align 4
  call void @region_3_39__1(ptr %72, ptr %result_from_other_lane76, ptr %return_buffer78)
  %76 = load float, ptr %return_buffer78, align 4
  store float %76, ptr %72, align 4
  %partial_reduction_result80 = load float, ptr %72, align 4
  %77 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result80, i32 4, i32 31)
  store float %77, ptr %result_from_other_lane79, align 4
  call void @region_3_39__1(ptr %72, ptr %result_from_other_lane79, ptr %return_buffer81)
  %78 = load float, ptr %return_buffer81, align 4
  store float %78, ptr %72, align 4
  %partial_reduction_result83 = load float, ptr %72, align 4
  %79 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result83, i32 2, i32 31)
  store float %79, ptr %result_from_other_lane82, align 4
  call void @region_3_39__1(ptr %72, ptr %result_from_other_lane82, ptr %return_buffer84)
  %80 = load float, ptr %return_buffer84, align 4
  store float %80, ptr %72, align 4
  %partial_reduction_result86 = load float, ptr %72, align 4
  %81 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result86, i32 1, i32 31)
  store float %81, ptr %result_from_other_lane85, align 4
  call void @region_3_39__1(ptr %72, ptr %result_from_other_lane85, ptr %return_buffer87)
  %82 = load float, ptr %return_buffer87, align 4
  store float %82, ptr %72, align 4
  %83 = icmp ult i32 %thread_id.x, %tile_bound
  %84 = mul i32 %thread_id.y, 1
  %85 = icmp ult i32 %84, %tile_bound13
  %86 = and i1 %85, %83
  %87 = icmp eq i32 %lane_id, 0
  %88 = and i1 %86, %87
  br i1 %88, label %reduction_write_output-true88, label %reduction_write_output-after89

reduction_write_output-after89:                   ; preds = %reduction_write_output-true88, %reduction_write_output-after67
  %shmem_output_address92 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache127, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %89 = addrspacecast ptr addrspace(3) %shmem_output_address92 to ptr
  %current_output93 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  %90 = load float, ptr %current_output93, align 4
  store float %90, ptr %89, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr94 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache127, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %91 = addrspacecast ptr addrspace(3) %shmem_transposed_addr94 to ptr
  %partial_reduction_result96 = load float, ptr %91, align 4
  %92 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result96, i32 16, i32 31)
  store float %92, ptr %result_from_other_lane95, align 4
  call void @region_4_48(ptr %91, ptr %result_from_other_lane95, ptr %return_buffer97)
  %93 = load float, ptr %return_buffer97, align 4
  store float %93, ptr %91, align 4
  %partial_reduction_result99 = load float, ptr %91, align 4
  %94 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result99, i32 8, i32 31)
  store float %94, ptr %result_from_other_lane98, align 4
  call void @region_4_48(ptr %91, ptr %result_from_other_lane98, ptr %return_buffer100)
  %95 = load float, ptr %return_buffer100, align 4
  store float %95, ptr %91, align 4
  %partial_reduction_result102 = load float, ptr %91, align 4
  %96 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result102, i32 4, i32 31)
  store float %96, ptr %result_from_other_lane101, align 4
  call void @region_4_48(ptr %91, ptr %result_from_other_lane101, ptr %return_buffer103)
  %97 = load float, ptr %return_buffer103, align 4
  store float %97, ptr %91, align 4
  %partial_reduction_result105 = load float, ptr %91, align 4
  %98 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result105, i32 2, i32 31)
  store float %98, ptr %result_from_other_lane104, align 4
  call void @region_4_48(ptr %91, ptr %result_from_other_lane104, ptr %return_buffer106)
  %99 = load float, ptr %return_buffer106, align 4
  store float %99, ptr %91, align 4
  %partial_reduction_result108 = load float, ptr %91, align 4
  %100 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result108, i32 1, i32 31)
  store float %100, ptr %result_from_other_lane107, align 4
  call void @region_4_48(ptr %91, ptr %result_from_other_lane107, ptr %return_buffer109)
  %101 = load float, ptr %return_buffer109, align 4
  store float %101, ptr %91, align 4
  %102 = icmp ult i32 %thread_id.x, %tile_bound
  %103 = mul i32 %thread_id.y, 1
  %104 = icmp ult i32 %103, %tile_bound13
  %105 = and i1 %104, %102
  %106 = icmp eq i32 %lane_id, 0
  %107 = and i1 %105, %106
  br i1 %107, label %reduction_write_output-true110, label %reduction_write_output-after111

reduction_write_output-after111:                  ; preds = %reduction_write_output-true110, %reduction_write_output-after89
  %shmem_output_address114 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache128, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %108 = addrspacecast ptr addrspace(3) %shmem_output_address114 to ptr
  %current_output115 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  %109 = load float, ptr %current_output115, align 4
  store float %109, ptr %108, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr116 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache128, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %110 = addrspacecast ptr addrspace(3) %shmem_transposed_addr116 to ptr
  %partial_reduction_result118 = load float, ptr %110, align 4
  %111 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result118, i32 16, i32 31)
  store float %111, ptr %result_from_other_lane117, align 4
  call void @region_5_57(ptr %110, ptr %result_from_other_lane117, ptr %return_buffer119)
  %112 = load float, ptr %return_buffer119, align 4
  store float %112, ptr %110, align 4
  %partial_reduction_result121 = load float, ptr %110, align 4
  %113 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result121, i32 8, i32 31)
  store float %113, ptr %result_from_other_lane120, align 4
  call void @region_5_57(ptr %110, ptr %result_from_other_lane120, ptr %return_buffer122)
  %114 = load float, ptr %return_buffer122, align 4
  store float %114, ptr %110, align 4
  %partial_reduction_result124 = load float, ptr %110, align 4
  %115 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result124, i32 4, i32 31)
  store float %115, ptr %result_from_other_lane123, align 4
  call void @region_5_57(ptr %110, ptr %result_from_other_lane123, ptr %return_buffer125)
  %116 = load float, ptr %return_buffer125, align 4
  store float %116, ptr %110, align 4
  %partial_reduction_result127 = load float, ptr %110, align 4
  %117 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result127, i32 2, i32 31)
  store float %117, ptr %result_from_other_lane126, align 4
  call void @region_5_57(ptr %110, ptr %result_from_other_lane126, ptr %return_buffer128)
  %118 = load float, ptr %return_buffer128, align 4
  store float %118, ptr %110, align 4
  %partial_reduction_result130 = load float, ptr %110, align 4
  %119 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result130, i32 1, i32 31)
  store float %119, ptr %result_from_other_lane129, align 4
  call void @region_5_57(ptr %110, ptr %result_from_other_lane129, ptr %return_buffer131)
  %120 = load float, ptr %return_buffer131, align 4
  store float %120, ptr %110, align 4
  %121 = icmp ult i32 %thread_id.x, %tile_bound
  %122 = mul i32 %thread_id.y, 1
  %123 = icmp ult i32 %122, %tile_bound13
  %124 = and i1 %123, %121
  %125 = icmp eq i32 %lane_id, 0
  %126 = and i1 %124, %125
  br i1 %126, label %reduction_write_output-true132, label %reduction_write_output-after133

reduction_write_output-after133:                  ; preds = %reduction_write_output-true132, %reduction_write_output-after111
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %127 = mul nuw nsw i32 %30, 1
  %128 = add nuw nsw i32 0, %127
  %129 = mul nuw nsw i32 %29, 32
  %130 = add nuw nsw i32 %128, %129
  %131 = mul nuw nsw i32 %tile_origin.0, 4096
  %132 = add nuw nsw i32 %130, %131
  %133 = udiv i32 %132, 1
  %134 = urem i32 %133, 32
  %135 = udiv i32 %132, 32
  %136 = urem i32 %135, 128
  %137 = udiv i32 %132, 4096
  %138 = mul i32 %thread_id.x, 1
  %139 = sub i32 %x_loc, %138
  %140 = mul nuw nsw i32 %134, 1
  %141 = add nuw nsw i32 0, %140
  %142 = udiv i32 %141, 32
  %143 = mul nuw nsw i32 %136, 1
  %144 = add nuw nsw i32 0, %143
  %145 = mul nuw nsw i32 %137, 128
  %146 = add nuw nsw i32 %144, %145
  %147 = udiv i32 %146, 8192
  %Arg_0.1 = getelementptr inbounds float, ptr %arg0, i32 %132
  %Arg_0.115 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %148 = add i32 %146, 0
  %Arg_2.3 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 6, i32 %148, i32 0
  %Arg_2.316 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %Arg_1.2 = getelementptr inbounds [8192 x float], ptr %arg1, i32 0, i32 %146
  %Arg_1.217 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %multiply.11 = fmul float %Arg_2.316, %Arg_1.217
  %region_0_63_constant_12 = load float, ptr @92, align 4
  %subtract.14 = fsub float %region_0_63_constant_12, %Arg_1.217
  %multiply.15 = fmul float %multiply.11, %subtract.14
  %multiply.18 = fmul float %Arg_0.115, %multiply.15
  store float %multiply.18, ptr %reduction_input_address, align 4
  %149 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %139
  call void @region_1_21__3(ptr %149, ptr %reduction_input_address, ptr %return_buffer)
  %150 = load float, ptr %return_buffer, align 4
  store float %150, ptr %149, align 4
  %151 = mul nuw nsw i32 %134, 1
  %152 = add nuw nsw i32 0, %151
  %153 = udiv i32 %152, 32
  %154 = mul nuw nsw i32 %136, 1
  %155 = add nuw nsw i32 0, %154
  %156 = mul nuw nsw i32 %137, 128
  %157 = add nuw nsw i32 %155, %156
  %158 = udiv i32 %157, 8192
  %Arg_0.118 = getelementptr inbounds float, ptr %arg0, i32 %132
  %Arg_0.119 = load float, ptr %Arg_0.118, align 4, !invariant.load !297
  %Arg_3.4 = getelementptr inbounds [8192 x [1 x float]], ptr %arg3, i32 0, i32 %157, i32 0
  %Arg_3.420 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  %multiply.28 = fmul float %Arg_0.119, %Arg_3.420
  store float %multiply.28, ptr %reduction_input_address1, align 4
  %159 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 %139
  call void @region_2_30(ptr %159, ptr %reduction_input_address1, ptr %return_buffer21)
  %160 = load float, ptr %return_buffer21, align 4
  store float %160, ptr %159, align 4
  %161 = mul nuw nsw i32 %134, 1
  %162 = add nuw nsw i32 0, %161
  %163 = udiv i32 %162, 32
  %164 = mul nuw nsw i32 %136, 1
  %165 = add nuw nsw i32 0, %164
  %166 = mul nuw nsw i32 %137, 128
  %167 = add nuw nsw i32 %165, %166
  %168 = udiv i32 %167, 8192
  %Arg_0.122 = getelementptr inbounds float, ptr %arg0, i32 %132
  %Arg_0.123 = load float, ptr %Arg_0.122, align 4, !invariant.load !297
  %Arg_4.5 = getelementptr inbounds [8192 x [1 x float]], ptr %arg4, i32 0, i32 %167, i32 0
  %Arg_4.524 = load float, ptr %Arg_4.5, align 4, !invariant.load !297
  %multiply.37 = fmul float %Arg_0.123, %Arg_4.524
  store float %multiply.37, ptr %reduction_input_address4, align 4
  %169 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 %139
  call void @region_3_39__1(ptr %169, ptr %reduction_input_address4, ptr %return_buffer25)
  %170 = load float, ptr %return_buffer25, align 4
  store float %170, ptr %169, align 4
  %171 = mul nuw nsw i32 %134, 1
  %172 = add nuw nsw i32 0, %171
  %173 = udiv i32 %172, 32
  %174 = mul nuw nsw i32 %136, 1
  %175 = add nuw nsw i32 0, %174
  %176 = mul nuw nsw i32 %137, 128
  %177 = add nuw nsw i32 %175, %176
  %178 = udiv i32 %177, 8192
  %Arg_0.126 = getelementptr inbounds float, ptr %arg0, i32 %132
  %Arg_0.127 = load float, ptr %Arg_0.126, align 4, !invariant.load !297
  %Arg_5.6 = getelementptr inbounds [8192 x [1 x float]], ptr %arg5, i32 0, i32 %177, i32 0
  %Arg_5.628 = load float, ptr %Arg_5.6, align 4, !invariant.load !297
  %multiply.46 = fmul float %Arg_0.127, %Arg_5.628
  store float %multiply.46, ptr %reduction_input_address7, align 4
  %179 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 %139
  call void @region_4_48(ptr %179, ptr %reduction_input_address7, ptr %return_buffer29)
  %180 = load float, ptr %return_buffer29, align 4
  store float %180, ptr %179, align 4
  %181 = mul nuw nsw i32 %134, 1
  %182 = add nuw nsw i32 0, %181
  %183 = udiv i32 %182, 32
  %184 = mul nuw nsw i32 %136, 1
  %185 = add nuw nsw i32 0, %184
  %186 = mul nuw nsw i32 %137, 128
  %187 = add nuw nsw i32 %185, %186
  %188 = udiv i32 %187, 8192
  %Arg_0.130 = getelementptr inbounds float, ptr %arg0, i32 %132
  %Arg_0.131 = load float, ptr %Arg_0.130, align 4, !invariant.load !297
  %Arg_6.7 = getelementptr inbounds [8192 x [1 x float]], ptr %arg6, i32 0, i32 %187, i32 0
  %Arg_6.732 = load float, ptr %Arg_6.7, align 4, !invariant.load !297
  %multiply.55 = fmul float %Arg_0.131, %Arg_6.732
  store float %multiply.55, ptr %reduction_input_address10, align 4
  %189 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 %139
  call void @region_5_57(ptr %189, ptr %reduction_input_address10, ptr %return_buffer33)
  %190 = load float, ptr %return_buffer33, align 4
  store float %190, ptr %189, align 4
  br label %x_in_tile-after

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %191 = mul i32 %thread_id.y, 1
  %192 = add i32 %tile_origin.1, %thread_id.x
  %193 = add i32 %tile_origin.2, %191
  %194 = add i32 %193, 0
  %195 = mul i32 %tile_origin.0, 32
  %196 = add i32 %195, %194
  %197 = udiv i32 %196, 1
  %198 = urem i32 %197, 32
  %199 = udiv i32 %196, 32
  %output_element_address = getelementptr inbounds [64 x [32 x float]], ptr %arg7, i32 0, i32 %199, i32 %198
  %output = load float, ptr %34, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

reduction_write_output-true66:                    ; preds = %reduction_write_output-after
  %200 = mul i32 %thread_id.y, 1
  %201 = add i32 %tile_origin.1, %thread_id.x
  %202 = add i32 %tile_origin.2, %200
  %203 = add i32 %202, 0
  %204 = mul i32 %tile_origin.0, 32
  %205 = add i32 %204, %203
  %206 = udiv i32 %205, 1
  %207 = urem i32 %206, 32
  %208 = udiv i32 %205, 32
  %output_element_address68 = getelementptr inbounds [64 x [32 x float]], ptr %arg8, i32 0, i32 %208, i32 %207
  %output69 = load float, ptr %53, align 4
  store float %output69, ptr %output_element_address68, align 4
  br label %reduction_write_output-after67

reduction_write_output-true88:                    ; preds = %reduction_write_output-after67
  %209 = mul i32 %thread_id.y, 1
  %210 = add i32 %tile_origin.1, %thread_id.x
  %211 = add i32 %tile_origin.2, %209
  %212 = add i32 %211, 0
  %213 = mul i32 %tile_origin.0, 32
  %214 = add i32 %213, %212
  %215 = udiv i32 %214, 1
  %216 = urem i32 %215, 32
  %217 = udiv i32 %214, 32
  %output_element_address90 = getelementptr inbounds [64 x [32 x float]], ptr %arg9, i32 0, i32 %217, i32 %216
  %output91 = load float, ptr %72, align 4
  store float %output91, ptr %output_element_address90, align 4
  br label %reduction_write_output-after89

reduction_write_output-true110:                   ; preds = %reduction_write_output-after89
  %218 = mul i32 %thread_id.y, 1
  %219 = add i32 %tile_origin.1, %thread_id.x
  %220 = add i32 %tile_origin.2, %218
  %221 = add i32 %220, 0
  %222 = mul i32 %tile_origin.0, 32
  %223 = add i32 %222, %221
  %224 = udiv i32 %223, 1
  %225 = urem i32 %224, 32
  %226 = udiv i32 %223, 32
  %output_element_address112 = getelementptr inbounds [64 x [32 x float]], ptr %arg10, i32 0, i32 %226, i32 %225
  %output113 = load float, ptr %91, align 4
  store float %output113, ptr %output_element_address112, align 4
  br label %reduction_write_output-after111

reduction_write_output-true132:                   ; preds = %reduction_write_output-after111
  %227 = mul i32 %thread_id.y, 1
  %228 = add i32 %tile_origin.1, %thread_id.x
  %229 = add i32 %tile_origin.2, %227
  %230 = add i32 %229, 0
  %231 = mul i32 %tile_origin.0, 32
  %232 = add i32 %231, %230
  %233 = udiv i32 %232, 1
  %234 = urem i32 %233, 32
  %235 = udiv i32 %232, 32
  %output_element_address134 = getelementptr inbounds [64 x [32 x float]], ptr %arg11, i32 0, i32 %235, i32 %234
  %output135 = load float, ptr %110, align 4
  store float %output135, ptr %output_element_address134, align 4
  br label %reduction_write_output-after133
}

define internal void @region_1_21__3(ptr dereferenceable(4) %Arg_0.22.typed, ptr dereferenceable(4) %Arg_1.23.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.24.typed = alloca float, align 4
  %Arg_0.22 = load float, ptr %Arg_0.22.typed, align 4
  %Arg_1.23 = load float, ptr %Arg_1.23.typed, align 4
  %add.24 = fadd float %Arg_0.22, %Arg_1.23
  store float %add.24, ptr %add.24.typed, align 4
  %load_ret_value = load float, ptr %add.24.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_30(ptr dereferenceable(4) %Arg_0.31.typed, ptr dereferenceable(4) %Arg_1.32.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.33.typed = alloca float, align 4
  %Arg_0.31 = load float, ptr %Arg_0.31.typed, align 4
  %Arg_1.32 = load float, ptr %Arg_1.32.typed, align 4
  %add.33 = fadd float %Arg_0.31, %Arg_1.32
  store float %add.33, ptr %add.33.typed, align 4
  %load_ret_value = load float, ptr %add.33.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_3_39__1(ptr dereferenceable(4) %Arg_0.40.typed, ptr dereferenceable(4) %Arg_1.41.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.42.typed = alloca float, align 4
  %Arg_0.40 = load float, ptr %Arg_0.40.typed, align 4
  %Arg_1.41 = load float, ptr %Arg_1.41.typed, align 4
  %add.42 = fadd float %Arg_0.40, %Arg_1.41
  store float %add.42, ptr %add.42.typed, align 4
  %load_ret_value = load float, ptr %add.42.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_4_48(ptr dereferenceable(4) %Arg_0.49.typed, ptr dereferenceable(4) %Arg_1.50.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.51.typed = alloca float, align 4
  %Arg_0.49 = load float, ptr %Arg_0.49.typed, align 4
  %Arg_1.50 = load float, ptr %Arg_1.50.typed, align 4
  %add.51 = fadd float %Arg_0.49, %Arg_1.50
  store float %add.51, ptr %add.51.typed, align 4
  %load_ret_value = load float, ptr %add.51.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_5_57(ptr dereferenceable(4) %Arg_0.58.typed, ptr dereferenceable(4) %Arg_1.59.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.60.typed = alloca float, align 4
  %Arg_0.58 = load float, ptr %Arg_0.58.typed, align 4
  %Arg_1.59 = load float, ptr %Arg_1.59.typed, align 4
  %add.60 = fadd float %Arg_0.58, %Arg_1.59
  store float %add.60, ptr %add.60.typed, align 4
  %load_ret_value = load float, ptr %add.60.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_199(ptr noalias align 16 dereferenceable(512) %arg0, ptr noalias align 128 dereferenceable(32768) %arg1, ptr noalias align 128 dereferenceable(1966080) %arg2, ptr noalias align 128 dereferenceable(4194304) %arg3, ptr noalias align 16 dereferenceable(512) %arg4, ptr noalias align 128 dereferenceable(4194304) %arg5, ptr noalias align 16 dereferenceable(512) %arg6, ptr noalias align 16 dereferenceable(512) %arg7, ptr noalias align 128 dereferenceable(32768) %arg8, ptr noalias align 128 dereferenceable(4194304) %arg9, ptr noalias align 16 dereferenceable(512) %arg10, ptr noalias align 128 dereferenceable(4194304) %arg11, ptr noalias align 16 dereferenceable(512) %arg12, ptr noalias align 16 dereferenceable(512) %arg13, ptr noalias align 128 dereferenceable(32768) %arg14, ptr noalias align 128 dereferenceable(4194304) %arg15, ptr noalias align 16 dereferenceable(512) %arg16, ptr noalias align 128 dereferenceable(32768) %arg17, ptr noalias align 128 dereferenceable(4194304) %arg18, ptr noalias align 128 dereferenceable(32768) %arg19, ptr noalias align 128 dereferenceable(4194304) %arg20, ptr noalias align 128 dereferenceable(32768) %arg21, ptr noalias align 128 dereferenceable(4194304) %arg22, ptr noalias align 128 dereferenceable(32768) %arg23, ptr noalias align 128 dereferenceable(4194304) %arg24, ptr noalias align 128 dereferenceable(32768) %arg25, ptr noalias align 128 dereferenceable(4194304) %arg26) {
entry:
  %return_buffer260 = alloca float, align 4
  %result_from_other_lane258 = alloca float, align 4
  %return_buffer257 = alloca float, align 4
  %result_from_other_lane255 = alloca float, align 4
  %return_buffer254 = alloca float, align 4
  %result_from_other_lane252 = alloca float, align 4
  %return_buffer251 = alloca float, align 4
  %result_from_other_lane249 = alloca float, align 4
  %return_buffer248 = alloca float, align 4
  %result_from_other_lane246 = alloca float, align 4
  %return_buffer238 = alloca float, align 4
  %result_from_other_lane236 = alloca float, align 4
  %return_buffer235 = alloca float, align 4
  %result_from_other_lane233 = alloca float, align 4
  %return_buffer232 = alloca float, align 4
  %result_from_other_lane230 = alloca float, align 4
  %return_buffer229 = alloca float, align 4
  %result_from_other_lane227 = alloca float, align 4
  %return_buffer226 = alloca float, align 4
  %result_from_other_lane224 = alloca float, align 4
  %return_buffer216 = alloca float, align 4
  %result_from_other_lane214 = alloca float, align 4
  %return_buffer213 = alloca float, align 4
  %result_from_other_lane211 = alloca float, align 4
  %return_buffer210 = alloca float, align 4
  %result_from_other_lane208 = alloca float, align 4
  %return_buffer207 = alloca float, align 4
  %result_from_other_lane205 = alloca float, align 4
  %return_buffer204 = alloca float, align 4
  %result_from_other_lane202 = alloca float, align 4
  %return_buffer194 = alloca float, align 4
  %result_from_other_lane192 = alloca float, align 4
  %return_buffer191 = alloca float, align 4
  %result_from_other_lane189 = alloca float, align 4
  %return_buffer188 = alloca float, align 4
  %result_from_other_lane186 = alloca float, align 4
  %return_buffer185 = alloca float, align 4
  %result_from_other_lane183 = alloca float, align 4
  %return_buffer182 = alloca float, align 4
  %result_from_other_lane180 = alloca float, align 4
  %return_buffer176 = alloca float, align 4
  %result_from_other_lane174 = alloca float, align 4
  %return_buffer173 = alloca float, align 4
  %result_from_other_lane171 = alloca float, align 4
  %return_buffer170 = alloca float, align 4
  %result_from_other_lane168 = alloca float, align 4
  %return_buffer167 = alloca float, align 4
  %result_from_other_lane165 = alloca float, align 4
  %return_buffer164 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer67 = alloca float, align 4
  %return_buffer58 = alloca float, align 4
  %return_buffer43 = alloca float, align 4
  %return_buffer34 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result11 = alloca float, align 4
  %reduction_input_address10 = alloca float, align 4
  %partial_reduction_result8 = alloca float, align 4
  %reduction_input_address7 = alloca float, align 4
  %partial_reduction_result5 = alloca float, align 4
  %reduction_input_address4 = alloca float, align 4
  %partial_reduction_result2 = alloca float, align 4
  %reduction_input_address1 = alloca float, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after262, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_112_constant_39 = load float, ptr @95, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_112_constant_39, ptr %2, align 4
  %region_0_112_constant_393 = load float, ptr @95, align 4
  %3 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  store float %region_0_112_constant_393, ptr %3, align 4
  %region_0_112_constant_396 = load float, ptr @95, align 4
  %4 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  store float %region_0_112_constant_396, ptr %4, align 4
  %region_0_112_constant_399 = load float, ptr @95, align 4
  %5 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  store float %region_0_112_constant_399, ptr %5, align 4
  %region_0_112_constant_3912 = load float, ptr @95, align 4
  %6 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  store float %region_0_112_constant_3912, ptr %6, align 4
  %7 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %8 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !362
  %9 = urem i32 %7, 1024
  %10 = udiv i32 %7, 1024
  %11 = mul i32 %8, 1
  %12 = add i32 %11, %10
  %13 = icmp ult i32 %12, 256
  br i1 %13, label %14, label %early_return

14:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %9, 32
  %thread_id.y = udiv i32 %9, 32
  %lane_id = urem i32 %9, 32
  %15 = udiv i32 %12, 1
  %16 = urem i32 %15, 4
  %17 = udiv i32 %12, 4
  %18 = urem i32 %17, 1
  %19 = udiv i32 %12, 4
  %20 = icmp eq i32 %18, 0
  %tile_bound = select i1 %20, i32 128, i32 4096
  %21 = icmp eq i32 %16, 3
  %tile_bound13 = select i1 %21, i32 32, i32 32
  %tile_origin.0 = mul i32 %19, 1
  %tile_origin.1 = mul i32 %18, 4096
  %tile_origin.2 = mul i32 %16, 32
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %14
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %22 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %22, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %23 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %24 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %25 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %25, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc14 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc14, ptr %tile_loop.invar_address, align 4
  %26 = icmp eq i32 %tile_loop.indvar, 0
  %27 = mul i32 %tile_loop.indvar, 1
  %28 = add i32 %27, 0
  %x_loc = add i32 %28, %24
  %29 = add i32 %tile_origin.1, %y_in_tile.indvar
  %30 = add i32 %tile_origin.2, %x_loc
  %31 = icmp ult i32 %x_loc, %tile_bound13
  br i1 %31, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body
  br label %tile_loop.loop_header, !llvm.loop !483

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !484

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache129, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %32 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %33 = load float, ptr %current_output, align 4
  store float %33, ptr %32, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache129, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %34 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result163 = load float, ptr %34, align 4
  %35 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result163, i32 16, i32 31)
  store float %35, ptr %result_from_other_lane, align 4
  call void @region_1_40(ptr %34, ptr %result_from_other_lane, ptr %return_buffer164)
  %36 = load float, ptr %return_buffer164, align 4
  store float %36, ptr %34, align 4
  %partial_reduction_result166 = load float, ptr %34, align 4
  %37 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result166, i32 8, i32 31)
  store float %37, ptr %result_from_other_lane165, align 4
  call void @region_1_40(ptr %34, ptr %result_from_other_lane165, ptr %return_buffer167)
  %38 = load float, ptr %return_buffer167, align 4
  store float %38, ptr %34, align 4
  %partial_reduction_result169 = load float, ptr %34, align 4
  %39 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result169, i32 4, i32 31)
  store float %39, ptr %result_from_other_lane168, align 4
  call void @region_1_40(ptr %34, ptr %result_from_other_lane168, ptr %return_buffer170)
  %40 = load float, ptr %return_buffer170, align 4
  store float %40, ptr %34, align 4
  %partial_reduction_result172 = load float, ptr %34, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result172, i32 2, i32 31)
  store float %41, ptr %result_from_other_lane171, align 4
  call void @region_1_40(ptr %34, ptr %result_from_other_lane171, ptr %return_buffer173)
  %42 = load float, ptr %return_buffer173, align 4
  store float %42, ptr %34, align 4
  %partial_reduction_result175 = load float, ptr %34, align 4
  %43 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result175, i32 1, i32 31)
  store float %43, ptr %result_from_other_lane174, align 4
  call void @region_1_40(ptr %34, ptr %result_from_other_lane174, ptr %return_buffer176)
  %44 = load float, ptr %return_buffer176, align 4
  store float %44, ptr %34, align 4
  %45 = icmp ult i32 %thread_id.x, %tile_bound
  %46 = mul i32 %thread_id.y, 1
  %47 = icmp ult i32 %46, %tile_bound13
  %48 = and i1 %47, %45
  %49 = icmp eq i32 %lane_id, 0
  %50 = and i1 %48, %49
  br i1 %50, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %shmem_output_address177 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache130, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %51 = addrspacecast ptr addrspace(3) %shmem_output_address177 to ptr
  %current_output178 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  %52 = load float, ptr %current_output178, align 4
  store float %52, ptr %51, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr179 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache130, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %53 = addrspacecast ptr addrspace(3) %shmem_transposed_addr179 to ptr
  %partial_reduction_result181 = load float, ptr %53, align 4
  %54 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result181, i32 16, i32 31)
  store float %54, ptr %result_from_other_lane180, align 4
  call void @region_2_51(ptr %53, ptr %result_from_other_lane180, ptr %return_buffer182)
  %55 = load float, ptr %return_buffer182, align 4
  store float %55, ptr %53, align 4
  %partial_reduction_result184 = load float, ptr %53, align 4
  %56 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result184, i32 8, i32 31)
  store float %56, ptr %result_from_other_lane183, align 4
  call void @region_2_51(ptr %53, ptr %result_from_other_lane183, ptr %return_buffer185)
  %57 = load float, ptr %return_buffer185, align 4
  store float %57, ptr %53, align 4
  %partial_reduction_result187 = load float, ptr %53, align 4
  %58 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result187, i32 4, i32 31)
  store float %58, ptr %result_from_other_lane186, align 4
  call void @region_2_51(ptr %53, ptr %result_from_other_lane186, ptr %return_buffer188)
  %59 = load float, ptr %return_buffer188, align 4
  store float %59, ptr %53, align 4
  %partial_reduction_result190 = load float, ptr %53, align 4
  %60 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result190, i32 2, i32 31)
  store float %60, ptr %result_from_other_lane189, align 4
  call void @region_2_51(ptr %53, ptr %result_from_other_lane189, ptr %return_buffer191)
  %61 = load float, ptr %return_buffer191, align 4
  store float %61, ptr %53, align 4
  %partial_reduction_result193 = load float, ptr %53, align 4
  %62 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result193, i32 1, i32 31)
  store float %62, ptr %result_from_other_lane192, align 4
  call void @region_2_51(ptr %53, ptr %result_from_other_lane192, ptr %return_buffer194)
  %63 = load float, ptr %return_buffer194, align 4
  store float %63, ptr %53, align 4
  %64 = icmp ult i32 %thread_id.x, %tile_bound
  %65 = mul i32 %thread_id.y, 1
  %66 = icmp ult i32 %65, %tile_bound13
  %67 = and i1 %66, %64
  %68 = icmp eq i32 %lane_id, 0
  %69 = and i1 %67, %68
  br i1 %69, label %reduction_write_output-true195, label %reduction_write_output-after196

reduction_write_output-after196:                  ; preds = %reduction_write_output-true195, %reduction_write_output-after
  %shmem_output_address199 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache131, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %70 = addrspacecast ptr addrspace(3) %shmem_output_address199 to ptr
  %current_output200 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  %71 = load float, ptr %current_output200, align 4
  store float %71, ptr %70, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr201 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache131, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %72 = addrspacecast ptr addrspace(3) %shmem_transposed_addr201 to ptr
  %partial_reduction_result203 = load float, ptr %72, align 4
  %73 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result203, i32 16, i32 31)
  store float %73, ptr %result_from_other_lane202, align 4
  call void @region_3_73(ptr %72, ptr %result_from_other_lane202, ptr %return_buffer204)
  %74 = load float, ptr %return_buffer204, align 4
  store float %74, ptr %72, align 4
  %partial_reduction_result206 = load float, ptr %72, align 4
  %75 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result206, i32 8, i32 31)
  store float %75, ptr %result_from_other_lane205, align 4
  call void @region_3_73(ptr %72, ptr %result_from_other_lane205, ptr %return_buffer207)
  %76 = load float, ptr %return_buffer207, align 4
  store float %76, ptr %72, align 4
  %partial_reduction_result209 = load float, ptr %72, align 4
  %77 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result209, i32 4, i32 31)
  store float %77, ptr %result_from_other_lane208, align 4
  call void @region_3_73(ptr %72, ptr %result_from_other_lane208, ptr %return_buffer210)
  %78 = load float, ptr %return_buffer210, align 4
  store float %78, ptr %72, align 4
  %partial_reduction_result212 = load float, ptr %72, align 4
  %79 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result212, i32 2, i32 31)
  store float %79, ptr %result_from_other_lane211, align 4
  call void @region_3_73(ptr %72, ptr %result_from_other_lane211, ptr %return_buffer213)
  %80 = load float, ptr %return_buffer213, align 4
  store float %80, ptr %72, align 4
  %partial_reduction_result215 = load float, ptr %72, align 4
  %81 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result215, i32 1, i32 31)
  store float %81, ptr %result_from_other_lane214, align 4
  call void @region_3_73(ptr %72, ptr %result_from_other_lane214, ptr %return_buffer216)
  %82 = load float, ptr %return_buffer216, align 4
  store float %82, ptr %72, align 4
  %83 = icmp ult i32 %thread_id.x, %tile_bound
  %84 = mul i32 %thread_id.y, 1
  %85 = icmp ult i32 %84, %tile_bound13
  %86 = and i1 %85, %83
  %87 = icmp eq i32 %lane_id, 0
  %88 = and i1 %86, %87
  br i1 %88, label %reduction_write_output-true217, label %reduction_write_output-after218

reduction_write_output-after218:                  ; preds = %reduction_write_output-true217, %reduction_write_output-after196
  %shmem_output_address221 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache132, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %89 = addrspacecast ptr addrspace(3) %shmem_output_address221 to ptr
  %current_output222 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  %90 = load float, ptr %current_output222, align 4
  store float %90, ptr %89, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr223 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache132, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %91 = addrspacecast ptr addrspace(3) %shmem_transposed_addr223 to ptr
  %partial_reduction_result225 = load float, ptr %91, align 4
  %92 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result225, i32 16, i32 31)
  store float %92, ptr %result_from_other_lane224, align 4
  call void @region_4_84(ptr %91, ptr %result_from_other_lane224, ptr %return_buffer226)
  %93 = load float, ptr %return_buffer226, align 4
  store float %93, ptr %91, align 4
  %partial_reduction_result228 = load float, ptr %91, align 4
  %94 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result228, i32 8, i32 31)
  store float %94, ptr %result_from_other_lane227, align 4
  call void @region_4_84(ptr %91, ptr %result_from_other_lane227, ptr %return_buffer229)
  %95 = load float, ptr %return_buffer229, align 4
  store float %95, ptr %91, align 4
  %partial_reduction_result231 = load float, ptr %91, align 4
  %96 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result231, i32 4, i32 31)
  store float %96, ptr %result_from_other_lane230, align 4
  call void @region_4_84(ptr %91, ptr %result_from_other_lane230, ptr %return_buffer232)
  %97 = load float, ptr %return_buffer232, align 4
  store float %97, ptr %91, align 4
  %partial_reduction_result234 = load float, ptr %91, align 4
  %98 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result234, i32 2, i32 31)
  store float %98, ptr %result_from_other_lane233, align 4
  call void @region_4_84(ptr %91, ptr %result_from_other_lane233, ptr %return_buffer235)
  %99 = load float, ptr %return_buffer235, align 4
  store float %99, ptr %91, align 4
  %partial_reduction_result237 = load float, ptr %91, align 4
  %100 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result237, i32 1, i32 31)
  store float %100, ptr %result_from_other_lane236, align 4
  call void @region_4_84(ptr %91, ptr %result_from_other_lane236, ptr %return_buffer238)
  %101 = load float, ptr %return_buffer238, align 4
  store float %101, ptr %91, align 4
  %102 = icmp ult i32 %thread_id.x, %tile_bound
  %103 = mul i32 %thread_id.y, 1
  %104 = icmp ult i32 %103, %tile_bound13
  %105 = and i1 %104, %102
  %106 = icmp eq i32 %lane_id, 0
  %107 = and i1 %105, %106
  br i1 %107, label %reduction_write_output-true239, label %reduction_write_output-after240

reduction_write_output-after240:                  ; preds = %reduction_write_output-true239, %reduction_write_output-after218
  %shmem_output_address243 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache133, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %108 = addrspacecast ptr addrspace(3) %shmem_output_address243 to ptr
  %current_output244 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  %109 = load float, ptr %current_output244, align 4
  store float %109, ptr %108, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr245 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache133, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %110 = addrspacecast ptr addrspace(3) %shmem_transposed_addr245 to ptr
  %partial_reduction_result247 = load float, ptr %110, align 4
  %111 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result247, i32 16, i32 31)
  store float %111, ptr %result_from_other_lane246, align 4
  call void @region_5_106(ptr %110, ptr %result_from_other_lane246, ptr %return_buffer248)
  %112 = load float, ptr %return_buffer248, align 4
  store float %112, ptr %110, align 4
  %partial_reduction_result250 = load float, ptr %110, align 4
  %113 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result250, i32 8, i32 31)
  store float %113, ptr %result_from_other_lane249, align 4
  call void @region_5_106(ptr %110, ptr %result_from_other_lane249, ptr %return_buffer251)
  %114 = load float, ptr %return_buffer251, align 4
  store float %114, ptr %110, align 4
  %partial_reduction_result253 = load float, ptr %110, align 4
  %115 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result253, i32 4, i32 31)
  store float %115, ptr %result_from_other_lane252, align 4
  call void @region_5_106(ptr %110, ptr %result_from_other_lane252, ptr %return_buffer254)
  %116 = load float, ptr %return_buffer254, align 4
  store float %116, ptr %110, align 4
  %partial_reduction_result256 = load float, ptr %110, align 4
  %117 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result256, i32 2, i32 31)
  store float %117, ptr %result_from_other_lane255, align 4
  call void @region_5_106(ptr %110, ptr %result_from_other_lane255, ptr %return_buffer257)
  %118 = load float, ptr %return_buffer257, align 4
  store float %118, ptr %110, align 4
  %partial_reduction_result259 = load float, ptr %110, align 4
  %119 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result259, i32 1, i32 31)
  store float %119, ptr %result_from_other_lane258, align 4
  call void @region_5_106(ptr %110, ptr %result_from_other_lane258, ptr %return_buffer260)
  %120 = load float, ptr %return_buffer260, align 4
  store float %120, ptr %110, align 4
  %121 = icmp ult i32 %thread_id.x, %tile_bound
  %122 = mul i32 %thread_id.y, 1
  %123 = icmp ult i32 %122, %tile_bound13
  %124 = and i1 %123, %121
  %125 = icmp eq i32 %lane_id, 0
  %126 = and i1 %124, %125
  br i1 %126, label %reduction_write_output-true261, label %reduction_write_output-after262

reduction_write_output-after262:                  ; preds = %reduction_write_output-true261, %reduction_write_output-after240
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %127 = mul nuw nsw i32 %30, 1
  %128 = add nuw nsw i32 0, %127
  %129 = mul nuw nsw i32 %29, 128
  %130 = add nuw nsw i32 %128, %129
  %131 = mul nuw nsw i32 %tile_origin.0, 16384
  %132 = add nuw nsw i32 %130, %131
  %133 = udiv i32 %132, 1
  %134 = urem i32 %133, 128
  %135 = udiv i32 %132, 128
  %136 = urem i32 %135, 128
  %137 = udiv i32 %132, 16384
  %138 = mul i32 %thread_id.x, 1
  %139 = sub i32 %x_loc, %138
  %140 = mul nuw nsw i32 %134, 1
  %141 = add nuw nsw i32 0, %140
  %142 = udiv i32 %141, 128
  %143 = mul nuw nsw i32 %136, 1
  %144 = add nuw nsw i32 0, %143
  %145 = mul nuw nsw i32 %137, 128
  %146 = add nuw nsw i32 %144, %145
  %147 = udiv i32 %146, 8192
  %Arg_3.4 = getelementptr inbounds float, ptr %arg3, i32 %132
  %Arg_3.415 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  %Arg_4.5 = getelementptr inbounds [128 x float], ptr %arg4, i32 0, i32 %141
  %Arg_4.516 = load float, ptr %Arg_4.5, align 4, !invariant.load !297
  %add.19 = fadd float %Arg_3.415, %Arg_4.516
  %region_0_112_constant_20 = load float, ptr @93, align 4
  %148 = fcmp oge float %add.19, %region_0_112_constant_20
  %149 = fcmp une float %add.19, %add.19
  %150 = or i1 %148, %149
  %maximum.22 = select i1 %150, float %add.19, float %region_0_112_constant_20
  %compare.23 = fcmp ogt float %maximum.22, %region_0_112_constant_20
  %151 = zext i1 %compare.23 to i8
  %152 = add i32 %146, 0
  %Arg_2.3 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 45, i32 %152, i32 0
  %Arg_2.317 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %Arg_1.2 = getelementptr inbounds [8192 x float], ptr %arg1, i32 0, i32 %146
  %Arg_1.218 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %multiply.27 = fmul float %Arg_2.317, %Arg_1.218
  %region_0_112_constant_28 = load float, ptr @94, align 4
  %subtract.30 = fsub float %region_0_112_constant_28, %Arg_1.218
  %multiply.31 = fmul float %multiply.27, %subtract.30
  %Arg_0.1 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %141, i32 0
  %Arg_0.119 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %multiply.36 = fmul float %multiply.31, %Arg_0.119
  %153 = trunc i8 %151 to i1
  %154 = select i1 %153, float %multiply.36, float %region_0_112_constant_20
  store float %154, ptr %reduction_input_address, align 4
  %155 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %139
  call void @region_1_40(ptr %155, ptr %reduction_input_address, ptr %return_buffer)
  %156 = load float, ptr %return_buffer, align 4
  store float %156, ptr %155, align 4
  %157 = mul nuw nsw i32 %134, 1
  %158 = add nuw nsw i32 0, %157
  %159 = udiv i32 %158, 128
  %160 = mul nuw nsw i32 %136, 1
  %161 = add nuw nsw i32 0, %160
  %162 = mul nuw nsw i32 %137, 128
  %163 = add nuw nsw i32 %161, %162
  %164 = udiv i32 %163, 8192
  %Arg_5.6 = getelementptr inbounds float, ptr %arg5, i32 %132
  %Arg_5.620 = load float, ptr %Arg_5.6, align 4, !invariant.load !297
  %Arg_6.7 = getelementptr inbounds [128 x float], ptr %arg6, i32 0, i32 %158
  %Arg_6.721 = load float, ptr %Arg_6.7, align 4, !invariant.load !297
  %add.46 = fadd float %Arg_5.620, %Arg_6.721
  %region_0_112_constant_2022 = load float, ptr @93, align 4
  %165 = fcmp oge float %add.46, %region_0_112_constant_2022
  %166 = fcmp une float %add.46, %add.46
  %167 = or i1 %165, %166
  %maximum.47 = select i1 %167, float %add.46, float %region_0_112_constant_2022
  %compare.48 = fcmp ogt float %maximum.47, %region_0_112_constant_2022
  %168 = zext i1 %compare.48 to i8
  %169 = add i32 %163, 0
  %Arg_2.323 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 45, i32 %169, i32 0
  %Arg_2.324 = load float, ptr %Arg_2.323, align 4, !invariant.load !297
  %Arg_1.225 = getelementptr inbounds [8192 x float], ptr %arg1, i32 0, i32 %163
  %Arg_1.226 = load float, ptr %Arg_1.225, align 4, !invariant.load !297
  %multiply.2727 = fmul float %Arg_2.324, %Arg_1.226
  %region_0_112_constant_2828 = load float, ptr @94, align 4
  %subtract.3029 = fsub float %region_0_112_constant_2828, %Arg_1.226
  %multiply.3130 = fmul float %multiply.2727, %subtract.3029
  %Arg_0.131 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %158, i32 0
  %Arg_0.132 = load float, ptr %Arg_0.131, align 4, !invariant.load !297
  %multiply.3633 = fmul float %multiply.3130, %Arg_0.132
  %170 = trunc i8 %168 to i1
  %171 = select i1 %170, float %multiply.3633, float %region_0_112_constant_2022
  store float %171, ptr %reduction_input_address1, align 4
  %172 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 %139
  call void @region_2_51(ptr %172, ptr %reduction_input_address1, ptr %return_buffer34)
  %173 = load float, ptr %return_buffer34, align 4
  store float %173, ptr %172, align 4
  %174 = mul nuw nsw i32 %134, 1
  %175 = add nuw nsw i32 0, %174
  %176 = udiv i32 %175, 128
  %177 = mul nuw nsw i32 %136, 1
  %178 = add nuw nsw i32 0, %177
  %179 = mul nuw nsw i32 %137, 128
  %180 = add nuw nsw i32 %178, %179
  %181 = udiv i32 %180, 8192
  %Arg_9.10 = getelementptr inbounds float, ptr %arg9, i32 %132
  %Arg_9.1035 = load float, ptr %Arg_9.10, align 4, !invariant.load !297
  %Arg_10.11 = getelementptr inbounds [128 x float], ptr %arg10, i32 0, i32 %175
  %Arg_10.1136 = load float, ptr %Arg_10.11, align 4, !invariant.load !297
  %add.57 = fadd float %Arg_9.1035, %Arg_10.1136
  %region_0_112_constant_2037 = load float, ptr @93, align 4
  %182 = fcmp oge float %add.57, %region_0_112_constant_2037
  %183 = fcmp une float %add.57, %add.57
  %184 = or i1 %182, %183
  %maximum.58 = select i1 %184, float %add.57, float %region_0_112_constant_2037
  %compare.59 = fcmp ogt float %maximum.58, %region_0_112_constant_2037
  %185 = zext i1 %compare.59 to i8
  %186 = add i32 %180, 0
  %Arg_2.338 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 44, i32 %186, i32 0
  %Arg_2.339 = load float, ptr %Arg_2.338, align 4, !invariant.load !297
  %Arg_8.9 = getelementptr inbounds [8192 x float], ptr %arg8, i32 0, i32 %180
  %Arg_8.940 = load float, ptr %Arg_8.9, align 4, !invariant.load !297
  %multiply.63 = fmul float %Arg_2.339, %Arg_8.940
  %region_0_112_constant_2841 = load float, ptr @94, align 4
  %subtract.64 = fsub float %region_0_112_constant_2841, %Arg_8.940
  %multiply.65 = fmul float %multiply.63, %subtract.64
  %Arg_7.8 = getelementptr inbounds [128 x [1 x float]], ptr %arg7, i32 0, i32 %175, i32 0
  %Arg_7.842 = load float, ptr %Arg_7.8, align 4, !invariant.load !297
  %multiply.70 = fmul float %multiply.65, %Arg_7.842
  %187 = trunc i8 %185 to i1
  %188 = select i1 %187, float %multiply.70, float %region_0_112_constant_2037
  store float %188, ptr %reduction_input_address4, align 4
  %189 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 %139
  call void @region_3_73(ptr %189, ptr %reduction_input_address4, ptr %return_buffer43)
  %190 = load float, ptr %return_buffer43, align 4
  store float %190, ptr %189, align 4
  %191 = mul nuw nsw i32 %134, 1
  %192 = add nuw nsw i32 0, %191
  %193 = udiv i32 %192, 128
  %194 = mul nuw nsw i32 %136, 1
  %195 = add nuw nsw i32 0, %194
  %196 = mul nuw nsw i32 %137, 128
  %197 = add nuw nsw i32 %195, %196
  %198 = udiv i32 %197, 8192
  %Arg_11.12 = getelementptr inbounds float, ptr %arg11, i32 %132
  %Arg_11.1244 = load float, ptr %Arg_11.12, align 4, !invariant.load !297
  %Arg_12.13 = getelementptr inbounds [128 x float], ptr %arg12, i32 0, i32 %192
  %Arg_12.1345 = load float, ptr %Arg_12.13, align 4, !invariant.load !297
  %add.79 = fadd float %Arg_11.1244, %Arg_12.1345
  %region_0_112_constant_2046 = load float, ptr @93, align 4
  %199 = fcmp oge float %add.79, %region_0_112_constant_2046
  %200 = fcmp une float %add.79, %add.79
  %201 = or i1 %199, %200
  %maximum.80 = select i1 %201, float %add.79, float %region_0_112_constant_2046
  %compare.81 = fcmp ogt float %maximum.80, %region_0_112_constant_2046
  %202 = zext i1 %compare.81 to i8
  %203 = add i32 %197, 0
  %Arg_2.347 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 44, i32 %203, i32 0
  %Arg_2.348 = load float, ptr %Arg_2.347, align 4, !invariant.load !297
  %Arg_8.949 = getelementptr inbounds [8192 x float], ptr %arg8, i32 0, i32 %197
  %Arg_8.950 = load float, ptr %Arg_8.949, align 4, !invariant.load !297
  %multiply.6351 = fmul float %Arg_2.348, %Arg_8.950
  %region_0_112_constant_2852 = load float, ptr @94, align 4
  %subtract.6453 = fsub float %region_0_112_constant_2852, %Arg_8.950
  %multiply.6554 = fmul float %multiply.6351, %subtract.6453
  %Arg_7.855 = getelementptr inbounds [128 x [1 x float]], ptr %arg7, i32 0, i32 %192, i32 0
  %Arg_7.856 = load float, ptr %Arg_7.855, align 4, !invariant.load !297
  %multiply.7057 = fmul float %multiply.6554, %Arg_7.856
  %204 = trunc i8 %202 to i1
  %205 = select i1 %204, float %multiply.7057, float %region_0_112_constant_2046
  store float %205, ptr %reduction_input_address7, align 4
  %206 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 %139
  call void @region_4_84(ptr %206, ptr %reduction_input_address7, ptr %return_buffer58)
  %207 = load float, ptr %return_buffer58, align 4
  store float %207, ptr %206, align 4
  %208 = mul nuw nsw i32 %134, 1
  %209 = add nuw nsw i32 0, %208
  %210 = udiv i32 %209, 128
  %211 = mul nuw nsw i32 %136, 1
  %212 = add nuw nsw i32 0, %211
  %213 = mul nuw nsw i32 %137, 128
  %214 = add nuw nsw i32 %212, %213
  %215 = udiv i32 %214, 8192
  %Arg_15.16 = getelementptr inbounds float, ptr %arg15, i32 %132
  %Arg_15.1659 = load float, ptr %Arg_15.16, align 4, !invariant.load !297
  %Arg_16.17 = getelementptr inbounds [128 x float], ptr %arg16, i32 0, i32 %209
  %Arg_16.1760 = load float, ptr %Arg_16.17, align 4, !invariant.load !297
  %add.90 = fadd float %Arg_15.1659, %Arg_16.1760
  %region_0_112_constant_2061 = load float, ptr @93, align 4
  %216 = fcmp oge float %add.90, %region_0_112_constant_2061
  %217 = fcmp une float %add.90, %add.90
  %218 = or i1 %216, %217
  %maximum.91 = select i1 %218, float %add.90, float %region_0_112_constant_2061
  %compare.92 = fcmp ogt float %maximum.91, %region_0_112_constant_2061
  %219 = zext i1 %compare.92 to i8
  %220 = add i32 %214, 0
  %Arg_2.362 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 6, i32 %220, i32 0
  %Arg_2.363 = load float, ptr %Arg_2.362, align 4, !invariant.load !297
  %Arg_14.15 = getelementptr inbounds [8192 x float], ptr %arg14, i32 0, i32 %214
  %Arg_14.1564 = load float, ptr %Arg_14.15, align 4, !invariant.load !297
  %multiply.96 = fmul float %Arg_2.363, %Arg_14.1564
  %region_0_112_constant_2865 = load float, ptr @94, align 4
  %subtract.97 = fsub float %region_0_112_constant_2865, %Arg_14.1564
  %multiply.98 = fmul float %multiply.96, %subtract.97
  %Arg_13.14 = getelementptr inbounds [128 x [1 x float]], ptr %arg13, i32 0, i32 %209, i32 0
  %Arg_13.1466 = load float, ptr %Arg_13.14, align 4, !invariant.load !297
  %multiply.103 = fmul float %multiply.98, %Arg_13.1466
  %221 = trunc i8 %219 to i1
  %222 = select i1 %221, float %multiply.103, float %region_0_112_constant_2061
  store float %222, ptr %reduction_input_address10, align 4
  %223 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 %139
  call void @region_5_106(ptr %223, ptr %reduction_input_address10, ptr %return_buffer67)
  %224 = load float, ptr %return_buffer67, align 4
  store float %224, ptr %223, align 4
  %225 = mul nuw nsw i32 %134, 1
  %226 = add nuw nsw i32 0, %225
  %227 = udiv i32 %226, 128
  %228 = mul nuw nsw i32 %136, 1
  %229 = add nuw nsw i32 0, %228
  %230 = mul nuw nsw i32 %137, 128
  %231 = add nuw nsw i32 %229, %230
  %232 = udiv i32 %231, 8192
  %Arg_3.468 = getelementptr inbounds float, ptr %arg3, i32 %132
  %Arg_3.469 = load float, ptr %Arg_3.468, align 4, !invariant.load !297
  %Arg_4.570 = getelementptr inbounds [128 x float], ptr %arg4, i32 0, i32 %226
  %Arg_4.571 = load float, ptr %Arg_4.570, align 4, !invariant.load !297
  %add.1972 = fadd float %Arg_3.469, %Arg_4.571
  %region_0_112_constant_2073 = load float, ptr @93, align 4
  %233 = fcmp oge float %add.1972, %region_0_112_constant_2073
  %234 = fcmp une float %add.1972, %add.1972
  %235 = or i1 %233, %234
  %maximum.2274 = select i1 %235, float %add.1972, float %region_0_112_constant_2073
  %compare.2375 = fcmp ogt float %maximum.2274, %region_0_112_constant_2073
  %236 = zext i1 %compare.2375 to i8
  %237 = add i32 %231, 0
  %Arg_2.376 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 45, i32 %237, i32 0
  %Arg_2.377 = load float, ptr %Arg_2.376, align 4, !invariant.load !297
  %Arg_1.278 = getelementptr inbounds [8192 x float], ptr %arg1, i32 0, i32 %231
  %Arg_1.279 = load float, ptr %Arg_1.278, align 4, !invariant.load !297
  %multiply.2780 = fmul float %Arg_2.377, %Arg_1.279
  %region_0_112_constant_2881 = load float, ptr @94, align 4
  %subtract.3082 = fsub float %region_0_112_constant_2881, %Arg_1.279
  %multiply.3183 = fmul float %multiply.2780, %subtract.3082
  %Arg_0.184 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %226, i32 0
  %Arg_0.185 = load float, ptr %Arg_0.184, align 4, !invariant.load !297
  %multiply.3686 = fmul float %multiply.3183, %Arg_0.185
  %238 = trunc i8 %236 to i1
  %239 = select i1 %238, float %multiply.3686, float %region_0_112_constant_2073
  %240 = mul nuw nsw i32 %134, 1
  %241 = add nuw nsw i32 0, %240
  %242 = udiv i32 %241, 128
  %243 = mul nuw nsw i32 %136, 1
  %244 = add nuw nsw i32 0, %243
  %245 = mul nuw nsw i32 %137, 128
  %246 = add nuw nsw i32 %244, %245
  %247 = udiv i32 %246, 8192
  %Arg_5.687 = getelementptr inbounds float, ptr %arg5, i32 %132
  %Arg_5.688 = load float, ptr %Arg_5.687, align 4, !invariant.load !297
  %Arg_6.789 = getelementptr inbounds [128 x float], ptr %arg6, i32 0, i32 %241
  %Arg_6.790 = load float, ptr %Arg_6.789, align 4, !invariant.load !297
  %add.4691 = fadd float %Arg_5.688, %Arg_6.790
  %region_0_112_constant_2092 = load float, ptr @93, align 4
  %248 = fcmp oge float %add.4691, %region_0_112_constant_2092
  %249 = fcmp une float %add.4691, %add.4691
  %250 = or i1 %248, %249
  %maximum.4793 = select i1 %250, float %add.4691, float %region_0_112_constant_2092
  %compare.4894 = fcmp ogt float %maximum.4793, %region_0_112_constant_2092
  %251 = zext i1 %compare.4894 to i8
  %252 = add i32 %246, 0
  %Arg_2.395 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 45, i32 %252, i32 0
  %Arg_2.396 = load float, ptr %Arg_2.395, align 4, !invariant.load !297
  %Arg_1.297 = getelementptr inbounds [8192 x float], ptr %arg1, i32 0, i32 %246
  %Arg_1.298 = load float, ptr %Arg_1.297, align 4, !invariant.load !297
  %multiply.2799 = fmul float %Arg_2.396, %Arg_1.298
  %region_0_112_constant_28100 = load float, ptr @94, align 4
  %subtract.30101 = fsub float %region_0_112_constant_28100, %Arg_1.298
  %multiply.31102 = fmul float %multiply.2799, %subtract.30101
  %Arg_0.1103 = getelementptr inbounds [128 x [1 x float]], ptr %arg0, i32 0, i32 %241, i32 0
  %Arg_0.1104 = load float, ptr %Arg_0.1103, align 4, !invariant.load !297
  %multiply.36105 = fmul float %multiply.31102, %Arg_0.1104
  %253 = trunc i8 %251 to i1
  %254 = select i1 %253, float %multiply.36105, float %region_0_112_constant_2092
  %255 = mul nuw nsw i32 %134, 1
  %256 = add nuw nsw i32 0, %255
  %257 = udiv i32 %256, 128
  %258 = mul nuw nsw i32 %136, 1
  %259 = add nuw nsw i32 0, %258
  %260 = mul nuw nsw i32 %137, 128
  %261 = add nuw nsw i32 %259, %260
  %262 = udiv i32 %261, 8192
  %Arg_9.10106 = getelementptr inbounds float, ptr %arg9, i32 %132
  %Arg_9.10107 = load float, ptr %Arg_9.10106, align 4, !invariant.load !297
  %Arg_10.11108 = getelementptr inbounds [128 x float], ptr %arg10, i32 0, i32 %256
  %Arg_10.11109 = load float, ptr %Arg_10.11108, align 4, !invariant.load !297
  %add.57110 = fadd float %Arg_9.10107, %Arg_10.11109
  %region_0_112_constant_20111 = load float, ptr @93, align 4
  %263 = fcmp oge float %add.57110, %region_0_112_constant_20111
  %264 = fcmp une float %add.57110, %add.57110
  %265 = or i1 %263, %264
  %maximum.58112 = select i1 %265, float %add.57110, float %region_0_112_constant_20111
  %compare.59113 = fcmp ogt float %maximum.58112, %region_0_112_constant_20111
  %266 = zext i1 %compare.59113 to i8
  %267 = add i32 %261, 0
  %Arg_2.3114 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 44, i32 %267, i32 0
  %Arg_2.3115 = load float, ptr %Arg_2.3114, align 4, !invariant.load !297
  %Arg_8.9116 = getelementptr inbounds [8192 x float], ptr %arg8, i32 0, i32 %261
  %Arg_8.9117 = load float, ptr %Arg_8.9116, align 4, !invariant.load !297
  %multiply.63118 = fmul float %Arg_2.3115, %Arg_8.9117
  %region_0_112_constant_28119 = load float, ptr @94, align 4
  %subtract.64120 = fsub float %region_0_112_constant_28119, %Arg_8.9117
  %multiply.65121 = fmul float %multiply.63118, %subtract.64120
  %Arg_7.8122 = getelementptr inbounds [128 x [1 x float]], ptr %arg7, i32 0, i32 %256, i32 0
  %Arg_7.8123 = load float, ptr %Arg_7.8122, align 4, !invariant.load !297
  %multiply.70124 = fmul float %multiply.65121, %Arg_7.8123
  %268 = trunc i8 %266 to i1
  %269 = select i1 %268, float %multiply.70124, float %region_0_112_constant_20111
  %270 = mul nuw nsw i32 %134, 1
  %271 = add nuw nsw i32 0, %270
  %272 = udiv i32 %271, 128
  %273 = mul nuw nsw i32 %136, 1
  %274 = add nuw nsw i32 0, %273
  %275 = mul nuw nsw i32 %137, 128
  %276 = add nuw nsw i32 %274, %275
  %277 = udiv i32 %276, 8192
  %Arg_11.12125 = getelementptr inbounds float, ptr %arg11, i32 %132
  %Arg_11.12126 = load float, ptr %Arg_11.12125, align 4, !invariant.load !297
  %Arg_12.13127 = getelementptr inbounds [128 x float], ptr %arg12, i32 0, i32 %271
  %Arg_12.13128 = load float, ptr %Arg_12.13127, align 4, !invariant.load !297
  %add.79129 = fadd float %Arg_11.12126, %Arg_12.13128
  %region_0_112_constant_20130 = load float, ptr @93, align 4
  %278 = fcmp oge float %add.79129, %region_0_112_constant_20130
  %279 = fcmp une float %add.79129, %add.79129
  %280 = or i1 %278, %279
  %maximum.80131 = select i1 %280, float %add.79129, float %region_0_112_constant_20130
  %compare.81132 = fcmp ogt float %maximum.80131, %region_0_112_constant_20130
  %281 = zext i1 %compare.81132 to i8
  %282 = add i32 %276, 0
  %Arg_2.3133 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 44, i32 %282, i32 0
  %Arg_2.3134 = load float, ptr %Arg_2.3133, align 4, !invariant.load !297
  %Arg_8.9135 = getelementptr inbounds [8192 x float], ptr %arg8, i32 0, i32 %276
  %Arg_8.9136 = load float, ptr %Arg_8.9135, align 4, !invariant.load !297
  %multiply.63137 = fmul float %Arg_2.3134, %Arg_8.9136
  %region_0_112_constant_28138 = load float, ptr @94, align 4
  %subtract.64139 = fsub float %region_0_112_constant_28138, %Arg_8.9136
  %multiply.65140 = fmul float %multiply.63137, %subtract.64139
  %Arg_7.8141 = getelementptr inbounds [128 x [1 x float]], ptr %arg7, i32 0, i32 %271, i32 0
  %Arg_7.8142 = load float, ptr %Arg_7.8141, align 4, !invariant.load !297
  %multiply.70143 = fmul float %multiply.65140, %Arg_7.8142
  %283 = trunc i8 %281 to i1
  %284 = select i1 %283, float %multiply.70143, float %region_0_112_constant_20130
  %285 = mul nuw nsw i32 %134, 1
  %286 = add nuw nsw i32 0, %285
  %287 = udiv i32 %286, 128
  %288 = mul nuw nsw i32 %136, 1
  %289 = add nuw nsw i32 0, %288
  %290 = mul nuw nsw i32 %137, 128
  %291 = add nuw nsw i32 %289, %290
  %292 = udiv i32 %291, 8192
  %Arg_15.16144 = getelementptr inbounds float, ptr %arg15, i32 %132
  %Arg_15.16145 = load float, ptr %Arg_15.16144, align 4, !invariant.load !297
  %Arg_16.17146 = getelementptr inbounds [128 x float], ptr %arg16, i32 0, i32 %286
  %Arg_16.17147 = load float, ptr %Arg_16.17146, align 4, !invariant.load !297
  %add.90148 = fadd float %Arg_15.16145, %Arg_16.17147
  %region_0_112_constant_20149 = load float, ptr @93, align 4
  %293 = fcmp oge float %add.90148, %region_0_112_constant_20149
  %294 = fcmp une float %add.90148, %add.90148
  %295 = or i1 %293, %294
  %maximum.91150 = select i1 %295, float %add.90148, float %region_0_112_constant_20149
  %compare.92151 = fcmp ogt float %maximum.91150, %region_0_112_constant_20149
  %296 = zext i1 %compare.92151 to i8
  %297 = add i32 %291, 0
  %Arg_2.3152 = getelementptr inbounds [60 x [8192 x [1 x float]]], ptr %arg2, i32 0, i32 6, i32 %297, i32 0
  %Arg_2.3153 = load float, ptr %Arg_2.3152, align 4, !invariant.load !297
  %Arg_14.15154 = getelementptr inbounds [8192 x float], ptr %arg14, i32 0, i32 %291
  %Arg_14.15155 = load float, ptr %Arg_14.15154, align 4, !invariant.load !297
  %multiply.96156 = fmul float %Arg_2.3153, %Arg_14.15155
  %region_0_112_constant_28157 = load float, ptr @94, align 4
  %subtract.97158 = fsub float %region_0_112_constant_28157, %Arg_14.15155
  %multiply.98159 = fmul float %multiply.96156, %subtract.97158
  %Arg_13.14160 = getelementptr inbounds [128 x [1 x float]], ptr %arg13, i32 0, i32 %286, i32 0
  %Arg_13.14161 = load float, ptr %Arg_13.14160, align 4, !invariant.load !297
  %multiply.103162 = fmul float %multiply.98159, %Arg_13.14161
  %298 = trunc i8 %296 to i1
  %299 = select i1 %298, float %multiply.103162, float %region_0_112_constant_20149
  %300 = mul nuw nsw i32 %134, 1
  %301 = add nuw nsw i32 0, %300
  %302 = udiv i32 %301, 128
  %303 = mul nuw nsw i32 %136, 1
  %304 = add nuw nsw i32 0, %303
  %305 = mul nuw nsw i32 %137, 128
  %306 = add nuw nsw i32 %304, %305
  %307 = udiv i32 %306, 8192
  %308 = getelementptr inbounds float, ptr %arg20, i32 %132
  store float %254, ptr %308, align 4
  %309 = mul nuw nsw i32 %134, 1
  %310 = add nuw nsw i32 0, %309
  %311 = udiv i32 %310, 128
  %312 = mul nuw nsw i32 %136, 1
  %313 = add nuw nsw i32 0, %312
  %314 = mul nuw nsw i32 %137, 128
  %315 = add nuw nsw i32 %313, %314
  %316 = udiv i32 %315, 8192
  %317 = getelementptr inbounds float, ptr %arg26, i32 %132
  store float %299, ptr %317, align 4
  %318 = mul nuw nsw i32 %134, 1
  %319 = add nuw nsw i32 0, %318
  %320 = udiv i32 %319, 128
  %321 = mul nuw nsw i32 %136, 1
  %322 = add nuw nsw i32 0, %321
  %323 = mul nuw nsw i32 %137, 128
  %324 = add nuw nsw i32 %322, %323
  %325 = udiv i32 %324, 8192
  %326 = getelementptr inbounds float, ptr %arg18, i32 %132
  store float %239, ptr %326, align 4
  %327 = mul nuw nsw i32 %134, 1
  %328 = add nuw nsw i32 0, %327
  %329 = udiv i32 %328, 128
  %330 = mul nuw nsw i32 %136, 1
  %331 = add nuw nsw i32 0, %330
  %332 = mul nuw nsw i32 %137, 128
  %333 = add nuw nsw i32 %331, %332
  %334 = udiv i32 %333, 8192
  %335 = getelementptr inbounds float, ptr %arg22, i32 %132
  store float %269, ptr %335, align 4
  %336 = mul nuw nsw i32 %134, 1
  %337 = add nuw nsw i32 0, %336
  %338 = udiv i32 %337, 128
  %339 = mul nuw nsw i32 %136, 1
  %340 = add nuw nsw i32 0, %339
  %341 = mul nuw nsw i32 %137, 128
  %342 = add nuw nsw i32 %340, %341
  %343 = udiv i32 %342, 8192
  %344 = getelementptr inbounds float, ptr %arg24, i32 %132
  store float %284, ptr %344, align 4
  br label %x_in_tile-after

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %345 = mul i32 %thread_id.y, 1
  %346 = add i32 %tile_origin.1, %thread_id.x
  %347 = add i32 %tile_origin.2, %345
  %348 = add i32 %347, 0
  %349 = mul i32 %tile_origin.0, 128
  %350 = add i32 %349, %348
  %351 = udiv i32 %350, 1
  %352 = urem i32 %351, 128
  %353 = udiv i32 %350, 128
  %output_element_address = getelementptr inbounds [64 x [128 x float]], ptr %arg17, i32 0, i32 %353, i32 %352
  %output = load float, ptr %34, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

reduction_write_output-true195:                   ; preds = %reduction_write_output-after
  %354 = mul i32 %thread_id.y, 1
  %355 = add i32 %tile_origin.1, %thread_id.x
  %356 = add i32 %tile_origin.2, %354
  %357 = add i32 %356, 0
  %358 = mul i32 %tile_origin.0, 128
  %359 = add i32 %358, %357
  %360 = udiv i32 %359, 1
  %361 = urem i32 %360, 128
  %362 = udiv i32 %359, 128
  %output_element_address197 = getelementptr inbounds [64 x [128 x float]], ptr %arg19, i32 0, i32 %362, i32 %361
  %output198 = load float, ptr %53, align 4
  store float %output198, ptr %output_element_address197, align 4
  br label %reduction_write_output-after196

reduction_write_output-true217:                   ; preds = %reduction_write_output-after196
  %363 = mul i32 %thread_id.y, 1
  %364 = add i32 %tile_origin.1, %thread_id.x
  %365 = add i32 %tile_origin.2, %363
  %366 = add i32 %365, 0
  %367 = mul i32 %tile_origin.0, 128
  %368 = add i32 %367, %366
  %369 = udiv i32 %368, 1
  %370 = urem i32 %369, 128
  %371 = udiv i32 %368, 128
  %output_element_address219 = getelementptr inbounds [64 x [128 x float]], ptr %arg21, i32 0, i32 %371, i32 %370
  %output220 = load float, ptr %72, align 4
  store float %output220, ptr %output_element_address219, align 4
  br label %reduction_write_output-after218

reduction_write_output-true239:                   ; preds = %reduction_write_output-after218
  %372 = mul i32 %thread_id.y, 1
  %373 = add i32 %tile_origin.1, %thread_id.x
  %374 = add i32 %tile_origin.2, %372
  %375 = add i32 %374, 0
  %376 = mul i32 %tile_origin.0, 128
  %377 = add i32 %376, %375
  %378 = udiv i32 %377, 1
  %379 = urem i32 %378, 128
  %380 = udiv i32 %377, 128
  %output_element_address241 = getelementptr inbounds [64 x [128 x float]], ptr %arg23, i32 0, i32 %380, i32 %379
  %output242 = load float, ptr %91, align 4
  store float %output242, ptr %output_element_address241, align 4
  br label %reduction_write_output-after240

reduction_write_output-true261:                   ; preds = %reduction_write_output-after240
  %381 = mul i32 %thread_id.y, 1
  %382 = add i32 %tile_origin.1, %thread_id.x
  %383 = add i32 %tile_origin.2, %381
  %384 = add i32 %383, 0
  %385 = mul i32 %tile_origin.0, 128
  %386 = add i32 %385, %384
  %387 = udiv i32 %386, 1
  %388 = urem i32 %387, 128
  %389 = udiv i32 %386, 128
  %output_element_address263 = getelementptr inbounds [64 x [128 x float]], ptr %arg25, i32 0, i32 %389, i32 %388
  %output264 = load float, ptr %110, align 4
  store float %output264, ptr %output_element_address263, align 4
  br label %reduction_write_output-after262
}

define internal void @region_1_40(ptr dereferenceable(4) %Arg_0.41.typed, ptr dereferenceable(4) %Arg_1.42.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.43.typed = alloca float, align 4
  %Arg_0.41 = load float, ptr %Arg_0.41.typed, align 4
  %Arg_1.42 = load float, ptr %Arg_1.42.typed, align 4
  %add.43 = fadd float %Arg_0.41, %Arg_1.42
  store float %add.43, ptr %add.43.typed, align 4
  %load_ret_value = load float, ptr %add.43.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_51(ptr dereferenceable(4) %Arg_0.52.typed, ptr dereferenceable(4) %Arg_1.53.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.54.typed = alloca float, align 4
  %Arg_0.52 = load float, ptr %Arg_0.52.typed, align 4
  %Arg_1.53 = load float, ptr %Arg_1.53.typed, align 4
  %add.54 = fadd float %Arg_0.52, %Arg_1.53
  store float %add.54, ptr %add.54.typed, align 4
  %load_ret_value = load float, ptr %add.54.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_3_73(ptr dereferenceable(4) %Arg_0.74.typed, ptr dereferenceable(4) %Arg_1.75.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.76.typed = alloca float, align 4
  %Arg_0.74 = load float, ptr %Arg_0.74.typed, align 4
  %Arg_1.75 = load float, ptr %Arg_1.75.typed, align 4
  %add.76 = fadd float %Arg_0.74, %Arg_1.75
  store float %add.76, ptr %add.76.typed, align 4
  %load_ret_value = load float, ptr %add.76.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_4_84(ptr dereferenceable(4) %Arg_0.85.typed, ptr dereferenceable(4) %Arg_1.86.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.87.typed = alloca float, align 4
  %Arg_0.85 = load float, ptr %Arg_0.85.typed, align 4
  %Arg_1.86 = load float, ptr %Arg_1.86.typed, align 4
  %add.87 = fadd float %Arg_0.85, %Arg_1.86
  store float %add.87, ptr %add.87.typed, align 4
  %load_ret_value = load float, ptr %add.87.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_5_106(ptr dereferenceable(4) %Arg_0.107.typed, ptr dereferenceable(4) %Arg_1.108.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.109.typed = alloca float, align 4
  %Arg_0.107 = load float, ptr %Arg_0.107.typed, align 4
  %Arg_1.108 = load float, ptr %Arg_1.108.typed, align 4
  %add.109 = fadd float %Arg_0.107, %Arg_1.108
  store float %add.109, ptr %add.109.typed, align 4
  %load_ret_value = load float, ptr %add.109.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_22(ptr noalias align 128 dereferenceable(32768) %arg0, ptr noalias align 128 dereferenceable(32768) %arg1, ptr noalias align 128 dereferenceable(32768) %arg2, ptr noalias align 128 dereferenceable(32768) %arg3, ptr noalias align 128 dereferenceable(32768) %arg4, ptr noalias align 128 dereferenceable(32768) %arg5, ptr noalias align 128 dereferenceable(32768) %arg6, ptr noalias align 128 dereferenceable(32768) %arg7, ptr noalias align 128 dereferenceable(32768) %arg8, ptr noalias align 16 dereferenceable(128) %arg9, ptr noalias align 16 dereferenceable(128) %arg10, ptr noalias align 16 dereferenceable(128) %arg11, ptr noalias align 16 dereferenceable(128) %arg12, ptr noalias align 16 dereferenceable(128) %arg13, ptr noalias align 16 dereferenceable(128) %arg14, ptr noalias align 16 dereferenceable(128) %arg15, ptr noalias align 16 dereferenceable(128) %arg16, ptr noalias align 16 dereferenceable(128) %arg17, ptr noalias align 128 dereferenceable(1048576) %arg18, ptr noalias align 128 dereferenceable(1048576) %arg19, ptr noalias align 128 dereferenceable(8192) %arg20, ptr noalias align 128 dereferenceable(8192) %arg21, ptr noalias align 128 dereferenceable(8192) %arg22, ptr noalias align 128 dereferenceable(8192) %arg23, ptr noalias align 128 dereferenceable(8192) %arg24) {
entry:
  %return_buffer153 = alloca float, align 4
  %result_from_other_lane151 = alloca float, align 4
  %return_buffer150 = alloca float, align 4
  %result_from_other_lane148 = alloca float, align 4
  %return_buffer147 = alloca float, align 4
  %result_from_other_lane145 = alloca float, align 4
  %return_buffer144 = alloca float, align 4
  %result_from_other_lane142 = alloca float, align 4
  %return_buffer141 = alloca float, align 4
  %result_from_other_lane139 = alloca float, align 4
  %return_buffer131 = alloca float, align 4
  %result_from_other_lane129 = alloca float, align 4
  %return_buffer128 = alloca float, align 4
  %result_from_other_lane126 = alloca float, align 4
  %return_buffer125 = alloca float, align 4
  %result_from_other_lane123 = alloca float, align 4
  %return_buffer122 = alloca float, align 4
  %result_from_other_lane120 = alloca float, align 4
  %return_buffer119 = alloca float, align 4
  %result_from_other_lane117 = alloca float, align 4
  %return_buffer109 = alloca float, align 4
  %result_from_other_lane107 = alloca float, align 4
  %return_buffer106 = alloca float, align 4
  %result_from_other_lane104 = alloca float, align 4
  %return_buffer103 = alloca float, align 4
  %result_from_other_lane101 = alloca float, align 4
  %return_buffer100 = alloca float, align 4
  %result_from_other_lane98 = alloca float, align 4
  %return_buffer97 = alloca float, align 4
  %result_from_other_lane95 = alloca float, align 4
  %return_buffer87 = alloca float, align 4
  %result_from_other_lane85 = alloca float, align 4
  %return_buffer84 = alloca float, align 4
  %result_from_other_lane82 = alloca float, align 4
  %return_buffer81 = alloca float, align 4
  %result_from_other_lane79 = alloca float, align 4
  %return_buffer78 = alloca float, align 4
  %result_from_other_lane76 = alloca float, align 4
  %return_buffer75 = alloca float, align 4
  %result_from_other_lane73 = alloca float, align 4
  %return_buffer69 = alloca float, align 4
  %result_from_other_lane67 = alloca float, align 4
  %return_buffer66 = alloca float, align 4
  %result_from_other_lane64 = alloca float, align 4
  %return_buffer63 = alloca float, align 4
  %result_from_other_lane61 = alloca float, align 4
  %return_buffer60 = alloca float, align 4
  %result_from_other_lane58 = alloca float, align 4
  %return_buffer57 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer32 = alloca float, align 4
  %return_buffer28 = alloca float, align 4
  %return_buffer24 = alloca float, align 4
  %return_buffer20 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result11 = alloca float, align 4
  %reduction_input_address10 = alloca float, align 4
  %partial_reduction_result8 = alloca float, align 4
  %reduction_input_address7 = alloca float, align 4
  %partial_reduction_result5 = alloca float, align 4
  %reduction_input_address4 = alloca float, align 4
  %partial_reduction_result2 = alloca float, align 4
  %reduction_input_address1 = alloca float, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after155, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_107_constant_72 = load float, ptr @96, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_107_constant_72, ptr %2, align 4
  %region_0_107_constant_723 = load float, ptr @96, align 4
  %3 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  store float %region_0_107_constant_723, ptr %3, align 4
  %region_0_107_constant_726 = load float, ptr @96, align 4
  %4 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  store float %region_0_107_constant_726, ptr %4, align 4
  %region_0_107_constant_729 = load float, ptr @96, align 4
  %5 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  store float %region_0_107_constant_729, ptr %5, align 4
  %region_0_107_constant_7212 = load float, ptr @96, align 4
  %6 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  store float %region_0_107_constant_7212, ptr %6, align 4
  %7 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %8 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !360
  %9 = urem i32 %7, 1024
  %10 = udiv i32 %7, 1024
  %11 = mul i32 %8, 1
  %12 = add i32 %11, %10
  %13 = icmp ult i32 %12, 64
  br i1 %13, label %14, label %early_return

14:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %9, 32
  %thread_id.y = udiv i32 %9, 32
  %lane_id = urem i32 %9, 32
  %15 = udiv i32 %12, 1
  %16 = urem i32 %15, 1
  %17 = udiv i32 %12, 1
  %18 = urem i32 %17, 1
  %19 = udiv i32 %12, 1
  %20 = icmp eq i32 %18, 0
  %tile_bound = select i1 %20, i32 128, i32 4096
  %21 = icmp eq i32 %16, 0
  %tile_bound13 = select i1 %21, i32 32, i32 32
  %tile_origin.0 = mul i32 %19, 1
  %tile_origin.1 = mul i32 %18, 4096
  %tile_origin.2 = mul i32 %16, 32
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %14
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %22 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %22, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %23 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %24 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %25 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %25, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc14 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc14, ptr %tile_loop.invar_address, align 4
  %26 = icmp eq i32 %tile_loop.indvar, 0
  %27 = mul i32 %tile_loop.indvar, 1
  %28 = add i32 %27, 0
  %x_loc = add i32 %28, %24
  %29 = add i32 %tile_origin.1, %y_in_tile.indvar
  %30 = add i32 %tile_origin.2, %x_loc
  %31 = icmp ult i32 %x_loc, %tile_bound13
  br i1 %31, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body
  br label %tile_loop.loop_header, !llvm.loop !485

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !486

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache134, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %32 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %33 = load float, ptr %current_output, align 4
  store float %33, ptr %32, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache134, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %34 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result56 = load float, ptr %34, align 4
  %35 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result56, i32 16, i32 31)
  store float %35, ptr %result_from_other_lane, align 4
  call void @region_1_73(ptr %34, ptr %result_from_other_lane, ptr %return_buffer57)
  %36 = load float, ptr %return_buffer57, align 4
  store float %36, ptr %34, align 4
  %partial_reduction_result59 = load float, ptr %34, align 4
  %37 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result59, i32 8, i32 31)
  store float %37, ptr %result_from_other_lane58, align 4
  call void @region_1_73(ptr %34, ptr %result_from_other_lane58, ptr %return_buffer60)
  %38 = load float, ptr %return_buffer60, align 4
  store float %38, ptr %34, align 4
  %partial_reduction_result62 = load float, ptr %34, align 4
  %39 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result62, i32 4, i32 31)
  store float %39, ptr %result_from_other_lane61, align 4
  call void @region_1_73(ptr %34, ptr %result_from_other_lane61, ptr %return_buffer63)
  %40 = load float, ptr %return_buffer63, align 4
  store float %40, ptr %34, align 4
  %partial_reduction_result65 = load float, ptr %34, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result65, i32 2, i32 31)
  store float %41, ptr %result_from_other_lane64, align 4
  call void @region_1_73(ptr %34, ptr %result_from_other_lane64, ptr %return_buffer66)
  %42 = load float, ptr %return_buffer66, align 4
  store float %42, ptr %34, align 4
  %partial_reduction_result68 = load float, ptr %34, align 4
  %43 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result68, i32 1, i32 31)
  store float %43, ptr %result_from_other_lane67, align 4
  call void @region_1_73(ptr %34, ptr %result_from_other_lane67, ptr %return_buffer69)
  %44 = load float, ptr %return_buffer69, align 4
  store float %44, ptr %34, align 4
  %45 = icmp ult i32 %thread_id.x, %tile_bound
  %46 = mul i32 %thread_id.y, 1
  %47 = icmp ult i32 %46, %tile_bound13
  %48 = and i1 %47, %45
  %49 = icmp eq i32 %lane_id, 0
  %50 = and i1 %48, %49
  br i1 %50, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %shmem_output_address70 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache135, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %51 = addrspacecast ptr addrspace(3) %shmem_output_address70 to ptr
  %current_output71 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 0
  %52 = load float, ptr %current_output71, align 4
  store float %52, ptr %51, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr72 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache135, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %53 = addrspacecast ptr addrspace(3) %shmem_transposed_addr72 to ptr
  %partial_reduction_result74 = load float, ptr %53, align 4
  %54 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result74, i32 16, i32 31)
  store float %54, ptr %result_from_other_lane73, align 4
  call void @region_2_80(ptr %53, ptr %result_from_other_lane73, ptr %return_buffer75)
  %55 = load float, ptr %return_buffer75, align 4
  store float %55, ptr %53, align 4
  %partial_reduction_result77 = load float, ptr %53, align 4
  %56 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result77, i32 8, i32 31)
  store float %56, ptr %result_from_other_lane76, align 4
  call void @region_2_80(ptr %53, ptr %result_from_other_lane76, ptr %return_buffer78)
  %57 = load float, ptr %return_buffer78, align 4
  store float %57, ptr %53, align 4
  %partial_reduction_result80 = load float, ptr %53, align 4
  %58 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result80, i32 4, i32 31)
  store float %58, ptr %result_from_other_lane79, align 4
  call void @region_2_80(ptr %53, ptr %result_from_other_lane79, ptr %return_buffer81)
  %59 = load float, ptr %return_buffer81, align 4
  store float %59, ptr %53, align 4
  %partial_reduction_result83 = load float, ptr %53, align 4
  %60 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result83, i32 2, i32 31)
  store float %60, ptr %result_from_other_lane82, align 4
  call void @region_2_80(ptr %53, ptr %result_from_other_lane82, ptr %return_buffer84)
  %61 = load float, ptr %return_buffer84, align 4
  store float %61, ptr %53, align 4
  %partial_reduction_result86 = load float, ptr %53, align 4
  %62 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result86, i32 1, i32 31)
  store float %62, ptr %result_from_other_lane85, align 4
  call void @region_2_80(ptr %53, ptr %result_from_other_lane85, ptr %return_buffer87)
  %63 = load float, ptr %return_buffer87, align 4
  store float %63, ptr %53, align 4
  %64 = icmp ult i32 %thread_id.x, %tile_bound
  %65 = mul i32 %thread_id.y, 1
  %66 = icmp ult i32 %65, %tile_bound13
  %67 = and i1 %66, %64
  %68 = icmp eq i32 %lane_id, 0
  %69 = and i1 %67, %68
  br i1 %69, label %reduction_write_output-true88, label %reduction_write_output-after89

reduction_write_output-after89:                   ; preds = %reduction_write_output-true88, %reduction_write_output-after
  %shmem_output_address92 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache136, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %70 = addrspacecast ptr addrspace(3) %shmem_output_address92 to ptr
  %current_output93 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 0
  %71 = load float, ptr %current_output93, align 4
  store float %71, ptr %70, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr94 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache136, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %72 = addrspacecast ptr addrspace(3) %shmem_transposed_addr94 to ptr
  %partial_reduction_result96 = load float, ptr %72, align 4
  %73 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result96, i32 16, i32 31)
  store float %73, ptr %result_from_other_lane95, align 4
  call void @region_3_87(ptr %72, ptr %result_from_other_lane95, ptr %return_buffer97)
  %74 = load float, ptr %return_buffer97, align 4
  store float %74, ptr %72, align 4
  %partial_reduction_result99 = load float, ptr %72, align 4
  %75 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result99, i32 8, i32 31)
  store float %75, ptr %result_from_other_lane98, align 4
  call void @region_3_87(ptr %72, ptr %result_from_other_lane98, ptr %return_buffer100)
  %76 = load float, ptr %return_buffer100, align 4
  store float %76, ptr %72, align 4
  %partial_reduction_result102 = load float, ptr %72, align 4
  %77 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result102, i32 4, i32 31)
  store float %77, ptr %result_from_other_lane101, align 4
  call void @region_3_87(ptr %72, ptr %result_from_other_lane101, ptr %return_buffer103)
  %78 = load float, ptr %return_buffer103, align 4
  store float %78, ptr %72, align 4
  %partial_reduction_result105 = load float, ptr %72, align 4
  %79 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result105, i32 2, i32 31)
  store float %79, ptr %result_from_other_lane104, align 4
  call void @region_3_87(ptr %72, ptr %result_from_other_lane104, ptr %return_buffer106)
  %80 = load float, ptr %return_buffer106, align 4
  store float %80, ptr %72, align 4
  %partial_reduction_result108 = load float, ptr %72, align 4
  %81 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result108, i32 1, i32 31)
  store float %81, ptr %result_from_other_lane107, align 4
  call void @region_3_87(ptr %72, ptr %result_from_other_lane107, ptr %return_buffer109)
  %82 = load float, ptr %return_buffer109, align 4
  store float %82, ptr %72, align 4
  %83 = icmp ult i32 %thread_id.x, %tile_bound
  %84 = mul i32 %thread_id.y, 1
  %85 = icmp ult i32 %84, %tile_bound13
  %86 = and i1 %85, %83
  %87 = icmp eq i32 %lane_id, 0
  %88 = and i1 %86, %87
  br i1 %88, label %reduction_write_output-true110, label %reduction_write_output-after111

reduction_write_output-after111:                  ; preds = %reduction_write_output-true110, %reduction_write_output-after89
  %shmem_output_address114 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache137, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %89 = addrspacecast ptr addrspace(3) %shmem_output_address114 to ptr
  %current_output115 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 0
  %90 = load float, ptr %current_output115, align 4
  store float %90, ptr %89, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr116 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache137, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %91 = addrspacecast ptr addrspace(3) %shmem_transposed_addr116 to ptr
  %partial_reduction_result118 = load float, ptr %91, align 4
  %92 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result118, i32 16, i32 31)
  store float %92, ptr %result_from_other_lane117, align 4
  call void @region_4_94(ptr %91, ptr %result_from_other_lane117, ptr %return_buffer119)
  %93 = load float, ptr %return_buffer119, align 4
  store float %93, ptr %91, align 4
  %partial_reduction_result121 = load float, ptr %91, align 4
  %94 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result121, i32 8, i32 31)
  store float %94, ptr %result_from_other_lane120, align 4
  call void @region_4_94(ptr %91, ptr %result_from_other_lane120, ptr %return_buffer122)
  %95 = load float, ptr %return_buffer122, align 4
  store float %95, ptr %91, align 4
  %partial_reduction_result124 = load float, ptr %91, align 4
  %96 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result124, i32 4, i32 31)
  store float %96, ptr %result_from_other_lane123, align 4
  call void @region_4_94(ptr %91, ptr %result_from_other_lane123, ptr %return_buffer125)
  %97 = load float, ptr %return_buffer125, align 4
  store float %97, ptr %91, align 4
  %partial_reduction_result127 = load float, ptr %91, align 4
  %98 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result127, i32 2, i32 31)
  store float %98, ptr %result_from_other_lane126, align 4
  call void @region_4_94(ptr %91, ptr %result_from_other_lane126, ptr %return_buffer128)
  %99 = load float, ptr %return_buffer128, align 4
  store float %99, ptr %91, align 4
  %partial_reduction_result130 = load float, ptr %91, align 4
  %100 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result130, i32 1, i32 31)
  store float %100, ptr %result_from_other_lane129, align 4
  call void @region_4_94(ptr %91, ptr %result_from_other_lane129, ptr %return_buffer131)
  %101 = load float, ptr %return_buffer131, align 4
  store float %101, ptr %91, align 4
  %102 = icmp ult i32 %thread_id.x, %tile_bound
  %103 = mul i32 %thread_id.y, 1
  %104 = icmp ult i32 %103, %tile_bound13
  %105 = and i1 %104, %102
  %106 = icmp eq i32 %lane_id, 0
  %107 = and i1 %105, %106
  br i1 %107, label %reduction_write_output-true132, label %reduction_write_output-after133

reduction_write_output-after133:                  ; preds = %reduction_write_output-true132, %reduction_write_output-after111
  %shmem_output_address136 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache138, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %108 = addrspacecast ptr addrspace(3) %shmem_output_address136 to ptr
  %current_output137 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 0
  %109 = load float, ptr %current_output137, align 4
  store float %109, ptr %108, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr138 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache138, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %110 = addrspacecast ptr addrspace(3) %shmem_transposed_addr138 to ptr
  %partial_reduction_result140 = load float, ptr %110, align 4
  %111 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result140, i32 16, i32 31)
  store float %111, ptr %result_from_other_lane139, align 4
  call void @region_5_101(ptr %110, ptr %result_from_other_lane139, ptr %return_buffer141)
  %112 = load float, ptr %return_buffer141, align 4
  store float %112, ptr %110, align 4
  %partial_reduction_result143 = load float, ptr %110, align 4
  %113 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result143, i32 8, i32 31)
  store float %113, ptr %result_from_other_lane142, align 4
  call void @region_5_101(ptr %110, ptr %result_from_other_lane142, ptr %return_buffer144)
  %114 = load float, ptr %return_buffer144, align 4
  store float %114, ptr %110, align 4
  %partial_reduction_result146 = load float, ptr %110, align 4
  %115 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result146, i32 4, i32 31)
  store float %115, ptr %result_from_other_lane145, align 4
  call void @region_5_101(ptr %110, ptr %result_from_other_lane145, ptr %return_buffer147)
  %116 = load float, ptr %return_buffer147, align 4
  store float %116, ptr %110, align 4
  %partial_reduction_result149 = load float, ptr %110, align 4
  %117 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result149, i32 2, i32 31)
  store float %117, ptr %result_from_other_lane148, align 4
  call void @region_5_101(ptr %110, ptr %result_from_other_lane148, ptr %return_buffer150)
  %118 = load float, ptr %return_buffer150, align 4
  store float %118, ptr %110, align 4
  %partial_reduction_result152 = load float, ptr %110, align 4
  %119 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result152, i32 1, i32 31)
  store float %119, ptr %result_from_other_lane151, align 4
  call void @region_5_101(ptr %110, ptr %result_from_other_lane151, ptr %return_buffer153)
  %120 = load float, ptr %return_buffer153, align 4
  store float %120, ptr %110, align 4
  %121 = icmp ult i32 %thread_id.x, %tile_bound
  %122 = mul i32 %thread_id.y, 1
  %123 = icmp ult i32 %122, %tile_bound13
  %124 = and i1 %123, %121
  %125 = icmp eq i32 %lane_id, 0
  %126 = and i1 %124, %125
  br i1 %126, label %reduction_write_output-true154, label %reduction_write_output-after155

reduction_write_output-after155:                  ; preds = %reduction_write_output-true154, %reduction_write_output-after133
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %127 = mul nuw nsw i32 %30, 1
  %128 = add nuw nsw i32 0, %127
  %129 = mul nuw nsw i32 %29, 32
  %130 = add nuw nsw i32 %128, %129
  %131 = mul nuw nsw i32 %tile_origin.0, 4096
  %132 = add nuw nsw i32 %130, %131
  %133 = udiv i32 %132, 1
  %134 = urem i32 %133, 32
  %135 = udiv i32 %132, 32
  %136 = urem i32 %135, 128
  %137 = udiv i32 %132, 4096
  %138 = mul i32 %thread_id.x, 1
  %139 = sub i32 %x_loc, %138
  %140 = mul nuw nsw i32 %134, 1
  %141 = add nuw nsw i32 0, %140
  %142 = udiv i32 %141, 32
  %143 = mul nuw nsw i32 %136, 1
  %144 = add nuw nsw i32 0, %143
  %145 = mul nuw nsw i32 %137, 128
  %146 = add nuw nsw i32 %144, %145
  %147 = udiv i32 %146, 8192
  %Arg_18.19 = getelementptr inbounds float, ptr %arg18, i32 %132
  %Arg_18.1915 = load float, ptr %Arg_18.19, align 4, !invariant.load !297
  %Arg_0.1 = getelementptr inbounds [8192 x float], ptr %arg0, i32 0, i32 %146
  %Arg_0.116 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %multiply.70 = fmul float %Arg_18.1915, %Arg_0.116
  store float %multiply.70, ptr %reduction_input_address, align 4
  %148 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %139
  call void @region_1_73(ptr %148, ptr %reduction_input_address, ptr %return_buffer)
  %149 = load float, ptr %return_buffer, align 4
  store float %149, ptr %148, align 4
  %150 = mul nuw nsw i32 %134, 1
  %151 = add nuw nsw i32 0, %150
  %152 = udiv i32 %151, 32
  %153 = mul nuw nsw i32 %136, 1
  %154 = add nuw nsw i32 0, %153
  %155 = mul nuw nsw i32 %137, 128
  %156 = add nuw nsw i32 %154, %155
  %157 = udiv i32 %156, 8192
  %Arg_18.1917 = getelementptr inbounds float, ptr %arg18, i32 %132
  %Arg_18.1918 = load float, ptr %Arg_18.1917, align 4, !invariant.load !297
  %Arg_1.2 = getelementptr inbounds [8192 x float], ptr %arg1, i32 0, i32 %156
  %Arg_1.219 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %multiply.78 = fmul float %Arg_18.1918, %Arg_1.219
  store float %multiply.78, ptr %reduction_input_address1, align 4
  %158 = getelementptr inbounds float, ptr %partial_reduction_result2, i32 %139
  call void @region_2_80(ptr %158, ptr %reduction_input_address1, ptr %return_buffer20)
  %159 = load float, ptr %return_buffer20, align 4
  store float %159, ptr %158, align 4
  %160 = mul nuw nsw i32 %134, 1
  %161 = add nuw nsw i32 0, %160
  %162 = udiv i32 %161, 32
  %163 = mul nuw nsw i32 %136, 1
  %164 = add nuw nsw i32 0, %163
  %165 = mul nuw nsw i32 %137, 128
  %166 = add nuw nsw i32 %164, %165
  %167 = udiv i32 %166, 8192
  %Arg_18.1921 = getelementptr inbounds float, ptr %arg18, i32 %132
  %Arg_18.1922 = load float, ptr %Arg_18.1921, align 4, !invariant.load !297
  %Arg_2.3 = getelementptr inbounds [8192 x float], ptr %arg2, i32 0, i32 %166
  %Arg_2.323 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %multiply.85 = fmul float %Arg_18.1922, %Arg_2.323
  store float %multiply.85, ptr %reduction_input_address4, align 4
  %168 = getelementptr inbounds float, ptr %partial_reduction_result5, i32 %139
  call void @region_3_87(ptr %168, ptr %reduction_input_address4, ptr %return_buffer24)
  %169 = load float, ptr %return_buffer24, align 4
  store float %169, ptr %168, align 4
  %170 = mul nuw nsw i32 %134, 1
  %171 = add nuw nsw i32 0, %170
  %172 = udiv i32 %171, 32
  %173 = mul nuw nsw i32 %136, 1
  %174 = add nuw nsw i32 0, %173
  %175 = mul nuw nsw i32 %137, 128
  %176 = add nuw nsw i32 %174, %175
  %177 = udiv i32 %176, 8192
  %Arg_18.1925 = getelementptr inbounds float, ptr %arg18, i32 %132
  %Arg_18.1926 = load float, ptr %Arg_18.1925, align 4, !invariant.load !297
  %Arg_3.4 = getelementptr inbounds [8192 x [1 x float]], ptr %arg3, i32 0, i32 %176, i32 0
  %Arg_3.427 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  %multiply.92 = fmul float %Arg_18.1926, %Arg_3.427
  store float %multiply.92, ptr %reduction_input_address7, align 4
  %178 = getelementptr inbounds float, ptr %partial_reduction_result8, i32 %139
  call void @region_4_94(ptr %178, ptr %reduction_input_address7, ptr %return_buffer28)
  %179 = load float, ptr %return_buffer28, align 4
  store float %179, ptr %178, align 4
  %180 = mul nuw nsw i32 %134, 1
  %181 = add nuw nsw i32 0, %180
  %182 = udiv i32 %181, 32
  %183 = mul nuw nsw i32 %136, 1
  %184 = add nuw nsw i32 0, %183
  %185 = mul nuw nsw i32 %137, 128
  %186 = add nuw nsw i32 %184, %185
  %187 = udiv i32 %186, 8192
  %Arg_18.1929 = getelementptr inbounds float, ptr %arg18, i32 %132
  %Arg_18.1930 = load float, ptr %Arg_18.1929, align 4, !invariant.load !297
  %Arg_4.5 = getelementptr inbounds [8192 x [1 x float]], ptr %arg4, i32 0, i32 %186, i32 0
  %Arg_4.531 = load float, ptr %Arg_4.5, align 4, !invariant.load !297
  %multiply.99 = fmul float %Arg_18.1930, %Arg_4.531
  store float %multiply.99, ptr %reduction_input_address10, align 4
  %188 = getelementptr inbounds float, ptr %partial_reduction_result11, i32 %139
  call void @region_5_101(ptr %188, ptr %reduction_input_address10, ptr %return_buffer32)
  %189 = load float, ptr %return_buffer32, align 4
  store float %189, ptr %188, align 4
  %190 = mul nuw nsw i32 %134, 1
  %191 = add nuw nsw i32 0, %190
  %192 = udiv i32 %191, 32
  %193 = mul nuw nsw i32 %136, 1
  %194 = add nuw nsw i32 0, %193
  %195 = mul nuw nsw i32 %137, 128
  %196 = add nuw nsw i32 %194, %195
  %197 = udiv i32 %196, 8192
  %Arg_8.9 = getelementptr inbounds [8192 x [1 x float]], ptr %arg8, i32 0, i32 %196, i32 0
  %Arg_8.933 = load float, ptr %Arg_8.9, align 4, !invariant.load !297
  %Arg_16.17 = getelementptr inbounds [32 x [1 x float]], ptr %arg16, i32 0, i32 %191, i32 0
  %Arg_16.1734 = load float, ptr %Arg_16.17, align 4, !invariant.load !297
  %multiply.24 = fmul float %Arg_8.933, %Arg_16.1734
  %Arg_3.435 = getelementptr inbounds [8192 x [1 x float]], ptr %arg3, i32 0, i32 %196, i32 0
  %Arg_3.436 = load float, ptr %Arg_3.435, align 4, !invariant.load !297
  %Arg_11.12 = getelementptr inbounds [32 x [1 x float]], ptr %arg11, i32 0, i32 %191, i32 0
  %Arg_11.1237 = load float, ptr %Arg_11.12, align 4, !invariant.load !297
  %multiply.29 = fmul float %Arg_3.436, %Arg_11.1237
  %add.30 = fadd float %multiply.24, %multiply.29
  %Arg_1.238 = getelementptr inbounds [8192 x float], ptr %arg1, i32 0, i32 %196
  %Arg_1.239 = load float, ptr %Arg_1.238, align 4, !invariant.load !297
  %Arg_9.10 = getelementptr inbounds [32 x [1 x float]], ptr %arg9, i32 0, i32 %191, i32 0
  %Arg_9.1040 = load float, ptr %Arg_9.10, align 4, !invariant.load !297
  %multiply.34 = fmul float %Arg_1.239, %Arg_9.1040
  %add.35 = fadd float %add.30, %multiply.34
  %Arg_5.6 = getelementptr inbounds [8192 x [1 x float]], ptr %arg5, i32 0, i32 %196, i32 0
  %Arg_5.641 = load float, ptr %Arg_5.6, align 4, !invariant.load !297
  %Arg_13.14 = getelementptr inbounds [32 x [1 x float]], ptr %arg13, i32 0, i32 %191, i32 0
  %Arg_13.1442 = load float, ptr %Arg_13.14, align 4, !invariant.load !297
  %multiply.40 = fmul float %Arg_5.641, %Arg_13.1442
  %add.41 = fadd float %add.35, %multiply.40
  %Arg_7.8 = getelementptr inbounds [8192 x [1 x float]], ptr %arg7, i32 0, i32 %196, i32 0
  %Arg_7.843 = load float, ptr %Arg_7.8, align 4, !invariant.load !297
  %Arg_15.16 = getelementptr inbounds [32 x [1 x float]], ptr %arg15, i32 0, i32 %191, i32 0
  %Arg_15.1644 = load float, ptr %Arg_15.16, align 4, !invariant.load !297
  %multiply.46 = fmul float %Arg_7.843, %Arg_15.1644
  %add.47 = fadd float %add.41, %multiply.46
  %Arg_6.7 = getelementptr inbounds [8192 x [1 x float]], ptr %arg6, i32 0, i32 %196, i32 0
  %Arg_6.745 = load float, ptr %Arg_6.7, align 4, !invariant.load !297
  %Arg_14.15 = getelementptr inbounds [32 x [1 x float]], ptr %arg14, i32 0, i32 %191, i32 0
  %Arg_14.1546 = load float, ptr %Arg_14.15, align 4, !invariant.load !297
  %multiply.52 = fmul float %Arg_6.745, %Arg_14.1546
  %add.53 = fadd float %add.47, %multiply.52
  %Arg_0.147 = getelementptr inbounds [8192 x float], ptr %arg0, i32 0, i32 %196
  %Arg_0.148 = load float, ptr %Arg_0.147, align 4, !invariant.load !297
  %Arg_17.18 = getelementptr inbounds [32 x [1 x float]], ptr %arg17, i32 0, i32 %191, i32 0
  %Arg_17.1849 = load float, ptr %Arg_17.18, align 4, !invariant.load !297
  %multiply.57 = fmul float %Arg_0.148, %Arg_17.1849
  %add.58 = fadd float %add.53, %multiply.57
  %Arg_2.350 = getelementptr inbounds [8192 x float], ptr %arg2, i32 0, i32 %196
  %Arg_2.351 = load float, ptr %Arg_2.350, align 4, !invariant.load !297
  %Arg_10.11 = getelementptr inbounds [32 x [1 x float]], ptr %arg10, i32 0, i32 %191, i32 0
  %Arg_10.1152 = load float, ptr %Arg_10.11, align 4, !invariant.load !297
  %multiply.62 = fmul float %Arg_2.351, %Arg_10.1152
  %add.63 = fadd float %add.58, %multiply.62
  %Arg_4.553 = getelementptr inbounds [8192 x [1 x float]], ptr %arg4, i32 0, i32 %196, i32 0
  %Arg_4.554 = load float, ptr %Arg_4.553, align 4, !invariant.load !297
  %Arg_12.13 = getelementptr inbounds [32 x [1 x float]], ptr %arg12, i32 0, i32 %191, i32 0
  %Arg_12.1355 = load float, ptr %Arg_12.13, align 4, !invariant.load !297
  %multiply.68 = fmul float %Arg_4.554, %Arg_12.1355
  %add.69 = fadd float %add.63, %multiply.68
  %198 = mul nuw nsw i32 %134, 1
  %199 = add nuw nsw i32 0, %198
  %200 = udiv i32 %199, 32
  %201 = mul nuw nsw i32 %136, 1
  %202 = add nuw nsw i32 0, %201
  %203 = mul nuw nsw i32 %137, 128
  %204 = add nuw nsw i32 %202, %203
  %205 = udiv i32 %204, 8192
  %206 = getelementptr inbounds float, ptr %arg19, i32 %132
  store float %add.69, ptr %206, align 4
  br label %x_in_tile-after

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %207 = mul i32 %thread_id.y, 1
  %208 = add i32 %tile_origin.1, %thread_id.x
  %209 = add i32 %tile_origin.2, %207
  %210 = add i32 %209, 0
  %211 = mul i32 %tile_origin.0, 32
  %212 = add i32 %211, %210
  %213 = udiv i32 %212, 1
  %214 = urem i32 %213, 32
  %215 = udiv i32 %212, 32
  %output_element_address = getelementptr inbounds [64 x [32 x float]], ptr %arg20, i32 0, i32 %215, i32 %214
  %output = load float, ptr %34, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

reduction_write_output-true88:                    ; preds = %reduction_write_output-after
  %216 = mul i32 %thread_id.y, 1
  %217 = add i32 %tile_origin.1, %thread_id.x
  %218 = add i32 %tile_origin.2, %216
  %219 = add i32 %218, 0
  %220 = mul i32 %tile_origin.0, 32
  %221 = add i32 %220, %219
  %222 = udiv i32 %221, 1
  %223 = urem i32 %222, 32
  %224 = udiv i32 %221, 32
  %output_element_address90 = getelementptr inbounds [64 x [32 x float]], ptr %arg21, i32 0, i32 %224, i32 %223
  %output91 = load float, ptr %53, align 4
  store float %output91, ptr %output_element_address90, align 4
  br label %reduction_write_output-after89

reduction_write_output-true110:                   ; preds = %reduction_write_output-after89
  %225 = mul i32 %thread_id.y, 1
  %226 = add i32 %tile_origin.1, %thread_id.x
  %227 = add i32 %tile_origin.2, %225
  %228 = add i32 %227, 0
  %229 = mul i32 %tile_origin.0, 32
  %230 = add i32 %229, %228
  %231 = udiv i32 %230, 1
  %232 = urem i32 %231, 32
  %233 = udiv i32 %230, 32
  %output_element_address112 = getelementptr inbounds [64 x [32 x float]], ptr %arg22, i32 0, i32 %233, i32 %232
  %output113 = load float, ptr %72, align 4
  store float %output113, ptr %output_element_address112, align 4
  br label %reduction_write_output-after111

reduction_write_output-true132:                   ; preds = %reduction_write_output-after111
  %234 = mul i32 %thread_id.y, 1
  %235 = add i32 %tile_origin.1, %thread_id.x
  %236 = add i32 %tile_origin.2, %234
  %237 = add i32 %236, 0
  %238 = mul i32 %tile_origin.0, 32
  %239 = add i32 %238, %237
  %240 = udiv i32 %239, 1
  %241 = urem i32 %240, 32
  %242 = udiv i32 %239, 32
  %output_element_address134 = getelementptr inbounds [64 x [32 x float]], ptr %arg23, i32 0, i32 %242, i32 %241
  %output135 = load float, ptr %91, align 4
  store float %output135, ptr %output_element_address134, align 4
  br label %reduction_write_output-after133

reduction_write_output-true154:                   ; preds = %reduction_write_output-after133
  %243 = mul i32 %thread_id.y, 1
  %244 = add i32 %tile_origin.1, %thread_id.x
  %245 = add i32 %tile_origin.2, %243
  %246 = add i32 %245, 0
  %247 = mul i32 %tile_origin.0, 32
  %248 = add i32 %247, %246
  %249 = udiv i32 %248, 1
  %250 = urem i32 %249, 32
  %251 = udiv i32 %248, 32
  %output_element_address156 = getelementptr inbounds [64 x [32 x float]], ptr %arg24, i32 0, i32 %251, i32 %250
  %output157 = load float, ptr %110, align 4
  store float %output157, ptr %output_element_address156, align 4
  br label %reduction_write_output-after155
}

define internal void @region_1_73(ptr dereferenceable(4) %Arg_0.74.typed, ptr dereferenceable(4) %Arg_1.75.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.76.typed = alloca float, align 4
  %Arg_0.74 = load float, ptr %Arg_0.74.typed, align 4
  %Arg_1.75 = load float, ptr %Arg_1.75.typed, align 4
  %add.76 = fadd float %Arg_0.74, %Arg_1.75
  store float %add.76, ptr %add.76.typed, align 4
  %load_ret_value = load float, ptr %add.76.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_80(ptr dereferenceable(4) %Arg_0.81.typed, ptr dereferenceable(4) %Arg_1.82.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.83.typed = alloca float, align 4
  %Arg_0.81 = load float, ptr %Arg_0.81.typed, align 4
  %Arg_1.82 = load float, ptr %Arg_1.82.typed, align 4
  %add.83 = fadd float %Arg_0.81, %Arg_1.82
  store float %add.83, ptr %add.83.typed, align 4
  %load_ret_value = load float, ptr %add.83.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_3_87(ptr dereferenceable(4) %Arg_0.88.typed, ptr dereferenceable(4) %Arg_1.89.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.90.typed = alloca float, align 4
  %Arg_0.88 = load float, ptr %Arg_0.88.typed, align 4
  %Arg_1.89 = load float, ptr %Arg_1.89.typed, align 4
  %add.90 = fadd float %Arg_0.88, %Arg_1.89
  store float %add.90, ptr %add.90.typed, align 4
  %load_ret_value = load float, ptr %add.90.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_4_94(ptr dereferenceable(4) %Arg_0.95.typed, ptr dereferenceable(4) %Arg_1.96.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.97.typed = alloca float, align 4
  %Arg_0.95 = load float, ptr %Arg_0.95.typed, align 4
  %Arg_1.96 = load float, ptr %Arg_1.96.typed, align 4
  %add.97 = fadd float %Arg_0.95, %Arg_1.96
  store float %add.97, ptr %add.97.typed, align 4
  %load_ret_value = load float, ptr %add.97.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_5_101(ptr dereferenceable(4) %Arg_0.102.typed, ptr dereferenceable(4) %Arg_1.103.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.104.typed = alloca float, align 4
  %Arg_0.102 = load float, ptr %Arg_0.102.typed, align 4
  %Arg_1.103 = load float, ptr %Arg_1.103.typed, align 4
  %add.104 = fadd float %Arg_0.102, %Arg_1.103
  store float %add.104, ptr %add.104.typed, align 4
  %load_ret_value = load float, ptr %add.104.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_788(ptr noalias align 128 dereferenceable(8192) %arg0, ptr noalias align 128 dereferenceable(4) %arg1, ptr noalias align 128 dereferenceable(8192) %arg2, ptr noalias align 128 dereferenceable(8192) %arg3, ptr noalias align 128 dereferenceable(8192) %arg4, ptr noalias align 128 dereferenceable(8192) %arg5, ptr noalias align 128 dereferenceable(128) %arg6, ptr noalias align 128 dereferenceable(128) %arg7, ptr noalias align 128 dereferenceable(128) %arg8, ptr noalias align 128 dereferenceable(128) %arg9, ptr noalias align 128 dereferenceable(128) %arg10) {
entry:
  %return_buffer217 = alloca float, align 4
  %result_from_other_lane215 = alloca float, align 4
  %return_buffer214 = alloca float, align 4
  %result_from_other_lane212 = alloca float, align 4
  %return_buffer211 = alloca float, align 4
  %result_from_other_lane209 = alloca float, align 4
  %return_buffer208 = alloca float, align 4
  %result_from_other_lane206 = alloca float, align 4
  %return_buffer205 = alloca float, align 4
  %result_from_other_lane203 = alloca float, align 4
  %return_buffer199 = alloca float, align 4
  %tile_loop.invar_address192 = alloca i32, align 4
  %y_in_tile.invar_address186 = alloca i32, align 4
  %partial_reduction_result172 = alloca float, align 4
  %reduction_input_address171 = alloca float, align 4
  %return_buffer166 = alloca float, align 4
  %result_from_other_lane164 = alloca float, align 4
  %return_buffer163 = alloca float, align 4
  %result_from_other_lane161 = alloca float, align 4
  %return_buffer160 = alloca float, align 4
  %result_from_other_lane158 = alloca float, align 4
  %return_buffer157 = alloca float, align 4
  %result_from_other_lane155 = alloca float, align 4
  %return_buffer154 = alloca float, align 4
  %result_from_other_lane152 = alloca float, align 4
  %return_buffer148 = alloca float, align 4
  %tile_loop.invar_address141 = alloca i32, align 4
  %y_in_tile.invar_address135 = alloca i32, align 4
  %partial_reduction_result121 = alloca float, align 4
  %reduction_input_address120 = alloca float, align 4
  %return_buffer115 = alloca float, align 4
  %result_from_other_lane113 = alloca float, align 4
  %return_buffer112 = alloca float, align 4
  %result_from_other_lane110 = alloca float, align 4
  %return_buffer109 = alloca float, align 4
  %result_from_other_lane107 = alloca float, align 4
  %return_buffer106 = alloca float, align 4
  %result_from_other_lane104 = alloca float, align 4
  %return_buffer103 = alloca float, align 4
  %result_from_other_lane101 = alloca float, align 4
  %return_buffer97 = alloca float, align 4
  %tile_loop.invar_address90 = alloca i32, align 4
  %y_in_tile.invar_address84 = alloca i32, align 4
  %partial_reduction_result70 = alloca float, align 4
  %reduction_input_address69 = alloca float, align 4
  %return_buffer64 = alloca float, align 4
  %result_from_other_lane62 = alloca float, align 4
  %return_buffer61 = alloca float, align 4
  %result_from_other_lane59 = alloca float, align 4
  %return_buffer58 = alloca float, align 4
  %result_from_other_lane56 = alloca float, align 4
  %return_buffer55 = alloca float, align 4
  %result_from_other_lane53 = alloca float, align 4
  %return_buffer52 = alloca float, align 4
  %result_from_other_lane50 = alloca float, align 4
  %return_buffer46 = alloca float, align 4
  %tile_loop.invar_address39 = alloca i32, align 4
  %y_in_tile.invar_address33 = alloca i32, align 4
  %partial_reduction_result19 = alloca float, align 4
  %reduction_input_address18 = alloca float, align 4
  %return_buffer17 = alloca float, align 4
  %result_from_other_lane15 = alloca float, align 4
  %return_buffer14 = alloca float, align 4
  %result_from_other_lane12 = alloca float, align 4
  %return_buffer11 = alloca float, align 4
  %result_from_other_lane9 = alloca float, align 4
  %return_buffer8 = alloca float, align 4
  %result_from_other_lane6 = alloca float, align 4
  %return_buffer5 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !432
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after, %entry
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %reduce-group-1-true, label %reduce-group-1-after

reduce-group-1-after:                             ; preds = %reduction_write_output-after66, %reduce-group-0-after
  %3 = icmp eq i32 %0, 2
  br i1 %3, label %reduce-group-2-true, label %reduce-group-2-after

reduce-group-2-after:                             ; preds = %reduction_write_output-after117, %reduce-group-1-after
  %4 = icmp eq i32 %0, 3
  br i1 %4, label %reduce-group-3-true, label %reduce-group-3-after

reduce-group-3-after:                             ; preds = %reduction_write_output-after168, %reduce-group-2-after
  %5 = icmp eq i32 %0, 4
  br i1 %5, label %reduce-group-4-true, label %reduce-group-4-after

reduce-group-4-after:                             ; preds = %reduction_write_output-after219, %reduce-group-3-after
  ret void

reduce-group-0-true:                              ; preds = %entry
  %Arg_1.2 = load float, ptr %arg1, align 4, !invariant.load !297
  %6 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %Arg_1.2, ptr %6, align 4
  %7 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %8 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %9 = urem i32 %7, 1024
  %10 = udiv i32 %7, 1024
  %11 = mul i32 %8, 1
  %12 = add i32 %11, %10
  %13 = icmp ult i32 %12, 1
  br i1 %13, label %14, label %early_return

14:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %9, 32
  %thread_id.y = udiv i32 %9, 32
  %lane_id = urem i32 %9, 32
  %15 = udiv i32 %12, 1
  %16 = urem i32 %15, 1
  %17 = udiv i32 %12, 1
  %18 = urem i32 %17, 1
  %19 = udiv i32 %12, 1
  %20 = icmp eq i32 %18, 0
  %tile_bound = select i1 %20, i32 64, i32 4096
  %21 = icmp eq i32 %16, 0
  %tile_bound1 = select i1 %21, i32 32, i32 32
  %tile_origin.0 = mul i32 %19, 1
  %tile_origin.1 = mul i32 %18, 4096
  %tile_origin.2 = mul i32 %16, 32
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %14
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %22 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %22, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %23 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %24 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %25 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %25, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %26 = icmp eq i32 %tile_loop.indvar, 0
  %27 = mul i32 %tile_loop.indvar, 1
  %28 = add i32 %27, 0
  %x_loc = add i32 %28, %24
  %29 = add i32 %tile_origin.1, %y_in_tile.indvar
  %30 = add i32 %tile_origin.2, %x_loc
  %31 = icmp ult i32 %x_loc, %tile_bound1
  br i1 %31, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body
  br label %tile_loop.loop_header, !llvm.loop !487

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !488

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache139, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %32 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %33 = load float, ptr %current_output, align 4
  store float %33, ptr %32, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache139, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %34 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result4 = load float, ptr %34, align 4
  %35 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result4, i32 16, i32 31)
  store float %35, ptr %result_from_other_lane, align 4
  call void @region_1_7__1(ptr %34, ptr %result_from_other_lane, ptr %return_buffer5)
  %36 = load float, ptr %return_buffer5, align 4
  store float %36, ptr %34, align 4
  %partial_reduction_result7 = load float, ptr %34, align 4
  %37 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result7, i32 8, i32 31)
  store float %37, ptr %result_from_other_lane6, align 4
  call void @region_1_7__1(ptr %34, ptr %result_from_other_lane6, ptr %return_buffer8)
  %38 = load float, ptr %return_buffer8, align 4
  store float %38, ptr %34, align 4
  %partial_reduction_result10 = load float, ptr %34, align 4
  %39 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result10, i32 4, i32 31)
  store float %39, ptr %result_from_other_lane9, align 4
  call void @region_1_7__1(ptr %34, ptr %result_from_other_lane9, ptr %return_buffer11)
  %40 = load float, ptr %return_buffer11, align 4
  store float %40, ptr %34, align 4
  %partial_reduction_result13 = load float, ptr %34, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result13, i32 2, i32 31)
  store float %41, ptr %result_from_other_lane12, align 4
  call void @region_1_7__1(ptr %34, ptr %result_from_other_lane12, ptr %return_buffer14)
  %42 = load float, ptr %return_buffer14, align 4
  store float %42, ptr %34, align 4
  %partial_reduction_result16 = load float, ptr %34, align 4
  %43 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result16, i32 1, i32 31)
  store float %43, ptr %result_from_other_lane15, align 4
  call void @region_1_7__1(ptr %34, ptr %result_from_other_lane15, ptr %return_buffer17)
  %44 = load float, ptr %return_buffer17, align 4
  store float %44, ptr %34, align 4
  %45 = icmp ult i32 %thread_id.x, %tile_bound
  %46 = mul i32 %thread_id.y, 1
  %47 = icmp ult i32 %46, %tile_bound1
  %48 = and i1 %47, %45
  %49 = icmp eq i32 %lane_id, 0
  %50 = and i1 %48, %49
  br i1 %50, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %51 = mul i32 %thread_id.x, 1
  %52 = sub i32 %x_loc, %51
  %Arg_0.1 = getelementptr inbounds [64 x [32 x float]], ptr %arg0, i32 0, i32 %29, i32 %30
  %Arg_0.13 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  store float %Arg_0.13, ptr %reduction_input_address, align 4
  %53 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %52
  call void @region_1_7__1(ptr %53, ptr %reduction_input_address, ptr %return_buffer)
  %54 = load float, ptr %return_buffer, align 4
  store float %54, ptr %53, align 4
  br label %x_in_tile-after

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %55 = mul i32 %thread_id.y, 1
  %56 = add i32 %tile_origin.1, %thread_id.x
  %57 = add i32 %tile_origin.2, %55
  %58 = add i32 %57, 0
  %59 = mul i32 %tile_origin.0, 32
  %60 = add i32 %59, %58
  %61 = udiv i32 %60, 1
  %output_element_address = getelementptr inbounds [32 x float], ptr %arg6, i32 0, i32 %61
  %output = load float, ptr %34, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

reduce-group-1-true:                              ; preds = %reduce-group-0-after
  %Arg_1.220 = load float, ptr %arg1, align 4, !invariant.load !297
  %62 = getelementptr inbounds float, ptr %partial_reduction_result19, i32 0
  store float %Arg_1.220, ptr %62, align 4
  %63 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %64 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %65 = urem i32 %63, 1024
  %66 = udiv i32 %63, 1024
  %67 = mul i32 %64, 1
  %68 = add i32 %67, %66
  %69 = icmp ult i32 %68, 1
  br i1 %69, label %70, label %early_return21

70:                                               ; preds = %reduce-group-1-true
  %thread_id.x22 = urem i32 %65, 32
  %thread_id.y23 = udiv i32 %65, 32
  %lane_id24 = urem i32 %65, 32
  %71 = udiv i32 %68, 1
  %72 = urem i32 %71, 1
  %73 = udiv i32 %68, 1
  %74 = urem i32 %73, 1
  %75 = udiv i32 %68, 1
  %76 = icmp eq i32 %74, 0
  %tile_bound25 = select i1 %76, i32 64, i32 4096
  %77 = icmp eq i32 %72, 0
  %tile_bound26 = select i1 %77, i32 32, i32 32
  %tile_origin.027 = mul i32 %75, 1
  %tile_origin.128 = mul i32 %74, 4096
  %tile_origin.229 = mul i32 %72, 32
  store i32 %thread_id.y23, ptr %y_in_tile.invar_address33, align 4
  br label %y_in_tile.loop_header31

y_in_tile.loop_header31:                          ; preds = %tile_loop.loop_exit36, %70
  %y_in_tile.indvar34 = load i32, ptr %y_in_tile.invar_address33, align 4
  %78 = icmp uge i32 %y_in_tile.indvar34, %tile_bound25
  br i1 %78, label %y_in_tile.loop_exit30, label %y_in_tile.loop_body32

y_in_tile.loop_body32:                            ; preds = %y_in_tile.loop_header31
  %invar.inc35 = add nuw nsw i32 %y_in_tile.indvar34, 32
  store i32 %invar.inc35, ptr %y_in_tile.invar_address33, align 4
  %79 = icmp eq i32 %y_in_tile.indvar34, %thread_id.y23
  %80 = mul i32 %thread_id.x22, 1
  store i32 0, ptr %tile_loop.invar_address39, align 4
  br label %tile_loop.loop_header37

tile_loop.loop_header37:                          ; preds = %x_in_tile-after44, %y_in_tile.loop_body32
  %tile_loop.indvar40 = load i32, ptr %tile_loop.invar_address39, align 4
  %81 = icmp uge i32 %tile_loop.indvar40, 1
  br i1 %81, label %tile_loop.loop_exit36, label %tile_loop.loop_body38

tile_loop.loop_body38:                            ; preds = %tile_loop.loop_header37
  %invar.inc41 = add nuw nsw i32 %tile_loop.indvar40, 1
  store i32 %invar.inc41, ptr %tile_loop.invar_address39, align 4
  %82 = icmp eq i32 %tile_loop.indvar40, 0
  %83 = mul i32 %tile_loop.indvar40, 1
  %84 = add i32 %83, 0
  %x_loc42 = add i32 %84, %80
  %85 = add i32 %tile_origin.128, %y_in_tile.indvar34
  %86 = add i32 %tile_origin.229, %x_loc42
  %87 = icmp ult i32 %x_loc42, %tile_bound26
  br i1 %87, label %x_in_tile-true43, label %x_in_tile-after44

x_in_tile-after44:                                ; preds = %x_in_tile-true43, %tile_loop.loop_body38
  br label %tile_loop.loop_header37, !llvm.loop !489

tile_loop.loop_exit36:                            ; preds = %tile_loop.loop_header37
  br label %y_in_tile.loop_header31, !llvm.loop !490

y_in_tile.loop_exit30:                            ; preds = %y_in_tile.loop_header31
  %shmem_output_address47 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache140, i32 0, i32 %66, i32 0, i32 %thread_id.x22, i32 %thread_id.y23
  %88 = addrspacecast ptr addrspace(3) %shmem_output_address47 to ptr
  %current_output48 = getelementptr inbounds float, ptr %partial_reduction_result19, i32 0
  %89 = load float, ptr %current_output48, align 4
  store float %89, ptr %88, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr49 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache140, i32 0, i32 %66, i32 0, i32 %thread_id.y23, i32 %thread_id.x22
  %90 = addrspacecast ptr addrspace(3) %shmem_transposed_addr49 to ptr
  %partial_reduction_result51 = load float, ptr %90, align 4
  %91 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result51, i32 16, i32 31)
  store float %91, ptr %result_from_other_lane50, align 4
  call void @region_2_12__1(ptr %90, ptr %result_from_other_lane50, ptr %return_buffer52)
  %92 = load float, ptr %return_buffer52, align 4
  store float %92, ptr %90, align 4
  %partial_reduction_result54 = load float, ptr %90, align 4
  %93 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result54, i32 8, i32 31)
  store float %93, ptr %result_from_other_lane53, align 4
  call void @region_2_12__1(ptr %90, ptr %result_from_other_lane53, ptr %return_buffer55)
  %94 = load float, ptr %return_buffer55, align 4
  store float %94, ptr %90, align 4
  %partial_reduction_result57 = load float, ptr %90, align 4
  %95 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result57, i32 4, i32 31)
  store float %95, ptr %result_from_other_lane56, align 4
  call void @region_2_12__1(ptr %90, ptr %result_from_other_lane56, ptr %return_buffer58)
  %96 = load float, ptr %return_buffer58, align 4
  store float %96, ptr %90, align 4
  %partial_reduction_result60 = load float, ptr %90, align 4
  %97 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result60, i32 2, i32 31)
  store float %97, ptr %result_from_other_lane59, align 4
  call void @region_2_12__1(ptr %90, ptr %result_from_other_lane59, ptr %return_buffer61)
  %98 = load float, ptr %return_buffer61, align 4
  store float %98, ptr %90, align 4
  %partial_reduction_result63 = load float, ptr %90, align 4
  %99 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result63, i32 1, i32 31)
  store float %99, ptr %result_from_other_lane62, align 4
  call void @region_2_12__1(ptr %90, ptr %result_from_other_lane62, ptr %return_buffer64)
  %100 = load float, ptr %return_buffer64, align 4
  store float %100, ptr %90, align 4
  %101 = icmp ult i32 %thread_id.x22, %tile_bound25
  %102 = mul i32 %thread_id.y23, 1
  %103 = icmp ult i32 %102, %tile_bound26
  %104 = and i1 %103, %101
  %105 = icmp eq i32 %lane_id24, 0
  %106 = and i1 %104, %105
  br i1 %106, label %reduction_write_output-true65, label %reduction_write_output-after66

reduction_write_output-after66:                   ; preds = %reduction_write_output-true65, %y_in_tile.loop_exit30
  br label %reduce-group-1-after

early_return21:                                   ; preds = %reduce-group-1-true
  ret void

x_in_tile-true43:                                 ; preds = %tile_loop.loop_body38
  %107 = mul i32 %thread_id.x22, 1
  %108 = sub i32 %x_loc42, %107
  %Arg_2.3 = getelementptr inbounds [64 x [32 x float]], ptr %arg2, i32 0, i32 %85, i32 %86
  %Arg_2.345 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  store float %Arg_2.345, ptr %reduction_input_address18, align 4
  %109 = getelementptr inbounds float, ptr %partial_reduction_result19, i32 %108
  call void @region_2_12__1(ptr %109, ptr %reduction_input_address18, ptr %return_buffer46)
  %110 = load float, ptr %return_buffer46, align 4
  store float %110, ptr %109, align 4
  br label %x_in_tile-after44

reduction_write_output-true65:                    ; preds = %y_in_tile.loop_exit30
  %111 = mul i32 %thread_id.y23, 1
  %112 = add i32 %tile_origin.128, %thread_id.x22
  %113 = add i32 %tile_origin.229, %111
  %114 = add i32 %113, 0
  %115 = mul i32 %tile_origin.027, 32
  %116 = add i32 %115, %114
  %117 = udiv i32 %116, 1
  %output_element_address67 = getelementptr inbounds [32 x float], ptr %arg7, i32 0, i32 %117
  %output68 = load float, ptr %90, align 4
  store float %output68, ptr %output_element_address67, align 4
  br label %reduction_write_output-after66

reduce-group-2-true:                              ; preds = %reduce-group-1-after
  %Arg_1.271 = load float, ptr %arg1, align 4, !invariant.load !297
  %118 = getelementptr inbounds float, ptr %partial_reduction_result70, i32 0
  store float %Arg_1.271, ptr %118, align 4
  %119 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %120 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %121 = urem i32 %119, 1024
  %122 = udiv i32 %119, 1024
  %123 = mul i32 %120, 1
  %124 = add i32 %123, %122
  %125 = icmp ult i32 %124, 1
  br i1 %125, label %126, label %early_return72

126:                                              ; preds = %reduce-group-2-true
  %thread_id.x73 = urem i32 %121, 32
  %thread_id.y74 = udiv i32 %121, 32
  %lane_id75 = urem i32 %121, 32
  %127 = udiv i32 %124, 1
  %128 = urem i32 %127, 1
  %129 = udiv i32 %124, 1
  %130 = urem i32 %129, 1
  %131 = udiv i32 %124, 1
  %132 = icmp eq i32 %130, 0
  %tile_bound76 = select i1 %132, i32 64, i32 4096
  %133 = icmp eq i32 %128, 0
  %tile_bound77 = select i1 %133, i32 32, i32 32
  %tile_origin.078 = mul i32 %131, 1
  %tile_origin.179 = mul i32 %130, 4096
  %tile_origin.280 = mul i32 %128, 32
  store i32 %thread_id.y74, ptr %y_in_tile.invar_address84, align 4
  br label %y_in_tile.loop_header82

y_in_tile.loop_header82:                          ; preds = %tile_loop.loop_exit87, %126
  %y_in_tile.indvar85 = load i32, ptr %y_in_tile.invar_address84, align 4
  %134 = icmp uge i32 %y_in_tile.indvar85, %tile_bound76
  br i1 %134, label %y_in_tile.loop_exit81, label %y_in_tile.loop_body83

y_in_tile.loop_body83:                            ; preds = %y_in_tile.loop_header82
  %invar.inc86 = add nuw nsw i32 %y_in_tile.indvar85, 32
  store i32 %invar.inc86, ptr %y_in_tile.invar_address84, align 4
  %135 = icmp eq i32 %y_in_tile.indvar85, %thread_id.y74
  %136 = mul i32 %thread_id.x73, 1
  store i32 0, ptr %tile_loop.invar_address90, align 4
  br label %tile_loop.loop_header88

tile_loop.loop_header88:                          ; preds = %x_in_tile-after95, %y_in_tile.loop_body83
  %tile_loop.indvar91 = load i32, ptr %tile_loop.invar_address90, align 4
  %137 = icmp uge i32 %tile_loop.indvar91, 1
  br i1 %137, label %tile_loop.loop_exit87, label %tile_loop.loop_body89

tile_loop.loop_body89:                            ; preds = %tile_loop.loop_header88
  %invar.inc92 = add nuw nsw i32 %tile_loop.indvar91, 1
  store i32 %invar.inc92, ptr %tile_loop.invar_address90, align 4
  %138 = icmp eq i32 %tile_loop.indvar91, 0
  %139 = mul i32 %tile_loop.indvar91, 1
  %140 = add i32 %139, 0
  %x_loc93 = add i32 %140, %136
  %141 = add i32 %tile_origin.179, %y_in_tile.indvar85
  %142 = add i32 %tile_origin.280, %x_loc93
  %143 = icmp ult i32 %x_loc93, %tile_bound77
  br i1 %143, label %x_in_tile-true94, label %x_in_tile-after95

x_in_tile-after95:                                ; preds = %x_in_tile-true94, %tile_loop.loop_body89
  br label %tile_loop.loop_header88, !llvm.loop !491

tile_loop.loop_exit87:                            ; preds = %tile_loop.loop_header88
  br label %y_in_tile.loop_header82, !llvm.loop !492

y_in_tile.loop_exit81:                            ; preds = %y_in_tile.loop_header82
  %shmem_output_address98 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache141, i32 0, i32 %122, i32 0, i32 %thread_id.x73, i32 %thread_id.y74
  %144 = addrspacecast ptr addrspace(3) %shmem_output_address98 to ptr
  %current_output99 = getelementptr inbounds float, ptr %partial_reduction_result70, i32 0
  %145 = load float, ptr %current_output99, align 4
  store float %145, ptr %144, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr100 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache141, i32 0, i32 %122, i32 0, i32 %thread_id.y74, i32 %thread_id.x73
  %146 = addrspacecast ptr addrspace(3) %shmem_transposed_addr100 to ptr
  %partial_reduction_result102 = load float, ptr %146, align 4
  %147 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result102, i32 16, i32 31)
  store float %147, ptr %result_from_other_lane101, align 4
  call void @region_3_17__1(ptr %146, ptr %result_from_other_lane101, ptr %return_buffer103)
  %148 = load float, ptr %return_buffer103, align 4
  store float %148, ptr %146, align 4
  %partial_reduction_result105 = load float, ptr %146, align 4
  %149 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result105, i32 8, i32 31)
  store float %149, ptr %result_from_other_lane104, align 4
  call void @region_3_17__1(ptr %146, ptr %result_from_other_lane104, ptr %return_buffer106)
  %150 = load float, ptr %return_buffer106, align 4
  store float %150, ptr %146, align 4
  %partial_reduction_result108 = load float, ptr %146, align 4
  %151 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result108, i32 4, i32 31)
  store float %151, ptr %result_from_other_lane107, align 4
  call void @region_3_17__1(ptr %146, ptr %result_from_other_lane107, ptr %return_buffer109)
  %152 = load float, ptr %return_buffer109, align 4
  store float %152, ptr %146, align 4
  %partial_reduction_result111 = load float, ptr %146, align 4
  %153 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result111, i32 2, i32 31)
  store float %153, ptr %result_from_other_lane110, align 4
  call void @region_3_17__1(ptr %146, ptr %result_from_other_lane110, ptr %return_buffer112)
  %154 = load float, ptr %return_buffer112, align 4
  store float %154, ptr %146, align 4
  %partial_reduction_result114 = load float, ptr %146, align 4
  %155 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result114, i32 1, i32 31)
  store float %155, ptr %result_from_other_lane113, align 4
  call void @region_3_17__1(ptr %146, ptr %result_from_other_lane113, ptr %return_buffer115)
  %156 = load float, ptr %return_buffer115, align 4
  store float %156, ptr %146, align 4
  %157 = icmp ult i32 %thread_id.x73, %tile_bound76
  %158 = mul i32 %thread_id.y74, 1
  %159 = icmp ult i32 %158, %tile_bound77
  %160 = and i1 %159, %157
  %161 = icmp eq i32 %lane_id75, 0
  %162 = and i1 %160, %161
  br i1 %162, label %reduction_write_output-true116, label %reduction_write_output-after117

reduction_write_output-after117:                  ; preds = %reduction_write_output-true116, %y_in_tile.loop_exit81
  br label %reduce-group-2-after

early_return72:                                   ; preds = %reduce-group-2-true
  ret void

x_in_tile-true94:                                 ; preds = %tile_loop.loop_body89
  %163 = mul i32 %thread_id.x73, 1
  %164 = sub i32 %x_loc93, %163
  %Arg_3.4 = getelementptr inbounds [64 x [32 x float]], ptr %arg3, i32 0, i32 %141, i32 %142
  %Arg_3.496 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  store float %Arg_3.496, ptr %reduction_input_address69, align 4
  %165 = getelementptr inbounds float, ptr %partial_reduction_result70, i32 %164
  call void @region_3_17__1(ptr %165, ptr %reduction_input_address69, ptr %return_buffer97)
  %166 = load float, ptr %return_buffer97, align 4
  store float %166, ptr %165, align 4
  br label %x_in_tile-after95

reduction_write_output-true116:                   ; preds = %y_in_tile.loop_exit81
  %167 = mul i32 %thread_id.y74, 1
  %168 = add i32 %tile_origin.179, %thread_id.x73
  %169 = add i32 %tile_origin.280, %167
  %170 = add i32 %169, 0
  %171 = mul i32 %tile_origin.078, 32
  %172 = add i32 %171, %170
  %173 = udiv i32 %172, 1
  %output_element_address118 = getelementptr inbounds [32 x float], ptr %arg8, i32 0, i32 %173
  %output119 = load float, ptr %146, align 4
  store float %output119, ptr %output_element_address118, align 4
  br label %reduction_write_output-after117

reduce-group-3-true:                              ; preds = %reduce-group-2-after
  %Arg_1.2122 = load float, ptr %arg1, align 4, !invariant.load !297
  %174 = getelementptr inbounds float, ptr %partial_reduction_result121, i32 0
  store float %Arg_1.2122, ptr %174, align 4
  %175 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %176 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %177 = urem i32 %175, 1024
  %178 = udiv i32 %175, 1024
  %179 = mul i32 %176, 1
  %180 = add i32 %179, %178
  %181 = icmp ult i32 %180, 1
  br i1 %181, label %182, label %early_return123

182:                                              ; preds = %reduce-group-3-true
  %thread_id.x124 = urem i32 %177, 32
  %thread_id.y125 = udiv i32 %177, 32
  %lane_id126 = urem i32 %177, 32
  %183 = udiv i32 %180, 1
  %184 = urem i32 %183, 1
  %185 = udiv i32 %180, 1
  %186 = urem i32 %185, 1
  %187 = udiv i32 %180, 1
  %188 = icmp eq i32 %186, 0
  %tile_bound127 = select i1 %188, i32 64, i32 4096
  %189 = icmp eq i32 %184, 0
  %tile_bound128 = select i1 %189, i32 32, i32 32
  %tile_origin.0129 = mul i32 %187, 1
  %tile_origin.1130 = mul i32 %186, 4096
  %tile_origin.2131 = mul i32 %184, 32
  store i32 %thread_id.y125, ptr %y_in_tile.invar_address135, align 4
  br label %y_in_tile.loop_header133

y_in_tile.loop_header133:                         ; preds = %tile_loop.loop_exit138, %182
  %y_in_tile.indvar136 = load i32, ptr %y_in_tile.invar_address135, align 4
  %190 = icmp uge i32 %y_in_tile.indvar136, %tile_bound127
  br i1 %190, label %y_in_tile.loop_exit132, label %y_in_tile.loop_body134

y_in_tile.loop_body134:                           ; preds = %y_in_tile.loop_header133
  %invar.inc137 = add nuw nsw i32 %y_in_tile.indvar136, 32
  store i32 %invar.inc137, ptr %y_in_tile.invar_address135, align 4
  %191 = icmp eq i32 %y_in_tile.indvar136, %thread_id.y125
  %192 = mul i32 %thread_id.x124, 1
  store i32 0, ptr %tile_loop.invar_address141, align 4
  br label %tile_loop.loop_header139

tile_loop.loop_header139:                         ; preds = %x_in_tile-after146, %y_in_tile.loop_body134
  %tile_loop.indvar142 = load i32, ptr %tile_loop.invar_address141, align 4
  %193 = icmp uge i32 %tile_loop.indvar142, 1
  br i1 %193, label %tile_loop.loop_exit138, label %tile_loop.loop_body140

tile_loop.loop_body140:                           ; preds = %tile_loop.loop_header139
  %invar.inc143 = add nuw nsw i32 %tile_loop.indvar142, 1
  store i32 %invar.inc143, ptr %tile_loop.invar_address141, align 4
  %194 = icmp eq i32 %tile_loop.indvar142, 0
  %195 = mul i32 %tile_loop.indvar142, 1
  %196 = add i32 %195, 0
  %x_loc144 = add i32 %196, %192
  %197 = add i32 %tile_origin.1130, %y_in_tile.indvar136
  %198 = add i32 %tile_origin.2131, %x_loc144
  %199 = icmp ult i32 %x_loc144, %tile_bound128
  br i1 %199, label %x_in_tile-true145, label %x_in_tile-after146

x_in_tile-after146:                               ; preds = %x_in_tile-true145, %tile_loop.loop_body140
  br label %tile_loop.loop_header139, !llvm.loop !493

tile_loop.loop_exit138:                           ; preds = %tile_loop.loop_header139
  br label %y_in_tile.loop_header133, !llvm.loop !494

y_in_tile.loop_exit132:                           ; preds = %y_in_tile.loop_header133
  %shmem_output_address149 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache142, i32 0, i32 %178, i32 0, i32 %thread_id.x124, i32 %thread_id.y125
  %200 = addrspacecast ptr addrspace(3) %shmem_output_address149 to ptr
  %current_output150 = getelementptr inbounds float, ptr %partial_reduction_result121, i32 0
  %201 = load float, ptr %current_output150, align 4
  store float %201, ptr %200, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr151 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache142, i32 0, i32 %178, i32 0, i32 %thread_id.y125, i32 %thread_id.x124
  %202 = addrspacecast ptr addrspace(3) %shmem_transposed_addr151 to ptr
  %partial_reduction_result153 = load float, ptr %202, align 4
  %203 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result153, i32 16, i32 31)
  store float %203, ptr %result_from_other_lane152, align 4
  call void @region_4_22__1(ptr %202, ptr %result_from_other_lane152, ptr %return_buffer154)
  %204 = load float, ptr %return_buffer154, align 4
  store float %204, ptr %202, align 4
  %partial_reduction_result156 = load float, ptr %202, align 4
  %205 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result156, i32 8, i32 31)
  store float %205, ptr %result_from_other_lane155, align 4
  call void @region_4_22__1(ptr %202, ptr %result_from_other_lane155, ptr %return_buffer157)
  %206 = load float, ptr %return_buffer157, align 4
  store float %206, ptr %202, align 4
  %partial_reduction_result159 = load float, ptr %202, align 4
  %207 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result159, i32 4, i32 31)
  store float %207, ptr %result_from_other_lane158, align 4
  call void @region_4_22__1(ptr %202, ptr %result_from_other_lane158, ptr %return_buffer160)
  %208 = load float, ptr %return_buffer160, align 4
  store float %208, ptr %202, align 4
  %partial_reduction_result162 = load float, ptr %202, align 4
  %209 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result162, i32 2, i32 31)
  store float %209, ptr %result_from_other_lane161, align 4
  call void @region_4_22__1(ptr %202, ptr %result_from_other_lane161, ptr %return_buffer163)
  %210 = load float, ptr %return_buffer163, align 4
  store float %210, ptr %202, align 4
  %partial_reduction_result165 = load float, ptr %202, align 4
  %211 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result165, i32 1, i32 31)
  store float %211, ptr %result_from_other_lane164, align 4
  call void @region_4_22__1(ptr %202, ptr %result_from_other_lane164, ptr %return_buffer166)
  %212 = load float, ptr %return_buffer166, align 4
  store float %212, ptr %202, align 4
  %213 = icmp ult i32 %thread_id.x124, %tile_bound127
  %214 = mul i32 %thread_id.y125, 1
  %215 = icmp ult i32 %214, %tile_bound128
  %216 = and i1 %215, %213
  %217 = icmp eq i32 %lane_id126, 0
  %218 = and i1 %216, %217
  br i1 %218, label %reduction_write_output-true167, label %reduction_write_output-after168

reduction_write_output-after168:                  ; preds = %reduction_write_output-true167, %y_in_tile.loop_exit132
  br label %reduce-group-3-after

early_return123:                                  ; preds = %reduce-group-3-true
  ret void

x_in_tile-true145:                                ; preds = %tile_loop.loop_body140
  %219 = mul i32 %thread_id.x124, 1
  %220 = sub i32 %x_loc144, %219
  %Arg_4.5 = getelementptr inbounds [64 x [32 x float]], ptr %arg4, i32 0, i32 %197, i32 %198
  %Arg_4.5147 = load float, ptr %Arg_4.5, align 4, !invariant.load !297
  store float %Arg_4.5147, ptr %reduction_input_address120, align 4
  %221 = getelementptr inbounds float, ptr %partial_reduction_result121, i32 %220
  call void @region_4_22__1(ptr %221, ptr %reduction_input_address120, ptr %return_buffer148)
  %222 = load float, ptr %return_buffer148, align 4
  store float %222, ptr %221, align 4
  br label %x_in_tile-after146

reduction_write_output-true167:                   ; preds = %y_in_tile.loop_exit132
  %223 = mul i32 %thread_id.y125, 1
  %224 = add i32 %tile_origin.1130, %thread_id.x124
  %225 = add i32 %tile_origin.2131, %223
  %226 = add i32 %225, 0
  %227 = mul i32 %tile_origin.0129, 32
  %228 = add i32 %227, %226
  %229 = udiv i32 %228, 1
  %output_element_address169 = getelementptr inbounds [32 x float], ptr %arg9, i32 0, i32 %229
  %output170 = load float, ptr %202, align 4
  store float %output170, ptr %output_element_address169, align 4
  br label %reduction_write_output-after168

reduce-group-4-true:                              ; preds = %reduce-group-3-after
  %Arg_1.2173 = load float, ptr %arg1, align 4, !invariant.load !297
  %230 = getelementptr inbounds float, ptr %partial_reduction_result172, i32 0
  store float %Arg_1.2173, ptr %230, align 4
  %231 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %232 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %233 = urem i32 %231, 1024
  %234 = udiv i32 %231, 1024
  %235 = mul i32 %232, 1
  %236 = add i32 %235, %234
  %237 = icmp ult i32 %236, 1
  br i1 %237, label %238, label %early_return174

238:                                              ; preds = %reduce-group-4-true
  %thread_id.x175 = urem i32 %233, 32
  %thread_id.y176 = udiv i32 %233, 32
  %lane_id177 = urem i32 %233, 32
  %239 = udiv i32 %236, 1
  %240 = urem i32 %239, 1
  %241 = udiv i32 %236, 1
  %242 = urem i32 %241, 1
  %243 = udiv i32 %236, 1
  %244 = icmp eq i32 %242, 0
  %tile_bound178 = select i1 %244, i32 64, i32 4096
  %245 = icmp eq i32 %240, 0
  %tile_bound179 = select i1 %245, i32 32, i32 32
  %tile_origin.0180 = mul i32 %243, 1
  %tile_origin.1181 = mul i32 %242, 4096
  %tile_origin.2182 = mul i32 %240, 32
  store i32 %thread_id.y176, ptr %y_in_tile.invar_address186, align 4
  br label %y_in_tile.loop_header184

y_in_tile.loop_header184:                         ; preds = %tile_loop.loop_exit189, %238
  %y_in_tile.indvar187 = load i32, ptr %y_in_tile.invar_address186, align 4
  %246 = icmp uge i32 %y_in_tile.indvar187, %tile_bound178
  br i1 %246, label %y_in_tile.loop_exit183, label %y_in_tile.loop_body185

y_in_tile.loop_body185:                           ; preds = %y_in_tile.loop_header184
  %invar.inc188 = add nuw nsw i32 %y_in_tile.indvar187, 32
  store i32 %invar.inc188, ptr %y_in_tile.invar_address186, align 4
  %247 = icmp eq i32 %y_in_tile.indvar187, %thread_id.y176
  %248 = mul i32 %thread_id.x175, 1
  store i32 0, ptr %tile_loop.invar_address192, align 4
  br label %tile_loop.loop_header190

tile_loop.loop_header190:                         ; preds = %x_in_tile-after197, %y_in_tile.loop_body185
  %tile_loop.indvar193 = load i32, ptr %tile_loop.invar_address192, align 4
  %249 = icmp uge i32 %tile_loop.indvar193, 1
  br i1 %249, label %tile_loop.loop_exit189, label %tile_loop.loop_body191

tile_loop.loop_body191:                           ; preds = %tile_loop.loop_header190
  %invar.inc194 = add nuw nsw i32 %tile_loop.indvar193, 1
  store i32 %invar.inc194, ptr %tile_loop.invar_address192, align 4
  %250 = icmp eq i32 %tile_loop.indvar193, 0
  %251 = mul i32 %tile_loop.indvar193, 1
  %252 = add i32 %251, 0
  %x_loc195 = add i32 %252, %248
  %253 = add i32 %tile_origin.1181, %y_in_tile.indvar187
  %254 = add i32 %tile_origin.2182, %x_loc195
  %255 = icmp ult i32 %x_loc195, %tile_bound179
  br i1 %255, label %x_in_tile-true196, label %x_in_tile-after197

x_in_tile-after197:                               ; preds = %x_in_tile-true196, %tile_loop.loop_body191
  br label %tile_loop.loop_header190, !llvm.loop !495

tile_loop.loop_exit189:                           ; preds = %tile_loop.loop_header190
  br label %y_in_tile.loop_header184, !llvm.loop !496

y_in_tile.loop_exit183:                           ; preds = %y_in_tile.loop_header184
  %shmem_output_address200 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache143, i32 0, i32 %234, i32 0, i32 %thread_id.x175, i32 %thread_id.y176
  %256 = addrspacecast ptr addrspace(3) %shmem_output_address200 to ptr
  %current_output201 = getelementptr inbounds float, ptr %partial_reduction_result172, i32 0
  %257 = load float, ptr %current_output201, align 4
  store float %257, ptr %256, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr202 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache143, i32 0, i32 %234, i32 0, i32 %thread_id.y176, i32 %thread_id.x175
  %258 = addrspacecast ptr addrspace(3) %shmem_transposed_addr202 to ptr
  %partial_reduction_result204 = load float, ptr %258, align 4
  %259 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result204, i32 16, i32 31)
  store float %259, ptr %result_from_other_lane203, align 4
  call void @region_5_27__1(ptr %258, ptr %result_from_other_lane203, ptr %return_buffer205)
  %260 = load float, ptr %return_buffer205, align 4
  store float %260, ptr %258, align 4
  %partial_reduction_result207 = load float, ptr %258, align 4
  %261 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result207, i32 8, i32 31)
  store float %261, ptr %result_from_other_lane206, align 4
  call void @region_5_27__1(ptr %258, ptr %result_from_other_lane206, ptr %return_buffer208)
  %262 = load float, ptr %return_buffer208, align 4
  store float %262, ptr %258, align 4
  %partial_reduction_result210 = load float, ptr %258, align 4
  %263 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result210, i32 4, i32 31)
  store float %263, ptr %result_from_other_lane209, align 4
  call void @region_5_27__1(ptr %258, ptr %result_from_other_lane209, ptr %return_buffer211)
  %264 = load float, ptr %return_buffer211, align 4
  store float %264, ptr %258, align 4
  %partial_reduction_result213 = load float, ptr %258, align 4
  %265 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result213, i32 2, i32 31)
  store float %265, ptr %result_from_other_lane212, align 4
  call void @region_5_27__1(ptr %258, ptr %result_from_other_lane212, ptr %return_buffer214)
  %266 = load float, ptr %return_buffer214, align 4
  store float %266, ptr %258, align 4
  %partial_reduction_result216 = load float, ptr %258, align 4
  %267 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result216, i32 1, i32 31)
  store float %267, ptr %result_from_other_lane215, align 4
  call void @region_5_27__1(ptr %258, ptr %result_from_other_lane215, ptr %return_buffer217)
  %268 = load float, ptr %return_buffer217, align 4
  store float %268, ptr %258, align 4
  %269 = icmp ult i32 %thread_id.x175, %tile_bound178
  %270 = mul i32 %thread_id.y176, 1
  %271 = icmp ult i32 %270, %tile_bound179
  %272 = and i1 %271, %269
  %273 = icmp eq i32 %lane_id177, 0
  %274 = and i1 %272, %273
  br i1 %274, label %reduction_write_output-true218, label %reduction_write_output-after219

reduction_write_output-after219:                  ; preds = %reduction_write_output-true218, %y_in_tile.loop_exit183
  br label %reduce-group-4-after

early_return174:                                  ; preds = %reduce-group-4-true
  ret void

x_in_tile-true196:                                ; preds = %tile_loop.loop_body191
  %275 = mul i32 %thread_id.x175, 1
  %276 = sub i32 %x_loc195, %275
  %Arg_5.6 = getelementptr inbounds [64 x [32 x float]], ptr %arg5, i32 0, i32 %253, i32 %254
  %Arg_5.6198 = load float, ptr %Arg_5.6, align 4, !invariant.load !297
  store float %Arg_5.6198, ptr %reduction_input_address171, align 4
  %277 = getelementptr inbounds float, ptr %partial_reduction_result172, i32 %276
  call void @region_5_27__1(ptr %277, ptr %reduction_input_address171, ptr %return_buffer199)
  %278 = load float, ptr %return_buffer199, align 4
  store float %278, ptr %277, align 4
  br label %x_in_tile-after197

reduction_write_output-true218:                   ; preds = %y_in_tile.loop_exit183
  %279 = mul i32 %thread_id.y176, 1
  %280 = add i32 %tile_origin.1181, %thread_id.x175
  %281 = add i32 %tile_origin.2182, %279
  %282 = add i32 %281, 0
  %283 = mul i32 %tile_origin.0180, 32
  %284 = add i32 %283, %282
  %285 = udiv i32 %284, 1
  %output_element_address220 = getelementptr inbounds [32 x float], ptr %arg10, i32 0, i32 %285
  %output221 = load float, ptr %258, align 4
  store float %output221, ptr %output_element_address220, align 4
  br label %reduction_write_output-after219
}

define internal void @region_1_7__1(ptr dereferenceable(4) %Arg_0.8.typed, ptr dereferenceable(4) %Arg_1.9.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.10.typed = alloca float, align 4
  %Arg_0.8 = load float, ptr %Arg_0.8.typed, align 4
  %Arg_1.9 = load float, ptr %Arg_1.9.typed, align 4
  %add.10 = fadd float %Arg_0.8, %Arg_1.9
  store float %add.10, ptr %add.10.typed, align 4
  %load_ret_value = load float, ptr %add.10.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_12__1(ptr dereferenceable(4) %Arg_0.13.typed, ptr dereferenceable(4) %Arg_1.14.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.15.typed = alloca float, align 4
  %Arg_0.13 = load float, ptr %Arg_0.13.typed, align 4
  %Arg_1.14 = load float, ptr %Arg_1.14.typed, align 4
  %add.15 = fadd float %Arg_0.13, %Arg_1.14
  store float %add.15, ptr %add.15.typed, align 4
  %load_ret_value = load float, ptr %add.15.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_3_17__1(ptr dereferenceable(4) %Arg_0.18.typed, ptr dereferenceable(4) %Arg_1.19.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.20.typed = alloca float, align 4
  %Arg_0.18 = load float, ptr %Arg_0.18.typed, align 4
  %Arg_1.19 = load float, ptr %Arg_1.19.typed, align 4
  %add.20 = fadd float %Arg_0.18, %Arg_1.19
  store float %add.20, ptr %add.20.typed, align 4
  %load_ret_value = load float, ptr %add.20.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_4_22__1(ptr dereferenceable(4) %Arg_0.23.typed, ptr dereferenceable(4) %Arg_1.24.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.25.typed = alloca float, align 4
  %Arg_0.23 = load float, ptr %Arg_0.23.typed, align 4
  %Arg_1.24 = load float, ptr %Arg_1.24.typed, align 4
  %add.25 = fadd float %Arg_0.23, %Arg_1.24
  store float %add.25, ptr %add.25.typed, align 4
  %load_ret_value = load float, ptr %add.25.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_5_27__1(ptr dereferenceable(4) %Arg_0.28.typed, ptr dereferenceable(4) %Arg_1.29.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.30.typed = alloca float, align 4
  %Arg_0.28 = load float, ptr %Arg_0.28.typed, align 4
  %Arg_1.29 = load float, ptr %Arg_1.29.typed, align 4
  %add.30 = fadd float %Arg_0.28, %Arg_1.29
  store float %add.30, ptr %add.30.typed, align 4
  %load_ret_value = load float, ptr %add.30.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_714(ptr noalias align 16 dereferenceable(128) %arg0, ptr noalias align 128 dereferenceable(128) %arg1, ptr noalias align 16 dereferenceable(128) %arg2, ptr noalias align 128 dereferenceable(128) %arg3, ptr noalias align 16 dereferenceable(128) %arg4, ptr noalias align 128 dereferenceable(128) %arg5, ptr noalias align 16 dereferenceable(128) %arg6, ptr noalias align 128 dereferenceable(128) %arg7, ptr noalias align 16 dereferenceable(128) %arg8, ptr noalias align 128 dereferenceable(128) %arg9, ptr noalias align 16 dereferenceable(128) %arg10, ptr noalias align 128 dereferenceable(128) %arg11, ptr noalias align 16 dereferenceable(128) %arg12, ptr noalias align 128 dereferenceable(128) %arg13, ptr noalias align 16 dereferenceable(128) %arg14, ptr noalias align 128 dereferenceable(128) %arg15, ptr noalias align 16 dereferenceable(128) %arg16, ptr noalias align 128 dereferenceable(128) %arg17, ptr noalias align 16 dereferenceable(128) %arg18, ptr noalias align 128 dereferenceable(128) %arg19, ptr noalias align 128 dereferenceable(128) %arg20, ptr noalias align 128 dereferenceable(128) %arg21, ptr noalias align 128 dereferenceable(128) %arg22, ptr noalias align 128 dereferenceable(128) %arg23, ptr noalias align 128 dereferenceable(128) %arg24, ptr noalias align 128 dereferenceable(128) %arg25, ptr noalias align 128 dereferenceable(128) %arg26, ptr noalias align 128 dereferenceable(128) %arg27, ptr noalias align 128 dereferenceable(128) %arg28, ptr noalias align 128 dereferenceable(128) %arg29) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !358
  %2 = mul nuw nsw i32 %0, 32
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 32
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 1
  %5 = udiv i32 %linear_index, 1
  %6 = icmp ult i32 %linear_index, 32
  br i1 %6, label %fusion_714.in_bounds-true, label %fusion_714.in_bounds-after

fusion_714.in_bounds-after:                       ; preds = %fusion_714.in_bounds-true, %entry
  ret void

fusion_714.in_bounds-true:                        ; preds = %entry
  %7 = getelementptr inbounds float, ptr %arg0, i32 %linear_index
  %8 = load float, ptr %7, align 4, !invariant.load !297
  %region_0_54_constant_21 = load float, ptr @97, align 4
  %9 = getelementptr inbounds float, ptr %arg1, i32 %linear_index
  %10 = load float, ptr %9, align 4, !invariant.load !297
  %multiply.23 = fmul float %region_0_54_constant_21, %10
  %subtract.25 = fsub float %8, %multiply.23
  %11 = insertvalue { float, float, float, float, float, float, float, float, float, float } undef, float %subtract.25, 0
  %12 = getelementptr inbounds float, ptr %arg2, i32 %linear_index
  %13 = load float, ptr %12, align 4, !invariant.load !297
  %14 = getelementptr inbounds float, ptr %arg3, i32 %linear_index
  %15 = load float, ptr %14, align 4, !invariant.load !297
  %multiply.26 = fmul float %region_0_54_constant_21, %15
  %subtract.28 = fsub float %13, %multiply.26
  %16 = insertvalue { float, float, float, float, float, float, float, float, float, float } %11, float %subtract.28, 1
  %17 = getelementptr inbounds float, ptr %arg4, i32 %linear_index
  %18 = load float, ptr %17, align 4, !invariant.load !297
  %19 = getelementptr inbounds float, ptr %arg5, i32 %linear_index
  %20 = load float, ptr %19, align 4, !invariant.load !297
  %multiply.29 = fmul float %region_0_54_constant_21, %20
  %subtract.31 = fsub float %18, %multiply.29
  %21 = insertvalue { float, float, float, float, float, float, float, float, float, float } %16, float %subtract.31, 2
  %22 = getelementptr inbounds float, ptr %arg6, i32 %linear_index
  %23 = load float, ptr %22, align 4, !invariant.load !297
  %24 = getelementptr inbounds float, ptr %arg7, i32 %linear_index
  %25 = load float, ptr %24, align 4, !invariant.load !297
  %multiply.32 = fmul float %region_0_54_constant_21, %25
  %subtract.34 = fsub float %23, %multiply.32
  %26 = insertvalue { float, float, float, float, float, float, float, float, float, float } %21, float %subtract.34, 3
  %27 = getelementptr inbounds float, ptr %arg8, i32 %linear_index
  %28 = load float, ptr %27, align 4, !invariant.load !297
  %29 = getelementptr inbounds float, ptr %arg9, i32 %linear_index
  %30 = load float, ptr %29, align 4, !invariant.load !297
  %multiply.35 = fmul float %region_0_54_constant_21, %30
  %subtract.37 = fsub float %28, %multiply.35
  %31 = insertvalue { float, float, float, float, float, float, float, float, float, float } %26, float %subtract.37, 4
  %32 = getelementptr inbounds float, ptr %arg10, i32 %linear_index
  %33 = load float, ptr %32, align 4, !invariant.load !297
  %34 = getelementptr inbounds float, ptr %arg11, i32 %linear_index
  %35 = load float, ptr %34, align 4, !invariant.load !297
  %multiply.38 = fmul float %region_0_54_constant_21, %35
  %subtract.40 = fsub float %33, %multiply.38
  %36 = insertvalue { float, float, float, float, float, float, float, float, float, float } %31, float %subtract.40, 5
  %37 = getelementptr inbounds float, ptr %arg12, i32 %linear_index
  %38 = load float, ptr %37, align 4, !invariant.load !297
  %39 = getelementptr inbounds float, ptr %arg13, i32 %linear_index
  %40 = load float, ptr %39, align 4, !invariant.load !297
  %multiply.41 = fmul float %region_0_54_constant_21, %40
  %subtract.43 = fsub float %38, %multiply.41
  %41 = insertvalue { float, float, float, float, float, float, float, float, float, float } %36, float %subtract.43, 6
  %42 = getelementptr inbounds float, ptr %arg14, i32 %linear_index
  %43 = load float, ptr %42, align 4, !invariant.load !297
  %44 = getelementptr inbounds float, ptr %arg15, i32 %linear_index
  %45 = load float, ptr %44, align 4, !invariant.load !297
  %multiply.44 = fmul float %region_0_54_constant_21, %45
  %subtract.46 = fsub float %43, %multiply.44
  %46 = insertvalue { float, float, float, float, float, float, float, float, float, float } %41, float %subtract.46, 7
  %47 = getelementptr inbounds float, ptr %arg16, i32 %linear_index
  %48 = load float, ptr %47, align 4, !invariant.load !297
  %49 = getelementptr inbounds float, ptr %arg17, i32 %linear_index
  %50 = load float, ptr %49, align 4, !invariant.load !297
  %multiply.47 = fmul float %region_0_54_constant_21, %50
  %subtract.49 = fsub float %48, %multiply.47
  %51 = insertvalue { float, float, float, float, float, float, float, float, float, float } %46, float %subtract.49, 8
  %52 = getelementptr inbounds float, ptr %arg18, i32 %linear_index
  %53 = load float, ptr %52, align 4, !invariant.load !297
  %54 = getelementptr inbounds float, ptr %arg19, i32 %linear_index
  %55 = load float, ptr %54, align 4, !invariant.load !297
  %multiply.50 = fmul float %region_0_54_constant_21, %55
  %subtract.52 = fsub float %53, %multiply.50
  %56 = insertvalue { float, float, float, float, float, float, float, float, float, float } %51, float %subtract.52, 9
  %57 = extractvalue { float, float, float, float, float, float, float, float, float, float } %56, 0
  %58 = getelementptr inbounds float, ptr %arg20, i32 %linear_index
  store float %57, ptr %58, align 4
  %59 = extractvalue { float, float, float, float, float, float, float, float, float, float } %56, 1
  %60 = getelementptr inbounds float, ptr %arg21, i32 %linear_index
  store float %59, ptr %60, align 4
  %61 = extractvalue { float, float, float, float, float, float, float, float, float, float } %56, 2
  %62 = getelementptr inbounds float, ptr %arg22, i32 %linear_index
  store float %61, ptr %62, align 4
  %63 = extractvalue { float, float, float, float, float, float, float, float, float, float } %56, 3
  %64 = getelementptr inbounds float, ptr %arg23, i32 %linear_index
  store float %63, ptr %64, align 4
  %65 = extractvalue { float, float, float, float, float, float, float, float, float, float } %56, 4
  %66 = getelementptr inbounds float, ptr %arg24, i32 %linear_index
  store float %65, ptr %66, align 4
  %67 = extractvalue { float, float, float, float, float, float, float, float, float, float } %56, 5
  %68 = getelementptr inbounds float, ptr %arg25, i32 %linear_index
  store float %67, ptr %68, align 4
  %69 = extractvalue { float, float, float, float, float, float, float, float, float, float } %56, 6
  %70 = getelementptr inbounds float, ptr %arg26, i32 %linear_index
  store float %69, ptr %70, align 4
  %71 = extractvalue { float, float, float, float, float, float, float, float, float, float } %56, 7
  %72 = getelementptr inbounds float, ptr %arg27, i32 %linear_index
  store float %71, ptr %72, align 4
  %73 = extractvalue { float, float, float, float, float, float, float, float, float, float } %56, 8
  %74 = getelementptr inbounds float, ptr %arg28, i32 %linear_index
  store float %73, ptr %74, align 4
  %75 = extractvalue { float, float, float, float, float, float, float, float, float, float } %56, 9
  %76 = getelementptr inbounds float, ptr %arg29, i32 %linear_index
  store float %75, ptr %76, align 4
  br label %fusion_714.in_bounds-after
}

define void @fusion_202(ptr noalias align 128 dereferenceable(4194304) %arg0, ptr noalias align 128 dereferenceable(4194304) %arg1, ptr noalias align 128 dereferenceable(32768) %arg2, ptr noalias align 128 dereferenceable(4194304) %arg3) {
entry:
  %return_buffer58 = alloca float, align 4
  %result_from_other_lane56 = alloca float, align 4
  %return_buffer55 = alloca float, align 4
  %result_from_other_lane53 = alloca float, align 4
  %return_buffer52 = alloca float, align 4
  %result_from_other_lane50 = alloca float, align 4
  %return_buffer49 = alloca float, align 4
  %result_from_other_lane47 = alloca float, align 4
  %return_buffer46 = alloca float, align 4
  %result_from_other_lane44 = alloca float, align 4
  %return_buffer40 = alloca float, align 4
  %result_from_other_lane38 = alloca float, align 4
  %return_buffer37 = alloca float, align 4
  %result_from_other_lane35 = alloca float, align 4
  %return_buffer34 = alloca float, align 4
  %result_from_other_lane32 = alloca float, align 4
  %return_buffer31 = alloca float, align 4
  %result_from_other_lane29 = alloca float, align 4
  %return_buffer28 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer20 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, i32 2, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after60, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_15_constant_8 = load float, ptr @99, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_15_constant_8, ptr %2, align 4
  %3 = getelementptr inbounds float, ptr %partial_reduction_result, i32 1
  store float %region_0_15_constant_8, ptr %3, align 4
  %4 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %5 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !361
  %6 = urem i32 %4, 1024
  %7 = udiv i32 %4, 1024
  %8 = mul i32 %5, 1
  %9 = add i32 %8, %7
  %10 = icmp ult i32 %9, 128
  br i1 %10, label %11, label %early_return

11:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %6, 32
  %thread_id.y = udiv i32 %6, 32
  %lane_id = urem i32 %6, 32
  %12 = udiv i32 %9, 1
  %13 = urem i32 %12, 2
  %14 = udiv i32 %9, 2
  %15 = urem i32 %14, 1
  %16 = udiv i32 %9, 2
  %17 = icmp eq i32 %15, 0
  %tile_bound = select i1 %17, i32 128, i32 4096
  %18 = icmp eq i32 %13, 1
  %tile_bound1 = select i1 %18, i32 64, i32 64
  %tile_origin.0 = mul i32 %16, 1
  %tile_origin.1 = mul i32 %15, 4096
  %tile_origin.2 = mul i32 %13, 64
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %11
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %19 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %19, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %20 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %21 = mul i32 %thread_id.x, 2
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after13, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %22 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %22, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %23 = icmp eq i32 %tile_loop.indvar, 0
  %24 = mul i32 %tile_loop.indvar, 2
  %25 = add i32 %24, 0
  %x_loc = add i32 %25, %21
  %26 = add i32 %tile_origin.1, %y_in_tile.indvar
  %27 = add i32 %tile_origin.2, %x_loc
  %28 = icmp ult i32 %x_loc, %tile_bound1
  br i1 %28, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body
  %29 = mul i32 %tile_loop.indvar, 2
  %30 = add i32 %29, 1
  %x_loc11 = add i32 %30, %21
  %31 = add i32 %tile_origin.1, %y_in_tile.indvar
  %32 = add i32 %tile_origin.2, %x_loc11
  %33 = icmp ult i32 %x_loc11, %tile_bound1
  br i1 %33, label %x_in_tile-true12, label %x_in_tile-after13

x_in_tile-after13:                                ; preds = %x_in_tile-true12, %x_in_tile-after
  br label %tile_loop.loop_header, !llvm.loop !497

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !498

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache144, i32 0, i32 %7, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %34 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %35 = load float, ptr %current_output, align 4
  store float %35, ptr %34, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache144, i32 0, i32 %7, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %36 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result27 = load float, ptr %36, align 4
  %37 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result27, i32 16, i32 31)
  store float %37, ptr %result_from_other_lane, align 4
  call void @region_1_9__2(ptr %36, ptr %result_from_other_lane, ptr %return_buffer28)
  %38 = load float, ptr %return_buffer28, align 4
  store float %38, ptr %36, align 4
  %partial_reduction_result30 = load float, ptr %36, align 4
  %39 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result30, i32 8, i32 31)
  store float %39, ptr %result_from_other_lane29, align 4
  call void @region_1_9__2(ptr %36, ptr %result_from_other_lane29, ptr %return_buffer31)
  %40 = load float, ptr %return_buffer31, align 4
  store float %40, ptr %36, align 4
  %partial_reduction_result33 = load float, ptr %36, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result33, i32 4, i32 31)
  store float %41, ptr %result_from_other_lane32, align 4
  call void @region_1_9__2(ptr %36, ptr %result_from_other_lane32, ptr %return_buffer34)
  %42 = load float, ptr %return_buffer34, align 4
  store float %42, ptr %36, align 4
  %partial_reduction_result36 = load float, ptr %36, align 4
  %43 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result36, i32 2, i32 31)
  store float %43, ptr %result_from_other_lane35, align 4
  call void @region_1_9__2(ptr %36, ptr %result_from_other_lane35, ptr %return_buffer37)
  %44 = load float, ptr %return_buffer37, align 4
  store float %44, ptr %36, align 4
  %partial_reduction_result39 = load float, ptr %36, align 4
  %45 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result39, i32 1, i32 31)
  store float %45, ptr %result_from_other_lane38, align 4
  call void @region_1_9__2(ptr %36, ptr %result_from_other_lane38, ptr %return_buffer40)
  %46 = load float, ptr %return_buffer40, align 4
  store float %46, ptr %36, align 4
  %47 = icmp ult i32 %thread_id.x, %tile_bound
  %48 = mul i32 %thread_id.y, 2
  %49 = icmp ult i32 %48, %tile_bound1
  %50 = and i1 %49, %47
  %51 = icmp eq i32 %lane_id, 0
  %52 = and i1 %50, %51
  br i1 %52, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %shmem_output_address41 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache144, i32 0, i32 %7, i32 1, i32 %thread_id.x, i32 %thread_id.y
  %53 = addrspacecast ptr addrspace(3) %shmem_output_address41 to ptr
  %current_output42 = getelementptr inbounds float, ptr %partial_reduction_result, i32 1
  %54 = load float, ptr %current_output42, align 4
  store float %54, ptr %53, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr43 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache144, i32 0, i32 %7, i32 1, i32 %thread_id.y, i32 %thread_id.x
  %55 = addrspacecast ptr addrspace(3) %shmem_transposed_addr43 to ptr
  %partial_reduction_result45 = load float, ptr %55, align 4
  %56 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result45, i32 16, i32 31)
  store float %56, ptr %result_from_other_lane44, align 4
  call void @region_1_9__2(ptr %55, ptr %result_from_other_lane44, ptr %return_buffer46)
  %57 = load float, ptr %return_buffer46, align 4
  store float %57, ptr %55, align 4
  %partial_reduction_result48 = load float, ptr %55, align 4
  %58 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result48, i32 8, i32 31)
  store float %58, ptr %result_from_other_lane47, align 4
  call void @region_1_9__2(ptr %55, ptr %result_from_other_lane47, ptr %return_buffer49)
  %59 = load float, ptr %return_buffer49, align 4
  store float %59, ptr %55, align 4
  %partial_reduction_result51 = load float, ptr %55, align 4
  %60 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result51, i32 4, i32 31)
  store float %60, ptr %result_from_other_lane50, align 4
  call void @region_1_9__2(ptr %55, ptr %result_from_other_lane50, ptr %return_buffer52)
  %61 = load float, ptr %return_buffer52, align 4
  store float %61, ptr %55, align 4
  %partial_reduction_result54 = load float, ptr %55, align 4
  %62 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result54, i32 2, i32 31)
  store float %62, ptr %result_from_other_lane53, align 4
  call void @region_1_9__2(ptr %55, ptr %result_from_other_lane53, ptr %return_buffer55)
  %63 = load float, ptr %return_buffer55, align 4
  store float %63, ptr %55, align 4
  %partial_reduction_result57 = load float, ptr %55, align 4
  %64 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result57, i32 1, i32 31)
  store float %64, ptr %result_from_other_lane56, align 4
  call void @region_1_9__2(ptr %55, ptr %result_from_other_lane56, ptr %return_buffer58)
  %65 = load float, ptr %return_buffer58, align 4
  store float %65, ptr %55, align 4
  %66 = icmp ult i32 %thread_id.x, %tile_bound
  %67 = mul i32 %thread_id.y, 2
  %68 = icmp ult i32 %67, %tile_bound1
  %69 = and i1 %68, %66
  %70 = icmp eq i32 %lane_id, 0
  %71 = and i1 %69, %70
  br i1 %71, label %reduction_write_output-true59, label %reduction_write_output-after60

reduction_write_output-after60:                   ; preds = %reduction_write_output-true59, %reduction_write_output-after
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %72 = mul nuw nsw i32 %27, 1
  %73 = add nuw nsw i32 0, %72
  %74 = mul nuw nsw i32 %26, 128
  %75 = add nuw nsw i32 %73, %74
  %76 = mul nuw nsw i32 %tile_origin.0, 16384
  %77 = add nuw nsw i32 %75, %76
  %78 = udiv i32 %77, 1
  %79 = urem i32 %78, 128
  %80 = udiv i32 %77, 128
  %81 = urem i32 %80, 128
  %82 = udiv i32 %77, 16384
  %83 = mul i32 %thread_id.x, 2
  %84 = sub i32 %x_loc, %83
  %85 = mul nuw nsw i32 %79, 1
  %86 = add nuw nsw i32 0, %85
  %87 = udiv i32 %86, 128
  %88 = mul nuw nsw i32 %81, 1
  %89 = add nuw nsw i32 0, %88
  %90 = mul nuw nsw i32 %82, 128
  %91 = add nuw nsw i32 %89, %90
  %92 = udiv i32 %91, 8192
  %Arg_1.2 = getelementptr inbounds [8192 x [128 x float]], ptr %arg1, i32 0, i32 %91, i32 %86
  %Arg_1.23 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %region_0_15_constant_3 = load float, ptr @98, align 4
  %compare.5 = fcmp ogt float %Arg_1.23, %region_0_15_constant_3
  %93 = zext i1 %compare.5 to i8
  %Arg_0.1 = getelementptr inbounds [8192 x [128 x float]], ptr %arg0, i32 0, i32 %91, i32 %86
  %Arg_0.14 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %94 = trunc i8 %93 to i1
  %95 = select i1 %94, float %Arg_0.14, float %region_0_15_constant_3
  store float %95, ptr %reduction_input_address, align 4
  %96 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %84
  call void @region_1_9__2(ptr %96, ptr %reduction_input_address, ptr %return_buffer)
  %97 = load float, ptr %return_buffer, align 4
  store float %97, ptr %96, align 4
  %98 = mul nuw nsw i32 %79, 1
  %99 = add nuw nsw i32 0, %98
  %100 = udiv i32 %99, 128
  %101 = mul nuw nsw i32 %81, 1
  %102 = add nuw nsw i32 0, %101
  %103 = mul nuw nsw i32 %82, 128
  %104 = add nuw nsw i32 %102, %103
  %105 = udiv i32 %104, 8192
  %Arg_1.25 = getelementptr inbounds float, ptr %arg1, i32 %77
  %Arg_1.26 = load float, ptr %Arg_1.25, align 4, !invariant.load !297
  %region_0_15_constant_37 = load float, ptr @98, align 4
  %compare.58 = fcmp ogt float %Arg_1.26, %region_0_15_constant_37
  %106 = zext i1 %compare.58 to i8
  %Arg_0.19 = getelementptr inbounds float, ptr %arg0, i32 %77
  %Arg_0.110 = load float, ptr %Arg_0.19, align 4, !invariant.load !297
  %107 = trunc i8 %106 to i1
  %108 = select i1 %107, float %Arg_0.110, float %region_0_15_constant_37
  %109 = mul nuw nsw i32 %79, 1
  %110 = add nuw nsw i32 0, %109
  %111 = udiv i32 %110, 128
  %112 = mul nuw nsw i32 %81, 1
  %113 = add nuw nsw i32 0, %112
  %114 = mul nuw nsw i32 %82, 128
  %115 = add nuw nsw i32 %113, %114
  %116 = udiv i32 %115, 8192
  %117 = getelementptr inbounds [8192 x [128 x float]], ptr %arg3, i32 0, i32 %115, i32 %110
  store float %108, ptr %117, align 4
  br label %x_in_tile-after

x_in_tile-true12:                                 ; preds = %x_in_tile-after
  %118 = mul nuw nsw i32 %32, 1
  %119 = add nuw nsw i32 0, %118
  %120 = mul nuw nsw i32 %31, 128
  %121 = add nuw nsw i32 %119, %120
  %122 = mul nuw nsw i32 %tile_origin.0, 16384
  %123 = add nuw nsw i32 %121, %122
  %124 = udiv i32 %123, 1
  %125 = urem i32 %124, 128
  %126 = udiv i32 %123, 128
  %127 = urem i32 %126, 128
  %128 = udiv i32 %123, 16384
  %129 = mul i32 %thread_id.x, 2
  %130 = sub i32 %x_loc11, %129
  %131 = mul nuw nsw i32 %125, 1
  %132 = add nuw nsw i32 0, %131
  %133 = udiv i32 %132, 128
  %134 = mul nuw nsw i32 %127, 1
  %135 = add nuw nsw i32 0, %134
  %136 = mul nuw nsw i32 %128, 128
  %137 = add nuw nsw i32 %135, %136
  %138 = udiv i32 %137, 8192
  %Arg_1.214 = getelementptr inbounds [8192 x [128 x float]], ptr %arg1, i32 0, i32 %137, i32 %132
  %Arg_1.215 = load float, ptr %Arg_1.214, align 4, !invariant.load !297
  %region_0_15_constant_316 = load float, ptr @98, align 4
  %compare.517 = fcmp ogt float %Arg_1.215, %region_0_15_constant_316
  %139 = zext i1 %compare.517 to i8
  %Arg_0.118 = getelementptr inbounds [8192 x [128 x float]], ptr %arg0, i32 0, i32 %137, i32 %132
  %Arg_0.119 = load float, ptr %Arg_0.118, align 4, !invariant.load !297
  %140 = trunc i8 %139 to i1
  %141 = select i1 %140, float %Arg_0.119, float %region_0_15_constant_316
  store float %141, ptr %reduction_input_address, align 4
  %142 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %130
  call void @region_1_9__2(ptr %142, ptr %reduction_input_address, ptr %return_buffer20)
  %143 = load float, ptr %return_buffer20, align 4
  store float %143, ptr %142, align 4
  %144 = mul nuw nsw i32 %125, 1
  %145 = add nuw nsw i32 0, %144
  %146 = udiv i32 %145, 128
  %147 = mul nuw nsw i32 %127, 1
  %148 = add nuw nsw i32 0, %147
  %149 = mul nuw nsw i32 %128, 128
  %150 = add nuw nsw i32 %148, %149
  %151 = udiv i32 %150, 8192
  %Arg_1.221 = getelementptr inbounds float, ptr %arg1, i32 %123
  %Arg_1.222 = load float, ptr %Arg_1.221, align 4, !invariant.load !297
  %region_0_15_constant_323 = load float, ptr @98, align 4
  %compare.524 = fcmp ogt float %Arg_1.222, %region_0_15_constant_323
  %152 = zext i1 %compare.524 to i8
  %Arg_0.125 = getelementptr inbounds float, ptr %arg0, i32 %123
  %Arg_0.126 = load float, ptr %Arg_0.125, align 4, !invariant.load !297
  %153 = trunc i8 %152 to i1
  %154 = select i1 %153, float %Arg_0.126, float %region_0_15_constant_323
  %155 = mul nuw nsw i32 %125, 1
  %156 = add nuw nsw i32 0, %155
  %157 = udiv i32 %156, 128
  %158 = mul nuw nsw i32 %127, 1
  %159 = add nuw nsw i32 0, %158
  %160 = mul nuw nsw i32 %128, 128
  %161 = add nuw nsw i32 %159, %160
  %162 = udiv i32 %161, 8192
  %163 = getelementptr inbounds [8192 x [128 x float]], ptr %arg3, i32 0, i32 %161, i32 %156
  store float %154, ptr %163, align 4
  br label %x_in_tile-after13

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %164 = mul i32 %thread_id.y, 2
  %165 = add i32 %tile_origin.1, %thread_id.x
  %166 = add i32 %tile_origin.2, %164
  %167 = add i32 %166, 0
  %168 = mul i32 %tile_origin.0, 128
  %169 = add i32 %168, %167
  %170 = udiv i32 %169, 1
  %171 = urem i32 %170, 128
  %172 = udiv i32 %169, 128
  %output_element_address = getelementptr inbounds [64 x [128 x float]], ptr %arg2, i32 0, i32 %172, i32 %171
  %output = load float, ptr %36, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

reduction_write_output-true59:                    ; preds = %reduction_write_output-after
  %173 = mul i32 %thread_id.y, 2
  %174 = add i32 %tile_origin.1, %thread_id.x
  %175 = add i32 %tile_origin.2, %173
  %176 = add i32 %175, 1
  %177 = mul i32 %tile_origin.0, 128
  %178 = add i32 %177, %176
  %179 = udiv i32 %178, 1
  %180 = urem i32 %179, 128
  %181 = udiv i32 %178, 128
  %output_element_address61 = getelementptr inbounds [64 x [128 x float]], ptr %arg2, i32 0, i32 %181, i32 %180
  %output62 = load float, ptr %55, align 4
  store float %output62, ptr %output_element_address61, align 4
  br label %reduction_write_output-after60
}

define internal void @region_1_9__2(ptr dereferenceable(4) %Arg_0.10.typed, ptr dereferenceable(4) %Arg_1.11.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.12.typed = alloca float, align 4
  %Arg_0.10 = load float, ptr %Arg_0.10.typed, align 4
  %Arg_1.11 = load float, ptr %Arg_1.11.typed, align 4
  %add.12 = fadd float %Arg_0.10, %Arg_1.11
  store float %add.12, ptr %add.12.typed, align 4
  %load_ret_value = load float, ptr %add.12.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_727(ptr noalias align 16 dereferenceable(4096) %arg0, ptr noalias align 128 dereferenceable(12288) %arg1, ptr noalias align 16 dereferenceable(8192) %arg2, ptr noalias align 128 dereferenceable(4096) %arg3, ptr noalias align 128 dereferenceable(8192) %arg4) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !346
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 3072
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = icmp ult i32 %linear_index, 3072
  br i1 %4, label %fusion_727.in_bounds-true, label %fusion_727.in_bounds-after

fusion_727.in_bounds-after:                       ; preds = %slice1-after, %entry
  ret void

fusion_727.in_bounds-true:                        ; preds = %entry
  br label %concatenate.pivot.1024.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %5 = phi i32 [ 0, %concatenate.pivot.0. ]
  %6 = sub nsw i32 %3, %5
  %7 = mul nuw nsw i32 %6, 1
  %8 = add nuw nsw i32 0, %7
  %9 = urem i32 %8, 128
  %10 = udiv i32 %8, 128
  %11 = udiv i32 %10, 8
  %12 = getelementptr inbounds [8 x [128 x float]], ptr %arg0, i32 0, i32 %10, i32 %9
  %13 = load float, ptr %12, align 4, !invariant.load !297
  %region_0_19_constant_4 = load float, ptr @100, align 4
  %14 = add i32 %10, 16
  %15 = add i32 %9, 0
  %16 = getelementptr inbounds [24 x [128 x float]], ptr %arg1, i32 0, i32 %14, i32 %15
  %17 = load float, ptr %16, align 4, !invariant.load !297
  %multiply.7 = fmul float %region_0_19_constant_4, %17
  %subtract.8 = fsub float %13, %multiply.7
  br label %concatenate.15.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.1024.2
  %18 = phi i32 [ 1024, %concatenate.pivot.1024.2 ]
  %19 = sub nsw i32 %3, %18
  %20 = mul nuw nsw i32 %19, 1
  %21 = add nuw nsw i32 0, %20
  %22 = urem i32 %21, 128
  %23 = udiv i32 %21, 128
  %24 = udiv i32 %23, 16
  %25 = getelementptr inbounds [16 x [128 x float]], ptr %arg2, i32 0, i32 %23, i32 %22
  %26 = load float, ptr %25, align 4, !invariant.load !297
  %region_0_19_constant_41 = load float, ptr @100, align 4
  %27 = add i32 %23, 0
  %28 = add i32 %22, 0
  %29 = getelementptr inbounds [24 x [128 x float]], ptr %arg1, i32 0, i32 %27, i32 %28
  %30 = load float, ptr %29, align 4, !invariant.load !297
  %multiply.12 = fmul float %region_0_19_constant_41, %30
  %subtract.13 = fsub float %26, %multiply.12
  br label %concatenate.15.merge

concatenate.pivot.1024.:                          ; preds = %fusion_727.in_bounds-true
  %31 = icmp ult i32 %3, 1024
  br i1 %31, label %concatenate.pivot.0., label %concatenate.pivot.1024.2

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.1024.
  br label %concat_index_from_operand_id0

concatenate.pivot.1024.2:                         ; preds = %concatenate.pivot.1024.
  br label %concat_index_from_operand_id1

concatenate.15.merge:                             ; preds = %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %32 = phi float [ %subtract.8, %concat_index_from_operand_id0 ], [ %subtract.13, %concat_index_from_operand_id1 ]
  %33 = icmp sge i32 %3, 0
  %34 = icmp slt i32 %3, 1024
  %35 = and i1 %33, %34
  br i1 %35, label %slice0-true, label %slice0-after

slice0-after:                                     ; preds = %slice0-true, %concatenate.15.merge
  %36 = icmp sge i32 %3, 1024
  %37 = icmp slt i32 %3, 3072
  %38 = and i1 %36, %37
  br i1 %38, label %slice1-true, label %slice1-after

slice1-after:                                     ; preds = %slice1-true, %slice0-after
  br label %fusion_727.in_bounds-after

slice0-true:                                      ; preds = %concatenate.15.merge
  %39 = sub i32 %3, 0
  %40 = getelementptr inbounds [1024 x float], ptr %arg3, i32 0, i32 %39
  store float %32, ptr %40, align 4
  br label %slice0-after

slice1-true:                                      ; preds = %slice0-after
  %41 = sub i32 %3, 1024
  %42 = getelementptr inbounds [2048 x float], ptr %arg4, i32 0, i32 %41
  store float %32, ptr %42, align 4
  br label %slice1-after
}

define void @fusion_757(ptr noalias align 128 dereferenceable(32768) %arg0, ptr noalias align 128 dereferenceable(4) %arg1, ptr noalias align 128 dereferenceable(32768) %arg2, ptr noalias align 128 dereferenceable(32768) %arg3, ptr noalias align 128 dereferenceable(32768) %arg4, ptr noalias align 128 dereferenceable(512) %arg5, ptr noalias align 128 dereferenceable(512) %arg6, ptr noalias align 128 dereferenceable(512) %arg7, ptr noalias align 128 dereferenceable(512) %arg8) {
entry:
  %return_buffer278 = alloca float, align 4
  %result_from_other_lane276 = alloca float, align 4
  %return_buffer275 = alloca float, align 4
  %result_from_other_lane273 = alloca float, align 4
  %return_buffer272 = alloca float, align 4
  %result_from_other_lane270 = alloca float, align 4
  %return_buffer269 = alloca float, align 4
  %result_from_other_lane267 = alloca float, align 4
  %return_buffer266 = alloca float, align 4
  %result_from_other_lane264 = alloca float, align 4
  %return_buffer256 = alloca float, align 4
  %result_from_other_lane254 = alloca float, align 4
  %return_buffer253 = alloca float, align 4
  %result_from_other_lane251 = alloca float, align 4
  %return_buffer250 = alloca float, align 4
  %result_from_other_lane248 = alloca float, align 4
  %return_buffer247 = alloca float, align 4
  %result_from_other_lane245 = alloca float, align 4
  %return_buffer244 = alloca float, align 4
  %result_from_other_lane242 = alloca float, align 4
  %return_buffer238 = alloca float, align 4
  %return_buffer232 = alloca float, align 4
  %tile_loop.invar_address225 = alloca i32, align 4
  %y_in_tile.invar_address219 = alloca i32, align 4
  %partial_reduction_result205 = alloca float, i32 2, align 4
  %reduction_input_address204 = alloca float, align 4
  %return_buffer199 = alloca float, align 4
  %result_from_other_lane197 = alloca float, align 4
  %return_buffer196 = alloca float, align 4
  %result_from_other_lane194 = alloca float, align 4
  %return_buffer193 = alloca float, align 4
  %result_from_other_lane191 = alloca float, align 4
  %return_buffer190 = alloca float, align 4
  %result_from_other_lane188 = alloca float, align 4
  %return_buffer187 = alloca float, align 4
  %result_from_other_lane185 = alloca float, align 4
  %return_buffer177 = alloca float, align 4
  %result_from_other_lane175 = alloca float, align 4
  %return_buffer174 = alloca float, align 4
  %result_from_other_lane172 = alloca float, align 4
  %return_buffer171 = alloca float, align 4
  %result_from_other_lane169 = alloca float, align 4
  %return_buffer168 = alloca float, align 4
  %result_from_other_lane166 = alloca float, align 4
  %return_buffer165 = alloca float, align 4
  %result_from_other_lane163 = alloca float, align 4
  %return_buffer159 = alloca float, align 4
  %return_buffer153 = alloca float, align 4
  %tile_loop.invar_address146 = alloca i32, align 4
  %y_in_tile.invar_address140 = alloca i32, align 4
  %partial_reduction_result126 = alloca float, i32 2, align 4
  %reduction_input_address125 = alloca float, align 4
  %return_buffer120 = alloca float, align 4
  %result_from_other_lane118 = alloca float, align 4
  %return_buffer117 = alloca float, align 4
  %result_from_other_lane115 = alloca float, align 4
  %return_buffer114 = alloca float, align 4
  %result_from_other_lane112 = alloca float, align 4
  %return_buffer111 = alloca float, align 4
  %result_from_other_lane109 = alloca float, align 4
  %return_buffer108 = alloca float, align 4
  %result_from_other_lane106 = alloca float, align 4
  %return_buffer98 = alloca float, align 4
  %result_from_other_lane96 = alloca float, align 4
  %return_buffer95 = alloca float, align 4
  %result_from_other_lane93 = alloca float, align 4
  %return_buffer92 = alloca float, align 4
  %result_from_other_lane90 = alloca float, align 4
  %return_buffer89 = alloca float, align 4
  %result_from_other_lane87 = alloca float, align 4
  %return_buffer86 = alloca float, align 4
  %result_from_other_lane84 = alloca float, align 4
  %return_buffer80 = alloca float, align 4
  %return_buffer74 = alloca float, align 4
  %tile_loop.invar_address67 = alloca i32, align 4
  %y_in_tile.invar_address61 = alloca i32, align 4
  %partial_reduction_result47 = alloca float, i32 2, align 4
  %reduction_input_address46 = alloca float, align 4
  %return_buffer41 = alloca float, align 4
  %result_from_other_lane39 = alloca float, align 4
  %return_buffer38 = alloca float, align 4
  %result_from_other_lane36 = alloca float, align 4
  %return_buffer35 = alloca float, align 4
  %result_from_other_lane33 = alloca float, align 4
  %return_buffer32 = alloca float, align 4
  %result_from_other_lane30 = alloca float, align 4
  %return_buffer29 = alloca float, align 4
  %result_from_other_lane27 = alloca float, align 4
  %return_buffer23 = alloca float, align 4
  %result_from_other_lane21 = alloca float, align 4
  %return_buffer20 = alloca float, align 4
  %result_from_other_lane18 = alloca float, align 4
  %return_buffer17 = alloca float, align 4
  %result_from_other_lane15 = alloca float, align 4
  %return_buffer14 = alloca float, align 4
  %result_from_other_lane12 = alloca float, align 4
  %return_buffer11 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer9 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, i32 2, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !367
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after43, %entry
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %reduce-group-1-true, label %reduce-group-1-after

reduce-group-1-after:                             ; preds = %reduction_write_output-after122, %reduce-group-0-after
  %3 = icmp eq i32 %0, 2
  br i1 %3, label %reduce-group-2-true, label %reduce-group-2-after

reduce-group-2-after:                             ; preds = %reduction_write_output-after201, %reduce-group-1-after
  %4 = icmp eq i32 %0, 3
  br i1 %4, label %reduce-group-3-true, label %reduce-group-3-after

reduce-group-3-after:                             ; preds = %reduction_write_output-after280, %reduce-group-2-after
  ret void

reduce-group-0-true:                              ; preds = %entry
  %Arg_1.2 = load float, ptr %arg1, align 4, !invariant.load !297
  %5 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %Arg_1.2, ptr %5, align 4
  %6 = getelementptr inbounds float, ptr %partial_reduction_result, i32 1
  store float %Arg_1.2, ptr %6, align 4
  %7 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %8 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !344
  %9 = urem i32 %7, 1024
  %10 = udiv i32 %7, 1024
  %11 = mul i32 %8, 1
  %12 = add i32 %11, %10
  %13 = icmp ult i32 %12, 2
  br i1 %13, label %14, label %early_return

14:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %9, 32
  %thread_id.y = udiv i32 %9, 32
  %lane_id = urem i32 %9, 32
  %15 = udiv i32 %12, 1
  %16 = urem i32 %15, 2
  %17 = udiv i32 %12, 2
  %18 = urem i32 %17, 1
  %19 = udiv i32 %12, 2
  %20 = icmp eq i32 %18, 0
  %tile_bound = select i1 %20, i32 64, i32 4096
  %21 = icmp eq i32 %16, 1
  %tile_bound1 = select i1 %21, i32 64, i32 64
  %tile_origin.0 = mul i32 %19, 1
  %tile_origin.1 = mul i32 %18, 4096
  %tile_origin.2 = mul i32 %16, 64
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %14
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %22 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %22, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %23 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %24 = mul i32 %thread_id.x, 2
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after6, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %25 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %25, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %26 = icmp eq i32 %tile_loop.indvar, 0
  %27 = mul i32 %tile_loop.indvar, 2
  %28 = add i32 %27, 0
  %x_loc = add i32 %28, %24
  %29 = add i32 %tile_origin.1, %y_in_tile.indvar
  %30 = add i32 %tile_origin.2, %x_loc
  %31 = icmp ult i32 %x_loc, %tile_bound1
  br i1 %31, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body
  %32 = mul i32 %tile_loop.indvar, 2
  %33 = add i32 %32, 1
  %x_loc4 = add i32 %33, %24
  %34 = add i32 %tile_origin.1, %y_in_tile.indvar
  %35 = add i32 %tile_origin.2, %x_loc4
  %36 = icmp ult i32 %x_loc4, %tile_bound1
  br i1 %36, label %x_in_tile-true5, label %x_in_tile-after6

x_in_tile-after6:                                 ; preds = %x_in_tile-true5, %x_in_tile-after
  br label %tile_loop.loop_header, !llvm.loop !499

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !500

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache145, i32 0, i32 %10, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %37 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %38 = load float, ptr %current_output, align 4
  store float %38, ptr %37, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache145, i32 0, i32 %10, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %39 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result10 = load float, ptr %39, align 4
  %40 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result10, i32 16, i32 31)
  store float %40, ptr %result_from_other_lane, align 4
  call void @region_1_6(ptr %39, ptr %result_from_other_lane, ptr %return_buffer11)
  %41 = load float, ptr %return_buffer11, align 4
  store float %41, ptr %39, align 4
  %partial_reduction_result13 = load float, ptr %39, align 4
  %42 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result13, i32 8, i32 31)
  store float %42, ptr %result_from_other_lane12, align 4
  call void @region_1_6(ptr %39, ptr %result_from_other_lane12, ptr %return_buffer14)
  %43 = load float, ptr %return_buffer14, align 4
  store float %43, ptr %39, align 4
  %partial_reduction_result16 = load float, ptr %39, align 4
  %44 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result16, i32 4, i32 31)
  store float %44, ptr %result_from_other_lane15, align 4
  call void @region_1_6(ptr %39, ptr %result_from_other_lane15, ptr %return_buffer17)
  %45 = load float, ptr %return_buffer17, align 4
  store float %45, ptr %39, align 4
  %partial_reduction_result19 = load float, ptr %39, align 4
  %46 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result19, i32 2, i32 31)
  store float %46, ptr %result_from_other_lane18, align 4
  call void @region_1_6(ptr %39, ptr %result_from_other_lane18, ptr %return_buffer20)
  %47 = load float, ptr %return_buffer20, align 4
  store float %47, ptr %39, align 4
  %partial_reduction_result22 = load float, ptr %39, align 4
  %48 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result22, i32 1, i32 31)
  store float %48, ptr %result_from_other_lane21, align 4
  call void @region_1_6(ptr %39, ptr %result_from_other_lane21, ptr %return_buffer23)
  %49 = load float, ptr %return_buffer23, align 4
  store float %49, ptr %39, align 4
  %50 = icmp ult i32 %thread_id.x, %tile_bound
  %51 = mul i32 %thread_id.y, 2
  %52 = icmp ult i32 %51, %tile_bound1
  %53 = and i1 %52, %50
  %54 = icmp eq i32 %lane_id, 0
  %55 = and i1 %53, %54
  br i1 %55, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %shmem_output_address24 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache145, i32 0, i32 %10, i32 1, i32 %thread_id.x, i32 %thread_id.y
  %56 = addrspacecast ptr addrspace(3) %shmem_output_address24 to ptr
  %current_output25 = getelementptr inbounds float, ptr %partial_reduction_result, i32 1
  %57 = load float, ptr %current_output25, align 4
  store float %57, ptr %56, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr26 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache145, i32 0, i32 %10, i32 1, i32 %thread_id.y, i32 %thread_id.x
  %58 = addrspacecast ptr addrspace(3) %shmem_transposed_addr26 to ptr
  %partial_reduction_result28 = load float, ptr %58, align 4
  %59 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result28, i32 16, i32 31)
  store float %59, ptr %result_from_other_lane27, align 4
  call void @region_1_6(ptr %58, ptr %result_from_other_lane27, ptr %return_buffer29)
  %60 = load float, ptr %return_buffer29, align 4
  store float %60, ptr %58, align 4
  %partial_reduction_result31 = load float, ptr %58, align 4
  %61 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result31, i32 8, i32 31)
  store float %61, ptr %result_from_other_lane30, align 4
  call void @region_1_6(ptr %58, ptr %result_from_other_lane30, ptr %return_buffer32)
  %62 = load float, ptr %return_buffer32, align 4
  store float %62, ptr %58, align 4
  %partial_reduction_result34 = load float, ptr %58, align 4
  %63 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result34, i32 4, i32 31)
  store float %63, ptr %result_from_other_lane33, align 4
  call void @region_1_6(ptr %58, ptr %result_from_other_lane33, ptr %return_buffer35)
  %64 = load float, ptr %return_buffer35, align 4
  store float %64, ptr %58, align 4
  %partial_reduction_result37 = load float, ptr %58, align 4
  %65 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result37, i32 2, i32 31)
  store float %65, ptr %result_from_other_lane36, align 4
  call void @region_1_6(ptr %58, ptr %result_from_other_lane36, ptr %return_buffer38)
  %66 = load float, ptr %return_buffer38, align 4
  store float %66, ptr %58, align 4
  %partial_reduction_result40 = load float, ptr %58, align 4
  %67 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result40, i32 1, i32 31)
  store float %67, ptr %result_from_other_lane39, align 4
  call void @region_1_6(ptr %58, ptr %result_from_other_lane39, ptr %return_buffer41)
  %68 = load float, ptr %return_buffer41, align 4
  store float %68, ptr %58, align 4
  %69 = icmp ult i32 %thread_id.x, %tile_bound
  %70 = mul i32 %thread_id.y, 2
  %71 = icmp ult i32 %70, %tile_bound1
  %72 = and i1 %71, %69
  %73 = icmp eq i32 %lane_id, 0
  %74 = and i1 %72, %73
  br i1 %74, label %reduction_write_output-true42, label %reduction_write_output-after43

reduction_write_output-after43:                   ; preds = %reduction_write_output-true42, %reduction_write_output-after
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %75 = mul i32 %thread_id.x, 2
  %76 = sub i32 %x_loc, %75
  %Arg_0.1 = getelementptr inbounds [64 x [128 x float]], ptr %arg0, i32 0, i32 %29, i32 %30
  %Arg_0.13 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  store float %Arg_0.13, ptr %reduction_input_address, align 4
  %77 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %76
  call void @region_1_6(ptr %77, ptr %reduction_input_address, ptr %return_buffer)
  %78 = load float, ptr %return_buffer, align 4
  store float %78, ptr %77, align 4
  br label %x_in_tile-after

x_in_tile-true5:                                  ; preds = %x_in_tile-after
  %79 = mul i32 %thread_id.x, 2
  %80 = sub i32 %x_loc4, %79
  %Arg_0.17 = getelementptr inbounds [64 x [128 x float]], ptr %arg0, i32 0, i32 %34, i32 %35
  %Arg_0.18 = load float, ptr %Arg_0.17, align 4, !invariant.load !297
  store float %Arg_0.18, ptr %reduction_input_address, align 4
  %81 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %80
  call void @region_1_6(ptr %81, ptr %reduction_input_address, ptr %return_buffer9)
  %82 = load float, ptr %return_buffer9, align 4
  store float %82, ptr %81, align 4
  br label %x_in_tile-after6

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %83 = mul i32 %thread_id.y, 2
  %84 = add i32 %tile_origin.1, %thread_id.x
  %85 = add i32 %tile_origin.2, %83
  %86 = add i32 %85, 0
  %87 = mul i32 %tile_origin.0, 128
  %88 = add i32 %87, %86
  %89 = udiv i32 %88, 1
  %output_element_address = getelementptr inbounds [128 x float], ptr %arg5, i32 0, i32 %89
  %output = load float, ptr %39, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

reduction_write_output-true42:                    ; preds = %reduction_write_output-after
  %90 = mul i32 %thread_id.y, 2
  %91 = add i32 %tile_origin.1, %thread_id.x
  %92 = add i32 %tile_origin.2, %90
  %93 = add i32 %92, 1
  %94 = mul i32 %tile_origin.0, 128
  %95 = add i32 %94, %93
  %96 = udiv i32 %95, 1
  %output_element_address44 = getelementptr inbounds [128 x float], ptr %arg5, i32 0, i32 %96
  %output45 = load float, ptr %58, align 4
  store float %output45, ptr %output_element_address44, align 4
  br label %reduction_write_output-after43

reduce-group-1-true:                              ; preds = %reduce-group-0-after
  %Arg_1.248 = load float, ptr %arg1, align 4, !invariant.load !297
  %97 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 0
  store float %Arg_1.248, ptr %97, align 4
  %98 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 1
  store float %Arg_1.248, ptr %98, align 4
  %99 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %100 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !344
  %101 = urem i32 %99, 1024
  %102 = udiv i32 %99, 1024
  %103 = mul i32 %100, 1
  %104 = add i32 %103, %102
  %105 = icmp ult i32 %104, 2
  br i1 %105, label %106, label %early_return49

106:                                              ; preds = %reduce-group-1-true
  %thread_id.x50 = urem i32 %101, 32
  %thread_id.y51 = udiv i32 %101, 32
  %lane_id52 = urem i32 %101, 32
  %107 = udiv i32 %104, 1
  %108 = urem i32 %107, 2
  %109 = udiv i32 %104, 2
  %110 = urem i32 %109, 1
  %111 = udiv i32 %104, 2
  %112 = icmp eq i32 %110, 0
  %tile_bound53 = select i1 %112, i32 64, i32 4096
  %113 = icmp eq i32 %108, 1
  %tile_bound54 = select i1 %113, i32 64, i32 64
  %tile_origin.055 = mul i32 %111, 1
  %tile_origin.156 = mul i32 %110, 4096
  %tile_origin.257 = mul i32 %108, 64
  store i32 %thread_id.y51, ptr %y_in_tile.invar_address61, align 4
  br label %y_in_tile.loop_header59

y_in_tile.loop_header59:                          ; preds = %tile_loop.loop_exit64, %106
  %y_in_tile.indvar62 = load i32, ptr %y_in_tile.invar_address61, align 4
  %114 = icmp uge i32 %y_in_tile.indvar62, %tile_bound53
  br i1 %114, label %y_in_tile.loop_exit58, label %y_in_tile.loop_body60

y_in_tile.loop_body60:                            ; preds = %y_in_tile.loop_header59
  %invar.inc63 = add nuw nsw i32 %y_in_tile.indvar62, 32
  store i32 %invar.inc63, ptr %y_in_tile.invar_address61, align 4
  %115 = icmp eq i32 %y_in_tile.indvar62, %thread_id.y51
  %116 = mul i32 %thread_id.x50, 2
  store i32 0, ptr %tile_loop.invar_address67, align 4
  br label %tile_loop.loop_header65

tile_loop.loop_header65:                          ; preds = %x_in_tile-after77, %y_in_tile.loop_body60
  %tile_loop.indvar68 = load i32, ptr %tile_loop.invar_address67, align 4
  %117 = icmp uge i32 %tile_loop.indvar68, 1
  br i1 %117, label %tile_loop.loop_exit64, label %tile_loop.loop_body66

tile_loop.loop_body66:                            ; preds = %tile_loop.loop_header65
  %invar.inc69 = add nuw nsw i32 %tile_loop.indvar68, 1
  store i32 %invar.inc69, ptr %tile_loop.invar_address67, align 4
  %118 = icmp eq i32 %tile_loop.indvar68, 0
  %119 = mul i32 %tile_loop.indvar68, 2
  %120 = add i32 %119, 0
  %x_loc70 = add i32 %120, %116
  %121 = add i32 %tile_origin.156, %y_in_tile.indvar62
  %122 = add i32 %tile_origin.257, %x_loc70
  %123 = icmp ult i32 %x_loc70, %tile_bound54
  br i1 %123, label %x_in_tile-true71, label %x_in_tile-after72

x_in_tile-after72:                                ; preds = %x_in_tile-true71, %tile_loop.loop_body66
  %124 = mul i32 %tile_loop.indvar68, 2
  %125 = add i32 %124, 1
  %x_loc75 = add i32 %125, %116
  %126 = add i32 %tile_origin.156, %y_in_tile.indvar62
  %127 = add i32 %tile_origin.257, %x_loc75
  %128 = icmp ult i32 %x_loc75, %tile_bound54
  br i1 %128, label %x_in_tile-true76, label %x_in_tile-after77

x_in_tile-after77:                                ; preds = %x_in_tile-true76, %x_in_tile-after72
  br label %tile_loop.loop_header65, !llvm.loop !501

tile_loop.loop_exit64:                            ; preds = %tile_loop.loop_header65
  br label %y_in_tile.loop_header59, !llvm.loop !502

y_in_tile.loop_exit58:                            ; preds = %y_in_tile.loop_header59
  %shmem_output_address81 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache146, i32 0, i32 %102, i32 0, i32 %thread_id.x50, i32 %thread_id.y51
  %129 = addrspacecast ptr addrspace(3) %shmem_output_address81 to ptr
  %current_output82 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 0
  %130 = load float, ptr %current_output82, align 4
  store float %130, ptr %129, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr83 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache146, i32 0, i32 %102, i32 0, i32 %thread_id.y51, i32 %thread_id.x50
  %131 = addrspacecast ptr addrspace(3) %shmem_transposed_addr83 to ptr
  %partial_reduction_result85 = load float, ptr %131, align 4
  %132 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result85, i32 16, i32 31)
  store float %132, ptr %result_from_other_lane84, align 4
  call void @region_2_11(ptr %131, ptr %result_from_other_lane84, ptr %return_buffer86)
  %133 = load float, ptr %return_buffer86, align 4
  store float %133, ptr %131, align 4
  %partial_reduction_result88 = load float, ptr %131, align 4
  %134 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result88, i32 8, i32 31)
  store float %134, ptr %result_from_other_lane87, align 4
  call void @region_2_11(ptr %131, ptr %result_from_other_lane87, ptr %return_buffer89)
  %135 = load float, ptr %return_buffer89, align 4
  store float %135, ptr %131, align 4
  %partial_reduction_result91 = load float, ptr %131, align 4
  %136 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result91, i32 4, i32 31)
  store float %136, ptr %result_from_other_lane90, align 4
  call void @region_2_11(ptr %131, ptr %result_from_other_lane90, ptr %return_buffer92)
  %137 = load float, ptr %return_buffer92, align 4
  store float %137, ptr %131, align 4
  %partial_reduction_result94 = load float, ptr %131, align 4
  %138 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result94, i32 2, i32 31)
  store float %138, ptr %result_from_other_lane93, align 4
  call void @region_2_11(ptr %131, ptr %result_from_other_lane93, ptr %return_buffer95)
  %139 = load float, ptr %return_buffer95, align 4
  store float %139, ptr %131, align 4
  %partial_reduction_result97 = load float, ptr %131, align 4
  %140 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result97, i32 1, i32 31)
  store float %140, ptr %result_from_other_lane96, align 4
  call void @region_2_11(ptr %131, ptr %result_from_other_lane96, ptr %return_buffer98)
  %141 = load float, ptr %return_buffer98, align 4
  store float %141, ptr %131, align 4
  %142 = icmp ult i32 %thread_id.x50, %tile_bound53
  %143 = mul i32 %thread_id.y51, 2
  %144 = icmp ult i32 %143, %tile_bound54
  %145 = and i1 %144, %142
  %146 = icmp eq i32 %lane_id52, 0
  %147 = and i1 %145, %146
  br i1 %147, label %reduction_write_output-true99, label %reduction_write_output-after100

reduction_write_output-after100:                  ; preds = %reduction_write_output-true99, %y_in_tile.loop_exit58
  %shmem_output_address103 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache146, i32 0, i32 %102, i32 1, i32 %thread_id.x50, i32 %thread_id.y51
  %148 = addrspacecast ptr addrspace(3) %shmem_output_address103 to ptr
  %current_output104 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 1
  %149 = load float, ptr %current_output104, align 4
  store float %149, ptr %148, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr105 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache146, i32 0, i32 %102, i32 1, i32 %thread_id.y51, i32 %thread_id.x50
  %150 = addrspacecast ptr addrspace(3) %shmem_transposed_addr105 to ptr
  %partial_reduction_result107 = load float, ptr %150, align 4
  %151 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result107, i32 16, i32 31)
  store float %151, ptr %result_from_other_lane106, align 4
  call void @region_2_11(ptr %150, ptr %result_from_other_lane106, ptr %return_buffer108)
  %152 = load float, ptr %return_buffer108, align 4
  store float %152, ptr %150, align 4
  %partial_reduction_result110 = load float, ptr %150, align 4
  %153 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result110, i32 8, i32 31)
  store float %153, ptr %result_from_other_lane109, align 4
  call void @region_2_11(ptr %150, ptr %result_from_other_lane109, ptr %return_buffer111)
  %154 = load float, ptr %return_buffer111, align 4
  store float %154, ptr %150, align 4
  %partial_reduction_result113 = load float, ptr %150, align 4
  %155 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result113, i32 4, i32 31)
  store float %155, ptr %result_from_other_lane112, align 4
  call void @region_2_11(ptr %150, ptr %result_from_other_lane112, ptr %return_buffer114)
  %156 = load float, ptr %return_buffer114, align 4
  store float %156, ptr %150, align 4
  %partial_reduction_result116 = load float, ptr %150, align 4
  %157 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result116, i32 2, i32 31)
  store float %157, ptr %result_from_other_lane115, align 4
  call void @region_2_11(ptr %150, ptr %result_from_other_lane115, ptr %return_buffer117)
  %158 = load float, ptr %return_buffer117, align 4
  store float %158, ptr %150, align 4
  %partial_reduction_result119 = load float, ptr %150, align 4
  %159 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result119, i32 1, i32 31)
  store float %159, ptr %result_from_other_lane118, align 4
  call void @region_2_11(ptr %150, ptr %result_from_other_lane118, ptr %return_buffer120)
  %160 = load float, ptr %return_buffer120, align 4
  store float %160, ptr %150, align 4
  %161 = icmp ult i32 %thread_id.x50, %tile_bound53
  %162 = mul i32 %thread_id.y51, 2
  %163 = icmp ult i32 %162, %tile_bound54
  %164 = and i1 %163, %161
  %165 = icmp eq i32 %lane_id52, 0
  %166 = and i1 %164, %165
  br i1 %166, label %reduction_write_output-true121, label %reduction_write_output-after122

reduction_write_output-after122:                  ; preds = %reduction_write_output-true121, %reduction_write_output-after100
  br label %reduce-group-1-after

early_return49:                                   ; preds = %reduce-group-1-true
  ret void

x_in_tile-true71:                                 ; preds = %tile_loop.loop_body66
  %167 = mul i32 %thread_id.x50, 2
  %168 = sub i32 %x_loc70, %167
  %Arg_2.3 = getelementptr inbounds [64 x [128 x float]], ptr %arg2, i32 0, i32 %121, i32 %122
  %Arg_2.373 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  store float %Arg_2.373, ptr %reduction_input_address46, align 4
  %169 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 %168
  call void @region_2_11(ptr %169, ptr %reduction_input_address46, ptr %return_buffer74)
  %170 = load float, ptr %return_buffer74, align 4
  store float %170, ptr %169, align 4
  br label %x_in_tile-after72

x_in_tile-true76:                                 ; preds = %x_in_tile-after72
  %171 = mul i32 %thread_id.x50, 2
  %172 = sub i32 %x_loc75, %171
  %Arg_2.378 = getelementptr inbounds [64 x [128 x float]], ptr %arg2, i32 0, i32 %126, i32 %127
  %Arg_2.379 = load float, ptr %Arg_2.378, align 4, !invariant.load !297
  store float %Arg_2.379, ptr %reduction_input_address46, align 4
  %173 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 %172
  call void @region_2_11(ptr %173, ptr %reduction_input_address46, ptr %return_buffer80)
  %174 = load float, ptr %return_buffer80, align 4
  store float %174, ptr %173, align 4
  br label %x_in_tile-after77

reduction_write_output-true99:                    ; preds = %y_in_tile.loop_exit58
  %175 = mul i32 %thread_id.y51, 2
  %176 = add i32 %tile_origin.156, %thread_id.x50
  %177 = add i32 %tile_origin.257, %175
  %178 = add i32 %177, 0
  %179 = mul i32 %tile_origin.055, 128
  %180 = add i32 %179, %178
  %181 = udiv i32 %180, 1
  %output_element_address101 = getelementptr inbounds [128 x float], ptr %arg6, i32 0, i32 %181
  %output102 = load float, ptr %131, align 4
  store float %output102, ptr %output_element_address101, align 4
  br label %reduction_write_output-after100

reduction_write_output-true121:                   ; preds = %reduction_write_output-after100
  %182 = mul i32 %thread_id.y51, 2
  %183 = add i32 %tile_origin.156, %thread_id.x50
  %184 = add i32 %tile_origin.257, %182
  %185 = add i32 %184, 1
  %186 = mul i32 %tile_origin.055, 128
  %187 = add i32 %186, %185
  %188 = udiv i32 %187, 1
  %output_element_address123 = getelementptr inbounds [128 x float], ptr %arg6, i32 0, i32 %188
  %output124 = load float, ptr %150, align 4
  store float %output124, ptr %output_element_address123, align 4
  br label %reduction_write_output-after122

reduce-group-2-true:                              ; preds = %reduce-group-1-after
  %Arg_1.2127 = load float, ptr %arg1, align 4, !invariant.load !297
  %189 = getelementptr inbounds float, ptr %partial_reduction_result126, i32 0
  store float %Arg_1.2127, ptr %189, align 4
  %190 = getelementptr inbounds float, ptr %partial_reduction_result126, i32 1
  store float %Arg_1.2127, ptr %190, align 4
  %191 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %192 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !344
  %193 = urem i32 %191, 1024
  %194 = udiv i32 %191, 1024
  %195 = mul i32 %192, 1
  %196 = add i32 %195, %194
  %197 = icmp ult i32 %196, 2
  br i1 %197, label %198, label %early_return128

198:                                              ; preds = %reduce-group-2-true
  %thread_id.x129 = urem i32 %193, 32
  %thread_id.y130 = udiv i32 %193, 32
  %lane_id131 = urem i32 %193, 32
  %199 = udiv i32 %196, 1
  %200 = urem i32 %199, 2
  %201 = udiv i32 %196, 2
  %202 = urem i32 %201, 1
  %203 = udiv i32 %196, 2
  %204 = icmp eq i32 %202, 0
  %tile_bound132 = select i1 %204, i32 64, i32 4096
  %205 = icmp eq i32 %200, 1
  %tile_bound133 = select i1 %205, i32 64, i32 64
  %tile_origin.0134 = mul i32 %203, 1
  %tile_origin.1135 = mul i32 %202, 4096
  %tile_origin.2136 = mul i32 %200, 64
  store i32 %thread_id.y130, ptr %y_in_tile.invar_address140, align 4
  br label %y_in_tile.loop_header138

y_in_tile.loop_header138:                         ; preds = %tile_loop.loop_exit143, %198
  %y_in_tile.indvar141 = load i32, ptr %y_in_tile.invar_address140, align 4
  %206 = icmp uge i32 %y_in_tile.indvar141, %tile_bound132
  br i1 %206, label %y_in_tile.loop_exit137, label %y_in_tile.loop_body139

y_in_tile.loop_body139:                           ; preds = %y_in_tile.loop_header138
  %invar.inc142 = add nuw nsw i32 %y_in_tile.indvar141, 32
  store i32 %invar.inc142, ptr %y_in_tile.invar_address140, align 4
  %207 = icmp eq i32 %y_in_tile.indvar141, %thread_id.y130
  %208 = mul i32 %thread_id.x129, 2
  store i32 0, ptr %tile_loop.invar_address146, align 4
  br label %tile_loop.loop_header144

tile_loop.loop_header144:                         ; preds = %x_in_tile-after156, %y_in_tile.loop_body139
  %tile_loop.indvar147 = load i32, ptr %tile_loop.invar_address146, align 4
  %209 = icmp uge i32 %tile_loop.indvar147, 1
  br i1 %209, label %tile_loop.loop_exit143, label %tile_loop.loop_body145

tile_loop.loop_body145:                           ; preds = %tile_loop.loop_header144
  %invar.inc148 = add nuw nsw i32 %tile_loop.indvar147, 1
  store i32 %invar.inc148, ptr %tile_loop.invar_address146, align 4
  %210 = icmp eq i32 %tile_loop.indvar147, 0
  %211 = mul i32 %tile_loop.indvar147, 2
  %212 = add i32 %211, 0
  %x_loc149 = add i32 %212, %208
  %213 = add i32 %tile_origin.1135, %y_in_tile.indvar141
  %214 = add i32 %tile_origin.2136, %x_loc149
  %215 = icmp ult i32 %x_loc149, %tile_bound133
  br i1 %215, label %x_in_tile-true150, label %x_in_tile-after151

x_in_tile-after151:                               ; preds = %x_in_tile-true150, %tile_loop.loop_body145
  %216 = mul i32 %tile_loop.indvar147, 2
  %217 = add i32 %216, 1
  %x_loc154 = add i32 %217, %208
  %218 = add i32 %tile_origin.1135, %y_in_tile.indvar141
  %219 = add i32 %tile_origin.2136, %x_loc154
  %220 = icmp ult i32 %x_loc154, %tile_bound133
  br i1 %220, label %x_in_tile-true155, label %x_in_tile-after156

x_in_tile-after156:                               ; preds = %x_in_tile-true155, %x_in_tile-after151
  br label %tile_loop.loop_header144, !llvm.loop !503

tile_loop.loop_exit143:                           ; preds = %tile_loop.loop_header144
  br label %y_in_tile.loop_header138, !llvm.loop !504

y_in_tile.loop_exit137:                           ; preds = %y_in_tile.loop_header138
  %shmem_output_address160 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache147, i32 0, i32 %194, i32 0, i32 %thread_id.x129, i32 %thread_id.y130
  %221 = addrspacecast ptr addrspace(3) %shmem_output_address160 to ptr
  %current_output161 = getelementptr inbounds float, ptr %partial_reduction_result126, i32 0
  %222 = load float, ptr %current_output161, align 4
  store float %222, ptr %221, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr162 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache147, i32 0, i32 %194, i32 0, i32 %thread_id.y130, i32 %thread_id.x129
  %223 = addrspacecast ptr addrspace(3) %shmem_transposed_addr162 to ptr
  %partial_reduction_result164 = load float, ptr %223, align 4
  %224 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result164, i32 16, i32 31)
  store float %224, ptr %result_from_other_lane163, align 4
  call void @region_3_16(ptr %223, ptr %result_from_other_lane163, ptr %return_buffer165)
  %225 = load float, ptr %return_buffer165, align 4
  store float %225, ptr %223, align 4
  %partial_reduction_result167 = load float, ptr %223, align 4
  %226 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result167, i32 8, i32 31)
  store float %226, ptr %result_from_other_lane166, align 4
  call void @region_3_16(ptr %223, ptr %result_from_other_lane166, ptr %return_buffer168)
  %227 = load float, ptr %return_buffer168, align 4
  store float %227, ptr %223, align 4
  %partial_reduction_result170 = load float, ptr %223, align 4
  %228 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result170, i32 4, i32 31)
  store float %228, ptr %result_from_other_lane169, align 4
  call void @region_3_16(ptr %223, ptr %result_from_other_lane169, ptr %return_buffer171)
  %229 = load float, ptr %return_buffer171, align 4
  store float %229, ptr %223, align 4
  %partial_reduction_result173 = load float, ptr %223, align 4
  %230 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result173, i32 2, i32 31)
  store float %230, ptr %result_from_other_lane172, align 4
  call void @region_3_16(ptr %223, ptr %result_from_other_lane172, ptr %return_buffer174)
  %231 = load float, ptr %return_buffer174, align 4
  store float %231, ptr %223, align 4
  %partial_reduction_result176 = load float, ptr %223, align 4
  %232 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result176, i32 1, i32 31)
  store float %232, ptr %result_from_other_lane175, align 4
  call void @region_3_16(ptr %223, ptr %result_from_other_lane175, ptr %return_buffer177)
  %233 = load float, ptr %return_buffer177, align 4
  store float %233, ptr %223, align 4
  %234 = icmp ult i32 %thread_id.x129, %tile_bound132
  %235 = mul i32 %thread_id.y130, 2
  %236 = icmp ult i32 %235, %tile_bound133
  %237 = and i1 %236, %234
  %238 = icmp eq i32 %lane_id131, 0
  %239 = and i1 %237, %238
  br i1 %239, label %reduction_write_output-true178, label %reduction_write_output-after179

reduction_write_output-after179:                  ; preds = %reduction_write_output-true178, %y_in_tile.loop_exit137
  %shmem_output_address182 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache147, i32 0, i32 %194, i32 1, i32 %thread_id.x129, i32 %thread_id.y130
  %240 = addrspacecast ptr addrspace(3) %shmem_output_address182 to ptr
  %current_output183 = getelementptr inbounds float, ptr %partial_reduction_result126, i32 1
  %241 = load float, ptr %current_output183, align 4
  store float %241, ptr %240, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr184 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache147, i32 0, i32 %194, i32 1, i32 %thread_id.y130, i32 %thread_id.x129
  %242 = addrspacecast ptr addrspace(3) %shmem_transposed_addr184 to ptr
  %partial_reduction_result186 = load float, ptr %242, align 4
  %243 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result186, i32 16, i32 31)
  store float %243, ptr %result_from_other_lane185, align 4
  call void @region_3_16(ptr %242, ptr %result_from_other_lane185, ptr %return_buffer187)
  %244 = load float, ptr %return_buffer187, align 4
  store float %244, ptr %242, align 4
  %partial_reduction_result189 = load float, ptr %242, align 4
  %245 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result189, i32 8, i32 31)
  store float %245, ptr %result_from_other_lane188, align 4
  call void @region_3_16(ptr %242, ptr %result_from_other_lane188, ptr %return_buffer190)
  %246 = load float, ptr %return_buffer190, align 4
  store float %246, ptr %242, align 4
  %partial_reduction_result192 = load float, ptr %242, align 4
  %247 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result192, i32 4, i32 31)
  store float %247, ptr %result_from_other_lane191, align 4
  call void @region_3_16(ptr %242, ptr %result_from_other_lane191, ptr %return_buffer193)
  %248 = load float, ptr %return_buffer193, align 4
  store float %248, ptr %242, align 4
  %partial_reduction_result195 = load float, ptr %242, align 4
  %249 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result195, i32 2, i32 31)
  store float %249, ptr %result_from_other_lane194, align 4
  call void @region_3_16(ptr %242, ptr %result_from_other_lane194, ptr %return_buffer196)
  %250 = load float, ptr %return_buffer196, align 4
  store float %250, ptr %242, align 4
  %partial_reduction_result198 = load float, ptr %242, align 4
  %251 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result198, i32 1, i32 31)
  store float %251, ptr %result_from_other_lane197, align 4
  call void @region_3_16(ptr %242, ptr %result_from_other_lane197, ptr %return_buffer199)
  %252 = load float, ptr %return_buffer199, align 4
  store float %252, ptr %242, align 4
  %253 = icmp ult i32 %thread_id.x129, %tile_bound132
  %254 = mul i32 %thread_id.y130, 2
  %255 = icmp ult i32 %254, %tile_bound133
  %256 = and i1 %255, %253
  %257 = icmp eq i32 %lane_id131, 0
  %258 = and i1 %256, %257
  br i1 %258, label %reduction_write_output-true200, label %reduction_write_output-after201

reduction_write_output-after201:                  ; preds = %reduction_write_output-true200, %reduction_write_output-after179
  br label %reduce-group-2-after

early_return128:                                  ; preds = %reduce-group-2-true
  ret void

x_in_tile-true150:                                ; preds = %tile_loop.loop_body145
  %259 = mul i32 %thread_id.x129, 2
  %260 = sub i32 %x_loc149, %259
  %Arg_3.4 = getelementptr inbounds [64 x [128 x float]], ptr %arg3, i32 0, i32 %213, i32 %214
  %Arg_3.4152 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  store float %Arg_3.4152, ptr %reduction_input_address125, align 4
  %261 = getelementptr inbounds float, ptr %partial_reduction_result126, i32 %260
  call void @region_3_16(ptr %261, ptr %reduction_input_address125, ptr %return_buffer153)
  %262 = load float, ptr %return_buffer153, align 4
  store float %262, ptr %261, align 4
  br label %x_in_tile-after151

x_in_tile-true155:                                ; preds = %x_in_tile-after151
  %263 = mul i32 %thread_id.x129, 2
  %264 = sub i32 %x_loc154, %263
  %Arg_3.4157 = getelementptr inbounds [64 x [128 x float]], ptr %arg3, i32 0, i32 %218, i32 %219
  %Arg_3.4158 = load float, ptr %Arg_3.4157, align 4, !invariant.load !297
  store float %Arg_3.4158, ptr %reduction_input_address125, align 4
  %265 = getelementptr inbounds float, ptr %partial_reduction_result126, i32 %264
  call void @region_3_16(ptr %265, ptr %reduction_input_address125, ptr %return_buffer159)
  %266 = load float, ptr %return_buffer159, align 4
  store float %266, ptr %265, align 4
  br label %x_in_tile-after156

reduction_write_output-true178:                   ; preds = %y_in_tile.loop_exit137
  %267 = mul i32 %thread_id.y130, 2
  %268 = add i32 %tile_origin.1135, %thread_id.x129
  %269 = add i32 %tile_origin.2136, %267
  %270 = add i32 %269, 0
  %271 = mul i32 %tile_origin.0134, 128
  %272 = add i32 %271, %270
  %273 = udiv i32 %272, 1
  %output_element_address180 = getelementptr inbounds [128 x float], ptr %arg7, i32 0, i32 %273
  %output181 = load float, ptr %223, align 4
  store float %output181, ptr %output_element_address180, align 4
  br label %reduction_write_output-after179

reduction_write_output-true200:                   ; preds = %reduction_write_output-after179
  %274 = mul i32 %thread_id.y130, 2
  %275 = add i32 %tile_origin.1135, %thread_id.x129
  %276 = add i32 %tile_origin.2136, %274
  %277 = add i32 %276, 1
  %278 = mul i32 %tile_origin.0134, 128
  %279 = add i32 %278, %277
  %280 = udiv i32 %279, 1
  %output_element_address202 = getelementptr inbounds [128 x float], ptr %arg7, i32 0, i32 %280
  %output203 = load float, ptr %242, align 4
  store float %output203, ptr %output_element_address202, align 4
  br label %reduction_write_output-after201

reduce-group-3-true:                              ; preds = %reduce-group-2-after
  %Arg_1.2206 = load float, ptr %arg1, align 4, !invariant.load !297
  %281 = getelementptr inbounds float, ptr %partial_reduction_result205, i32 0
  store float %Arg_1.2206, ptr %281, align 4
  %282 = getelementptr inbounds float, ptr %partial_reduction_result205, i32 1
  store float %Arg_1.2206, ptr %282, align 4
  %283 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %284 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !344
  %285 = urem i32 %283, 1024
  %286 = udiv i32 %283, 1024
  %287 = mul i32 %284, 1
  %288 = add i32 %287, %286
  %289 = icmp ult i32 %288, 2
  br i1 %289, label %290, label %early_return207

290:                                              ; preds = %reduce-group-3-true
  %thread_id.x208 = urem i32 %285, 32
  %thread_id.y209 = udiv i32 %285, 32
  %lane_id210 = urem i32 %285, 32
  %291 = udiv i32 %288, 1
  %292 = urem i32 %291, 2
  %293 = udiv i32 %288, 2
  %294 = urem i32 %293, 1
  %295 = udiv i32 %288, 2
  %296 = icmp eq i32 %294, 0
  %tile_bound211 = select i1 %296, i32 64, i32 4096
  %297 = icmp eq i32 %292, 1
  %tile_bound212 = select i1 %297, i32 64, i32 64
  %tile_origin.0213 = mul i32 %295, 1
  %tile_origin.1214 = mul i32 %294, 4096
  %tile_origin.2215 = mul i32 %292, 64
  store i32 %thread_id.y209, ptr %y_in_tile.invar_address219, align 4
  br label %y_in_tile.loop_header217

y_in_tile.loop_header217:                         ; preds = %tile_loop.loop_exit222, %290
  %y_in_tile.indvar220 = load i32, ptr %y_in_tile.invar_address219, align 4
  %298 = icmp uge i32 %y_in_tile.indvar220, %tile_bound211
  br i1 %298, label %y_in_tile.loop_exit216, label %y_in_tile.loop_body218

y_in_tile.loop_body218:                           ; preds = %y_in_tile.loop_header217
  %invar.inc221 = add nuw nsw i32 %y_in_tile.indvar220, 32
  store i32 %invar.inc221, ptr %y_in_tile.invar_address219, align 4
  %299 = icmp eq i32 %y_in_tile.indvar220, %thread_id.y209
  %300 = mul i32 %thread_id.x208, 2
  store i32 0, ptr %tile_loop.invar_address225, align 4
  br label %tile_loop.loop_header223

tile_loop.loop_header223:                         ; preds = %x_in_tile-after235, %y_in_tile.loop_body218
  %tile_loop.indvar226 = load i32, ptr %tile_loop.invar_address225, align 4
  %301 = icmp uge i32 %tile_loop.indvar226, 1
  br i1 %301, label %tile_loop.loop_exit222, label %tile_loop.loop_body224

tile_loop.loop_body224:                           ; preds = %tile_loop.loop_header223
  %invar.inc227 = add nuw nsw i32 %tile_loop.indvar226, 1
  store i32 %invar.inc227, ptr %tile_loop.invar_address225, align 4
  %302 = icmp eq i32 %tile_loop.indvar226, 0
  %303 = mul i32 %tile_loop.indvar226, 2
  %304 = add i32 %303, 0
  %x_loc228 = add i32 %304, %300
  %305 = add i32 %tile_origin.1214, %y_in_tile.indvar220
  %306 = add i32 %tile_origin.2215, %x_loc228
  %307 = icmp ult i32 %x_loc228, %tile_bound212
  br i1 %307, label %x_in_tile-true229, label %x_in_tile-after230

x_in_tile-after230:                               ; preds = %x_in_tile-true229, %tile_loop.loop_body224
  %308 = mul i32 %tile_loop.indvar226, 2
  %309 = add i32 %308, 1
  %x_loc233 = add i32 %309, %300
  %310 = add i32 %tile_origin.1214, %y_in_tile.indvar220
  %311 = add i32 %tile_origin.2215, %x_loc233
  %312 = icmp ult i32 %x_loc233, %tile_bound212
  br i1 %312, label %x_in_tile-true234, label %x_in_tile-after235

x_in_tile-after235:                               ; preds = %x_in_tile-true234, %x_in_tile-after230
  br label %tile_loop.loop_header223, !llvm.loop !505

tile_loop.loop_exit222:                           ; preds = %tile_loop.loop_header223
  br label %y_in_tile.loop_header217, !llvm.loop !506

y_in_tile.loop_exit216:                           ; preds = %y_in_tile.loop_header217
  %shmem_output_address239 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache148, i32 0, i32 %286, i32 0, i32 %thread_id.x208, i32 %thread_id.y209
  %313 = addrspacecast ptr addrspace(3) %shmem_output_address239 to ptr
  %current_output240 = getelementptr inbounds float, ptr %partial_reduction_result205, i32 0
  %314 = load float, ptr %current_output240, align 4
  store float %314, ptr %313, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr241 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache148, i32 0, i32 %286, i32 0, i32 %thread_id.y209, i32 %thread_id.x208
  %315 = addrspacecast ptr addrspace(3) %shmem_transposed_addr241 to ptr
  %partial_reduction_result243 = load float, ptr %315, align 4
  %316 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result243, i32 16, i32 31)
  store float %316, ptr %result_from_other_lane242, align 4
  call void @region_4_21(ptr %315, ptr %result_from_other_lane242, ptr %return_buffer244)
  %317 = load float, ptr %return_buffer244, align 4
  store float %317, ptr %315, align 4
  %partial_reduction_result246 = load float, ptr %315, align 4
  %318 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result246, i32 8, i32 31)
  store float %318, ptr %result_from_other_lane245, align 4
  call void @region_4_21(ptr %315, ptr %result_from_other_lane245, ptr %return_buffer247)
  %319 = load float, ptr %return_buffer247, align 4
  store float %319, ptr %315, align 4
  %partial_reduction_result249 = load float, ptr %315, align 4
  %320 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result249, i32 4, i32 31)
  store float %320, ptr %result_from_other_lane248, align 4
  call void @region_4_21(ptr %315, ptr %result_from_other_lane248, ptr %return_buffer250)
  %321 = load float, ptr %return_buffer250, align 4
  store float %321, ptr %315, align 4
  %partial_reduction_result252 = load float, ptr %315, align 4
  %322 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result252, i32 2, i32 31)
  store float %322, ptr %result_from_other_lane251, align 4
  call void @region_4_21(ptr %315, ptr %result_from_other_lane251, ptr %return_buffer253)
  %323 = load float, ptr %return_buffer253, align 4
  store float %323, ptr %315, align 4
  %partial_reduction_result255 = load float, ptr %315, align 4
  %324 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result255, i32 1, i32 31)
  store float %324, ptr %result_from_other_lane254, align 4
  call void @region_4_21(ptr %315, ptr %result_from_other_lane254, ptr %return_buffer256)
  %325 = load float, ptr %return_buffer256, align 4
  store float %325, ptr %315, align 4
  %326 = icmp ult i32 %thread_id.x208, %tile_bound211
  %327 = mul i32 %thread_id.y209, 2
  %328 = icmp ult i32 %327, %tile_bound212
  %329 = and i1 %328, %326
  %330 = icmp eq i32 %lane_id210, 0
  %331 = and i1 %329, %330
  br i1 %331, label %reduction_write_output-true257, label %reduction_write_output-after258

reduction_write_output-after258:                  ; preds = %reduction_write_output-true257, %y_in_tile.loop_exit216
  %shmem_output_address261 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache148, i32 0, i32 %286, i32 1, i32 %thread_id.x208, i32 %thread_id.y209
  %332 = addrspacecast ptr addrspace(3) %shmem_output_address261 to ptr
  %current_output262 = getelementptr inbounds float, ptr %partial_reduction_result205, i32 1
  %333 = load float, ptr %current_output262, align 4
  store float %333, ptr %332, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr263 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache148, i32 0, i32 %286, i32 1, i32 %thread_id.y209, i32 %thread_id.x208
  %334 = addrspacecast ptr addrspace(3) %shmem_transposed_addr263 to ptr
  %partial_reduction_result265 = load float, ptr %334, align 4
  %335 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result265, i32 16, i32 31)
  store float %335, ptr %result_from_other_lane264, align 4
  call void @region_4_21(ptr %334, ptr %result_from_other_lane264, ptr %return_buffer266)
  %336 = load float, ptr %return_buffer266, align 4
  store float %336, ptr %334, align 4
  %partial_reduction_result268 = load float, ptr %334, align 4
  %337 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result268, i32 8, i32 31)
  store float %337, ptr %result_from_other_lane267, align 4
  call void @region_4_21(ptr %334, ptr %result_from_other_lane267, ptr %return_buffer269)
  %338 = load float, ptr %return_buffer269, align 4
  store float %338, ptr %334, align 4
  %partial_reduction_result271 = load float, ptr %334, align 4
  %339 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result271, i32 4, i32 31)
  store float %339, ptr %result_from_other_lane270, align 4
  call void @region_4_21(ptr %334, ptr %result_from_other_lane270, ptr %return_buffer272)
  %340 = load float, ptr %return_buffer272, align 4
  store float %340, ptr %334, align 4
  %partial_reduction_result274 = load float, ptr %334, align 4
  %341 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result274, i32 2, i32 31)
  store float %341, ptr %result_from_other_lane273, align 4
  call void @region_4_21(ptr %334, ptr %result_from_other_lane273, ptr %return_buffer275)
  %342 = load float, ptr %return_buffer275, align 4
  store float %342, ptr %334, align 4
  %partial_reduction_result277 = load float, ptr %334, align 4
  %343 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result277, i32 1, i32 31)
  store float %343, ptr %result_from_other_lane276, align 4
  call void @region_4_21(ptr %334, ptr %result_from_other_lane276, ptr %return_buffer278)
  %344 = load float, ptr %return_buffer278, align 4
  store float %344, ptr %334, align 4
  %345 = icmp ult i32 %thread_id.x208, %tile_bound211
  %346 = mul i32 %thread_id.y209, 2
  %347 = icmp ult i32 %346, %tile_bound212
  %348 = and i1 %347, %345
  %349 = icmp eq i32 %lane_id210, 0
  %350 = and i1 %348, %349
  br i1 %350, label %reduction_write_output-true279, label %reduction_write_output-after280

reduction_write_output-after280:                  ; preds = %reduction_write_output-true279, %reduction_write_output-after258
  br label %reduce-group-3-after

early_return207:                                  ; preds = %reduce-group-3-true
  ret void

x_in_tile-true229:                                ; preds = %tile_loop.loop_body224
  %351 = mul i32 %thread_id.x208, 2
  %352 = sub i32 %x_loc228, %351
  %Arg_4.5 = getelementptr inbounds [64 x [128 x float]], ptr %arg4, i32 0, i32 %305, i32 %306
  %Arg_4.5231 = load float, ptr %Arg_4.5, align 4, !invariant.load !297
  store float %Arg_4.5231, ptr %reduction_input_address204, align 4
  %353 = getelementptr inbounds float, ptr %partial_reduction_result205, i32 %352
  call void @region_4_21(ptr %353, ptr %reduction_input_address204, ptr %return_buffer232)
  %354 = load float, ptr %return_buffer232, align 4
  store float %354, ptr %353, align 4
  br label %x_in_tile-after230

x_in_tile-true234:                                ; preds = %x_in_tile-after230
  %355 = mul i32 %thread_id.x208, 2
  %356 = sub i32 %x_loc233, %355
  %Arg_4.5236 = getelementptr inbounds [64 x [128 x float]], ptr %arg4, i32 0, i32 %310, i32 %311
  %Arg_4.5237 = load float, ptr %Arg_4.5236, align 4, !invariant.load !297
  store float %Arg_4.5237, ptr %reduction_input_address204, align 4
  %357 = getelementptr inbounds float, ptr %partial_reduction_result205, i32 %356
  call void @region_4_21(ptr %357, ptr %reduction_input_address204, ptr %return_buffer238)
  %358 = load float, ptr %return_buffer238, align 4
  store float %358, ptr %357, align 4
  br label %x_in_tile-after235

reduction_write_output-true257:                   ; preds = %y_in_tile.loop_exit216
  %359 = mul i32 %thread_id.y209, 2
  %360 = add i32 %tile_origin.1214, %thread_id.x208
  %361 = add i32 %tile_origin.2215, %359
  %362 = add i32 %361, 0
  %363 = mul i32 %tile_origin.0213, 128
  %364 = add i32 %363, %362
  %365 = udiv i32 %364, 1
  %output_element_address259 = getelementptr inbounds [128 x float], ptr %arg8, i32 0, i32 %365
  %output260 = load float, ptr %315, align 4
  store float %output260, ptr %output_element_address259, align 4
  br label %reduction_write_output-after258

reduction_write_output-true279:                   ; preds = %reduction_write_output-after258
  %366 = mul i32 %thread_id.y209, 2
  %367 = add i32 %tile_origin.1214, %thread_id.x208
  %368 = add i32 %tile_origin.2215, %366
  %369 = add i32 %368, 1
  %370 = mul i32 %tile_origin.0213, 128
  %371 = add i32 %370, %369
  %372 = udiv i32 %371, 1
  %output_element_address281 = getelementptr inbounds [128 x float], ptr %arg8, i32 0, i32 %372
  %output282 = load float, ptr %334, align 4
  store float %output282, ptr %output_element_address281, align 4
  br label %reduction_write_output-after280
}

define internal void @region_1_6(ptr dereferenceable(4) %Arg_0.7.typed, ptr dereferenceable(4) %Arg_1.8.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.9.typed = alloca float, align 4
  %Arg_0.7 = load float, ptr %Arg_0.7.typed, align 4
  %Arg_1.8 = load float, ptr %Arg_1.8.typed, align 4
  %add.9 = fadd float %Arg_0.7, %Arg_1.8
  store float %add.9, ptr %add.9.typed, align 4
  %load_ret_value = load float, ptr %add.9.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_11(ptr dereferenceable(4) %Arg_0.12.typed, ptr dereferenceable(4) %Arg_1.13.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.14.typed = alloca float, align 4
  %Arg_0.12 = load float, ptr %Arg_0.12.typed, align 4
  %Arg_1.13 = load float, ptr %Arg_1.13.typed, align 4
  %add.14 = fadd float %Arg_0.12, %Arg_1.13
  store float %add.14, ptr %add.14.typed, align 4
  %load_ret_value = load float, ptr %add.14.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_3_16(ptr dereferenceable(4) %Arg_0.17.typed, ptr dereferenceable(4) %Arg_1.18.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.19.typed = alloca float, align 4
  %Arg_0.17 = load float, ptr %Arg_0.17.typed, align 4
  %Arg_1.18 = load float, ptr %Arg_1.18.typed, align 4
  %add.19 = fadd float %Arg_0.17, %Arg_1.18
  store float %add.19, ptr %add.19.typed, align 4
  %load_ret_value = load float, ptr %add.19.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_4_21(ptr dereferenceable(4) %Arg_0.22.typed, ptr dereferenceable(4) %Arg_1.23.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.24.typed = alloca float, align 4
  %Arg_0.22 = load float, ptr %Arg_0.22.typed, align 4
  %Arg_1.23 = load float, ptr %Arg_1.23.typed, align 4
  %add.24 = fadd float %Arg_0.22, %Arg_1.23
  store float %add.24, ptr %add.24.typed, align 4
  %load_ret_value = load float, ptr %add.24.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_698(ptr noalias align 16 dereferenceable(65536) %arg0, ptr noalias align 128 dereferenceable(65536) %arg1, ptr noalias align 16 dereferenceable(65536) %arg2, ptr noalias align 128 dereferenceable(65536) %arg3, ptr noalias align 16 dereferenceable(65536) %arg4, ptr noalias align 128 dereferenceable(65536) %arg5, ptr noalias align 16 dereferenceable(65536) %arg6, ptr noalias align 128 dereferenceable(65536) %arg7, ptr noalias align 16 dereferenceable(65536) %arg8, ptr noalias align 128 dereferenceable(65536) %arg9, ptr noalias align 16 dereferenceable(65536) %arg10, ptr noalias align 128 dereferenceable(65536) %arg11, ptr noalias align 16 dereferenceable(65536) %arg12, ptr noalias align 128 dereferenceable(65536) %arg13, ptr noalias align 16 dereferenceable(65536) %arg14, ptr noalias align 128 dereferenceable(65536) %arg15, ptr noalias align 128 dereferenceable(65536) %arg16, ptr noalias align 128 dereferenceable(65536) %arg17, ptr noalias align 128 dereferenceable(65536) %arg18, ptr noalias align 128 dereferenceable(65536) %arg19, ptr noalias align 128 dereferenceable(65536) %arg20) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !351
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 16384
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 128
  %5 = udiv i32 %linear_index, 128
  %6 = icmp ult i32 %linear_index, 16384
  br i1 %6, label %fusion_698.in_bounds-true, label %fusion_698.in_bounds-after

fusion_698.in_bounds-after:                       ; preds = %fusion_698.in_bounds-true, %entry
  ret void

fusion_698.in_bounds-true:                        ; preds = %entry
  %7 = getelementptr inbounds float, ptr %arg0, i32 %linear_index
  %8 = load float, ptr %7, align 4, !invariant.load !297
  %region_0_36_constant_17 = load float, ptr @101, align 4
  %9 = getelementptr inbounds float, ptr %arg1, i32 %linear_index
  %10 = load float, ptr %9, align 4, !invariant.load !297
  %multiply.19 = fmul float %region_0_36_constant_17, %10
  %subtract.20 = fsub float %8, %multiply.19
  %11 = insertvalue { float, float, float, float, float, float, float, float } undef, float %subtract.20, 0
  %12 = getelementptr inbounds float, ptr %arg2, i32 %linear_index
  %13 = load float, ptr %12, align 4, !invariant.load !297
  %14 = getelementptr inbounds float, ptr %arg3, i32 %linear_index
  %15 = load float, ptr %14, align 4, !invariant.load !297
  %multiply.21 = fmul float %region_0_36_constant_17, %15
  %subtract.22 = fsub float %13, %multiply.21
  %16 = insertvalue { float, float, float, float, float, float, float, float } %11, float %subtract.22, 1
  %17 = getelementptr inbounds float, ptr %arg4, i32 %linear_index
  %18 = load float, ptr %17, align 4, !invariant.load !297
  %19 = getelementptr inbounds float, ptr %arg5, i32 %linear_index
  %20 = load float, ptr %19, align 4, !invariant.load !297
  %multiply.23 = fmul float %region_0_36_constant_17, %20
  %subtract.24 = fsub float %18, %multiply.23
  %21 = insertvalue { float, float, float, float, float, float, float, float } %16, float %subtract.24, 2
  %22 = getelementptr inbounds float, ptr %arg6, i32 %linear_index
  %23 = load float, ptr %22, align 4, !invariant.load !297
  %24 = getelementptr inbounds float, ptr %arg7, i32 %linear_index
  %25 = load float, ptr %24, align 4, !invariant.load !297
  %multiply.25 = fmul float %region_0_36_constant_17, %25
  %subtract.26 = fsub float %23, %multiply.25
  %26 = insertvalue { float, float, float, float, float, float, float, float } %21, float %subtract.26, 3
  %27 = getelementptr inbounds float, ptr %arg8, i32 %linear_index
  %28 = load float, ptr %27, align 4, !invariant.load !297
  %29 = getelementptr inbounds float, ptr %arg9, i32 %linear_index
  %30 = load float, ptr %29, align 4, !invariant.load !297
  %multiply.27 = fmul float %region_0_36_constant_17, %30
  %subtract.28 = fsub float %28, %multiply.27
  %31 = insertvalue { float, float, float, float, float, float, float, float } %26, float %subtract.28, 4
  %32 = getelementptr inbounds float, ptr %arg10, i32 %linear_index
  %33 = load float, ptr %32, align 4, !invariant.load !297
  %34 = getelementptr inbounds float, ptr %arg11, i32 %linear_index
  %35 = load float, ptr %34, align 4
  %multiply.29 = fmul float %region_0_36_constant_17, %35
  %subtract.30 = fsub float %33, %multiply.29
  %36 = insertvalue { float, float, float, float, float, float, float, float } %31, float %subtract.30, 5
  %37 = getelementptr inbounds float, ptr %arg12, i32 %linear_index
  %38 = load float, ptr %37, align 4, !invariant.load !297
  %39 = getelementptr inbounds float, ptr %arg13, i32 %linear_index
  %40 = load float, ptr %39, align 4
  %multiply.31 = fmul float %region_0_36_constant_17, %40
  %subtract.32 = fsub float %38, %multiply.31
  %41 = insertvalue { float, float, float, float, float, float, float, float } %36, float %subtract.32, 6
  %42 = getelementptr inbounds float, ptr %arg14, i32 %linear_index
  %43 = load float, ptr %42, align 4, !invariant.load !297
  %44 = getelementptr inbounds float, ptr %arg15, i32 %linear_index
  %45 = load float, ptr %44, align 4
  %multiply.33 = fmul float %region_0_36_constant_17, %45
  %subtract.34 = fsub float %43, %multiply.33
  %46 = insertvalue { float, float, float, float, float, float, float, float } %41, float %subtract.34, 7
  %47 = extractvalue { float, float, float, float, float, float, float, float } %46, 0
  %48 = getelementptr inbounds float, ptr %arg16, i32 %linear_index
  store float %47, ptr %48, align 4
  %49 = extractvalue { float, float, float, float, float, float, float, float } %46, 1
  %50 = getelementptr inbounds float, ptr %arg17, i32 %linear_index
  store float %49, ptr %50, align 4
  %51 = extractvalue { float, float, float, float, float, float, float, float } %46, 2
  %52 = getelementptr inbounds float, ptr %arg18, i32 %linear_index
  store float %51, ptr %52, align 4
  %53 = extractvalue { float, float, float, float, float, float, float, float } %46, 3
  %54 = getelementptr inbounds float, ptr %arg19, i32 %linear_index
  store float %53, ptr %54, align 4
  %55 = extractvalue { float, float, float, float, float, float, float, float } %46, 4
  %56 = getelementptr inbounds float, ptr %arg20, i32 %linear_index
  store float %55, ptr %56, align 4
  %57 = extractvalue { float, float, float, float, float, float, float, float } %46, 5
  %58 = getelementptr inbounds float, ptr %arg15, i32 %linear_index
  store float %57, ptr %58, align 4
  %59 = extractvalue { float, float, float, float, float, float, float, float } %46, 6
  %60 = getelementptr inbounds float, ptr %arg13, i32 %linear_index
  store float %59, ptr %60, align 4
  %61 = extractvalue { float, float, float, float, float, float, float, float } %46, 7
  %62 = getelementptr inbounds float, ptr %arg11, i32 %linear_index
  store float %61, ptr %62, align 4
  br label %fusion_698.in_bounds-after
}

define void @copy_fusion_2(ptr noalias align 16 dereferenceable(64) %arg0, ptr noalias align 128 dereferenceable(64) %arg1, ptr noalias align 16 dereferenceable(64) %arg2, ptr noalias align 128 dereferenceable(64) %arg3, ptr noalias align 16 dereferenceable(262144) %arg4, ptr noalias align 128 dereferenceable(786432) %arg5, ptr noalias align 16 dereferenceable(262144) %arg6, ptr noalias align 128 dereferenceable(4063232) %arg7, ptr noalias align 128 dereferenceable(64) %arg8, ptr noalias align 128 dereferenceable(64) %arg9, ptr noalias align 128 dereferenceable(262144) %arg10, ptr noalias align 128 dereferenceable(262144) %arg11) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !507
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 66560
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = icmp ult i32 %linear_index, 65552
  br i1 %4, label %copy_fusion_2.in_bounds-true, label %copy_fusion_2.in_bounds-after

copy_fusion_2.in_bounds-after:                    ; preds = %slice3-after, %entry
  ret void

copy_fusion_2.in_bounds-true:                     ; preds = %entry
  br label %concatenate.pivot.16.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %5 = phi i32 [ 0, %concatenate.pivot.0. ]
  %6 = sub nsw i32 %3, %5
  %7 = getelementptr inbounds [16 x [1 x float]], ptr %arg0, i32 0, i32 %6, i32 0
  %8 = load float, ptr %7, align 4, !invariant.load !297
  %region_0_36_constant_9 = load float, ptr @103, align 4
  %9 = getelementptr inbounds [16 x float], ptr %arg1, i32 0, i32 %6
  %10 = load float, ptr %9, align 4, !invariant.load !297
  %multiply.11 = fmul float %region_0_36_constant_9, %10
  %subtract.13 = fsub float %8, %multiply.11
  br label %concatenate.21.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.16.1
  %11 = phi i32 [ 16, %concatenate.pivot.16.1 ]
  %12 = sub nsw i32 %3, %11
  %13 = mul nuw nsw i32 %12, 1
  %14 = add nuw nsw i32 0, %13
  %15 = urem i32 %14, 8
  %16 = udiv i32 %14, 8
  %17 = udiv i32 %16, 8192
  %18 = getelementptr inbounds [8192 x [8 x float]], ptr %arg4, i32 0, i32 %16, i32 %15
  %19 = load float, ptr %18, align 4, !invariant.load !297
  %region_0_36_constant_15 = load float, ptr @102, align 4
  %20 = add i32 %16, 0
  %21 = add i32 %15, 16
  %22 = getelementptr inbounds [8192 x [24 x float]], ptr %arg5, i32 0, i32 %20, i32 %21
  %23 = load float, ptr %22, align 4, !invariant.load !297
  %multiply.18 = fmul float %region_0_36_constant_15, %23
  %subtract.19 = fsub float %19, %multiply.18
  br label %concatenate.21.merge

concatenate.pivot.16.:                            ; preds = %copy_fusion_2.in_bounds-true
  %24 = icmp ult i32 %3, 16
  br i1 %24, label %concatenate.pivot.0., label %concatenate.pivot.16.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.16.
  br label %concat_index_from_operand_id0

concatenate.pivot.16.1:                           ; preds = %concatenate.pivot.16.
  br label %concat_index_from_operand_id1

concatenate.21.merge:                             ; preds = %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %25 = phi float [ %subtract.13, %concat_index_from_operand_id0 ], [ %subtract.19, %concat_index_from_operand_id1 ]
  br label %concatenate.pivot.16.6

concat_index_from_operand_id02:                   ; preds = %concatenate.pivot.0.7
  %26 = phi i32 [ 0, %concatenate.pivot.0.7 ]
  %27 = sub nsw i32 %3, %26
  %28 = getelementptr inbounds [16 x [1 x float]], ptr %arg2, i32 0, i32 %27, i32 0
  %29 = load float, ptr %28, align 4, !invariant.load !297
  %region_0_36_constant_93 = load float, ptr @103, align 4
  %30 = getelementptr inbounds [16 x float], ptr %arg3, i32 0, i32 %27
  %31 = load float, ptr %30, align 4, !invariant.load !297
  %multiply.23 = fmul float %region_0_36_constant_93, %31
  %subtract.25 = fsub float %29, %multiply.23
  br label %concatenate.31.merge

concat_index_from_operand_id14:                   ; preds = %concatenate.pivot.16.8
  %32 = phi i32 [ 16, %concatenate.pivot.16.8 ]
  %33 = sub nsw i32 %3, %32
  %34 = mul nuw nsw i32 %33, 1
  %35 = add nuw nsw i32 0, %34
  %36 = urem i32 %35, 8
  %37 = udiv i32 %35, 8
  %38 = udiv i32 %37, 8192
  %39 = getelementptr inbounds [8192 x [8 x float]], ptr %arg6, i32 0, i32 %37, i32 %36
  %40 = load float, ptr %39, align 4, !invariant.load !297
  %region_0_36_constant_155 = load float, ptr @102, align 4
  %41 = add i32 %37, 0
  %42 = add i32 %36, 116
  %43 = getelementptr inbounds [8192 x [124 x float]], ptr %arg7, i32 0, i32 %41, i32 %42
  %44 = load float, ptr %43, align 4, !invariant.load !297
  %multiply.28 = fmul float %region_0_36_constant_155, %44
  %subtract.29 = fsub float %40, %multiply.28
  br label %concatenate.31.merge

concatenate.pivot.16.6:                           ; preds = %concatenate.21.merge
  %45 = icmp ult i32 %3, 16
  br i1 %45, label %concatenate.pivot.0.7, label %concatenate.pivot.16.8

concatenate.pivot.0.7:                            ; preds = %concatenate.pivot.16.6
  br label %concat_index_from_operand_id02

concatenate.pivot.16.8:                           ; preds = %concatenate.pivot.16.6
  br label %concat_index_from_operand_id14

concatenate.31.merge:                             ; preds = %concat_index_from_operand_id14, %concat_index_from_operand_id02
  %46 = phi float [ %subtract.25, %concat_index_from_operand_id02 ], [ %subtract.29, %concat_index_from_operand_id14 ]
  br label %concatenate.pivot.16.18

concat_index_from_operand_id010:                  ; preds = %concatenate.pivot.0.19
  %47 = phi i32 [ 0, %concatenate.pivot.0.19 ]
  %48 = sub nsw i32 %3, %47
  %49 = getelementptr inbounds [16 x [1 x float]], ptr %arg0, i32 0, i32 %48, i32 0
  %50 = load float, ptr %49, align 4, !invariant.load !297
  %region_0_36_constant_911 = load float, ptr @103, align 4
  %51 = getelementptr inbounds [16 x float], ptr %arg1, i32 0, i32 %48
  %52 = load float, ptr %51, align 4, !invariant.load !297
  %multiply.1112 = fmul float %region_0_36_constant_911, %52
  %subtract.1313 = fsub float %50, %multiply.1112
  br label %concatenate.21.merge9

concat_index_from_operand_id114:                  ; preds = %concatenate.pivot.16.20
  %53 = phi i32 [ 16, %concatenate.pivot.16.20 ]
  %54 = sub nsw i32 %3, %53
  %55 = mul nuw nsw i32 %54, 1
  %56 = add nuw nsw i32 0, %55
  %57 = urem i32 %56, 8
  %58 = udiv i32 %56, 8
  %59 = udiv i32 %58, 8192
  %60 = getelementptr inbounds [8192 x [8 x float]], ptr %arg4, i32 0, i32 %58, i32 %57
  %61 = load float, ptr %60, align 4, !invariant.load !297
  %region_0_36_constant_1515 = load float, ptr @102, align 4
  %62 = add i32 %58, 0
  %63 = add i32 %57, 16
  %64 = getelementptr inbounds [8192 x [24 x float]], ptr %arg5, i32 0, i32 %62, i32 %63
  %65 = load float, ptr %64, align 4, !invariant.load !297
  %multiply.1816 = fmul float %region_0_36_constant_1515, %65
  %subtract.1917 = fsub float %61, %multiply.1816
  br label %concatenate.21.merge9

concatenate.pivot.16.18:                          ; preds = %concatenate.31.merge
  %66 = icmp ult i32 %3, 16
  br i1 %66, label %concatenate.pivot.0.19, label %concatenate.pivot.16.20

concatenate.pivot.0.19:                           ; preds = %concatenate.pivot.16.18
  br label %concat_index_from_operand_id010

concatenate.pivot.16.20:                          ; preds = %concatenate.pivot.16.18
  br label %concat_index_from_operand_id114

concatenate.21.merge9:                            ; preds = %concat_index_from_operand_id114, %concat_index_from_operand_id010
  %67 = phi float [ %subtract.1313, %concat_index_from_operand_id010 ], [ %subtract.1917, %concat_index_from_operand_id114 ]
  br label %concatenate.pivot.16.30

concat_index_from_operand_id022:                  ; preds = %concatenate.pivot.0.31
  %68 = phi i32 [ 0, %concatenate.pivot.0.31 ]
  %69 = sub nsw i32 %3, %68
  %70 = getelementptr inbounds [16 x [1 x float]], ptr %arg2, i32 0, i32 %69, i32 0
  %71 = load float, ptr %70, align 4, !invariant.load !297
  %region_0_36_constant_923 = load float, ptr @103, align 4
  %72 = getelementptr inbounds [16 x float], ptr %arg3, i32 0, i32 %69
  %73 = load float, ptr %72, align 4, !invariant.load !297
  %multiply.2324 = fmul float %region_0_36_constant_923, %73
  %subtract.2525 = fsub float %71, %multiply.2324
  br label %concatenate.31.merge21

concat_index_from_operand_id126:                  ; preds = %concatenate.pivot.16.32
  %74 = phi i32 [ 16, %concatenate.pivot.16.32 ]
  %75 = sub nsw i32 %3, %74
  %76 = mul nuw nsw i32 %75, 1
  %77 = add nuw nsw i32 0, %76
  %78 = urem i32 %77, 8
  %79 = udiv i32 %77, 8
  %80 = udiv i32 %79, 8192
  %81 = getelementptr inbounds [8192 x [8 x float]], ptr %arg6, i32 0, i32 %79, i32 %78
  %82 = load float, ptr %81, align 4, !invariant.load !297
  %region_0_36_constant_1527 = load float, ptr @102, align 4
  %83 = add i32 %79, 0
  %84 = add i32 %78, 116
  %85 = getelementptr inbounds [8192 x [124 x float]], ptr %arg7, i32 0, i32 %83, i32 %84
  %86 = load float, ptr %85, align 4, !invariant.load !297
  %multiply.2828 = fmul float %region_0_36_constant_1527, %86
  %subtract.2929 = fsub float %82, %multiply.2828
  br label %concatenate.31.merge21

concatenate.pivot.16.30:                          ; preds = %concatenate.21.merge9
  %87 = icmp ult i32 %3, 16
  br i1 %87, label %concatenate.pivot.0.31, label %concatenate.pivot.16.32

concatenate.pivot.0.31:                           ; preds = %concatenate.pivot.16.30
  br label %concat_index_from_operand_id022

concatenate.pivot.16.32:                          ; preds = %concatenate.pivot.16.30
  br label %concat_index_from_operand_id126

concatenate.31.merge21:                           ; preds = %concat_index_from_operand_id126, %concat_index_from_operand_id022
  %88 = phi float [ %subtract.2525, %concat_index_from_operand_id022 ], [ %subtract.2929, %concat_index_from_operand_id126 ]
  %89 = icmp sge i32 %3, 0
  %90 = icmp slt i32 %3, 16
  %91 = and i1 %89, %90
  br i1 %91, label %slice0-true, label %slice0-after

slice0-after:                                     ; preds = %slice0-true, %concatenate.31.merge21
  %92 = icmp sge i32 %3, 0
  %93 = icmp slt i32 %3, 16
  %94 = and i1 %92, %93
  br i1 %94, label %slice1-true, label %slice1-after

slice1-after:                                     ; preds = %slice1-true, %slice0-after
  %95 = icmp sge i32 %3, 16
  %96 = icmp slt i32 %3, 65552
  %97 = and i1 %95, %96
  br i1 %97, label %slice2-true, label %slice2-after

slice2-after:                                     ; preds = %slice2-true, %slice1-after
  %98 = icmp sge i32 %3, 16
  %99 = icmp slt i32 %3, 65552
  %100 = and i1 %98, %99
  br i1 %100, label %slice3-true, label %slice3-after

slice3-after:                                     ; preds = %slice3-true, %slice2-after
  br label %copy_fusion_2.in_bounds-after

slice0-true:                                      ; preds = %concatenate.31.merge21
  %101 = sub i32 %3, 0
  %102 = getelementptr inbounds [16 x float], ptr %arg8, i32 0, i32 %101
  store float %25, ptr %102, align 4
  br label %slice0-after

slice1-true:                                      ; preds = %slice0-after
  %103 = sub i32 %3, 0
  %104 = getelementptr inbounds [16 x float], ptr %arg9, i32 0, i32 %103
  store float %46, ptr %104, align 4
  br label %slice1-after

slice2-true:                                      ; preds = %slice1-after
  %105 = sub i32 %3, 16
  %106 = getelementptr inbounds [65536 x float], ptr %arg10, i32 0, i32 %105
  store float %67, ptr %106, align 4
  br label %slice2-after

slice3-true:                                      ; preds = %slice2-after
  %107 = sub i32 %3, 16
  %108 = getelementptr inbounds [65536 x float], ptr %arg11, i32 0, i32 %107
  store float %88, ptr %108, align 4
  br label %slice3-after
}

define void @fusion_67(ptr noalias align 16 dereferenceable(2097152) %arg0, ptr noalias align 128 dereferenceable(4063232) %arg1, ptr noalias align 128 dereferenceable(2097152) %arg2) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !293
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 131072
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 64
  %5 = udiv i32 %linear_index_base, 64
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 64
  %8 = udiv i32 %linear_index1, 64
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 64
  %11 = udiv i32 %linear_index2, 64
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 64
  %14 = udiv i32 %linear_index3, 64
  %15 = icmp ult i32 %linear_index_base, 524288
  br i1 %15, label %fusion_67.in_bounds-true, label %fusion_67.in_bounds-after

fusion_67.in_bounds-after:                        ; preds = %fusion_67.in_bounds-true, %entry
  ret void

fusion_67.in_bounds-true:                         ; preds = %entry
  %16 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_base
  %17 = load float, ptr %16, align 4, !invariant.load !297
  %region_0_8_constant_3 = load float, ptr @104, align 4
  %18 = add i32 %5, 0
  %19 = add i32 %4, 52
  %20 = getelementptr inbounds [8192 x [124 x float]], ptr %arg1, i32 0, i32 %18, i32 %19
  %21 = load float, ptr %20, align 4, !invariant.load !297
  %multiply.6 = fmul float %region_0_8_constant_3, %21
  %subtract.7 = fsub float %17, %multiply.6
  %22 = getelementptr inbounds float, ptr %arg2, i32 %linear_index_base
  store float %subtract.7, ptr %22, align 4
  %23 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  %24 = load float, ptr %23, align 4, !invariant.load !297
  %region_0_8_constant_31 = load float, ptr @104, align 4
  %25 = add i32 %8, 0
  %26 = add i32 %7, 52
  %27 = getelementptr inbounds [8192 x [124 x float]], ptr %arg1, i32 0, i32 %25, i32 %26
  %28 = load float, ptr %27, align 4, !invariant.load !297
  %multiply.62 = fmul float %region_0_8_constant_31, %28
  %subtract.73 = fsub float %24, %multiply.62
  %29 = getelementptr inbounds float, ptr %arg2, i32 %linear_index1
  store float %subtract.73, ptr %29, align 4
  %30 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  %31 = load float, ptr %30, align 4, !invariant.load !297
  %region_0_8_constant_34 = load float, ptr @104, align 4
  %32 = add i32 %11, 0
  %33 = add i32 %10, 52
  %34 = getelementptr inbounds [8192 x [124 x float]], ptr %arg1, i32 0, i32 %32, i32 %33
  %35 = load float, ptr %34, align 4, !invariant.load !297
  %multiply.65 = fmul float %region_0_8_constant_34, %35
  %subtract.76 = fsub float %31, %multiply.65
  %36 = getelementptr inbounds float, ptr %arg2, i32 %linear_index2
  store float %subtract.76, ptr %36, align 4
  %37 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  %38 = load float, ptr %37, align 4, !invariant.load !297
  %region_0_8_constant_37 = load float, ptr @104, align 4
  %39 = add i32 %14, 0
  %40 = add i32 %13, 52
  %41 = getelementptr inbounds [8192 x [124 x float]], ptr %arg1, i32 0, i32 %39, i32 %40
  %42 = load float, ptr %41, align 4, !invariant.load !297
  %multiply.68 = fmul float %region_0_8_constant_37, %42
  %subtract.79 = fsub float %38, %multiply.68
  %43 = getelementptr inbounds float, ptr %arg2, i32 %linear_index3
  store float %subtract.79, ptr %43, align 4
  br label %fusion_67.in_bounds-after
}

define void @fusion_177(ptr noalias align 128 dereferenceable(8388608) %arg0, ptr noalias align 128 dereferenceable(8388608) %arg1, ptr noalias align 128 dereferenceable(65536) %arg2, ptr noalias align 128 dereferenceable(8388608) %arg3) {
entry:
  %return_buffer58 = alloca float, align 4
  %result_from_other_lane56 = alloca float, align 4
  %return_buffer55 = alloca float, align 4
  %result_from_other_lane53 = alloca float, align 4
  %return_buffer52 = alloca float, align 4
  %result_from_other_lane50 = alloca float, align 4
  %return_buffer49 = alloca float, align 4
  %result_from_other_lane47 = alloca float, align 4
  %return_buffer46 = alloca float, align 4
  %result_from_other_lane44 = alloca float, align 4
  %return_buffer40 = alloca float, align 4
  %result_from_other_lane38 = alloca float, align 4
  %return_buffer37 = alloca float, align 4
  %result_from_other_lane35 = alloca float, align 4
  %return_buffer34 = alloca float, align 4
  %result_from_other_lane32 = alloca float, align 4
  %return_buffer31 = alloca float, align 4
  %result_from_other_lane29 = alloca float, align 4
  %return_buffer28 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer20 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, i32 2, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after60, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_15_constant_8 = load float, ptr @106, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_15_constant_8, ptr %2, align 4
  %3 = getelementptr inbounds float, ptr %partial_reduction_result, i32 1
  store float %region_0_15_constant_8, ptr %3, align 4
  %4 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %5 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !362
  %6 = urem i32 %4, 1024
  %7 = udiv i32 %4, 1024
  %8 = mul i32 %5, 1
  %9 = add i32 %8, %7
  %10 = icmp ult i32 %9, 256
  br i1 %10, label %11, label %early_return

11:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %6, 32
  %thread_id.y = udiv i32 %6, 32
  %lane_id = urem i32 %6, 32
  %12 = udiv i32 %9, 1
  %13 = urem i32 %12, 4
  %14 = udiv i32 %9, 4
  %15 = urem i32 %14, 1
  %16 = udiv i32 %9, 4
  %17 = icmp eq i32 %15, 0
  %tile_bound = select i1 %17, i32 128, i32 4096
  %18 = icmp eq i32 %13, 3
  %tile_bound1 = select i1 %18, i32 64, i32 64
  %tile_origin.0 = mul i32 %16, 1
  %tile_origin.1 = mul i32 %15, 4096
  %tile_origin.2 = mul i32 %13, 64
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %11
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %19 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %19, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %20 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %21 = mul i32 %thread_id.x, 2
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after13, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %22 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %22, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %23 = icmp eq i32 %tile_loop.indvar, 0
  %24 = mul i32 %tile_loop.indvar, 2
  %25 = add i32 %24, 0
  %x_loc = add i32 %25, %21
  %26 = add i32 %tile_origin.1, %y_in_tile.indvar
  %27 = add i32 %tile_origin.2, %x_loc
  %28 = icmp ult i32 %x_loc, %tile_bound1
  br i1 %28, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body
  %29 = mul i32 %tile_loop.indvar, 2
  %30 = add i32 %29, 1
  %x_loc11 = add i32 %30, %21
  %31 = add i32 %tile_origin.1, %y_in_tile.indvar
  %32 = add i32 %tile_origin.2, %x_loc11
  %33 = icmp ult i32 %x_loc11, %tile_bound1
  br i1 %33, label %x_in_tile-true12, label %x_in_tile-after13

x_in_tile-after13:                                ; preds = %x_in_tile-true12, %x_in_tile-after
  br label %tile_loop.loop_header, !llvm.loop !508

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !509

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache149, i32 0, i32 %7, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %34 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %35 = load float, ptr %current_output, align 4
  store float %35, ptr %34, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache149, i32 0, i32 %7, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %36 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result27 = load float, ptr %36, align 4
  %37 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result27, i32 16, i32 31)
  store float %37, ptr %result_from_other_lane, align 4
  call void @region_1_9__3(ptr %36, ptr %result_from_other_lane, ptr %return_buffer28)
  %38 = load float, ptr %return_buffer28, align 4
  store float %38, ptr %36, align 4
  %partial_reduction_result30 = load float, ptr %36, align 4
  %39 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result30, i32 8, i32 31)
  store float %39, ptr %result_from_other_lane29, align 4
  call void @region_1_9__3(ptr %36, ptr %result_from_other_lane29, ptr %return_buffer31)
  %40 = load float, ptr %return_buffer31, align 4
  store float %40, ptr %36, align 4
  %partial_reduction_result33 = load float, ptr %36, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result33, i32 4, i32 31)
  store float %41, ptr %result_from_other_lane32, align 4
  call void @region_1_9__3(ptr %36, ptr %result_from_other_lane32, ptr %return_buffer34)
  %42 = load float, ptr %return_buffer34, align 4
  store float %42, ptr %36, align 4
  %partial_reduction_result36 = load float, ptr %36, align 4
  %43 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result36, i32 2, i32 31)
  store float %43, ptr %result_from_other_lane35, align 4
  call void @region_1_9__3(ptr %36, ptr %result_from_other_lane35, ptr %return_buffer37)
  %44 = load float, ptr %return_buffer37, align 4
  store float %44, ptr %36, align 4
  %partial_reduction_result39 = load float, ptr %36, align 4
  %45 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result39, i32 1, i32 31)
  store float %45, ptr %result_from_other_lane38, align 4
  call void @region_1_9__3(ptr %36, ptr %result_from_other_lane38, ptr %return_buffer40)
  %46 = load float, ptr %return_buffer40, align 4
  store float %46, ptr %36, align 4
  %47 = icmp ult i32 %thread_id.x, %tile_bound
  %48 = mul i32 %thread_id.y, 2
  %49 = icmp ult i32 %48, %tile_bound1
  %50 = and i1 %49, %47
  %51 = icmp eq i32 %lane_id, 0
  %52 = and i1 %50, %51
  br i1 %52, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %shmem_output_address41 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache149, i32 0, i32 %7, i32 1, i32 %thread_id.x, i32 %thread_id.y
  %53 = addrspacecast ptr addrspace(3) %shmem_output_address41 to ptr
  %current_output42 = getelementptr inbounds float, ptr %partial_reduction_result, i32 1
  %54 = load float, ptr %current_output42, align 4
  store float %54, ptr %53, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr43 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache149, i32 0, i32 %7, i32 1, i32 %thread_id.y, i32 %thread_id.x
  %55 = addrspacecast ptr addrspace(3) %shmem_transposed_addr43 to ptr
  %partial_reduction_result45 = load float, ptr %55, align 4
  %56 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result45, i32 16, i32 31)
  store float %56, ptr %result_from_other_lane44, align 4
  call void @region_1_9__3(ptr %55, ptr %result_from_other_lane44, ptr %return_buffer46)
  %57 = load float, ptr %return_buffer46, align 4
  store float %57, ptr %55, align 4
  %partial_reduction_result48 = load float, ptr %55, align 4
  %58 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result48, i32 8, i32 31)
  store float %58, ptr %result_from_other_lane47, align 4
  call void @region_1_9__3(ptr %55, ptr %result_from_other_lane47, ptr %return_buffer49)
  %59 = load float, ptr %return_buffer49, align 4
  store float %59, ptr %55, align 4
  %partial_reduction_result51 = load float, ptr %55, align 4
  %60 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result51, i32 4, i32 31)
  store float %60, ptr %result_from_other_lane50, align 4
  call void @region_1_9__3(ptr %55, ptr %result_from_other_lane50, ptr %return_buffer52)
  %61 = load float, ptr %return_buffer52, align 4
  store float %61, ptr %55, align 4
  %partial_reduction_result54 = load float, ptr %55, align 4
  %62 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result54, i32 2, i32 31)
  store float %62, ptr %result_from_other_lane53, align 4
  call void @region_1_9__3(ptr %55, ptr %result_from_other_lane53, ptr %return_buffer55)
  %63 = load float, ptr %return_buffer55, align 4
  store float %63, ptr %55, align 4
  %partial_reduction_result57 = load float, ptr %55, align 4
  %64 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result57, i32 1, i32 31)
  store float %64, ptr %result_from_other_lane56, align 4
  call void @region_1_9__3(ptr %55, ptr %result_from_other_lane56, ptr %return_buffer58)
  %65 = load float, ptr %return_buffer58, align 4
  store float %65, ptr %55, align 4
  %66 = icmp ult i32 %thread_id.x, %tile_bound
  %67 = mul i32 %thread_id.y, 2
  %68 = icmp ult i32 %67, %tile_bound1
  %69 = and i1 %68, %66
  %70 = icmp eq i32 %lane_id, 0
  %71 = and i1 %69, %70
  br i1 %71, label %reduction_write_output-true59, label %reduction_write_output-after60

reduction_write_output-after60:                   ; preds = %reduction_write_output-true59, %reduction_write_output-after
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %72 = mul nuw nsw i32 %27, 1
  %73 = add nuw nsw i32 0, %72
  %74 = mul nuw nsw i32 %26, 256
  %75 = add nuw nsw i32 %73, %74
  %76 = mul nuw nsw i32 %tile_origin.0, 32768
  %77 = add nuw nsw i32 %75, %76
  %78 = udiv i32 %77, 1
  %79 = urem i32 %78, 256
  %80 = udiv i32 %77, 256
  %81 = urem i32 %80, 128
  %82 = udiv i32 %77, 32768
  %83 = mul i32 %thread_id.x, 2
  %84 = sub i32 %x_loc, %83
  %85 = mul nuw nsw i32 %79, 1
  %86 = add nuw nsw i32 0, %85
  %87 = udiv i32 %86, 256
  %88 = mul nuw nsw i32 %81, 1
  %89 = add nuw nsw i32 0, %88
  %90 = mul nuw nsw i32 %82, 128
  %91 = add nuw nsw i32 %89, %90
  %92 = udiv i32 %91, 8192
  %Arg_1.2 = getelementptr inbounds [8192 x [256 x float]], ptr %arg1, i32 0, i32 %91, i32 %86
  %Arg_1.23 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %region_0_15_constant_3 = load float, ptr @105, align 4
  %compare.5 = fcmp ogt float %Arg_1.23, %region_0_15_constant_3
  %93 = zext i1 %compare.5 to i8
  %Arg_0.1 = getelementptr inbounds [8192 x [256 x float]], ptr %arg0, i32 0, i32 %91, i32 %86
  %Arg_0.14 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %94 = trunc i8 %93 to i1
  %95 = select i1 %94, float %Arg_0.14, float %region_0_15_constant_3
  store float %95, ptr %reduction_input_address, align 4
  %96 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %84
  call void @region_1_9__3(ptr %96, ptr %reduction_input_address, ptr %return_buffer)
  %97 = load float, ptr %return_buffer, align 4
  store float %97, ptr %96, align 4
  %98 = mul nuw nsw i32 %79, 1
  %99 = add nuw nsw i32 0, %98
  %100 = udiv i32 %99, 256
  %101 = mul nuw nsw i32 %81, 1
  %102 = add nuw nsw i32 0, %101
  %103 = mul nuw nsw i32 %82, 128
  %104 = add nuw nsw i32 %102, %103
  %105 = udiv i32 %104, 8192
  %Arg_1.25 = getelementptr inbounds float, ptr %arg1, i32 %77
  %Arg_1.26 = load float, ptr %Arg_1.25, align 4, !invariant.load !297
  %region_0_15_constant_37 = load float, ptr @105, align 4
  %compare.58 = fcmp ogt float %Arg_1.26, %region_0_15_constant_37
  %106 = zext i1 %compare.58 to i8
  %Arg_0.19 = getelementptr inbounds float, ptr %arg0, i32 %77
  %Arg_0.110 = load float, ptr %Arg_0.19, align 4, !invariant.load !297
  %107 = trunc i8 %106 to i1
  %108 = select i1 %107, float %Arg_0.110, float %region_0_15_constant_37
  %109 = mul nuw nsw i32 %79, 1
  %110 = add nuw nsw i32 0, %109
  %111 = udiv i32 %110, 256
  %112 = mul nuw nsw i32 %81, 1
  %113 = add nuw nsw i32 0, %112
  %114 = mul nuw nsw i32 %82, 128
  %115 = add nuw nsw i32 %113, %114
  %116 = udiv i32 %115, 8192
  %117 = getelementptr inbounds [8192 x [256 x float]], ptr %arg3, i32 0, i32 %115, i32 %110
  store float %108, ptr %117, align 4
  br label %x_in_tile-after

x_in_tile-true12:                                 ; preds = %x_in_tile-after
  %118 = mul nuw nsw i32 %32, 1
  %119 = add nuw nsw i32 0, %118
  %120 = mul nuw nsw i32 %31, 256
  %121 = add nuw nsw i32 %119, %120
  %122 = mul nuw nsw i32 %tile_origin.0, 32768
  %123 = add nuw nsw i32 %121, %122
  %124 = udiv i32 %123, 1
  %125 = urem i32 %124, 256
  %126 = udiv i32 %123, 256
  %127 = urem i32 %126, 128
  %128 = udiv i32 %123, 32768
  %129 = mul i32 %thread_id.x, 2
  %130 = sub i32 %x_loc11, %129
  %131 = mul nuw nsw i32 %125, 1
  %132 = add nuw nsw i32 0, %131
  %133 = udiv i32 %132, 256
  %134 = mul nuw nsw i32 %127, 1
  %135 = add nuw nsw i32 0, %134
  %136 = mul nuw nsw i32 %128, 128
  %137 = add nuw nsw i32 %135, %136
  %138 = udiv i32 %137, 8192
  %Arg_1.214 = getelementptr inbounds [8192 x [256 x float]], ptr %arg1, i32 0, i32 %137, i32 %132
  %Arg_1.215 = load float, ptr %Arg_1.214, align 4, !invariant.load !297
  %region_0_15_constant_316 = load float, ptr @105, align 4
  %compare.517 = fcmp ogt float %Arg_1.215, %region_0_15_constant_316
  %139 = zext i1 %compare.517 to i8
  %Arg_0.118 = getelementptr inbounds [8192 x [256 x float]], ptr %arg0, i32 0, i32 %137, i32 %132
  %Arg_0.119 = load float, ptr %Arg_0.118, align 4, !invariant.load !297
  %140 = trunc i8 %139 to i1
  %141 = select i1 %140, float %Arg_0.119, float %region_0_15_constant_316
  store float %141, ptr %reduction_input_address, align 4
  %142 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %130
  call void @region_1_9__3(ptr %142, ptr %reduction_input_address, ptr %return_buffer20)
  %143 = load float, ptr %return_buffer20, align 4
  store float %143, ptr %142, align 4
  %144 = mul nuw nsw i32 %125, 1
  %145 = add nuw nsw i32 0, %144
  %146 = udiv i32 %145, 256
  %147 = mul nuw nsw i32 %127, 1
  %148 = add nuw nsw i32 0, %147
  %149 = mul nuw nsw i32 %128, 128
  %150 = add nuw nsw i32 %148, %149
  %151 = udiv i32 %150, 8192
  %Arg_1.221 = getelementptr inbounds float, ptr %arg1, i32 %123
  %Arg_1.222 = load float, ptr %Arg_1.221, align 4, !invariant.load !297
  %region_0_15_constant_323 = load float, ptr @105, align 4
  %compare.524 = fcmp ogt float %Arg_1.222, %region_0_15_constant_323
  %152 = zext i1 %compare.524 to i8
  %Arg_0.125 = getelementptr inbounds float, ptr %arg0, i32 %123
  %Arg_0.126 = load float, ptr %Arg_0.125, align 4, !invariant.load !297
  %153 = trunc i8 %152 to i1
  %154 = select i1 %153, float %Arg_0.126, float %region_0_15_constant_323
  %155 = mul nuw nsw i32 %125, 1
  %156 = add nuw nsw i32 0, %155
  %157 = udiv i32 %156, 256
  %158 = mul nuw nsw i32 %127, 1
  %159 = add nuw nsw i32 0, %158
  %160 = mul nuw nsw i32 %128, 128
  %161 = add nuw nsw i32 %159, %160
  %162 = udiv i32 %161, 8192
  %163 = getelementptr inbounds [8192 x [256 x float]], ptr %arg3, i32 0, i32 %161, i32 %156
  store float %154, ptr %163, align 4
  br label %x_in_tile-after13

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %164 = mul i32 %thread_id.y, 2
  %165 = add i32 %tile_origin.1, %thread_id.x
  %166 = add i32 %tile_origin.2, %164
  %167 = add i32 %166, 0
  %168 = mul i32 %tile_origin.0, 256
  %169 = add i32 %168, %167
  %170 = udiv i32 %169, 1
  %171 = urem i32 %170, 256
  %172 = udiv i32 %169, 256
  %output_element_address = getelementptr inbounds [64 x [256 x float]], ptr %arg2, i32 0, i32 %172, i32 %171
  %output = load float, ptr %36, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

reduction_write_output-true59:                    ; preds = %reduction_write_output-after
  %173 = mul i32 %thread_id.y, 2
  %174 = add i32 %tile_origin.1, %thread_id.x
  %175 = add i32 %tile_origin.2, %173
  %176 = add i32 %175, 1
  %177 = mul i32 %tile_origin.0, 256
  %178 = add i32 %177, %176
  %179 = udiv i32 %178, 1
  %180 = urem i32 %179, 256
  %181 = udiv i32 %178, 256
  %output_element_address61 = getelementptr inbounds [64 x [256 x float]], ptr %arg2, i32 0, i32 %181, i32 %180
  %output62 = load float, ptr %55, align 4
  store float %output62, ptr %output_element_address61, align 4
  br label %reduction_write_output-after60
}

define internal void @region_1_9__3(ptr dereferenceable(4) %Arg_0.10.typed, ptr dereferenceable(4) %Arg_1.11.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.12.typed = alloca float, align 4
  %Arg_0.10 = load float, ptr %Arg_0.10.typed, align 4
  %Arg_1.11 = load float, ptr %Arg_1.11.typed, align 4
  %add.12 = fadd float %Arg_0.10, %Arg_1.11
  store float %add.12, ptr %add.12.typed, align 4
  %load_ret_value = load float, ptr %add.12.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_734(ptr noalias align 128 dereferenceable(65536) %arg0, ptr noalias align 128 dereferenceable(4) %arg1, ptr noalias align 128 dereferenceable(1024) %arg2) {
entry:
  %return_buffer41 = alloca float, align 4
  %result_from_other_lane39 = alloca float, align 4
  %return_buffer38 = alloca float, align 4
  %result_from_other_lane36 = alloca float, align 4
  %return_buffer35 = alloca float, align 4
  %result_from_other_lane33 = alloca float, align 4
  %return_buffer32 = alloca float, align 4
  %result_from_other_lane30 = alloca float, align 4
  %return_buffer29 = alloca float, align 4
  %result_from_other_lane27 = alloca float, align 4
  %return_buffer23 = alloca float, align 4
  %result_from_other_lane21 = alloca float, align 4
  %return_buffer20 = alloca float, align 4
  %result_from_other_lane18 = alloca float, align 4
  %return_buffer17 = alloca float, align 4
  %result_from_other_lane15 = alloca float, align 4
  %return_buffer14 = alloca float, align 4
  %result_from_other_lane12 = alloca float, align 4
  %return_buffer11 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer9 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, i32 2, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after43, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %Arg_1.2 = load float, ptr %arg1, align 4, !invariant.load !297
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %Arg_1.2, ptr %2, align 4
  %3 = getelementptr inbounds float, ptr %partial_reduction_result, i32 1
  store float %Arg_1.2, ptr %3, align 4
  %4 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %5 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !367
  %6 = urem i32 %4, 1024
  %7 = udiv i32 %4, 1024
  %8 = mul i32 %5, 1
  %9 = add i32 %8, %7
  %10 = icmp ult i32 %9, 4
  br i1 %10, label %11, label %early_return

11:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %6, 32
  %thread_id.y = udiv i32 %6, 32
  %lane_id = urem i32 %6, 32
  %12 = udiv i32 %9, 1
  %13 = urem i32 %12, 4
  %14 = udiv i32 %9, 4
  %15 = urem i32 %14, 1
  %16 = udiv i32 %9, 4
  %17 = icmp eq i32 %15, 0
  %tile_bound = select i1 %17, i32 64, i32 4096
  %18 = icmp eq i32 %13, 3
  %tile_bound1 = select i1 %18, i32 64, i32 64
  %tile_origin.0 = mul i32 %16, 1
  %tile_origin.1 = mul i32 %15, 4096
  %tile_origin.2 = mul i32 %13, 64
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %11
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %19 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %19, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %20 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %21 = mul i32 %thread_id.x, 2
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after6, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %22 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %22, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %23 = icmp eq i32 %tile_loop.indvar, 0
  %24 = mul i32 %tile_loop.indvar, 2
  %25 = add i32 %24, 0
  %x_loc = add i32 %25, %21
  %26 = add i32 %tile_origin.1, %y_in_tile.indvar
  %27 = add i32 %tile_origin.2, %x_loc
  %28 = icmp ult i32 %x_loc, %tile_bound1
  br i1 %28, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body
  %29 = mul i32 %tile_loop.indvar, 2
  %30 = add i32 %29, 1
  %x_loc4 = add i32 %30, %21
  %31 = add i32 %tile_origin.1, %y_in_tile.indvar
  %32 = add i32 %tile_origin.2, %x_loc4
  %33 = icmp ult i32 %x_loc4, %tile_bound1
  br i1 %33, label %x_in_tile-true5, label %x_in_tile-after6

x_in_tile-after6:                                 ; preds = %x_in_tile-true5, %x_in_tile-after
  br label %tile_loop.loop_header, !llvm.loop !510

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !511

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache150, i32 0, i32 %7, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %34 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %35 = load float, ptr %current_output, align 4
  store float %35, ptr %34, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache150, i32 0, i32 %7, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %36 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result10 = load float, ptr %36, align 4
  %37 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result10, i32 16, i32 31)
  store float %37, ptr %result_from_other_lane, align 4
  call void @region_1_3__3(ptr %36, ptr %result_from_other_lane, ptr %return_buffer11)
  %38 = load float, ptr %return_buffer11, align 4
  store float %38, ptr %36, align 4
  %partial_reduction_result13 = load float, ptr %36, align 4
  %39 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result13, i32 8, i32 31)
  store float %39, ptr %result_from_other_lane12, align 4
  call void @region_1_3__3(ptr %36, ptr %result_from_other_lane12, ptr %return_buffer14)
  %40 = load float, ptr %return_buffer14, align 4
  store float %40, ptr %36, align 4
  %partial_reduction_result16 = load float, ptr %36, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result16, i32 4, i32 31)
  store float %41, ptr %result_from_other_lane15, align 4
  call void @region_1_3__3(ptr %36, ptr %result_from_other_lane15, ptr %return_buffer17)
  %42 = load float, ptr %return_buffer17, align 4
  store float %42, ptr %36, align 4
  %partial_reduction_result19 = load float, ptr %36, align 4
  %43 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result19, i32 2, i32 31)
  store float %43, ptr %result_from_other_lane18, align 4
  call void @region_1_3__3(ptr %36, ptr %result_from_other_lane18, ptr %return_buffer20)
  %44 = load float, ptr %return_buffer20, align 4
  store float %44, ptr %36, align 4
  %partial_reduction_result22 = load float, ptr %36, align 4
  %45 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result22, i32 1, i32 31)
  store float %45, ptr %result_from_other_lane21, align 4
  call void @region_1_3__3(ptr %36, ptr %result_from_other_lane21, ptr %return_buffer23)
  %46 = load float, ptr %return_buffer23, align 4
  store float %46, ptr %36, align 4
  %47 = icmp ult i32 %thread_id.x, %tile_bound
  %48 = mul i32 %thread_id.y, 2
  %49 = icmp ult i32 %48, %tile_bound1
  %50 = and i1 %49, %47
  %51 = icmp eq i32 %lane_id, 0
  %52 = and i1 %50, %51
  br i1 %52, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %shmem_output_address24 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache150, i32 0, i32 %7, i32 1, i32 %thread_id.x, i32 %thread_id.y
  %53 = addrspacecast ptr addrspace(3) %shmem_output_address24 to ptr
  %current_output25 = getelementptr inbounds float, ptr %partial_reduction_result, i32 1
  %54 = load float, ptr %current_output25, align 4
  store float %54, ptr %53, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr26 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache150, i32 0, i32 %7, i32 1, i32 %thread_id.y, i32 %thread_id.x
  %55 = addrspacecast ptr addrspace(3) %shmem_transposed_addr26 to ptr
  %partial_reduction_result28 = load float, ptr %55, align 4
  %56 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result28, i32 16, i32 31)
  store float %56, ptr %result_from_other_lane27, align 4
  call void @region_1_3__3(ptr %55, ptr %result_from_other_lane27, ptr %return_buffer29)
  %57 = load float, ptr %return_buffer29, align 4
  store float %57, ptr %55, align 4
  %partial_reduction_result31 = load float, ptr %55, align 4
  %58 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result31, i32 8, i32 31)
  store float %58, ptr %result_from_other_lane30, align 4
  call void @region_1_3__3(ptr %55, ptr %result_from_other_lane30, ptr %return_buffer32)
  %59 = load float, ptr %return_buffer32, align 4
  store float %59, ptr %55, align 4
  %partial_reduction_result34 = load float, ptr %55, align 4
  %60 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result34, i32 4, i32 31)
  store float %60, ptr %result_from_other_lane33, align 4
  call void @region_1_3__3(ptr %55, ptr %result_from_other_lane33, ptr %return_buffer35)
  %61 = load float, ptr %return_buffer35, align 4
  store float %61, ptr %55, align 4
  %partial_reduction_result37 = load float, ptr %55, align 4
  %62 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result37, i32 2, i32 31)
  store float %62, ptr %result_from_other_lane36, align 4
  call void @region_1_3__3(ptr %55, ptr %result_from_other_lane36, ptr %return_buffer38)
  %63 = load float, ptr %return_buffer38, align 4
  store float %63, ptr %55, align 4
  %partial_reduction_result40 = load float, ptr %55, align 4
  %64 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result40, i32 1, i32 31)
  store float %64, ptr %result_from_other_lane39, align 4
  call void @region_1_3__3(ptr %55, ptr %result_from_other_lane39, ptr %return_buffer41)
  %65 = load float, ptr %return_buffer41, align 4
  store float %65, ptr %55, align 4
  %66 = icmp ult i32 %thread_id.x, %tile_bound
  %67 = mul i32 %thread_id.y, 2
  %68 = icmp ult i32 %67, %tile_bound1
  %69 = and i1 %68, %66
  %70 = icmp eq i32 %lane_id, 0
  %71 = and i1 %69, %70
  br i1 %71, label %reduction_write_output-true42, label %reduction_write_output-after43

reduction_write_output-after43:                   ; preds = %reduction_write_output-true42, %reduction_write_output-after
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %72 = mul i32 %thread_id.x, 2
  %73 = sub i32 %x_loc, %72
  %Arg_0.1 = getelementptr inbounds [64 x [256 x float]], ptr %arg0, i32 0, i32 %26, i32 %27
  %Arg_0.13 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  store float %Arg_0.13, ptr %reduction_input_address, align 4
  %74 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %73
  call void @region_1_3__3(ptr %74, ptr %reduction_input_address, ptr %return_buffer)
  %75 = load float, ptr %return_buffer, align 4
  store float %75, ptr %74, align 4
  br label %x_in_tile-after

x_in_tile-true5:                                  ; preds = %x_in_tile-after
  %76 = mul i32 %thread_id.x, 2
  %77 = sub i32 %x_loc4, %76
  %Arg_0.17 = getelementptr inbounds [64 x [256 x float]], ptr %arg0, i32 0, i32 %31, i32 %32
  %Arg_0.18 = load float, ptr %Arg_0.17, align 4, !invariant.load !297
  store float %Arg_0.18, ptr %reduction_input_address, align 4
  %78 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %77
  call void @region_1_3__3(ptr %78, ptr %reduction_input_address, ptr %return_buffer9)
  %79 = load float, ptr %return_buffer9, align 4
  store float %79, ptr %78, align 4
  br label %x_in_tile-after6

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %80 = mul i32 %thread_id.y, 2
  %81 = add i32 %tile_origin.1, %thread_id.x
  %82 = add i32 %tile_origin.2, %80
  %83 = add i32 %82, 0
  %84 = mul i32 %tile_origin.0, 256
  %85 = add i32 %84, %83
  %86 = udiv i32 %85, 1
  %output_element_address = getelementptr inbounds [256 x float], ptr %arg2, i32 0, i32 %86
  %output = load float, ptr %36, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

reduction_write_output-true42:                    ; preds = %reduction_write_output-after
  %87 = mul i32 %thread_id.y, 2
  %88 = add i32 %tile_origin.1, %thread_id.x
  %89 = add i32 %tile_origin.2, %87
  %90 = add i32 %89, 1
  %91 = mul i32 %tile_origin.0, 256
  %92 = add i32 %91, %90
  %93 = udiv i32 %92, 1
  %output_element_address44 = getelementptr inbounds [256 x float], ptr %arg2, i32 0, i32 %93
  %output45 = load float, ptr %55, align 4
  store float %output45, ptr %output_element_address44, align 4
  br label %reduction_write_output-after43
}

define internal void @region_1_3__3(ptr dereferenceable(4) %Arg_0.4.typed, ptr dereferenceable(4) %Arg_1.5.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.6.typed = alloca float, align 4
  %Arg_0.4 = load float, ptr %Arg_0.4.typed, align 4
  %Arg_1.5 = load float, ptr %Arg_1.5.typed, align 4
  %add.6 = fadd float %Arg_0.4, %Arg_1.5
  store float %add.6, ptr %add.6.typed, align 4
  %load_ret_value = load float, ptr %add.6.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_692(ptr noalias align 16 dereferenceable(512) %arg0, ptr noalias align 128 dereferenceable(512) %arg1, ptr noalias align 16 dereferenceable(512) %arg2, ptr noalias align 128 dereferenceable(512) %arg3, ptr noalias align 16 dereferenceable(512) %arg4, ptr noalias align 128 dereferenceable(512) %arg5, ptr noalias align 16 dereferenceable(512) %arg6, ptr noalias align 128 dereferenceable(512) %arg7, ptr noalias align 16 dereferenceable(512) %arg8, ptr noalias align 128 dereferenceable(512) %arg9, ptr noalias align 16 dereferenceable(512) %arg10, ptr noalias align 128 dereferenceable(512) %arg11, ptr noalias align 16 dereferenceable(512) %arg12, ptr noalias align 128 dereferenceable(512) %arg13, ptr noalias align 16 dereferenceable(512) %arg14, ptr noalias align 128 dereferenceable(512) %arg15, ptr noalias align 16 dereferenceable(512) %arg16, ptr noalias align 128 dereferenceable(512) %arg17, ptr noalias align 16 dereferenceable(512) %arg18, ptr noalias align 128 dereferenceable(512) %arg19, ptr noalias align 16 dereferenceable(512) %arg20, ptr noalias align 128 dereferenceable(512) %arg21, ptr noalias align 16 dereferenceable(512) %arg22, ptr noalias align 128 dereferenceable(512) %arg23, ptr noalias align 16 dereferenceable(512) %arg24, ptr noalias align 128 dereferenceable(512) %arg25, ptr noalias align 16 dereferenceable(512) %arg26, ptr noalias align 128 dereferenceable(512) %arg27, ptr noalias align 16 dereferenceable(512) %arg28, ptr noalias align 128 dereferenceable(512) %arg29, ptr noalias align 16 dereferenceable(512) %arg30, ptr noalias align 128 dereferenceable(512) %arg31, ptr noalias align 16 dereferenceable(512) %arg32, ptr noalias align 128 dereferenceable(512) %arg33, ptr noalias align 16 dereferenceable(512) %arg34, ptr noalias align 128 dereferenceable(512) %arg35, ptr noalias align 16 dereferenceable(512) %arg36, ptr noalias align 128 dereferenceable(512) %arg37, ptr noalias align 16 dereferenceable(512) %arg38, ptr noalias align 128 dereferenceable(512) %arg39, ptr noalias align 16 dereferenceable(512) %arg40, ptr noalias align 128 dereferenceable(512) %arg41, ptr noalias align 16 dereferenceable(512) %arg42, ptr noalias align 128 dereferenceable(512) %arg43, ptr noalias align 16 dereferenceable(512) %arg44, ptr noalias align 128 dereferenceable(512) %arg45, ptr noalias align 16 dereferenceable(512) %arg46, ptr noalias align 128 dereferenceable(512) %arg47) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !294
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !361
  %2 = mul nuw nsw i32 %0, 128
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 128
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = icmp ult i32 %linear_index, 128
  br i1 %4, label %fusion_692.in_bounds-true, label %fusion_692.in_bounds-after

fusion_692.in_bounds-after:                       ; preds = %fusion_692.in_bounds-true, %entry
  ret void

fusion_692.in_bounds-true:                        ; preds = %entry
  %5 = getelementptr inbounds float, ptr %arg0, i32 %linear_index
  %6 = load float, ptr %5, align 4, !invariant.load !297
  %region_0_100_constant_49 = load float, ptr @107, align 4
  %7 = getelementptr inbounds float, ptr %arg1, i32 %linear_index
  %8 = load float, ptr %7, align 4
  %multiply.51 = fmul float %region_0_100_constant_49, %8
  %subtract.52 = fsub float %6, %multiply.51
  %9 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } undef, float %subtract.52, 0
  %10 = getelementptr inbounds float, ptr %arg2, i32 %linear_index
  %11 = load float, ptr %10, align 4, !invariant.load !297
  %12 = getelementptr inbounds float, ptr %arg3, i32 %linear_index
  %13 = load float, ptr %12, align 4
  %multiply.53 = fmul float %region_0_100_constant_49, %13
  %subtract.54 = fsub float %11, %multiply.53
  %14 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %9, float %subtract.54, 1
  %15 = getelementptr inbounds float, ptr %arg4, i32 %linear_index
  %16 = load float, ptr %15, align 4, !invariant.load !297
  %17 = getelementptr inbounds float, ptr %arg5, i32 %linear_index
  %18 = load float, ptr %17, align 4
  %multiply.55 = fmul float %region_0_100_constant_49, %18
  %subtract.56 = fsub float %16, %multiply.55
  %19 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %14, float %subtract.56, 2
  %20 = getelementptr inbounds float, ptr %arg6, i32 %linear_index
  %21 = load float, ptr %20, align 4, !invariant.load !297
  %22 = getelementptr inbounds float, ptr %arg7, i32 %linear_index
  %23 = load float, ptr %22, align 4
  %multiply.57 = fmul float %region_0_100_constant_49, %23
  %subtract.58 = fsub float %21, %multiply.57
  %24 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %19, float %subtract.58, 3
  %25 = getelementptr inbounds float, ptr %arg8, i32 %linear_index
  %26 = load float, ptr %25, align 4, !invariant.load !297
  %27 = getelementptr inbounds float, ptr %arg9, i32 %linear_index
  %28 = load float, ptr %27, align 4
  %multiply.59 = fmul float %region_0_100_constant_49, %28
  %subtract.60 = fsub float %26, %multiply.59
  %29 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %24, float %subtract.60, 4
  %30 = getelementptr inbounds float, ptr %arg10, i32 %linear_index
  %31 = load float, ptr %30, align 4, !invariant.load !297
  %32 = getelementptr inbounds float, ptr %arg11, i32 %linear_index
  %33 = load float, ptr %32, align 4
  %multiply.61 = fmul float %region_0_100_constant_49, %33
  %subtract.62 = fsub float %31, %multiply.61
  %34 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %29, float %subtract.62, 5
  %35 = getelementptr inbounds float, ptr %arg12, i32 %linear_index
  %36 = load float, ptr %35, align 4, !invariant.load !297
  %37 = getelementptr inbounds float, ptr %arg13, i32 %linear_index
  %38 = load float, ptr %37, align 4
  %multiply.63 = fmul float %region_0_100_constant_49, %38
  %subtract.64 = fsub float %36, %multiply.63
  %39 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %34, float %subtract.64, 6
  %40 = getelementptr inbounds float, ptr %arg14, i32 %linear_index
  %41 = load float, ptr %40, align 4, !invariant.load !297
  %42 = getelementptr inbounds float, ptr %arg15, i32 %linear_index
  %43 = load float, ptr %42, align 4
  %multiply.65 = fmul float %region_0_100_constant_49, %43
  %subtract.66 = fsub float %41, %multiply.65
  %44 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %39, float %subtract.66, 7
  %45 = getelementptr inbounds float, ptr %arg16, i32 %linear_index
  %46 = load float, ptr %45, align 4, !invariant.load !297
  %47 = getelementptr inbounds float, ptr %arg17, i32 %linear_index
  %48 = load float, ptr %47, align 4
  %multiply.67 = fmul float %region_0_100_constant_49, %48
  %subtract.68 = fsub float %46, %multiply.67
  %49 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %44, float %subtract.68, 8
  %50 = getelementptr inbounds float, ptr %arg18, i32 %linear_index
  %51 = load float, ptr %50, align 4, !invariant.load !297
  %52 = getelementptr inbounds float, ptr %arg19, i32 %linear_index
  %53 = load float, ptr %52, align 4
  %multiply.69 = fmul float %region_0_100_constant_49, %53
  %subtract.70 = fsub float %51, %multiply.69
  %54 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %49, float %subtract.70, 9
  %55 = getelementptr inbounds float, ptr %arg20, i32 %linear_index
  %56 = load float, ptr %55, align 4, !invariant.load !297
  %57 = getelementptr inbounds float, ptr %arg21, i32 %linear_index
  %58 = load float, ptr %57, align 4
  %multiply.71 = fmul float %region_0_100_constant_49, %58
  %subtract.72 = fsub float %56, %multiply.71
  %59 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %54, float %subtract.72, 10
  %60 = getelementptr inbounds float, ptr %arg22, i32 %linear_index
  %61 = load float, ptr %60, align 4, !invariant.load !297
  %62 = getelementptr inbounds float, ptr %arg23, i32 %linear_index
  %63 = load float, ptr %62, align 4
  %multiply.73 = fmul float %region_0_100_constant_49, %63
  %subtract.74 = fsub float %61, %multiply.73
  %64 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %59, float %subtract.74, 11
  %65 = getelementptr inbounds float, ptr %arg24, i32 %linear_index
  %66 = load float, ptr %65, align 4, !invariant.load !297
  %67 = getelementptr inbounds float, ptr %arg25, i32 %linear_index
  %68 = load float, ptr %67, align 4
  %multiply.75 = fmul float %region_0_100_constant_49, %68
  %subtract.76 = fsub float %66, %multiply.75
  %69 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %64, float %subtract.76, 12
  %70 = getelementptr inbounds float, ptr %arg26, i32 %linear_index
  %71 = load float, ptr %70, align 4, !invariant.load !297
  %72 = getelementptr inbounds float, ptr %arg27, i32 %linear_index
  %73 = load float, ptr %72, align 4
  %multiply.77 = fmul float %region_0_100_constant_49, %73
  %subtract.78 = fsub float %71, %multiply.77
  %74 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %69, float %subtract.78, 13
  %75 = getelementptr inbounds float, ptr %arg28, i32 %linear_index
  %76 = load float, ptr %75, align 4, !invariant.load !297
  %77 = getelementptr inbounds float, ptr %arg29, i32 %linear_index
  %78 = load float, ptr %77, align 4
  %multiply.79 = fmul float %region_0_100_constant_49, %78
  %subtract.80 = fsub float %76, %multiply.79
  %79 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %74, float %subtract.80, 14
  %80 = getelementptr inbounds float, ptr %arg30, i32 %linear_index
  %81 = load float, ptr %80, align 4, !invariant.load !297
  %82 = getelementptr inbounds float, ptr %arg31, i32 %linear_index
  %83 = load float, ptr %82, align 4
  %multiply.81 = fmul float %region_0_100_constant_49, %83
  %subtract.82 = fsub float %81, %multiply.81
  %84 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %79, float %subtract.82, 15
  %85 = getelementptr inbounds float, ptr %arg32, i32 %linear_index
  %86 = load float, ptr %85, align 4, !invariant.load !297
  %87 = getelementptr inbounds float, ptr %arg33, i32 %linear_index
  %88 = load float, ptr %87, align 4
  %multiply.83 = fmul float %region_0_100_constant_49, %88
  %subtract.84 = fsub float %86, %multiply.83
  %89 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %84, float %subtract.84, 16
  %90 = getelementptr inbounds float, ptr %arg34, i32 %linear_index
  %91 = load float, ptr %90, align 4, !invariant.load !297
  %92 = getelementptr inbounds float, ptr %arg35, i32 %linear_index
  %93 = load float, ptr %92, align 4
  %multiply.85 = fmul float %region_0_100_constant_49, %93
  %subtract.86 = fsub float %91, %multiply.85
  %94 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %89, float %subtract.86, 17
  %95 = getelementptr inbounds float, ptr %arg36, i32 %linear_index
  %96 = load float, ptr %95, align 4, !invariant.load !297
  %97 = getelementptr inbounds float, ptr %arg37, i32 %linear_index
  %98 = load float, ptr %97, align 4
  %multiply.87 = fmul float %region_0_100_constant_49, %98
  %subtract.88 = fsub float %96, %multiply.87
  %99 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %94, float %subtract.88, 18
  %100 = getelementptr inbounds float, ptr %arg38, i32 %linear_index
  %101 = load float, ptr %100, align 4, !invariant.load !297
  %102 = getelementptr inbounds float, ptr %arg39, i32 %linear_index
  %103 = load float, ptr %102, align 4
  %multiply.89 = fmul float %region_0_100_constant_49, %103
  %subtract.90 = fsub float %101, %multiply.89
  %104 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %99, float %subtract.90, 19
  %105 = getelementptr inbounds float, ptr %arg40, i32 %linear_index
  %106 = load float, ptr %105, align 4, !invariant.load !297
  %107 = getelementptr inbounds float, ptr %arg41, i32 %linear_index
  %108 = load float, ptr %107, align 4
  %multiply.91 = fmul float %region_0_100_constant_49, %108
  %subtract.92 = fsub float %106, %multiply.91
  %109 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %104, float %subtract.92, 20
  %110 = getelementptr inbounds float, ptr %arg42, i32 %linear_index
  %111 = load float, ptr %110, align 4, !invariant.load !297
  %112 = getelementptr inbounds float, ptr %arg43, i32 %linear_index
  %113 = load float, ptr %112, align 4
  %multiply.93 = fmul float %region_0_100_constant_49, %113
  %subtract.94 = fsub float %111, %multiply.93
  %114 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %109, float %subtract.94, 21
  %115 = getelementptr inbounds float, ptr %arg44, i32 %linear_index
  %116 = load float, ptr %115, align 4, !invariant.load !297
  %117 = getelementptr inbounds float, ptr %arg45, i32 %linear_index
  %118 = load float, ptr %117, align 4
  %multiply.95 = fmul float %region_0_100_constant_49, %118
  %subtract.96 = fsub float %116, %multiply.95
  %119 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %114, float %subtract.96, 22
  %120 = getelementptr inbounds float, ptr %arg46, i32 %linear_index
  %121 = load float, ptr %120, align 4, !invariant.load !297
  %122 = getelementptr inbounds float, ptr %arg47, i32 %linear_index
  %123 = load float, ptr %122, align 4
  %multiply.97 = fmul float %region_0_100_constant_49, %123
  %subtract.98 = fsub float %121, %multiply.97
  %124 = insertvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %119, float %subtract.98, 23
  %125 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %124, 0
  %126 = getelementptr inbounds float, ptr %arg31, i32 %linear_index
  store float %125, ptr %126, align 4
  %127 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %124, 1
  %128 = getelementptr inbounds float, ptr %arg33, i32 %linear_index
  store float %127, ptr %128, align 4
  %129 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %124, 2
  %130 = getelementptr inbounds float, ptr %arg35, i32 %linear_index
  store float %129, ptr %130, align 4
  %131 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %124, 3
  %132 = getelementptr inbounds float, ptr %arg37, i32 %linear_index
  store float %131, ptr %132, align 4
  %133 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %124, 4
  %134 = getelementptr inbounds float, ptr %arg39, i32 %linear_index
  store float %133, ptr %134, align 4
  %135 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %124, 5
  %136 = getelementptr inbounds float, ptr %arg41, i32 %linear_index
  store float %135, ptr %136, align 4
  %137 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %124, 6
  %138 = getelementptr inbounds float, ptr %arg43, i32 %linear_index
  store float %137, ptr %138, align 4
  %139 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %124, 7
  %140 = getelementptr inbounds float, ptr %arg45, i32 %linear_index
  store float %139, ptr %140, align 4
  %141 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %124, 8
  %142 = getelementptr inbounds float, ptr %arg47, i32 %linear_index
  store float %141, ptr %142, align 4
  %143 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %124, 9
  %144 = getelementptr inbounds float, ptr %arg25, i32 %linear_index
  store float %143, ptr %144, align 4
  %145 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %124, 10
  %146 = getelementptr inbounds float, ptr %arg11, i32 %linear_index
  store float %145, ptr %146, align 4
  %147 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %124, 11
  %148 = getelementptr inbounds float, ptr %arg13, i32 %linear_index
  store float %147, ptr %148, align 4
  %149 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %124, 12
  %150 = getelementptr inbounds float, ptr %arg15, i32 %linear_index
  store float %149, ptr %150, align 4
  %151 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %124, 13
  %152 = getelementptr inbounds float, ptr %arg17, i32 %linear_index
  store float %151, ptr %152, align 4
  %153 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %124, 14
  %154 = getelementptr inbounds float, ptr %arg19, i32 %linear_index
  store float %153, ptr %154, align 4
  %155 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %124, 15
  %156 = getelementptr inbounds float, ptr %arg3, i32 %linear_index
  store float %155, ptr %156, align 4
  %157 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %124, 16
  %158 = getelementptr inbounds float, ptr %arg5, i32 %linear_index
  store float %157, ptr %158, align 4
  %159 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %124, 17
  %160 = getelementptr inbounds float, ptr %arg7, i32 %linear_index
  store float %159, ptr %160, align 4
  %161 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %124, 18
  %162 = getelementptr inbounds float, ptr %arg9, i32 %linear_index
  store float %161, ptr %162, align 4
  %163 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %124, 19
  %164 = getelementptr inbounds float, ptr %arg21, i32 %linear_index
  store float %163, ptr %164, align 4
  %165 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %124, 20
  %166 = getelementptr inbounds float, ptr %arg23, i32 %linear_index
  store float %165, ptr %166, align 4
  %167 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %124, 21
  %168 = getelementptr inbounds float, ptr %arg1, i32 %linear_index
  store float %167, ptr %168, align 4
  %169 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %124, 22
  %170 = getelementptr inbounds float, ptr %arg27, i32 %linear_index
  store float %169, ptr %170, align 4
  %171 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %124, 23
  %172 = getelementptr inbounds float, ptr %arg29, i32 %linear_index
  store float %171, ptr %172, align 4
  br label %fusion_692.in_bounds-after
}

define void @concatenate_102(ptr noalias align 128 dereferenceable(4194304) %arg0, ptr noalias align 128 dereferenceable(4194304) %arg1, ptr noalias align 128 dereferenceable(8388608) %arg2) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !366
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 524288
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 256
  %5 = udiv i32 %linear_index_base, 256
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 256
  %8 = udiv i32 %linear_index1, 256
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 256
  %11 = udiv i32 %linear_index2, 256
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 256
  %14 = udiv i32 %linear_index3, 256
  %15 = icmp ult i32 %linear_index_base, 2097152
  br i1 %15, label %concatenate_102.in_bounds-true, label %concatenate_102.in_bounds-after

concatenate_102.in_bounds-after:                  ; preds = %concatenate.3.merge14, %entry
  ret void

concatenate_102.in_bounds-true:                   ; preds = %entry
  br label %concatenate.pivot.128.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %16 = phi i32 [ 0, %concatenate.pivot.0. ]
  %17 = sub nsw i32 %4, %16
  %18 = udiv i32 %linear_index_base, 256
  %19 = mul i32 %18, 128
  %20 = add i32 %19, %17
  %21 = udiv i32 %20, 1
  %22 = urem i32 %21, 128
  %23 = udiv i32 %20, 128
  %24 = getelementptr inbounds float, ptr %arg0, i32 %20
  %25 = load float, ptr %24, align 4, !invariant.load !297
  br label %concatenate.3.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.128.1
  %26 = phi i32 [ 128, %concatenate.pivot.128.1 ]
  %27 = sub nsw i32 %4, %26
  %28 = udiv i32 %linear_index_base, 256
  %29 = mul i32 %28, 128
  %30 = add i32 %29, %27
  %31 = udiv i32 %30, 1
  %32 = urem i32 %31, 128
  %33 = udiv i32 %30, 128
  %34 = getelementptr inbounds float, ptr %arg1, i32 %30
  %35 = load float, ptr %34, align 4, !invariant.load !297
  br label %concatenate.3.merge

concatenate.pivot.128.:                           ; preds = %concatenate_102.in_bounds-true
  %36 = icmp ult i32 %4, 128
  br i1 %36, label %concatenate.pivot.0., label %concatenate.pivot.128.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.128.
  br label %concat_index_from_operand_id0

concatenate.pivot.128.1:                          ; preds = %concatenate.pivot.128.
  br label %concat_index_from_operand_id1

concatenate.3.merge:                              ; preds = %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %37 = phi float [ %25, %concat_index_from_operand_id0 ], [ %35, %concat_index_from_operand_id1 ]
  %38 = getelementptr inbounds float, ptr %arg2, i32 %linear_index_base
  store float %37, ptr %38, align 4
  br label %concatenate.pivot.128.5

concat_index_from_operand_id03:                   ; preds = %concatenate.pivot.0.6
  %39 = phi i32 [ 0, %concatenate.pivot.0.6 ]
  %40 = sub nsw i32 %7, %39
  %41 = udiv i32 %linear_index1, 256
  %42 = mul i32 %41, 128
  %43 = add i32 %42, %40
  %44 = udiv i32 %43, 1
  %45 = urem i32 %44, 128
  %46 = udiv i32 %43, 128
  %47 = getelementptr inbounds float, ptr %arg0, i32 %43
  %48 = load float, ptr %47, align 4, !invariant.load !297
  br label %concatenate.3.merge2

concat_index_from_operand_id14:                   ; preds = %concatenate.pivot.128.7
  %49 = phi i32 [ 128, %concatenate.pivot.128.7 ]
  %50 = sub nsw i32 %7, %49
  %51 = udiv i32 %linear_index1, 256
  %52 = mul i32 %51, 128
  %53 = add i32 %52, %50
  %54 = udiv i32 %53, 1
  %55 = urem i32 %54, 128
  %56 = udiv i32 %53, 128
  %57 = getelementptr inbounds float, ptr %arg1, i32 %53
  %58 = load float, ptr %57, align 4, !invariant.load !297
  br label %concatenate.3.merge2

concatenate.pivot.128.5:                          ; preds = %concatenate.3.merge
  %59 = icmp ult i32 %7, 128
  br i1 %59, label %concatenate.pivot.0.6, label %concatenate.pivot.128.7

concatenate.pivot.0.6:                            ; preds = %concatenate.pivot.128.5
  br label %concat_index_from_operand_id03

concatenate.pivot.128.7:                          ; preds = %concatenate.pivot.128.5
  br label %concat_index_from_operand_id14

concatenate.3.merge2:                             ; preds = %concat_index_from_operand_id14, %concat_index_from_operand_id03
  %60 = phi float [ %48, %concat_index_from_operand_id03 ], [ %58, %concat_index_from_operand_id14 ]
  %61 = getelementptr inbounds float, ptr %arg2, i32 %linear_index1
  store float %60, ptr %61, align 4
  br label %concatenate.pivot.128.11

concat_index_from_operand_id09:                   ; preds = %concatenate.pivot.0.12
  %62 = phi i32 [ 0, %concatenate.pivot.0.12 ]
  %63 = sub nsw i32 %10, %62
  %64 = udiv i32 %linear_index2, 256
  %65 = mul i32 %64, 128
  %66 = add i32 %65, %63
  %67 = udiv i32 %66, 1
  %68 = urem i32 %67, 128
  %69 = udiv i32 %66, 128
  %70 = getelementptr inbounds float, ptr %arg0, i32 %66
  %71 = load float, ptr %70, align 4, !invariant.load !297
  br label %concatenate.3.merge8

concat_index_from_operand_id110:                  ; preds = %concatenate.pivot.128.13
  %72 = phi i32 [ 128, %concatenate.pivot.128.13 ]
  %73 = sub nsw i32 %10, %72
  %74 = udiv i32 %linear_index2, 256
  %75 = mul i32 %74, 128
  %76 = add i32 %75, %73
  %77 = udiv i32 %76, 1
  %78 = urem i32 %77, 128
  %79 = udiv i32 %76, 128
  %80 = getelementptr inbounds float, ptr %arg1, i32 %76
  %81 = load float, ptr %80, align 4, !invariant.load !297
  br label %concatenate.3.merge8

concatenate.pivot.128.11:                         ; preds = %concatenate.3.merge2
  %82 = icmp ult i32 %10, 128
  br i1 %82, label %concatenate.pivot.0.12, label %concatenate.pivot.128.13

concatenate.pivot.0.12:                           ; preds = %concatenate.pivot.128.11
  br label %concat_index_from_operand_id09

concatenate.pivot.128.13:                         ; preds = %concatenate.pivot.128.11
  br label %concat_index_from_operand_id110

concatenate.3.merge8:                             ; preds = %concat_index_from_operand_id110, %concat_index_from_operand_id09
  %83 = phi float [ %71, %concat_index_from_operand_id09 ], [ %81, %concat_index_from_operand_id110 ]
  %84 = getelementptr inbounds float, ptr %arg2, i32 %linear_index2
  store float %83, ptr %84, align 4
  br label %concatenate.pivot.128.17

concat_index_from_operand_id015:                  ; preds = %concatenate.pivot.0.18
  %85 = phi i32 [ 0, %concatenate.pivot.0.18 ]
  %86 = sub nsw i32 %13, %85
  %87 = udiv i32 %linear_index3, 256
  %88 = mul i32 %87, 128
  %89 = add i32 %88, %86
  %90 = udiv i32 %89, 1
  %91 = urem i32 %90, 128
  %92 = udiv i32 %89, 128
  %93 = getelementptr inbounds float, ptr %arg0, i32 %89
  %94 = load float, ptr %93, align 4, !invariant.load !297
  br label %concatenate.3.merge14

concat_index_from_operand_id116:                  ; preds = %concatenate.pivot.128.19
  %95 = phi i32 [ 128, %concatenate.pivot.128.19 ]
  %96 = sub nsw i32 %13, %95
  %97 = udiv i32 %linear_index3, 256
  %98 = mul i32 %97, 128
  %99 = add i32 %98, %96
  %100 = udiv i32 %99, 1
  %101 = urem i32 %100, 128
  %102 = udiv i32 %99, 128
  %103 = getelementptr inbounds float, ptr %arg1, i32 %99
  %104 = load float, ptr %103, align 4, !invariant.load !297
  br label %concatenate.3.merge14

concatenate.pivot.128.17:                         ; preds = %concatenate.3.merge8
  %105 = icmp ult i32 %13, 128
  br i1 %105, label %concatenate.pivot.0.18, label %concatenate.pivot.128.19

concatenate.pivot.0.18:                           ; preds = %concatenate.pivot.128.17
  br label %concat_index_from_operand_id015

concatenate.pivot.128.19:                         ; preds = %concatenate.pivot.128.17
  br label %concat_index_from_operand_id116

concatenate.3.merge14:                            ; preds = %concat_index_from_operand_id116, %concat_index_from_operand_id015
  %106 = phi float [ %94, %concat_index_from_operand_id015 ], [ %104, %concat_index_from_operand_id116 ]
  %107 = getelementptr inbounds float, ptr %arg2, i32 %linear_index3
  store float %106, ptr %107, align 4
  br label %concatenate_102.in_bounds-after
}

define void @fusion_728(ptr noalias align 16 dereferenceable(4096) %arg0, ptr noalias align 128 dereferenceable(8192) %arg1, ptr noalias align 16 dereferenceable(4096) %arg2, ptr noalias align 16 dereferenceable(49152) %arg3, ptr noalias align 128 dereferenceable(98304) %arg4, ptr noalias align 16 dereferenceable(49152) %arg5, ptr noalias align 16 dereferenceable(262144) %arg6, ptr noalias align 128 dereferenceable(524288) %arg7, ptr noalias align 16 dereferenceable(262144) %arg8, ptr noalias align 128 dereferenceable(4096) %arg9, ptr noalias align 128 dereferenceable(4096) %arg10, ptr noalias align 128 dereferenceable(49152) %arg11, ptr noalias align 128 dereferenceable(49152) %arg12, ptr noalias align 128 dereferenceable(262144) %arg13, ptr noalias align 128 dereferenceable(262144) %arg14) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !512
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 78848
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = icmp ult i32 %linear_index, 78848
  br i1 %4, label %fusion_728.in_bounds-true, label %fusion_728.in_bounds-after

fusion_728.in_bounds-after:                       ; preds = %slice5-after, %entry
  ret void

fusion_728.in_bounds-true:                        ; preds = %entry
  br label %concatenate.pivot.1024.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %5 = phi i32 [ 0, %concatenate.pivot.0. ]
  %6 = sub nsw i32 %3, %5
  %7 = mul nuw nsw i32 %6, 1
  %8 = add nuw nsw i32 0, %7
  %9 = urem i32 %8, 128
  %10 = udiv i32 %8, 128
  %11 = udiv i32 %10, 8
  %12 = getelementptr inbounds [8 x [128 x float]], ptr %arg0, i32 0, i32 %10, i32 %9
  %13 = load float, ptr %12, align 4, !invariant.load !297
  %region_0_47_constant_10 = load float, ptr @108, align 4
  %14 = add i32 %10, 8
  %15 = add i32 %9, 0
  %16 = getelementptr inbounds [16 x [128 x float]], ptr %arg1, i32 0, i32 %14, i32 %15
  %17 = load float, ptr %16, align 4, !invariant.load !297
  %multiply.13 = fmul float %region_0_47_constant_10, %17
  %subtract.14 = fsub float %13, %multiply.13
  br label %concatenate.26.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.1024.3
  %18 = phi i32 [ 1024, %concatenate.pivot.1024.3 ]
  %19 = sub nsw i32 %3, %18
  %20 = mul nuw nsw i32 %19, 1
  %21 = add nuw nsw i32 0, %20
  %22 = urem i32 %21, 128
  %23 = udiv i32 %21, 128
  %24 = udiv i32 %23, 96
  %25 = getelementptr inbounds [96 x [128 x float]], ptr %arg3, i32 0, i32 %23, i32 %22
  %26 = load float, ptr %25, align 4, !invariant.load !297
  %region_0_47_constant_101 = load float, ptr @108, align 4
  %27 = add i32 %23, 0
  %28 = add i32 %22, 128
  %29 = getelementptr inbounds [96 x [256 x float]], ptr %arg4, i32 0, i32 %27, i32 %28
  %30 = load float, ptr %29, align 4, !invariant.load !297
  %multiply.18 = fmul float %region_0_47_constant_101, %30
  %subtract.19 = fsub float %26, %multiply.18
  br label %concatenate.26.merge

concat_index_from_operand_id2:                    ; preds = %concatenate.pivot.13312.4
  %31 = phi i32 [ 13312, %concatenate.pivot.13312.4 ]
  %32 = sub nsw i32 %3, %31
  %33 = mul nuw nsw i32 %32, 1
  %34 = add nuw nsw i32 0, %33
  %35 = urem i32 %34, 8
  %36 = udiv i32 %34, 8
  %37 = udiv i32 %36, 8192
  %38 = getelementptr inbounds [8192 x [8 x float]], ptr %arg6, i32 0, i32 %36, i32 %35
  %39 = load float, ptr %38, align 4, !invariant.load !297
  %region_0_47_constant_102 = load float, ptr @108, align 4
  %40 = add i32 %36, 0
  %41 = add i32 %35, 8
  %42 = getelementptr inbounds [8192 x [16 x float]], ptr %arg7, i32 0, i32 %40, i32 %41
  %43 = load float, ptr %42, align 4, !invariant.load !297
  %multiply.23 = fmul float %region_0_47_constant_102, %43
  %subtract.24 = fsub float %39, %multiply.23
  br label %concatenate.26.merge

concatenate.pivot.1024.:                          ; preds = %fusion_728.in_bounds-true
  %44 = icmp ult i32 %3, 1024
  br i1 %44, label %concatenate.pivot.0., label %concatenate.pivot.13312.

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.1024.
  br label %concat_index_from_operand_id0

concatenate.pivot.13312.:                         ; preds = %concatenate.pivot.1024.
  %45 = icmp ult i32 %3, 13312
  br i1 %45, label %concatenate.pivot.1024.3, label %concatenate.pivot.13312.4

concatenate.pivot.1024.3:                         ; preds = %concatenate.pivot.13312.
  br label %concat_index_from_operand_id1

concatenate.pivot.13312.4:                        ; preds = %concatenate.pivot.13312.
  br label %concat_index_from_operand_id2

concatenate.26.merge:                             ; preds = %concat_index_from_operand_id2, %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %46 = phi float [ %subtract.14, %concat_index_from_operand_id0 ], [ %subtract.19, %concat_index_from_operand_id1 ], [ %subtract.24, %concat_index_from_operand_id2 ]
  br label %concatenate.pivot.1024.11

concat_index_from_operand_id05:                   ; preds = %concatenate.pivot.0.12
  %47 = phi i32 [ 0, %concatenate.pivot.0.12 ]
  %48 = sub nsw i32 %3, %47
  %49 = mul nuw nsw i32 %48, 1
  %50 = add nuw nsw i32 0, %49
  %51 = urem i32 %50, 128
  %52 = udiv i32 %50, 128
  %53 = udiv i32 %52, 8
  %54 = getelementptr inbounds [8 x [128 x float]], ptr %arg2, i32 0, i32 %52, i32 %51
  %55 = load float, ptr %54, align 4, !invariant.load !297
  %region_0_47_constant_106 = load float, ptr @108, align 4
  %56 = add i32 %52, 0
  %57 = add i32 %51, 0
  %58 = getelementptr inbounds [16 x [128 x float]], ptr %arg1, i32 0, i32 %56, i32 %57
  %59 = load float, ptr %58, align 4, !invariant.load !297
  %multiply.29 = fmul float %region_0_47_constant_106, %59
  %subtract.30 = fsub float %55, %multiply.29
  br label %concatenate.40.merge

concat_index_from_operand_id17:                   ; preds = %concatenate.pivot.1024.14
  %60 = phi i32 [ 1024, %concatenate.pivot.1024.14 ]
  %61 = sub nsw i32 %3, %60
  %62 = mul nuw nsw i32 %61, 1
  %63 = add nuw nsw i32 0, %62
  %64 = urem i32 %63, 128
  %65 = udiv i32 %63, 128
  %66 = udiv i32 %65, 96
  %67 = getelementptr inbounds [96 x [128 x float]], ptr %arg5, i32 0, i32 %65, i32 %64
  %68 = load float, ptr %67, align 4, !invariant.load !297
  %region_0_47_constant_108 = load float, ptr @108, align 4
  %69 = add i32 %65, 0
  %70 = add i32 %64, 0
  %71 = getelementptr inbounds [96 x [256 x float]], ptr %arg4, i32 0, i32 %69, i32 %70
  %72 = load float, ptr %71, align 4, !invariant.load !297
  %multiply.33 = fmul float %region_0_47_constant_108, %72
  %subtract.34 = fsub float %68, %multiply.33
  br label %concatenate.40.merge

concat_index_from_operand_id29:                   ; preds = %concatenate.pivot.13312.15
  %73 = phi i32 [ 13312, %concatenate.pivot.13312.15 ]
  %74 = sub nsw i32 %3, %73
  %75 = mul nuw nsw i32 %74, 1
  %76 = add nuw nsw i32 0, %75
  %77 = urem i32 %76, 8
  %78 = udiv i32 %76, 8
  %79 = udiv i32 %78, 8192
  %80 = getelementptr inbounds [8192 x [8 x float]], ptr %arg8, i32 0, i32 %78, i32 %77
  %81 = load float, ptr %80, align 4, !invariant.load !297
  %region_0_47_constant_1010 = load float, ptr @108, align 4
  %82 = add i32 %78, 0
  %83 = add i32 %77, 0
  %84 = getelementptr inbounds [8192 x [16 x float]], ptr %arg7, i32 0, i32 %82, i32 %83
  %85 = load float, ptr %84, align 4, !invariant.load !297
  %multiply.37 = fmul float %region_0_47_constant_1010, %85
  %subtract.38 = fsub float %81, %multiply.37
  br label %concatenate.40.merge

concatenate.pivot.1024.11:                        ; preds = %concatenate.26.merge
  %86 = icmp ult i32 %3, 1024
  br i1 %86, label %concatenate.pivot.0.12, label %concatenate.pivot.13312.13

concatenate.pivot.0.12:                           ; preds = %concatenate.pivot.1024.11
  br label %concat_index_from_operand_id05

concatenate.pivot.13312.13:                       ; preds = %concatenate.pivot.1024.11
  %87 = icmp ult i32 %3, 13312
  br i1 %87, label %concatenate.pivot.1024.14, label %concatenate.pivot.13312.15

concatenate.pivot.1024.14:                        ; preds = %concatenate.pivot.13312.13
  br label %concat_index_from_operand_id17

concatenate.pivot.13312.15:                       ; preds = %concatenate.pivot.13312.13
  br label %concat_index_from_operand_id29

concatenate.40.merge:                             ; preds = %concat_index_from_operand_id29, %concat_index_from_operand_id17, %concat_index_from_operand_id05
  %88 = phi float [ %subtract.30, %concat_index_from_operand_id05 ], [ %subtract.34, %concat_index_from_operand_id17 ], [ %subtract.38, %concat_index_from_operand_id29 ]
  br label %concatenate.pivot.1024.29

concat_index_from_operand_id017:                  ; preds = %concatenate.pivot.0.30
  %89 = phi i32 [ 0, %concatenate.pivot.0.30 ]
  %90 = sub nsw i32 %3, %89
  %91 = mul nuw nsw i32 %90, 1
  %92 = add nuw nsw i32 0, %91
  %93 = urem i32 %92, 128
  %94 = udiv i32 %92, 128
  %95 = udiv i32 %94, 8
  %96 = getelementptr inbounds [8 x [128 x float]], ptr %arg0, i32 0, i32 %94, i32 %93
  %97 = load float, ptr %96, align 4, !invariant.load !297
  %region_0_47_constant_1018 = load float, ptr @108, align 4
  %98 = add i32 %94, 8
  %99 = add i32 %93, 0
  %100 = getelementptr inbounds [16 x [128 x float]], ptr %arg1, i32 0, i32 %98, i32 %99
  %101 = load float, ptr %100, align 4, !invariant.load !297
  %multiply.1319 = fmul float %region_0_47_constant_1018, %101
  %subtract.1420 = fsub float %97, %multiply.1319
  br label %concatenate.26.merge16

concat_index_from_operand_id121:                  ; preds = %concatenate.pivot.1024.32
  %102 = phi i32 [ 1024, %concatenate.pivot.1024.32 ]
  %103 = sub nsw i32 %3, %102
  %104 = mul nuw nsw i32 %103, 1
  %105 = add nuw nsw i32 0, %104
  %106 = urem i32 %105, 128
  %107 = udiv i32 %105, 128
  %108 = udiv i32 %107, 96
  %109 = getelementptr inbounds [96 x [128 x float]], ptr %arg3, i32 0, i32 %107, i32 %106
  %110 = load float, ptr %109, align 4, !invariant.load !297
  %region_0_47_constant_1022 = load float, ptr @108, align 4
  %111 = add i32 %107, 0
  %112 = add i32 %106, 128
  %113 = getelementptr inbounds [96 x [256 x float]], ptr %arg4, i32 0, i32 %111, i32 %112
  %114 = load float, ptr %113, align 4, !invariant.load !297
  %multiply.1823 = fmul float %region_0_47_constant_1022, %114
  %subtract.1924 = fsub float %110, %multiply.1823
  br label %concatenate.26.merge16

concat_index_from_operand_id225:                  ; preds = %concatenate.pivot.13312.33
  %115 = phi i32 [ 13312, %concatenate.pivot.13312.33 ]
  %116 = sub nsw i32 %3, %115
  %117 = mul nuw nsw i32 %116, 1
  %118 = add nuw nsw i32 0, %117
  %119 = urem i32 %118, 8
  %120 = udiv i32 %118, 8
  %121 = udiv i32 %120, 8192
  %122 = getelementptr inbounds [8192 x [8 x float]], ptr %arg6, i32 0, i32 %120, i32 %119
  %123 = load float, ptr %122, align 4, !invariant.load !297
  %region_0_47_constant_1026 = load float, ptr @108, align 4
  %124 = add i32 %120, 0
  %125 = add i32 %119, 8
  %126 = getelementptr inbounds [8192 x [16 x float]], ptr %arg7, i32 0, i32 %124, i32 %125
  %127 = load float, ptr %126, align 4, !invariant.load !297
  %multiply.2327 = fmul float %region_0_47_constant_1026, %127
  %subtract.2428 = fsub float %123, %multiply.2327
  br label %concatenate.26.merge16

concatenate.pivot.1024.29:                        ; preds = %concatenate.40.merge
  %128 = icmp ult i32 %3, 1024
  br i1 %128, label %concatenate.pivot.0.30, label %concatenate.pivot.13312.31

concatenate.pivot.0.30:                           ; preds = %concatenate.pivot.1024.29
  br label %concat_index_from_operand_id017

concatenate.pivot.13312.31:                       ; preds = %concatenate.pivot.1024.29
  %129 = icmp ult i32 %3, 13312
  br i1 %129, label %concatenate.pivot.1024.32, label %concatenate.pivot.13312.33

concatenate.pivot.1024.32:                        ; preds = %concatenate.pivot.13312.31
  br label %concat_index_from_operand_id121

concatenate.pivot.13312.33:                       ; preds = %concatenate.pivot.13312.31
  br label %concat_index_from_operand_id225

concatenate.26.merge16:                           ; preds = %concat_index_from_operand_id225, %concat_index_from_operand_id121, %concat_index_from_operand_id017
  %130 = phi float [ %subtract.1420, %concat_index_from_operand_id017 ], [ %subtract.1924, %concat_index_from_operand_id121 ], [ %subtract.2428, %concat_index_from_operand_id225 ]
  br label %concatenate.pivot.1024.47

concat_index_from_operand_id035:                  ; preds = %concatenate.pivot.0.48
  %131 = phi i32 [ 0, %concatenate.pivot.0.48 ]
  %132 = sub nsw i32 %3, %131
  %133 = mul nuw nsw i32 %132, 1
  %134 = add nuw nsw i32 0, %133
  %135 = urem i32 %134, 128
  %136 = udiv i32 %134, 128
  %137 = udiv i32 %136, 8
  %138 = getelementptr inbounds [8 x [128 x float]], ptr %arg2, i32 0, i32 %136, i32 %135
  %139 = load float, ptr %138, align 4, !invariant.load !297
  %region_0_47_constant_1036 = load float, ptr @108, align 4
  %140 = add i32 %136, 0
  %141 = add i32 %135, 0
  %142 = getelementptr inbounds [16 x [128 x float]], ptr %arg1, i32 0, i32 %140, i32 %141
  %143 = load float, ptr %142, align 4, !invariant.load !297
  %multiply.2937 = fmul float %region_0_47_constant_1036, %143
  %subtract.3038 = fsub float %139, %multiply.2937
  br label %concatenate.40.merge34

concat_index_from_operand_id139:                  ; preds = %concatenate.pivot.1024.50
  %144 = phi i32 [ 1024, %concatenate.pivot.1024.50 ]
  %145 = sub nsw i32 %3, %144
  %146 = mul nuw nsw i32 %145, 1
  %147 = add nuw nsw i32 0, %146
  %148 = urem i32 %147, 128
  %149 = udiv i32 %147, 128
  %150 = udiv i32 %149, 96
  %151 = getelementptr inbounds [96 x [128 x float]], ptr %arg5, i32 0, i32 %149, i32 %148
  %152 = load float, ptr %151, align 4, !invariant.load !297
  %region_0_47_constant_1040 = load float, ptr @108, align 4
  %153 = add i32 %149, 0
  %154 = add i32 %148, 0
  %155 = getelementptr inbounds [96 x [256 x float]], ptr %arg4, i32 0, i32 %153, i32 %154
  %156 = load float, ptr %155, align 4, !invariant.load !297
  %multiply.3341 = fmul float %region_0_47_constant_1040, %156
  %subtract.3442 = fsub float %152, %multiply.3341
  br label %concatenate.40.merge34

concat_index_from_operand_id243:                  ; preds = %concatenate.pivot.13312.51
  %157 = phi i32 [ 13312, %concatenate.pivot.13312.51 ]
  %158 = sub nsw i32 %3, %157
  %159 = mul nuw nsw i32 %158, 1
  %160 = add nuw nsw i32 0, %159
  %161 = urem i32 %160, 8
  %162 = udiv i32 %160, 8
  %163 = udiv i32 %162, 8192
  %164 = getelementptr inbounds [8192 x [8 x float]], ptr %arg8, i32 0, i32 %162, i32 %161
  %165 = load float, ptr %164, align 4, !invariant.load !297
  %region_0_47_constant_1044 = load float, ptr @108, align 4
  %166 = add i32 %162, 0
  %167 = add i32 %161, 0
  %168 = getelementptr inbounds [8192 x [16 x float]], ptr %arg7, i32 0, i32 %166, i32 %167
  %169 = load float, ptr %168, align 4, !invariant.load !297
  %multiply.3745 = fmul float %region_0_47_constant_1044, %169
  %subtract.3846 = fsub float %165, %multiply.3745
  br label %concatenate.40.merge34

concatenate.pivot.1024.47:                        ; preds = %concatenate.26.merge16
  %170 = icmp ult i32 %3, 1024
  br i1 %170, label %concatenate.pivot.0.48, label %concatenate.pivot.13312.49

concatenate.pivot.0.48:                           ; preds = %concatenate.pivot.1024.47
  br label %concat_index_from_operand_id035

concatenate.pivot.13312.49:                       ; preds = %concatenate.pivot.1024.47
  %171 = icmp ult i32 %3, 13312
  br i1 %171, label %concatenate.pivot.1024.50, label %concatenate.pivot.13312.51

concatenate.pivot.1024.50:                        ; preds = %concatenate.pivot.13312.49
  br label %concat_index_from_operand_id139

concatenate.pivot.13312.51:                       ; preds = %concatenate.pivot.13312.49
  br label %concat_index_from_operand_id243

concatenate.40.merge34:                           ; preds = %concat_index_from_operand_id243, %concat_index_from_operand_id139, %concat_index_from_operand_id035
  %172 = phi float [ %subtract.3038, %concat_index_from_operand_id035 ], [ %subtract.3442, %concat_index_from_operand_id139 ], [ %subtract.3846, %concat_index_from_operand_id243 ]
  br label %concatenate.pivot.1024.65

concat_index_from_operand_id053:                  ; preds = %concatenate.pivot.0.66
  %173 = phi i32 [ 0, %concatenate.pivot.0.66 ]
  %174 = sub nsw i32 %3, %173
  %175 = mul nuw nsw i32 %174, 1
  %176 = add nuw nsw i32 0, %175
  %177 = urem i32 %176, 128
  %178 = udiv i32 %176, 128
  %179 = udiv i32 %178, 8
  %180 = getelementptr inbounds [8 x [128 x float]], ptr %arg0, i32 0, i32 %178, i32 %177
  %181 = load float, ptr %180, align 4, !invariant.load !297
  %region_0_47_constant_1054 = load float, ptr @108, align 4
  %182 = add i32 %178, 8
  %183 = add i32 %177, 0
  %184 = getelementptr inbounds [16 x [128 x float]], ptr %arg1, i32 0, i32 %182, i32 %183
  %185 = load float, ptr %184, align 4, !invariant.load !297
  %multiply.1355 = fmul float %region_0_47_constant_1054, %185
  %subtract.1456 = fsub float %181, %multiply.1355
  br label %concatenate.26.merge52

concat_index_from_operand_id157:                  ; preds = %concatenate.pivot.1024.68
  %186 = phi i32 [ 1024, %concatenate.pivot.1024.68 ]
  %187 = sub nsw i32 %3, %186
  %188 = mul nuw nsw i32 %187, 1
  %189 = add nuw nsw i32 0, %188
  %190 = urem i32 %189, 128
  %191 = udiv i32 %189, 128
  %192 = udiv i32 %191, 96
  %193 = getelementptr inbounds [96 x [128 x float]], ptr %arg3, i32 0, i32 %191, i32 %190
  %194 = load float, ptr %193, align 4, !invariant.load !297
  %region_0_47_constant_1058 = load float, ptr @108, align 4
  %195 = add i32 %191, 0
  %196 = add i32 %190, 128
  %197 = getelementptr inbounds [96 x [256 x float]], ptr %arg4, i32 0, i32 %195, i32 %196
  %198 = load float, ptr %197, align 4, !invariant.load !297
  %multiply.1859 = fmul float %region_0_47_constant_1058, %198
  %subtract.1960 = fsub float %194, %multiply.1859
  br label %concatenate.26.merge52

concat_index_from_operand_id261:                  ; preds = %concatenate.pivot.13312.69
  %199 = phi i32 [ 13312, %concatenate.pivot.13312.69 ]
  %200 = sub nsw i32 %3, %199
  %201 = mul nuw nsw i32 %200, 1
  %202 = add nuw nsw i32 0, %201
  %203 = urem i32 %202, 8
  %204 = udiv i32 %202, 8
  %205 = udiv i32 %204, 8192
  %206 = getelementptr inbounds [8192 x [8 x float]], ptr %arg6, i32 0, i32 %204, i32 %203
  %207 = load float, ptr %206, align 4, !invariant.load !297
  %region_0_47_constant_1062 = load float, ptr @108, align 4
  %208 = add i32 %204, 0
  %209 = add i32 %203, 8
  %210 = getelementptr inbounds [8192 x [16 x float]], ptr %arg7, i32 0, i32 %208, i32 %209
  %211 = load float, ptr %210, align 4, !invariant.load !297
  %multiply.2363 = fmul float %region_0_47_constant_1062, %211
  %subtract.2464 = fsub float %207, %multiply.2363
  br label %concatenate.26.merge52

concatenate.pivot.1024.65:                        ; preds = %concatenate.40.merge34
  %212 = icmp ult i32 %3, 1024
  br i1 %212, label %concatenate.pivot.0.66, label %concatenate.pivot.13312.67

concatenate.pivot.0.66:                           ; preds = %concatenate.pivot.1024.65
  br label %concat_index_from_operand_id053

concatenate.pivot.13312.67:                       ; preds = %concatenate.pivot.1024.65
  %213 = icmp ult i32 %3, 13312
  br i1 %213, label %concatenate.pivot.1024.68, label %concatenate.pivot.13312.69

concatenate.pivot.1024.68:                        ; preds = %concatenate.pivot.13312.67
  br label %concat_index_from_operand_id157

concatenate.pivot.13312.69:                       ; preds = %concatenate.pivot.13312.67
  br label %concat_index_from_operand_id261

concatenate.26.merge52:                           ; preds = %concat_index_from_operand_id261, %concat_index_from_operand_id157, %concat_index_from_operand_id053
  %214 = phi float [ %subtract.1456, %concat_index_from_operand_id053 ], [ %subtract.1960, %concat_index_from_operand_id157 ], [ %subtract.2464, %concat_index_from_operand_id261 ]
  br label %concatenate.pivot.1024.83

concat_index_from_operand_id071:                  ; preds = %concatenate.pivot.0.84
  %215 = phi i32 [ 0, %concatenate.pivot.0.84 ]
  %216 = sub nsw i32 %3, %215
  %217 = mul nuw nsw i32 %216, 1
  %218 = add nuw nsw i32 0, %217
  %219 = urem i32 %218, 128
  %220 = udiv i32 %218, 128
  %221 = udiv i32 %220, 8
  %222 = getelementptr inbounds [8 x [128 x float]], ptr %arg2, i32 0, i32 %220, i32 %219
  %223 = load float, ptr %222, align 4, !invariant.load !297
  %region_0_47_constant_1072 = load float, ptr @108, align 4
  %224 = add i32 %220, 0
  %225 = add i32 %219, 0
  %226 = getelementptr inbounds [16 x [128 x float]], ptr %arg1, i32 0, i32 %224, i32 %225
  %227 = load float, ptr %226, align 4, !invariant.load !297
  %multiply.2973 = fmul float %region_0_47_constant_1072, %227
  %subtract.3074 = fsub float %223, %multiply.2973
  br label %concatenate.40.merge70

concat_index_from_operand_id175:                  ; preds = %concatenate.pivot.1024.86
  %228 = phi i32 [ 1024, %concatenate.pivot.1024.86 ]
  %229 = sub nsw i32 %3, %228
  %230 = mul nuw nsw i32 %229, 1
  %231 = add nuw nsw i32 0, %230
  %232 = urem i32 %231, 128
  %233 = udiv i32 %231, 128
  %234 = udiv i32 %233, 96
  %235 = getelementptr inbounds [96 x [128 x float]], ptr %arg5, i32 0, i32 %233, i32 %232
  %236 = load float, ptr %235, align 4, !invariant.load !297
  %region_0_47_constant_1076 = load float, ptr @108, align 4
  %237 = add i32 %233, 0
  %238 = add i32 %232, 0
  %239 = getelementptr inbounds [96 x [256 x float]], ptr %arg4, i32 0, i32 %237, i32 %238
  %240 = load float, ptr %239, align 4, !invariant.load !297
  %multiply.3377 = fmul float %region_0_47_constant_1076, %240
  %subtract.3478 = fsub float %236, %multiply.3377
  br label %concatenate.40.merge70

concat_index_from_operand_id279:                  ; preds = %concatenate.pivot.13312.87
  %241 = phi i32 [ 13312, %concatenate.pivot.13312.87 ]
  %242 = sub nsw i32 %3, %241
  %243 = mul nuw nsw i32 %242, 1
  %244 = add nuw nsw i32 0, %243
  %245 = urem i32 %244, 8
  %246 = udiv i32 %244, 8
  %247 = udiv i32 %246, 8192
  %248 = getelementptr inbounds [8192 x [8 x float]], ptr %arg8, i32 0, i32 %246, i32 %245
  %249 = load float, ptr %248, align 4, !invariant.load !297
  %region_0_47_constant_1080 = load float, ptr @108, align 4
  %250 = add i32 %246, 0
  %251 = add i32 %245, 0
  %252 = getelementptr inbounds [8192 x [16 x float]], ptr %arg7, i32 0, i32 %250, i32 %251
  %253 = load float, ptr %252, align 4, !invariant.load !297
  %multiply.3781 = fmul float %region_0_47_constant_1080, %253
  %subtract.3882 = fsub float %249, %multiply.3781
  br label %concatenate.40.merge70

concatenate.pivot.1024.83:                        ; preds = %concatenate.26.merge52
  %254 = icmp ult i32 %3, 1024
  br i1 %254, label %concatenate.pivot.0.84, label %concatenate.pivot.13312.85

concatenate.pivot.0.84:                           ; preds = %concatenate.pivot.1024.83
  br label %concat_index_from_operand_id071

concatenate.pivot.13312.85:                       ; preds = %concatenate.pivot.1024.83
  %255 = icmp ult i32 %3, 13312
  br i1 %255, label %concatenate.pivot.1024.86, label %concatenate.pivot.13312.87

concatenate.pivot.1024.86:                        ; preds = %concatenate.pivot.13312.85
  br label %concat_index_from_operand_id175

concatenate.pivot.13312.87:                       ; preds = %concatenate.pivot.13312.85
  br label %concat_index_from_operand_id279

concatenate.40.merge70:                           ; preds = %concat_index_from_operand_id279, %concat_index_from_operand_id175, %concat_index_from_operand_id071
  %256 = phi float [ %subtract.3074, %concat_index_from_operand_id071 ], [ %subtract.3478, %concat_index_from_operand_id175 ], [ %subtract.3882, %concat_index_from_operand_id279 ]
  %257 = icmp sge i32 %3, 0
  %258 = icmp slt i32 %3, 1024
  %259 = and i1 %257, %258
  br i1 %259, label %slice0-true, label %slice0-after

slice0-after:                                     ; preds = %slice0-true, %concatenate.40.merge70
  %260 = icmp sge i32 %3, 0
  %261 = icmp slt i32 %3, 1024
  %262 = and i1 %260, %261
  br i1 %262, label %slice1-true, label %slice1-after

slice1-after:                                     ; preds = %slice1-true, %slice0-after
  %263 = icmp sge i32 %3, 1024
  %264 = icmp slt i32 %3, 13312
  %265 = and i1 %263, %264
  br i1 %265, label %slice2-true, label %slice2-after

slice2-after:                                     ; preds = %slice2-true, %slice1-after
  %266 = icmp sge i32 %3, 1024
  %267 = icmp slt i32 %3, 13312
  %268 = and i1 %266, %267
  br i1 %268, label %slice3-true, label %slice3-after

slice3-after:                                     ; preds = %slice3-true, %slice2-after
  %269 = icmp sge i32 %3, 13312
  %270 = icmp slt i32 %3, 78848
  %271 = and i1 %269, %270
  br i1 %271, label %slice4-true, label %slice4-after

slice4-after:                                     ; preds = %slice4-true, %slice3-after
  %272 = icmp sge i32 %3, 13312
  %273 = icmp slt i32 %3, 78848
  %274 = and i1 %272, %273
  br i1 %274, label %slice5-true, label %slice5-after

slice5-after:                                     ; preds = %slice5-true, %slice4-after
  br label %fusion_728.in_bounds-after

slice0-true:                                      ; preds = %concatenate.40.merge70
  %275 = sub i32 %3, 0
  %276 = getelementptr inbounds [1024 x float], ptr %arg9, i32 0, i32 %275
  store float %46, ptr %276, align 4
  br label %slice0-after

slice1-true:                                      ; preds = %slice0-after
  %277 = sub i32 %3, 0
  %278 = getelementptr inbounds [1024 x float], ptr %arg10, i32 0, i32 %277
  store float %88, ptr %278, align 4
  br label %slice1-after

slice2-true:                                      ; preds = %slice1-after
  %279 = sub i32 %3, 1024
  %280 = getelementptr inbounds [12288 x float], ptr %arg11, i32 0, i32 %279
  store float %130, ptr %280, align 4
  br label %slice2-after

slice3-true:                                      ; preds = %slice2-after
  %281 = sub i32 %3, 1024
  %282 = getelementptr inbounds [12288 x float], ptr %arg12, i32 0, i32 %281
  store float %172, ptr %282, align 4
  br label %slice3-after

slice4-true:                                      ; preds = %slice3-after
  %283 = sub i32 %3, 13312
  %284 = getelementptr inbounds [65536 x float], ptr %arg13, i32 0, i32 %283
  store float %214, ptr %284, align 4
  br label %slice4-after

slice5-true:                                      ; preds = %slice4-after
  %285 = sub i32 %3, 13312
  %286 = getelementptr inbounds [65536 x float], ptr %arg14, i32 0, i32 %285
  store float %256, ptr %286, align 4
  br label %slice5-after
}

define void @fusion_729(ptr noalias align 128 dereferenceable(65536) %arg0, ptr noalias align 128 dereferenceable(4) %arg1, ptr noalias align 128 dereferenceable(65536) %arg2, ptr noalias align 128 dereferenceable(65536) %arg3, ptr noalias align 128 dereferenceable(65536) %arg4, ptr noalias align 128 dereferenceable(65536) %arg5, ptr noalias align 128 dereferenceable(1024) %arg6, ptr noalias align 128 dereferenceable(1024) %arg7, ptr noalias align 128 dereferenceable(1024) %arg8, ptr noalias align 128 dereferenceable(1024) %arg9, ptr noalias align 128 dereferenceable(1024) %arg10) {
entry:
  %return_buffer357 = alloca float, align 4
  %result_from_other_lane355 = alloca float, align 4
  %return_buffer354 = alloca float, align 4
  %result_from_other_lane352 = alloca float, align 4
  %return_buffer351 = alloca float, align 4
  %result_from_other_lane349 = alloca float, align 4
  %return_buffer348 = alloca float, align 4
  %result_from_other_lane346 = alloca float, align 4
  %return_buffer345 = alloca float, align 4
  %result_from_other_lane343 = alloca float, align 4
  %return_buffer335 = alloca float, align 4
  %result_from_other_lane333 = alloca float, align 4
  %return_buffer332 = alloca float, align 4
  %result_from_other_lane330 = alloca float, align 4
  %return_buffer329 = alloca float, align 4
  %result_from_other_lane327 = alloca float, align 4
  %return_buffer326 = alloca float, align 4
  %result_from_other_lane324 = alloca float, align 4
  %return_buffer323 = alloca float, align 4
  %result_from_other_lane321 = alloca float, align 4
  %return_buffer317 = alloca float, align 4
  %return_buffer311 = alloca float, align 4
  %tile_loop.invar_address304 = alloca i32, align 4
  %y_in_tile.invar_address298 = alloca i32, align 4
  %partial_reduction_result284 = alloca float, i32 2, align 4
  %reduction_input_address283 = alloca float, align 4
  %return_buffer278 = alloca float, align 4
  %result_from_other_lane276 = alloca float, align 4
  %return_buffer275 = alloca float, align 4
  %result_from_other_lane273 = alloca float, align 4
  %return_buffer272 = alloca float, align 4
  %result_from_other_lane270 = alloca float, align 4
  %return_buffer269 = alloca float, align 4
  %result_from_other_lane267 = alloca float, align 4
  %return_buffer266 = alloca float, align 4
  %result_from_other_lane264 = alloca float, align 4
  %return_buffer256 = alloca float, align 4
  %result_from_other_lane254 = alloca float, align 4
  %return_buffer253 = alloca float, align 4
  %result_from_other_lane251 = alloca float, align 4
  %return_buffer250 = alloca float, align 4
  %result_from_other_lane248 = alloca float, align 4
  %return_buffer247 = alloca float, align 4
  %result_from_other_lane245 = alloca float, align 4
  %return_buffer244 = alloca float, align 4
  %result_from_other_lane242 = alloca float, align 4
  %return_buffer238 = alloca float, align 4
  %return_buffer232 = alloca float, align 4
  %tile_loop.invar_address225 = alloca i32, align 4
  %y_in_tile.invar_address219 = alloca i32, align 4
  %partial_reduction_result205 = alloca float, i32 2, align 4
  %reduction_input_address204 = alloca float, align 4
  %return_buffer199 = alloca float, align 4
  %result_from_other_lane197 = alloca float, align 4
  %return_buffer196 = alloca float, align 4
  %result_from_other_lane194 = alloca float, align 4
  %return_buffer193 = alloca float, align 4
  %result_from_other_lane191 = alloca float, align 4
  %return_buffer190 = alloca float, align 4
  %result_from_other_lane188 = alloca float, align 4
  %return_buffer187 = alloca float, align 4
  %result_from_other_lane185 = alloca float, align 4
  %return_buffer177 = alloca float, align 4
  %result_from_other_lane175 = alloca float, align 4
  %return_buffer174 = alloca float, align 4
  %result_from_other_lane172 = alloca float, align 4
  %return_buffer171 = alloca float, align 4
  %result_from_other_lane169 = alloca float, align 4
  %return_buffer168 = alloca float, align 4
  %result_from_other_lane166 = alloca float, align 4
  %return_buffer165 = alloca float, align 4
  %result_from_other_lane163 = alloca float, align 4
  %return_buffer159 = alloca float, align 4
  %return_buffer153 = alloca float, align 4
  %tile_loop.invar_address146 = alloca i32, align 4
  %y_in_tile.invar_address140 = alloca i32, align 4
  %partial_reduction_result126 = alloca float, i32 2, align 4
  %reduction_input_address125 = alloca float, align 4
  %return_buffer120 = alloca float, align 4
  %result_from_other_lane118 = alloca float, align 4
  %return_buffer117 = alloca float, align 4
  %result_from_other_lane115 = alloca float, align 4
  %return_buffer114 = alloca float, align 4
  %result_from_other_lane112 = alloca float, align 4
  %return_buffer111 = alloca float, align 4
  %result_from_other_lane109 = alloca float, align 4
  %return_buffer108 = alloca float, align 4
  %result_from_other_lane106 = alloca float, align 4
  %return_buffer98 = alloca float, align 4
  %result_from_other_lane96 = alloca float, align 4
  %return_buffer95 = alloca float, align 4
  %result_from_other_lane93 = alloca float, align 4
  %return_buffer92 = alloca float, align 4
  %result_from_other_lane90 = alloca float, align 4
  %return_buffer89 = alloca float, align 4
  %result_from_other_lane87 = alloca float, align 4
  %return_buffer86 = alloca float, align 4
  %result_from_other_lane84 = alloca float, align 4
  %return_buffer80 = alloca float, align 4
  %return_buffer74 = alloca float, align 4
  %tile_loop.invar_address67 = alloca i32, align 4
  %y_in_tile.invar_address61 = alloca i32, align 4
  %partial_reduction_result47 = alloca float, i32 2, align 4
  %reduction_input_address46 = alloca float, align 4
  %return_buffer41 = alloca float, align 4
  %result_from_other_lane39 = alloca float, align 4
  %return_buffer38 = alloca float, align 4
  %result_from_other_lane36 = alloca float, align 4
  %return_buffer35 = alloca float, align 4
  %result_from_other_lane33 = alloca float, align 4
  %return_buffer32 = alloca float, align 4
  %result_from_other_lane30 = alloca float, align 4
  %return_buffer29 = alloca float, align 4
  %result_from_other_lane27 = alloca float, align 4
  %return_buffer23 = alloca float, align 4
  %result_from_other_lane21 = alloca float, align 4
  %return_buffer20 = alloca float, align 4
  %result_from_other_lane18 = alloca float, align 4
  %return_buffer17 = alloca float, align 4
  %result_from_other_lane15 = alloca float, align 4
  %return_buffer14 = alloca float, align 4
  %result_from_other_lane12 = alloca float, align 4
  %return_buffer11 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer9 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, i32 2, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !432
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after43, %entry
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %reduce-group-1-true, label %reduce-group-1-after

reduce-group-1-after:                             ; preds = %reduction_write_output-after122, %reduce-group-0-after
  %3 = icmp eq i32 %0, 2
  br i1 %3, label %reduce-group-2-true, label %reduce-group-2-after

reduce-group-2-after:                             ; preds = %reduction_write_output-after201, %reduce-group-1-after
  %4 = icmp eq i32 %0, 3
  br i1 %4, label %reduce-group-3-true, label %reduce-group-3-after

reduce-group-3-after:                             ; preds = %reduction_write_output-after280, %reduce-group-2-after
  %5 = icmp eq i32 %0, 4
  br i1 %5, label %reduce-group-4-true, label %reduce-group-4-after

reduce-group-4-after:                             ; preds = %reduction_write_output-after359, %reduce-group-3-after
  ret void

reduce-group-0-true:                              ; preds = %entry
  %Arg_1.2 = load float, ptr %arg1, align 4, !invariant.load !297
  %6 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %Arg_1.2, ptr %6, align 4
  %7 = getelementptr inbounds float, ptr %partial_reduction_result, i32 1
  store float %Arg_1.2, ptr %7, align 4
  %8 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %9 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !367
  %10 = urem i32 %8, 1024
  %11 = udiv i32 %8, 1024
  %12 = mul i32 %9, 1
  %13 = add i32 %12, %11
  %14 = icmp ult i32 %13, 4
  br i1 %14, label %15, label %early_return

15:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %10, 32
  %thread_id.y = udiv i32 %10, 32
  %lane_id = urem i32 %10, 32
  %16 = udiv i32 %13, 1
  %17 = urem i32 %16, 4
  %18 = udiv i32 %13, 4
  %19 = urem i32 %18, 1
  %20 = udiv i32 %13, 4
  %21 = icmp eq i32 %19, 0
  %tile_bound = select i1 %21, i32 64, i32 4096
  %22 = icmp eq i32 %17, 3
  %tile_bound1 = select i1 %22, i32 64, i32 64
  %tile_origin.0 = mul i32 %20, 1
  %tile_origin.1 = mul i32 %19, 4096
  %tile_origin.2 = mul i32 %17, 64
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %15
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %23 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %23, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %24 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %25 = mul i32 %thread_id.x, 2
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after6, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %26 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %26, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %27 = icmp eq i32 %tile_loop.indvar, 0
  %28 = mul i32 %tile_loop.indvar, 2
  %29 = add i32 %28, 0
  %x_loc = add i32 %29, %25
  %30 = add i32 %tile_origin.1, %y_in_tile.indvar
  %31 = add i32 %tile_origin.2, %x_loc
  %32 = icmp ult i32 %x_loc, %tile_bound1
  br i1 %32, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body
  %33 = mul i32 %tile_loop.indvar, 2
  %34 = add i32 %33, 1
  %x_loc4 = add i32 %34, %25
  %35 = add i32 %tile_origin.1, %y_in_tile.indvar
  %36 = add i32 %tile_origin.2, %x_loc4
  %37 = icmp ult i32 %x_loc4, %tile_bound1
  br i1 %37, label %x_in_tile-true5, label %x_in_tile-after6

x_in_tile-after6:                                 ; preds = %x_in_tile-true5, %x_in_tile-after
  br label %tile_loop.loop_header, !llvm.loop !513

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !514

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache151, i32 0, i32 %11, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %38 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %39 = load float, ptr %current_output, align 4
  store float %39, ptr %38, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache151, i32 0, i32 %11, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %40 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result10 = load float, ptr %40, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result10, i32 16, i32 31)
  store float %41, ptr %result_from_other_lane, align 4
  call void @region_1_7__2(ptr %40, ptr %result_from_other_lane, ptr %return_buffer11)
  %42 = load float, ptr %return_buffer11, align 4
  store float %42, ptr %40, align 4
  %partial_reduction_result13 = load float, ptr %40, align 4
  %43 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result13, i32 8, i32 31)
  store float %43, ptr %result_from_other_lane12, align 4
  call void @region_1_7__2(ptr %40, ptr %result_from_other_lane12, ptr %return_buffer14)
  %44 = load float, ptr %return_buffer14, align 4
  store float %44, ptr %40, align 4
  %partial_reduction_result16 = load float, ptr %40, align 4
  %45 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result16, i32 4, i32 31)
  store float %45, ptr %result_from_other_lane15, align 4
  call void @region_1_7__2(ptr %40, ptr %result_from_other_lane15, ptr %return_buffer17)
  %46 = load float, ptr %return_buffer17, align 4
  store float %46, ptr %40, align 4
  %partial_reduction_result19 = load float, ptr %40, align 4
  %47 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result19, i32 2, i32 31)
  store float %47, ptr %result_from_other_lane18, align 4
  call void @region_1_7__2(ptr %40, ptr %result_from_other_lane18, ptr %return_buffer20)
  %48 = load float, ptr %return_buffer20, align 4
  store float %48, ptr %40, align 4
  %partial_reduction_result22 = load float, ptr %40, align 4
  %49 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result22, i32 1, i32 31)
  store float %49, ptr %result_from_other_lane21, align 4
  call void @region_1_7__2(ptr %40, ptr %result_from_other_lane21, ptr %return_buffer23)
  %50 = load float, ptr %return_buffer23, align 4
  store float %50, ptr %40, align 4
  %51 = icmp ult i32 %thread_id.x, %tile_bound
  %52 = mul i32 %thread_id.y, 2
  %53 = icmp ult i32 %52, %tile_bound1
  %54 = and i1 %53, %51
  %55 = icmp eq i32 %lane_id, 0
  %56 = and i1 %54, %55
  br i1 %56, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %shmem_output_address24 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache151, i32 0, i32 %11, i32 1, i32 %thread_id.x, i32 %thread_id.y
  %57 = addrspacecast ptr addrspace(3) %shmem_output_address24 to ptr
  %current_output25 = getelementptr inbounds float, ptr %partial_reduction_result, i32 1
  %58 = load float, ptr %current_output25, align 4
  store float %58, ptr %57, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr26 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache151, i32 0, i32 %11, i32 1, i32 %thread_id.y, i32 %thread_id.x
  %59 = addrspacecast ptr addrspace(3) %shmem_transposed_addr26 to ptr
  %partial_reduction_result28 = load float, ptr %59, align 4
  %60 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result28, i32 16, i32 31)
  store float %60, ptr %result_from_other_lane27, align 4
  call void @region_1_7__2(ptr %59, ptr %result_from_other_lane27, ptr %return_buffer29)
  %61 = load float, ptr %return_buffer29, align 4
  store float %61, ptr %59, align 4
  %partial_reduction_result31 = load float, ptr %59, align 4
  %62 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result31, i32 8, i32 31)
  store float %62, ptr %result_from_other_lane30, align 4
  call void @region_1_7__2(ptr %59, ptr %result_from_other_lane30, ptr %return_buffer32)
  %63 = load float, ptr %return_buffer32, align 4
  store float %63, ptr %59, align 4
  %partial_reduction_result34 = load float, ptr %59, align 4
  %64 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result34, i32 4, i32 31)
  store float %64, ptr %result_from_other_lane33, align 4
  call void @region_1_7__2(ptr %59, ptr %result_from_other_lane33, ptr %return_buffer35)
  %65 = load float, ptr %return_buffer35, align 4
  store float %65, ptr %59, align 4
  %partial_reduction_result37 = load float, ptr %59, align 4
  %66 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result37, i32 2, i32 31)
  store float %66, ptr %result_from_other_lane36, align 4
  call void @region_1_7__2(ptr %59, ptr %result_from_other_lane36, ptr %return_buffer38)
  %67 = load float, ptr %return_buffer38, align 4
  store float %67, ptr %59, align 4
  %partial_reduction_result40 = load float, ptr %59, align 4
  %68 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result40, i32 1, i32 31)
  store float %68, ptr %result_from_other_lane39, align 4
  call void @region_1_7__2(ptr %59, ptr %result_from_other_lane39, ptr %return_buffer41)
  %69 = load float, ptr %return_buffer41, align 4
  store float %69, ptr %59, align 4
  %70 = icmp ult i32 %thread_id.x, %tile_bound
  %71 = mul i32 %thread_id.y, 2
  %72 = icmp ult i32 %71, %tile_bound1
  %73 = and i1 %72, %70
  %74 = icmp eq i32 %lane_id, 0
  %75 = and i1 %73, %74
  br i1 %75, label %reduction_write_output-true42, label %reduction_write_output-after43

reduction_write_output-after43:                   ; preds = %reduction_write_output-true42, %reduction_write_output-after
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %76 = mul i32 %thread_id.x, 2
  %77 = sub i32 %x_loc, %76
  %Arg_0.1 = getelementptr inbounds [64 x [256 x float]], ptr %arg0, i32 0, i32 %30, i32 %31
  %Arg_0.13 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  store float %Arg_0.13, ptr %reduction_input_address, align 4
  %78 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %77
  call void @region_1_7__2(ptr %78, ptr %reduction_input_address, ptr %return_buffer)
  %79 = load float, ptr %return_buffer, align 4
  store float %79, ptr %78, align 4
  br label %x_in_tile-after

x_in_tile-true5:                                  ; preds = %x_in_tile-after
  %80 = mul i32 %thread_id.x, 2
  %81 = sub i32 %x_loc4, %80
  %Arg_0.17 = getelementptr inbounds [64 x [256 x float]], ptr %arg0, i32 0, i32 %35, i32 %36
  %Arg_0.18 = load float, ptr %Arg_0.17, align 4, !invariant.load !297
  store float %Arg_0.18, ptr %reduction_input_address, align 4
  %82 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %81
  call void @region_1_7__2(ptr %82, ptr %reduction_input_address, ptr %return_buffer9)
  %83 = load float, ptr %return_buffer9, align 4
  store float %83, ptr %82, align 4
  br label %x_in_tile-after6

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %84 = mul i32 %thread_id.y, 2
  %85 = add i32 %tile_origin.1, %thread_id.x
  %86 = add i32 %tile_origin.2, %84
  %87 = add i32 %86, 0
  %88 = mul i32 %tile_origin.0, 256
  %89 = add i32 %88, %87
  %90 = udiv i32 %89, 1
  %output_element_address = getelementptr inbounds [256 x float], ptr %arg6, i32 0, i32 %90
  %output = load float, ptr %40, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

reduction_write_output-true42:                    ; preds = %reduction_write_output-after
  %91 = mul i32 %thread_id.y, 2
  %92 = add i32 %tile_origin.1, %thread_id.x
  %93 = add i32 %tile_origin.2, %91
  %94 = add i32 %93, 1
  %95 = mul i32 %tile_origin.0, 256
  %96 = add i32 %95, %94
  %97 = udiv i32 %96, 1
  %output_element_address44 = getelementptr inbounds [256 x float], ptr %arg6, i32 0, i32 %97
  %output45 = load float, ptr %59, align 4
  store float %output45, ptr %output_element_address44, align 4
  br label %reduction_write_output-after43

reduce-group-1-true:                              ; preds = %reduce-group-0-after
  %Arg_1.248 = load float, ptr %arg1, align 4, !invariant.load !297
  %98 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 0
  store float %Arg_1.248, ptr %98, align 4
  %99 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 1
  store float %Arg_1.248, ptr %99, align 4
  %100 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %101 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !367
  %102 = urem i32 %100, 1024
  %103 = udiv i32 %100, 1024
  %104 = mul i32 %101, 1
  %105 = add i32 %104, %103
  %106 = icmp ult i32 %105, 4
  br i1 %106, label %107, label %early_return49

107:                                              ; preds = %reduce-group-1-true
  %thread_id.x50 = urem i32 %102, 32
  %thread_id.y51 = udiv i32 %102, 32
  %lane_id52 = urem i32 %102, 32
  %108 = udiv i32 %105, 1
  %109 = urem i32 %108, 4
  %110 = udiv i32 %105, 4
  %111 = urem i32 %110, 1
  %112 = udiv i32 %105, 4
  %113 = icmp eq i32 %111, 0
  %tile_bound53 = select i1 %113, i32 64, i32 4096
  %114 = icmp eq i32 %109, 3
  %tile_bound54 = select i1 %114, i32 64, i32 64
  %tile_origin.055 = mul i32 %112, 1
  %tile_origin.156 = mul i32 %111, 4096
  %tile_origin.257 = mul i32 %109, 64
  store i32 %thread_id.y51, ptr %y_in_tile.invar_address61, align 4
  br label %y_in_tile.loop_header59

y_in_tile.loop_header59:                          ; preds = %tile_loop.loop_exit64, %107
  %y_in_tile.indvar62 = load i32, ptr %y_in_tile.invar_address61, align 4
  %115 = icmp uge i32 %y_in_tile.indvar62, %tile_bound53
  br i1 %115, label %y_in_tile.loop_exit58, label %y_in_tile.loop_body60

y_in_tile.loop_body60:                            ; preds = %y_in_tile.loop_header59
  %invar.inc63 = add nuw nsw i32 %y_in_tile.indvar62, 32
  store i32 %invar.inc63, ptr %y_in_tile.invar_address61, align 4
  %116 = icmp eq i32 %y_in_tile.indvar62, %thread_id.y51
  %117 = mul i32 %thread_id.x50, 2
  store i32 0, ptr %tile_loop.invar_address67, align 4
  br label %tile_loop.loop_header65

tile_loop.loop_header65:                          ; preds = %x_in_tile-after77, %y_in_tile.loop_body60
  %tile_loop.indvar68 = load i32, ptr %tile_loop.invar_address67, align 4
  %118 = icmp uge i32 %tile_loop.indvar68, 1
  br i1 %118, label %tile_loop.loop_exit64, label %tile_loop.loop_body66

tile_loop.loop_body66:                            ; preds = %tile_loop.loop_header65
  %invar.inc69 = add nuw nsw i32 %tile_loop.indvar68, 1
  store i32 %invar.inc69, ptr %tile_loop.invar_address67, align 4
  %119 = icmp eq i32 %tile_loop.indvar68, 0
  %120 = mul i32 %tile_loop.indvar68, 2
  %121 = add i32 %120, 0
  %x_loc70 = add i32 %121, %117
  %122 = add i32 %tile_origin.156, %y_in_tile.indvar62
  %123 = add i32 %tile_origin.257, %x_loc70
  %124 = icmp ult i32 %x_loc70, %tile_bound54
  br i1 %124, label %x_in_tile-true71, label %x_in_tile-after72

x_in_tile-after72:                                ; preds = %x_in_tile-true71, %tile_loop.loop_body66
  %125 = mul i32 %tile_loop.indvar68, 2
  %126 = add i32 %125, 1
  %x_loc75 = add i32 %126, %117
  %127 = add i32 %tile_origin.156, %y_in_tile.indvar62
  %128 = add i32 %tile_origin.257, %x_loc75
  %129 = icmp ult i32 %x_loc75, %tile_bound54
  br i1 %129, label %x_in_tile-true76, label %x_in_tile-after77

x_in_tile-after77:                                ; preds = %x_in_tile-true76, %x_in_tile-after72
  br label %tile_loop.loop_header65, !llvm.loop !515

tile_loop.loop_exit64:                            ; preds = %tile_loop.loop_header65
  br label %y_in_tile.loop_header59, !llvm.loop !516

y_in_tile.loop_exit58:                            ; preds = %y_in_tile.loop_header59
  %shmem_output_address81 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache152, i32 0, i32 %103, i32 0, i32 %thread_id.x50, i32 %thread_id.y51
  %130 = addrspacecast ptr addrspace(3) %shmem_output_address81 to ptr
  %current_output82 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 0
  %131 = load float, ptr %current_output82, align 4
  store float %131, ptr %130, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr83 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache152, i32 0, i32 %103, i32 0, i32 %thread_id.y51, i32 %thread_id.x50
  %132 = addrspacecast ptr addrspace(3) %shmem_transposed_addr83 to ptr
  %partial_reduction_result85 = load float, ptr %132, align 4
  %133 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result85, i32 16, i32 31)
  store float %133, ptr %result_from_other_lane84, align 4
  call void @region_2_12__2(ptr %132, ptr %result_from_other_lane84, ptr %return_buffer86)
  %134 = load float, ptr %return_buffer86, align 4
  store float %134, ptr %132, align 4
  %partial_reduction_result88 = load float, ptr %132, align 4
  %135 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result88, i32 8, i32 31)
  store float %135, ptr %result_from_other_lane87, align 4
  call void @region_2_12__2(ptr %132, ptr %result_from_other_lane87, ptr %return_buffer89)
  %136 = load float, ptr %return_buffer89, align 4
  store float %136, ptr %132, align 4
  %partial_reduction_result91 = load float, ptr %132, align 4
  %137 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result91, i32 4, i32 31)
  store float %137, ptr %result_from_other_lane90, align 4
  call void @region_2_12__2(ptr %132, ptr %result_from_other_lane90, ptr %return_buffer92)
  %138 = load float, ptr %return_buffer92, align 4
  store float %138, ptr %132, align 4
  %partial_reduction_result94 = load float, ptr %132, align 4
  %139 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result94, i32 2, i32 31)
  store float %139, ptr %result_from_other_lane93, align 4
  call void @region_2_12__2(ptr %132, ptr %result_from_other_lane93, ptr %return_buffer95)
  %140 = load float, ptr %return_buffer95, align 4
  store float %140, ptr %132, align 4
  %partial_reduction_result97 = load float, ptr %132, align 4
  %141 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result97, i32 1, i32 31)
  store float %141, ptr %result_from_other_lane96, align 4
  call void @region_2_12__2(ptr %132, ptr %result_from_other_lane96, ptr %return_buffer98)
  %142 = load float, ptr %return_buffer98, align 4
  store float %142, ptr %132, align 4
  %143 = icmp ult i32 %thread_id.x50, %tile_bound53
  %144 = mul i32 %thread_id.y51, 2
  %145 = icmp ult i32 %144, %tile_bound54
  %146 = and i1 %145, %143
  %147 = icmp eq i32 %lane_id52, 0
  %148 = and i1 %146, %147
  br i1 %148, label %reduction_write_output-true99, label %reduction_write_output-after100

reduction_write_output-after100:                  ; preds = %reduction_write_output-true99, %y_in_tile.loop_exit58
  %shmem_output_address103 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache152, i32 0, i32 %103, i32 1, i32 %thread_id.x50, i32 %thread_id.y51
  %149 = addrspacecast ptr addrspace(3) %shmem_output_address103 to ptr
  %current_output104 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 1
  %150 = load float, ptr %current_output104, align 4
  store float %150, ptr %149, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr105 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache152, i32 0, i32 %103, i32 1, i32 %thread_id.y51, i32 %thread_id.x50
  %151 = addrspacecast ptr addrspace(3) %shmem_transposed_addr105 to ptr
  %partial_reduction_result107 = load float, ptr %151, align 4
  %152 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result107, i32 16, i32 31)
  store float %152, ptr %result_from_other_lane106, align 4
  call void @region_2_12__2(ptr %151, ptr %result_from_other_lane106, ptr %return_buffer108)
  %153 = load float, ptr %return_buffer108, align 4
  store float %153, ptr %151, align 4
  %partial_reduction_result110 = load float, ptr %151, align 4
  %154 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result110, i32 8, i32 31)
  store float %154, ptr %result_from_other_lane109, align 4
  call void @region_2_12__2(ptr %151, ptr %result_from_other_lane109, ptr %return_buffer111)
  %155 = load float, ptr %return_buffer111, align 4
  store float %155, ptr %151, align 4
  %partial_reduction_result113 = load float, ptr %151, align 4
  %156 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result113, i32 4, i32 31)
  store float %156, ptr %result_from_other_lane112, align 4
  call void @region_2_12__2(ptr %151, ptr %result_from_other_lane112, ptr %return_buffer114)
  %157 = load float, ptr %return_buffer114, align 4
  store float %157, ptr %151, align 4
  %partial_reduction_result116 = load float, ptr %151, align 4
  %158 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result116, i32 2, i32 31)
  store float %158, ptr %result_from_other_lane115, align 4
  call void @region_2_12__2(ptr %151, ptr %result_from_other_lane115, ptr %return_buffer117)
  %159 = load float, ptr %return_buffer117, align 4
  store float %159, ptr %151, align 4
  %partial_reduction_result119 = load float, ptr %151, align 4
  %160 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result119, i32 1, i32 31)
  store float %160, ptr %result_from_other_lane118, align 4
  call void @region_2_12__2(ptr %151, ptr %result_from_other_lane118, ptr %return_buffer120)
  %161 = load float, ptr %return_buffer120, align 4
  store float %161, ptr %151, align 4
  %162 = icmp ult i32 %thread_id.x50, %tile_bound53
  %163 = mul i32 %thread_id.y51, 2
  %164 = icmp ult i32 %163, %tile_bound54
  %165 = and i1 %164, %162
  %166 = icmp eq i32 %lane_id52, 0
  %167 = and i1 %165, %166
  br i1 %167, label %reduction_write_output-true121, label %reduction_write_output-after122

reduction_write_output-after122:                  ; preds = %reduction_write_output-true121, %reduction_write_output-after100
  br label %reduce-group-1-after

early_return49:                                   ; preds = %reduce-group-1-true
  ret void

x_in_tile-true71:                                 ; preds = %tile_loop.loop_body66
  %168 = mul i32 %thread_id.x50, 2
  %169 = sub i32 %x_loc70, %168
  %Arg_2.3 = getelementptr inbounds [64 x [256 x float]], ptr %arg2, i32 0, i32 %122, i32 %123
  %Arg_2.373 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  store float %Arg_2.373, ptr %reduction_input_address46, align 4
  %170 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 %169
  call void @region_2_12__2(ptr %170, ptr %reduction_input_address46, ptr %return_buffer74)
  %171 = load float, ptr %return_buffer74, align 4
  store float %171, ptr %170, align 4
  br label %x_in_tile-after72

x_in_tile-true76:                                 ; preds = %x_in_tile-after72
  %172 = mul i32 %thread_id.x50, 2
  %173 = sub i32 %x_loc75, %172
  %Arg_2.378 = getelementptr inbounds [64 x [256 x float]], ptr %arg2, i32 0, i32 %127, i32 %128
  %Arg_2.379 = load float, ptr %Arg_2.378, align 4, !invariant.load !297
  store float %Arg_2.379, ptr %reduction_input_address46, align 4
  %174 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 %173
  call void @region_2_12__2(ptr %174, ptr %reduction_input_address46, ptr %return_buffer80)
  %175 = load float, ptr %return_buffer80, align 4
  store float %175, ptr %174, align 4
  br label %x_in_tile-after77

reduction_write_output-true99:                    ; preds = %y_in_tile.loop_exit58
  %176 = mul i32 %thread_id.y51, 2
  %177 = add i32 %tile_origin.156, %thread_id.x50
  %178 = add i32 %tile_origin.257, %176
  %179 = add i32 %178, 0
  %180 = mul i32 %tile_origin.055, 256
  %181 = add i32 %180, %179
  %182 = udiv i32 %181, 1
  %output_element_address101 = getelementptr inbounds [256 x float], ptr %arg7, i32 0, i32 %182
  %output102 = load float, ptr %132, align 4
  store float %output102, ptr %output_element_address101, align 4
  br label %reduction_write_output-after100

reduction_write_output-true121:                   ; preds = %reduction_write_output-after100
  %183 = mul i32 %thread_id.y51, 2
  %184 = add i32 %tile_origin.156, %thread_id.x50
  %185 = add i32 %tile_origin.257, %183
  %186 = add i32 %185, 1
  %187 = mul i32 %tile_origin.055, 256
  %188 = add i32 %187, %186
  %189 = udiv i32 %188, 1
  %output_element_address123 = getelementptr inbounds [256 x float], ptr %arg7, i32 0, i32 %189
  %output124 = load float, ptr %151, align 4
  store float %output124, ptr %output_element_address123, align 4
  br label %reduction_write_output-after122

reduce-group-2-true:                              ; preds = %reduce-group-1-after
  %Arg_1.2127 = load float, ptr %arg1, align 4, !invariant.load !297
  %190 = getelementptr inbounds float, ptr %partial_reduction_result126, i32 0
  store float %Arg_1.2127, ptr %190, align 4
  %191 = getelementptr inbounds float, ptr %partial_reduction_result126, i32 1
  store float %Arg_1.2127, ptr %191, align 4
  %192 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %193 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !367
  %194 = urem i32 %192, 1024
  %195 = udiv i32 %192, 1024
  %196 = mul i32 %193, 1
  %197 = add i32 %196, %195
  %198 = icmp ult i32 %197, 4
  br i1 %198, label %199, label %early_return128

199:                                              ; preds = %reduce-group-2-true
  %thread_id.x129 = urem i32 %194, 32
  %thread_id.y130 = udiv i32 %194, 32
  %lane_id131 = urem i32 %194, 32
  %200 = udiv i32 %197, 1
  %201 = urem i32 %200, 4
  %202 = udiv i32 %197, 4
  %203 = urem i32 %202, 1
  %204 = udiv i32 %197, 4
  %205 = icmp eq i32 %203, 0
  %tile_bound132 = select i1 %205, i32 64, i32 4096
  %206 = icmp eq i32 %201, 3
  %tile_bound133 = select i1 %206, i32 64, i32 64
  %tile_origin.0134 = mul i32 %204, 1
  %tile_origin.1135 = mul i32 %203, 4096
  %tile_origin.2136 = mul i32 %201, 64
  store i32 %thread_id.y130, ptr %y_in_tile.invar_address140, align 4
  br label %y_in_tile.loop_header138

y_in_tile.loop_header138:                         ; preds = %tile_loop.loop_exit143, %199
  %y_in_tile.indvar141 = load i32, ptr %y_in_tile.invar_address140, align 4
  %207 = icmp uge i32 %y_in_tile.indvar141, %tile_bound132
  br i1 %207, label %y_in_tile.loop_exit137, label %y_in_tile.loop_body139

y_in_tile.loop_body139:                           ; preds = %y_in_tile.loop_header138
  %invar.inc142 = add nuw nsw i32 %y_in_tile.indvar141, 32
  store i32 %invar.inc142, ptr %y_in_tile.invar_address140, align 4
  %208 = icmp eq i32 %y_in_tile.indvar141, %thread_id.y130
  %209 = mul i32 %thread_id.x129, 2
  store i32 0, ptr %tile_loop.invar_address146, align 4
  br label %tile_loop.loop_header144

tile_loop.loop_header144:                         ; preds = %x_in_tile-after156, %y_in_tile.loop_body139
  %tile_loop.indvar147 = load i32, ptr %tile_loop.invar_address146, align 4
  %210 = icmp uge i32 %tile_loop.indvar147, 1
  br i1 %210, label %tile_loop.loop_exit143, label %tile_loop.loop_body145

tile_loop.loop_body145:                           ; preds = %tile_loop.loop_header144
  %invar.inc148 = add nuw nsw i32 %tile_loop.indvar147, 1
  store i32 %invar.inc148, ptr %tile_loop.invar_address146, align 4
  %211 = icmp eq i32 %tile_loop.indvar147, 0
  %212 = mul i32 %tile_loop.indvar147, 2
  %213 = add i32 %212, 0
  %x_loc149 = add i32 %213, %209
  %214 = add i32 %tile_origin.1135, %y_in_tile.indvar141
  %215 = add i32 %tile_origin.2136, %x_loc149
  %216 = icmp ult i32 %x_loc149, %tile_bound133
  br i1 %216, label %x_in_tile-true150, label %x_in_tile-after151

x_in_tile-after151:                               ; preds = %x_in_tile-true150, %tile_loop.loop_body145
  %217 = mul i32 %tile_loop.indvar147, 2
  %218 = add i32 %217, 1
  %x_loc154 = add i32 %218, %209
  %219 = add i32 %tile_origin.1135, %y_in_tile.indvar141
  %220 = add i32 %tile_origin.2136, %x_loc154
  %221 = icmp ult i32 %x_loc154, %tile_bound133
  br i1 %221, label %x_in_tile-true155, label %x_in_tile-after156

x_in_tile-after156:                               ; preds = %x_in_tile-true155, %x_in_tile-after151
  br label %tile_loop.loop_header144, !llvm.loop !517

tile_loop.loop_exit143:                           ; preds = %tile_loop.loop_header144
  br label %y_in_tile.loop_header138, !llvm.loop !518

y_in_tile.loop_exit137:                           ; preds = %y_in_tile.loop_header138
  %shmem_output_address160 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache153, i32 0, i32 %195, i32 0, i32 %thread_id.x129, i32 %thread_id.y130
  %222 = addrspacecast ptr addrspace(3) %shmem_output_address160 to ptr
  %current_output161 = getelementptr inbounds float, ptr %partial_reduction_result126, i32 0
  %223 = load float, ptr %current_output161, align 4
  store float %223, ptr %222, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr162 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache153, i32 0, i32 %195, i32 0, i32 %thread_id.y130, i32 %thread_id.x129
  %224 = addrspacecast ptr addrspace(3) %shmem_transposed_addr162 to ptr
  %partial_reduction_result164 = load float, ptr %224, align 4
  %225 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result164, i32 16, i32 31)
  store float %225, ptr %result_from_other_lane163, align 4
  call void @region_3_17__2(ptr %224, ptr %result_from_other_lane163, ptr %return_buffer165)
  %226 = load float, ptr %return_buffer165, align 4
  store float %226, ptr %224, align 4
  %partial_reduction_result167 = load float, ptr %224, align 4
  %227 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result167, i32 8, i32 31)
  store float %227, ptr %result_from_other_lane166, align 4
  call void @region_3_17__2(ptr %224, ptr %result_from_other_lane166, ptr %return_buffer168)
  %228 = load float, ptr %return_buffer168, align 4
  store float %228, ptr %224, align 4
  %partial_reduction_result170 = load float, ptr %224, align 4
  %229 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result170, i32 4, i32 31)
  store float %229, ptr %result_from_other_lane169, align 4
  call void @region_3_17__2(ptr %224, ptr %result_from_other_lane169, ptr %return_buffer171)
  %230 = load float, ptr %return_buffer171, align 4
  store float %230, ptr %224, align 4
  %partial_reduction_result173 = load float, ptr %224, align 4
  %231 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result173, i32 2, i32 31)
  store float %231, ptr %result_from_other_lane172, align 4
  call void @region_3_17__2(ptr %224, ptr %result_from_other_lane172, ptr %return_buffer174)
  %232 = load float, ptr %return_buffer174, align 4
  store float %232, ptr %224, align 4
  %partial_reduction_result176 = load float, ptr %224, align 4
  %233 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result176, i32 1, i32 31)
  store float %233, ptr %result_from_other_lane175, align 4
  call void @region_3_17__2(ptr %224, ptr %result_from_other_lane175, ptr %return_buffer177)
  %234 = load float, ptr %return_buffer177, align 4
  store float %234, ptr %224, align 4
  %235 = icmp ult i32 %thread_id.x129, %tile_bound132
  %236 = mul i32 %thread_id.y130, 2
  %237 = icmp ult i32 %236, %tile_bound133
  %238 = and i1 %237, %235
  %239 = icmp eq i32 %lane_id131, 0
  %240 = and i1 %238, %239
  br i1 %240, label %reduction_write_output-true178, label %reduction_write_output-after179

reduction_write_output-after179:                  ; preds = %reduction_write_output-true178, %y_in_tile.loop_exit137
  %shmem_output_address182 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache153, i32 0, i32 %195, i32 1, i32 %thread_id.x129, i32 %thread_id.y130
  %241 = addrspacecast ptr addrspace(3) %shmem_output_address182 to ptr
  %current_output183 = getelementptr inbounds float, ptr %partial_reduction_result126, i32 1
  %242 = load float, ptr %current_output183, align 4
  store float %242, ptr %241, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr184 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache153, i32 0, i32 %195, i32 1, i32 %thread_id.y130, i32 %thread_id.x129
  %243 = addrspacecast ptr addrspace(3) %shmem_transposed_addr184 to ptr
  %partial_reduction_result186 = load float, ptr %243, align 4
  %244 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result186, i32 16, i32 31)
  store float %244, ptr %result_from_other_lane185, align 4
  call void @region_3_17__2(ptr %243, ptr %result_from_other_lane185, ptr %return_buffer187)
  %245 = load float, ptr %return_buffer187, align 4
  store float %245, ptr %243, align 4
  %partial_reduction_result189 = load float, ptr %243, align 4
  %246 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result189, i32 8, i32 31)
  store float %246, ptr %result_from_other_lane188, align 4
  call void @region_3_17__2(ptr %243, ptr %result_from_other_lane188, ptr %return_buffer190)
  %247 = load float, ptr %return_buffer190, align 4
  store float %247, ptr %243, align 4
  %partial_reduction_result192 = load float, ptr %243, align 4
  %248 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result192, i32 4, i32 31)
  store float %248, ptr %result_from_other_lane191, align 4
  call void @region_3_17__2(ptr %243, ptr %result_from_other_lane191, ptr %return_buffer193)
  %249 = load float, ptr %return_buffer193, align 4
  store float %249, ptr %243, align 4
  %partial_reduction_result195 = load float, ptr %243, align 4
  %250 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result195, i32 2, i32 31)
  store float %250, ptr %result_from_other_lane194, align 4
  call void @region_3_17__2(ptr %243, ptr %result_from_other_lane194, ptr %return_buffer196)
  %251 = load float, ptr %return_buffer196, align 4
  store float %251, ptr %243, align 4
  %partial_reduction_result198 = load float, ptr %243, align 4
  %252 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result198, i32 1, i32 31)
  store float %252, ptr %result_from_other_lane197, align 4
  call void @region_3_17__2(ptr %243, ptr %result_from_other_lane197, ptr %return_buffer199)
  %253 = load float, ptr %return_buffer199, align 4
  store float %253, ptr %243, align 4
  %254 = icmp ult i32 %thread_id.x129, %tile_bound132
  %255 = mul i32 %thread_id.y130, 2
  %256 = icmp ult i32 %255, %tile_bound133
  %257 = and i1 %256, %254
  %258 = icmp eq i32 %lane_id131, 0
  %259 = and i1 %257, %258
  br i1 %259, label %reduction_write_output-true200, label %reduction_write_output-after201

reduction_write_output-after201:                  ; preds = %reduction_write_output-true200, %reduction_write_output-after179
  br label %reduce-group-2-after

early_return128:                                  ; preds = %reduce-group-2-true
  ret void

x_in_tile-true150:                                ; preds = %tile_loop.loop_body145
  %260 = mul i32 %thread_id.x129, 2
  %261 = sub i32 %x_loc149, %260
  %Arg_3.4 = getelementptr inbounds [64 x [256 x float]], ptr %arg3, i32 0, i32 %214, i32 %215
  %Arg_3.4152 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  store float %Arg_3.4152, ptr %reduction_input_address125, align 4
  %262 = getelementptr inbounds float, ptr %partial_reduction_result126, i32 %261
  call void @region_3_17__2(ptr %262, ptr %reduction_input_address125, ptr %return_buffer153)
  %263 = load float, ptr %return_buffer153, align 4
  store float %263, ptr %262, align 4
  br label %x_in_tile-after151

x_in_tile-true155:                                ; preds = %x_in_tile-after151
  %264 = mul i32 %thread_id.x129, 2
  %265 = sub i32 %x_loc154, %264
  %Arg_3.4157 = getelementptr inbounds [64 x [256 x float]], ptr %arg3, i32 0, i32 %219, i32 %220
  %Arg_3.4158 = load float, ptr %Arg_3.4157, align 4, !invariant.load !297
  store float %Arg_3.4158, ptr %reduction_input_address125, align 4
  %266 = getelementptr inbounds float, ptr %partial_reduction_result126, i32 %265
  call void @region_3_17__2(ptr %266, ptr %reduction_input_address125, ptr %return_buffer159)
  %267 = load float, ptr %return_buffer159, align 4
  store float %267, ptr %266, align 4
  br label %x_in_tile-after156

reduction_write_output-true178:                   ; preds = %y_in_tile.loop_exit137
  %268 = mul i32 %thread_id.y130, 2
  %269 = add i32 %tile_origin.1135, %thread_id.x129
  %270 = add i32 %tile_origin.2136, %268
  %271 = add i32 %270, 0
  %272 = mul i32 %tile_origin.0134, 256
  %273 = add i32 %272, %271
  %274 = udiv i32 %273, 1
  %output_element_address180 = getelementptr inbounds [256 x float], ptr %arg8, i32 0, i32 %274
  %output181 = load float, ptr %224, align 4
  store float %output181, ptr %output_element_address180, align 4
  br label %reduction_write_output-after179

reduction_write_output-true200:                   ; preds = %reduction_write_output-after179
  %275 = mul i32 %thread_id.y130, 2
  %276 = add i32 %tile_origin.1135, %thread_id.x129
  %277 = add i32 %tile_origin.2136, %275
  %278 = add i32 %277, 1
  %279 = mul i32 %tile_origin.0134, 256
  %280 = add i32 %279, %278
  %281 = udiv i32 %280, 1
  %output_element_address202 = getelementptr inbounds [256 x float], ptr %arg8, i32 0, i32 %281
  %output203 = load float, ptr %243, align 4
  store float %output203, ptr %output_element_address202, align 4
  br label %reduction_write_output-after201

reduce-group-3-true:                              ; preds = %reduce-group-2-after
  %Arg_1.2206 = load float, ptr %arg1, align 4, !invariant.load !297
  %282 = getelementptr inbounds float, ptr %partial_reduction_result205, i32 0
  store float %Arg_1.2206, ptr %282, align 4
  %283 = getelementptr inbounds float, ptr %partial_reduction_result205, i32 1
  store float %Arg_1.2206, ptr %283, align 4
  %284 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %285 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !367
  %286 = urem i32 %284, 1024
  %287 = udiv i32 %284, 1024
  %288 = mul i32 %285, 1
  %289 = add i32 %288, %287
  %290 = icmp ult i32 %289, 4
  br i1 %290, label %291, label %early_return207

291:                                              ; preds = %reduce-group-3-true
  %thread_id.x208 = urem i32 %286, 32
  %thread_id.y209 = udiv i32 %286, 32
  %lane_id210 = urem i32 %286, 32
  %292 = udiv i32 %289, 1
  %293 = urem i32 %292, 4
  %294 = udiv i32 %289, 4
  %295 = urem i32 %294, 1
  %296 = udiv i32 %289, 4
  %297 = icmp eq i32 %295, 0
  %tile_bound211 = select i1 %297, i32 64, i32 4096
  %298 = icmp eq i32 %293, 3
  %tile_bound212 = select i1 %298, i32 64, i32 64
  %tile_origin.0213 = mul i32 %296, 1
  %tile_origin.1214 = mul i32 %295, 4096
  %tile_origin.2215 = mul i32 %293, 64
  store i32 %thread_id.y209, ptr %y_in_tile.invar_address219, align 4
  br label %y_in_tile.loop_header217

y_in_tile.loop_header217:                         ; preds = %tile_loop.loop_exit222, %291
  %y_in_tile.indvar220 = load i32, ptr %y_in_tile.invar_address219, align 4
  %299 = icmp uge i32 %y_in_tile.indvar220, %tile_bound211
  br i1 %299, label %y_in_tile.loop_exit216, label %y_in_tile.loop_body218

y_in_tile.loop_body218:                           ; preds = %y_in_tile.loop_header217
  %invar.inc221 = add nuw nsw i32 %y_in_tile.indvar220, 32
  store i32 %invar.inc221, ptr %y_in_tile.invar_address219, align 4
  %300 = icmp eq i32 %y_in_tile.indvar220, %thread_id.y209
  %301 = mul i32 %thread_id.x208, 2
  store i32 0, ptr %tile_loop.invar_address225, align 4
  br label %tile_loop.loop_header223

tile_loop.loop_header223:                         ; preds = %x_in_tile-after235, %y_in_tile.loop_body218
  %tile_loop.indvar226 = load i32, ptr %tile_loop.invar_address225, align 4
  %302 = icmp uge i32 %tile_loop.indvar226, 1
  br i1 %302, label %tile_loop.loop_exit222, label %tile_loop.loop_body224

tile_loop.loop_body224:                           ; preds = %tile_loop.loop_header223
  %invar.inc227 = add nuw nsw i32 %tile_loop.indvar226, 1
  store i32 %invar.inc227, ptr %tile_loop.invar_address225, align 4
  %303 = icmp eq i32 %tile_loop.indvar226, 0
  %304 = mul i32 %tile_loop.indvar226, 2
  %305 = add i32 %304, 0
  %x_loc228 = add i32 %305, %301
  %306 = add i32 %tile_origin.1214, %y_in_tile.indvar220
  %307 = add i32 %tile_origin.2215, %x_loc228
  %308 = icmp ult i32 %x_loc228, %tile_bound212
  br i1 %308, label %x_in_tile-true229, label %x_in_tile-after230

x_in_tile-after230:                               ; preds = %x_in_tile-true229, %tile_loop.loop_body224
  %309 = mul i32 %tile_loop.indvar226, 2
  %310 = add i32 %309, 1
  %x_loc233 = add i32 %310, %301
  %311 = add i32 %tile_origin.1214, %y_in_tile.indvar220
  %312 = add i32 %tile_origin.2215, %x_loc233
  %313 = icmp ult i32 %x_loc233, %tile_bound212
  br i1 %313, label %x_in_tile-true234, label %x_in_tile-after235

x_in_tile-after235:                               ; preds = %x_in_tile-true234, %x_in_tile-after230
  br label %tile_loop.loop_header223, !llvm.loop !519

tile_loop.loop_exit222:                           ; preds = %tile_loop.loop_header223
  br label %y_in_tile.loop_header217, !llvm.loop !520

y_in_tile.loop_exit216:                           ; preds = %y_in_tile.loop_header217
  %shmem_output_address239 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache154, i32 0, i32 %287, i32 0, i32 %thread_id.x208, i32 %thread_id.y209
  %314 = addrspacecast ptr addrspace(3) %shmem_output_address239 to ptr
  %current_output240 = getelementptr inbounds float, ptr %partial_reduction_result205, i32 0
  %315 = load float, ptr %current_output240, align 4
  store float %315, ptr %314, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr241 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache154, i32 0, i32 %287, i32 0, i32 %thread_id.y209, i32 %thread_id.x208
  %316 = addrspacecast ptr addrspace(3) %shmem_transposed_addr241 to ptr
  %partial_reduction_result243 = load float, ptr %316, align 4
  %317 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result243, i32 16, i32 31)
  store float %317, ptr %result_from_other_lane242, align 4
  call void @region_4_22__2(ptr %316, ptr %result_from_other_lane242, ptr %return_buffer244)
  %318 = load float, ptr %return_buffer244, align 4
  store float %318, ptr %316, align 4
  %partial_reduction_result246 = load float, ptr %316, align 4
  %319 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result246, i32 8, i32 31)
  store float %319, ptr %result_from_other_lane245, align 4
  call void @region_4_22__2(ptr %316, ptr %result_from_other_lane245, ptr %return_buffer247)
  %320 = load float, ptr %return_buffer247, align 4
  store float %320, ptr %316, align 4
  %partial_reduction_result249 = load float, ptr %316, align 4
  %321 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result249, i32 4, i32 31)
  store float %321, ptr %result_from_other_lane248, align 4
  call void @region_4_22__2(ptr %316, ptr %result_from_other_lane248, ptr %return_buffer250)
  %322 = load float, ptr %return_buffer250, align 4
  store float %322, ptr %316, align 4
  %partial_reduction_result252 = load float, ptr %316, align 4
  %323 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result252, i32 2, i32 31)
  store float %323, ptr %result_from_other_lane251, align 4
  call void @region_4_22__2(ptr %316, ptr %result_from_other_lane251, ptr %return_buffer253)
  %324 = load float, ptr %return_buffer253, align 4
  store float %324, ptr %316, align 4
  %partial_reduction_result255 = load float, ptr %316, align 4
  %325 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result255, i32 1, i32 31)
  store float %325, ptr %result_from_other_lane254, align 4
  call void @region_4_22__2(ptr %316, ptr %result_from_other_lane254, ptr %return_buffer256)
  %326 = load float, ptr %return_buffer256, align 4
  store float %326, ptr %316, align 4
  %327 = icmp ult i32 %thread_id.x208, %tile_bound211
  %328 = mul i32 %thread_id.y209, 2
  %329 = icmp ult i32 %328, %tile_bound212
  %330 = and i1 %329, %327
  %331 = icmp eq i32 %lane_id210, 0
  %332 = and i1 %330, %331
  br i1 %332, label %reduction_write_output-true257, label %reduction_write_output-after258

reduction_write_output-after258:                  ; preds = %reduction_write_output-true257, %y_in_tile.loop_exit216
  %shmem_output_address261 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache154, i32 0, i32 %287, i32 1, i32 %thread_id.x208, i32 %thread_id.y209
  %333 = addrspacecast ptr addrspace(3) %shmem_output_address261 to ptr
  %current_output262 = getelementptr inbounds float, ptr %partial_reduction_result205, i32 1
  %334 = load float, ptr %current_output262, align 4
  store float %334, ptr %333, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr263 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache154, i32 0, i32 %287, i32 1, i32 %thread_id.y209, i32 %thread_id.x208
  %335 = addrspacecast ptr addrspace(3) %shmem_transposed_addr263 to ptr
  %partial_reduction_result265 = load float, ptr %335, align 4
  %336 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result265, i32 16, i32 31)
  store float %336, ptr %result_from_other_lane264, align 4
  call void @region_4_22__2(ptr %335, ptr %result_from_other_lane264, ptr %return_buffer266)
  %337 = load float, ptr %return_buffer266, align 4
  store float %337, ptr %335, align 4
  %partial_reduction_result268 = load float, ptr %335, align 4
  %338 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result268, i32 8, i32 31)
  store float %338, ptr %result_from_other_lane267, align 4
  call void @region_4_22__2(ptr %335, ptr %result_from_other_lane267, ptr %return_buffer269)
  %339 = load float, ptr %return_buffer269, align 4
  store float %339, ptr %335, align 4
  %partial_reduction_result271 = load float, ptr %335, align 4
  %340 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result271, i32 4, i32 31)
  store float %340, ptr %result_from_other_lane270, align 4
  call void @region_4_22__2(ptr %335, ptr %result_from_other_lane270, ptr %return_buffer272)
  %341 = load float, ptr %return_buffer272, align 4
  store float %341, ptr %335, align 4
  %partial_reduction_result274 = load float, ptr %335, align 4
  %342 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result274, i32 2, i32 31)
  store float %342, ptr %result_from_other_lane273, align 4
  call void @region_4_22__2(ptr %335, ptr %result_from_other_lane273, ptr %return_buffer275)
  %343 = load float, ptr %return_buffer275, align 4
  store float %343, ptr %335, align 4
  %partial_reduction_result277 = load float, ptr %335, align 4
  %344 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result277, i32 1, i32 31)
  store float %344, ptr %result_from_other_lane276, align 4
  call void @region_4_22__2(ptr %335, ptr %result_from_other_lane276, ptr %return_buffer278)
  %345 = load float, ptr %return_buffer278, align 4
  store float %345, ptr %335, align 4
  %346 = icmp ult i32 %thread_id.x208, %tile_bound211
  %347 = mul i32 %thread_id.y209, 2
  %348 = icmp ult i32 %347, %tile_bound212
  %349 = and i1 %348, %346
  %350 = icmp eq i32 %lane_id210, 0
  %351 = and i1 %349, %350
  br i1 %351, label %reduction_write_output-true279, label %reduction_write_output-after280

reduction_write_output-after280:                  ; preds = %reduction_write_output-true279, %reduction_write_output-after258
  br label %reduce-group-3-after

early_return207:                                  ; preds = %reduce-group-3-true
  ret void

x_in_tile-true229:                                ; preds = %tile_loop.loop_body224
  %352 = mul i32 %thread_id.x208, 2
  %353 = sub i32 %x_loc228, %352
  %Arg_4.5 = getelementptr inbounds [64 x [256 x float]], ptr %arg4, i32 0, i32 %306, i32 %307
  %Arg_4.5231 = load float, ptr %Arg_4.5, align 4, !invariant.load !297
  store float %Arg_4.5231, ptr %reduction_input_address204, align 4
  %354 = getelementptr inbounds float, ptr %partial_reduction_result205, i32 %353
  call void @region_4_22__2(ptr %354, ptr %reduction_input_address204, ptr %return_buffer232)
  %355 = load float, ptr %return_buffer232, align 4
  store float %355, ptr %354, align 4
  br label %x_in_tile-after230

x_in_tile-true234:                                ; preds = %x_in_tile-after230
  %356 = mul i32 %thread_id.x208, 2
  %357 = sub i32 %x_loc233, %356
  %Arg_4.5236 = getelementptr inbounds [64 x [256 x float]], ptr %arg4, i32 0, i32 %311, i32 %312
  %Arg_4.5237 = load float, ptr %Arg_4.5236, align 4, !invariant.load !297
  store float %Arg_4.5237, ptr %reduction_input_address204, align 4
  %358 = getelementptr inbounds float, ptr %partial_reduction_result205, i32 %357
  call void @region_4_22__2(ptr %358, ptr %reduction_input_address204, ptr %return_buffer238)
  %359 = load float, ptr %return_buffer238, align 4
  store float %359, ptr %358, align 4
  br label %x_in_tile-after235

reduction_write_output-true257:                   ; preds = %y_in_tile.loop_exit216
  %360 = mul i32 %thread_id.y209, 2
  %361 = add i32 %tile_origin.1214, %thread_id.x208
  %362 = add i32 %tile_origin.2215, %360
  %363 = add i32 %362, 0
  %364 = mul i32 %tile_origin.0213, 256
  %365 = add i32 %364, %363
  %366 = udiv i32 %365, 1
  %output_element_address259 = getelementptr inbounds [256 x float], ptr %arg9, i32 0, i32 %366
  %output260 = load float, ptr %316, align 4
  store float %output260, ptr %output_element_address259, align 4
  br label %reduction_write_output-after258

reduction_write_output-true279:                   ; preds = %reduction_write_output-after258
  %367 = mul i32 %thread_id.y209, 2
  %368 = add i32 %tile_origin.1214, %thread_id.x208
  %369 = add i32 %tile_origin.2215, %367
  %370 = add i32 %369, 1
  %371 = mul i32 %tile_origin.0213, 256
  %372 = add i32 %371, %370
  %373 = udiv i32 %372, 1
  %output_element_address281 = getelementptr inbounds [256 x float], ptr %arg9, i32 0, i32 %373
  %output282 = load float, ptr %335, align 4
  store float %output282, ptr %output_element_address281, align 4
  br label %reduction_write_output-after280

reduce-group-4-true:                              ; preds = %reduce-group-3-after
  %Arg_1.2285 = load float, ptr %arg1, align 4, !invariant.load !297
  %374 = getelementptr inbounds float, ptr %partial_reduction_result284, i32 0
  store float %Arg_1.2285, ptr %374, align 4
  %375 = getelementptr inbounds float, ptr %partial_reduction_result284, i32 1
  store float %Arg_1.2285, ptr %375, align 4
  %376 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %377 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !367
  %378 = urem i32 %376, 1024
  %379 = udiv i32 %376, 1024
  %380 = mul i32 %377, 1
  %381 = add i32 %380, %379
  %382 = icmp ult i32 %381, 4
  br i1 %382, label %383, label %early_return286

383:                                              ; preds = %reduce-group-4-true
  %thread_id.x287 = urem i32 %378, 32
  %thread_id.y288 = udiv i32 %378, 32
  %lane_id289 = urem i32 %378, 32
  %384 = udiv i32 %381, 1
  %385 = urem i32 %384, 4
  %386 = udiv i32 %381, 4
  %387 = urem i32 %386, 1
  %388 = udiv i32 %381, 4
  %389 = icmp eq i32 %387, 0
  %tile_bound290 = select i1 %389, i32 64, i32 4096
  %390 = icmp eq i32 %385, 3
  %tile_bound291 = select i1 %390, i32 64, i32 64
  %tile_origin.0292 = mul i32 %388, 1
  %tile_origin.1293 = mul i32 %387, 4096
  %tile_origin.2294 = mul i32 %385, 64
  store i32 %thread_id.y288, ptr %y_in_tile.invar_address298, align 4
  br label %y_in_tile.loop_header296

y_in_tile.loop_header296:                         ; preds = %tile_loop.loop_exit301, %383
  %y_in_tile.indvar299 = load i32, ptr %y_in_tile.invar_address298, align 4
  %391 = icmp uge i32 %y_in_tile.indvar299, %tile_bound290
  br i1 %391, label %y_in_tile.loop_exit295, label %y_in_tile.loop_body297

y_in_tile.loop_body297:                           ; preds = %y_in_tile.loop_header296
  %invar.inc300 = add nuw nsw i32 %y_in_tile.indvar299, 32
  store i32 %invar.inc300, ptr %y_in_tile.invar_address298, align 4
  %392 = icmp eq i32 %y_in_tile.indvar299, %thread_id.y288
  %393 = mul i32 %thread_id.x287, 2
  store i32 0, ptr %tile_loop.invar_address304, align 4
  br label %tile_loop.loop_header302

tile_loop.loop_header302:                         ; preds = %x_in_tile-after314, %y_in_tile.loop_body297
  %tile_loop.indvar305 = load i32, ptr %tile_loop.invar_address304, align 4
  %394 = icmp uge i32 %tile_loop.indvar305, 1
  br i1 %394, label %tile_loop.loop_exit301, label %tile_loop.loop_body303

tile_loop.loop_body303:                           ; preds = %tile_loop.loop_header302
  %invar.inc306 = add nuw nsw i32 %tile_loop.indvar305, 1
  store i32 %invar.inc306, ptr %tile_loop.invar_address304, align 4
  %395 = icmp eq i32 %tile_loop.indvar305, 0
  %396 = mul i32 %tile_loop.indvar305, 2
  %397 = add i32 %396, 0
  %x_loc307 = add i32 %397, %393
  %398 = add i32 %tile_origin.1293, %y_in_tile.indvar299
  %399 = add i32 %tile_origin.2294, %x_loc307
  %400 = icmp ult i32 %x_loc307, %tile_bound291
  br i1 %400, label %x_in_tile-true308, label %x_in_tile-after309

x_in_tile-after309:                               ; preds = %x_in_tile-true308, %tile_loop.loop_body303
  %401 = mul i32 %tile_loop.indvar305, 2
  %402 = add i32 %401, 1
  %x_loc312 = add i32 %402, %393
  %403 = add i32 %tile_origin.1293, %y_in_tile.indvar299
  %404 = add i32 %tile_origin.2294, %x_loc312
  %405 = icmp ult i32 %x_loc312, %tile_bound291
  br i1 %405, label %x_in_tile-true313, label %x_in_tile-after314

x_in_tile-after314:                               ; preds = %x_in_tile-true313, %x_in_tile-after309
  br label %tile_loop.loop_header302, !llvm.loop !521

tile_loop.loop_exit301:                           ; preds = %tile_loop.loop_header302
  br label %y_in_tile.loop_header296, !llvm.loop !522

y_in_tile.loop_exit295:                           ; preds = %y_in_tile.loop_header296
  %shmem_output_address318 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache155, i32 0, i32 %379, i32 0, i32 %thread_id.x287, i32 %thread_id.y288
  %406 = addrspacecast ptr addrspace(3) %shmem_output_address318 to ptr
  %current_output319 = getelementptr inbounds float, ptr %partial_reduction_result284, i32 0
  %407 = load float, ptr %current_output319, align 4
  store float %407, ptr %406, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr320 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache155, i32 0, i32 %379, i32 0, i32 %thread_id.y288, i32 %thread_id.x287
  %408 = addrspacecast ptr addrspace(3) %shmem_transposed_addr320 to ptr
  %partial_reduction_result322 = load float, ptr %408, align 4
  %409 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result322, i32 16, i32 31)
  store float %409, ptr %result_from_other_lane321, align 4
  call void @region_5_27__2(ptr %408, ptr %result_from_other_lane321, ptr %return_buffer323)
  %410 = load float, ptr %return_buffer323, align 4
  store float %410, ptr %408, align 4
  %partial_reduction_result325 = load float, ptr %408, align 4
  %411 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result325, i32 8, i32 31)
  store float %411, ptr %result_from_other_lane324, align 4
  call void @region_5_27__2(ptr %408, ptr %result_from_other_lane324, ptr %return_buffer326)
  %412 = load float, ptr %return_buffer326, align 4
  store float %412, ptr %408, align 4
  %partial_reduction_result328 = load float, ptr %408, align 4
  %413 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result328, i32 4, i32 31)
  store float %413, ptr %result_from_other_lane327, align 4
  call void @region_5_27__2(ptr %408, ptr %result_from_other_lane327, ptr %return_buffer329)
  %414 = load float, ptr %return_buffer329, align 4
  store float %414, ptr %408, align 4
  %partial_reduction_result331 = load float, ptr %408, align 4
  %415 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result331, i32 2, i32 31)
  store float %415, ptr %result_from_other_lane330, align 4
  call void @region_5_27__2(ptr %408, ptr %result_from_other_lane330, ptr %return_buffer332)
  %416 = load float, ptr %return_buffer332, align 4
  store float %416, ptr %408, align 4
  %partial_reduction_result334 = load float, ptr %408, align 4
  %417 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result334, i32 1, i32 31)
  store float %417, ptr %result_from_other_lane333, align 4
  call void @region_5_27__2(ptr %408, ptr %result_from_other_lane333, ptr %return_buffer335)
  %418 = load float, ptr %return_buffer335, align 4
  store float %418, ptr %408, align 4
  %419 = icmp ult i32 %thread_id.x287, %tile_bound290
  %420 = mul i32 %thread_id.y288, 2
  %421 = icmp ult i32 %420, %tile_bound291
  %422 = and i1 %421, %419
  %423 = icmp eq i32 %lane_id289, 0
  %424 = and i1 %422, %423
  br i1 %424, label %reduction_write_output-true336, label %reduction_write_output-after337

reduction_write_output-after337:                  ; preds = %reduction_write_output-true336, %y_in_tile.loop_exit295
  %shmem_output_address340 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache155, i32 0, i32 %379, i32 1, i32 %thread_id.x287, i32 %thread_id.y288
  %425 = addrspacecast ptr addrspace(3) %shmem_output_address340 to ptr
  %current_output341 = getelementptr inbounds float, ptr %partial_reduction_result284, i32 1
  %426 = load float, ptr %current_output341, align 4
  store float %426, ptr %425, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr342 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache155, i32 0, i32 %379, i32 1, i32 %thread_id.y288, i32 %thread_id.x287
  %427 = addrspacecast ptr addrspace(3) %shmem_transposed_addr342 to ptr
  %partial_reduction_result344 = load float, ptr %427, align 4
  %428 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result344, i32 16, i32 31)
  store float %428, ptr %result_from_other_lane343, align 4
  call void @region_5_27__2(ptr %427, ptr %result_from_other_lane343, ptr %return_buffer345)
  %429 = load float, ptr %return_buffer345, align 4
  store float %429, ptr %427, align 4
  %partial_reduction_result347 = load float, ptr %427, align 4
  %430 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result347, i32 8, i32 31)
  store float %430, ptr %result_from_other_lane346, align 4
  call void @region_5_27__2(ptr %427, ptr %result_from_other_lane346, ptr %return_buffer348)
  %431 = load float, ptr %return_buffer348, align 4
  store float %431, ptr %427, align 4
  %partial_reduction_result350 = load float, ptr %427, align 4
  %432 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result350, i32 4, i32 31)
  store float %432, ptr %result_from_other_lane349, align 4
  call void @region_5_27__2(ptr %427, ptr %result_from_other_lane349, ptr %return_buffer351)
  %433 = load float, ptr %return_buffer351, align 4
  store float %433, ptr %427, align 4
  %partial_reduction_result353 = load float, ptr %427, align 4
  %434 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result353, i32 2, i32 31)
  store float %434, ptr %result_from_other_lane352, align 4
  call void @region_5_27__2(ptr %427, ptr %result_from_other_lane352, ptr %return_buffer354)
  %435 = load float, ptr %return_buffer354, align 4
  store float %435, ptr %427, align 4
  %partial_reduction_result356 = load float, ptr %427, align 4
  %436 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result356, i32 1, i32 31)
  store float %436, ptr %result_from_other_lane355, align 4
  call void @region_5_27__2(ptr %427, ptr %result_from_other_lane355, ptr %return_buffer357)
  %437 = load float, ptr %return_buffer357, align 4
  store float %437, ptr %427, align 4
  %438 = icmp ult i32 %thread_id.x287, %tile_bound290
  %439 = mul i32 %thread_id.y288, 2
  %440 = icmp ult i32 %439, %tile_bound291
  %441 = and i1 %440, %438
  %442 = icmp eq i32 %lane_id289, 0
  %443 = and i1 %441, %442
  br i1 %443, label %reduction_write_output-true358, label %reduction_write_output-after359

reduction_write_output-after359:                  ; preds = %reduction_write_output-true358, %reduction_write_output-after337
  br label %reduce-group-4-after

early_return286:                                  ; preds = %reduce-group-4-true
  ret void

x_in_tile-true308:                                ; preds = %tile_loop.loop_body303
  %444 = mul i32 %thread_id.x287, 2
  %445 = sub i32 %x_loc307, %444
  %Arg_5.6 = getelementptr inbounds [64 x [256 x float]], ptr %arg5, i32 0, i32 %398, i32 %399
  %Arg_5.6310 = load float, ptr %Arg_5.6, align 4, !invariant.load !297
  store float %Arg_5.6310, ptr %reduction_input_address283, align 4
  %446 = getelementptr inbounds float, ptr %partial_reduction_result284, i32 %445
  call void @region_5_27__2(ptr %446, ptr %reduction_input_address283, ptr %return_buffer311)
  %447 = load float, ptr %return_buffer311, align 4
  store float %447, ptr %446, align 4
  br label %x_in_tile-after309

x_in_tile-true313:                                ; preds = %x_in_tile-after309
  %448 = mul i32 %thread_id.x287, 2
  %449 = sub i32 %x_loc312, %448
  %Arg_5.6315 = getelementptr inbounds [64 x [256 x float]], ptr %arg5, i32 0, i32 %403, i32 %404
  %Arg_5.6316 = load float, ptr %Arg_5.6315, align 4, !invariant.load !297
  store float %Arg_5.6316, ptr %reduction_input_address283, align 4
  %450 = getelementptr inbounds float, ptr %partial_reduction_result284, i32 %449
  call void @region_5_27__2(ptr %450, ptr %reduction_input_address283, ptr %return_buffer317)
  %451 = load float, ptr %return_buffer317, align 4
  store float %451, ptr %450, align 4
  br label %x_in_tile-after314

reduction_write_output-true336:                   ; preds = %y_in_tile.loop_exit295
  %452 = mul i32 %thread_id.y288, 2
  %453 = add i32 %tile_origin.1293, %thread_id.x287
  %454 = add i32 %tile_origin.2294, %452
  %455 = add i32 %454, 0
  %456 = mul i32 %tile_origin.0292, 256
  %457 = add i32 %456, %455
  %458 = udiv i32 %457, 1
  %output_element_address338 = getelementptr inbounds [256 x float], ptr %arg10, i32 0, i32 %458
  %output339 = load float, ptr %408, align 4
  store float %output339, ptr %output_element_address338, align 4
  br label %reduction_write_output-after337

reduction_write_output-true358:                   ; preds = %reduction_write_output-after337
  %459 = mul i32 %thread_id.y288, 2
  %460 = add i32 %tile_origin.1293, %thread_id.x287
  %461 = add i32 %tile_origin.2294, %459
  %462 = add i32 %461, 1
  %463 = mul i32 %tile_origin.0292, 256
  %464 = add i32 %463, %462
  %465 = udiv i32 %464, 1
  %output_element_address360 = getelementptr inbounds [256 x float], ptr %arg10, i32 0, i32 %465
  %output361 = load float, ptr %427, align 4
  store float %output361, ptr %output_element_address360, align 4
  br label %reduction_write_output-after359
}

define internal void @region_1_7__2(ptr dereferenceable(4) %Arg_0.8.typed, ptr dereferenceable(4) %Arg_1.9.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.10.typed = alloca float, align 4
  %Arg_0.8 = load float, ptr %Arg_0.8.typed, align 4
  %Arg_1.9 = load float, ptr %Arg_1.9.typed, align 4
  %add.10 = fadd float %Arg_0.8, %Arg_1.9
  store float %add.10, ptr %add.10.typed, align 4
  %load_ret_value = load float, ptr %add.10.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_12__2(ptr dereferenceable(4) %Arg_0.13.typed, ptr dereferenceable(4) %Arg_1.14.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.15.typed = alloca float, align 4
  %Arg_0.13 = load float, ptr %Arg_0.13.typed, align 4
  %Arg_1.14 = load float, ptr %Arg_1.14.typed, align 4
  %add.15 = fadd float %Arg_0.13, %Arg_1.14
  store float %add.15, ptr %add.15.typed, align 4
  %load_ret_value = load float, ptr %add.15.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_3_17__2(ptr dereferenceable(4) %Arg_0.18.typed, ptr dereferenceable(4) %Arg_1.19.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.20.typed = alloca float, align 4
  %Arg_0.18 = load float, ptr %Arg_0.18.typed, align 4
  %Arg_1.19 = load float, ptr %Arg_1.19.typed, align 4
  %add.20 = fadd float %Arg_0.18, %Arg_1.19
  store float %add.20, ptr %add.20.typed, align 4
  %load_ret_value = load float, ptr %add.20.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_4_22__2(ptr dereferenceable(4) %Arg_0.23.typed, ptr dereferenceable(4) %Arg_1.24.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.25.typed = alloca float, align 4
  %Arg_0.23 = load float, ptr %Arg_0.23.typed, align 4
  %Arg_1.24 = load float, ptr %Arg_1.24.typed, align 4
  %add.25 = fadd float %Arg_0.23, %Arg_1.24
  store float %add.25, ptr %add.25.typed, align 4
  %load_ret_value = load float, ptr %add.25.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_5_27__2(ptr dereferenceable(4) %Arg_0.28.typed, ptr dereferenceable(4) %Arg_1.29.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.30.typed = alloca float, align 4
  %Arg_0.28 = load float, ptr %Arg_0.28.typed, align 4
  %Arg_1.29 = load float, ptr %Arg_1.29.typed, align 4
  %add.30 = fadd float %Arg_0.28, %Arg_1.29
  store float %add.30, ptr %add.30.typed, align 4
  %load_ret_value = load float, ptr %add.30.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_725(ptr noalias align 16 dereferenceable(2560) %arg0, ptr noalias align 128 dereferenceable(2560) %arg1, ptr noalias align 16 dereferenceable(8192) %arg2, ptr noalias align 128 dereferenceable(8192) %arg3, ptr noalias align 16 dereferenceable(8192) %arg4, ptr noalias align 128 dereferenceable(8192) %arg5, ptr noalias align 16 dereferenceable(15872) %arg6, ptr noalias align 128 dereferenceable(15872) %arg7, ptr noalias align 16 dereferenceable(115712) %arg8, ptr noalias align 128 dereferenceable(115712) %arg9, ptr noalias align 16 dereferenceable(368640) %arg10, ptr noalias align 128 dereferenceable(368640) %arg11, ptr noalias align 128 dereferenceable(8192) %arg12) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !523
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 130048
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = icmp ult i32 %linear_index, 129792
  br i1 %4, label %fusion_725.in_bounds-true, label %fusion_725.in_bounds-after

fusion_725.in_bounds-after:                       ; preds = %slice5-after, %entry
  ret void

fusion_725.in_bounds-true:                        ; preds = %entry
  br label %concatenate.pivot.4736.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %5 = phi i32 [ 0, %concatenate.pivot.0. ]
  %6 = sub nsw i32 %3, %5
  %7 = mul nuw nsw i32 %6, 1
  %8 = add nuw nsw i32 0, %7
  %9 = urem i32 %8, 20
  %10 = udiv i32 %8, 20
  %11 = udiv i32 %10, 32
  %12 = getelementptr inbounds [32 x [20 x float]], ptr %arg0, i32 0, i32 %10, i32 %9
  %13 = load float, ptr %12, align 4, !invariant.load !297
  %14 = getelementptr inbounds [32 x [20 x float]], ptr %arg1, i32 0, i32 %10, i32 %9
  %15 = load float, ptr %14, align 4
  %subtract.13 = fsub float %13, %15
  br label %concatenate.25.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.640.1
  %16 = phi i32 [ 640, %concatenate.pivot.640.1 ]
  %17 = sub nsw i32 %3, %16
  %18 = mul nuw nsw i32 %17, 1
  %19 = add nuw nsw i32 0, %18
  %20 = urem i32 %19, 32
  %21 = udiv i32 %19, 32
  %22 = udiv i32 %21, 64
  %23 = getelementptr inbounds [64 x [32 x float]], ptr %arg2, i32 0, i32 %21, i32 %20
  %24 = load float, ptr %23, align 4, !invariant.load !297
  %25 = getelementptr inbounds [64 x [32 x float]], ptr %arg3, i32 0, i32 %21, i32 %20
  %26 = load float, ptr %25, align 4
  %subtract.15 = fsub float %24, %26
  br label %concatenate.25.merge

concat_index_from_operand_id2:                    ; preds = %concatenate.pivot.2688.2
  %27 = phi i32 [ 2688, %concatenate.pivot.2688.2 ]
  %28 = sub nsw i32 %3, %27
  %29 = mul nuw nsw i32 %28, 1
  %30 = add nuw nsw i32 0, %29
  %31 = urem i32 %30, 64
  %32 = udiv i32 %30, 64
  %33 = udiv i32 %32, 32
  %34 = getelementptr inbounds [32 x [64 x float]], ptr %arg4, i32 0, i32 %32, i32 %31
  %35 = load float, ptr %34, align 4, !invariant.load !297
  %36 = getelementptr inbounds [32 x [64 x float]], ptr %arg5, i32 0, i32 %32, i32 %31
  %37 = load float, ptr %36, align 4, !invariant.load !297
  %subtract.17 = fsub float %35, %37
  br label %concatenate.25.merge

concat_index_from_operand_id3:                    ; preds = %concatenate.pivot.4736.3
  %38 = phi i32 [ 4736, %concatenate.pivot.4736.3 ]
  %39 = sub nsw i32 %3, %38
  %40 = mul nuw nsw i32 %39, 1
  %41 = add nuw nsw i32 0, %40
  %42 = urem i32 %41, 32
  %43 = udiv i32 %41, 32
  %44 = udiv i32 %43, 124
  %45 = getelementptr inbounds [124 x [32 x float]], ptr %arg6, i32 0, i32 %43, i32 %42
  %46 = load float, ptr %45, align 4, !invariant.load !297
  %47 = getelementptr inbounds [124 x [32 x float]], ptr %arg7, i32 0, i32 %43, i32 %42
  %48 = load float, ptr %47, align 4
  %subtract.19 = fsub float %46, %48
  br label %concatenate.25.merge

concat_index_from_operand_id4:                    ; preds = %concatenate.pivot.8704.4
  %49 = phi i32 [ 8704, %concatenate.pivot.8704.4 ]
  %50 = sub nsw i32 %3, %49
  %51 = mul nuw nsw i32 %50, 1
  %52 = add nuw nsw i32 0, %51
  %53 = urem i32 %52, 32
  %54 = udiv i32 %52, 32
  %55 = udiv i32 %54, 904
  %56 = getelementptr inbounds [904 x [32 x float]], ptr %arg8, i32 0, i32 %54, i32 %53
  %57 = load float, ptr %56, align 4, !invariant.load !297
  %58 = getelementptr inbounds [904 x [32 x float]], ptr %arg9, i32 0, i32 %54, i32 %53
  %59 = load float, ptr %58, align 4
  %subtract.21 = fsub float %57, %59
  br label %concatenate.25.merge

concat_index_from_operand_id5:                    ; preds = %concatenate.pivot.37632.5
  %60 = phi i32 [ 37632, %concatenate.pivot.37632.5 ]
  %61 = sub nsw i32 %3, %60
  %62 = mul nuw nsw i32 %61, 1
  %63 = add nuw nsw i32 0, %62
  %64 = urem i32 %63, 256
  %65 = udiv i32 %63, 256
  %66 = udiv i32 %65, 360
  %67 = getelementptr inbounds [360 x [256 x float]], ptr %arg10, i32 0, i32 %65, i32 %64
  %68 = load float, ptr %67, align 4, !invariant.load !297
  %69 = getelementptr inbounds [360 x [256 x float]], ptr %arg11, i32 0, i32 %65, i32 %64
  %70 = load float, ptr %69, align 4
  %subtract.23 = fsub float %68, %70
  br label %concatenate.25.merge

concatenate.pivot.4736.:                          ; preds = %fusion_725.in_bounds-true
  %71 = icmp ult i32 %3, 4736
  br i1 %71, label %concatenate.pivot.640., label %concatenate.pivot.8704.

concatenate.pivot.640.:                           ; preds = %concatenate.pivot.4736.
  %72 = icmp ult i32 %3, 640
  br i1 %72, label %concatenate.pivot.0., label %concatenate.pivot.2688.

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.640.
  br label %concat_index_from_operand_id0

concatenate.pivot.2688.:                          ; preds = %concatenate.pivot.640.
  %73 = icmp ult i32 %3, 2688
  br i1 %73, label %concatenate.pivot.640.1, label %concatenate.pivot.2688.2

concatenate.pivot.640.1:                          ; preds = %concatenate.pivot.2688.
  br label %concat_index_from_operand_id1

concatenate.pivot.2688.2:                         ; preds = %concatenate.pivot.2688.
  br label %concat_index_from_operand_id2

concatenate.pivot.8704.:                          ; preds = %concatenate.pivot.4736.
  %74 = icmp ult i32 %3, 8704
  br i1 %74, label %concatenate.pivot.4736.3, label %concatenate.pivot.37632.

concatenate.pivot.4736.3:                         ; preds = %concatenate.pivot.8704.
  br label %concat_index_from_operand_id3

concatenate.pivot.37632.:                         ; preds = %concatenate.pivot.8704.
  %75 = icmp ult i32 %3, 37632
  br i1 %75, label %concatenate.pivot.8704.4, label %concatenate.pivot.37632.5

concatenate.pivot.8704.4:                         ; preds = %concatenate.pivot.37632.
  br label %concat_index_from_operand_id4

concatenate.pivot.37632.5:                        ; preds = %concatenate.pivot.37632.
  br label %concat_index_from_operand_id5

concatenate.25.merge:                             ; preds = %concat_index_from_operand_id5, %concat_index_from_operand_id4, %concat_index_from_operand_id3, %concat_index_from_operand_id2, %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %76 = phi float [ %subtract.13, %concat_index_from_operand_id0 ], [ %subtract.15, %concat_index_from_operand_id1 ], [ %subtract.17, %concat_index_from_operand_id2 ], [ %subtract.19, %concat_index_from_operand_id3 ], [ %subtract.21, %concat_index_from_operand_id4 ], [ %subtract.23, %concat_index_from_operand_id5 ]
  %77 = icmp sge i32 %3, 0
  %78 = icmp slt i32 %3, 640
  %79 = and i1 %77, %78
  br i1 %79, label %slice0-true, label %slice0-after

slice0-after:                                     ; preds = %slice0-true, %concatenate.25.merge
  %80 = icmp sge i32 %3, 640
  %81 = icmp slt i32 %3, 2688
  %82 = and i1 %80, %81
  br i1 %82, label %slice1-true, label %slice1-after

slice1-after:                                     ; preds = %slice1-true, %slice0-after
  %83 = icmp sge i32 %3, 2688
  %84 = icmp slt i32 %3, 4736
  %85 = and i1 %83, %84
  br i1 %85, label %slice2-true, label %slice2-after

slice2-after:                                     ; preds = %slice2-true, %slice1-after
  %86 = icmp sge i32 %3, 4736
  %87 = icmp slt i32 %3, 8704
  %88 = and i1 %86, %87
  br i1 %88, label %slice3-true, label %slice3-after

slice3-after:                                     ; preds = %slice3-true, %slice2-after
  %89 = icmp sge i32 %3, 8704
  %90 = icmp slt i32 %3, 37632
  %91 = and i1 %89, %90
  br i1 %91, label %slice4-true, label %slice4-after

slice4-after:                                     ; preds = %slice4-true, %slice3-after
  %92 = icmp sge i32 %3, 37632
  %93 = icmp slt i32 %3, 129792
  %94 = and i1 %92, %93
  br i1 %94, label %slice5-true, label %slice5-after

slice5-after:                                     ; preds = %slice5-true, %slice4-after
  br label %fusion_725.in_bounds-after

slice0-true:                                      ; preds = %concatenate.25.merge
  %95 = sub i32 %3, 0
  %96 = getelementptr inbounds [640 x float], ptr %arg1, i32 0, i32 %95
  store float %76, ptr %96, align 4
  br label %slice0-after

slice1-true:                                      ; preds = %slice0-after
  %97 = sub i32 %3, 640
  %98 = getelementptr inbounds [2048 x float], ptr %arg3, i32 0, i32 %97
  store float %76, ptr %98, align 4
  br label %slice1-after

slice2-true:                                      ; preds = %slice1-after
  %99 = sub i32 %3, 2688
  %100 = getelementptr inbounds [2048 x float], ptr %arg12, i32 0, i32 %99
  store float %76, ptr %100, align 4
  br label %slice2-after

slice3-true:                                      ; preds = %slice2-after
  %101 = sub i32 %3, 4736
  %102 = getelementptr inbounds [3968 x float], ptr %arg7, i32 0, i32 %101
  store float %76, ptr %102, align 4
  br label %slice3-after

slice4-true:                                      ; preds = %slice3-after
  %103 = sub i32 %3, 8704
  %104 = getelementptr inbounds [28928 x float], ptr %arg9, i32 0, i32 %103
  store float %76, ptr %104, align 4
  br label %slice4-after

slice5-true:                                      ; preds = %slice4-after
  %105 = sub i32 %3, 37632
  %106 = getelementptr inbounds [92160 x float], ptr %arg11, i32 0, i32 %105
  store float %76, ptr %106, align 4
  br label %slice5-after
}

define void @copy_fusion_6(ptr noalias align 16 dereferenceable(1024) %arg0, ptr noalias align 128 dereferenceable(1024) %arg1, ptr noalias align 16 dereferenceable(1024) %arg2, ptr noalias align 128 dereferenceable(1024) %arg3, ptr noalias align 16 dereferenceable(1024) %arg4, ptr noalias align 128 dereferenceable(1024) %arg5, ptr noalias align 16 dereferenceable(1024) %arg6, ptr noalias align 128 dereferenceable(1024) %arg7, ptr noalias align 16 dereferenceable(1024) %arg8, ptr noalias align 128 dereferenceable(1024) %arg9, ptr noalias align 16 dereferenceable(1024) %arg10, ptr noalias align 128 dereferenceable(1024) %arg11, ptr noalias align 16 dereferenceable(65536) %arg12, ptr noalias align 128 dereferenceable(65536) %arg13, ptr noalias align 16 dereferenceable(65536) %arg14, ptr noalias align 128 dereferenceable(65536) %arg15, ptr noalias align 16 dereferenceable(65536) %arg16, ptr noalias align 128 dereferenceable(65536) %arg17, ptr noalias align 16 dereferenceable(65536) %arg18, ptr noalias align 128 dereferenceable(65536) %arg19, ptr noalias align 16 dereferenceable(65536) %arg20, ptr noalias align 128 dereferenceable(65536) %arg21, ptr noalias align 16 dereferenceable(65536) %arg22, ptr noalias align 128 dereferenceable(65536) %arg23, ptr noalias align 128 dereferenceable(65536) %arg24) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !524
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 17408
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = icmp ult i32 %linear_index, 16640
  br i1 %4, label %copy_fusion_6.in_bounds-true, label %copy_fusion_6.in_bounds-after

copy_fusion_6.in_bounds-after:                    ; preds = %slice11-after, %entry
  ret void

copy_fusion_6.in_bounds-true:                     ; preds = %entry
  br label %concatenate.pivot.256.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %5 = phi i32 [ 0, %concatenate.pivot.0. ]
  %6 = sub nsw i32 %3, %5
  %7 = getelementptr inbounds [256 x float], ptr %arg0, i32 0, i32 %6
  %8 = load float, ptr %7, align 4, !invariant.load !297
  %region_0_78_constant_25 = load float, ptr @110, align 4
  %9 = getelementptr inbounds [256 x float], ptr %arg1, i32 0, i32 %6
  %10 = load float, ptr %9, align 4
  %multiply.27 = fmul float %region_0_78_constant_25, %10
  %subtract.28 = fsub float %8, %multiply.27
  br label %concatenate.34.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.256.1
  %11 = phi i32 [ 256, %concatenate.pivot.256.1 ]
  %12 = sub nsw i32 %3, %11
  %13 = mul nuw nsw i32 %12, 1
  %14 = add nuw nsw i32 0, %13
  %15 = urem i32 %14, 128
  %16 = udiv i32 %14, 128
  %17 = udiv i32 %16, 128
  %18 = getelementptr inbounds [128 x [128 x float]], ptr %arg12, i32 0, i32 %16, i32 %15
  %19 = load float, ptr %18, align 4, !invariant.load !297
  %region_0_78_constant_29 = load float, ptr @109, align 4
  %20 = getelementptr inbounds [128 x [128 x float]], ptr %arg13, i32 0, i32 %16, i32 %15
  %21 = load float, ptr %20, align 4, !invariant.load !297
  %multiply.31 = fmul float %region_0_78_constant_29, %21
  %subtract.32 = fsub float %19, %multiply.31
  br label %concatenate.34.merge

concatenate.pivot.256.:                           ; preds = %copy_fusion_6.in_bounds-true
  %22 = icmp ult i32 %3, 256
  br i1 %22, label %concatenate.pivot.0., label %concatenate.pivot.256.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.256.
  br label %concat_index_from_operand_id0

concatenate.pivot.256.1:                          ; preds = %concatenate.pivot.256.
  br label %concat_index_from_operand_id1

concatenate.34.merge:                             ; preds = %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %23 = phi float [ %subtract.28, %concat_index_from_operand_id0 ], [ %subtract.32, %concat_index_from_operand_id1 ]
  br label %concatenate.pivot.256.6

concat_index_from_operand_id02:                   ; preds = %concatenate.pivot.0.7
  %24 = phi i32 [ 0, %concatenate.pivot.0.7 ]
  %25 = sub nsw i32 %3, %24
  %26 = getelementptr inbounds [256 x float], ptr %arg2, i32 0, i32 %25
  %27 = load float, ptr %26, align 4, !invariant.load !297
  %region_0_78_constant_253 = load float, ptr @110, align 4
  %28 = getelementptr inbounds [256 x float], ptr %arg3, i32 0, i32 %25
  %29 = load float, ptr %28, align 4
  %multiply.36 = fmul float %region_0_78_constant_253, %29
  %subtract.37 = fsub float %27, %multiply.36
  br label %concatenate.41.merge

concat_index_from_operand_id14:                   ; preds = %concatenate.pivot.256.8
  %30 = phi i32 [ 256, %concatenate.pivot.256.8 ]
  %31 = sub nsw i32 %3, %30
  %32 = mul nuw nsw i32 %31, 1
  %33 = add nuw nsw i32 0, %32
  %34 = urem i32 %33, 128
  %35 = udiv i32 %33, 128
  %36 = udiv i32 %35, 128
  %37 = getelementptr inbounds [128 x [128 x float]], ptr %arg14, i32 0, i32 %35, i32 %34
  %38 = load float, ptr %37, align 4, !invariant.load !297
  %region_0_78_constant_295 = load float, ptr @109, align 4
  %39 = getelementptr inbounds [128 x [128 x float]], ptr %arg15, i32 0, i32 %35, i32 %34
  %40 = load float, ptr %39, align 4
  %multiply.38 = fmul float %region_0_78_constant_295, %40
  %subtract.39 = fsub float %38, %multiply.38
  br label %concatenate.41.merge

concatenate.pivot.256.6:                          ; preds = %concatenate.34.merge
  %41 = icmp ult i32 %3, 256
  br i1 %41, label %concatenate.pivot.0.7, label %concatenate.pivot.256.8

concatenate.pivot.0.7:                            ; preds = %concatenate.pivot.256.6
  br label %concat_index_from_operand_id02

concatenate.pivot.256.8:                          ; preds = %concatenate.pivot.256.6
  br label %concat_index_from_operand_id14

concatenate.41.merge:                             ; preds = %concat_index_from_operand_id14, %concat_index_from_operand_id02
  %42 = phi float [ %subtract.37, %concat_index_from_operand_id02 ], [ %subtract.39, %concat_index_from_operand_id14 ]
  br label %concatenate.pivot.256.13

concat_index_from_operand_id09:                   ; preds = %concatenate.pivot.0.14
  %43 = phi i32 [ 0, %concatenate.pivot.0.14 ]
  %44 = sub nsw i32 %3, %43
  %45 = getelementptr inbounds [256 x float], ptr %arg4, i32 0, i32 %44
  %46 = load float, ptr %45, align 4, !invariant.load !297
  %region_0_78_constant_2510 = load float, ptr @110, align 4
  %47 = getelementptr inbounds [256 x float], ptr %arg5, i32 0, i32 %44
  %48 = load float, ptr %47, align 4
  %multiply.43 = fmul float %region_0_78_constant_2510, %48
  %subtract.44 = fsub float %46, %multiply.43
  br label %concatenate.48.merge

concat_index_from_operand_id111:                  ; preds = %concatenate.pivot.256.15
  %49 = phi i32 [ 256, %concatenate.pivot.256.15 ]
  %50 = sub nsw i32 %3, %49
  %51 = mul nuw nsw i32 %50, 1
  %52 = add nuw nsw i32 0, %51
  %53 = urem i32 %52, 128
  %54 = udiv i32 %52, 128
  %55 = udiv i32 %54, 128
  %56 = getelementptr inbounds [128 x [128 x float]], ptr %arg16, i32 0, i32 %54, i32 %53
  %57 = load float, ptr %56, align 4, !invariant.load !297
  %region_0_78_constant_2912 = load float, ptr @109, align 4
  %58 = getelementptr inbounds [128 x [128 x float]], ptr %arg17, i32 0, i32 %54, i32 %53
  %59 = load float, ptr %58, align 4
  %multiply.45 = fmul float %region_0_78_constant_2912, %59
  %subtract.46 = fsub float %57, %multiply.45
  br label %concatenate.48.merge

concatenate.pivot.256.13:                         ; preds = %concatenate.41.merge
  %60 = icmp ult i32 %3, 256
  br i1 %60, label %concatenate.pivot.0.14, label %concatenate.pivot.256.15

concatenate.pivot.0.14:                           ; preds = %concatenate.pivot.256.13
  br label %concat_index_from_operand_id09

concatenate.pivot.256.15:                         ; preds = %concatenate.pivot.256.13
  br label %concat_index_from_operand_id111

concatenate.48.merge:                             ; preds = %concat_index_from_operand_id111, %concat_index_from_operand_id09
  %61 = phi float [ %subtract.44, %concat_index_from_operand_id09 ], [ %subtract.46, %concat_index_from_operand_id111 ]
  br label %concatenate.pivot.256.20

concat_index_from_operand_id016:                  ; preds = %concatenate.pivot.0.21
  %62 = phi i32 [ 0, %concatenate.pivot.0.21 ]
  %63 = sub nsw i32 %3, %62
  %64 = getelementptr inbounds [256 x float], ptr %arg6, i32 0, i32 %63
  %65 = load float, ptr %64, align 4, !invariant.load !297
  %region_0_78_constant_2517 = load float, ptr @110, align 4
  %66 = getelementptr inbounds [256 x float], ptr %arg7, i32 0, i32 %63
  %67 = load float, ptr %66, align 4
  %multiply.50 = fmul float %region_0_78_constant_2517, %67
  %subtract.51 = fsub float %65, %multiply.50
  br label %concatenate.55.merge

concat_index_from_operand_id118:                  ; preds = %concatenate.pivot.256.22
  %68 = phi i32 [ 256, %concatenate.pivot.256.22 ]
  %69 = sub nsw i32 %3, %68
  %70 = mul nuw nsw i32 %69, 1
  %71 = add nuw nsw i32 0, %70
  %72 = urem i32 %71, 128
  %73 = udiv i32 %71, 128
  %74 = udiv i32 %73, 128
  %75 = getelementptr inbounds [128 x [128 x float]], ptr %arg18, i32 0, i32 %73, i32 %72
  %76 = load float, ptr %75, align 4, !invariant.load !297
  %region_0_78_constant_2919 = load float, ptr @109, align 4
  %77 = getelementptr inbounds [128 x [128 x float]], ptr %arg19, i32 0, i32 %73, i32 %72
  %78 = load float, ptr %77, align 4
  %multiply.52 = fmul float %region_0_78_constant_2919, %78
  %subtract.53 = fsub float %76, %multiply.52
  br label %concatenate.55.merge

concatenate.pivot.256.20:                         ; preds = %concatenate.48.merge
  %79 = icmp ult i32 %3, 256
  br i1 %79, label %concatenate.pivot.0.21, label %concatenate.pivot.256.22

concatenate.pivot.0.21:                           ; preds = %concatenate.pivot.256.20
  br label %concat_index_from_operand_id016

concatenate.pivot.256.22:                         ; preds = %concatenate.pivot.256.20
  br label %concat_index_from_operand_id118

concatenate.55.merge:                             ; preds = %concat_index_from_operand_id118, %concat_index_from_operand_id016
  %80 = phi float [ %subtract.51, %concat_index_from_operand_id016 ], [ %subtract.53, %concat_index_from_operand_id118 ]
  br label %concatenate.pivot.256.27

concat_index_from_operand_id023:                  ; preds = %concatenate.pivot.0.28
  %81 = phi i32 [ 0, %concatenate.pivot.0.28 ]
  %82 = sub nsw i32 %3, %81
  %83 = getelementptr inbounds [256 x float], ptr %arg8, i32 0, i32 %82
  %84 = load float, ptr %83, align 4, !invariant.load !297
  %region_0_78_constant_2524 = load float, ptr @110, align 4
  %85 = getelementptr inbounds [256 x float], ptr %arg9, i32 0, i32 %82
  %86 = load float, ptr %85, align 4
  %multiply.57 = fmul float %region_0_78_constant_2524, %86
  %subtract.58 = fsub float %84, %multiply.57
  br label %concatenate.62.merge

concat_index_from_operand_id125:                  ; preds = %concatenate.pivot.256.29
  %87 = phi i32 [ 256, %concatenate.pivot.256.29 ]
  %88 = sub nsw i32 %3, %87
  %89 = mul nuw nsw i32 %88, 1
  %90 = add nuw nsw i32 0, %89
  %91 = urem i32 %90, 128
  %92 = udiv i32 %90, 128
  %93 = udiv i32 %92, 128
  %94 = getelementptr inbounds [128 x [128 x float]], ptr %arg20, i32 0, i32 %92, i32 %91
  %95 = load float, ptr %94, align 4, !invariant.load !297
  %region_0_78_constant_2926 = load float, ptr @109, align 4
  %96 = getelementptr inbounds [128 x [128 x float]], ptr %arg21, i32 0, i32 %92, i32 %91
  %97 = load float, ptr %96, align 4
  %multiply.59 = fmul float %region_0_78_constant_2926, %97
  %subtract.60 = fsub float %95, %multiply.59
  br label %concatenate.62.merge

concatenate.pivot.256.27:                         ; preds = %concatenate.55.merge
  %98 = icmp ult i32 %3, 256
  br i1 %98, label %concatenate.pivot.0.28, label %concatenate.pivot.256.29

concatenate.pivot.0.28:                           ; preds = %concatenate.pivot.256.27
  br label %concat_index_from_operand_id023

concatenate.pivot.256.29:                         ; preds = %concatenate.pivot.256.27
  br label %concat_index_from_operand_id125

concatenate.62.merge:                             ; preds = %concat_index_from_operand_id125, %concat_index_from_operand_id023
  %99 = phi float [ %subtract.58, %concat_index_from_operand_id023 ], [ %subtract.60, %concat_index_from_operand_id125 ]
  br label %concatenate.pivot.256.34

concat_index_from_operand_id030:                  ; preds = %concatenate.pivot.0.35
  %100 = phi i32 [ 0, %concatenate.pivot.0.35 ]
  %101 = sub nsw i32 %3, %100
  %102 = getelementptr inbounds [256 x float], ptr %arg10, i32 0, i32 %101
  %103 = load float, ptr %102, align 4, !invariant.load !297
  %region_0_78_constant_2531 = load float, ptr @110, align 4
  %104 = getelementptr inbounds [256 x float], ptr %arg11, i32 0, i32 %101
  %105 = load float, ptr %104, align 4
  %multiply.64 = fmul float %region_0_78_constant_2531, %105
  %subtract.65 = fsub float %103, %multiply.64
  br label %concatenate.69.merge

concat_index_from_operand_id132:                  ; preds = %concatenate.pivot.256.36
  %106 = phi i32 [ 256, %concatenate.pivot.256.36 ]
  %107 = sub nsw i32 %3, %106
  %108 = mul nuw nsw i32 %107, 1
  %109 = add nuw nsw i32 0, %108
  %110 = urem i32 %109, 128
  %111 = udiv i32 %109, 128
  %112 = udiv i32 %111, 128
  %113 = getelementptr inbounds [128 x [128 x float]], ptr %arg22, i32 0, i32 %111, i32 %110
  %114 = load float, ptr %113, align 4, !invariant.load !297
  %region_0_78_constant_2933 = load float, ptr @109, align 4
  %115 = getelementptr inbounds [128 x [128 x float]], ptr %arg23, i32 0, i32 %111, i32 %110
  %116 = load float, ptr %115, align 4
  %multiply.66 = fmul float %region_0_78_constant_2933, %116
  %subtract.67 = fsub float %114, %multiply.66
  br label %concatenate.69.merge

concatenate.pivot.256.34:                         ; preds = %concatenate.62.merge
  %117 = icmp ult i32 %3, 256
  br i1 %117, label %concatenate.pivot.0.35, label %concatenate.pivot.256.36

concatenate.pivot.0.35:                           ; preds = %concatenate.pivot.256.34
  br label %concat_index_from_operand_id030

concatenate.pivot.256.36:                         ; preds = %concatenate.pivot.256.34
  br label %concat_index_from_operand_id132

concatenate.69.merge:                             ; preds = %concat_index_from_operand_id132, %concat_index_from_operand_id030
  %118 = phi float [ %subtract.65, %concat_index_from_operand_id030 ], [ %subtract.67, %concat_index_from_operand_id132 ]
  br label %concatenate.pivot.256.46

concat_index_from_operand_id038:                  ; preds = %concatenate.pivot.0.47
  %119 = phi i32 [ 0, %concatenate.pivot.0.47 ]
  %120 = sub nsw i32 %3, %119
  %121 = getelementptr inbounds [256 x float], ptr %arg0, i32 0, i32 %120
  %122 = load float, ptr %121, align 4, !invariant.load !297
  %region_0_78_constant_2539 = load float, ptr @110, align 4
  %123 = getelementptr inbounds [256 x float], ptr %arg1, i32 0, i32 %120
  %124 = load float, ptr %123, align 4
  %multiply.2740 = fmul float %region_0_78_constant_2539, %124
  %subtract.2841 = fsub float %122, %multiply.2740
  br label %concatenate.34.merge37

concat_index_from_operand_id142:                  ; preds = %concatenate.pivot.256.48
  %125 = phi i32 [ 256, %concatenate.pivot.256.48 ]
  %126 = sub nsw i32 %3, %125
  %127 = mul nuw nsw i32 %126, 1
  %128 = add nuw nsw i32 0, %127
  %129 = urem i32 %128, 128
  %130 = udiv i32 %128, 128
  %131 = udiv i32 %130, 128
  %132 = getelementptr inbounds [128 x [128 x float]], ptr %arg12, i32 0, i32 %130, i32 %129
  %133 = load float, ptr %132, align 4, !invariant.load !297
  %region_0_78_constant_2943 = load float, ptr @109, align 4
  %134 = getelementptr inbounds [128 x [128 x float]], ptr %arg13, i32 0, i32 %130, i32 %129
  %135 = load float, ptr %134, align 4, !invariant.load !297
  %multiply.3144 = fmul float %region_0_78_constant_2943, %135
  %subtract.3245 = fsub float %133, %multiply.3144
  br label %concatenate.34.merge37

concatenate.pivot.256.46:                         ; preds = %concatenate.69.merge
  %136 = icmp ult i32 %3, 256
  br i1 %136, label %concatenate.pivot.0.47, label %concatenate.pivot.256.48

concatenate.pivot.0.47:                           ; preds = %concatenate.pivot.256.46
  br label %concat_index_from_operand_id038

concatenate.pivot.256.48:                         ; preds = %concatenate.pivot.256.46
  br label %concat_index_from_operand_id142

concatenate.34.merge37:                           ; preds = %concat_index_from_operand_id142, %concat_index_from_operand_id038
  %137 = phi float [ %subtract.2841, %concat_index_from_operand_id038 ], [ %subtract.3245, %concat_index_from_operand_id142 ]
  br label %concatenate.pivot.256.58

concat_index_from_operand_id050:                  ; preds = %concatenate.pivot.0.59
  %138 = phi i32 [ 0, %concatenate.pivot.0.59 ]
  %139 = sub nsw i32 %3, %138
  %140 = getelementptr inbounds [256 x float], ptr %arg2, i32 0, i32 %139
  %141 = load float, ptr %140, align 4, !invariant.load !297
  %region_0_78_constant_2551 = load float, ptr @110, align 4
  %142 = getelementptr inbounds [256 x float], ptr %arg3, i32 0, i32 %139
  %143 = load float, ptr %142, align 4
  %multiply.3652 = fmul float %region_0_78_constant_2551, %143
  %subtract.3753 = fsub float %141, %multiply.3652
  br label %concatenate.41.merge49

concat_index_from_operand_id154:                  ; preds = %concatenate.pivot.256.60
  %144 = phi i32 [ 256, %concatenate.pivot.256.60 ]
  %145 = sub nsw i32 %3, %144
  %146 = mul nuw nsw i32 %145, 1
  %147 = add nuw nsw i32 0, %146
  %148 = urem i32 %147, 128
  %149 = udiv i32 %147, 128
  %150 = udiv i32 %149, 128
  %151 = getelementptr inbounds [128 x [128 x float]], ptr %arg14, i32 0, i32 %149, i32 %148
  %152 = load float, ptr %151, align 4, !invariant.load !297
  %region_0_78_constant_2955 = load float, ptr @109, align 4
  %153 = getelementptr inbounds [128 x [128 x float]], ptr %arg15, i32 0, i32 %149, i32 %148
  %154 = load float, ptr %153, align 4
  %multiply.3856 = fmul float %region_0_78_constant_2955, %154
  %subtract.3957 = fsub float %152, %multiply.3856
  br label %concatenate.41.merge49

concatenate.pivot.256.58:                         ; preds = %concatenate.34.merge37
  %155 = icmp ult i32 %3, 256
  br i1 %155, label %concatenate.pivot.0.59, label %concatenate.pivot.256.60

concatenate.pivot.0.59:                           ; preds = %concatenate.pivot.256.58
  br label %concat_index_from_operand_id050

concatenate.pivot.256.60:                         ; preds = %concatenate.pivot.256.58
  br label %concat_index_from_operand_id154

concatenate.41.merge49:                           ; preds = %concat_index_from_operand_id154, %concat_index_from_operand_id050
  %156 = phi float [ %subtract.3753, %concat_index_from_operand_id050 ], [ %subtract.3957, %concat_index_from_operand_id154 ]
  br label %concatenate.pivot.256.70

concat_index_from_operand_id062:                  ; preds = %concatenate.pivot.0.71
  %157 = phi i32 [ 0, %concatenate.pivot.0.71 ]
  %158 = sub nsw i32 %3, %157
  %159 = getelementptr inbounds [256 x float], ptr %arg4, i32 0, i32 %158
  %160 = load float, ptr %159, align 4, !invariant.load !297
  %region_0_78_constant_2563 = load float, ptr @110, align 4
  %161 = getelementptr inbounds [256 x float], ptr %arg5, i32 0, i32 %158
  %162 = load float, ptr %161, align 4
  %multiply.4364 = fmul float %region_0_78_constant_2563, %162
  %subtract.4465 = fsub float %160, %multiply.4364
  br label %concatenate.48.merge61

concat_index_from_operand_id166:                  ; preds = %concatenate.pivot.256.72
  %163 = phi i32 [ 256, %concatenate.pivot.256.72 ]
  %164 = sub nsw i32 %3, %163
  %165 = mul nuw nsw i32 %164, 1
  %166 = add nuw nsw i32 0, %165
  %167 = urem i32 %166, 128
  %168 = udiv i32 %166, 128
  %169 = udiv i32 %168, 128
  %170 = getelementptr inbounds [128 x [128 x float]], ptr %arg16, i32 0, i32 %168, i32 %167
  %171 = load float, ptr %170, align 4, !invariant.load !297
  %region_0_78_constant_2967 = load float, ptr @109, align 4
  %172 = getelementptr inbounds [128 x [128 x float]], ptr %arg17, i32 0, i32 %168, i32 %167
  %173 = load float, ptr %172, align 4
  %multiply.4568 = fmul float %region_0_78_constant_2967, %173
  %subtract.4669 = fsub float %171, %multiply.4568
  br label %concatenate.48.merge61

concatenate.pivot.256.70:                         ; preds = %concatenate.41.merge49
  %174 = icmp ult i32 %3, 256
  br i1 %174, label %concatenate.pivot.0.71, label %concatenate.pivot.256.72

concatenate.pivot.0.71:                           ; preds = %concatenate.pivot.256.70
  br label %concat_index_from_operand_id062

concatenate.pivot.256.72:                         ; preds = %concatenate.pivot.256.70
  br label %concat_index_from_operand_id166

concatenate.48.merge61:                           ; preds = %concat_index_from_operand_id166, %concat_index_from_operand_id062
  %175 = phi float [ %subtract.4465, %concat_index_from_operand_id062 ], [ %subtract.4669, %concat_index_from_operand_id166 ]
  br label %concatenate.pivot.256.82

concat_index_from_operand_id074:                  ; preds = %concatenate.pivot.0.83
  %176 = phi i32 [ 0, %concatenate.pivot.0.83 ]
  %177 = sub nsw i32 %3, %176
  %178 = getelementptr inbounds [256 x float], ptr %arg6, i32 0, i32 %177
  %179 = load float, ptr %178, align 4, !invariant.load !297
  %region_0_78_constant_2575 = load float, ptr @110, align 4
  %180 = getelementptr inbounds [256 x float], ptr %arg7, i32 0, i32 %177
  %181 = load float, ptr %180, align 4
  %multiply.5076 = fmul float %region_0_78_constant_2575, %181
  %subtract.5177 = fsub float %179, %multiply.5076
  br label %concatenate.55.merge73

concat_index_from_operand_id178:                  ; preds = %concatenate.pivot.256.84
  %182 = phi i32 [ 256, %concatenate.pivot.256.84 ]
  %183 = sub nsw i32 %3, %182
  %184 = mul nuw nsw i32 %183, 1
  %185 = add nuw nsw i32 0, %184
  %186 = urem i32 %185, 128
  %187 = udiv i32 %185, 128
  %188 = udiv i32 %187, 128
  %189 = getelementptr inbounds [128 x [128 x float]], ptr %arg18, i32 0, i32 %187, i32 %186
  %190 = load float, ptr %189, align 4, !invariant.load !297
  %region_0_78_constant_2979 = load float, ptr @109, align 4
  %191 = getelementptr inbounds [128 x [128 x float]], ptr %arg19, i32 0, i32 %187, i32 %186
  %192 = load float, ptr %191, align 4
  %multiply.5280 = fmul float %region_0_78_constant_2979, %192
  %subtract.5381 = fsub float %190, %multiply.5280
  br label %concatenate.55.merge73

concatenate.pivot.256.82:                         ; preds = %concatenate.48.merge61
  %193 = icmp ult i32 %3, 256
  br i1 %193, label %concatenate.pivot.0.83, label %concatenate.pivot.256.84

concatenate.pivot.0.83:                           ; preds = %concatenate.pivot.256.82
  br label %concat_index_from_operand_id074

concatenate.pivot.256.84:                         ; preds = %concatenate.pivot.256.82
  br label %concat_index_from_operand_id178

concatenate.55.merge73:                           ; preds = %concat_index_from_operand_id178, %concat_index_from_operand_id074
  %194 = phi float [ %subtract.5177, %concat_index_from_operand_id074 ], [ %subtract.5381, %concat_index_from_operand_id178 ]
  br label %concatenate.pivot.256.94

concat_index_from_operand_id086:                  ; preds = %concatenate.pivot.0.95
  %195 = phi i32 [ 0, %concatenate.pivot.0.95 ]
  %196 = sub nsw i32 %3, %195
  %197 = getelementptr inbounds [256 x float], ptr %arg8, i32 0, i32 %196
  %198 = load float, ptr %197, align 4, !invariant.load !297
  %region_0_78_constant_2587 = load float, ptr @110, align 4
  %199 = getelementptr inbounds [256 x float], ptr %arg9, i32 0, i32 %196
  %200 = load float, ptr %199, align 4
  %multiply.5788 = fmul float %region_0_78_constant_2587, %200
  %subtract.5889 = fsub float %198, %multiply.5788
  br label %concatenate.62.merge85

concat_index_from_operand_id190:                  ; preds = %concatenate.pivot.256.96
  %201 = phi i32 [ 256, %concatenate.pivot.256.96 ]
  %202 = sub nsw i32 %3, %201
  %203 = mul nuw nsw i32 %202, 1
  %204 = add nuw nsw i32 0, %203
  %205 = urem i32 %204, 128
  %206 = udiv i32 %204, 128
  %207 = udiv i32 %206, 128
  %208 = getelementptr inbounds [128 x [128 x float]], ptr %arg20, i32 0, i32 %206, i32 %205
  %209 = load float, ptr %208, align 4, !invariant.load !297
  %region_0_78_constant_2991 = load float, ptr @109, align 4
  %210 = getelementptr inbounds [128 x [128 x float]], ptr %arg21, i32 0, i32 %206, i32 %205
  %211 = load float, ptr %210, align 4
  %multiply.5992 = fmul float %region_0_78_constant_2991, %211
  %subtract.6093 = fsub float %209, %multiply.5992
  br label %concatenate.62.merge85

concatenate.pivot.256.94:                         ; preds = %concatenate.55.merge73
  %212 = icmp ult i32 %3, 256
  br i1 %212, label %concatenate.pivot.0.95, label %concatenate.pivot.256.96

concatenate.pivot.0.95:                           ; preds = %concatenate.pivot.256.94
  br label %concat_index_from_operand_id086

concatenate.pivot.256.96:                         ; preds = %concatenate.pivot.256.94
  br label %concat_index_from_operand_id190

concatenate.62.merge85:                           ; preds = %concat_index_from_operand_id190, %concat_index_from_operand_id086
  %213 = phi float [ %subtract.5889, %concat_index_from_operand_id086 ], [ %subtract.6093, %concat_index_from_operand_id190 ]
  br label %concatenate.pivot.256.106

concat_index_from_operand_id098:                  ; preds = %concatenate.pivot.0.107
  %214 = phi i32 [ 0, %concatenate.pivot.0.107 ]
  %215 = sub nsw i32 %3, %214
  %216 = getelementptr inbounds [256 x float], ptr %arg10, i32 0, i32 %215
  %217 = load float, ptr %216, align 4, !invariant.load !297
  %region_0_78_constant_2599 = load float, ptr @110, align 4
  %218 = getelementptr inbounds [256 x float], ptr %arg11, i32 0, i32 %215
  %219 = load float, ptr %218, align 4
  %multiply.64100 = fmul float %region_0_78_constant_2599, %219
  %subtract.65101 = fsub float %217, %multiply.64100
  br label %concatenate.69.merge97

concat_index_from_operand_id1102:                 ; preds = %concatenate.pivot.256.108
  %220 = phi i32 [ 256, %concatenate.pivot.256.108 ]
  %221 = sub nsw i32 %3, %220
  %222 = mul nuw nsw i32 %221, 1
  %223 = add nuw nsw i32 0, %222
  %224 = urem i32 %223, 128
  %225 = udiv i32 %223, 128
  %226 = udiv i32 %225, 128
  %227 = getelementptr inbounds [128 x [128 x float]], ptr %arg22, i32 0, i32 %225, i32 %224
  %228 = load float, ptr %227, align 4, !invariant.load !297
  %region_0_78_constant_29103 = load float, ptr @109, align 4
  %229 = getelementptr inbounds [128 x [128 x float]], ptr %arg23, i32 0, i32 %225, i32 %224
  %230 = load float, ptr %229, align 4
  %multiply.66104 = fmul float %region_0_78_constant_29103, %230
  %subtract.67105 = fsub float %228, %multiply.66104
  br label %concatenate.69.merge97

concatenate.pivot.256.106:                        ; preds = %concatenate.62.merge85
  %231 = icmp ult i32 %3, 256
  br i1 %231, label %concatenate.pivot.0.107, label %concatenate.pivot.256.108

concatenate.pivot.0.107:                          ; preds = %concatenate.pivot.256.106
  br label %concat_index_from_operand_id098

concatenate.pivot.256.108:                        ; preds = %concatenate.pivot.256.106
  br label %concat_index_from_operand_id1102

concatenate.69.merge97:                           ; preds = %concat_index_from_operand_id1102, %concat_index_from_operand_id098
  %232 = phi float [ %subtract.65101, %concat_index_from_operand_id098 ], [ %subtract.67105, %concat_index_from_operand_id1102 ]
  %233 = icmp sge i32 %3, 0
  %234 = icmp slt i32 %3, 256
  %235 = and i1 %233, %234
  br i1 %235, label %slice0-true, label %slice0-after

slice0-after:                                     ; preds = %slice0-true, %concatenate.69.merge97
  %236 = icmp sge i32 %3, 0
  %237 = icmp slt i32 %3, 256
  %238 = and i1 %236, %237
  br i1 %238, label %slice1-true, label %slice1-after

slice1-after:                                     ; preds = %slice1-true, %slice0-after
  %239 = icmp sge i32 %3, 0
  %240 = icmp slt i32 %3, 256
  %241 = and i1 %239, %240
  br i1 %241, label %slice2-true, label %slice2-after

slice2-after:                                     ; preds = %slice2-true, %slice1-after
  %242 = icmp sge i32 %3, 0
  %243 = icmp slt i32 %3, 256
  %244 = and i1 %242, %243
  br i1 %244, label %slice3-true, label %slice3-after

slice3-after:                                     ; preds = %slice3-true, %slice2-after
  %245 = icmp sge i32 %3, 0
  %246 = icmp slt i32 %3, 256
  %247 = and i1 %245, %246
  br i1 %247, label %slice4-true, label %slice4-after

slice4-after:                                     ; preds = %slice4-true, %slice3-after
  %248 = icmp sge i32 %3, 0
  %249 = icmp slt i32 %3, 256
  %250 = and i1 %248, %249
  br i1 %250, label %slice5-true, label %slice5-after

slice5-after:                                     ; preds = %slice5-true, %slice4-after
  %251 = icmp sge i32 %3, 256
  %252 = icmp slt i32 %3, 16640
  %253 = and i1 %251, %252
  br i1 %253, label %slice6-true, label %slice6-after

slice6-after:                                     ; preds = %slice6-true, %slice5-after
  %254 = icmp sge i32 %3, 256
  %255 = icmp slt i32 %3, 16640
  %256 = and i1 %254, %255
  br i1 %256, label %slice7-true, label %slice7-after

slice7-after:                                     ; preds = %slice7-true, %slice6-after
  %257 = icmp sge i32 %3, 256
  %258 = icmp slt i32 %3, 16640
  %259 = and i1 %257, %258
  br i1 %259, label %slice8-true, label %slice8-after

slice8-after:                                     ; preds = %slice8-true, %slice7-after
  %260 = icmp sge i32 %3, 256
  %261 = icmp slt i32 %3, 16640
  %262 = and i1 %260, %261
  br i1 %262, label %slice9-true, label %slice9-after

slice9-after:                                     ; preds = %slice9-true, %slice8-after
  %263 = icmp sge i32 %3, 256
  %264 = icmp slt i32 %3, 16640
  %265 = and i1 %263, %264
  br i1 %265, label %slice10-true, label %slice10-after

slice10-after:                                    ; preds = %slice10-true, %slice9-after
  %266 = icmp sge i32 %3, 256
  %267 = icmp slt i32 %3, 16640
  %268 = and i1 %266, %267
  br i1 %268, label %slice11-true, label %slice11-after

slice11-after:                                    ; preds = %slice11-true, %slice10-after
  br label %copy_fusion_6.in_bounds-after

slice0-true:                                      ; preds = %concatenate.69.merge97
  %269 = sub i32 %3, 0
  %270 = getelementptr inbounds [256 x float], ptr %arg1, i32 0, i32 %269
  store float %23, ptr %270, align 4
  br label %slice0-after

slice1-true:                                      ; preds = %slice0-after
  %271 = sub i32 %3, 0
  %272 = getelementptr inbounds [256 x float], ptr %arg3, i32 0, i32 %271
  store float %42, ptr %272, align 4
  br label %slice1-after

slice2-true:                                      ; preds = %slice1-after
  %273 = sub i32 %3, 0
  %274 = getelementptr inbounds [256 x float], ptr %arg5, i32 0, i32 %273
  store float %61, ptr %274, align 4
  br label %slice2-after

slice3-true:                                      ; preds = %slice2-after
  %275 = sub i32 %3, 0
  %276 = getelementptr inbounds [256 x float], ptr %arg7, i32 0, i32 %275
  store float %80, ptr %276, align 4
  br label %slice3-after

slice4-true:                                      ; preds = %slice3-after
  %277 = sub i32 %3, 0
  %278 = getelementptr inbounds [256 x float], ptr %arg9, i32 0, i32 %277
  store float %99, ptr %278, align 4
  br label %slice4-after

slice5-true:                                      ; preds = %slice4-after
  %279 = sub i32 %3, 0
  %280 = getelementptr inbounds [256 x float], ptr %arg11, i32 0, i32 %279
  store float %118, ptr %280, align 4
  br label %slice5-after

slice6-true:                                      ; preds = %slice5-after
  %281 = sub i32 %3, 256
  %282 = getelementptr inbounds [16384 x float], ptr %arg24, i32 0, i32 %281
  store float %137, ptr %282, align 4
  br label %slice6-after

slice7-true:                                      ; preds = %slice6-after
  %283 = sub i32 %3, 256
  %284 = getelementptr inbounds [16384 x float], ptr %arg15, i32 0, i32 %283
  store float %156, ptr %284, align 4
  br label %slice7-after

slice8-true:                                      ; preds = %slice7-after
  %285 = sub i32 %3, 256
  %286 = getelementptr inbounds [16384 x float], ptr %arg17, i32 0, i32 %285
  store float %175, ptr %286, align 4
  br label %slice8-after

slice9-true:                                      ; preds = %slice8-after
  %287 = sub i32 %3, 256
  %288 = getelementptr inbounds [16384 x float], ptr %arg19, i32 0, i32 %287
  store float %194, ptr %288, align 4
  br label %slice9-after

slice10-true:                                     ; preds = %slice9-after
  %289 = sub i32 %3, 256
  %290 = getelementptr inbounds [16384 x float], ptr %arg21, i32 0, i32 %289
  store float %213, ptr %290, align 4
  br label %slice10-after

slice11-true:                                     ; preds = %slice10-after
  %291 = sub i32 %3, 256
  %292 = getelementptr inbounds [16384 x float], ptr %arg23, i32 0, i32 %291
  store float %232, ptr %292, align 4
  br label %slice11-after
}

define void @fusion_84(ptr noalias align 128 dereferenceable(16777216) %arg0, ptr noalias align 128 dereferenceable(16777216) %arg1, ptr noalias align 128 dereferenceable(131072) %arg2, ptr noalias align 128 dereferenceable(16777216) %arg3) {
entry:
  %return_buffer58 = alloca float, align 4
  %result_from_other_lane56 = alloca float, align 4
  %return_buffer55 = alloca float, align 4
  %result_from_other_lane53 = alloca float, align 4
  %return_buffer52 = alloca float, align 4
  %result_from_other_lane50 = alloca float, align 4
  %return_buffer49 = alloca float, align 4
  %result_from_other_lane47 = alloca float, align 4
  %return_buffer46 = alloca float, align 4
  %result_from_other_lane44 = alloca float, align 4
  %return_buffer40 = alloca float, align 4
  %result_from_other_lane38 = alloca float, align 4
  %return_buffer37 = alloca float, align 4
  %result_from_other_lane35 = alloca float, align 4
  %return_buffer34 = alloca float, align 4
  %result_from_other_lane32 = alloca float, align 4
  %return_buffer31 = alloca float, align 4
  %result_from_other_lane29 = alloca float, align 4
  %return_buffer28 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer20 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, i32 2, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after60, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_15_constant_8 = load float, ptr @112, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_15_constant_8, ptr %2, align 4
  %3 = getelementptr inbounds float, ptr %partial_reduction_result, i32 1
  store float %region_0_15_constant_8, ptr %3, align 4
  %4 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %5 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !293
  %6 = urem i32 %4, 1024
  %7 = udiv i32 %4, 1024
  %8 = mul i32 %5, 1
  %9 = add i32 %8, %7
  %10 = icmp ult i32 %9, 512
  br i1 %10, label %11, label %early_return

11:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %6, 32
  %thread_id.y = udiv i32 %6, 32
  %lane_id = urem i32 %6, 32
  %12 = udiv i32 %9, 1
  %13 = urem i32 %12, 8
  %14 = udiv i32 %9, 8
  %15 = urem i32 %14, 1
  %16 = udiv i32 %9, 8
  %17 = icmp eq i32 %15, 0
  %tile_bound = select i1 %17, i32 128, i32 4096
  %18 = icmp eq i32 %13, 7
  %tile_bound1 = select i1 %18, i32 64, i32 64
  %tile_origin.0 = mul i32 %16, 1
  %tile_origin.1 = mul i32 %15, 4096
  %tile_origin.2 = mul i32 %13, 64
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %11
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %19 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %19, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %20 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %21 = mul i32 %thread_id.x, 2
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after13, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %22 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %22, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %23 = icmp eq i32 %tile_loop.indvar, 0
  %24 = mul i32 %tile_loop.indvar, 2
  %25 = add i32 %24, 0
  %x_loc = add i32 %25, %21
  %26 = add i32 %tile_origin.1, %y_in_tile.indvar
  %27 = add i32 %tile_origin.2, %x_loc
  %28 = icmp ult i32 %x_loc, %tile_bound1
  br i1 %28, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body
  %29 = mul i32 %tile_loop.indvar, 2
  %30 = add i32 %29, 1
  %x_loc11 = add i32 %30, %21
  %31 = add i32 %tile_origin.1, %y_in_tile.indvar
  %32 = add i32 %tile_origin.2, %x_loc11
  %33 = icmp ult i32 %x_loc11, %tile_bound1
  br i1 %33, label %x_in_tile-true12, label %x_in_tile-after13

x_in_tile-after13:                                ; preds = %x_in_tile-true12, %x_in_tile-after
  br label %tile_loop.loop_header, !llvm.loop !525

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !526

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache156, i32 0, i32 %7, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %34 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %35 = load float, ptr %current_output, align 4
  store float %35, ptr %34, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache156, i32 0, i32 %7, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %36 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result27 = load float, ptr %36, align 4
  %37 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result27, i32 16, i32 31)
  store float %37, ptr %result_from_other_lane, align 4
  call void @region_1_9__4(ptr %36, ptr %result_from_other_lane, ptr %return_buffer28)
  %38 = load float, ptr %return_buffer28, align 4
  store float %38, ptr %36, align 4
  %partial_reduction_result30 = load float, ptr %36, align 4
  %39 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result30, i32 8, i32 31)
  store float %39, ptr %result_from_other_lane29, align 4
  call void @region_1_9__4(ptr %36, ptr %result_from_other_lane29, ptr %return_buffer31)
  %40 = load float, ptr %return_buffer31, align 4
  store float %40, ptr %36, align 4
  %partial_reduction_result33 = load float, ptr %36, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result33, i32 4, i32 31)
  store float %41, ptr %result_from_other_lane32, align 4
  call void @region_1_9__4(ptr %36, ptr %result_from_other_lane32, ptr %return_buffer34)
  %42 = load float, ptr %return_buffer34, align 4
  store float %42, ptr %36, align 4
  %partial_reduction_result36 = load float, ptr %36, align 4
  %43 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result36, i32 2, i32 31)
  store float %43, ptr %result_from_other_lane35, align 4
  call void @region_1_9__4(ptr %36, ptr %result_from_other_lane35, ptr %return_buffer37)
  %44 = load float, ptr %return_buffer37, align 4
  store float %44, ptr %36, align 4
  %partial_reduction_result39 = load float, ptr %36, align 4
  %45 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result39, i32 1, i32 31)
  store float %45, ptr %result_from_other_lane38, align 4
  call void @region_1_9__4(ptr %36, ptr %result_from_other_lane38, ptr %return_buffer40)
  %46 = load float, ptr %return_buffer40, align 4
  store float %46, ptr %36, align 4
  %47 = icmp ult i32 %thread_id.x, %tile_bound
  %48 = mul i32 %thread_id.y, 2
  %49 = icmp ult i32 %48, %tile_bound1
  %50 = and i1 %49, %47
  %51 = icmp eq i32 %lane_id, 0
  %52 = and i1 %50, %51
  br i1 %52, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %shmem_output_address41 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache156, i32 0, i32 %7, i32 1, i32 %thread_id.x, i32 %thread_id.y
  %53 = addrspacecast ptr addrspace(3) %shmem_output_address41 to ptr
  %current_output42 = getelementptr inbounds float, ptr %partial_reduction_result, i32 1
  %54 = load float, ptr %current_output42, align 4
  store float %54, ptr %53, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr43 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache156, i32 0, i32 %7, i32 1, i32 %thread_id.y, i32 %thread_id.x
  %55 = addrspacecast ptr addrspace(3) %shmem_transposed_addr43 to ptr
  %partial_reduction_result45 = load float, ptr %55, align 4
  %56 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result45, i32 16, i32 31)
  store float %56, ptr %result_from_other_lane44, align 4
  call void @region_1_9__4(ptr %55, ptr %result_from_other_lane44, ptr %return_buffer46)
  %57 = load float, ptr %return_buffer46, align 4
  store float %57, ptr %55, align 4
  %partial_reduction_result48 = load float, ptr %55, align 4
  %58 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result48, i32 8, i32 31)
  store float %58, ptr %result_from_other_lane47, align 4
  call void @region_1_9__4(ptr %55, ptr %result_from_other_lane47, ptr %return_buffer49)
  %59 = load float, ptr %return_buffer49, align 4
  store float %59, ptr %55, align 4
  %partial_reduction_result51 = load float, ptr %55, align 4
  %60 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result51, i32 4, i32 31)
  store float %60, ptr %result_from_other_lane50, align 4
  call void @region_1_9__4(ptr %55, ptr %result_from_other_lane50, ptr %return_buffer52)
  %61 = load float, ptr %return_buffer52, align 4
  store float %61, ptr %55, align 4
  %partial_reduction_result54 = load float, ptr %55, align 4
  %62 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result54, i32 2, i32 31)
  store float %62, ptr %result_from_other_lane53, align 4
  call void @region_1_9__4(ptr %55, ptr %result_from_other_lane53, ptr %return_buffer55)
  %63 = load float, ptr %return_buffer55, align 4
  store float %63, ptr %55, align 4
  %partial_reduction_result57 = load float, ptr %55, align 4
  %64 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result57, i32 1, i32 31)
  store float %64, ptr %result_from_other_lane56, align 4
  call void @region_1_9__4(ptr %55, ptr %result_from_other_lane56, ptr %return_buffer58)
  %65 = load float, ptr %return_buffer58, align 4
  store float %65, ptr %55, align 4
  %66 = icmp ult i32 %thread_id.x, %tile_bound
  %67 = mul i32 %thread_id.y, 2
  %68 = icmp ult i32 %67, %tile_bound1
  %69 = and i1 %68, %66
  %70 = icmp eq i32 %lane_id, 0
  %71 = and i1 %69, %70
  br i1 %71, label %reduction_write_output-true59, label %reduction_write_output-after60

reduction_write_output-after60:                   ; preds = %reduction_write_output-true59, %reduction_write_output-after
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %72 = mul nuw nsw i32 %27, 1
  %73 = add nuw nsw i32 0, %72
  %74 = mul nuw nsw i32 %26, 512
  %75 = add nuw nsw i32 %73, %74
  %76 = mul nuw nsw i32 %tile_origin.0, 65536
  %77 = add nuw nsw i32 %75, %76
  %78 = udiv i32 %77, 1
  %79 = urem i32 %78, 512
  %80 = udiv i32 %77, 512
  %81 = urem i32 %80, 128
  %82 = udiv i32 %77, 65536
  %83 = mul i32 %thread_id.x, 2
  %84 = sub i32 %x_loc, %83
  %85 = mul nuw nsw i32 %79, 1
  %86 = add nuw nsw i32 0, %85
  %87 = udiv i32 %86, 512
  %88 = mul nuw nsw i32 %81, 1
  %89 = add nuw nsw i32 0, %88
  %90 = mul nuw nsw i32 %82, 128
  %91 = add nuw nsw i32 %89, %90
  %92 = udiv i32 %91, 8192
  %Arg_1.2 = getelementptr inbounds [8192 x [512 x float]], ptr %arg1, i32 0, i32 %91, i32 %86
  %Arg_1.23 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %region_0_15_constant_3 = load float, ptr @111, align 4
  %compare.5 = fcmp ogt float %Arg_1.23, %region_0_15_constant_3
  %93 = zext i1 %compare.5 to i8
  %Arg_0.1 = getelementptr inbounds [8192 x [512 x float]], ptr %arg0, i32 0, i32 %91, i32 %86
  %Arg_0.14 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %94 = trunc i8 %93 to i1
  %95 = select i1 %94, float %Arg_0.14, float %region_0_15_constant_3
  store float %95, ptr %reduction_input_address, align 4
  %96 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %84
  call void @region_1_9__4(ptr %96, ptr %reduction_input_address, ptr %return_buffer)
  %97 = load float, ptr %return_buffer, align 4
  store float %97, ptr %96, align 4
  %98 = mul nuw nsw i32 %79, 1
  %99 = add nuw nsw i32 0, %98
  %100 = udiv i32 %99, 512
  %101 = mul nuw nsw i32 %81, 1
  %102 = add nuw nsw i32 0, %101
  %103 = mul nuw nsw i32 %82, 128
  %104 = add nuw nsw i32 %102, %103
  %105 = udiv i32 %104, 8192
  %Arg_1.25 = getelementptr inbounds float, ptr %arg1, i32 %77
  %Arg_1.26 = load float, ptr %Arg_1.25, align 4, !invariant.load !297
  %region_0_15_constant_37 = load float, ptr @111, align 4
  %compare.58 = fcmp ogt float %Arg_1.26, %region_0_15_constant_37
  %106 = zext i1 %compare.58 to i8
  %Arg_0.19 = getelementptr inbounds float, ptr %arg0, i32 %77
  %Arg_0.110 = load float, ptr %Arg_0.19, align 4, !invariant.load !297
  %107 = trunc i8 %106 to i1
  %108 = select i1 %107, float %Arg_0.110, float %region_0_15_constant_37
  %109 = mul nuw nsw i32 %79, 1
  %110 = add nuw nsw i32 0, %109
  %111 = udiv i32 %110, 512
  %112 = mul nuw nsw i32 %81, 1
  %113 = add nuw nsw i32 0, %112
  %114 = mul nuw nsw i32 %82, 128
  %115 = add nuw nsw i32 %113, %114
  %116 = udiv i32 %115, 8192
  %117 = getelementptr inbounds [8192 x [512 x float]], ptr %arg3, i32 0, i32 %115, i32 %110
  store float %108, ptr %117, align 4
  br label %x_in_tile-after

x_in_tile-true12:                                 ; preds = %x_in_tile-after
  %118 = mul nuw nsw i32 %32, 1
  %119 = add nuw nsw i32 0, %118
  %120 = mul nuw nsw i32 %31, 512
  %121 = add nuw nsw i32 %119, %120
  %122 = mul nuw nsw i32 %tile_origin.0, 65536
  %123 = add nuw nsw i32 %121, %122
  %124 = udiv i32 %123, 1
  %125 = urem i32 %124, 512
  %126 = udiv i32 %123, 512
  %127 = urem i32 %126, 128
  %128 = udiv i32 %123, 65536
  %129 = mul i32 %thread_id.x, 2
  %130 = sub i32 %x_loc11, %129
  %131 = mul nuw nsw i32 %125, 1
  %132 = add nuw nsw i32 0, %131
  %133 = udiv i32 %132, 512
  %134 = mul nuw nsw i32 %127, 1
  %135 = add nuw nsw i32 0, %134
  %136 = mul nuw nsw i32 %128, 128
  %137 = add nuw nsw i32 %135, %136
  %138 = udiv i32 %137, 8192
  %Arg_1.214 = getelementptr inbounds [8192 x [512 x float]], ptr %arg1, i32 0, i32 %137, i32 %132
  %Arg_1.215 = load float, ptr %Arg_1.214, align 4, !invariant.load !297
  %region_0_15_constant_316 = load float, ptr @111, align 4
  %compare.517 = fcmp ogt float %Arg_1.215, %region_0_15_constant_316
  %139 = zext i1 %compare.517 to i8
  %Arg_0.118 = getelementptr inbounds [8192 x [512 x float]], ptr %arg0, i32 0, i32 %137, i32 %132
  %Arg_0.119 = load float, ptr %Arg_0.118, align 4, !invariant.load !297
  %140 = trunc i8 %139 to i1
  %141 = select i1 %140, float %Arg_0.119, float %region_0_15_constant_316
  store float %141, ptr %reduction_input_address, align 4
  %142 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %130
  call void @region_1_9__4(ptr %142, ptr %reduction_input_address, ptr %return_buffer20)
  %143 = load float, ptr %return_buffer20, align 4
  store float %143, ptr %142, align 4
  %144 = mul nuw nsw i32 %125, 1
  %145 = add nuw nsw i32 0, %144
  %146 = udiv i32 %145, 512
  %147 = mul nuw nsw i32 %127, 1
  %148 = add nuw nsw i32 0, %147
  %149 = mul nuw nsw i32 %128, 128
  %150 = add nuw nsw i32 %148, %149
  %151 = udiv i32 %150, 8192
  %Arg_1.221 = getelementptr inbounds float, ptr %arg1, i32 %123
  %Arg_1.222 = load float, ptr %Arg_1.221, align 4, !invariant.load !297
  %region_0_15_constant_323 = load float, ptr @111, align 4
  %compare.524 = fcmp ogt float %Arg_1.222, %region_0_15_constant_323
  %152 = zext i1 %compare.524 to i8
  %Arg_0.125 = getelementptr inbounds float, ptr %arg0, i32 %123
  %Arg_0.126 = load float, ptr %Arg_0.125, align 4, !invariant.load !297
  %153 = trunc i8 %152 to i1
  %154 = select i1 %153, float %Arg_0.126, float %region_0_15_constant_323
  %155 = mul nuw nsw i32 %125, 1
  %156 = add nuw nsw i32 0, %155
  %157 = udiv i32 %156, 512
  %158 = mul nuw nsw i32 %127, 1
  %159 = add nuw nsw i32 0, %158
  %160 = mul nuw nsw i32 %128, 128
  %161 = add nuw nsw i32 %159, %160
  %162 = udiv i32 %161, 8192
  %163 = getelementptr inbounds [8192 x [512 x float]], ptr %arg3, i32 0, i32 %161, i32 %156
  store float %154, ptr %163, align 4
  br label %x_in_tile-after13

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %164 = mul i32 %thread_id.y, 2
  %165 = add i32 %tile_origin.1, %thread_id.x
  %166 = add i32 %tile_origin.2, %164
  %167 = add i32 %166, 0
  %168 = mul i32 %tile_origin.0, 512
  %169 = add i32 %168, %167
  %170 = udiv i32 %169, 1
  %171 = urem i32 %170, 512
  %172 = udiv i32 %169, 512
  %output_element_address = getelementptr inbounds [64 x [512 x float]], ptr %arg2, i32 0, i32 %172, i32 %171
  %output = load float, ptr %36, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

reduction_write_output-true59:                    ; preds = %reduction_write_output-after
  %173 = mul i32 %thread_id.y, 2
  %174 = add i32 %tile_origin.1, %thread_id.x
  %175 = add i32 %tile_origin.2, %173
  %176 = add i32 %175, 1
  %177 = mul i32 %tile_origin.0, 512
  %178 = add i32 %177, %176
  %179 = udiv i32 %178, 1
  %180 = urem i32 %179, 512
  %181 = udiv i32 %178, 512
  %output_element_address61 = getelementptr inbounds [64 x [512 x float]], ptr %arg2, i32 0, i32 %181, i32 %180
  %output62 = load float, ptr %55, align 4
  store float %output62, ptr %output_element_address61, align 4
  br label %reduction_write_output-after60
}

define internal void @region_1_9__4(ptr dereferenceable(4) %Arg_0.10.typed, ptr dereferenceable(4) %Arg_1.11.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.12.typed = alloca float, align 4
  %Arg_0.10 = load float, ptr %Arg_0.10.typed, align 4
  %Arg_1.11 = load float, ptr %Arg_1.11.typed, align 4
  %add.12 = fadd float %Arg_0.10, %Arg_1.11
  store float %add.12, ptr %add.12.typed, align 4
  %load_ret_value = load float, ptr %add.12.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_711(ptr noalias align 16 dereferenceable(4014080) %arg0, ptr noalias align 128 dereferenceable(4014080) %arg1, ptr noalias align 16 dereferenceable(4014080) %arg2, ptr noalias align 128 dereferenceable(4014080) %arg3, ptr noalias align 16 dereferenceable(4014080) %arg4, ptr noalias align 128 dereferenceable(4014080) %arg5) {
entry:
  %loop.invar_address = alloca i32, align 4
  store i32 0, ptr %loop.invar_address, align 4
  br label %loop.loop_header

loop.loop_header:                                 ; preds = %fusion_711.in_bounds-after, %entry
  %loop.indvar = load i32, ptr %loop.invar_address, align 4
  %0 = icmp uge i32 %loop.indvar, 1003520
  br i1 %0, label %loop.loop_exit, label %loop.loop_body

loop.loop_body:                                   ; preds = %loop.loop_header
  %invar.inc = add nuw nsw i32 %loop.indvar, 442368
  store i32 %invar.inc, ptr %loop.invar_address, align 4
  %1 = icmp eq i32 %loop.indvar, 0
  %2 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !379
  %3 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !361
  %4 = mul nuw nsw i32 %2, 128
  %linear_index = add nuw nsw i32 %4, %3
  %linear_index_in_range = icmp ult i32 %linear_index, 110592
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %linear_index_plus_base = add nuw nsw i32 %linear_index_base, %loop.indvar
  %5 = udiv i32 %linear_index_plus_base, 1
  %6 = urem i32 %5, 512
  %7 = udiv i32 %linear_index_plus_base, 512
  %linear_index1 = add nuw nsw i32 %linear_index_plus_base, 1
  %8 = udiv i32 %linear_index1, 1
  %9 = urem i32 %8, 512
  %10 = udiv i32 %linear_index1, 512
  %linear_index2 = add nuw nsw i32 %linear_index_plus_base, 2
  %11 = udiv i32 %linear_index2, 1
  %12 = urem i32 %11, 512
  %13 = udiv i32 %linear_index2, 512
  %linear_index3 = add nuw nsw i32 %linear_index_plus_base, 3
  %14 = udiv i32 %linear_index3, 1
  %15 = urem i32 %14, 512
  %16 = udiv i32 %linear_index3, 512
  %17 = icmp ult i32 %linear_index_plus_base, 1003520
  br i1 %17, label %fusion_711.in_bounds-true, label %fusion_711.in_bounds-after

fusion_711.in_bounds-after:                       ; preds = %fusion_711.in_bounds-true, %loop.loop_body
  br label %loop.loop_header, !llvm.loop !527

loop.loop_exit:                                   ; preds = %loop.loop_header
  ret void

fusion_711.in_bounds-true:                        ; preds = %loop.loop_body
  %18 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_plus_base
  %19 = load float, ptr %18, align 4, !invariant.load !297
  %region_0_16_constant_7 = load float, ptr @113, align 4
  %20 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_plus_base
  %21 = load float, ptr %20, align 4
  %multiply.9 = fmul float %region_0_16_constant_7, %21
  %subtract.10 = fsub float %19, %multiply.9
  %22 = insertvalue { float, float, float } undef, float %subtract.10, 0
  %23 = getelementptr inbounds float, ptr %arg2, i32 %linear_index_plus_base
  %24 = load float, ptr %23, align 4, !invariant.load !297
  %25 = getelementptr inbounds float, ptr %arg3, i32 %linear_index_plus_base
  %26 = load float, ptr %25, align 4
  %multiply.11 = fmul float %region_0_16_constant_7, %26
  %subtract.12 = fsub float %24, %multiply.11
  %27 = insertvalue { float, float, float } %22, float %subtract.12, 1
  %28 = getelementptr inbounds float, ptr %arg4, i32 %linear_index_plus_base
  %29 = load float, ptr %28, align 4, !invariant.load !297
  %30 = getelementptr inbounds float, ptr %arg5, i32 %linear_index_plus_base
  %31 = load float, ptr %30, align 4
  %multiply.13 = fmul float %region_0_16_constant_7, %31
  %subtract.14 = fsub float %29, %multiply.13
  %32 = insertvalue { float, float, float } %27, float %subtract.14, 2
  %33 = extractvalue { float, float, float } %32, 0
  %34 = getelementptr inbounds float, ptr %arg5, i32 %linear_index_plus_base
  store float %33, ptr %34, align 4
  %35 = extractvalue { float, float, float } %32, 1
  %36 = getelementptr inbounds float, ptr %arg3, i32 %linear_index_plus_base
  store float %35, ptr %36, align 4
  %37 = extractvalue { float, float, float } %32, 2
  %38 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_plus_base
  store float %37, ptr %38, align 4
  %39 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  %40 = load float, ptr %39, align 4, !invariant.load !297
  %region_0_16_constant_71 = load float, ptr @113, align 4
  %41 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  %42 = load float, ptr %41, align 4
  %multiply.92 = fmul float %region_0_16_constant_71, %42
  %subtract.103 = fsub float %40, %multiply.92
  %43 = insertvalue { float, float, float } undef, float %subtract.103, 0
  %44 = getelementptr inbounds float, ptr %arg2, i32 %linear_index1
  %45 = load float, ptr %44, align 4, !invariant.load !297
  %46 = getelementptr inbounds float, ptr %arg3, i32 %linear_index1
  %47 = load float, ptr %46, align 4
  %multiply.114 = fmul float %region_0_16_constant_71, %47
  %subtract.125 = fsub float %45, %multiply.114
  %48 = insertvalue { float, float, float } %43, float %subtract.125, 1
  %49 = getelementptr inbounds float, ptr %arg4, i32 %linear_index1
  %50 = load float, ptr %49, align 4, !invariant.load !297
  %51 = getelementptr inbounds float, ptr %arg5, i32 %linear_index1
  %52 = load float, ptr %51, align 4
  %multiply.136 = fmul float %region_0_16_constant_71, %52
  %subtract.147 = fsub float %50, %multiply.136
  %53 = insertvalue { float, float, float } %48, float %subtract.147, 2
  %54 = extractvalue { float, float, float } %53, 0
  %55 = getelementptr inbounds float, ptr %arg5, i32 %linear_index1
  store float %54, ptr %55, align 4
  %56 = extractvalue { float, float, float } %53, 1
  %57 = getelementptr inbounds float, ptr %arg3, i32 %linear_index1
  store float %56, ptr %57, align 4
  %58 = extractvalue { float, float, float } %53, 2
  %59 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  store float %58, ptr %59, align 4
  %60 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  %61 = load float, ptr %60, align 4, !invariant.load !297
  %region_0_16_constant_78 = load float, ptr @113, align 4
  %62 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  %63 = load float, ptr %62, align 4
  %multiply.99 = fmul float %region_0_16_constant_78, %63
  %subtract.1010 = fsub float %61, %multiply.99
  %64 = insertvalue { float, float, float } undef, float %subtract.1010, 0
  %65 = getelementptr inbounds float, ptr %arg2, i32 %linear_index2
  %66 = load float, ptr %65, align 4, !invariant.load !297
  %67 = getelementptr inbounds float, ptr %arg3, i32 %linear_index2
  %68 = load float, ptr %67, align 4
  %multiply.1111 = fmul float %region_0_16_constant_78, %68
  %subtract.1212 = fsub float %66, %multiply.1111
  %69 = insertvalue { float, float, float } %64, float %subtract.1212, 1
  %70 = getelementptr inbounds float, ptr %arg4, i32 %linear_index2
  %71 = load float, ptr %70, align 4, !invariant.load !297
  %72 = getelementptr inbounds float, ptr %arg5, i32 %linear_index2
  %73 = load float, ptr %72, align 4
  %multiply.1313 = fmul float %region_0_16_constant_78, %73
  %subtract.1414 = fsub float %71, %multiply.1313
  %74 = insertvalue { float, float, float } %69, float %subtract.1414, 2
  %75 = extractvalue { float, float, float } %74, 0
  %76 = getelementptr inbounds float, ptr %arg5, i32 %linear_index2
  store float %75, ptr %76, align 4
  %77 = extractvalue { float, float, float } %74, 1
  %78 = getelementptr inbounds float, ptr %arg3, i32 %linear_index2
  store float %77, ptr %78, align 4
  %79 = extractvalue { float, float, float } %74, 2
  %80 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  store float %79, ptr %80, align 4
  %81 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  %82 = load float, ptr %81, align 4, !invariant.load !297
  %region_0_16_constant_715 = load float, ptr @113, align 4
  %83 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  %84 = load float, ptr %83, align 4
  %multiply.916 = fmul float %region_0_16_constant_715, %84
  %subtract.1017 = fsub float %82, %multiply.916
  %85 = insertvalue { float, float, float } undef, float %subtract.1017, 0
  %86 = getelementptr inbounds float, ptr %arg2, i32 %linear_index3
  %87 = load float, ptr %86, align 4, !invariant.load !297
  %88 = getelementptr inbounds float, ptr %arg3, i32 %linear_index3
  %89 = load float, ptr %88, align 4
  %multiply.1118 = fmul float %region_0_16_constant_715, %89
  %subtract.1219 = fsub float %87, %multiply.1118
  %90 = insertvalue { float, float, float } %85, float %subtract.1219, 1
  %91 = getelementptr inbounds float, ptr %arg4, i32 %linear_index3
  %92 = load float, ptr %91, align 4, !invariant.load !297
  %93 = getelementptr inbounds float, ptr %arg5, i32 %linear_index3
  %94 = load float, ptr %93, align 4
  %multiply.1320 = fmul float %region_0_16_constant_715, %94
  %subtract.1421 = fsub float %92, %multiply.1320
  %95 = insertvalue { float, float, float } %90, float %subtract.1421, 2
  %96 = extractvalue { float, float, float } %95, 0
  %97 = getelementptr inbounds float, ptr %arg5, i32 %linear_index3
  store float %96, ptr %97, align 4
  %98 = extractvalue { float, float, float } %95, 1
  %99 = getelementptr inbounds float, ptr %arg3, i32 %linear_index3
  store float %98, ptr %99, align 4
  %100 = extractvalue { float, float, float } %95, 2
  %101 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  store float %100, ptr %101, align 4
  br label %fusion_711.in_bounds-after
}

define void @fusion_795(ptr noalias align 128 dereferenceable(131072) %arg0, ptr noalias align 128 dereferenceable(4) %arg1, ptr noalias align 128 dereferenceable(131072) %arg2, ptr noalias align 128 dereferenceable(131072) %arg3, ptr noalias align 128 dereferenceable(131072) %arg4, ptr noalias align 128 dereferenceable(131072) %arg5, ptr noalias align 128 dereferenceable(2048) %arg6, ptr noalias align 128 dereferenceable(2048) %arg7, ptr noalias align 128 dereferenceable(2048) %arg8, ptr noalias align 128 dereferenceable(2048) %arg9, ptr noalias align 128 dereferenceable(2048) %arg10) {
entry:
  %return_buffer357 = alloca float, align 4
  %result_from_other_lane355 = alloca float, align 4
  %return_buffer354 = alloca float, align 4
  %result_from_other_lane352 = alloca float, align 4
  %return_buffer351 = alloca float, align 4
  %result_from_other_lane349 = alloca float, align 4
  %return_buffer348 = alloca float, align 4
  %result_from_other_lane346 = alloca float, align 4
  %return_buffer345 = alloca float, align 4
  %result_from_other_lane343 = alloca float, align 4
  %return_buffer335 = alloca float, align 4
  %result_from_other_lane333 = alloca float, align 4
  %return_buffer332 = alloca float, align 4
  %result_from_other_lane330 = alloca float, align 4
  %return_buffer329 = alloca float, align 4
  %result_from_other_lane327 = alloca float, align 4
  %return_buffer326 = alloca float, align 4
  %result_from_other_lane324 = alloca float, align 4
  %return_buffer323 = alloca float, align 4
  %result_from_other_lane321 = alloca float, align 4
  %return_buffer317 = alloca float, align 4
  %return_buffer311 = alloca float, align 4
  %tile_loop.invar_address304 = alloca i32, align 4
  %y_in_tile.invar_address298 = alloca i32, align 4
  %partial_reduction_result284 = alloca float, i32 2, align 4
  %reduction_input_address283 = alloca float, align 4
  %return_buffer278 = alloca float, align 4
  %result_from_other_lane276 = alloca float, align 4
  %return_buffer275 = alloca float, align 4
  %result_from_other_lane273 = alloca float, align 4
  %return_buffer272 = alloca float, align 4
  %result_from_other_lane270 = alloca float, align 4
  %return_buffer269 = alloca float, align 4
  %result_from_other_lane267 = alloca float, align 4
  %return_buffer266 = alloca float, align 4
  %result_from_other_lane264 = alloca float, align 4
  %return_buffer256 = alloca float, align 4
  %result_from_other_lane254 = alloca float, align 4
  %return_buffer253 = alloca float, align 4
  %result_from_other_lane251 = alloca float, align 4
  %return_buffer250 = alloca float, align 4
  %result_from_other_lane248 = alloca float, align 4
  %return_buffer247 = alloca float, align 4
  %result_from_other_lane245 = alloca float, align 4
  %return_buffer244 = alloca float, align 4
  %result_from_other_lane242 = alloca float, align 4
  %return_buffer238 = alloca float, align 4
  %return_buffer232 = alloca float, align 4
  %tile_loop.invar_address225 = alloca i32, align 4
  %y_in_tile.invar_address219 = alloca i32, align 4
  %partial_reduction_result205 = alloca float, i32 2, align 4
  %reduction_input_address204 = alloca float, align 4
  %return_buffer199 = alloca float, align 4
  %result_from_other_lane197 = alloca float, align 4
  %return_buffer196 = alloca float, align 4
  %result_from_other_lane194 = alloca float, align 4
  %return_buffer193 = alloca float, align 4
  %result_from_other_lane191 = alloca float, align 4
  %return_buffer190 = alloca float, align 4
  %result_from_other_lane188 = alloca float, align 4
  %return_buffer187 = alloca float, align 4
  %result_from_other_lane185 = alloca float, align 4
  %return_buffer177 = alloca float, align 4
  %result_from_other_lane175 = alloca float, align 4
  %return_buffer174 = alloca float, align 4
  %result_from_other_lane172 = alloca float, align 4
  %return_buffer171 = alloca float, align 4
  %result_from_other_lane169 = alloca float, align 4
  %return_buffer168 = alloca float, align 4
  %result_from_other_lane166 = alloca float, align 4
  %return_buffer165 = alloca float, align 4
  %result_from_other_lane163 = alloca float, align 4
  %return_buffer159 = alloca float, align 4
  %return_buffer153 = alloca float, align 4
  %tile_loop.invar_address146 = alloca i32, align 4
  %y_in_tile.invar_address140 = alloca i32, align 4
  %partial_reduction_result126 = alloca float, i32 2, align 4
  %reduction_input_address125 = alloca float, align 4
  %return_buffer120 = alloca float, align 4
  %result_from_other_lane118 = alloca float, align 4
  %return_buffer117 = alloca float, align 4
  %result_from_other_lane115 = alloca float, align 4
  %return_buffer114 = alloca float, align 4
  %result_from_other_lane112 = alloca float, align 4
  %return_buffer111 = alloca float, align 4
  %result_from_other_lane109 = alloca float, align 4
  %return_buffer108 = alloca float, align 4
  %result_from_other_lane106 = alloca float, align 4
  %return_buffer98 = alloca float, align 4
  %result_from_other_lane96 = alloca float, align 4
  %return_buffer95 = alloca float, align 4
  %result_from_other_lane93 = alloca float, align 4
  %return_buffer92 = alloca float, align 4
  %result_from_other_lane90 = alloca float, align 4
  %return_buffer89 = alloca float, align 4
  %result_from_other_lane87 = alloca float, align 4
  %return_buffer86 = alloca float, align 4
  %result_from_other_lane84 = alloca float, align 4
  %return_buffer80 = alloca float, align 4
  %return_buffer74 = alloca float, align 4
  %tile_loop.invar_address67 = alloca i32, align 4
  %y_in_tile.invar_address61 = alloca i32, align 4
  %partial_reduction_result47 = alloca float, i32 2, align 4
  %reduction_input_address46 = alloca float, align 4
  %return_buffer41 = alloca float, align 4
  %result_from_other_lane39 = alloca float, align 4
  %return_buffer38 = alloca float, align 4
  %result_from_other_lane36 = alloca float, align 4
  %return_buffer35 = alloca float, align 4
  %result_from_other_lane33 = alloca float, align 4
  %return_buffer32 = alloca float, align 4
  %result_from_other_lane30 = alloca float, align 4
  %return_buffer29 = alloca float, align 4
  %result_from_other_lane27 = alloca float, align 4
  %return_buffer23 = alloca float, align 4
  %result_from_other_lane21 = alloca float, align 4
  %return_buffer20 = alloca float, align 4
  %result_from_other_lane18 = alloca float, align 4
  %return_buffer17 = alloca float, align 4
  %result_from_other_lane15 = alloca float, align 4
  %return_buffer14 = alloca float, align 4
  %result_from_other_lane12 = alloca float, align 4
  %return_buffer11 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer9 = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, i32 2, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !432
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after43, %entry
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %reduce-group-1-true, label %reduce-group-1-after

reduce-group-1-after:                             ; preds = %reduction_write_output-after122, %reduce-group-0-after
  %3 = icmp eq i32 %0, 2
  br i1 %3, label %reduce-group-2-true, label %reduce-group-2-after

reduce-group-2-after:                             ; preds = %reduction_write_output-after201, %reduce-group-1-after
  %4 = icmp eq i32 %0, 3
  br i1 %4, label %reduce-group-3-true, label %reduce-group-3-after

reduce-group-3-after:                             ; preds = %reduction_write_output-after280, %reduce-group-2-after
  %5 = icmp eq i32 %0, 4
  br i1 %5, label %reduce-group-4-true, label %reduce-group-4-after

reduce-group-4-after:                             ; preds = %reduction_write_output-after359, %reduce-group-3-after
  ret void

reduce-group-0-true:                              ; preds = %entry
  %Arg_1.2 = load float, ptr %arg1, align 4, !invariant.load !297
  %6 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %Arg_1.2, ptr %6, align 4
  %7 = getelementptr inbounds float, ptr %partial_reduction_result, i32 1
  store float %Arg_1.2, ptr %7, align 4
  %8 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %9 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !319
  %10 = urem i32 %8, 1024
  %11 = udiv i32 %8, 1024
  %12 = mul i32 %9, 1
  %13 = add i32 %12, %11
  %14 = icmp ult i32 %13, 8
  br i1 %14, label %15, label %early_return

15:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %10, 32
  %thread_id.y = udiv i32 %10, 32
  %lane_id = urem i32 %10, 32
  %16 = udiv i32 %13, 1
  %17 = urem i32 %16, 8
  %18 = udiv i32 %13, 8
  %19 = urem i32 %18, 1
  %20 = udiv i32 %13, 8
  %21 = icmp eq i32 %19, 0
  %tile_bound = select i1 %21, i32 64, i32 4096
  %22 = icmp eq i32 %17, 7
  %tile_bound1 = select i1 %22, i32 64, i32 64
  %tile_origin.0 = mul i32 %20, 1
  %tile_origin.1 = mul i32 %19, 4096
  %tile_origin.2 = mul i32 %17, 64
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %15
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %23 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %23, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %24 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %25 = mul i32 %thread_id.x, 2
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after6, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %26 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %26, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %27 = icmp eq i32 %tile_loop.indvar, 0
  %28 = mul i32 %tile_loop.indvar, 2
  %29 = add i32 %28, 0
  %x_loc = add i32 %29, %25
  %30 = add i32 %tile_origin.1, %y_in_tile.indvar
  %31 = add i32 %tile_origin.2, %x_loc
  %32 = icmp ult i32 %x_loc, %tile_bound1
  br i1 %32, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body
  %33 = mul i32 %tile_loop.indvar, 2
  %34 = add i32 %33, 1
  %x_loc4 = add i32 %34, %25
  %35 = add i32 %tile_origin.1, %y_in_tile.indvar
  %36 = add i32 %tile_origin.2, %x_loc4
  %37 = icmp ult i32 %x_loc4, %tile_bound1
  br i1 %37, label %x_in_tile-true5, label %x_in_tile-after6

x_in_tile-after6:                                 ; preds = %x_in_tile-true5, %x_in_tile-after
  br label %tile_loop.loop_header, !llvm.loop !528

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !529

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache157, i32 0, i32 %11, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %38 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %39 = load float, ptr %current_output, align 4
  store float %39, ptr %38, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache157, i32 0, i32 %11, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %40 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result10 = load float, ptr %40, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result10, i32 16, i32 31)
  store float %41, ptr %result_from_other_lane, align 4
  call void @region_1_7__3(ptr %40, ptr %result_from_other_lane, ptr %return_buffer11)
  %42 = load float, ptr %return_buffer11, align 4
  store float %42, ptr %40, align 4
  %partial_reduction_result13 = load float, ptr %40, align 4
  %43 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result13, i32 8, i32 31)
  store float %43, ptr %result_from_other_lane12, align 4
  call void @region_1_7__3(ptr %40, ptr %result_from_other_lane12, ptr %return_buffer14)
  %44 = load float, ptr %return_buffer14, align 4
  store float %44, ptr %40, align 4
  %partial_reduction_result16 = load float, ptr %40, align 4
  %45 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result16, i32 4, i32 31)
  store float %45, ptr %result_from_other_lane15, align 4
  call void @region_1_7__3(ptr %40, ptr %result_from_other_lane15, ptr %return_buffer17)
  %46 = load float, ptr %return_buffer17, align 4
  store float %46, ptr %40, align 4
  %partial_reduction_result19 = load float, ptr %40, align 4
  %47 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result19, i32 2, i32 31)
  store float %47, ptr %result_from_other_lane18, align 4
  call void @region_1_7__3(ptr %40, ptr %result_from_other_lane18, ptr %return_buffer20)
  %48 = load float, ptr %return_buffer20, align 4
  store float %48, ptr %40, align 4
  %partial_reduction_result22 = load float, ptr %40, align 4
  %49 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result22, i32 1, i32 31)
  store float %49, ptr %result_from_other_lane21, align 4
  call void @region_1_7__3(ptr %40, ptr %result_from_other_lane21, ptr %return_buffer23)
  %50 = load float, ptr %return_buffer23, align 4
  store float %50, ptr %40, align 4
  %51 = icmp ult i32 %thread_id.x, %tile_bound
  %52 = mul i32 %thread_id.y, 2
  %53 = icmp ult i32 %52, %tile_bound1
  %54 = and i1 %53, %51
  %55 = icmp eq i32 %lane_id, 0
  %56 = and i1 %54, %55
  br i1 %56, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  %shmem_output_address24 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache157, i32 0, i32 %11, i32 1, i32 %thread_id.x, i32 %thread_id.y
  %57 = addrspacecast ptr addrspace(3) %shmem_output_address24 to ptr
  %current_output25 = getelementptr inbounds float, ptr %partial_reduction_result, i32 1
  %58 = load float, ptr %current_output25, align 4
  store float %58, ptr %57, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr26 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache157, i32 0, i32 %11, i32 1, i32 %thread_id.y, i32 %thread_id.x
  %59 = addrspacecast ptr addrspace(3) %shmem_transposed_addr26 to ptr
  %partial_reduction_result28 = load float, ptr %59, align 4
  %60 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result28, i32 16, i32 31)
  store float %60, ptr %result_from_other_lane27, align 4
  call void @region_1_7__3(ptr %59, ptr %result_from_other_lane27, ptr %return_buffer29)
  %61 = load float, ptr %return_buffer29, align 4
  store float %61, ptr %59, align 4
  %partial_reduction_result31 = load float, ptr %59, align 4
  %62 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result31, i32 8, i32 31)
  store float %62, ptr %result_from_other_lane30, align 4
  call void @region_1_7__3(ptr %59, ptr %result_from_other_lane30, ptr %return_buffer32)
  %63 = load float, ptr %return_buffer32, align 4
  store float %63, ptr %59, align 4
  %partial_reduction_result34 = load float, ptr %59, align 4
  %64 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result34, i32 4, i32 31)
  store float %64, ptr %result_from_other_lane33, align 4
  call void @region_1_7__3(ptr %59, ptr %result_from_other_lane33, ptr %return_buffer35)
  %65 = load float, ptr %return_buffer35, align 4
  store float %65, ptr %59, align 4
  %partial_reduction_result37 = load float, ptr %59, align 4
  %66 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result37, i32 2, i32 31)
  store float %66, ptr %result_from_other_lane36, align 4
  call void @region_1_7__3(ptr %59, ptr %result_from_other_lane36, ptr %return_buffer38)
  %67 = load float, ptr %return_buffer38, align 4
  store float %67, ptr %59, align 4
  %partial_reduction_result40 = load float, ptr %59, align 4
  %68 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result40, i32 1, i32 31)
  store float %68, ptr %result_from_other_lane39, align 4
  call void @region_1_7__3(ptr %59, ptr %result_from_other_lane39, ptr %return_buffer41)
  %69 = load float, ptr %return_buffer41, align 4
  store float %69, ptr %59, align 4
  %70 = icmp ult i32 %thread_id.x, %tile_bound
  %71 = mul i32 %thread_id.y, 2
  %72 = icmp ult i32 %71, %tile_bound1
  %73 = and i1 %72, %70
  %74 = icmp eq i32 %lane_id, 0
  %75 = and i1 %73, %74
  br i1 %75, label %reduction_write_output-true42, label %reduction_write_output-after43

reduction_write_output-after43:                   ; preds = %reduction_write_output-true42, %reduction_write_output-after
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %76 = mul i32 %thread_id.x, 2
  %77 = sub i32 %x_loc, %76
  %Arg_0.1 = getelementptr inbounds [64 x [512 x float]], ptr %arg0, i32 0, i32 %30, i32 %31
  %Arg_0.13 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  store float %Arg_0.13, ptr %reduction_input_address, align 4
  %78 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %77
  call void @region_1_7__3(ptr %78, ptr %reduction_input_address, ptr %return_buffer)
  %79 = load float, ptr %return_buffer, align 4
  store float %79, ptr %78, align 4
  br label %x_in_tile-after

x_in_tile-true5:                                  ; preds = %x_in_tile-after
  %80 = mul i32 %thread_id.x, 2
  %81 = sub i32 %x_loc4, %80
  %Arg_0.17 = getelementptr inbounds [64 x [512 x float]], ptr %arg0, i32 0, i32 %35, i32 %36
  %Arg_0.18 = load float, ptr %Arg_0.17, align 4, !invariant.load !297
  store float %Arg_0.18, ptr %reduction_input_address, align 4
  %82 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %81
  call void @region_1_7__3(ptr %82, ptr %reduction_input_address, ptr %return_buffer9)
  %83 = load float, ptr %return_buffer9, align 4
  store float %83, ptr %82, align 4
  br label %x_in_tile-after6

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %84 = mul i32 %thread_id.y, 2
  %85 = add i32 %tile_origin.1, %thread_id.x
  %86 = add i32 %tile_origin.2, %84
  %87 = add i32 %86, 0
  %88 = mul i32 %tile_origin.0, 512
  %89 = add i32 %88, %87
  %90 = udiv i32 %89, 1
  %output_element_address = getelementptr inbounds [512 x float], ptr %arg6, i32 0, i32 %90
  %output = load float, ptr %40, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

reduction_write_output-true42:                    ; preds = %reduction_write_output-after
  %91 = mul i32 %thread_id.y, 2
  %92 = add i32 %tile_origin.1, %thread_id.x
  %93 = add i32 %tile_origin.2, %91
  %94 = add i32 %93, 1
  %95 = mul i32 %tile_origin.0, 512
  %96 = add i32 %95, %94
  %97 = udiv i32 %96, 1
  %output_element_address44 = getelementptr inbounds [512 x float], ptr %arg6, i32 0, i32 %97
  %output45 = load float, ptr %59, align 4
  store float %output45, ptr %output_element_address44, align 4
  br label %reduction_write_output-after43

reduce-group-1-true:                              ; preds = %reduce-group-0-after
  %Arg_1.248 = load float, ptr %arg1, align 4, !invariant.load !297
  %98 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 0
  store float %Arg_1.248, ptr %98, align 4
  %99 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 1
  store float %Arg_1.248, ptr %99, align 4
  %100 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %101 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !319
  %102 = urem i32 %100, 1024
  %103 = udiv i32 %100, 1024
  %104 = mul i32 %101, 1
  %105 = add i32 %104, %103
  %106 = icmp ult i32 %105, 8
  br i1 %106, label %107, label %early_return49

107:                                              ; preds = %reduce-group-1-true
  %thread_id.x50 = urem i32 %102, 32
  %thread_id.y51 = udiv i32 %102, 32
  %lane_id52 = urem i32 %102, 32
  %108 = udiv i32 %105, 1
  %109 = urem i32 %108, 8
  %110 = udiv i32 %105, 8
  %111 = urem i32 %110, 1
  %112 = udiv i32 %105, 8
  %113 = icmp eq i32 %111, 0
  %tile_bound53 = select i1 %113, i32 64, i32 4096
  %114 = icmp eq i32 %109, 7
  %tile_bound54 = select i1 %114, i32 64, i32 64
  %tile_origin.055 = mul i32 %112, 1
  %tile_origin.156 = mul i32 %111, 4096
  %tile_origin.257 = mul i32 %109, 64
  store i32 %thread_id.y51, ptr %y_in_tile.invar_address61, align 4
  br label %y_in_tile.loop_header59

y_in_tile.loop_header59:                          ; preds = %tile_loop.loop_exit64, %107
  %y_in_tile.indvar62 = load i32, ptr %y_in_tile.invar_address61, align 4
  %115 = icmp uge i32 %y_in_tile.indvar62, %tile_bound53
  br i1 %115, label %y_in_tile.loop_exit58, label %y_in_tile.loop_body60

y_in_tile.loop_body60:                            ; preds = %y_in_tile.loop_header59
  %invar.inc63 = add nuw nsw i32 %y_in_tile.indvar62, 32
  store i32 %invar.inc63, ptr %y_in_tile.invar_address61, align 4
  %116 = icmp eq i32 %y_in_tile.indvar62, %thread_id.y51
  %117 = mul i32 %thread_id.x50, 2
  store i32 0, ptr %tile_loop.invar_address67, align 4
  br label %tile_loop.loop_header65

tile_loop.loop_header65:                          ; preds = %x_in_tile-after77, %y_in_tile.loop_body60
  %tile_loop.indvar68 = load i32, ptr %tile_loop.invar_address67, align 4
  %118 = icmp uge i32 %tile_loop.indvar68, 1
  br i1 %118, label %tile_loop.loop_exit64, label %tile_loop.loop_body66

tile_loop.loop_body66:                            ; preds = %tile_loop.loop_header65
  %invar.inc69 = add nuw nsw i32 %tile_loop.indvar68, 1
  store i32 %invar.inc69, ptr %tile_loop.invar_address67, align 4
  %119 = icmp eq i32 %tile_loop.indvar68, 0
  %120 = mul i32 %tile_loop.indvar68, 2
  %121 = add i32 %120, 0
  %x_loc70 = add i32 %121, %117
  %122 = add i32 %tile_origin.156, %y_in_tile.indvar62
  %123 = add i32 %tile_origin.257, %x_loc70
  %124 = icmp ult i32 %x_loc70, %tile_bound54
  br i1 %124, label %x_in_tile-true71, label %x_in_tile-after72

x_in_tile-after72:                                ; preds = %x_in_tile-true71, %tile_loop.loop_body66
  %125 = mul i32 %tile_loop.indvar68, 2
  %126 = add i32 %125, 1
  %x_loc75 = add i32 %126, %117
  %127 = add i32 %tile_origin.156, %y_in_tile.indvar62
  %128 = add i32 %tile_origin.257, %x_loc75
  %129 = icmp ult i32 %x_loc75, %tile_bound54
  br i1 %129, label %x_in_tile-true76, label %x_in_tile-after77

x_in_tile-after77:                                ; preds = %x_in_tile-true76, %x_in_tile-after72
  br label %tile_loop.loop_header65, !llvm.loop !530

tile_loop.loop_exit64:                            ; preds = %tile_loop.loop_header65
  br label %y_in_tile.loop_header59, !llvm.loop !531

y_in_tile.loop_exit58:                            ; preds = %y_in_tile.loop_header59
  %shmem_output_address81 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache158, i32 0, i32 %103, i32 0, i32 %thread_id.x50, i32 %thread_id.y51
  %130 = addrspacecast ptr addrspace(3) %shmem_output_address81 to ptr
  %current_output82 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 0
  %131 = load float, ptr %current_output82, align 4
  store float %131, ptr %130, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr83 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache158, i32 0, i32 %103, i32 0, i32 %thread_id.y51, i32 %thread_id.x50
  %132 = addrspacecast ptr addrspace(3) %shmem_transposed_addr83 to ptr
  %partial_reduction_result85 = load float, ptr %132, align 4
  %133 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result85, i32 16, i32 31)
  store float %133, ptr %result_from_other_lane84, align 4
  call void @region_2_12__3(ptr %132, ptr %result_from_other_lane84, ptr %return_buffer86)
  %134 = load float, ptr %return_buffer86, align 4
  store float %134, ptr %132, align 4
  %partial_reduction_result88 = load float, ptr %132, align 4
  %135 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result88, i32 8, i32 31)
  store float %135, ptr %result_from_other_lane87, align 4
  call void @region_2_12__3(ptr %132, ptr %result_from_other_lane87, ptr %return_buffer89)
  %136 = load float, ptr %return_buffer89, align 4
  store float %136, ptr %132, align 4
  %partial_reduction_result91 = load float, ptr %132, align 4
  %137 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result91, i32 4, i32 31)
  store float %137, ptr %result_from_other_lane90, align 4
  call void @region_2_12__3(ptr %132, ptr %result_from_other_lane90, ptr %return_buffer92)
  %138 = load float, ptr %return_buffer92, align 4
  store float %138, ptr %132, align 4
  %partial_reduction_result94 = load float, ptr %132, align 4
  %139 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result94, i32 2, i32 31)
  store float %139, ptr %result_from_other_lane93, align 4
  call void @region_2_12__3(ptr %132, ptr %result_from_other_lane93, ptr %return_buffer95)
  %140 = load float, ptr %return_buffer95, align 4
  store float %140, ptr %132, align 4
  %partial_reduction_result97 = load float, ptr %132, align 4
  %141 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result97, i32 1, i32 31)
  store float %141, ptr %result_from_other_lane96, align 4
  call void @region_2_12__3(ptr %132, ptr %result_from_other_lane96, ptr %return_buffer98)
  %142 = load float, ptr %return_buffer98, align 4
  store float %142, ptr %132, align 4
  %143 = icmp ult i32 %thread_id.x50, %tile_bound53
  %144 = mul i32 %thread_id.y51, 2
  %145 = icmp ult i32 %144, %tile_bound54
  %146 = and i1 %145, %143
  %147 = icmp eq i32 %lane_id52, 0
  %148 = and i1 %146, %147
  br i1 %148, label %reduction_write_output-true99, label %reduction_write_output-after100

reduction_write_output-after100:                  ; preds = %reduction_write_output-true99, %y_in_tile.loop_exit58
  %shmem_output_address103 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache158, i32 0, i32 %103, i32 1, i32 %thread_id.x50, i32 %thread_id.y51
  %149 = addrspacecast ptr addrspace(3) %shmem_output_address103 to ptr
  %current_output104 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 1
  %150 = load float, ptr %current_output104, align 4
  store float %150, ptr %149, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr105 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache158, i32 0, i32 %103, i32 1, i32 %thread_id.y51, i32 %thread_id.x50
  %151 = addrspacecast ptr addrspace(3) %shmem_transposed_addr105 to ptr
  %partial_reduction_result107 = load float, ptr %151, align 4
  %152 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result107, i32 16, i32 31)
  store float %152, ptr %result_from_other_lane106, align 4
  call void @region_2_12__3(ptr %151, ptr %result_from_other_lane106, ptr %return_buffer108)
  %153 = load float, ptr %return_buffer108, align 4
  store float %153, ptr %151, align 4
  %partial_reduction_result110 = load float, ptr %151, align 4
  %154 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result110, i32 8, i32 31)
  store float %154, ptr %result_from_other_lane109, align 4
  call void @region_2_12__3(ptr %151, ptr %result_from_other_lane109, ptr %return_buffer111)
  %155 = load float, ptr %return_buffer111, align 4
  store float %155, ptr %151, align 4
  %partial_reduction_result113 = load float, ptr %151, align 4
  %156 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result113, i32 4, i32 31)
  store float %156, ptr %result_from_other_lane112, align 4
  call void @region_2_12__3(ptr %151, ptr %result_from_other_lane112, ptr %return_buffer114)
  %157 = load float, ptr %return_buffer114, align 4
  store float %157, ptr %151, align 4
  %partial_reduction_result116 = load float, ptr %151, align 4
  %158 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result116, i32 2, i32 31)
  store float %158, ptr %result_from_other_lane115, align 4
  call void @region_2_12__3(ptr %151, ptr %result_from_other_lane115, ptr %return_buffer117)
  %159 = load float, ptr %return_buffer117, align 4
  store float %159, ptr %151, align 4
  %partial_reduction_result119 = load float, ptr %151, align 4
  %160 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result119, i32 1, i32 31)
  store float %160, ptr %result_from_other_lane118, align 4
  call void @region_2_12__3(ptr %151, ptr %result_from_other_lane118, ptr %return_buffer120)
  %161 = load float, ptr %return_buffer120, align 4
  store float %161, ptr %151, align 4
  %162 = icmp ult i32 %thread_id.x50, %tile_bound53
  %163 = mul i32 %thread_id.y51, 2
  %164 = icmp ult i32 %163, %tile_bound54
  %165 = and i1 %164, %162
  %166 = icmp eq i32 %lane_id52, 0
  %167 = and i1 %165, %166
  br i1 %167, label %reduction_write_output-true121, label %reduction_write_output-after122

reduction_write_output-after122:                  ; preds = %reduction_write_output-true121, %reduction_write_output-after100
  br label %reduce-group-1-after

early_return49:                                   ; preds = %reduce-group-1-true
  ret void

x_in_tile-true71:                                 ; preds = %tile_loop.loop_body66
  %168 = mul i32 %thread_id.x50, 2
  %169 = sub i32 %x_loc70, %168
  %Arg_2.3 = getelementptr inbounds [64 x [512 x float]], ptr %arg2, i32 0, i32 %122, i32 %123
  %Arg_2.373 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  store float %Arg_2.373, ptr %reduction_input_address46, align 4
  %170 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 %169
  call void @region_2_12__3(ptr %170, ptr %reduction_input_address46, ptr %return_buffer74)
  %171 = load float, ptr %return_buffer74, align 4
  store float %171, ptr %170, align 4
  br label %x_in_tile-after72

x_in_tile-true76:                                 ; preds = %x_in_tile-after72
  %172 = mul i32 %thread_id.x50, 2
  %173 = sub i32 %x_loc75, %172
  %Arg_2.378 = getelementptr inbounds [64 x [512 x float]], ptr %arg2, i32 0, i32 %127, i32 %128
  %Arg_2.379 = load float, ptr %Arg_2.378, align 4, !invariant.load !297
  store float %Arg_2.379, ptr %reduction_input_address46, align 4
  %174 = getelementptr inbounds float, ptr %partial_reduction_result47, i32 %173
  call void @region_2_12__3(ptr %174, ptr %reduction_input_address46, ptr %return_buffer80)
  %175 = load float, ptr %return_buffer80, align 4
  store float %175, ptr %174, align 4
  br label %x_in_tile-after77

reduction_write_output-true99:                    ; preds = %y_in_tile.loop_exit58
  %176 = mul i32 %thread_id.y51, 2
  %177 = add i32 %tile_origin.156, %thread_id.x50
  %178 = add i32 %tile_origin.257, %176
  %179 = add i32 %178, 0
  %180 = mul i32 %tile_origin.055, 512
  %181 = add i32 %180, %179
  %182 = udiv i32 %181, 1
  %output_element_address101 = getelementptr inbounds [512 x float], ptr %arg7, i32 0, i32 %182
  %output102 = load float, ptr %132, align 4
  store float %output102, ptr %output_element_address101, align 4
  br label %reduction_write_output-after100

reduction_write_output-true121:                   ; preds = %reduction_write_output-after100
  %183 = mul i32 %thread_id.y51, 2
  %184 = add i32 %tile_origin.156, %thread_id.x50
  %185 = add i32 %tile_origin.257, %183
  %186 = add i32 %185, 1
  %187 = mul i32 %tile_origin.055, 512
  %188 = add i32 %187, %186
  %189 = udiv i32 %188, 1
  %output_element_address123 = getelementptr inbounds [512 x float], ptr %arg7, i32 0, i32 %189
  %output124 = load float, ptr %151, align 4
  store float %output124, ptr %output_element_address123, align 4
  br label %reduction_write_output-after122

reduce-group-2-true:                              ; preds = %reduce-group-1-after
  %Arg_1.2127 = load float, ptr %arg1, align 4, !invariant.load !297
  %190 = getelementptr inbounds float, ptr %partial_reduction_result126, i32 0
  store float %Arg_1.2127, ptr %190, align 4
  %191 = getelementptr inbounds float, ptr %partial_reduction_result126, i32 1
  store float %Arg_1.2127, ptr %191, align 4
  %192 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %193 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !319
  %194 = urem i32 %192, 1024
  %195 = udiv i32 %192, 1024
  %196 = mul i32 %193, 1
  %197 = add i32 %196, %195
  %198 = icmp ult i32 %197, 8
  br i1 %198, label %199, label %early_return128

199:                                              ; preds = %reduce-group-2-true
  %thread_id.x129 = urem i32 %194, 32
  %thread_id.y130 = udiv i32 %194, 32
  %lane_id131 = urem i32 %194, 32
  %200 = udiv i32 %197, 1
  %201 = urem i32 %200, 8
  %202 = udiv i32 %197, 8
  %203 = urem i32 %202, 1
  %204 = udiv i32 %197, 8
  %205 = icmp eq i32 %203, 0
  %tile_bound132 = select i1 %205, i32 64, i32 4096
  %206 = icmp eq i32 %201, 7
  %tile_bound133 = select i1 %206, i32 64, i32 64
  %tile_origin.0134 = mul i32 %204, 1
  %tile_origin.1135 = mul i32 %203, 4096
  %tile_origin.2136 = mul i32 %201, 64
  store i32 %thread_id.y130, ptr %y_in_tile.invar_address140, align 4
  br label %y_in_tile.loop_header138

y_in_tile.loop_header138:                         ; preds = %tile_loop.loop_exit143, %199
  %y_in_tile.indvar141 = load i32, ptr %y_in_tile.invar_address140, align 4
  %207 = icmp uge i32 %y_in_tile.indvar141, %tile_bound132
  br i1 %207, label %y_in_tile.loop_exit137, label %y_in_tile.loop_body139

y_in_tile.loop_body139:                           ; preds = %y_in_tile.loop_header138
  %invar.inc142 = add nuw nsw i32 %y_in_tile.indvar141, 32
  store i32 %invar.inc142, ptr %y_in_tile.invar_address140, align 4
  %208 = icmp eq i32 %y_in_tile.indvar141, %thread_id.y130
  %209 = mul i32 %thread_id.x129, 2
  store i32 0, ptr %tile_loop.invar_address146, align 4
  br label %tile_loop.loop_header144

tile_loop.loop_header144:                         ; preds = %x_in_tile-after156, %y_in_tile.loop_body139
  %tile_loop.indvar147 = load i32, ptr %tile_loop.invar_address146, align 4
  %210 = icmp uge i32 %tile_loop.indvar147, 1
  br i1 %210, label %tile_loop.loop_exit143, label %tile_loop.loop_body145

tile_loop.loop_body145:                           ; preds = %tile_loop.loop_header144
  %invar.inc148 = add nuw nsw i32 %tile_loop.indvar147, 1
  store i32 %invar.inc148, ptr %tile_loop.invar_address146, align 4
  %211 = icmp eq i32 %tile_loop.indvar147, 0
  %212 = mul i32 %tile_loop.indvar147, 2
  %213 = add i32 %212, 0
  %x_loc149 = add i32 %213, %209
  %214 = add i32 %tile_origin.1135, %y_in_tile.indvar141
  %215 = add i32 %tile_origin.2136, %x_loc149
  %216 = icmp ult i32 %x_loc149, %tile_bound133
  br i1 %216, label %x_in_tile-true150, label %x_in_tile-after151

x_in_tile-after151:                               ; preds = %x_in_tile-true150, %tile_loop.loop_body145
  %217 = mul i32 %tile_loop.indvar147, 2
  %218 = add i32 %217, 1
  %x_loc154 = add i32 %218, %209
  %219 = add i32 %tile_origin.1135, %y_in_tile.indvar141
  %220 = add i32 %tile_origin.2136, %x_loc154
  %221 = icmp ult i32 %x_loc154, %tile_bound133
  br i1 %221, label %x_in_tile-true155, label %x_in_tile-after156

x_in_tile-after156:                               ; preds = %x_in_tile-true155, %x_in_tile-after151
  br label %tile_loop.loop_header144, !llvm.loop !532

tile_loop.loop_exit143:                           ; preds = %tile_loop.loop_header144
  br label %y_in_tile.loop_header138, !llvm.loop !533

y_in_tile.loop_exit137:                           ; preds = %y_in_tile.loop_header138
  %shmem_output_address160 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache159, i32 0, i32 %195, i32 0, i32 %thread_id.x129, i32 %thread_id.y130
  %222 = addrspacecast ptr addrspace(3) %shmem_output_address160 to ptr
  %current_output161 = getelementptr inbounds float, ptr %partial_reduction_result126, i32 0
  %223 = load float, ptr %current_output161, align 4
  store float %223, ptr %222, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr162 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache159, i32 0, i32 %195, i32 0, i32 %thread_id.y130, i32 %thread_id.x129
  %224 = addrspacecast ptr addrspace(3) %shmem_transposed_addr162 to ptr
  %partial_reduction_result164 = load float, ptr %224, align 4
  %225 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result164, i32 16, i32 31)
  store float %225, ptr %result_from_other_lane163, align 4
  call void @region_3_17__3(ptr %224, ptr %result_from_other_lane163, ptr %return_buffer165)
  %226 = load float, ptr %return_buffer165, align 4
  store float %226, ptr %224, align 4
  %partial_reduction_result167 = load float, ptr %224, align 4
  %227 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result167, i32 8, i32 31)
  store float %227, ptr %result_from_other_lane166, align 4
  call void @region_3_17__3(ptr %224, ptr %result_from_other_lane166, ptr %return_buffer168)
  %228 = load float, ptr %return_buffer168, align 4
  store float %228, ptr %224, align 4
  %partial_reduction_result170 = load float, ptr %224, align 4
  %229 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result170, i32 4, i32 31)
  store float %229, ptr %result_from_other_lane169, align 4
  call void @region_3_17__3(ptr %224, ptr %result_from_other_lane169, ptr %return_buffer171)
  %230 = load float, ptr %return_buffer171, align 4
  store float %230, ptr %224, align 4
  %partial_reduction_result173 = load float, ptr %224, align 4
  %231 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result173, i32 2, i32 31)
  store float %231, ptr %result_from_other_lane172, align 4
  call void @region_3_17__3(ptr %224, ptr %result_from_other_lane172, ptr %return_buffer174)
  %232 = load float, ptr %return_buffer174, align 4
  store float %232, ptr %224, align 4
  %partial_reduction_result176 = load float, ptr %224, align 4
  %233 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result176, i32 1, i32 31)
  store float %233, ptr %result_from_other_lane175, align 4
  call void @region_3_17__3(ptr %224, ptr %result_from_other_lane175, ptr %return_buffer177)
  %234 = load float, ptr %return_buffer177, align 4
  store float %234, ptr %224, align 4
  %235 = icmp ult i32 %thread_id.x129, %tile_bound132
  %236 = mul i32 %thread_id.y130, 2
  %237 = icmp ult i32 %236, %tile_bound133
  %238 = and i1 %237, %235
  %239 = icmp eq i32 %lane_id131, 0
  %240 = and i1 %238, %239
  br i1 %240, label %reduction_write_output-true178, label %reduction_write_output-after179

reduction_write_output-after179:                  ; preds = %reduction_write_output-true178, %y_in_tile.loop_exit137
  %shmem_output_address182 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache159, i32 0, i32 %195, i32 1, i32 %thread_id.x129, i32 %thread_id.y130
  %241 = addrspacecast ptr addrspace(3) %shmem_output_address182 to ptr
  %current_output183 = getelementptr inbounds float, ptr %partial_reduction_result126, i32 1
  %242 = load float, ptr %current_output183, align 4
  store float %242, ptr %241, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr184 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache159, i32 0, i32 %195, i32 1, i32 %thread_id.y130, i32 %thread_id.x129
  %243 = addrspacecast ptr addrspace(3) %shmem_transposed_addr184 to ptr
  %partial_reduction_result186 = load float, ptr %243, align 4
  %244 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result186, i32 16, i32 31)
  store float %244, ptr %result_from_other_lane185, align 4
  call void @region_3_17__3(ptr %243, ptr %result_from_other_lane185, ptr %return_buffer187)
  %245 = load float, ptr %return_buffer187, align 4
  store float %245, ptr %243, align 4
  %partial_reduction_result189 = load float, ptr %243, align 4
  %246 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result189, i32 8, i32 31)
  store float %246, ptr %result_from_other_lane188, align 4
  call void @region_3_17__3(ptr %243, ptr %result_from_other_lane188, ptr %return_buffer190)
  %247 = load float, ptr %return_buffer190, align 4
  store float %247, ptr %243, align 4
  %partial_reduction_result192 = load float, ptr %243, align 4
  %248 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result192, i32 4, i32 31)
  store float %248, ptr %result_from_other_lane191, align 4
  call void @region_3_17__3(ptr %243, ptr %result_from_other_lane191, ptr %return_buffer193)
  %249 = load float, ptr %return_buffer193, align 4
  store float %249, ptr %243, align 4
  %partial_reduction_result195 = load float, ptr %243, align 4
  %250 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result195, i32 2, i32 31)
  store float %250, ptr %result_from_other_lane194, align 4
  call void @region_3_17__3(ptr %243, ptr %result_from_other_lane194, ptr %return_buffer196)
  %251 = load float, ptr %return_buffer196, align 4
  store float %251, ptr %243, align 4
  %partial_reduction_result198 = load float, ptr %243, align 4
  %252 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result198, i32 1, i32 31)
  store float %252, ptr %result_from_other_lane197, align 4
  call void @region_3_17__3(ptr %243, ptr %result_from_other_lane197, ptr %return_buffer199)
  %253 = load float, ptr %return_buffer199, align 4
  store float %253, ptr %243, align 4
  %254 = icmp ult i32 %thread_id.x129, %tile_bound132
  %255 = mul i32 %thread_id.y130, 2
  %256 = icmp ult i32 %255, %tile_bound133
  %257 = and i1 %256, %254
  %258 = icmp eq i32 %lane_id131, 0
  %259 = and i1 %257, %258
  br i1 %259, label %reduction_write_output-true200, label %reduction_write_output-after201

reduction_write_output-after201:                  ; preds = %reduction_write_output-true200, %reduction_write_output-after179
  br label %reduce-group-2-after

early_return128:                                  ; preds = %reduce-group-2-true
  ret void

x_in_tile-true150:                                ; preds = %tile_loop.loop_body145
  %260 = mul i32 %thread_id.x129, 2
  %261 = sub i32 %x_loc149, %260
  %Arg_3.4 = getelementptr inbounds [64 x [512 x float]], ptr %arg3, i32 0, i32 %214, i32 %215
  %Arg_3.4152 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  store float %Arg_3.4152, ptr %reduction_input_address125, align 4
  %262 = getelementptr inbounds float, ptr %partial_reduction_result126, i32 %261
  call void @region_3_17__3(ptr %262, ptr %reduction_input_address125, ptr %return_buffer153)
  %263 = load float, ptr %return_buffer153, align 4
  store float %263, ptr %262, align 4
  br label %x_in_tile-after151

x_in_tile-true155:                                ; preds = %x_in_tile-after151
  %264 = mul i32 %thread_id.x129, 2
  %265 = sub i32 %x_loc154, %264
  %Arg_3.4157 = getelementptr inbounds [64 x [512 x float]], ptr %arg3, i32 0, i32 %219, i32 %220
  %Arg_3.4158 = load float, ptr %Arg_3.4157, align 4, !invariant.load !297
  store float %Arg_3.4158, ptr %reduction_input_address125, align 4
  %266 = getelementptr inbounds float, ptr %partial_reduction_result126, i32 %265
  call void @region_3_17__3(ptr %266, ptr %reduction_input_address125, ptr %return_buffer159)
  %267 = load float, ptr %return_buffer159, align 4
  store float %267, ptr %266, align 4
  br label %x_in_tile-after156

reduction_write_output-true178:                   ; preds = %y_in_tile.loop_exit137
  %268 = mul i32 %thread_id.y130, 2
  %269 = add i32 %tile_origin.1135, %thread_id.x129
  %270 = add i32 %tile_origin.2136, %268
  %271 = add i32 %270, 0
  %272 = mul i32 %tile_origin.0134, 512
  %273 = add i32 %272, %271
  %274 = udiv i32 %273, 1
  %output_element_address180 = getelementptr inbounds [512 x float], ptr %arg8, i32 0, i32 %274
  %output181 = load float, ptr %224, align 4
  store float %output181, ptr %output_element_address180, align 4
  br label %reduction_write_output-after179

reduction_write_output-true200:                   ; preds = %reduction_write_output-after179
  %275 = mul i32 %thread_id.y130, 2
  %276 = add i32 %tile_origin.1135, %thread_id.x129
  %277 = add i32 %tile_origin.2136, %275
  %278 = add i32 %277, 1
  %279 = mul i32 %tile_origin.0134, 512
  %280 = add i32 %279, %278
  %281 = udiv i32 %280, 1
  %output_element_address202 = getelementptr inbounds [512 x float], ptr %arg8, i32 0, i32 %281
  %output203 = load float, ptr %243, align 4
  store float %output203, ptr %output_element_address202, align 4
  br label %reduction_write_output-after201

reduce-group-3-true:                              ; preds = %reduce-group-2-after
  %Arg_1.2206 = load float, ptr %arg1, align 4, !invariant.load !297
  %282 = getelementptr inbounds float, ptr %partial_reduction_result205, i32 0
  store float %Arg_1.2206, ptr %282, align 4
  %283 = getelementptr inbounds float, ptr %partial_reduction_result205, i32 1
  store float %Arg_1.2206, ptr %283, align 4
  %284 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %285 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !319
  %286 = urem i32 %284, 1024
  %287 = udiv i32 %284, 1024
  %288 = mul i32 %285, 1
  %289 = add i32 %288, %287
  %290 = icmp ult i32 %289, 8
  br i1 %290, label %291, label %early_return207

291:                                              ; preds = %reduce-group-3-true
  %thread_id.x208 = urem i32 %286, 32
  %thread_id.y209 = udiv i32 %286, 32
  %lane_id210 = urem i32 %286, 32
  %292 = udiv i32 %289, 1
  %293 = urem i32 %292, 8
  %294 = udiv i32 %289, 8
  %295 = urem i32 %294, 1
  %296 = udiv i32 %289, 8
  %297 = icmp eq i32 %295, 0
  %tile_bound211 = select i1 %297, i32 64, i32 4096
  %298 = icmp eq i32 %293, 7
  %tile_bound212 = select i1 %298, i32 64, i32 64
  %tile_origin.0213 = mul i32 %296, 1
  %tile_origin.1214 = mul i32 %295, 4096
  %tile_origin.2215 = mul i32 %293, 64
  store i32 %thread_id.y209, ptr %y_in_tile.invar_address219, align 4
  br label %y_in_tile.loop_header217

y_in_tile.loop_header217:                         ; preds = %tile_loop.loop_exit222, %291
  %y_in_tile.indvar220 = load i32, ptr %y_in_tile.invar_address219, align 4
  %299 = icmp uge i32 %y_in_tile.indvar220, %tile_bound211
  br i1 %299, label %y_in_tile.loop_exit216, label %y_in_tile.loop_body218

y_in_tile.loop_body218:                           ; preds = %y_in_tile.loop_header217
  %invar.inc221 = add nuw nsw i32 %y_in_tile.indvar220, 32
  store i32 %invar.inc221, ptr %y_in_tile.invar_address219, align 4
  %300 = icmp eq i32 %y_in_tile.indvar220, %thread_id.y209
  %301 = mul i32 %thread_id.x208, 2
  store i32 0, ptr %tile_loop.invar_address225, align 4
  br label %tile_loop.loop_header223

tile_loop.loop_header223:                         ; preds = %x_in_tile-after235, %y_in_tile.loop_body218
  %tile_loop.indvar226 = load i32, ptr %tile_loop.invar_address225, align 4
  %302 = icmp uge i32 %tile_loop.indvar226, 1
  br i1 %302, label %tile_loop.loop_exit222, label %tile_loop.loop_body224

tile_loop.loop_body224:                           ; preds = %tile_loop.loop_header223
  %invar.inc227 = add nuw nsw i32 %tile_loop.indvar226, 1
  store i32 %invar.inc227, ptr %tile_loop.invar_address225, align 4
  %303 = icmp eq i32 %tile_loop.indvar226, 0
  %304 = mul i32 %tile_loop.indvar226, 2
  %305 = add i32 %304, 0
  %x_loc228 = add i32 %305, %301
  %306 = add i32 %tile_origin.1214, %y_in_tile.indvar220
  %307 = add i32 %tile_origin.2215, %x_loc228
  %308 = icmp ult i32 %x_loc228, %tile_bound212
  br i1 %308, label %x_in_tile-true229, label %x_in_tile-after230

x_in_tile-after230:                               ; preds = %x_in_tile-true229, %tile_loop.loop_body224
  %309 = mul i32 %tile_loop.indvar226, 2
  %310 = add i32 %309, 1
  %x_loc233 = add i32 %310, %301
  %311 = add i32 %tile_origin.1214, %y_in_tile.indvar220
  %312 = add i32 %tile_origin.2215, %x_loc233
  %313 = icmp ult i32 %x_loc233, %tile_bound212
  br i1 %313, label %x_in_tile-true234, label %x_in_tile-after235

x_in_tile-after235:                               ; preds = %x_in_tile-true234, %x_in_tile-after230
  br label %tile_loop.loop_header223, !llvm.loop !534

tile_loop.loop_exit222:                           ; preds = %tile_loop.loop_header223
  br label %y_in_tile.loop_header217, !llvm.loop !535

y_in_tile.loop_exit216:                           ; preds = %y_in_tile.loop_header217
  %shmem_output_address239 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache160, i32 0, i32 %287, i32 0, i32 %thread_id.x208, i32 %thread_id.y209
  %314 = addrspacecast ptr addrspace(3) %shmem_output_address239 to ptr
  %current_output240 = getelementptr inbounds float, ptr %partial_reduction_result205, i32 0
  %315 = load float, ptr %current_output240, align 4
  store float %315, ptr %314, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr241 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache160, i32 0, i32 %287, i32 0, i32 %thread_id.y209, i32 %thread_id.x208
  %316 = addrspacecast ptr addrspace(3) %shmem_transposed_addr241 to ptr
  %partial_reduction_result243 = load float, ptr %316, align 4
  %317 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result243, i32 16, i32 31)
  store float %317, ptr %result_from_other_lane242, align 4
  call void @region_4_22__3(ptr %316, ptr %result_from_other_lane242, ptr %return_buffer244)
  %318 = load float, ptr %return_buffer244, align 4
  store float %318, ptr %316, align 4
  %partial_reduction_result246 = load float, ptr %316, align 4
  %319 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result246, i32 8, i32 31)
  store float %319, ptr %result_from_other_lane245, align 4
  call void @region_4_22__3(ptr %316, ptr %result_from_other_lane245, ptr %return_buffer247)
  %320 = load float, ptr %return_buffer247, align 4
  store float %320, ptr %316, align 4
  %partial_reduction_result249 = load float, ptr %316, align 4
  %321 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result249, i32 4, i32 31)
  store float %321, ptr %result_from_other_lane248, align 4
  call void @region_4_22__3(ptr %316, ptr %result_from_other_lane248, ptr %return_buffer250)
  %322 = load float, ptr %return_buffer250, align 4
  store float %322, ptr %316, align 4
  %partial_reduction_result252 = load float, ptr %316, align 4
  %323 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result252, i32 2, i32 31)
  store float %323, ptr %result_from_other_lane251, align 4
  call void @region_4_22__3(ptr %316, ptr %result_from_other_lane251, ptr %return_buffer253)
  %324 = load float, ptr %return_buffer253, align 4
  store float %324, ptr %316, align 4
  %partial_reduction_result255 = load float, ptr %316, align 4
  %325 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result255, i32 1, i32 31)
  store float %325, ptr %result_from_other_lane254, align 4
  call void @region_4_22__3(ptr %316, ptr %result_from_other_lane254, ptr %return_buffer256)
  %326 = load float, ptr %return_buffer256, align 4
  store float %326, ptr %316, align 4
  %327 = icmp ult i32 %thread_id.x208, %tile_bound211
  %328 = mul i32 %thread_id.y209, 2
  %329 = icmp ult i32 %328, %tile_bound212
  %330 = and i1 %329, %327
  %331 = icmp eq i32 %lane_id210, 0
  %332 = and i1 %330, %331
  br i1 %332, label %reduction_write_output-true257, label %reduction_write_output-after258

reduction_write_output-after258:                  ; preds = %reduction_write_output-true257, %y_in_tile.loop_exit216
  %shmem_output_address261 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache160, i32 0, i32 %287, i32 1, i32 %thread_id.x208, i32 %thread_id.y209
  %333 = addrspacecast ptr addrspace(3) %shmem_output_address261 to ptr
  %current_output262 = getelementptr inbounds float, ptr %partial_reduction_result205, i32 1
  %334 = load float, ptr %current_output262, align 4
  store float %334, ptr %333, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr263 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache160, i32 0, i32 %287, i32 1, i32 %thread_id.y209, i32 %thread_id.x208
  %335 = addrspacecast ptr addrspace(3) %shmem_transposed_addr263 to ptr
  %partial_reduction_result265 = load float, ptr %335, align 4
  %336 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result265, i32 16, i32 31)
  store float %336, ptr %result_from_other_lane264, align 4
  call void @region_4_22__3(ptr %335, ptr %result_from_other_lane264, ptr %return_buffer266)
  %337 = load float, ptr %return_buffer266, align 4
  store float %337, ptr %335, align 4
  %partial_reduction_result268 = load float, ptr %335, align 4
  %338 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result268, i32 8, i32 31)
  store float %338, ptr %result_from_other_lane267, align 4
  call void @region_4_22__3(ptr %335, ptr %result_from_other_lane267, ptr %return_buffer269)
  %339 = load float, ptr %return_buffer269, align 4
  store float %339, ptr %335, align 4
  %partial_reduction_result271 = load float, ptr %335, align 4
  %340 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result271, i32 4, i32 31)
  store float %340, ptr %result_from_other_lane270, align 4
  call void @region_4_22__3(ptr %335, ptr %result_from_other_lane270, ptr %return_buffer272)
  %341 = load float, ptr %return_buffer272, align 4
  store float %341, ptr %335, align 4
  %partial_reduction_result274 = load float, ptr %335, align 4
  %342 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result274, i32 2, i32 31)
  store float %342, ptr %result_from_other_lane273, align 4
  call void @region_4_22__3(ptr %335, ptr %result_from_other_lane273, ptr %return_buffer275)
  %343 = load float, ptr %return_buffer275, align 4
  store float %343, ptr %335, align 4
  %partial_reduction_result277 = load float, ptr %335, align 4
  %344 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result277, i32 1, i32 31)
  store float %344, ptr %result_from_other_lane276, align 4
  call void @region_4_22__3(ptr %335, ptr %result_from_other_lane276, ptr %return_buffer278)
  %345 = load float, ptr %return_buffer278, align 4
  store float %345, ptr %335, align 4
  %346 = icmp ult i32 %thread_id.x208, %tile_bound211
  %347 = mul i32 %thread_id.y209, 2
  %348 = icmp ult i32 %347, %tile_bound212
  %349 = and i1 %348, %346
  %350 = icmp eq i32 %lane_id210, 0
  %351 = and i1 %349, %350
  br i1 %351, label %reduction_write_output-true279, label %reduction_write_output-after280

reduction_write_output-after280:                  ; preds = %reduction_write_output-true279, %reduction_write_output-after258
  br label %reduce-group-3-after

early_return207:                                  ; preds = %reduce-group-3-true
  ret void

x_in_tile-true229:                                ; preds = %tile_loop.loop_body224
  %352 = mul i32 %thread_id.x208, 2
  %353 = sub i32 %x_loc228, %352
  %Arg_4.5 = getelementptr inbounds [64 x [512 x float]], ptr %arg4, i32 0, i32 %306, i32 %307
  %Arg_4.5231 = load float, ptr %Arg_4.5, align 4, !invariant.load !297
  store float %Arg_4.5231, ptr %reduction_input_address204, align 4
  %354 = getelementptr inbounds float, ptr %partial_reduction_result205, i32 %353
  call void @region_4_22__3(ptr %354, ptr %reduction_input_address204, ptr %return_buffer232)
  %355 = load float, ptr %return_buffer232, align 4
  store float %355, ptr %354, align 4
  br label %x_in_tile-after230

x_in_tile-true234:                                ; preds = %x_in_tile-after230
  %356 = mul i32 %thread_id.x208, 2
  %357 = sub i32 %x_loc233, %356
  %Arg_4.5236 = getelementptr inbounds [64 x [512 x float]], ptr %arg4, i32 0, i32 %311, i32 %312
  %Arg_4.5237 = load float, ptr %Arg_4.5236, align 4, !invariant.load !297
  store float %Arg_4.5237, ptr %reduction_input_address204, align 4
  %358 = getelementptr inbounds float, ptr %partial_reduction_result205, i32 %357
  call void @region_4_22__3(ptr %358, ptr %reduction_input_address204, ptr %return_buffer238)
  %359 = load float, ptr %return_buffer238, align 4
  store float %359, ptr %358, align 4
  br label %x_in_tile-after235

reduction_write_output-true257:                   ; preds = %y_in_tile.loop_exit216
  %360 = mul i32 %thread_id.y209, 2
  %361 = add i32 %tile_origin.1214, %thread_id.x208
  %362 = add i32 %tile_origin.2215, %360
  %363 = add i32 %362, 0
  %364 = mul i32 %tile_origin.0213, 512
  %365 = add i32 %364, %363
  %366 = udiv i32 %365, 1
  %output_element_address259 = getelementptr inbounds [512 x float], ptr %arg9, i32 0, i32 %366
  %output260 = load float, ptr %316, align 4
  store float %output260, ptr %output_element_address259, align 4
  br label %reduction_write_output-after258

reduction_write_output-true279:                   ; preds = %reduction_write_output-after258
  %367 = mul i32 %thread_id.y209, 2
  %368 = add i32 %tile_origin.1214, %thread_id.x208
  %369 = add i32 %tile_origin.2215, %367
  %370 = add i32 %369, 1
  %371 = mul i32 %tile_origin.0213, 512
  %372 = add i32 %371, %370
  %373 = udiv i32 %372, 1
  %output_element_address281 = getelementptr inbounds [512 x float], ptr %arg9, i32 0, i32 %373
  %output282 = load float, ptr %335, align 4
  store float %output282, ptr %output_element_address281, align 4
  br label %reduction_write_output-after280

reduce-group-4-true:                              ; preds = %reduce-group-3-after
  %Arg_1.2285 = load float, ptr %arg1, align 4, !invariant.load !297
  %374 = getelementptr inbounds float, ptr %partial_reduction_result284, i32 0
  store float %Arg_1.2285, ptr %374, align 4
  %375 = getelementptr inbounds float, ptr %partial_reduction_result284, i32 1
  store float %Arg_1.2285, ptr %375, align 4
  %376 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %377 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !319
  %378 = urem i32 %376, 1024
  %379 = udiv i32 %376, 1024
  %380 = mul i32 %377, 1
  %381 = add i32 %380, %379
  %382 = icmp ult i32 %381, 8
  br i1 %382, label %383, label %early_return286

383:                                              ; preds = %reduce-group-4-true
  %thread_id.x287 = urem i32 %378, 32
  %thread_id.y288 = udiv i32 %378, 32
  %lane_id289 = urem i32 %378, 32
  %384 = udiv i32 %381, 1
  %385 = urem i32 %384, 8
  %386 = udiv i32 %381, 8
  %387 = urem i32 %386, 1
  %388 = udiv i32 %381, 8
  %389 = icmp eq i32 %387, 0
  %tile_bound290 = select i1 %389, i32 64, i32 4096
  %390 = icmp eq i32 %385, 7
  %tile_bound291 = select i1 %390, i32 64, i32 64
  %tile_origin.0292 = mul i32 %388, 1
  %tile_origin.1293 = mul i32 %387, 4096
  %tile_origin.2294 = mul i32 %385, 64
  store i32 %thread_id.y288, ptr %y_in_tile.invar_address298, align 4
  br label %y_in_tile.loop_header296

y_in_tile.loop_header296:                         ; preds = %tile_loop.loop_exit301, %383
  %y_in_tile.indvar299 = load i32, ptr %y_in_tile.invar_address298, align 4
  %391 = icmp uge i32 %y_in_tile.indvar299, %tile_bound290
  br i1 %391, label %y_in_tile.loop_exit295, label %y_in_tile.loop_body297

y_in_tile.loop_body297:                           ; preds = %y_in_tile.loop_header296
  %invar.inc300 = add nuw nsw i32 %y_in_tile.indvar299, 32
  store i32 %invar.inc300, ptr %y_in_tile.invar_address298, align 4
  %392 = icmp eq i32 %y_in_tile.indvar299, %thread_id.y288
  %393 = mul i32 %thread_id.x287, 2
  store i32 0, ptr %tile_loop.invar_address304, align 4
  br label %tile_loop.loop_header302

tile_loop.loop_header302:                         ; preds = %x_in_tile-after314, %y_in_tile.loop_body297
  %tile_loop.indvar305 = load i32, ptr %tile_loop.invar_address304, align 4
  %394 = icmp uge i32 %tile_loop.indvar305, 1
  br i1 %394, label %tile_loop.loop_exit301, label %tile_loop.loop_body303

tile_loop.loop_body303:                           ; preds = %tile_loop.loop_header302
  %invar.inc306 = add nuw nsw i32 %tile_loop.indvar305, 1
  store i32 %invar.inc306, ptr %tile_loop.invar_address304, align 4
  %395 = icmp eq i32 %tile_loop.indvar305, 0
  %396 = mul i32 %tile_loop.indvar305, 2
  %397 = add i32 %396, 0
  %x_loc307 = add i32 %397, %393
  %398 = add i32 %tile_origin.1293, %y_in_tile.indvar299
  %399 = add i32 %tile_origin.2294, %x_loc307
  %400 = icmp ult i32 %x_loc307, %tile_bound291
  br i1 %400, label %x_in_tile-true308, label %x_in_tile-after309

x_in_tile-after309:                               ; preds = %x_in_tile-true308, %tile_loop.loop_body303
  %401 = mul i32 %tile_loop.indvar305, 2
  %402 = add i32 %401, 1
  %x_loc312 = add i32 %402, %393
  %403 = add i32 %tile_origin.1293, %y_in_tile.indvar299
  %404 = add i32 %tile_origin.2294, %x_loc312
  %405 = icmp ult i32 %x_loc312, %tile_bound291
  br i1 %405, label %x_in_tile-true313, label %x_in_tile-after314

x_in_tile-after314:                               ; preds = %x_in_tile-true313, %x_in_tile-after309
  br label %tile_loop.loop_header302, !llvm.loop !536

tile_loop.loop_exit301:                           ; preds = %tile_loop.loop_header302
  br label %y_in_tile.loop_header296, !llvm.loop !537

y_in_tile.loop_exit295:                           ; preds = %y_in_tile.loop_header296
  %shmem_output_address318 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache161, i32 0, i32 %379, i32 0, i32 %thread_id.x287, i32 %thread_id.y288
  %406 = addrspacecast ptr addrspace(3) %shmem_output_address318 to ptr
  %current_output319 = getelementptr inbounds float, ptr %partial_reduction_result284, i32 0
  %407 = load float, ptr %current_output319, align 4
  store float %407, ptr %406, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr320 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache161, i32 0, i32 %379, i32 0, i32 %thread_id.y288, i32 %thread_id.x287
  %408 = addrspacecast ptr addrspace(3) %shmem_transposed_addr320 to ptr
  %partial_reduction_result322 = load float, ptr %408, align 4
  %409 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result322, i32 16, i32 31)
  store float %409, ptr %result_from_other_lane321, align 4
  call void @region_5_27__3(ptr %408, ptr %result_from_other_lane321, ptr %return_buffer323)
  %410 = load float, ptr %return_buffer323, align 4
  store float %410, ptr %408, align 4
  %partial_reduction_result325 = load float, ptr %408, align 4
  %411 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result325, i32 8, i32 31)
  store float %411, ptr %result_from_other_lane324, align 4
  call void @region_5_27__3(ptr %408, ptr %result_from_other_lane324, ptr %return_buffer326)
  %412 = load float, ptr %return_buffer326, align 4
  store float %412, ptr %408, align 4
  %partial_reduction_result328 = load float, ptr %408, align 4
  %413 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result328, i32 4, i32 31)
  store float %413, ptr %result_from_other_lane327, align 4
  call void @region_5_27__3(ptr %408, ptr %result_from_other_lane327, ptr %return_buffer329)
  %414 = load float, ptr %return_buffer329, align 4
  store float %414, ptr %408, align 4
  %partial_reduction_result331 = load float, ptr %408, align 4
  %415 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result331, i32 2, i32 31)
  store float %415, ptr %result_from_other_lane330, align 4
  call void @region_5_27__3(ptr %408, ptr %result_from_other_lane330, ptr %return_buffer332)
  %416 = load float, ptr %return_buffer332, align 4
  store float %416, ptr %408, align 4
  %partial_reduction_result334 = load float, ptr %408, align 4
  %417 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result334, i32 1, i32 31)
  store float %417, ptr %result_from_other_lane333, align 4
  call void @region_5_27__3(ptr %408, ptr %result_from_other_lane333, ptr %return_buffer335)
  %418 = load float, ptr %return_buffer335, align 4
  store float %418, ptr %408, align 4
  %419 = icmp ult i32 %thread_id.x287, %tile_bound290
  %420 = mul i32 %thread_id.y288, 2
  %421 = icmp ult i32 %420, %tile_bound291
  %422 = and i1 %421, %419
  %423 = icmp eq i32 %lane_id289, 0
  %424 = and i1 %422, %423
  br i1 %424, label %reduction_write_output-true336, label %reduction_write_output-after337

reduction_write_output-after337:                  ; preds = %reduction_write_output-true336, %y_in_tile.loop_exit295
  %shmem_output_address340 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache161, i32 0, i32 %379, i32 1, i32 %thread_id.x287, i32 %thread_id.y288
  %425 = addrspacecast ptr addrspace(3) %shmem_output_address340 to ptr
  %current_output341 = getelementptr inbounds float, ptr %partial_reduction_result284, i32 1
  %426 = load float, ptr %current_output341, align 4
  store float %426, ptr %425, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr342 = getelementptr inbounds [1 x [2 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache161, i32 0, i32 %379, i32 1, i32 %thread_id.y288, i32 %thread_id.x287
  %427 = addrspacecast ptr addrspace(3) %shmem_transposed_addr342 to ptr
  %partial_reduction_result344 = load float, ptr %427, align 4
  %428 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result344, i32 16, i32 31)
  store float %428, ptr %result_from_other_lane343, align 4
  call void @region_5_27__3(ptr %427, ptr %result_from_other_lane343, ptr %return_buffer345)
  %429 = load float, ptr %return_buffer345, align 4
  store float %429, ptr %427, align 4
  %partial_reduction_result347 = load float, ptr %427, align 4
  %430 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result347, i32 8, i32 31)
  store float %430, ptr %result_from_other_lane346, align 4
  call void @region_5_27__3(ptr %427, ptr %result_from_other_lane346, ptr %return_buffer348)
  %431 = load float, ptr %return_buffer348, align 4
  store float %431, ptr %427, align 4
  %partial_reduction_result350 = load float, ptr %427, align 4
  %432 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result350, i32 4, i32 31)
  store float %432, ptr %result_from_other_lane349, align 4
  call void @region_5_27__3(ptr %427, ptr %result_from_other_lane349, ptr %return_buffer351)
  %433 = load float, ptr %return_buffer351, align 4
  store float %433, ptr %427, align 4
  %partial_reduction_result353 = load float, ptr %427, align 4
  %434 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result353, i32 2, i32 31)
  store float %434, ptr %result_from_other_lane352, align 4
  call void @region_5_27__3(ptr %427, ptr %result_from_other_lane352, ptr %return_buffer354)
  %435 = load float, ptr %return_buffer354, align 4
  store float %435, ptr %427, align 4
  %partial_reduction_result356 = load float, ptr %427, align 4
  %436 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result356, i32 1, i32 31)
  store float %436, ptr %result_from_other_lane355, align 4
  call void @region_5_27__3(ptr %427, ptr %result_from_other_lane355, ptr %return_buffer357)
  %437 = load float, ptr %return_buffer357, align 4
  store float %437, ptr %427, align 4
  %438 = icmp ult i32 %thread_id.x287, %tile_bound290
  %439 = mul i32 %thread_id.y288, 2
  %440 = icmp ult i32 %439, %tile_bound291
  %441 = and i1 %440, %438
  %442 = icmp eq i32 %lane_id289, 0
  %443 = and i1 %441, %442
  br i1 %443, label %reduction_write_output-true358, label %reduction_write_output-after359

reduction_write_output-after359:                  ; preds = %reduction_write_output-true358, %reduction_write_output-after337
  br label %reduce-group-4-after

early_return286:                                  ; preds = %reduce-group-4-true
  ret void

x_in_tile-true308:                                ; preds = %tile_loop.loop_body303
  %444 = mul i32 %thread_id.x287, 2
  %445 = sub i32 %x_loc307, %444
  %Arg_5.6 = getelementptr inbounds [64 x [512 x float]], ptr %arg5, i32 0, i32 %398, i32 %399
  %Arg_5.6310 = load float, ptr %Arg_5.6, align 4, !invariant.load !297
  store float %Arg_5.6310, ptr %reduction_input_address283, align 4
  %446 = getelementptr inbounds float, ptr %partial_reduction_result284, i32 %445
  call void @region_5_27__3(ptr %446, ptr %reduction_input_address283, ptr %return_buffer311)
  %447 = load float, ptr %return_buffer311, align 4
  store float %447, ptr %446, align 4
  br label %x_in_tile-after309

x_in_tile-true313:                                ; preds = %x_in_tile-after309
  %448 = mul i32 %thread_id.x287, 2
  %449 = sub i32 %x_loc312, %448
  %Arg_5.6315 = getelementptr inbounds [64 x [512 x float]], ptr %arg5, i32 0, i32 %403, i32 %404
  %Arg_5.6316 = load float, ptr %Arg_5.6315, align 4, !invariant.load !297
  store float %Arg_5.6316, ptr %reduction_input_address283, align 4
  %450 = getelementptr inbounds float, ptr %partial_reduction_result284, i32 %449
  call void @region_5_27__3(ptr %450, ptr %reduction_input_address283, ptr %return_buffer317)
  %451 = load float, ptr %return_buffer317, align 4
  store float %451, ptr %450, align 4
  br label %x_in_tile-after314

reduction_write_output-true336:                   ; preds = %y_in_tile.loop_exit295
  %452 = mul i32 %thread_id.y288, 2
  %453 = add i32 %tile_origin.1293, %thread_id.x287
  %454 = add i32 %tile_origin.2294, %452
  %455 = add i32 %454, 0
  %456 = mul i32 %tile_origin.0292, 512
  %457 = add i32 %456, %455
  %458 = udiv i32 %457, 1
  %output_element_address338 = getelementptr inbounds [512 x float], ptr %arg10, i32 0, i32 %458
  %output339 = load float, ptr %408, align 4
  store float %output339, ptr %output_element_address338, align 4
  br label %reduction_write_output-after337

reduction_write_output-true358:                   ; preds = %reduction_write_output-after337
  %459 = mul i32 %thread_id.y288, 2
  %460 = add i32 %tile_origin.1293, %thread_id.x287
  %461 = add i32 %tile_origin.2294, %459
  %462 = add i32 %461, 1
  %463 = mul i32 %tile_origin.0292, 512
  %464 = add i32 %463, %462
  %465 = udiv i32 %464, 1
  %output_element_address360 = getelementptr inbounds [512 x float], ptr %arg10, i32 0, i32 %465
  %output361 = load float, ptr %427, align 4
  store float %output361, ptr %output_element_address360, align 4
  br label %reduction_write_output-after359
}

define internal void @region_1_7__3(ptr dereferenceable(4) %Arg_0.8.typed, ptr dereferenceable(4) %Arg_1.9.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.10.typed = alloca float, align 4
  %Arg_0.8 = load float, ptr %Arg_0.8.typed, align 4
  %Arg_1.9 = load float, ptr %Arg_1.9.typed, align 4
  %add.10 = fadd float %Arg_0.8, %Arg_1.9
  store float %add.10, ptr %add.10.typed, align 4
  %load_ret_value = load float, ptr %add.10.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_12__3(ptr dereferenceable(4) %Arg_0.13.typed, ptr dereferenceable(4) %Arg_1.14.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.15.typed = alloca float, align 4
  %Arg_0.13 = load float, ptr %Arg_0.13.typed, align 4
  %Arg_1.14 = load float, ptr %Arg_1.14.typed, align 4
  %add.15 = fadd float %Arg_0.13, %Arg_1.14
  store float %add.15, ptr %add.15.typed, align 4
  %load_ret_value = load float, ptr %add.15.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_3_17__3(ptr dereferenceable(4) %Arg_0.18.typed, ptr dereferenceable(4) %Arg_1.19.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.20.typed = alloca float, align 4
  %Arg_0.18 = load float, ptr %Arg_0.18.typed, align 4
  %Arg_1.19 = load float, ptr %Arg_1.19.typed, align 4
  %add.20 = fadd float %Arg_0.18, %Arg_1.19
  store float %add.20, ptr %add.20.typed, align 4
  %load_ret_value = load float, ptr %add.20.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_4_22__3(ptr dereferenceable(4) %Arg_0.23.typed, ptr dereferenceable(4) %Arg_1.24.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.25.typed = alloca float, align 4
  %Arg_0.23 = load float, ptr %Arg_0.23.typed, align 4
  %Arg_1.24 = load float, ptr %Arg_1.24.typed, align 4
  %add.25 = fadd float %Arg_0.23, %Arg_1.24
  store float %add.25, ptr %add.25.typed, align 4
  %load_ret_value = load float, ptr %add.25.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_5_27__3(ptr dereferenceable(4) %Arg_0.28.typed, ptr dereferenceable(4) %Arg_1.29.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.30.typed = alloca float, align 4
  %Arg_0.28 = load float, ptr %Arg_0.28.typed, align 4
  %Arg_1.29 = load float, ptr %Arg_1.29.typed, align 4
  %add.30 = fadd float %Arg_0.28, %Arg_1.29
  store float %add.30, ptr %add.30.typed, align 4
  %load_ret_value = load float, ptr %add.30.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_709(ptr noalias align 16 dereferenceable(3031040) %arg0, ptr noalias align 128 dereferenceable(3031040) %arg1, ptr noalias align 16 dereferenceable(3031040) %arg2, ptr noalias align 128 dereferenceable(3031040) %arg3) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !538
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 189440
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 512
  %5 = udiv i32 %linear_index_base, 512
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 512
  %8 = udiv i32 %linear_index1, 512
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 512
  %11 = udiv i32 %linear_index2, 512
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 512
  %14 = udiv i32 %linear_index3, 512
  %15 = icmp ult i32 %linear_index_base, 757760
  br i1 %15, label %fusion_709.in_bounds-true, label %fusion_709.in_bounds-after

fusion_709.in_bounds-after:                       ; preds = %fusion_709.in_bounds-true, %entry
  ret void

fusion_709.in_bounds-true:                        ; preds = %entry
  %16 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_base
  %17 = load float, ptr %16, align 4, !invariant.load !297
  %region_0_12_constant_5 = load float, ptr @114, align 4
  %18 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  %19 = load float, ptr %18, align 4
  %multiply.7 = fmul float %region_0_12_constant_5, %19
  %subtract.8 = fsub float %17, %multiply.7
  %20 = insertvalue { float, float } undef, float %subtract.8, 0
  %21 = getelementptr inbounds float, ptr %arg2, i32 %linear_index_base
  %22 = load float, ptr %21, align 4, !invariant.load !297
  %23 = getelementptr inbounds float, ptr %arg3, i32 %linear_index_base
  %24 = load float, ptr %23, align 4
  %multiply.9 = fmul float %region_0_12_constant_5, %24
  %subtract.10 = fsub float %22, %multiply.9
  %25 = insertvalue { float, float } %20, float %subtract.10, 1
  %26 = extractvalue { float, float } %25, 0
  %27 = getelementptr inbounds float, ptr %arg3, i32 %linear_index_base
  store float %26, ptr %27, align 4
  %28 = extractvalue { float, float } %25, 1
  %29 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  store float %28, ptr %29, align 4
  %30 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  %31 = load float, ptr %30, align 4, !invariant.load !297
  %region_0_12_constant_51 = load float, ptr @114, align 4
  %32 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  %33 = load float, ptr %32, align 4
  %multiply.72 = fmul float %region_0_12_constant_51, %33
  %subtract.83 = fsub float %31, %multiply.72
  %34 = insertvalue { float, float } undef, float %subtract.83, 0
  %35 = getelementptr inbounds float, ptr %arg2, i32 %linear_index1
  %36 = load float, ptr %35, align 4, !invariant.load !297
  %37 = getelementptr inbounds float, ptr %arg3, i32 %linear_index1
  %38 = load float, ptr %37, align 4
  %multiply.94 = fmul float %region_0_12_constant_51, %38
  %subtract.105 = fsub float %36, %multiply.94
  %39 = insertvalue { float, float } %34, float %subtract.105, 1
  %40 = extractvalue { float, float } %39, 0
  %41 = getelementptr inbounds float, ptr %arg3, i32 %linear_index1
  store float %40, ptr %41, align 4
  %42 = extractvalue { float, float } %39, 1
  %43 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  store float %42, ptr %43, align 4
  %44 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  %45 = load float, ptr %44, align 4, !invariant.load !297
  %region_0_12_constant_56 = load float, ptr @114, align 4
  %46 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  %47 = load float, ptr %46, align 4
  %multiply.77 = fmul float %region_0_12_constant_56, %47
  %subtract.88 = fsub float %45, %multiply.77
  %48 = insertvalue { float, float } undef, float %subtract.88, 0
  %49 = getelementptr inbounds float, ptr %arg2, i32 %linear_index2
  %50 = load float, ptr %49, align 4, !invariant.load !297
  %51 = getelementptr inbounds float, ptr %arg3, i32 %linear_index2
  %52 = load float, ptr %51, align 4
  %multiply.99 = fmul float %region_0_12_constant_56, %52
  %subtract.1010 = fsub float %50, %multiply.99
  %53 = insertvalue { float, float } %48, float %subtract.1010, 1
  %54 = extractvalue { float, float } %53, 0
  %55 = getelementptr inbounds float, ptr %arg3, i32 %linear_index2
  store float %54, ptr %55, align 4
  %56 = extractvalue { float, float } %53, 1
  %57 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  store float %56, ptr %57, align 4
  %58 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  %59 = load float, ptr %58, align 4, !invariant.load !297
  %region_0_12_constant_511 = load float, ptr @114, align 4
  %60 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  %61 = load float, ptr %60, align 4
  %multiply.712 = fmul float %region_0_12_constant_511, %61
  %subtract.813 = fsub float %59, %multiply.712
  %62 = insertvalue { float, float } undef, float %subtract.813, 0
  %63 = getelementptr inbounds float, ptr %arg2, i32 %linear_index3
  %64 = load float, ptr %63, align 4, !invariant.load !297
  %65 = getelementptr inbounds float, ptr %arg3, i32 %linear_index3
  %66 = load float, ptr %65, align 4
  %multiply.914 = fmul float %region_0_12_constant_511, %66
  %subtract.1015 = fsub float %64, %multiply.914
  %67 = insertvalue { float, float } %62, float %subtract.1015, 1
  %68 = extractvalue { float, float } %67, 0
  %69 = getelementptr inbounds float, ptr %arg3, i32 %linear_index3
  store float %68, ptr %69, align 4
  %70 = extractvalue { float, float } %67, 1
  %71 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  store float %70, ptr %71, align 4
  br label %fusion_709.in_bounds-after
}

define void @copy_fusion_5(ptr noalias align 16 dereferenceable(2048) %arg0, ptr noalias align 128 dereferenceable(2048) %arg1, ptr noalias align 16 dereferenceable(2048) %arg2, ptr noalias align 128 dereferenceable(2048) %arg3, ptr noalias align 16 dereferenceable(2048) %arg4, ptr noalias align 128 dereferenceable(2048) %arg5, ptr noalias align 16 dereferenceable(2048) %arg6, ptr noalias align 128 dereferenceable(2048) %arg7, ptr noalias align 16 dereferenceable(2048) %arg8, ptr noalias align 128 dereferenceable(2048) %arg9, ptr noalias align 16 dereferenceable(524288) %arg10, ptr noalias align 128 dereferenceable(524288) %arg11, ptr noalias align 16 dereferenceable(524288) %arg12, ptr noalias align 128 dereferenceable(524288) %arg13, ptr noalias align 16 dereferenceable(524288) %arg14, ptr noalias align 128 dereferenceable(524288) %arg15, ptr noalias align 16 dereferenceable(524288) %arg16, ptr noalias align 128 dereferenceable(524288) %arg17, ptr noalias align 16 dereferenceable(524288) %arg18, ptr noalias align 128 dereferenceable(524288) %arg19, ptr noalias align 128 dereferenceable(524288) %arg20, ptr noalias align 128 dereferenceable(524288) %arg21, ptr noalias align 128 dereferenceable(524288) %arg22) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !539
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 132096
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = icmp ult i32 %linear_index, 131584
  br i1 %4, label %copy_fusion_5.in_bounds-true, label %copy_fusion_5.in_bounds-after

copy_fusion_5.in_bounds-after:                    ; preds = %slice9-after, %entry
  ret void

copy_fusion_5.in_bounds-true:                     ; preds = %entry
  br label %concatenate.pivot.512.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %5 = phi i32 [ 0, %concatenate.pivot.0. ]
  %6 = sub nsw i32 %3, %5
  %7 = getelementptr inbounds [512 x float], ptr %arg0, i32 0, i32 %6
  %8 = load float, ptr %7, align 4, !invariant.load !297
  %region_0_66_constant_21 = load float, ptr @116, align 4
  %9 = getelementptr inbounds [512 x float], ptr %arg1, i32 0, i32 %6
  %10 = load float, ptr %9, align 4
  %multiply.23 = fmul float %region_0_66_constant_21, %10
  %subtract.24 = fsub float %8, %multiply.23
  br label %concatenate.30.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.512.1
  %11 = phi i32 [ 512, %concatenate.pivot.512.1 ]
  %12 = sub nsw i32 %3, %11
  %13 = mul nuw nsw i32 %12, 1
  %14 = add nuw nsw i32 0, %13
  %15 = urem i32 %14, 256
  %16 = udiv i32 %14, 256
  %17 = udiv i32 %16, 512
  %18 = getelementptr inbounds [512 x [256 x float]], ptr %arg10, i32 0, i32 %16, i32 %15
  %19 = load float, ptr %18, align 4, !invariant.load !297
  %region_0_66_constant_25 = load float, ptr @115, align 4
  %20 = getelementptr inbounds [512 x [256 x float]], ptr %arg11, i32 0, i32 %16, i32 %15
  %21 = load float, ptr %20, align 4, !invariant.load !297
  %multiply.27 = fmul float %region_0_66_constant_25, %21
  %subtract.28 = fsub float %19, %multiply.27
  br label %concatenate.30.merge

concatenate.pivot.512.:                           ; preds = %copy_fusion_5.in_bounds-true
  %22 = icmp ult i32 %3, 512
  br i1 %22, label %concatenate.pivot.0., label %concatenate.pivot.512.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.512.
  br label %concat_index_from_operand_id0

concatenate.pivot.512.1:                          ; preds = %concatenate.pivot.512.
  br label %concat_index_from_operand_id1

concatenate.30.merge:                             ; preds = %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %23 = phi float [ %subtract.24, %concat_index_from_operand_id0 ], [ %subtract.28, %concat_index_from_operand_id1 ]
  br label %concatenate.pivot.512.6

concat_index_from_operand_id02:                   ; preds = %concatenate.pivot.0.7
  %24 = phi i32 [ 0, %concatenate.pivot.0.7 ]
  %25 = sub nsw i32 %3, %24
  %26 = getelementptr inbounds [512 x float], ptr %arg2, i32 0, i32 %25
  %27 = load float, ptr %26, align 4, !invariant.load !297
  %region_0_66_constant_213 = load float, ptr @116, align 4
  %28 = getelementptr inbounds [512 x float], ptr %arg3, i32 0, i32 %25
  %29 = load float, ptr %28, align 4
  %multiply.32 = fmul float %region_0_66_constant_213, %29
  %subtract.33 = fsub float %27, %multiply.32
  br label %concatenate.37.merge

concat_index_from_operand_id14:                   ; preds = %concatenate.pivot.512.8
  %30 = phi i32 [ 512, %concatenate.pivot.512.8 ]
  %31 = sub nsw i32 %3, %30
  %32 = mul nuw nsw i32 %31, 1
  %33 = add nuw nsw i32 0, %32
  %34 = urem i32 %33, 256
  %35 = udiv i32 %33, 256
  %36 = udiv i32 %35, 512
  %37 = getelementptr inbounds [512 x [256 x float]], ptr %arg12, i32 0, i32 %35, i32 %34
  %38 = load float, ptr %37, align 4, !invariant.load !297
  %region_0_66_constant_255 = load float, ptr @115, align 4
  %39 = getelementptr inbounds [512 x [256 x float]], ptr %arg13, i32 0, i32 %35, i32 %34
  %40 = load float, ptr %39, align 4, !invariant.load !297
  %multiply.34 = fmul float %region_0_66_constant_255, %40
  %subtract.35 = fsub float %38, %multiply.34
  br label %concatenate.37.merge

concatenate.pivot.512.6:                          ; preds = %concatenate.30.merge
  %41 = icmp ult i32 %3, 512
  br i1 %41, label %concatenate.pivot.0.7, label %concatenate.pivot.512.8

concatenate.pivot.0.7:                            ; preds = %concatenate.pivot.512.6
  br label %concat_index_from_operand_id02

concatenate.pivot.512.8:                          ; preds = %concatenate.pivot.512.6
  br label %concat_index_from_operand_id14

concatenate.37.merge:                             ; preds = %concat_index_from_operand_id14, %concat_index_from_operand_id02
  %42 = phi float [ %subtract.33, %concat_index_from_operand_id02 ], [ %subtract.35, %concat_index_from_operand_id14 ]
  br label %concatenate.pivot.512.13

concat_index_from_operand_id09:                   ; preds = %concatenate.pivot.0.14
  %43 = phi i32 [ 0, %concatenate.pivot.0.14 ]
  %44 = sub nsw i32 %3, %43
  %45 = getelementptr inbounds [512 x float], ptr %arg4, i32 0, i32 %44
  %46 = load float, ptr %45, align 4, !invariant.load !297
  %region_0_66_constant_2110 = load float, ptr @116, align 4
  %47 = getelementptr inbounds [512 x float], ptr %arg5, i32 0, i32 %44
  %48 = load float, ptr %47, align 4
  %multiply.39 = fmul float %region_0_66_constant_2110, %48
  %subtract.40 = fsub float %46, %multiply.39
  br label %concatenate.44.merge

concat_index_from_operand_id111:                  ; preds = %concatenate.pivot.512.15
  %49 = phi i32 [ 512, %concatenate.pivot.512.15 ]
  %50 = sub nsw i32 %3, %49
  %51 = mul nuw nsw i32 %50, 1
  %52 = add nuw nsw i32 0, %51
  %53 = urem i32 %52, 256
  %54 = udiv i32 %52, 256
  %55 = udiv i32 %54, 512
  %56 = getelementptr inbounds [512 x [256 x float]], ptr %arg14, i32 0, i32 %54, i32 %53
  %57 = load float, ptr %56, align 4, !invariant.load !297
  %region_0_66_constant_2512 = load float, ptr @115, align 4
  %58 = getelementptr inbounds [512 x [256 x float]], ptr %arg15, i32 0, i32 %54, i32 %53
  %59 = load float, ptr %58, align 4, !invariant.load !297
  %multiply.41 = fmul float %region_0_66_constant_2512, %59
  %subtract.42 = fsub float %57, %multiply.41
  br label %concatenate.44.merge

concatenate.pivot.512.13:                         ; preds = %concatenate.37.merge
  %60 = icmp ult i32 %3, 512
  br i1 %60, label %concatenate.pivot.0.14, label %concatenate.pivot.512.15

concatenate.pivot.0.14:                           ; preds = %concatenate.pivot.512.13
  br label %concat_index_from_operand_id09

concatenate.pivot.512.15:                         ; preds = %concatenate.pivot.512.13
  br label %concat_index_from_operand_id111

concatenate.44.merge:                             ; preds = %concat_index_from_operand_id111, %concat_index_from_operand_id09
  %61 = phi float [ %subtract.40, %concat_index_from_operand_id09 ], [ %subtract.42, %concat_index_from_operand_id111 ]
  br label %concatenate.pivot.512.20

concat_index_from_operand_id016:                  ; preds = %concatenate.pivot.0.21
  %62 = phi i32 [ 0, %concatenate.pivot.0.21 ]
  %63 = sub nsw i32 %3, %62
  %64 = getelementptr inbounds [512 x float], ptr %arg6, i32 0, i32 %63
  %65 = load float, ptr %64, align 4, !invariant.load !297
  %region_0_66_constant_2117 = load float, ptr @116, align 4
  %66 = getelementptr inbounds [512 x float], ptr %arg7, i32 0, i32 %63
  %67 = load float, ptr %66, align 4
  %multiply.46 = fmul float %region_0_66_constant_2117, %67
  %subtract.47 = fsub float %65, %multiply.46
  br label %concatenate.51.merge

concat_index_from_operand_id118:                  ; preds = %concatenate.pivot.512.22
  %68 = phi i32 [ 512, %concatenate.pivot.512.22 ]
  %69 = sub nsw i32 %3, %68
  %70 = mul nuw nsw i32 %69, 1
  %71 = add nuw nsw i32 0, %70
  %72 = urem i32 %71, 256
  %73 = udiv i32 %71, 256
  %74 = udiv i32 %73, 512
  %75 = getelementptr inbounds [512 x [256 x float]], ptr %arg16, i32 0, i32 %73, i32 %72
  %76 = load float, ptr %75, align 4, !invariant.load !297
  %region_0_66_constant_2519 = load float, ptr @115, align 4
  %77 = getelementptr inbounds [512 x [256 x float]], ptr %arg17, i32 0, i32 %73, i32 %72
  %78 = load float, ptr %77, align 4
  %multiply.48 = fmul float %region_0_66_constant_2519, %78
  %subtract.49 = fsub float %76, %multiply.48
  br label %concatenate.51.merge

concatenate.pivot.512.20:                         ; preds = %concatenate.44.merge
  %79 = icmp ult i32 %3, 512
  br i1 %79, label %concatenate.pivot.0.21, label %concatenate.pivot.512.22

concatenate.pivot.0.21:                           ; preds = %concatenate.pivot.512.20
  br label %concat_index_from_operand_id016

concatenate.pivot.512.22:                         ; preds = %concatenate.pivot.512.20
  br label %concat_index_from_operand_id118

concatenate.51.merge:                             ; preds = %concat_index_from_operand_id118, %concat_index_from_operand_id016
  %80 = phi float [ %subtract.47, %concat_index_from_operand_id016 ], [ %subtract.49, %concat_index_from_operand_id118 ]
  br label %concatenate.pivot.512.27

concat_index_from_operand_id023:                  ; preds = %concatenate.pivot.0.28
  %81 = phi i32 [ 0, %concatenate.pivot.0.28 ]
  %82 = sub nsw i32 %3, %81
  %83 = getelementptr inbounds [512 x float], ptr %arg8, i32 0, i32 %82
  %84 = load float, ptr %83, align 4, !invariant.load !297
  %region_0_66_constant_2124 = load float, ptr @116, align 4
  %85 = getelementptr inbounds [512 x float], ptr %arg9, i32 0, i32 %82
  %86 = load float, ptr %85, align 4
  %multiply.53 = fmul float %region_0_66_constant_2124, %86
  %subtract.54 = fsub float %84, %multiply.53
  br label %concatenate.58.merge

concat_index_from_operand_id125:                  ; preds = %concatenate.pivot.512.29
  %87 = phi i32 [ 512, %concatenate.pivot.512.29 ]
  %88 = sub nsw i32 %3, %87
  %89 = mul nuw nsw i32 %88, 1
  %90 = add nuw nsw i32 0, %89
  %91 = urem i32 %90, 256
  %92 = udiv i32 %90, 256
  %93 = udiv i32 %92, 512
  %94 = getelementptr inbounds [512 x [256 x float]], ptr %arg18, i32 0, i32 %92, i32 %91
  %95 = load float, ptr %94, align 4, !invariant.load !297
  %region_0_66_constant_2526 = load float, ptr @115, align 4
  %96 = getelementptr inbounds [512 x [256 x float]], ptr %arg19, i32 0, i32 %92, i32 %91
  %97 = load float, ptr %96, align 4
  %multiply.55 = fmul float %region_0_66_constant_2526, %97
  %subtract.56 = fsub float %95, %multiply.55
  br label %concatenate.58.merge

concatenate.pivot.512.27:                         ; preds = %concatenate.51.merge
  %98 = icmp ult i32 %3, 512
  br i1 %98, label %concatenate.pivot.0.28, label %concatenate.pivot.512.29

concatenate.pivot.0.28:                           ; preds = %concatenate.pivot.512.27
  br label %concat_index_from_operand_id023

concatenate.pivot.512.29:                         ; preds = %concatenate.pivot.512.27
  br label %concat_index_from_operand_id125

concatenate.58.merge:                             ; preds = %concat_index_from_operand_id125, %concat_index_from_operand_id023
  %99 = phi float [ %subtract.54, %concat_index_from_operand_id023 ], [ %subtract.56, %concat_index_from_operand_id125 ]
  br label %concatenate.pivot.512.39

concat_index_from_operand_id031:                  ; preds = %concatenate.pivot.0.40
  %100 = phi i32 [ 0, %concatenate.pivot.0.40 ]
  %101 = sub nsw i32 %3, %100
  %102 = getelementptr inbounds [512 x float], ptr %arg0, i32 0, i32 %101
  %103 = load float, ptr %102, align 4, !invariant.load !297
  %region_0_66_constant_2132 = load float, ptr @116, align 4
  %104 = getelementptr inbounds [512 x float], ptr %arg1, i32 0, i32 %101
  %105 = load float, ptr %104, align 4
  %multiply.2333 = fmul float %region_0_66_constant_2132, %105
  %subtract.2434 = fsub float %103, %multiply.2333
  br label %concatenate.30.merge30

concat_index_from_operand_id135:                  ; preds = %concatenate.pivot.512.41
  %106 = phi i32 [ 512, %concatenate.pivot.512.41 ]
  %107 = sub nsw i32 %3, %106
  %108 = mul nuw nsw i32 %107, 1
  %109 = add nuw nsw i32 0, %108
  %110 = urem i32 %109, 256
  %111 = udiv i32 %109, 256
  %112 = udiv i32 %111, 512
  %113 = getelementptr inbounds [512 x [256 x float]], ptr %arg10, i32 0, i32 %111, i32 %110
  %114 = load float, ptr %113, align 4, !invariant.load !297
  %region_0_66_constant_2536 = load float, ptr @115, align 4
  %115 = getelementptr inbounds [512 x [256 x float]], ptr %arg11, i32 0, i32 %111, i32 %110
  %116 = load float, ptr %115, align 4, !invariant.load !297
  %multiply.2737 = fmul float %region_0_66_constant_2536, %116
  %subtract.2838 = fsub float %114, %multiply.2737
  br label %concatenate.30.merge30

concatenate.pivot.512.39:                         ; preds = %concatenate.58.merge
  %117 = icmp ult i32 %3, 512
  br i1 %117, label %concatenate.pivot.0.40, label %concatenate.pivot.512.41

concatenate.pivot.0.40:                           ; preds = %concatenate.pivot.512.39
  br label %concat_index_from_operand_id031

concatenate.pivot.512.41:                         ; preds = %concatenate.pivot.512.39
  br label %concat_index_from_operand_id135

concatenate.30.merge30:                           ; preds = %concat_index_from_operand_id135, %concat_index_from_operand_id031
  %118 = phi float [ %subtract.2434, %concat_index_from_operand_id031 ], [ %subtract.2838, %concat_index_from_operand_id135 ]
  br label %concatenate.pivot.512.51

concat_index_from_operand_id043:                  ; preds = %concatenate.pivot.0.52
  %119 = phi i32 [ 0, %concatenate.pivot.0.52 ]
  %120 = sub nsw i32 %3, %119
  %121 = getelementptr inbounds [512 x float], ptr %arg2, i32 0, i32 %120
  %122 = load float, ptr %121, align 4, !invariant.load !297
  %region_0_66_constant_2144 = load float, ptr @116, align 4
  %123 = getelementptr inbounds [512 x float], ptr %arg3, i32 0, i32 %120
  %124 = load float, ptr %123, align 4
  %multiply.3245 = fmul float %region_0_66_constant_2144, %124
  %subtract.3346 = fsub float %122, %multiply.3245
  br label %concatenate.37.merge42

concat_index_from_operand_id147:                  ; preds = %concatenate.pivot.512.53
  %125 = phi i32 [ 512, %concatenate.pivot.512.53 ]
  %126 = sub nsw i32 %3, %125
  %127 = mul nuw nsw i32 %126, 1
  %128 = add nuw nsw i32 0, %127
  %129 = urem i32 %128, 256
  %130 = udiv i32 %128, 256
  %131 = udiv i32 %130, 512
  %132 = getelementptr inbounds [512 x [256 x float]], ptr %arg12, i32 0, i32 %130, i32 %129
  %133 = load float, ptr %132, align 4, !invariant.load !297
  %region_0_66_constant_2548 = load float, ptr @115, align 4
  %134 = getelementptr inbounds [512 x [256 x float]], ptr %arg13, i32 0, i32 %130, i32 %129
  %135 = load float, ptr %134, align 4, !invariant.load !297
  %multiply.3449 = fmul float %region_0_66_constant_2548, %135
  %subtract.3550 = fsub float %133, %multiply.3449
  br label %concatenate.37.merge42

concatenate.pivot.512.51:                         ; preds = %concatenate.30.merge30
  %136 = icmp ult i32 %3, 512
  br i1 %136, label %concatenate.pivot.0.52, label %concatenate.pivot.512.53

concatenate.pivot.0.52:                           ; preds = %concatenate.pivot.512.51
  br label %concat_index_from_operand_id043

concatenate.pivot.512.53:                         ; preds = %concatenate.pivot.512.51
  br label %concat_index_from_operand_id147

concatenate.37.merge42:                           ; preds = %concat_index_from_operand_id147, %concat_index_from_operand_id043
  %137 = phi float [ %subtract.3346, %concat_index_from_operand_id043 ], [ %subtract.3550, %concat_index_from_operand_id147 ]
  br label %concatenate.pivot.512.63

concat_index_from_operand_id055:                  ; preds = %concatenate.pivot.0.64
  %138 = phi i32 [ 0, %concatenate.pivot.0.64 ]
  %139 = sub nsw i32 %3, %138
  %140 = getelementptr inbounds [512 x float], ptr %arg4, i32 0, i32 %139
  %141 = load float, ptr %140, align 4, !invariant.load !297
  %region_0_66_constant_2156 = load float, ptr @116, align 4
  %142 = getelementptr inbounds [512 x float], ptr %arg5, i32 0, i32 %139
  %143 = load float, ptr %142, align 4
  %multiply.3957 = fmul float %region_0_66_constant_2156, %143
  %subtract.4058 = fsub float %141, %multiply.3957
  br label %concatenate.44.merge54

concat_index_from_operand_id159:                  ; preds = %concatenate.pivot.512.65
  %144 = phi i32 [ 512, %concatenate.pivot.512.65 ]
  %145 = sub nsw i32 %3, %144
  %146 = mul nuw nsw i32 %145, 1
  %147 = add nuw nsw i32 0, %146
  %148 = urem i32 %147, 256
  %149 = udiv i32 %147, 256
  %150 = udiv i32 %149, 512
  %151 = getelementptr inbounds [512 x [256 x float]], ptr %arg14, i32 0, i32 %149, i32 %148
  %152 = load float, ptr %151, align 4, !invariant.load !297
  %region_0_66_constant_2560 = load float, ptr @115, align 4
  %153 = getelementptr inbounds [512 x [256 x float]], ptr %arg15, i32 0, i32 %149, i32 %148
  %154 = load float, ptr %153, align 4, !invariant.load !297
  %multiply.4161 = fmul float %region_0_66_constant_2560, %154
  %subtract.4262 = fsub float %152, %multiply.4161
  br label %concatenate.44.merge54

concatenate.pivot.512.63:                         ; preds = %concatenate.37.merge42
  %155 = icmp ult i32 %3, 512
  br i1 %155, label %concatenate.pivot.0.64, label %concatenate.pivot.512.65

concatenate.pivot.0.64:                           ; preds = %concatenate.pivot.512.63
  br label %concat_index_from_operand_id055

concatenate.pivot.512.65:                         ; preds = %concatenate.pivot.512.63
  br label %concat_index_from_operand_id159

concatenate.44.merge54:                           ; preds = %concat_index_from_operand_id159, %concat_index_from_operand_id055
  %156 = phi float [ %subtract.4058, %concat_index_from_operand_id055 ], [ %subtract.4262, %concat_index_from_operand_id159 ]
  br label %concatenate.pivot.512.75

concat_index_from_operand_id067:                  ; preds = %concatenate.pivot.0.76
  %157 = phi i32 [ 0, %concatenate.pivot.0.76 ]
  %158 = sub nsw i32 %3, %157
  %159 = getelementptr inbounds [512 x float], ptr %arg6, i32 0, i32 %158
  %160 = load float, ptr %159, align 4, !invariant.load !297
  %region_0_66_constant_2168 = load float, ptr @116, align 4
  %161 = getelementptr inbounds [512 x float], ptr %arg7, i32 0, i32 %158
  %162 = load float, ptr %161, align 4
  %multiply.4669 = fmul float %region_0_66_constant_2168, %162
  %subtract.4770 = fsub float %160, %multiply.4669
  br label %concatenate.51.merge66

concat_index_from_operand_id171:                  ; preds = %concatenate.pivot.512.77
  %163 = phi i32 [ 512, %concatenate.pivot.512.77 ]
  %164 = sub nsw i32 %3, %163
  %165 = mul nuw nsw i32 %164, 1
  %166 = add nuw nsw i32 0, %165
  %167 = urem i32 %166, 256
  %168 = udiv i32 %166, 256
  %169 = udiv i32 %168, 512
  %170 = getelementptr inbounds [512 x [256 x float]], ptr %arg16, i32 0, i32 %168, i32 %167
  %171 = load float, ptr %170, align 4, !invariant.load !297
  %region_0_66_constant_2572 = load float, ptr @115, align 4
  %172 = getelementptr inbounds [512 x [256 x float]], ptr %arg17, i32 0, i32 %168, i32 %167
  %173 = load float, ptr %172, align 4
  %multiply.4873 = fmul float %region_0_66_constant_2572, %173
  %subtract.4974 = fsub float %171, %multiply.4873
  br label %concatenate.51.merge66

concatenate.pivot.512.75:                         ; preds = %concatenate.44.merge54
  %174 = icmp ult i32 %3, 512
  br i1 %174, label %concatenate.pivot.0.76, label %concatenate.pivot.512.77

concatenate.pivot.0.76:                           ; preds = %concatenate.pivot.512.75
  br label %concat_index_from_operand_id067

concatenate.pivot.512.77:                         ; preds = %concatenate.pivot.512.75
  br label %concat_index_from_operand_id171

concatenate.51.merge66:                           ; preds = %concat_index_from_operand_id171, %concat_index_from_operand_id067
  %175 = phi float [ %subtract.4770, %concat_index_from_operand_id067 ], [ %subtract.4974, %concat_index_from_operand_id171 ]
  br label %concatenate.pivot.512.87

concat_index_from_operand_id079:                  ; preds = %concatenate.pivot.0.88
  %176 = phi i32 [ 0, %concatenate.pivot.0.88 ]
  %177 = sub nsw i32 %3, %176
  %178 = getelementptr inbounds [512 x float], ptr %arg8, i32 0, i32 %177
  %179 = load float, ptr %178, align 4, !invariant.load !297
  %region_0_66_constant_2180 = load float, ptr @116, align 4
  %180 = getelementptr inbounds [512 x float], ptr %arg9, i32 0, i32 %177
  %181 = load float, ptr %180, align 4
  %multiply.5381 = fmul float %region_0_66_constant_2180, %181
  %subtract.5482 = fsub float %179, %multiply.5381
  br label %concatenate.58.merge78

concat_index_from_operand_id183:                  ; preds = %concatenate.pivot.512.89
  %182 = phi i32 [ 512, %concatenate.pivot.512.89 ]
  %183 = sub nsw i32 %3, %182
  %184 = mul nuw nsw i32 %183, 1
  %185 = add nuw nsw i32 0, %184
  %186 = urem i32 %185, 256
  %187 = udiv i32 %185, 256
  %188 = udiv i32 %187, 512
  %189 = getelementptr inbounds [512 x [256 x float]], ptr %arg18, i32 0, i32 %187, i32 %186
  %190 = load float, ptr %189, align 4, !invariant.load !297
  %region_0_66_constant_2584 = load float, ptr @115, align 4
  %191 = getelementptr inbounds [512 x [256 x float]], ptr %arg19, i32 0, i32 %187, i32 %186
  %192 = load float, ptr %191, align 4
  %multiply.5585 = fmul float %region_0_66_constant_2584, %192
  %subtract.5686 = fsub float %190, %multiply.5585
  br label %concatenate.58.merge78

concatenate.pivot.512.87:                         ; preds = %concatenate.51.merge66
  %193 = icmp ult i32 %3, 512
  br i1 %193, label %concatenate.pivot.0.88, label %concatenate.pivot.512.89

concatenate.pivot.0.88:                           ; preds = %concatenate.pivot.512.87
  br label %concat_index_from_operand_id079

concatenate.pivot.512.89:                         ; preds = %concatenate.pivot.512.87
  br label %concat_index_from_operand_id183

concatenate.58.merge78:                           ; preds = %concat_index_from_operand_id183, %concat_index_from_operand_id079
  %194 = phi float [ %subtract.5482, %concat_index_from_operand_id079 ], [ %subtract.5686, %concat_index_from_operand_id183 ]
  %195 = icmp sge i32 %3, 0
  %196 = icmp slt i32 %3, 512
  %197 = and i1 %195, %196
  br i1 %197, label %slice0-true, label %slice0-after

slice0-after:                                     ; preds = %slice0-true, %concatenate.58.merge78
  %198 = icmp sge i32 %3, 0
  %199 = icmp slt i32 %3, 512
  %200 = and i1 %198, %199
  br i1 %200, label %slice1-true, label %slice1-after

slice1-after:                                     ; preds = %slice1-true, %slice0-after
  %201 = icmp sge i32 %3, 0
  %202 = icmp slt i32 %3, 512
  %203 = and i1 %201, %202
  br i1 %203, label %slice2-true, label %slice2-after

slice2-after:                                     ; preds = %slice2-true, %slice1-after
  %204 = icmp sge i32 %3, 0
  %205 = icmp slt i32 %3, 512
  %206 = and i1 %204, %205
  br i1 %206, label %slice3-true, label %slice3-after

slice3-after:                                     ; preds = %slice3-true, %slice2-after
  %207 = icmp sge i32 %3, 0
  %208 = icmp slt i32 %3, 512
  %209 = and i1 %207, %208
  br i1 %209, label %slice4-true, label %slice4-after

slice4-after:                                     ; preds = %slice4-true, %slice3-after
  %210 = icmp sge i32 %3, 512
  %211 = icmp slt i32 %3, 131584
  %212 = and i1 %210, %211
  br i1 %212, label %slice5-true, label %slice5-after

slice5-after:                                     ; preds = %slice5-true, %slice4-after
  %213 = icmp sge i32 %3, 512
  %214 = icmp slt i32 %3, 131584
  %215 = and i1 %213, %214
  br i1 %215, label %slice6-true, label %slice6-after

slice6-after:                                     ; preds = %slice6-true, %slice5-after
  %216 = icmp sge i32 %3, 512
  %217 = icmp slt i32 %3, 131584
  %218 = and i1 %216, %217
  br i1 %218, label %slice7-true, label %slice7-after

slice7-after:                                     ; preds = %slice7-true, %slice6-after
  %219 = icmp sge i32 %3, 512
  %220 = icmp slt i32 %3, 131584
  %221 = and i1 %219, %220
  br i1 %221, label %slice8-true, label %slice8-after

slice8-after:                                     ; preds = %slice8-true, %slice7-after
  %222 = icmp sge i32 %3, 512
  %223 = icmp slt i32 %3, 131584
  %224 = and i1 %222, %223
  br i1 %224, label %slice9-true, label %slice9-after

slice9-after:                                     ; preds = %slice9-true, %slice8-after
  br label %copy_fusion_5.in_bounds-after

slice0-true:                                      ; preds = %concatenate.58.merge78
  %225 = sub i32 %3, 0
  %226 = getelementptr inbounds [512 x float], ptr %arg1, i32 0, i32 %225
  store float %23, ptr %226, align 4
  br label %slice0-after

slice1-true:                                      ; preds = %slice0-after
  %227 = sub i32 %3, 0
  %228 = getelementptr inbounds [512 x float], ptr %arg3, i32 0, i32 %227
  store float %42, ptr %228, align 4
  br label %slice1-after

slice2-true:                                      ; preds = %slice1-after
  %229 = sub i32 %3, 0
  %230 = getelementptr inbounds [512 x float], ptr %arg5, i32 0, i32 %229
  store float %61, ptr %230, align 4
  br label %slice2-after

slice3-true:                                      ; preds = %slice2-after
  %231 = sub i32 %3, 0
  %232 = getelementptr inbounds [512 x float], ptr %arg7, i32 0, i32 %231
  store float %80, ptr %232, align 4
  br label %slice3-after

slice4-true:                                      ; preds = %slice3-after
  %233 = sub i32 %3, 0
  %234 = getelementptr inbounds [512 x float], ptr %arg9, i32 0, i32 %233
  store float %99, ptr %234, align 4
  br label %slice4-after

slice5-true:                                      ; preds = %slice4-after
  %235 = sub i32 %3, 512
  %236 = getelementptr inbounds [131072 x float], ptr %arg20, i32 0, i32 %235
  store float %118, ptr %236, align 4
  br label %slice5-after

slice6-true:                                      ; preds = %slice5-after
  %237 = sub i32 %3, 512
  %238 = getelementptr inbounds [131072 x float], ptr %arg21, i32 0, i32 %237
  store float %137, ptr %238, align 4
  br label %slice6-after

slice7-true:                                      ; preds = %slice6-after
  %239 = sub i32 %3, 512
  %240 = getelementptr inbounds [131072 x float], ptr %arg22, i32 0, i32 %239
  store float %156, ptr %240, align 4
  br label %slice7-after

slice8-true:                                      ; preds = %slice7-after
  %241 = sub i32 %3, 512
  %242 = getelementptr inbounds [131072 x float], ptr %arg17, i32 0, i32 %241
  store float %175, ptr %242, align 4
  br label %slice8-after

slice9-true:                                      ; preds = %slice8-after
  %243 = sub i32 %3, 512
  %244 = getelementptr inbounds [131072 x float], ptr %arg19, i32 0, i32 %243
  store float %194, ptr %244, align 4
  br label %slice9-after
}

define void @copy_fusion_1(ptr noalias align 16 dereferenceable(128) %arg0, ptr noalias align 128 dereferenceable(128) %arg1, ptr noalias align 16 dereferenceable(128) %arg2, ptr noalias align 128 dereferenceable(128) %arg3, ptr noalias align 16 dereferenceable(4096) %arg4, ptr noalias align 128 dereferenceable(4096) %arg5, ptr noalias align 16 dereferenceable(4096) %arg6, ptr noalias align 128 dereferenceable(4096) %arg7, ptr noalias align 16 dereferenceable(32768) %arg8, ptr noalias align 128 dereferenceable(32768) %arg9, ptr noalias align 16 dereferenceable(32768) %arg10, ptr noalias align 128 dereferenceable(32768) %arg11, ptr noalias align 16 dereferenceable(262144) %arg12, ptr noalias align 128 dereferenceable(262144) %arg13, ptr noalias align 16 dereferenceable(262144) %arg14, ptr noalias align 128 dereferenceable(262144) %arg15, ptr noalias align 128 dereferenceable(128) %arg16, ptr noalias align 128 dereferenceable(128) %arg17) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !540
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 75776
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = icmp ult i32 %linear_index, 74784
  br i1 %4, label %copy_fusion_1.in_bounds-true, label %copy_fusion_1.in_bounds-after

copy_fusion_1.in_bounds-after:                    ; preds = %slice7-after, %entry
  ret void

copy_fusion_1.in_bounds-true:                     ; preds = %entry
  br label %concatenate.pivot.1056.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %5 = phi i32 [ 0, %concatenate.pivot.0. ]
  %6 = sub nsw i32 %3, %5
  %7 = getelementptr inbounds [32 x float], ptr %arg0, i32 0, i32 %6
  %8 = load float, ptr %7, align 4, !invariant.load !297
  %region_0_58_constant_17 = load float, ptr @120, align 4
  %9 = getelementptr inbounds [32 x float], ptr %arg1, i32 0, i32 %6
  %10 = load float, ptr %9, align 4, !invariant.load !297
  %multiply.19 = fmul float %region_0_58_constant_17, %10
  %subtract.20 = fsub float %8, %multiply.19
  br label %concatenate.36.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.32.1
  %11 = phi i32 [ 32, %concatenate.pivot.32.1 ]
  %12 = sub nsw i32 %3, %11
  %13 = mul nuw nsw i32 %12, 1
  %14 = add nuw nsw i32 0, %13
  %15 = urem i32 %14, 128
  %16 = udiv i32 %14, 128
  %17 = udiv i32 %16, 8
  %18 = getelementptr inbounds [8 x [128 x float]], ptr %arg4, i32 0, i32 %16, i32 %15
  %19 = load float, ptr %18, align 4, !invariant.load !297
  %region_0_58_constant_21 = load float, ptr @119, align 4
  %20 = getelementptr inbounds [8 x [128 x float]], ptr %arg5, i32 0, i32 %16, i32 %15
  %21 = load float, ptr %20, align 4
  %multiply.23 = fmul float %region_0_58_constant_21, %21
  %subtract.24 = fsub float %19, %multiply.23
  br label %concatenate.36.merge

concat_index_from_operand_id2:                    ; preds = %concatenate.pivot.1056.2
  %22 = phi i32 [ 1056, %concatenate.pivot.1056.2 ]
  %23 = sub nsw i32 %3, %22
  %24 = mul nuw nsw i32 %23, 1
  %25 = add nuw nsw i32 0, %24
  %26 = urem i32 %25, 512
  %27 = udiv i32 %25, 512
  %28 = udiv i32 %27, 16
  %29 = getelementptr inbounds [16 x [512 x float]], ptr %arg8, i32 0, i32 %27, i32 %26
  %30 = load float, ptr %29, align 4, !invariant.load !297
  %region_0_58_constant_26 = load float, ptr @118, align 4
  %31 = getelementptr inbounds [16 x [512 x float]], ptr %arg9, i32 0, i32 %27, i32 %26
  %32 = load float, ptr %31, align 4
  %multiply.28 = fmul float %region_0_58_constant_26, %32
  %subtract.29 = fsub float %30, %multiply.28
  br label %concatenate.36.merge

concat_index_from_operand_id3:                    ; preds = %concatenate.pivot.9248.3
  %33 = phi i32 [ 9248, %concatenate.pivot.9248.3 ]
  %34 = sub nsw i32 %3, %33
  %35 = mul nuw nsw i32 %34, 1
  %36 = add nuw nsw i32 0, %35
  %37 = urem i32 %36, 8
  %38 = udiv i32 %36, 8
  %39 = udiv i32 %38, 8192
  %40 = getelementptr inbounds [8192 x [8 x float]], ptr %arg12, i32 0, i32 %38, i32 %37
  %41 = load float, ptr %40, align 4, !invariant.load !297
  %region_0_58_constant_31 = load float, ptr @117, align 4
  %42 = getelementptr inbounds [8192 x [8 x float]], ptr %arg13, i32 0, i32 %38, i32 %37
  %43 = load float, ptr %42, align 4
  %multiply.33 = fmul float %region_0_58_constant_31, %43
  %subtract.34 = fsub float %41, %multiply.33
  br label %concatenate.36.merge

concatenate.pivot.1056.:                          ; preds = %copy_fusion_1.in_bounds-true
  %44 = icmp ult i32 %3, 1056
  br i1 %44, label %concatenate.pivot.32., label %concatenate.pivot.9248.

concatenate.pivot.32.:                            ; preds = %concatenate.pivot.1056.
  %45 = icmp ult i32 %3, 32
  br i1 %45, label %concatenate.pivot.0., label %concatenate.pivot.32.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.32.
  br label %concat_index_from_operand_id0

concatenate.pivot.32.1:                           ; preds = %concatenate.pivot.32.
  br label %concat_index_from_operand_id1

concatenate.pivot.9248.:                          ; preds = %concatenate.pivot.1056.
  %46 = icmp ult i32 %3, 9248
  br i1 %46, label %concatenate.pivot.1056.2, label %concatenate.pivot.9248.3

concatenate.pivot.1056.2:                         ; preds = %concatenate.pivot.9248.
  br label %concat_index_from_operand_id2

concatenate.pivot.9248.3:                         ; preds = %concatenate.pivot.9248.
  br label %concat_index_from_operand_id3

concatenate.36.merge:                             ; preds = %concat_index_from_operand_id3, %concat_index_from_operand_id2, %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %47 = phi float [ %subtract.20, %concat_index_from_operand_id0 ], [ %subtract.24, %concat_index_from_operand_id1 ], [ %subtract.29, %concat_index_from_operand_id2 ], [ %subtract.34, %concat_index_from_operand_id3 ]
  br label %concatenate.pivot.1056.12

concat_index_from_operand_id04:                   ; preds = %concatenate.pivot.0.14
  %48 = phi i32 [ 0, %concatenate.pivot.0.14 ]
  %49 = sub nsw i32 %3, %48
  %50 = getelementptr inbounds [32 x float], ptr %arg2, i32 0, i32 %49
  %51 = load float, ptr %50, align 4, !invariant.load !297
  %region_0_58_constant_175 = load float, ptr @120, align 4
  %52 = getelementptr inbounds [32 x float], ptr %arg3, i32 0, i32 %49
  %53 = load float, ptr %52, align 4, !invariant.load !297
  %multiply.38 = fmul float %region_0_58_constant_175, %53
  %subtract.39 = fsub float %51, %multiply.38
  br label %concatenate.49.merge

concat_index_from_operand_id16:                   ; preds = %concatenate.pivot.32.15
  %54 = phi i32 [ 32, %concatenate.pivot.32.15 ]
  %55 = sub nsw i32 %3, %54
  %56 = mul nuw nsw i32 %55, 1
  %57 = add nuw nsw i32 0, %56
  %58 = urem i32 %57, 128
  %59 = udiv i32 %57, 128
  %60 = udiv i32 %59, 8
  %61 = getelementptr inbounds [8 x [128 x float]], ptr %arg6, i32 0, i32 %59, i32 %58
  %62 = load float, ptr %61, align 4, !invariant.load !297
  %region_0_58_constant_217 = load float, ptr @119, align 4
  %63 = getelementptr inbounds [8 x [128 x float]], ptr %arg7, i32 0, i32 %59, i32 %58
  %64 = load float, ptr %63, align 4
  %multiply.40 = fmul float %region_0_58_constant_217, %64
  %subtract.41 = fsub float %62, %multiply.40
  br label %concatenate.49.merge

concat_index_from_operand_id28:                   ; preds = %concatenate.pivot.1056.17
  %65 = phi i32 [ 1056, %concatenate.pivot.1056.17 ]
  %66 = sub nsw i32 %3, %65
  %67 = mul nuw nsw i32 %66, 1
  %68 = add nuw nsw i32 0, %67
  %69 = urem i32 %68, 512
  %70 = udiv i32 %68, 512
  %71 = udiv i32 %70, 16
  %72 = getelementptr inbounds [16 x [512 x float]], ptr %arg10, i32 0, i32 %70, i32 %69
  %73 = load float, ptr %72, align 4, !invariant.load !297
  %region_0_58_constant_269 = load float, ptr @118, align 4
  %74 = getelementptr inbounds [16 x [512 x float]], ptr %arg11, i32 0, i32 %70, i32 %69
  %75 = load float, ptr %74, align 4
  %multiply.43 = fmul float %region_0_58_constant_269, %75
  %subtract.44 = fsub float %73, %multiply.43
  br label %concatenate.49.merge

concat_index_from_operand_id310:                  ; preds = %concatenate.pivot.9248.18
  %76 = phi i32 [ 9248, %concatenate.pivot.9248.18 ]
  %77 = sub nsw i32 %3, %76
  %78 = mul nuw nsw i32 %77, 1
  %79 = add nuw nsw i32 0, %78
  %80 = urem i32 %79, 8
  %81 = udiv i32 %79, 8
  %82 = udiv i32 %81, 8192
  %83 = getelementptr inbounds [8192 x [8 x float]], ptr %arg14, i32 0, i32 %81, i32 %80
  %84 = load float, ptr %83, align 4, !invariant.load !297
  %region_0_58_constant_3111 = load float, ptr @117, align 4
  %85 = getelementptr inbounds [8192 x [8 x float]], ptr %arg15, i32 0, i32 %81, i32 %80
  %86 = load float, ptr %85, align 4
  %multiply.46 = fmul float %region_0_58_constant_3111, %86
  %subtract.47 = fsub float %84, %multiply.46
  br label %concatenate.49.merge

concatenate.pivot.1056.12:                        ; preds = %concatenate.36.merge
  %87 = icmp ult i32 %3, 1056
  br i1 %87, label %concatenate.pivot.32.13, label %concatenate.pivot.9248.16

concatenate.pivot.32.13:                          ; preds = %concatenate.pivot.1056.12
  %88 = icmp ult i32 %3, 32
  br i1 %88, label %concatenate.pivot.0.14, label %concatenate.pivot.32.15

concatenate.pivot.0.14:                           ; preds = %concatenate.pivot.32.13
  br label %concat_index_from_operand_id04

concatenate.pivot.32.15:                          ; preds = %concatenate.pivot.32.13
  br label %concat_index_from_operand_id16

concatenate.pivot.9248.16:                        ; preds = %concatenate.pivot.1056.12
  %89 = icmp ult i32 %3, 9248
  br i1 %89, label %concatenate.pivot.1056.17, label %concatenate.pivot.9248.18

concatenate.pivot.1056.17:                        ; preds = %concatenate.pivot.9248.16
  br label %concat_index_from_operand_id28

concatenate.pivot.9248.18:                        ; preds = %concatenate.pivot.9248.16
  br label %concat_index_from_operand_id310

concatenate.49.merge:                             ; preds = %concat_index_from_operand_id310, %concat_index_from_operand_id28, %concat_index_from_operand_id16, %concat_index_from_operand_id04
  %90 = phi float [ %subtract.39, %concat_index_from_operand_id04 ], [ %subtract.41, %concat_index_from_operand_id16 ], [ %subtract.44, %concat_index_from_operand_id28 ], [ %subtract.47, %concat_index_from_operand_id310 ]
  br label %concatenate.pivot.1056.36

concat_index_from_operand_id020:                  ; preds = %concatenate.pivot.0.38
  %91 = phi i32 [ 0, %concatenate.pivot.0.38 ]
  %92 = sub nsw i32 %3, %91
  %93 = getelementptr inbounds [32 x float], ptr %arg0, i32 0, i32 %92
  %94 = load float, ptr %93, align 4, !invariant.load !297
  %region_0_58_constant_1721 = load float, ptr @120, align 4
  %95 = getelementptr inbounds [32 x float], ptr %arg1, i32 0, i32 %92
  %96 = load float, ptr %95, align 4, !invariant.load !297
  %multiply.1922 = fmul float %region_0_58_constant_1721, %96
  %subtract.2023 = fsub float %94, %multiply.1922
  br label %concatenate.36.merge19

concat_index_from_operand_id124:                  ; preds = %concatenate.pivot.32.39
  %97 = phi i32 [ 32, %concatenate.pivot.32.39 ]
  %98 = sub nsw i32 %3, %97
  %99 = mul nuw nsw i32 %98, 1
  %100 = add nuw nsw i32 0, %99
  %101 = urem i32 %100, 128
  %102 = udiv i32 %100, 128
  %103 = udiv i32 %102, 8
  %104 = getelementptr inbounds [8 x [128 x float]], ptr %arg4, i32 0, i32 %102, i32 %101
  %105 = load float, ptr %104, align 4, !invariant.load !297
  %region_0_58_constant_2125 = load float, ptr @119, align 4
  %106 = getelementptr inbounds [8 x [128 x float]], ptr %arg5, i32 0, i32 %102, i32 %101
  %107 = load float, ptr %106, align 4
  %multiply.2326 = fmul float %region_0_58_constant_2125, %107
  %subtract.2427 = fsub float %105, %multiply.2326
  br label %concatenate.36.merge19

concat_index_from_operand_id228:                  ; preds = %concatenate.pivot.1056.41
  %108 = phi i32 [ 1056, %concatenate.pivot.1056.41 ]
  %109 = sub nsw i32 %3, %108
  %110 = mul nuw nsw i32 %109, 1
  %111 = add nuw nsw i32 0, %110
  %112 = urem i32 %111, 512
  %113 = udiv i32 %111, 512
  %114 = udiv i32 %113, 16
  %115 = getelementptr inbounds [16 x [512 x float]], ptr %arg8, i32 0, i32 %113, i32 %112
  %116 = load float, ptr %115, align 4, !invariant.load !297
  %region_0_58_constant_2629 = load float, ptr @118, align 4
  %117 = getelementptr inbounds [16 x [512 x float]], ptr %arg9, i32 0, i32 %113, i32 %112
  %118 = load float, ptr %117, align 4
  %multiply.2830 = fmul float %region_0_58_constant_2629, %118
  %subtract.2931 = fsub float %116, %multiply.2830
  br label %concatenate.36.merge19

concat_index_from_operand_id332:                  ; preds = %concatenate.pivot.9248.42
  %119 = phi i32 [ 9248, %concatenate.pivot.9248.42 ]
  %120 = sub nsw i32 %3, %119
  %121 = mul nuw nsw i32 %120, 1
  %122 = add nuw nsw i32 0, %121
  %123 = urem i32 %122, 8
  %124 = udiv i32 %122, 8
  %125 = udiv i32 %124, 8192
  %126 = getelementptr inbounds [8192 x [8 x float]], ptr %arg12, i32 0, i32 %124, i32 %123
  %127 = load float, ptr %126, align 4, !invariant.load !297
  %region_0_58_constant_3133 = load float, ptr @117, align 4
  %128 = getelementptr inbounds [8192 x [8 x float]], ptr %arg13, i32 0, i32 %124, i32 %123
  %129 = load float, ptr %128, align 4
  %multiply.3334 = fmul float %region_0_58_constant_3133, %129
  %subtract.3435 = fsub float %127, %multiply.3334
  br label %concatenate.36.merge19

concatenate.pivot.1056.36:                        ; preds = %concatenate.49.merge
  %130 = icmp ult i32 %3, 1056
  br i1 %130, label %concatenate.pivot.32.37, label %concatenate.pivot.9248.40

concatenate.pivot.32.37:                          ; preds = %concatenate.pivot.1056.36
  %131 = icmp ult i32 %3, 32
  br i1 %131, label %concatenate.pivot.0.38, label %concatenate.pivot.32.39

concatenate.pivot.0.38:                           ; preds = %concatenate.pivot.32.37
  br label %concat_index_from_operand_id020

concatenate.pivot.32.39:                          ; preds = %concatenate.pivot.32.37
  br label %concat_index_from_operand_id124

concatenate.pivot.9248.40:                        ; preds = %concatenate.pivot.1056.36
  %132 = icmp ult i32 %3, 9248
  br i1 %132, label %concatenate.pivot.1056.41, label %concatenate.pivot.9248.42

concatenate.pivot.1056.41:                        ; preds = %concatenate.pivot.9248.40
  br label %concat_index_from_operand_id228

concatenate.pivot.9248.42:                        ; preds = %concatenate.pivot.9248.40
  br label %concat_index_from_operand_id332

concatenate.36.merge19:                           ; preds = %concat_index_from_operand_id332, %concat_index_from_operand_id228, %concat_index_from_operand_id124, %concat_index_from_operand_id020
  %133 = phi float [ %subtract.2023, %concat_index_from_operand_id020 ], [ %subtract.2427, %concat_index_from_operand_id124 ], [ %subtract.2931, %concat_index_from_operand_id228 ], [ %subtract.3435, %concat_index_from_operand_id332 ]
  br label %concatenate.pivot.1056.60

concat_index_from_operand_id044:                  ; preds = %concatenate.pivot.0.62
  %134 = phi i32 [ 0, %concatenate.pivot.0.62 ]
  %135 = sub nsw i32 %3, %134
  %136 = getelementptr inbounds [32 x float], ptr %arg2, i32 0, i32 %135
  %137 = load float, ptr %136, align 4, !invariant.load !297
  %region_0_58_constant_1745 = load float, ptr @120, align 4
  %138 = getelementptr inbounds [32 x float], ptr %arg3, i32 0, i32 %135
  %139 = load float, ptr %138, align 4, !invariant.load !297
  %multiply.3846 = fmul float %region_0_58_constant_1745, %139
  %subtract.3947 = fsub float %137, %multiply.3846
  br label %concatenate.49.merge43

concat_index_from_operand_id148:                  ; preds = %concatenate.pivot.32.63
  %140 = phi i32 [ 32, %concatenate.pivot.32.63 ]
  %141 = sub nsw i32 %3, %140
  %142 = mul nuw nsw i32 %141, 1
  %143 = add nuw nsw i32 0, %142
  %144 = urem i32 %143, 128
  %145 = udiv i32 %143, 128
  %146 = udiv i32 %145, 8
  %147 = getelementptr inbounds [8 x [128 x float]], ptr %arg6, i32 0, i32 %145, i32 %144
  %148 = load float, ptr %147, align 4, !invariant.load !297
  %region_0_58_constant_2149 = load float, ptr @119, align 4
  %149 = getelementptr inbounds [8 x [128 x float]], ptr %arg7, i32 0, i32 %145, i32 %144
  %150 = load float, ptr %149, align 4
  %multiply.4050 = fmul float %region_0_58_constant_2149, %150
  %subtract.4151 = fsub float %148, %multiply.4050
  br label %concatenate.49.merge43

concat_index_from_operand_id252:                  ; preds = %concatenate.pivot.1056.65
  %151 = phi i32 [ 1056, %concatenate.pivot.1056.65 ]
  %152 = sub nsw i32 %3, %151
  %153 = mul nuw nsw i32 %152, 1
  %154 = add nuw nsw i32 0, %153
  %155 = urem i32 %154, 512
  %156 = udiv i32 %154, 512
  %157 = udiv i32 %156, 16
  %158 = getelementptr inbounds [16 x [512 x float]], ptr %arg10, i32 0, i32 %156, i32 %155
  %159 = load float, ptr %158, align 4, !invariant.load !297
  %region_0_58_constant_2653 = load float, ptr @118, align 4
  %160 = getelementptr inbounds [16 x [512 x float]], ptr %arg11, i32 0, i32 %156, i32 %155
  %161 = load float, ptr %160, align 4
  %multiply.4354 = fmul float %region_0_58_constant_2653, %161
  %subtract.4455 = fsub float %159, %multiply.4354
  br label %concatenate.49.merge43

concat_index_from_operand_id356:                  ; preds = %concatenate.pivot.9248.66
  %162 = phi i32 [ 9248, %concatenate.pivot.9248.66 ]
  %163 = sub nsw i32 %3, %162
  %164 = mul nuw nsw i32 %163, 1
  %165 = add nuw nsw i32 0, %164
  %166 = urem i32 %165, 8
  %167 = udiv i32 %165, 8
  %168 = udiv i32 %167, 8192
  %169 = getelementptr inbounds [8192 x [8 x float]], ptr %arg14, i32 0, i32 %167, i32 %166
  %170 = load float, ptr %169, align 4, !invariant.load !297
  %region_0_58_constant_3157 = load float, ptr @117, align 4
  %171 = getelementptr inbounds [8192 x [8 x float]], ptr %arg15, i32 0, i32 %167, i32 %166
  %172 = load float, ptr %171, align 4
  %multiply.4658 = fmul float %region_0_58_constant_3157, %172
  %subtract.4759 = fsub float %170, %multiply.4658
  br label %concatenate.49.merge43

concatenate.pivot.1056.60:                        ; preds = %concatenate.36.merge19
  %173 = icmp ult i32 %3, 1056
  br i1 %173, label %concatenate.pivot.32.61, label %concatenate.pivot.9248.64

concatenate.pivot.32.61:                          ; preds = %concatenate.pivot.1056.60
  %174 = icmp ult i32 %3, 32
  br i1 %174, label %concatenate.pivot.0.62, label %concatenate.pivot.32.63

concatenate.pivot.0.62:                           ; preds = %concatenate.pivot.32.61
  br label %concat_index_from_operand_id044

concatenate.pivot.32.63:                          ; preds = %concatenate.pivot.32.61
  br label %concat_index_from_operand_id148

concatenate.pivot.9248.64:                        ; preds = %concatenate.pivot.1056.60
  %175 = icmp ult i32 %3, 9248
  br i1 %175, label %concatenate.pivot.1056.65, label %concatenate.pivot.9248.66

concatenate.pivot.1056.65:                        ; preds = %concatenate.pivot.9248.64
  br label %concat_index_from_operand_id252

concatenate.pivot.9248.66:                        ; preds = %concatenate.pivot.9248.64
  br label %concat_index_from_operand_id356

concatenate.49.merge43:                           ; preds = %concat_index_from_operand_id356, %concat_index_from_operand_id252, %concat_index_from_operand_id148, %concat_index_from_operand_id044
  %176 = phi float [ %subtract.3947, %concat_index_from_operand_id044 ], [ %subtract.4151, %concat_index_from_operand_id148 ], [ %subtract.4455, %concat_index_from_operand_id252 ], [ %subtract.4759, %concat_index_from_operand_id356 ]
  br label %concatenate.pivot.1056.84

concat_index_from_operand_id068:                  ; preds = %concatenate.pivot.0.86
  %177 = phi i32 [ 0, %concatenate.pivot.0.86 ]
  %178 = sub nsw i32 %3, %177
  %179 = getelementptr inbounds [32 x float], ptr %arg0, i32 0, i32 %178
  %180 = load float, ptr %179, align 4, !invariant.load !297
  %region_0_58_constant_1769 = load float, ptr @120, align 4
  %181 = getelementptr inbounds [32 x float], ptr %arg1, i32 0, i32 %178
  %182 = load float, ptr %181, align 4, !invariant.load !297
  %multiply.1970 = fmul float %region_0_58_constant_1769, %182
  %subtract.2071 = fsub float %180, %multiply.1970
  br label %concatenate.36.merge67

concat_index_from_operand_id172:                  ; preds = %concatenate.pivot.32.87
  %183 = phi i32 [ 32, %concatenate.pivot.32.87 ]
  %184 = sub nsw i32 %3, %183
  %185 = mul nuw nsw i32 %184, 1
  %186 = add nuw nsw i32 0, %185
  %187 = urem i32 %186, 128
  %188 = udiv i32 %186, 128
  %189 = udiv i32 %188, 8
  %190 = getelementptr inbounds [8 x [128 x float]], ptr %arg4, i32 0, i32 %188, i32 %187
  %191 = load float, ptr %190, align 4, !invariant.load !297
  %region_0_58_constant_2173 = load float, ptr @119, align 4
  %192 = getelementptr inbounds [8 x [128 x float]], ptr %arg5, i32 0, i32 %188, i32 %187
  %193 = load float, ptr %192, align 4
  %multiply.2374 = fmul float %region_0_58_constant_2173, %193
  %subtract.2475 = fsub float %191, %multiply.2374
  br label %concatenate.36.merge67

concat_index_from_operand_id276:                  ; preds = %concatenate.pivot.1056.89
  %194 = phi i32 [ 1056, %concatenate.pivot.1056.89 ]
  %195 = sub nsw i32 %3, %194
  %196 = mul nuw nsw i32 %195, 1
  %197 = add nuw nsw i32 0, %196
  %198 = urem i32 %197, 512
  %199 = udiv i32 %197, 512
  %200 = udiv i32 %199, 16
  %201 = getelementptr inbounds [16 x [512 x float]], ptr %arg8, i32 0, i32 %199, i32 %198
  %202 = load float, ptr %201, align 4, !invariant.load !297
  %region_0_58_constant_2677 = load float, ptr @118, align 4
  %203 = getelementptr inbounds [16 x [512 x float]], ptr %arg9, i32 0, i32 %199, i32 %198
  %204 = load float, ptr %203, align 4
  %multiply.2878 = fmul float %region_0_58_constant_2677, %204
  %subtract.2979 = fsub float %202, %multiply.2878
  br label %concatenate.36.merge67

concat_index_from_operand_id380:                  ; preds = %concatenate.pivot.9248.90
  %205 = phi i32 [ 9248, %concatenate.pivot.9248.90 ]
  %206 = sub nsw i32 %3, %205
  %207 = mul nuw nsw i32 %206, 1
  %208 = add nuw nsw i32 0, %207
  %209 = urem i32 %208, 8
  %210 = udiv i32 %208, 8
  %211 = udiv i32 %210, 8192
  %212 = getelementptr inbounds [8192 x [8 x float]], ptr %arg12, i32 0, i32 %210, i32 %209
  %213 = load float, ptr %212, align 4, !invariant.load !297
  %region_0_58_constant_3181 = load float, ptr @117, align 4
  %214 = getelementptr inbounds [8192 x [8 x float]], ptr %arg13, i32 0, i32 %210, i32 %209
  %215 = load float, ptr %214, align 4
  %multiply.3382 = fmul float %region_0_58_constant_3181, %215
  %subtract.3483 = fsub float %213, %multiply.3382
  br label %concatenate.36.merge67

concatenate.pivot.1056.84:                        ; preds = %concatenate.49.merge43
  %216 = icmp ult i32 %3, 1056
  br i1 %216, label %concatenate.pivot.32.85, label %concatenate.pivot.9248.88

concatenate.pivot.32.85:                          ; preds = %concatenate.pivot.1056.84
  %217 = icmp ult i32 %3, 32
  br i1 %217, label %concatenate.pivot.0.86, label %concatenate.pivot.32.87

concatenate.pivot.0.86:                           ; preds = %concatenate.pivot.32.85
  br label %concat_index_from_operand_id068

concatenate.pivot.32.87:                          ; preds = %concatenate.pivot.32.85
  br label %concat_index_from_operand_id172

concatenate.pivot.9248.88:                        ; preds = %concatenate.pivot.1056.84
  %218 = icmp ult i32 %3, 9248
  br i1 %218, label %concatenate.pivot.1056.89, label %concatenate.pivot.9248.90

concatenate.pivot.1056.89:                        ; preds = %concatenate.pivot.9248.88
  br label %concat_index_from_operand_id276

concatenate.pivot.9248.90:                        ; preds = %concatenate.pivot.9248.88
  br label %concat_index_from_operand_id380

concatenate.36.merge67:                           ; preds = %concat_index_from_operand_id380, %concat_index_from_operand_id276, %concat_index_from_operand_id172, %concat_index_from_operand_id068
  %219 = phi float [ %subtract.2071, %concat_index_from_operand_id068 ], [ %subtract.2475, %concat_index_from_operand_id172 ], [ %subtract.2979, %concat_index_from_operand_id276 ], [ %subtract.3483, %concat_index_from_operand_id380 ]
  br label %concatenate.pivot.1056.108

concat_index_from_operand_id092:                  ; preds = %concatenate.pivot.0.110
  %220 = phi i32 [ 0, %concatenate.pivot.0.110 ]
  %221 = sub nsw i32 %3, %220
  %222 = getelementptr inbounds [32 x float], ptr %arg2, i32 0, i32 %221
  %223 = load float, ptr %222, align 4, !invariant.load !297
  %region_0_58_constant_1793 = load float, ptr @120, align 4
  %224 = getelementptr inbounds [32 x float], ptr %arg3, i32 0, i32 %221
  %225 = load float, ptr %224, align 4, !invariant.load !297
  %multiply.3894 = fmul float %region_0_58_constant_1793, %225
  %subtract.3995 = fsub float %223, %multiply.3894
  br label %concatenate.49.merge91

concat_index_from_operand_id196:                  ; preds = %concatenate.pivot.32.111
  %226 = phi i32 [ 32, %concatenate.pivot.32.111 ]
  %227 = sub nsw i32 %3, %226
  %228 = mul nuw nsw i32 %227, 1
  %229 = add nuw nsw i32 0, %228
  %230 = urem i32 %229, 128
  %231 = udiv i32 %229, 128
  %232 = udiv i32 %231, 8
  %233 = getelementptr inbounds [8 x [128 x float]], ptr %arg6, i32 0, i32 %231, i32 %230
  %234 = load float, ptr %233, align 4, !invariant.load !297
  %region_0_58_constant_2197 = load float, ptr @119, align 4
  %235 = getelementptr inbounds [8 x [128 x float]], ptr %arg7, i32 0, i32 %231, i32 %230
  %236 = load float, ptr %235, align 4
  %multiply.4098 = fmul float %region_0_58_constant_2197, %236
  %subtract.4199 = fsub float %234, %multiply.4098
  br label %concatenate.49.merge91

concat_index_from_operand_id2100:                 ; preds = %concatenate.pivot.1056.113
  %237 = phi i32 [ 1056, %concatenate.pivot.1056.113 ]
  %238 = sub nsw i32 %3, %237
  %239 = mul nuw nsw i32 %238, 1
  %240 = add nuw nsw i32 0, %239
  %241 = urem i32 %240, 512
  %242 = udiv i32 %240, 512
  %243 = udiv i32 %242, 16
  %244 = getelementptr inbounds [16 x [512 x float]], ptr %arg10, i32 0, i32 %242, i32 %241
  %245 = load float, ptr %244, align 4, !invariant.load !297
  %region_0_58_constant_26101 = load float, ptr @118, align 4
  %246 = getelementptr inbounds [16 x [512 x float]], ptr %arg11, i32 0, i32 %242, i32 %241
  %247 = load float, ptr %246, align 4
  %multiply.43102 = fmul float %region_0_58_constant_26101, %247
  %subtract.44103 = fsub float %245, %multiply.43102
  br label %concatenate.49.merge91

concat_index_from_operand_id3104:                 ; preds = %concatenate.pivot.9248.114
  %248 = phi i32 [ 9248, %concatenate.pivot.9248.114 ]
  %249 = sub nsw i32 %3, %248
  %250 = mul nuw nsw i32 %249, 1
  %251 = add nuw nsw i32 0, %250
  %252 = urem i32 %251, 8
  %253 = udiv i32 %251, 8
  %254 = udiv i32 %253, 8192
  %255 = getelementptr inbounds [8192 x [8 x float]], ptr %arg14, i32 0, i32 %253, i32 %252
  %256 = load float, ptr %255, align 4, !invariant.load !297
  %region_0_58_constant_31105 = load float, ptr @117, align 4
  %257 = getelementptr inbounds [8192 x [8 x float]], ptr %arg15, i32 0, i32 %253, i32 %252
  %258 = load float, ptr %257, align 4
  %multiply.46106 = fmul float %region_0_58_constant_31105, %258
  %subtract.47107 = fsub float %256, %multiply.46106
  br label %concatenate.49.merge91

concatenate.pivot.1056.108:                       ; preds = %concatenate.36.merge67
  %259 = icmp ult i32 %3, 1056
  br i1 %259, label %concatenate.pivot.32.109, label %concatenate.pivot.9248.112

concatenate.pivot.32.109:                         ; preds = %concatenate.pivot.1056.108
  %260 = icmp ult i32 %3, 32
  br i1 %260, label %concatenate.pivot.0.110, label %concatenate.pivot.32.111

concatenate.pivot.0.110:                          ; preds = %concatenate.pivot.32.109
  br label %concat_index_from_operand_id092

concatenate.pivot.32.111:                         ; preds = %concatenate.pivot.32.109
  br label %concat_index_from_operand_id196

concatenate.pivot.9248.112:                       ; preds = %concatenate.pivot.1056.108
  %261 = icmp ult i32 %3, 9248
  br i1 %261, label %concatenate.pivot.1056.113, label %concatenate.pivot.9248.114

concatenate.pivot.1056.113:                       ; preds = %concatenate.pivot.9248.112
  br label %concat_index_from_operand_id2100

concatenate.pivot.9248.114:                       ; preds = %concatenate.pivot.9248.112
  br label %concat_index_from_operand_id3104

concatenate.49.merge91:                           ; preds = %concat_index_from_operand_id3104, %concat_index_from_operand_id2100, %concat_index_from_operand_id196, %concat_index_from_operand_id092
  %262 = phi float [ %subtract.3995, %concat_index_from_operand_id092 ], [ %subtract.4199, %concat_index_from_operand_id196 ], [ %subtract.44103, %concat_index_from_operand_id2100 ], [ %subtract.47107, %concat_index_from_operand_id3104 ]
  br label %concatenate.pivot.1056.132

concat_index_from_operand_id0116:                 ; preds = %concatenate.pivot.0.134
  %263 = phi i32 [ 0, %concatenate.pivot.0.134 ]
  %264 = sub nsw i32 %3, %263
  %265 = getelementptr inbounds [32 x float], ptr %arg0, i32 0, i32 %264
  %266 = load float, ptr %265, align 4, !invariant.load !297
  %region_0_58_constant_17117 = load float, ptr @120, align 4
  %267 = getelementptr inbounds [32 x float], ptr %arg1, i32 0, i32 %264
  %268 = load float, ptr %267, align 4, !invariant.load !297
  %multiply.19118 = fmul float %region_0_58_constant_17117, %268
  %subtract.20119 = fsub float %266, %multiply.19118
  br label %concatenate.36.merge115

concat_index_from_operand_id1120:                 ; preds = %concatenate.pivot.32.135
  %269 = phi i32 [ 32, %concatenate.pivot.32.135 ]
  %270 = sub nsw i32 %3, %269
  %271 = mul nuw nsw i32 %270, 1
  %272 = add nuw nsw i32 0, %271
  %273 = urem i32 %272, 128
  %274 = udiv i32 %272, 128
  %275 = udiv i32 %274, 8
  %276 = getelementptr inbounds [8 x [128 x float]], ptr %arg4, i32 0, i32 %274, i32 %273
  %277 = load float, ptr %276, align 4, !invariant.load !297
  %region_0_58_constant_21121 = load float, ptr @119, align 4
  %278 = getelementptr inbounds [8 x [128 x float]], ptr %arg5, i32 0, i32 %274, i32 %273
  %279 = load float, ptr %278, align 4
  %multiply.23122 = fmul float %region_0_58_constant_21121, %279
  %subtract.24123 = fsub float %277, %multiply.23122
  br label %concatenate.36.merge115

concat_index_from_operand_id2124:                 ; preds = %concatenate.pivot.1056.137
  %280 = phi i32 [ 1056, %concatenate.pivot.1056.137 ]
  %281 = sub nsw i32 %3, %280
  %282 = mul nuw nsw i32 %281, 1
  %283 = add nuw nsw i32 0, %282
  %284 = urem i32 %283, 512
  %285 = udiv i32 %283, 512
  %286 = udiv i32 %285, 16
  %287 = getelementptr inbounds [16 x [512 x float]], ptr %arg8, i32 0, i32 %285, i32 %284
  %288 = load float, ptr %287, align 4, !invariant.load !297
  %region_0_58_constant_26125 = load float, ptr @118, align 4
  %289 = getelementptr inbounds [16 x [512 x float]], ptr %arg9, i32 0, i32 %285, i32 %284
  %290 = load float, ptr %289, align 4
  %multiply.28126 = fmul float %region_0_58_constant_26125, %290
  %subtract.29127 = fsub float %288, %multiply.28126
  br label %concatenate.36.merge115

concat_index_from_operand_id3128:                 ; preds = %concatenate.pivot.9248.138
  %291 = phi i32 [ 9248, %concatenate.pivot.9248.138 ]
  %292 = sub nsw i32 %3, %291
  %293 = mul nuw nsw i32 %292, 1
  %294 = add nuw nsw i32 0, %293
  %295 = urem i32 %294, 8
  %296 = udiv i32 %294, 8
  %297 = udiv i32 %296, 8192
  %298 = getelementptr inbounds [8192 x [8 x float]], ptr %arg12, i32 0, i32 %296, i32 %295
  %299 = load float, ptr %298, align 4, !invariant.load !297
  %region_0_58_constant_31129 = load float, ptr @117, align 4
  %300 = getelementptr inbounds [8192 x [8 x float]], ptr %arg13, i32 0, i32 %296, i32 %295
  %301 = load float, ptr %300, align 4
  %multiply.33130 = fmul float %region_0_58_constant_31129, %301
  %subtract.34131 = fsub float %299, %multiply.33130
  br label %concatenate.36.merge115

concatenate.pivot.1056.132:                       ; preds = %concatenate.49.merge91
  %302 = icmp ult i32 %3, 1056
  br i1 %302, label %concatenate.pivot.32.133, label %concatenate.pivot.9248.136

concatenate.pivot.32.133:                         ; preds = %concatenate.pivot.1056.132
  %303 = icmp ult i32 %3, 32
  br i1 %303, label %concatenate.pivot.0.134, label %concatenate.pivot.32.135

concatenate.pivot.0.134:                          ; preds = %concatenate.pivot.32.133
  br label %concat_index_from_operand_id0116

concatenate.pivot.32.135:                         ; preds = %concatenate.pivot.32.133
  br label %concat_index_from_operand_id1120

concatenate.pivot.9248.136:                       ; preds = %concatenate.pivot.1056.132
  %304 = icmp ult i32 %3, 9248
  br i1 %304, label %concatenate.pivot.1056.137, label %concatenate.pivot.9248.138

concatenate.pivot.1056.137:                       ; preds = %concatenate.pivot.9248.136
  br label %concat_index_from_operand_id2124

concatenate.pivot.9248.138:                       ; preds = %concatenate.pivot.9248.136
  br label %concat_index_from_operand_id3128

concatenate.36.merge115:                          ; preds = %concat_index_from_operand_id3128, %concat_index_from_operand_id2124, %concat_index_from_operand_id1120, %concat_index_from_operand_id0116
  %305 = phi float [ %subtract.20119, %concat_index_from_operand_id0116 ], [ %subtract.24123, %concat_index_from_operand_id1120 ], [ %subtract.29127, %concat_index_from_operand_id2124 ], [ %subtract.34131, %concat_index_from_operand_id3128 ]
  br label %concatenate.pivot.1056.156

concat_index_from_operand_id0140:                 ; preds = %concatenate.pivot.0.158
  %306 = phi i32 [ 0, %concatenate.pivot.0.158 ]
  %307 = sub nsw i32 %3, %306
  %308 = getelementptr inbounds [32 x float], ptr %arg2, i32 0, i32 %307
  %309 = load float, ptr %308, align 4, !invariant.load !297
  %region_0_58_constant_17141 = load float, ptr @120, align 4
  %310 = getelementptr inbounds [32 x float], ptr %arg3, i32 0, i32 %307
  %311 = load float, ptr %310, align 4, !invariant.load !297
  %multiply.38142 = fmul float %region_0_58_constant_17141, %311
  %subtract.39143 = fsub float %309, %multiply.38142
  br label %concatenate.49.merge139

concat_index_from_operand_id1144:                 ; preds = %concatenate.pivot.32.159
  %312 = phi i32 [ 32, %concatenate.pivot.32.159 ]
  %313 = sub nsw i32 %3, %312
  %314 = mul nuw nsw i32 %313, 1
  %315 = add nuw nsw i32 0, %314
  %316 = urem i32 %315, 128
  %317 = udiv i32 %315, 128
  %318 = udiv i32 %317, 8
  %319 = getelementptr inbounds [8 x [128 x float]], ptr %arg6, i32 0, i32 %317, i32 %316
  %320 = load float, ptr %319, align 4, !invariant.load !297
  %region_0_58_constant_21145 = load float, ptr @119, align 4
  %321 = getelementptr inbounds [8 x [128 x float]], ptr %arg7, i32 0, i32 %317, i32 %316
  %322 = load float, ptr %321, align 4
  %multiply.40146 = fmul float %region_0_58_constant_21145, %322
  %subtract.41147 = fsub float %320, %multiply.40146
  br label %concatenate.49.merge139

concat_index_from_operand_id2148:                 ; preds = %concatenate.pivot.1056.161
  %323 = phi i32 [ 1056, %concatenate.pivot.1056.161 ]
  %324 = sub nsw i32 %3, %323
  %325 = mul nuw nsw i32 %324, 1
  %326 = add nuw nsw i32 0, %325
  %327 = urem i32 %326, 512
  %328 = udiv i32 %326, 512
  %329 = udiv i32 %328, 16
  %330 = getelementptr inbounds [16 x [512 x float]], ptr %arg10, i32 0, i32 %328, i32 %327
  %331 = load float, ptr %330, align 4, !invariant.load !297
  %region_0_58_constant_26149 = load float, ptr @118, align 4
  %332 = getelementptr inbounds [16 x [512 x float]], ptr %arg11, i32 0, i32 %328, i32 %327
  %333 = load float, ptr %332, align 4
  %multiply.43150 = fmul float %region_0_58_constant_26149, %333
  %subtract.44151 = fsub float %331, %multiply.43150
  br label %concatenate.49.merge139

concat_index_from_operand_id3152:                 ; preds = %concatenate.pivot.9248.162
  %334 = phi i32 [ 9248, %concatenate.pivot.9248.162 ]
  %335 = sub nsw i32 %3, %334
  %336 = mul nuw nsw i32 %335, 1
  %337 = add nuw nsw i32 0, %336
  %338 = urem i32 %337, 8
  %339 = udiv i32 %337, 8
  %340 = udiv i32 %339, 8192
  %341 = getelementptr inbounds [8192 x [8 x float]], ptr %arg14, i32 0, i32 %339, i32 %338
  %342 = load float, ptr %341, align 4, !invariant.load !297
  %region_0_58_constant_31153 = load float, ptr @117, align 4
  %343 = getelementptr inbounds [8192 x [8 x float]], ptr %arg15, i32 0, i32 %339, i32 %338
  %344 = load float, ptr %343, align 4
  %multiply.46154 = fmul float %region_0_58_constant_31153, %344
  %subtract.47155 = fsub float %342, %multiply.46154
  br label %concatenate.49.merge139

concatenate.pivot.1056.156:                       ; preds = %concatenate.36.merge115
  %345 = icmp ult i32 %3, 1056
  br i1 %345, label %concatenate.pivot.32.157, label %concatenate.pivot.9248.160

concatenate.pivot.32.157:                         ; preds = %concatenate.pivot.1056.156
  %346 = icmp ult i32 %3, 32
  br i1 %346, label %concatenate.pivot.0.158, label %concatenate.pivot.32.159

concatenate.pivot.0.158:                          ; preds = %concatenate.pivot.32.157
  br label %concat_index_from_operand_id0140

concatenate.pivot.32.159:                         ; preds = %concatenate.pivot.32.157
  br label %concat_index_from_operand_id1144

concatenate.pivot.9248.160:                       ; preds = %concatenate.pivot.1056.156
  %347 = icmp ult i32 %3, 9248
  br i1 %347, label %concatenate.pivot.1056.161, label %concatenate.pivot.9248.162

concatenate.pivot.1056.161:                       ; preds = %concatenate.pivot.9248.160
  br label %concat_index_from_operand_id2148

concatenate.pivot.9248.162:                       ; preds = %concatenate.pivot.9248.160
  br label %concat_index_from_operand_id3152

concatenate.49.merge139:                          ; preds = %concat_index_from_operand_id3152, %concat_index_from_operand_id2148, %concat_index_from_operand_id1144, %concat_index_from_operand_id0140
  %348 = phi float [ %subtract.39143, %concat_index_from_operand_id0140 ], [ %subtract.41147, %concat_index_from_operand_id1144 ], [ %subtract.44151, %concat_index_from_operand_id2148 ], [ %subtract.47155, %concat_index_from_operand_id3152 ]
  %349 = icmp sge i32 %3, 0
  %350 = icmp slt i32 %3, 32
  %351 = and i1 %349, %350
  br i1 %351, label %slice0-true, label %slice0-after

slice0-after:                                     ; preds = %slice0-true, %concatenate.49.merge139
  %352 = icmp sge i32 %3, 0
  %353 = icmp slt i32 %3, 32
  %354 = and i1 %352, %353
  br i1 %354, label %slice1-true, label %slice1-after

slice1-after:                                     ; preds = %slice1-true, %slice0-after
  %355 = icmp sge i32 %3, 32
  %356 = icmp slt i32 %3, 1056
  %357 = and i1 %355, %356
  br i1 %357, label %slice2-true, label %slice2-after

slice2-after:                                     ; preds = %slice2-true, %slice1-after
  %358 = icmp sge i32 %3, 32
  %359 = icmp slt i32 %3, 1056
  %360 = and i1 %358, %359
  br i1 %360, label %slice3-true, label %slice3-after

slice3-after:                                     ; preds = %slice3-true, %slice2-after
  %361 = icmp sge i32 %3, 1056
  %362 = icmp slt i32 %3, 9248
  %363 = and i1 %361, %362
  br i1 %363, label %slice4-true, label %slice4-after

slice4-after:                                     ; preds = %slice4-true, %slice3-after
  %364 = icmp sge i32 %3, 1056
  %365 = icmp slt i32 %3, 9248
  %366 = and i1 %364, %365
  br i1 %366, label %slice5-true, label %slice5-after

slice5-after:                                     ; preds = %slice5-true, %slice4-after
  %367 = icmp sge i32 %3, 9248
  %368 = icmp slt i32 %3, 74784
  %369 = and i1 %367, %368
  br i1 %369, label %slice6-true, label %slice6-after

slice6-after:                                     ; preds = %slice6-true, %slice5-after
  %370 = icmp sge i32 %3, 9248
  %371 = icmp slt i32 %3, 74784
  %372 = and i1 %370, %371
  br i1 %372, label %slice7-true, label %slice7-after

slice7-after:                                     ; preds = %slice7-true, %slice6-after
  br label %copy_fusion_1.in_bounds-after

slice0-true:                                      ; preds = %concatenate.49.merge139
  %373 = sub i32 %3, 0
  %374 = getelementptr inbounds [32 x float], ptr %arg16, i32 0, i32 %373
  store float %47, ptr %374, align 4
  br label %slice0-after

slice1-true:                                      ; preds = %slice0-after
  %375 = sub i32 %3, 0
  %376 = getelementptr inbounds [32 x float], ptr %arg17, i32 0, i32 %375
  store float %90, ptr %376, align 4
  br label %slice1-after

slice2-true:                                      ; preds = %slice1-after
  %377 = sub i32 %3, 32
  %378 = getelementptr inbounds [1024 x float], ptr %arg5, i32 0, i32 %377
  store float %133, ptr %378, align 4
  br label %slice2-after

slice3-true:                                      ; preds = %slice2-after
  %379 = sub i32 %3, 32
  %380 = getelementptr inbounds [1024 x float], ptr %arg7, i32 0, i32 %379
  store float %176, ptr %380, align 4
  br label %slice3-after

slice4-true:                                      ; preds = %slice3-after
  %381 = sub i32 %3, 1056
  %382 = getelementptr inbounds [8192 x float], ptr %arg9, i32 0, i32 %381
  store float %219, ptr %382, align 4
  br label %slice4-after

slice5-true:                                      ; preds = %slice4-after
  %383 = sub i32 %3, 1056
  %384 = getelementptr inbounds [8192 x float], ptr %arg11, i32 0, i32 %383
  store float %262, ptr %384, align 4
  br label %slice5-after

slice6-true:                                      ; preds = %slice5-after
  %385 = sub i32 %3, 9248
  %386 = getelementptr inbounds [65536 x float], ptr %arg13, i32 0, i32 %385
  store float %305, ptr %386, align 4
  br label %slice6-after

slice7-true:                                      ; preds = %slice6-after
  %387 = sub i32 %3, 9248
  %388 = getelementptr inbounds [65536 x float], ptr %arg15, i32 0, i32 %387
  store float %348, ptr %388, align 4
  br label %slice7-after
}

define void @copy_fusion(ptr noalias align 16 dereferenceable(65536) %arg0, ptr noalias align 128 dereferenceable(65536) %arg1, ptr noalias align 16 dereferenceable(65536) %arg2, ptr noalias align 128 dereferenceable(65536) %arg3, ptr noalias align 16 dereferenceable(65536) %arg4, ptr noalias align 128 dereferenceable(65536) %arg5, ptr noalias align 16 dereferenceable(65536) %arg6, ptr noalias align 128 dereferenceable(65536) %arg7, ptr noalias align 16 dereferenceable(65536) %arg8, ptr noalias align 128 dereferenceable(65536) %arg9, ptr noalias align 16 dereferenceable(65536) %arg10, ptr noalias align 128 dereferenceable(65536) %arg11) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !351
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 16384
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = urem i32 %3, 512
  %5 = udiv i32 %linear_index, 512
  %6 = icmp ult i32 %linear_index, 16384
  br i1 %6, label %copy_fusion.in_bounds-true, label %copy_fusion.in_bounds-after

copy_fusion.in_bounds-after:                      ; preds = %copy_fusion.in_bounds-true, %entry
  ret void

copy_fusion.in_bounds-true:                       ; preds = %entry
  %7 = getelementptr inbounds float, ptr %arg0, i32 %linear_index
  %8 = load float, ptr %7, align 4, !invariant.load !297
  %region_0_30_constant_13 = load float, ptr @122, align 4
  %9 = getelementptr inbounds float, ptr %arg1, i32 %linear_index
  %10 = load float, ptr %9, align 4
  %multiply.15 = fmul float %region_0_30_constant_13, %10
  %subtract.16 = fsub float %8, %multiply.15
  %11 = insertvalue { float, float, float, float, float, float } undef, float %subtract.16, 0
  %12 = getelementptr inbounds float, ptr %arg2, i32 %linear_index
  %13 = load float, ptr %12, align 4, !invariant.load !297
  %14 = getelementptr inbounds float, ptr %arg3, i32 %linear_index
  %15 = load float, ptr %14, align 4
  %multiply.17 = fmul float %region_0_30_constant_13, %15
  %subtract.18 = fsub float %13, %multiply.17
  %16 = insertvalue { float, float, float, float, float, float } %11, float %subtract.18, 1
  %17 = getelementptr inbounds float, ptr %arg4, i32 %linear_index
  %18 = load float, ptr %17, align 4, !invariant.load !297
  %19 = getelementptr inbounds float, ptr %arg5, i32 %linear_index
  %20 = load float, ptr %19, align 4
  %multiply.19 = fmul float %region_0_30_constant_13, %20
  %subtract.20 = fsub float %18, %multiply.19
  %21 = insertvalue { float, float, float, float, float, float } %16, float %subtract.20, 2
  %22 = getelementptr inbounds float, ptr %arg6, i32 %linear_index
  %23 = load float, ptr %22, align 4, !invariant.load !297
  %region_0_30_constant_21 = load float, ptr @121, align 4
  %24 = getelementptr inbounds float, ptr %arg7, i32 %linear_index
  %25 = load float, ptr %24, align 4
  %multiply.23 = fmul float %region_0_30_constant_21, %25
  %subtract.24 = fsub float %23, %multiply.23
  %26 = insertvalue { float, float, float, float, float, float } %21, float %subtract.24, 3
  %27 = getelementptr inbounds float, ptr %arg8, i32 %linear_index
  %28 = load float, ptr %27, align 4, !invariant.load !297
  %29 = getelementptr inbounds float, ptr %arg9, i32 %linear_index
  %30 = load float, ptr %29, align 4
  %multiply.25 = fmul float %region_0_30_constant_21, %30
  %subtract.26 = fsub float %28, %multiply.25
  %31 = insertvalue { float, float, float, float, float, float } %26, float %subtract.26, 4
  %32 = getelementptr inbounds float, ptr %arg10, i32 %linear_index
  %33 = load float, ptr %32, align 4, !invariant.load !297
  %34 = getelementptr inbounds float, ptr %arg11, i32 %linear_index
  %35 = load float, ptr %34, align 4
  %multiply.27 = fmul float %region_0_30_constant_21, %35
  %subtract.28 = fsub float %33, %multiply.27
  %36 = insertvalue { float, float, float, float, float, float } %31, float %subtract.28, 5
  %37 = extractvalue { float, float, float, float, float, float } %36, 0
  %38 = getelementptr inbounds float, ptr %arg11, i32 %linear_index
  store float %37, ptr %38, align 4
  %39 = extractvalue { float, float, float, float, float, float } %36, 1
  %40 = getelementptr inbounds float, ptr %arg9, i32 %linear_index
  store float %39, ptr %40, align 4
  %41 = extractvalue { float, float, float, float, float, float } %36, 2
  %42 = getelementptr inbounds float, ptr %arg7, i32 %linear_index
  store float %41, ptr %42, align 4
  %43 = extractvalue { float, float, float, float, float, float } %36, 3
  %44 = getelementptr inbounds float, ptr %arg5, i32 %linear_index
  store float %43, ptr %44, align 4
  %45 = extractvalue { float, float, float, float, float, float } %36, 4
  %46 = getelementptr inbounds float, ptr %arg3, i32 %linear_index
  store float %45, ptr %46, align 4
  %47 = extractvalue { float, float, float, float, float, float } %36, 5
  %48 = getelementptr inbounds float, ptr %arg1, i32 %linear_index
  store float %47, ptr %48, align 4
  br label %copy_fusion.in_bounds-after
}

define void @fusion_726(ptr noalias align 16 dereferenceable(80) %arg0, ptr noalias align 128 dereferenceable(80) %arg1, ptr noalias align 16 dereferenceable(256) %arg2, ptr noalias align 128 dereferenceable(256) %arg3, ptr noalias align 16 dereferenceable(131072) %arg4, ptr noalias align 128 dereferenceable(131072) %arg5, ptr noalias align 16 dereferenceable(131072) %arg6, ptr noalias align 128 dereferenceable(131072) %arg7, ptr noalias align 16 dereferenceable(131072) %arg8, ptr noalias align 128 dereferenceable(131072) %arg9, ptr noalias align 16 dereferenceable(131072) %arg10, ptr noalias align 128 dereferenceable(131072) %arg11, ptr noalias align 16 dereferenceable(131072) %arg12, ptr noalias align 128 dereferenceable(131072) %arg13, ptr noalias align 16 dereferenceable(262144) %arg14, ptr noalias align 128 dereferenceable(262144) %arg15, ptr noalias align 128 dereferenceable(131072) %arg16, ptr noalias align 128 dereferenceable(131072) %arg17, ptr noalias align 128 dereferenceable(131072) %arg18, ptr noalias align 128 dereferenceable(131072) %arg19, ptr noalias align 128 dereferenceable(131072) %arg20, ptr noalias align 128 dereferenceable(262144) %arg21) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !541
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 230400
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = icmp ult i32 %linear_index, 229460
  br i1 %4, label %fusion_726.in_bounds-true, label %fusion_726.in_bounds-after

fusion_726.in_bounds-after:                       ; preds = %slice7-after, %entry
  ret void

fusion_726.in_bounds-true:                        ; preds = %entry
  br label %concatenate.pivot.65620.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %5 = phi i32 [ 0, %concatenate.pivot.0. ]
  %6 = sub nsw i32 %3, %5
  %7 = getelementptr inbounds [20 x float], ptr %arg0, i32 0, i32 %6
  %8 = load float, ptr %7, align 4, !invariant.load !297
  %region_0_55_constant_17 = load float, ptr @123, align 4
  %9 = getelementptr inbounds [20 x float], ptr %arg1, i32 0, i32 %6
  %10 = load float, ptr %9, align 4
  %multiply.19 = fmul float %region_0_55_constant_17, %10
  %subtract.20 = fsub float %8, %multiply.19
  br label %concatenate.45.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.20.8
  %11 = phi i32 [ 20, %concatenate.pivot.20.8 ]
  %12 = sub nsw i32 %3, %11
  %13 = getelementptr inbounds [64 x float], ptr %arg2, i32 0, i32 %12
  %14 = load float, ptr %13, align 4, !invariant.load !297
  %region_0_55_constant_171 = load float, ptr @123, align 4
  %15 = getelementptr inbounds [64 x float], ptr %arg3, i32 0, i32 %12
  %16 = load float, ptr %15, align 4
  %multiply.22 = fmul float %region_0_55_constant_171, %16
  %subtract.23 = fsub float %14, %multiply.22
  br label %concatenate.45.merge

concat_index_from_operand_id2:                    ; preds = %concatenate.pivot.84.9
  %17 = phi i32 [ 84, %concatenate.pivot.84.9 ]
  %18 = sub nsw i32 %3, %17
  %19 = mul nuw nsw i32 %18, 1
  %20 = add nuw nsw i32 0, %19
  %21 = urem i32 %20, 128
  %22 = udiv i32 %20, 128
  %23 = udiv i32 %22, 256
  %24 = getelementptr inbounds [256 x [128 x float]], ptr %arg4, i32 0, i32 %22, i32 %21
  %25 = load float, ptr %24, align 4, !invariant.load !297
  %region_0_55_constant_172 = load float, ptr @123, align 4
  %26 = getelementptr inbounds [256 x [128 x float]], ptr %arg5, i32 0, i32 %22, i32 %21
  %27 = load float, ptr %26, align 4, !invariant.load !297
  %multiply.25 = fmul float %region_0_55_constant_172, %27
  %subtract.26 = fsub float %25, %multiply.25
  br label %concatenate.45.merge

concat_index_from_operand_id3:                    ; preds = %concatenate.pivot.32852.10
  %28 = phi i32 [ 32852, %concatenate.pivot.32852.10 ]
  %29 = sub nsw i32 %3, %28
  %30 = mul nuw nsw i32 %29, 1
  %31 = add nuw nsw i32 0, %30
  %32 = urem i32 %31, 128
  %33 = udiv i32 %31, 128
  %34 = udiv i32 %33, 256
  %35 = getelementptr inbounds [256 x [128 x float]], ptr %arg6, i32 0, i32 %33, i32 %32
  %36 = load float, ptr %35, align 4, !invariant.load !297
  %region_0_55_constant_173 = load float, ptr @123, align 4
  %37 = getelementptr inbounds [256 x [128 x float]], ptr %arg7, i32 0, i32 %33, i32 %32
  %38 = load float, ptr %37, align 4, !invariant.load !297
  %multiply.28 = fmul float %region_0_55_constant_173, %38
  %subtract.29 = fsub float %36, %multiply.28
  br label %concatenate.45.merge

concat_index_from_operand_id4:                    ; preds = %concatenate.pivot.65620.11
  %39 = phi i32 [ 65620, %concatenate.pivot.65620.11 ]
  %40 = sub nsw i32 %3, %39
  %41 = mul nuw nsw i32 %40, 1
  %42 = add nuw nsw i32 0, %41
  %43 = urem i32 %42, 512
  %44 = udiv i32 %42, 512
  %45 = udiv i32 %44, 64
  %46 = getelementptr inbounds [64 x [512 x float]], ptr %arg8, i32 0, i32 %44, i32 %43
  %47 = load float, ptr %46, align 4, !invariant.load !297
  %region_0_55_constant_174 = load float, ptr @123, align 4
  %48 = getelementptr inbounds [64 x [512 x float]], ptr %arg9, i32 0, i32 %44, i32 %43
  %49 = load float, ptr %48, align 4, !invariant.load !297
  %multiply.32 = fmul float %region_0_55_constant_174, %49
  %subtract.33 = fsub float %47, %multiply.32
  br label %concatenate.45.merge

concat_index_from_operand_id5:                    ; preds = %concatenate.pivot.98388.12
  %50 = phi i32 [ 98388, %concatenate.pivot.98388.12 ]
  %51 = sub nsw i32 %3, %50
  %52 = mul nuw nsw i32 %51, 1
  %53 = add nuw nsw i32 0, %52
  %54 = urem i32 %53, 512
  %55 = udiv i32 %53, 512
  %56 = udiv i32 %55, 64
  %57 = getelementptr inbounds [64 x [512 x float]], ptr %arg10, i32 0, i32 %55, i32 %54
  %58 = load float, ptr %57, align 4, !invariant.load !297
  %region_0_55_constant_175 = load float, ptr @123, align 4
  %59 = getelementptr inbounds [64 x [512 x float]], ptr %arg11, i32 0, i32 %55, i32 %54
  %60 = load float, ptr %59, align 4, !invariant.load !297
  %multiply.35 = fmul float %region_0_55_constant_175, %60
  %subtract.36 = fsub float %58, %multiply.35
  br label %concatenate.45.merge

concat_index_from_operand_id6:                    ; preds = %concatenate.pivot.131156.13
  %61 = phi i32 [ 131156, %concatenate.pivot.131156.13 ]
  %62 = sub nsw i32 %3, %61
  %63 = mul nuw nsw i32 %62, 1
  %64 = add nuw nsw i32 0, %63
  %65 = urem i32 %64, 128
  %66 = udiv i32 %64, 128
  %67 = udiv i32 %66, 256
  %68 = getelementptr inbounds [256 x [128 x float]], ptr %arg12, i32 0, i32 %66, i32 %65
  %69 = load float, ptr %68, align 4, !invariant.load !297
  %region_0_55_constant_176 = load float, ptr @123, align 4
  %70 = getelementptr inbounds [256 x [128 x float]], ptr %arg13, i32 0, i32 %66, i32 %65
  %71 = load float, ptr %70, align 4, !invariant.load !297
  %multiply.38 = fmul float %region_0_55_constant_176, %71
  %subtract.39 = fsub float %69, %multiply.38
  br label %concatenate.45.merge

concat_index_from_operand_id7:                    ; preds = %concatenate.pivot.163924.14
  %72 = phi i32 [ 163924, %concatenate.pivot.163924.14 ]
  %73 = sub nsw i32 %3, %72
  %74 = mul nuw nsw i32 %73, 1
  %75 = add nuw nsw i32 0, %74
  %76 = urem i32 %75, 512
  %77 = udiv i32 %75, 512
  %78 = udiv i32 %77, 128
  %79 = getelementptr inbounds [128 x [512 x float]], ptr %arg14, i32 0, i32 %77, i32 %76
  %80 = load float, ptr %79, align 4, !invariant.load !297
  %region_0_55_constant_177 = load float, ptr @123, align 4
  %81 = getelementptr inbounds [128 x [512 x float]], ptr %arg15, i32 0, i32 %77, i32 %76
  %82 = load float, ptr %81, align 4, !invariant.load !297
  %multiply.42 = fmul float %region_0_55_constant_177, %82
  %subtract.43 = fsub float %80, %multiply.42
  br label %concatenate.45.merge

concatenate.pivot.65620.:                         ; preds = %fusion_726.in_bounds-true
  %83 = icmp ult i32 %3, 65620
  br i1 %83, label %concatenate.pivot.84., label %concatenate.pivot.131156.

concatenate.pivot.84.:                            ; preds = %concatenate.pivot.65620.
  %84 = icmp ult i32 %3, 84
  br i1 %84, label %concatenate.pivot.20., label %concatenate.pivot.32852.

concatenate.pivot.20.:                            ; preds = %concatenate.pivot.84.
  %85 = icmp ult i32 %3, 20
  br i1 %85, label %concatenate.pivot.0., label %concatenate.pivot.20.8

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.20.
  br label %concat_index_from_operand_id0

concatenate.pivot.20.8:                           ; preds = %concatenate.pivot.20.
  br label %concat_index_from_operand_id1

concatenate.pivot.32852.:                         ; preds = %concatenate.pivot.84.
  %86 = icmp ult i32 %3, 32852
  br i1 %86, label %concatenate.pivot.84.9, label %concatenate.pivot.32852.10

concatenate.pivot.84.9:                           ; preds = %concatenate.pivot.32852.
  br label %concat_index_from_operand_id2

concatenate.pivot.32852.10:                       ; preds = %concatenate.pivot.32852.
  br label %concat_index_from_operand_id3

concatenate.pivot.131156.:                        ; preds = %concatenate.pivot.65620.
  %87 = icmp ult i32 %3, 131156
  br i1 %87, label %concatenate.pivot.98388., label %concatenate.pivot.163924.

concatenate.pivot.98388.:                         ; preds = %concatenate.pivot.131156.
  %88 = icmp ult i32 %3, 98388
  br i1 %88, label %concatenate.pivot.65620.11, label %concatenate.pivot.98388.12

concatenate.pivot.65620.11:                       ; preds = %concatenate.pivot.98388.
  br label %concat_index_from_operand_id4

concatenate.pivot.98388.12:                       ; preds = %concatenate.pivot.98388.
  br label %concat_index_from_operand_id5

concatenate.pivot.163924.:                        ; preds = %concatenate.pivot.131156.
  %89 = icmp ult i32 %3, 163924
  br i1 %89, label %concatenate.pivot.131156.13, label %concatenate.pivot.163924.14

concatenate.pivot.131156.13:                      ; preds = %concatenate.pivot.163924.
  br label %concat_index_from_operand_id6

concatenate.pivot.163924.14:                      ; preds = %concatenate.pivot.163924.
  br label %concat_index_from_operand_id7

concatenate.45.merge:                             ; preds = %concat_index_from_operand_id7, %concat_index_from_operand_id6, %concat_index_from_operand_id5, %concat_index_from_operand_id4, %concat_index_from_operand_id3, %concat_index_from_operand_id2, %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %90 = phi float [ %subtract.20, %concat_index_from_operand_id0 ], [ %subtract.23, %concat_index_from_operand_id1 ], [ %subtract.26, %concat_index_from_operand_id2 ], [ %subtract.29, %concat_index_from_operand_id3 ], [ %subtract.33, %concat_index_from_operand_id4 ], [ %subtract.36, %concat_index_from_operand_id5 ], [ %subtract.39, %concat_index_from_operand_id6 ], [ %subtract.43, %concat_index_from_operand_id7 ]
  %91 = icmp sge i32 %3, 0
  %92 = icmp slt i32 %3, 20
  %93 = and i1 %91, %92
  br i1 %93, label %slice0-true, label %slice0-after

slice0-after:                                     ; preds = %slice0-true, %concatenate.45.merge
  %94 = icmp sge i32 %3, 20
  %95 = icmp slt i32 %3, 84
  %96 = and i1 %94, %95
  br i1 %96, label %slice1-true, label %slice1-after

slice1-after:                                     ; preds = %slice1-true, %slice0-after
  %97 = icmp sge i32 %3, 84
  %98 = icmp slt i32 %3, 32852
  %99 = and i1 %97, %98
  br i1 %99, label %slice2-true, label %slice2-after

slice2-after:                                     ; preds = %slice2-true, %slice1-after
  %100 = icmp sge i32 %3, 32852
  %101 = icmp slt i32 %3, 65620
  %102 = and i1 %100, %101
  br i1 %102, label %slice3-true, label %slice3-after

slice3-after:                                     ; preds = %slice3-true, %slice2-after
  %103 = icmp sge i32 %3, 65620
  %104 = icmp slt i32 %3, 98388
  %105 = and i1 %103, %104
  br i1 %105, label %slice4-true, label %slice4-after

slice4-after:                                     ; preds = %slice4-true, %slice3-after
  %106 = icmp sge i32 %3, 98388
  %107 = icmp slt i32 %3, 131156
  %108 = and i1 %106, %107
  br i1 %108, label %slice5-true, label %slice5-after

slice5-after:                                     ; preds = %slice5-true, %slice4-after
  %109 = icmp sge i32 %3, 131156
  %110 = icmp slt i32 %3, 163924
  %111 = and i1 %109, %110
  br i1 %111, label %slice6-true, label %slice6-after

slice6-after:                                     ; preds = %slice6-true, %slice5-after
  %112 = icmp sge i32 %3, 163924
  %113 = icmp slt i32 %3, 229460
  %114 = and i1 %112, %113
  br i1 %114, label %slice7-true, label %slice7-after

slice7-after:                                     ; preds = %slice7-true, %slice6-after
  br label %fusion_726.in_bounds-after

slice0-true:                                      ; preds = %concatenate.45.merge
  %115 = sub i32 %3, 0
  %116 = getelementptr inbounds [20 x float], ptr %arg1, i32 0, i32 %115
  store float %90, ptr %116, align 4
  br label %slice0-after

slice1-true:                                      ; preds = %slice0-after
  %117 = sub i32 %3, 20
  %118 = getelementptr inbounds [64 x float], ptr %arg3, i32 0, i32 %117
  store float %90, ptr %118, align 4
  br label %slice1-after

slice2-true:                                      ; preds = %slice1-after
  %119 = sub i32 %3, 84
  %120 = getelementptr inbounds [32768 x float], ptr %arg16, i32 0, i32 %119
  store float %90, ptr %120, align 4
  br label %slice2-after

slice3-true:                                      ; preds = %slice2-after
  %121 = sub i32 %3, 32852
  %122 = getelementptr inbounds [32768 x float], ptr %arg17, i32 0, i32 %121
  store float %90, ptr %122, align 4
  br label %slice3-after

slice4-true:                                      ; preds = %slice3-after
  %123 = sub i32 %3, 65620
  %124 = getelementptr inbounds [32768 x float], ptr %arg18, i32 0, i32 %123
  store float %90, ptr %124, align 4
  br label %slice4-after

slice5-true:                                      ; preds = %slice4-after
  %125 = sub i32 %3, 98388
  %126 = getelementptr inbounds [32768 x float], ptr %arg19, i32 0, i32 %125
  store float %90, ptr %126, align 4
  br label %slice5-after

slice6-true:                                      ; preds = %slice5-after
  %127 = sub i32 %3, 131156
  %128 = getelementptr inbounds [32768 x float], ptr %arg20, i32 0, i32 %127
  store float %90, ptr %128, align 4
  br label %slice6-after

slice7-true:                                      ; preds = %slice6-after
  %129 = sub i32 %3, 163924
  %130 = getelementptr inbounds [65536 x float], ptr %arg21, i32 0, i32 %129
  store float %90, ptr %130, align 4
  br label %slice7-after
}

define void @fusion_712(ptr noalias align 16 dereferenceable(4194304) %arg0, ptr noalias align 128 dereferenceable(4194304) %arg1, ptr noalias align 16 dereferenceable(4194304) %arg2, ptr noalias align 128 dereferenceable(4194304) %arg3, ptr noalias align 128 dereferenceable(4194304) %arg4, ptr noalias align 128 dereferenceable(4194304) %arg5) {
entry:
  %loop.invar_address = alloca i32, align 4
  store i32 0, ptr %loop.invar_address, align 4
  br label %loop.loop_header

loop.loop_header:                                 ; preds = %fusion_712.in_bounds-after, %entry
  %loop.indvar = load i32, ptr %loop.invar_address, align 4
  %0 = icmp uge i32 %loop.indvar, 1048576
  br i1 %0, label %loop.loop_exit, label %loop.loop_body

loop.loop_body:                                   ; preds = %loop.loop_header
  %invar.inc = add nuw nsw i32 %loop.indvar, 442368
  store i32 %invar.inc, ptr %loop.invar_address, align 4
  %1 = icmp eq i32 %loop.indvar, 0
  %2 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !379
  %3 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !361
  %4 = mul nuw nsw i32 %2, 128
  %linear_index = add nuw nsw i32 %4, %3
  %linear_index_in_range = icmp ult i32 %linear_index, 110592
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %linear_index_plus_base = add nuw nsw i32 %linear_index_base, %loop.indvar
  %5 = udiv i32 %linear_index_plus_base, 1
  %6 = urem i32 %5, 128
  %7 = udiv i32 %linear_index_plus_base, 128
  %linear_index1 = add nuw nsw i32 %linear_index_plus_base, 1
  %8 = udiv i32 %linear_index1, 1
  %9 = urem i32 %8, 128
  %10 = udiv i32 %linear_index1, 128
  %linear_index2 = add nuw nsw i32 %linear_index_plus_base, 2
  %11 = udiv i32 %linear_index2, 1
  %12 = urem i32 %11, 128
  %13 = udiv i32 %linear_index2, 128
  %linear_index3 = add nuw nsw i32 %linear_index_plus_base, 3
  %14 = udiv i32 %linear_index3, 1
  %15 = urem i32 %14, 128
  %16 = udiv i32 %linear_index3, 128
  %17 = icmp ult i32 %linear_index_plus_base, 1048576
  br i1 %17, label %fusion_712.in_bounds-true, label %fusion_712.in_bounds-after

fusion_712.in_bounds-after:                       ; preds = %fusion_712.in_bounds-true, %loop.loop_body
  br label %loop.loop_header, !llvm.loop !542

loop.loop_exit:                                   ; preds = %loop.loop_header
  ret void

fusion_712.in_bounds-true:                        ; preds = %loop.loop_body
  %18 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_plus_base
  %19 = load float, ptr %18, align 4, !invariant.load !297
  %region_0_12_constant_5 = load float, ptr @124, align 4
  %20 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_plus_base
  %21 = load float, ptr %20, align 4, !invariant.load !297
  %multiply.7 = fmul float %region_0_12_constant_5, %21
  %subtract.8 = fsub float %19, %multiply.7
  %22 = insertvalue { float, float } undef, float %subtract.8, 0
  %23 = getelementptr inbounds float, ptr %arg2, i32 %linear_index_plus_base
  %24 = load float, ptr %23, align 4, !invariant.load !297
  %25 = getelementptr inbounds float, ptr %arg3, i32 %linear_index_plus_base
  %26 = load float, ptr %25, align 4, !invariant.load !297
  %multiply.9 = fmul float %region_0_12_constant_5, %26
  %subtract.10 = fsub float %24, %multiply.9
  %27 = insertvalue { float, float } %22, float %subtract.10, 1
  %28 = extractvalue { float, float } %27, 0
  %29 = getelementptr inbounds float, ptr %arg4, i32 %linear_index_plus_base
  store float %28, ptr %29, align 4
  %30 = extractvalue { float, float } %27, 1
  %31 = getelementptr inbounds float, ptr %arg5, i32 %linear_index_plus_base
  store float %30, ptr %31, align 4
  %32 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  %33 = load float, ptr %32, align 4, !invariant.load !297
  %region_0_12_constant_51 = load float, ptr @124, align 4
  %34 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  %35 = load float, ptr %34, align 4, !invariant.load !297
  %multiply.72 = fmul float %region_0_12_constant_51, %35
  %subtract.83 = fsub float %33, %multiply.72
  %36 = insertvalue { float, float } undef, float %subtract.83, 0
  %37 = getelementptr inbounds float, ptr %arg2, i32 %linear_index1
  %38 = load float, ptr %37, align 4, !invariant.load !297
  %39 = getelementptr inbounds float, ptr %arg3, i32 %linear_index1
  %40 = load float, ptr %39, align 4, !invariant.load !297
  %multiply.94 = fmul float %region_0_12_constant_51, %40
  %subtract.105 = fsub float %38, %multiply.94
  %41 = insertvalue { float, float } %36, float %subtract.105, 1
  %42 = extractvalue { float, float } %41, 0
  %43 = getelementptr inbounds float, ptr %arg4, i32 %linear_index1
  store float %42, ptr %43, align 4
  %44 = extractvalue { float, float } %41, 1
  %45 = getelementptr inbounds float, ptr %arg5, i32 %linear_index1
  store float %44, ptr %45, align 4
  %46 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  %47 = load float, ptr %46, align 4, !invariant.load !297
  %region_0_12_constant_56 = load float, ptr @124, align 4
  %48 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  %49 = load float, ptr %48, align 4, !invariant.load !297
  %multiply.77 = fmul float %region_0_12_constant_56, %49
  %subtract.88 = fsub float %47, %multiply.77
  %50 = insertvalue { float, float } undef, float %subtract.88, 0
  %51 = getelementptr inbounds float, ptr %arg2, i32 %linear_index2
  %52 = load float, ptr %51, align 4, !invariant.load !297
  %53 = getelementptr inbounds float, ptr %arg3, i32 %linear_index2
  %54 = load float, ptr %53, align 4, !invariant.load !297
  %multiply.99 = fmul float %region_0_12_constant_56, %54
  %subtract.1010 = fsub float %52, %multiply.99
  %55 = insertvalue { float, float } %50, float %subtract.1010, 1
  %56 = extractvalue { float, float } %55, 0
  %57 = getelementptr inbounds float, ptr %arg4, i32 %linear_index2
  store float %56, ptr %57, align 4
  %58 = extractvalue { float, float } %55, 1
  %59 = getelementptr inbounds float, ptr %arg5, i32 %linear_index2
  store float %58, ptr %59, align 4
  %60 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  %61 = load float, ptr %60, align 4, !invariant.load !297
  %region_0_12_constant_511 = load float, ptr @124, align 4
  %62 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  %63 = load float, ptr %62, align 4, !invariant.load !297
  %multiply.712 = fmul float %region_0_12_constant_511, %63
  %subtract.813 = fsub float %61, %multiply.712
  %64 = insertvalue { float, float } undef, float %subtract.813, 0
  %65 = getelementptr inbounds float, ptr %arg2, i32 %linear_index3
  %66 = load float, ptr %65, align 4, !invariant.load !297
  %67 = getelementptr inbounds float, ptr %arg3, i32 %linear_index3
  %68 = load float, ptr %67, align 4, !invariant.load !297
  %multiply.914 = fmul float %region_0_12_constant_511, %68
  %subtract.1015 = fsub float %66, %multiply.914
  %69 = insertvalue { float, float } %64, float %subtract.1015, 1
  %70 = extractvalue { float, float } %69, 0
  %71 = getelementptr inbounds float, ptr %arg4, i32 %linear_index3
  store float %70, ptr %71, align 4
  %72 = extractvalue { float, float } %69, 1
  %73 = getelementptr inbounds float, ptr %arg5, i32 %linear_index3
  store float %72, ptr %73, align 4
  br label %fusion_712.in_bounds-after
}

define void @fusion_708(ptr noalias align 16 dereferenceable(2097152) %arg0, ptr noalias align 128 dereferenceable(2097152) %arg1, ptr noalias align 16 dereferenceable(2097152) %arg2, ptr noalias align 128 dereferenceable(2097152) %arg3) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !293
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 131072
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 64
  %5 = udiv i32 %linear_index_base, 64
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 64
  %8 = udiv i32 %linear_index1, 64
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 64
  %11 = udiv i32 %linear_index2, 64
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 64
  %14 = udiv i32 %linear_index3, 64
  %15 = icmp ult i32 %linear_index_base, 524288
  br i1 %15, label %fusion_708.in_bounds-true, label %fusion_708.in_bounds-after

fusion_708.in_bounds-after:                       ; preds = %fusion_708.in_bounds-true, %entry
  ret void

fusion_708.in_bounds-true:                        ; preds = %entry
  %16 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_base
  %17 = load float, ptr %16, align 4, !invariant.load !297
  %region_0_12_constant_5 = load float, ptr @125, align 4
  %18 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  %19 = load float, ptr %18, align 4
  %multiply.7 = fmul float %region_0_12_constant_5, %19
  %subtract.8 = fsub float %17, %multiply.7
  %20 = insertvalue { float, float } undef, float %subtract.8, 0
  %21 = getelementptr inbounds float, ptr %arg2, i32 %linear_index_base
  %22 = load float, ptr %21, align 4, !invariant.load !297
  %23 = getelementptr inbounds float, ptr %arg3, i32 %linear_index_base
  %24 = load float, ptr %23, align 4
  %multiply.9 = fmul float %region_0_12_constant_5, %24
  %subtract.10 = fsub float %22, %multiply.9
  %25 = insertvalue { float, float } %20, float %subtract.10, 1
  %26 = extractvalue { float, float } %25, 0
  %27 = getelementptr inbounds float, ptr %arg3, i32 %linear_index_base
  store float %26, ptr %27, align 4
  %28 = extractvalue { float, float } %25, 1
  %29 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  store float %28, ptr %29, align 4
  %30 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  %31 = load float, ptr %30, align 4, !invariant.load !297
  %region_0_12_constant_51 = load float, ptr @125, align 4
  %32 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  %33 = load float, ptr %32, align 4
  %multiply.72 = fmul float %region_0_12_constant_51, %33
  %subtract.83 = fsub float %31, %multiply.72
  %34 = insertvalue { float, float } undef, float %subtract.83, 0
  %35 = getelementptr inbounds float, ptr %arg2, i32 %linear_index1
  %36 = load float, ptr %35, align 4, !invariant.load !297
  %37 = getelementptr inbounds float, ptr %arg3, i32 %linear_index1
  %38 = load float, ptr %37, align 4
  %multiply.94 = fmul float %region_0_12_constant_51, %38
  %subtract.105 = fsub float %36, %multiply.94
  %39 = insertvalue { float, float } %34, float %subtract.105, 1
  %40 = extractvalue { float, float } %39, 0
  %41 = getelementptr inbounds float, ptr %arg3, i32 %linear_index1
  store float %40, ptr %41, align 4
  %42 = extractvalue { float, float } %39, 1
  %43 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  store float %42, ptr %43, align 4
  %44 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  %45 = load float, ptr %44, align 4, !invariant.load !297
  %region_0_12_constant_56 = load float, ptr @125, align 4
  %46 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  %47 = load float, ptr %46, align 4
  %multiply.77 = fmul float %region_0_12_constant_56, %47
  %subtract.88 = fsub float %45, %multiply.77
  %48 = insertvalue { float, float } undef, float %subtract.88, 0
  %49 = getelementptr inbounds float, ptr %arg2, i32 %linear_index2
  %50 = load float, ptr %49, align 4, !invariant.load !297
  %51 = getelementptr inbounds float, ptr %arg3, i32 %linear_index2
  %52 = load float, ptr %51, align 4
  %multiply.99 = fmul float %region_0_12_constant_56, %52
  %subtract.1010 = fsub float %50, %multiply.99
  %53 = insertvalue { float, float } %48, float %subtract.1010, 1
  %54 = extractvalue { float, float } %53, 0
  %55 = getelementptr inbounds float, ptr %arg3, i32 %linear_index2
  store float %54, ptr %55, align 4
  %56 = extractvalue { float, float } %53, 1
  %57 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  store float %56, ptr %57, align 4
  %58 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  %59 = load float, ptr %58, align 4, !invariant.load !297
  %region_0_12_constant_511 = load float, ptr @125, align 4
  %60 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  %61 = load float, ptr %60, align 4
  %multiply.712 = fmul float %region_0_12_constant_511, %61
  %subtract.813 = fsub float %59, %multiply.712
  %62 = insertvalue { float, float } undef, float %subtract.813, 0
  %63 = getelementptr inbounds float, ptr %arg2, i32 %linear_index3
  %64 = load float, ptr %63, align 4, !invariant.load !297
  %65 = getelementptr inbounds float, ptr %arg3, i32 %linear_index3
  %66 = load float, ptr %65, align 4
  %multiply.914 = fmul float %region_0_12_constant_511, %66
  %subtract.1015 = fsub float %64, %multiply.914
  %67 = insertvalue { float, float } %62, float %subtract.1015, 1
  %68 = extractvalue { float, float } %67, 0
  %69 = getelementptr inbounds float, ptr %arg3, i32 %linear_index3
  store float %68, ptr %69, align 4
  %70 = extractvalue { float, float } %67, 1
  %71 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  store float %70, ptr %71, align 4
  br label %fusion_708.in_bounds-after
}

define void @fusion_20(ptr noalias align 128 dereferenceable(29622272) %arg0, ptr noalias align 128 dereferenceable(29622272) %arg1, ptr noalias align 128 dereferenceable(29622272) %arg2, ptr noalias align 128 dereferenceable(29622272) %arg3, ptr noalias align 16 dereferenceable(3616) %arg4, ptr noalias align 128 dereferenceable(231424) %arg5, ptr noalias align 128 dereferenceable(29622272) %arg6) {
entry:
  %return_buffer33 = alloca float, align 4
  %result_from_other_lane31 = alloca float, align 4
  %return_buffer30 = alloca float, align 4
  %result_from_other_lane28 = alloca float, align 4
  %return_buffer27 = alloca float, align 4
  %result_from_other_lane25 = alloca float, align 4
  %return_buffer24 = alloca float, align 4
  %result_from_other_lane22 = alloca float, align 4
  %return_buffer21 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !294
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after, %entry
  ret void

reduce-group-0-true:                              ; preds = %entry
  %region_0_23_constant_13 = load float, ptr @127, align 4
  %2 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %region_0_23_constant_13, ptr %2, align 4
  %3 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %4 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !543
  %5 = urem i32 %3, 1024
  %6 = udiv i32 %3, 1024
  %7 = mul i32 %4, 1
  %8 = add i32 %7, %6
  %9 = icmp ult i32 %8, 1856
  br i1 %9, label %10, label %early_return

10:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %5, 32
  %thread_id.y = udiv i32 %5, 32
  %lane_id = urem i32 %5, 32
  %11 = udiv i32 %8, 1
  %12 = urem i32 %11, 29
  %13 = udiv i32 %8, 29
  %14 = urem i32 %13, 1
  %15 = udiv i32 %8, 29
  %16 = icmp eq i32 %14, 0
  %tile_bound = select i1 %16, i32 128, i32 4096
  %17 = icmp eq i32 %12, 28
  %tile_bound1 = select i1 %17, i32 8, i32 32
  %tile_origin.0 = mul i32 %15, 1
  %tile_origin.1 = mul i32 %14, 4096
  %tile_origin.2 = mul i32 %12, 32
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %10
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %18 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %18, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %19 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %20 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %21 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %21, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %22 = icmp eq i32 %tile_loop.indvar, 0
  %23 = mul i32 %tile_loop.indvar, 1
  %24 = add i32 %23, 0
  %x_loc = add i32 %24, %20
  %25 = add i32 %tile_origin.1, %y_in_tile.indvar
  %26 = add i32 %tile_origin.2, %x_loc
  %27 = icmp ult i32 %x_loc, %tile_bound1
  br i1 %27, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body
  br label %tile_loop.loop_header, !llvm.loop !544

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !545

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache162, i32 0, i32 %6, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %28 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %29 = load float, ptr %current_output, align 4
  store float %29, ptr %28, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache162, i32 0, i32 %6, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %30 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result20 = load float, ptr %30, align 4
  %31 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result20, i32 16, i32 31)
  store float %31, ptr %result_from_other_lane, align 4
  call void @region_1_14__2(ptr %30, ptr %result_from_other_lane, ptr %return_buffer21)
  %32 = load float, ptr %return_buffer21, align 4
  store float %32, ptr %30, align 4
  %partial_reduction_result23 = load float, ptr %30, align 4
  %33 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result23, i32 8, i32 31)
  store float %33, ptr %result_from_other_lane22, align 4
  call void @region_1_14__2(ptr %30, ptr %result_from_other_lane22, ptr %return_buffer24)
  %34 = load float, ptr %return_buffer24, align 4
  store float %34, ptr %30, align 4
  %partial_reduction_result26 = load float, ptr %30, align 4
  %35 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result26, i32 4, i32 31)
  store float %35, ptr %result_from_other_lane25, align 4
  call void @region_1_14__2(ptr %30, ptr %result_from_other_lane25, ptr %return_buffer27)
  %36 = load float, ptr %return_buffer27, align 4
  store float %36, ptr %30, align 4
  %partial_reduction_result29 = load float, ptr %30, align 4
  %37 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result29, i32 2, i32 31)
  store float %37, ptr %result_from_other_lane28, align 4
  call void @region_1_14__2(ptr %30, ptr %result_from_other_lane28, ptr %return_buffer30)
  %38 = load float, ptr %return_buffer30, align 4
  store float %38, ptr %30, align 4
  %partial_reduction_result32 = load float, ptr %30, align 4
  %39 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result32, i32 1, i32 31)
  store float %39, ptr %result_from_other_lane31, align 4
  call void @region_1_14__2(ptr %30, ptr %result_from_other_lane31, ptr %return_buffer33)
  %40 = load float, ptr %return_buffer33, align 4
  store float %40, ptr %30, align 4
  %41 = icmp ult i32 %thread_id.x, %tile_bound
  %42 = mul i32 %thread_id.y, 1
  %43 = icmp ult i32 %42, %tile_bound1
  %44 = and i1 %43, %41
  %45 = icmp eq i32 %lane_id, 0
  %46 = and i1 %44, %45
  br i1 %46, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %47 = mul nuw nsw i32 %26, 1
  %48 = add nuw nsw i32 0, %47
  %49 = mul nuw nsw i32 %25, 904
  %50 = add nuw nsw i32 %48, %49
  %51 = mul nuw nsw i32 %tile_origin.0, 115712
  %52 = add nuw nsw i32 %50, %51
  %53 = udiv i32 %52, 1
  %54 = urem i32 %53, 904
  %55 = udiv i32 %52, 904
  %56 = urem i32 %55, 128
  %57 = udiv i32 %52, 115712
  %58 = mul i32 %thread_id.x, 1
  %59 = sub i32 %x_loc, %58
  %60 = mul nuw nsw i32 %54, 1
  %61 = add nuw nsw i32 0, %60
  %62 = udiv i32 %61, 904
  %63 = mul nuw nsw i32 %56, 1
  %64 = add nuw nsw i32 0, %63
  %65 = mul nuw nsw i32 %57, 128
  %66 = add nuw nsw i32 %64, %65
  %67 = udiv i32 %66, 8192
  %Arg_0.1 = getelementptr inbounds float, ptr %arg0, i32 %52
  %Arg_0.13 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  %Arg_1.2 = getelementptr inbounds float, ptr %arg1, i32 %52
  %Arg_1.24 = load float, ptr %Arg_1.2, align 4, !invariant.load !297
  %region_0_23_constant_6 = load float, ptr @126, align 4
  %Arg_2.3 = getelementptr inbounds float, ptr %arg2, i32 %52
  %Arg_2.35 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  %Arg_2.36 = getelementptr inbounds float, ptr %arg2, i32 %52
  %Arg_2.37 = load float, ptr %Arg_2.36, align 4, !invariant.load !297
  %multiply.8 = fmul float %Arg_2.35, %Arg_2.37
  %subtract.9 = fsub float %region_0_23_constant_6, %multiply.8
  %multiply.10 = fmul float %Arg_1.24, %subtract.9
  %multiply.11 = fmul float %Arg_0.13, %multiply.10
  store float %multiply.11, ptr %reduction_input_address, align 4
  %68 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %59
  call void @region_1_14__2(ptr %68, ptr %reduction_input_address, ptr %return_buffer)
  %69 = load float, ptr %return_buffer, align 4
  store float %69, ptr %68, align 4
  %70 = mul nuw nsw i32 %54, 1
  %71 = add nuw nsw i32 0, %70
  %72 = udiv i32 %71, 904
  %73 = mul nuw nsw i32 %56, 1
  %74 = add nuw nsw i32 0, %73
  %75 = mul nuw nsw i32 %57, 128
  %76 = add nuw nsw i32 %74, %75
  %77 = udiv i32 %76, 8192
  %Arg_3.4 = getelementptr inbounds float, ptr %arg3, i32 %52
  %Arg_3.48 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  %Arg_4.5 = getelementptr inbounds [904 x float], ptr %arg4, i32 0, i32 %71
  %Arg_4.59 = load float, ptr %Arg_4.5, align 4, !invariant.load !297
  %add.20 = fadd float %Arg_3.48, %Arg_4.59
  %Arg_1.210 = getelementptr inbounds float, ptr %arg1, i32 %52
  %Arg_1.211 = load float, ptr %Arg_1.210, align 4, !invariant.load !297
  %region_0_23_constant_612 = load float, ptr @126, align 4
  %Arg_2.313 = getelementptr inbounds float, ptr %arg2, i32 %52
  %Arg_2.314 = load float, ptr %Arg_2.313, align 4, !invariant.load !297
  %Arg_2.315 = getelementptr inbounds float, ptr %arg2, i32 %52
  %Arg_2.316 = load float, ptr %Arg_2.315, align 4, !invariant.load !297
  %multiply.817 = fmul float %Arg_2.314, %Arg_2.316
  %subtract.918 = fsub float %region_0_23_constant_612, %multiply.817
  %multiply.1019 = fmul float %Arg_1.211, %subtract.918
  %multiply.21 = fmul float %add.20, %multiply.1019
  %78 = mul nuw nsw i32 %54, 1
  %79 = add nuw nsw i32 0, %78
  %80 = udiv i32 %79, 904
  %81 = mul nuw nsw i32 %56, 1
  %82 = add nuw nsw i32 0, %81
  %83 = mul nuw nsw i32 %57, 128
  %84 = add nuw nsw i32 %82, %83
  %85 = udiv i32 %84, 8192
  %86 = getelementptr inbounds float, ptr %arg6, i32 %52
  store float %multiply.21, ptr %86, align 4
  br label %x_in_tile-after

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %87 = mul i32 %thread_id.y, 1
  %88 = add i32 %tile_origin.1, %thread_id.x
  %89 = add i32 %tile_origin.2, %87
  %90 = add i32 %89, 0
  %91 = mul i32 %tile_origin.0, 904
  %92 = add i32 %91, %90
  %93 = udiv i32 %92, 1
  %94 = urem i32 %93, 904
  %95 = udiv i32 %92, 904
  %output_element_address = getelementptr inbounds [64 x [904 x float]], ptr %arg5, i32 0, i32 %95, i32 %94
  %output = load float, ptr %30, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after
}

define internal void @region_1_14__2(ptr dereferenceable(4) %Arg_0.15.typed, ptr dereferenceable(4) %Arg_1.16.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.17.typed = alloca float, align 4
  %Arg_0.15 = load float, ptr %Arg_0.15.typed, align 4
  %Arg_1.16 = load float, ptr %Arg_1.16.typed, align 4
  %add.17 = fadd float %Arg_0.15, %Arg_1.16
  store float %add.17, ptr %add.17.typed, align 4
  %load_ret_value = load float, ptr %add.17.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_802(ptr noalias align 128 dereferenceable(231424) %arg0, ptr noalias align 128 dereferenceable(4) %arg1, ptr noalias align 128 dereferenceable(231424) %arg2, ptr noalias align 128 dereferenceable(231424) %arg3, ptr noalias align 128 dereferenceable(3616) %arg4, ptr noalias align 128 dereferenceable(3616) %arg5, ptr noalias align 128 dereferenceable(3616) %arg6) {
entry:
  %return_buffer115 = alloca float, align 4
  %result_from_other_lane113 = alloca float, align 4
  %return_buffer112 = alloca float, align 4
  %result_from_other_lane110 = alloca float, align 4
  %return_buffer109 = alloca float, align 4
  %result_from_other_lane107 = alloca float, align 4
  %return_buffer106 = alloca float, align 4
  %result_from_other_lane104 = alloca float, align 4
  %return_buffer103 = alloca float, align 4
  %result_from_other_lane101 = alloca float, align 4
  %return_buffer97 = alloca float, align 4
  %tile_loop.invar_address90 = alloca i32, align 4
  %y_in_tile.invar_address84 = alloca i32, align 4
  %partial_reduction_result70 = alloca float, align 4
  %reduction_input_address69 = alloca float, align 4
  %return_buffer64 = alloca float, align 4
  %result_from_other_lane62 = alloca float, align 4
  %return_buffer61 = alloca float, align 4
  %result_from_other_lane59 = alloca float, align 4
  %return_buffer58 = alloca float, align 4
  %result_from_other_lane56 = alloca float, align 4
  %return_buffer55 = alloca float, align 4
  %result_from_other_lane53 = alloca float, align 4
  %return_buffer52 = alloca float, align 4
  %result_from_other_lane50 = alloca float, align 4
  %return_buffer46 = alloca float, align 4
  %tile_loop.invar_address39 = alloca i32, align 4
  %y_in_tile.invar_address33 = alloca i32, align 4
  %partial_reduction_result19 = alloca float, align 4
  %reduction_input_address18 = alloca float, align 4
  %return_buffer17 = alloca float, align 4
  %result_from_other_lane15 = alloca float, align 4
  %return_buffer14 = alloca float, align 4
  %result_from_other_lane12 = alloca float, align 4
  %return_buffer11 = alloca float, align 4
  %result_from_other_lane9 = alloca float, align 4
  %return_buffer8 = alloca float, align 4
  %result_from_other_lane6 = alloca float, align 4
  %return_buffer5 = alloca float, align 4
  %result_from_other_lane = alloca float, align 4
  %return_buffer = alloca float, align 4
  %tile_loop.invar_address = alloca i32, align 4
  %y_in_tile.invar_address = alloca i32, align 4
  %partial_reduction_result = alloca float, align 4
  %reduction_input_address = alloca float, align 4
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !range !346
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %reduce-group-0-true, label %reduce-group-0-after

reduce-group-0-after:                             ; preds = %reduction_write_output-after, %entry
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %reduce-group-1-true, label %reduce-group-1-after

reduce-group-1-after:                             ; preds = %reduction_write_output-after66, %reduce-group-0-after
  %3 = icmp eq i32 %0, 2
  br i1 %3, label %reduce-group-2-true, label %reduce-group-2-after

reduce-group-2-after:                             ; preds = %reduction_write_output-after117, %reduce-group-1-after
  ret void

reduce-group-0-true:                              ; preds = %entry
  %Arg_1.2 = load float, ptr %arg1, align 4, !invariant.load !297
  %4 = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  store float %Arg_1.2, ptr %4, align 4
  %5 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %6 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !546
  %7 = urem i32 %5, 1024
  %8 = udiv i32 %5, 1024
  %9 = mul i32 %6, 1
  %10 = add i32 %9, %8
  %11 = icmp ult i32 %10, 29
  br i1 %11, label %12, label %early_return

12:                                               ; preds = %reduce-group-0-true
  %thread_id.x = urem i32 %7, 32
  %thread_id.y = udiv i32 %7, 32
  %lane_id = urem i32 %7, 32
  %13 = udiv i32 %10, 1
  %14 = urem i32 %13, 29
  %15 = udiv i32 %10, 29
  %16 = urem i32 %15, 1
  %17 = udiv i32 %10, 29
  %18 = icmp eq i32 %16, 0
  %tile_bound = select i1 %18, i32 64, i32 4096
  %19 = icmp eq i32 %14, 28
  %tile_bound1 = select i1 %19, i32 8, i32 32
  %tile_origin.0 = mul i32 %17, 1
  %tile_origin.1 = mul i32 %16, 4096
  %tile_origin.2 = mul i32 %14, 32
  store i32 %thread_id.y, ptr %y_in_tile.invar_address, align 4
  br label %y_in_tile.loop_header

y_in_tile.loop_header:                            ; preds = %tile_loop.loop_exit, %12
  %y_in_tile.indvar = load i32, ptr %y_in_tile.invar_address, align 4
  %20 = icmp uge i32 %y_in_tile.indvar, %tile_bound
  br i1 %20, label %y_in_tile.loop_exit, label %y_in_tile.loop_body

y_in_tile.loop_body:                              ; preds = %y_in_tile.loop_header
  %invar.inc = add nuw nsw i32 %y_in_tile.indvar, 32
  store i32 %invar.inc, ptr %y_in_tile.invar_address, align 4
  %21 = icmp eq i32 %y_in_tile.indvar, %thread_id.y
  %22 = mul i32 %thread_id.x, 1
  store i32 0, ptr %tile_loop.invar_address, align 4
  br label %tile_loop.loop_header

tile_loop.loop_header:                            ; preds = %x_in_tile-after, %y_in_tile.loop_body
  %tile_loop.indvar = load i32, ptr %tile_loop.invar_address, align 4
  %23 = icmp uge i32 %tile_loop.indvar, 1
  br i1 %23, label %tile_loop.loop_exit, label %tile_loop.loop_body

tile_loop.loop_body:                              ; preds = %tile_loop.loop_header
  %invar.inc2 = add nuw nsw i32 %tile_loop.indvar, 1
  store i32 %invar.inc2, ptr %tile_loop.invar_address, align 4
  %24 = icmp eq i32 %tile_loop.indvar, 0
  %25 = mul i32 %tile_loop.indvar, 1
  %26 = add i32 %25, 0
  %x_loc = add i32 %26, %22
  %27 = add i32 %tile_origin.1, %y_in_tile.indvar
  %28 = add i32 %tile_origin.2, %x_loc
  %29 = icmp ult i32 %x_loc, %tile_bound1
  br i1 %29, label %x_in_tile-true, label %x_in_tile-after

x_in_tile-after:                                  ; preds = %x_in_tile-true, %tile_loop.loop_body
  br label %tile_loop.loop_header, !llvm.loop !547

tile_loop.loop_exit:                              ; preds = %tile_loop.loop_header
  br label %y_in_tile.loop_header, !llvm.loop !548

y_in_tile.loop_exit:                              ; preds = %y_in_tile.loop_header
  %shmem_output_address = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache163, i32 0, i32 %8, i32 0, i32 %thread_id.x, i32 %thread_id.y
  %30 = addrspacecast ptr addrspace(3) %shmem_output_address to ptr
  %current_output = getelementptr inbounds float, ptr %partial_reduction_result, i32 0
  %31 = load float, ptr %current_output, align 4
  store float %31, ptr %30, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache163, i32 0, i32 %8, i32 0, i32 %thread_id.y, i32 %thread_id.x
  %32 = addrspacecast ptr addrspace(3) %shmem_transposed_addr to ptr
  %partial_reduction_result4 = load float, ptr %32, align 4
  %33 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result4, i32 16, i32 31)
  store float %33, ptr %result_from_other_lane, align 4
  call void @region_1_5(ptr %32, ptr %result_from_other_lane, ptr %return_buffer5)
  %34 = load float, ptr %return_buffer5, align 4
  store float %34, ptr %32, align 4
  %partial_reduction_result7 = load float, ptr %32, align 4
  %35 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result7, i32 8, i32 31)
  store float %35, ptr %result_from_other_lane6, align 4
  call void @region_1_5(ptr %32, ptr %result_from_other_lane6, ptr %return_buffer8)
  %36 = load float, ptr %return_buffer8, align 4
  store float %36, ptr %32, align 4
  %partial_reduction_result10 = load float, ptr %32, align 4
  %37 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result10, i32 4, i32 31)
  store float %37, ptr %result_from_other_lane9, align 4
  call void @region_1_5(ptr %32, ptr %result_from_other_lane9, ptr %return_buffer11)
  %38 = load float, ptr %return_buffer11, align 4
  store float %38, ptr %32, align 4
  %partial_reduction_result13 = load float, ptr %32, align 4
  %39 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result13, i32 2, i32 31)
  store float %39, ptr %result_from_other_lane12, align 4
  call void @region_1_5(ptr %32, ptr %result_from_other_lane12, ptr %return_buffer14)
  %40 = load float, ptr %return_buffer14, align 4
  store float %40, ptr %32, align 4
  %partial_reduction_result16 = load float, ptr %32, align 4
  %41 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result16, i32 1, i32 31)
  store float %41, ptr %result_from_other_lane15, align 4
  call void @region_1_5(ptr %32, ptr %result_from_other_lane15, ptr %return_buffer17)
  %42 = load float, ptr %return_buffer17, align 4
  store float %42, ptr %32, align 4
  %43 = icmp ult i32 %thread_id.x, %tile_bound
  %44 = mul i32 %thread_id.y, 1
  %45 = icmp ult i32 %44, %tile_bound1
  %46 = and i1 %45, %43
  %47 = icmp eq i32 %lane_id, 0
  %48 = and i1 %46, %47
  br i1 %48, label %reduction_write_output-true, label %reduction_write_output-after

reduction_write_output-after:                     ; preds = %reduction_write_output-true, %y_in_tile.loop_exit
  br label %reduce-group-0-after

early_return:                                     ; preds = %reduce-group-0-true
  ret void

x_in_tile-true:                                   ; preds = %tile_loop.loop_body
  %49 = mul i32 %thread_id.x, 1
  %50 = sub i32 %x_loc, %49
  %Arg_0.1 = getelementptr inbounds [64 x [904 x float]], ptr %arg0, i32 0, i32 %27, i32 %28
  %Arg_0.13 = load float, ptr %Arg_0.1, align 4, !invariant.load !297
  store float %Arg_0.13, ptr %reduction_input_address, align 4
  %51 = getelementptr inbounds float, ptr %partial_reduction_result, i32 %50
  call void @region_1_5(ptr %51, ptr %reduction_input_address, ptr %return_buffer)
  %52 = load float, ptr %return_buffer, align 4
  store float %52, ptr %51, align 4
  br label %x_in_tile-after

reduction_write_output-true:                      ; preds = %y_in_tile.loop_exit
  %53 = mul i32 %thread_id.y, 1
  %54 = add i32 %tile_origin.1, %thread_id.x
  %55 = add i32 %tile_origin.2, %53
  %56 = add i32 %55, 0
  %57 = mul i32 %tile_origin.0, 904
  %58 = add i32 %57, %56
  %59 = udiv i32 %58, 1
  %output_element_address = getelementptr inbounds [904 x float], ptr %arg4, i32 0, i32 %59
  %output = load float, ptr %32, align 4
  store float %output, ptr %output_element_address, align 4
  br label %reduction_write_output-after

reduce-group-1-true:                              ; preds = %reduce-group-0-after
  %Arg_1.220 = load float, ptr %arg1, align 4, !invariant.load !297
  %60 = getelementptr inbounds float, ptr %partial_reduction_result19, i32 0
  store float %Arg_1.220, ptr %60, align 4
  %61 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %62 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !546
  %63 = urem i32 %61, 1024
  %64 = udiv i32 %61, 1024
  %65 = mul i32 %62, 1
  %66 = add i32 %65, %64
  %67 = icmp ult i32 %66, 29
  br i1 %67, label %68, label %early_return21

68:                                               ; preds = %reduce-group-1-true
  %thread_id.x22 = urem i32 %63, 32
  %thread_id.y23 = udiv i32 %63, 32
  %lane_id24 = urem i32 %63, 32
  %69 = udiv i32 %66, 1
  %70 = urem i32 %69, 29
  %71 = udiv i32 %66, 29
  %72 = urem i32 %71, 1
  %73 = udiv i32 %66, 29
  %74 = icmp eq i32 %72, 0
  %tile_bound25 = select i1 %74, i32 64, i32 4096
  %75 = icmp eq i32 %70, 28
  %tile_bound26 = select i1 %75, i32 8, i32 32
  %tile_origin.027 = mul i32 %73, 1
  %tile_origin.128 = mul i32 %72, 4096
  %tile_origin.229 = mul i32 %70, 32
  store i32 %thread_id.y23, ptr %y_in_tile.invar_address33, align 4
  br label %y_in_tile.loop_header31

y_in_tile.loop_header31:                          ; preds = %tile_loop.loop_exit36, %68
  %y_in_tile.indvar34 = load i32, ptr %y_in_tile.invar_address33, align 4
  %76 = icmp uge i32 %y_in_tile.indvar34, %tile_bound25
  br i1 %76, label %y_in_tile.loop_exit30, label %y_in_tile.loop_body32

y_in_tile.loop_body32:                            ; preds = %y_in_tile.loop_header31
  %invar.inc35 = add nuw nsw i32 %y_in_tile.indvar34, 32
  store i32 %invar.inc35, ptr %y_in_tile.invar_address33, align 4
  %77 = icmp eq i32 %y_in_tile.indvar34, %thread_id.y23
  %78 = mul i32 %thread_id.x22, 1
  store i32 0, ptr %tile_loop.invar_address39, align 4
  br label %tile_loop.loop_header37

tile_loop.loop_header37:                          ; preds = %x_in_tile-after44, %y_in_tile.loop_body32
  %tile_loop.indvar40 = load i32, ptr %tile_loop.invar_address39, align 4
  %79 = icmp uge i32 %tile_loop.indvar40, 1
  br i1 %79, label %tile_loop.loop_exit36, label %tile_loop.loop_body38

tile_loop.loop_body38:                            ; preds = %tile_loop.loop_header37
  %invar.inc41 = add nuw nsw i32 %tile_loop.indvar40, 1
  store i32 %invar.inc41, ptr %tile_loop.invar_address39, align 4
  %80 = icmp eq i32 %tile_loop.indvar40, 0
  %81 = mul i32 %tile_loop.indvar40, 1
  %82 = add i32 %81, 0
  %x_loc42 = add i32 %82, %78
  %83 = add i32 %tile_origin.128, %y_in_tile.indvar34
  %84 = add i32 %tile_origin.229, %x_loc42
  %85 = icmp ult i32 %x_loc42, %tile_bound26
  br i1 %85, label %x_in_tile-true43, label %x_in_tile-after44

x_in_tile-after44:                                ; preds = %x_in_tile-true43, %tile_loop.loop_body38
  br label %tile_loop.loop_header37, !llvm.loop !549

tile_loop.loop_exit36:                            ; preds = %tile_loop.loop_header37
  br label %y_in_tile.loop_header31, !llvm.loop !550

y_in_tile.loop_exit30:                            ; preds = %y_in_tile.loop_header31
  %shmem_output_address47 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache164, i32 0, i32 %64, i32 0, i32 %thread_id.x22, i32 %thread_id.y23
  %86 = addrspacecast ptr addrspace(3) %shmem_output_address47 to ptr
  %current_output48 = getelementptr inbounds float, ptr %partial_reduction_result19, i32 0
  %87 = load float, ptr %current_output48, align 4
  store float %87, ptr %86, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr49 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache164, i32 0, i32 %64, i32 0, i32 %thread_id.y23, i32 %thread_id.x22
  %88 = addrspacecast ptr addrspace(3) %shmem_transposed_addr49 to ptr
  %partial_reduction_result51 = load float, ptr %88, align 4
  %89 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result51, i32 16, i32 31)
  store float %89, ptr %result_from_other_lane50, align 4
  call void @region_2_10(ptr %88, ptr %result_from_other_lane50, ptr %return_buffer52)
  %90 = load float, ptr %return_buffer52, align 4
  store float %90, ptr %88, align 4
  %partial_reduction_result54 = load float, ptr %88, align 4
  %91 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result54, i32 8, i32 31)
  store float %91, ptr %result_from_other_lane53, align 4
  call void @region_2_10(ptr %88, ptr %result_from_other_lane53, ptr %return_buffer55)
  %92 = load float, ptr %return_buffer55, align 4
  store float %92, ptr %88, align 4
  %partial_reduction_result57 = load float, ptr %88, align 4
  %93 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result57, i32 4, i32 31)
  store float %93, ptr %result_from_other_lane56, align 4
  call void @region_2_10(ptr %88, ptr %result_from_other_lane56, ptr %return_buffer58)
  %94 = load float, ptr %return_buffer58, align 4
  store float %94, ptr %88, align 4
  %partial_reduction_result60 = load float, ptr %88, align 4
  %95 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result60, i32 2, i32 31)
  store float %95, ptr %result_from_other_lane59, align 4
  call void @region_2_10(ptr %88, ptr %result_from_other_lane59, ptr %return_buffer61)
  %96 = load float, ptr %return_buffer61, align 4
  store float %96, ptr %88, align 4
  %partial_reduction_result63 = load float, ptr %88, align 4
  %97 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result63, i32 1, i32 31)
  store float %97, ptr %result_from_other_lane62, align 4
  call void @region_2_10(ptr %88, ptr %result_from_other_lane62, ptr %return_buffer64)
  %98 = load float, ptr %return_buffer64, align 4
  store float %98, ptr %88, align 4
  %99 = icmp ult i32 %thread_id.x22, %tile_bound25
  %100 = mul i32 %thread_id.y23, 1
  %101 = icmp ult i32 %100, %tile_bound26
  %102 = and i1 %101, %99
  %103 = icmp eq i32 %lane_id24, 0
  %104 = and i1 %102, %103
  br i1 %104, label %reduction_write_output-true65, label %reduction_write_output-after66

reduction_write_output-after66:                   ; preds = %reduction_write_output-true65, %y_in_tile.loop_exit30
  br label %reduce-group-1-after

early_return21:                                   ; preds = %reduce-group-1-true
  ret void

x_in_tile-true43:                                 ; preds = %tile_loop.loop_body38
  %105 = mul i32 %thread_id.x22, 1
  %106 = sub i32 %x_loc42, %105
  %Arg_2.3 = getelementptr inbounds [64 x [904 x float]], ptr %arg2, i32 0, i32 %83, i32 %84
  %Arg_2.345 = load float, ptr %Arg_2.3, align 4, !invariant.load !297
  store float %Arg_2.345, ptr %reduction_input_address18, align 4
  %107 = getelementptr inbounds float, ptr %partial_reduction_result19, i32 %106
  call void @region_2_10(ptr %107, ptr %reduction_input_address18, ptr %return_buffer46)
  %108 = load float, ptr %return_buffer46, align 4
  store float %108, ptr %107, align 4
  br label %x_in_tile-after44

reduction_write_output-true65:                    ; preds = %y_in_tile.loop_exit30
  %109 = mul i32 %thread_id.y23, 1
  %110 = add i32 %tile_origin.128, %thread_id.x22
  %111 = add i32 %tile_origin.229, %109
  %112 = add i32 %111, 0
  %113 = mul i32 %tile_origin.027, 904
  %114 = add i32 %113, %112
  %115 = udiv i32 %114, 1
  %output_element_address67 = getelementptr inbounds [904 x float], ptr %arg5, i32 0, i32 %115
  %output68 = load float, ptr %88, align 4
  store float %output68, ptr %output_element_address67, align 4
  br label %reduction_write_output-after66

reduce-group-2-true:                              ; preds = %reduce-group-1-after
  %Arg_1.271 = load float, ptr %arg1, align 4, !invariant.load !297
  %116 = getelementptr inbounds float, ptr %partial_reduction_result70, i32 0
  store float %Arg_1.271, ptr %116, align 4
  %117 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %118 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !546
  %119 = urem i32 %117, 1024
  %120 = udiv i32 %117, 1024
  %121 = mul i32 %118, 1
  %122 = add i32 %121, %120
  %123 = icmp ult i32 %122, 29
  br i1 %123, label %124, label %early_return72

124:                                              ; preds = %reduce-group-2-true
  %thread_id.x73 = urem i32 %119, 32
  %thread_id.y74 = udiv i32 %119, 32
  %lane_id75 = urem i32 %119, 32
  %125 = udiv i32 %122, 1
  %126 = urem i32 %125, 29
  %127 = udiv i32 %122, 29
  %128 = urem i32 %127, 1
  %129 = udiv i32 %122, 29
  %130 = icmp eq i32 %128, 0
  %tile_bound76 = select i1 %130, i32 64, i32 4096
  %131 = icmp eq i32 %126, 28
  %tile_bound77 = select i1 %131, i32 8, i32 32
  %tile_origin.078 = mul i32 %129, 1
  %tile_origin.179 = mul i32 %128, 4096
  %tile_origin.280 = mul i32 %126, 32
  store i32 %thread_id.y74, ptr %y_in_tile.invar_address84, align 4
  br label %y_in_tile.loop_header82

y_in_tile.loop_header82:                          ; preds = %tile_loop.loop_exit87, %124
  %y_in_tile.indvar85 = load i32, ptr %y_in_tile.invar_address84, align 4
  %132 = icmp uge i32 %y_in_tile.indvar85, %tile_bound76
  br i1 %132, label %y_in_tile.loop_exit81, label %y_in_tile.loop_body83

y_in_tile.loop_body83:                            ; preds = %y_in_tile.loop_header82
  %invar.inc86 = add nuw nsw i32 %y_in_tile.indvar85, 32
  store i32 %invar.inc86, ptr %y_in_tile.invar_address84, align 4
  %133 = icmp eq i32 %y_in_tile.indvar85, %thread_id.y74
  %134 = mul i32 %thread_id.x73, 1
  store i32 0, ptr %tile_loop.invar_address90, align 4
  br label %tile_loop.loop_header88

tile_loop.loop_header88:                          ; preds = %x_in_tile-after95, %y_in_tile.loop_body83
  %tile_loop.indvar91 = load i32, ptr %tile_loop.invar_address90, align 4
  %135 = icmp uge i32 %tile_loop.indvar91, 1
  br i1 %135, label %tile_loop.loop_exit87, label %tile_loop.loop_body89

tile_loop.loop_body89:                            ; preds = %tile_loop.loop_header88
  %invar.inc92 = add nuw nsw i32 %tile_loop.indvar91, 1
  store i32 %invar.inc92, ptr %tile_loop.invar_address90, align 4
  %136 = icmp eq i32 %tile_loop.indvar91, 0
  %137 = mul i32 %tile_loop.indvar91, 1
  %138 = add i32 %137, 0
  %x_loc93 = add i32 %138, %134
  %139 = add i32 %tile_origin.179, %y_in_tile.indvar85
  %140 = add i32 %tile_origin.280, %x_loc93
  %141 = icmp ult i32 %x_loc93, %tile_bound77
  br i1 %141, label %x_in_tile-true94, label %x_in_tile-after95

x_in_tile-after95:                                ; preds = %x_in_tile-true94, %tile_loop.loop_body89
  br label %tile_loop.loop_header88, !llvm.loop !551

tile_loop.loop_exit87:                            ; preds = %tile_loop.loop_header88
  br label %y_in_tile.loop_header82, !llvm.loop !552

y_in_tile.loop_exit81:                            ; preds = %y_in_tile.loop_header82
  %shmem_output_address98 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache165, i32 0, i32 %120, i32 0, i32 %thread_id.x73, i32 %thread_id.y74
  %142 = addrspacecast ptr addrspace(3) %shmem_output_address98 to ptr
  %current_output99 = getelementptr inbounds float, ptr %partial_reduction_result70, i32 0
  %143 = load float, ptr %current_output99, align 4
  store float %143, ptr %142, align 4
  call void @llvm.nvvm.barrier0()
  %shmem_transposed_addr100 = getelementptr inbounds [1 x [1 x [32 x [33 x float]]]], ptr addrspace(3) @shared_cache165, i32 0, i32 %120, i32 0, i32 %thread_id.y74, i32 %thread_id.x73
  %144 = addrspacecast ptr addrspace(3) %shmem_transposed_addr100 to ptr
  %partial_reduction_result102 = load float, ptr %144, align 4
  %145 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result102, i32 16, i32 31)
  store float %145, ptr %result_from_other_lane101, align 4
  call void @region_3_15(ptr %144, ptr %result_from_other_lane101, ptr %return_buffer103)
  %146 = load float, ptr %return_buffer103, align 4
  store float %146, ptr %144, align 4
  %partial_reduction_result105 = load float, ptr %144, align 4
  %147 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result105, i32 8, i32 31)
  store float %147, ptr %result_from_other_lane104, align 4
  call void @region_3_15(ptr %144, ptr %result_from_other_lane104, ptr %return_buffer106)
  %148 = load float, ptr %return_buffer106, align 4
  store float %148, ptr %144, align 4
  %partial_reduction_result108 = load float, ptr %144, align 4
  %149 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result108, i32 4, i32 31)
  store float %149, ptr %result_from_other_lane107, align 4
  call void @region_3_15(ptr %144, ptr %result_from_other_lane107, ptr %return_buffer109)
  %150 = load float, ptr %return_buffer109, align 4
  store float %150, ptr %144, align 4
  %partial_reduction_result111 = load float, ptr %144, align 4
  %151 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result111, i32 2, i32 31)
  store float %151, ptr %result_from_other_lane110, align 4
  call void @region_3_15(ptr %144, ptr %result_from_other_lane110, ptr %return_buffer112)
  %152 = load float, ptr %return_buffer112, align 4
  store float %152, ptr %144, align 4
  %partial_reduction_result114 = load float, ptr %144, align 4
  %153 = call float @llvm.nvvm.shfl.sync.down.f32(i32 -1, float %partial_reduction_result114, i32 1, i32 31)
  store float %153, ptr %result_from_other_lane113, align 4
  call void @region_3_15(ptr %144, ptr %result_from_other_lane113, ptr %return_buffer115)
  %154 = load float, ptr %return_buffer115, align 4
  store float %154, ptr %144, align 4
  %155 = icmp ult i32 %thread_id.x73, %tile_bound76
  %156 = mul i32 %thread_id.y74, 1
  %157 = icmp ult i32 %156, %tile_bound77
  %158 = and i1 %157, %155
  %159 = icmp eq i32 %lane_id75, 0
  %160 = and i1 %158, %159
  br i1 %160, label %reduction_write_output-true116, label %reduction_write_output-after117

reduction_write_output-after117:                  ; preds = %reduction_write_output-true116, %y_in_tile.loop_exit81
  br label %reduce-group-2-after

early_return72:                                   ; preds = %reduce-group-2-true
  ret void

x_in_tile-true94:                                 ; preds = %tile_loop.loop_body89
  %161 = mul i32 %thread_id.x73, 1
  %162 = sub i32 %x_loc93, %161
  %Arg_3.4 = getelementptr inbounds [64 x [904 x float]], ptr %arg3, i32 0, i32 %139, i32 %140
  %Arg_3.496 = load float, ptr %Arg_3.4, align 4, !invariant.load !297
  store float %Arg_3.496, ptr %reduction_input_address69, align 4
  %163 = getelementptr inbounds float, ptr %partial_reduction_result70, i32 %162
  call void @region_3_15(ptr %163, ptr %reduction_input_address69, ptr %return_buffer97)
  %164 = load float, ptr %return_buffer97, align 4
  store float %164, ptr %163, align 4
  br label %x_in_tile-after95

reduction_write_output-true116:                   ; preds = %y_in_tile.loop_exit81
  %165 = mul i32 %thread_id.y74, 1
  %166 = add i32 %tile_origin.179, %thread_id.x73
  %167 = add i32 %tile_origin.280, %165
  %168 = add i32 %167, 0
  %169 = mul i32 %tile_origin.078, 904
  %170 = add i32 %169, %168
  %171 = udiv i32 %170, 1
  %output_element_address118 = getelementptr inbounds [904 x float], ptr %arg6, i32 0, i32 %171
  %output119 = load float, ptr %144, align 4
  store float %output119, ptr %output_element_address118, align 4
  br label %reduction_write_output-after117
}

define internal void @region_1_5(ptr dereferenceable(4) %Arg_0.6.typed, ptr dereferenceable(4) %Arg_1.7.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.8.typed = alloca float, align 4
  %Arg_0.6 = load float, ptr %Arg_0.6.typed, align 4
  %Arg_1.7 = load float, ptr %Arg_1.7.typed, align 4
  %add.8 = fadd float %Arg_0.6, %Arg_1.7
  store float %add.8, ptr %add.8.typed, align 4
  %load_ret_value = load float, ptr %add.8.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_2_10(ptr dereferenceable(4) %Arg_0.11.typed, ptr dereferenceable(4) %Arg_1.12.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.13.typed = alloca float, align 4
  %Arg_0.11 = load float, ptr %Arg_0.11.typed, align 4
  %Arg_1.12 = load float, ptr %Arg_1.12.typed, align 4
  %add.13 = fadd float %Arg_0.11, %Arg_1.12
  store float %add.13, ptr %add.13.typed, align 4
  %load_ret_value = load float, ptr %add.13.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define internal void @region_3_15(ptr dereferenceable(4) %Arg_0.16.typed, ptr dereferenceable(4) %Arg_1.17.typed, ptr dereferenceable(4) %output_arg) {
entry:
  %add.18.typed = alloca float, align 4
  %Arg_0.16 = load float, ptr %Arg_0.16.typed, align 4
  %Arg_1.17 = load float, ptr %Arg_1.17.typed, align 4
  %add.18 = fadd float %Arg_0.16, %Arg_1.17
  store float %add.18, ptr %add.18.typed, align 4
  %load_ret_value = load float, ptr %add.18.typed, align 4
  store float %load_ret_value, ptr %output_arg, align 4
  ret void
}

define void @fusion_710(ptr noalias align 16 dereferenceable(3268864) %arg0, ptr noalias align 128 dereferenceable(3268864) %arg1, ptr noalias align 16 dereferenceable(3268864) %arg2, ptr noalias align 128 dereferenceable(3268864) %arg3, ptr noalias align 16 dereferenceable(3268864) %arg4, ptr noalias align 128 dereferenceable(3268864) %arg5) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !553
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 204544
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 904
  %5 = udiv i32 %linear_index_base, 904
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 904
  %8 = udiv i32 %linear_index1, 904
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 904
  %11 = udiv i32 %linear_index2, 904
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 904
  %14 = udiv i32 %linear_index3, 904
  %15 = icmp ult i32 %linear_index_base, 817216
  br i1 %15, label %fusion_710.in_bounds-true, label %fusion_710.in_bounds-after

fusion_710.in_bounds-after:                       ; preds = %fusion_710.in_bounds-true, %entry
  ret void

fusion_710.in_bounds-true:                        ; preds = %entry
  %16 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_base
  %17 = load float, ptr %16, align 4, !invariant.load !297
  %region_0_16_constant_7 = load float, ptr @128, align 4
  %18 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  %19 = load float, ptr %18, align 4
  %multiply.9 = fmul float %region_0_16_constant_7, %19
  %subtract.10 = fsub float %17, %multiply.9
  %20 = insertvalue { float, float, float } undef, float %subtract.10, 0
  %21 = getelementptr inbounds float, ptr %arg2, i32 %linear_index_base
  %22 = load float, ptr %21, align 4, !invariant.load !297
  %23 = getelementptr inbounds float, ptr %arg3, i32 %linear_index_base
  %24 = load float, ptr %23, align 4
  %multiply.11 = fmul float %region_0_16_constant_7, %24
  %subtract.12 = fsub float %22, %multiply.11
  %25 = insertvalue { float, float, float } %20, float %subtract.12, 1
  %26 = getelementptr inbounds float, ptr %arg4, i32 %linear_index_base
  %27 = load float, ptr %26, align 4, !invariant.load !297
  %28 = getelementptr inbounds float, ptr %arg5, i32 %linear_index_base
  %29 = load float, ptr %28, align 4
  %multiply.13 = fmul float %region_0_16_constant_7, %29
  %subtract.14 = fsub float %27, %multiply.13
  %30 = insertvalue { float, float, float } %25, float %subtract.14, 2
  %31 = extractvalue { float, float, float } %30, 0
  %32 = getelementptr inbounds float, ptr %arg5, i32 %linear_index_base
  store float %31, ptr %32, align 4
  %33 = extractvalue { float, float, float } %30, 1
  %34 = getelementptr inbounds float, ptr %arg3, i32 %linear_index_base
  store float %33, ptr %34, align 4
  %35 = extractvalue { float, float, float } %30, 2
  %36 = getelementptr inbounds float, ptr %arg1, i32 %linear_index_base
  store float %35, ptr %36, align 4
  %37 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  %38 = load float, ptr %37, align 4, !invariant.load !297
  %region_0_16_constant_71 = load float, ptr @128, align 4
  %39 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  %40 = load float, ptr %39, align 4
  %multiply.92 = fmul float %region_0_16_constant_71, %40
  %subtract.103 = fsub float %38, %multiply.92
  %41 = insertvalue { float, float, float } undef, float %subtract.103, 0
  %42 = getelementptr inbounds float, ptr %arg2, i32 %linear_index1
  %43 = load float, ptr %42, align 4, !invariant.load !297
  %44 = getelementptr inbounds float, ptr %arg3, i32 %linear_index1
  %45 = load float, ptr %44, align 4
  %multiply.114 = fmul float %region_0_16_constant_71, %45
  %subtract.125 = fsub float %43, %multiply.114
  %46 = insertvalue { float, float, float } %41, float %subtract.125, 1
  %47 = getelementptr inbounds float, ptr %arg4, i32 %linear_index1
  %48 = load float, ptr %47, align 4, !invariant.load !297
  %49 = getelementptr inbounds float, ptr %arg5, i32 %linear_index1
  %50 = load float, ptr %49, align 4
  %multiply.136 = fmul float %region_0_16_constant_71, %50
  %subtract.147 = fsub float %48, %multiply.136
  %51 = insertvalue { float, float, float } %46, float %subtract.147, 2
  %52 = extractvalue { float, float, float } %51, 0
  %53 = getelementptr inbounds float, ptr %arg5, i32 %linear_index1
  store float %52, ptr %53, align 4
  %54 = extractvalue { float, float, float } %51, 1
  %55 = getelementptr inbounds float, ptr %arg3, i32 %linear_index1
  store float %54, ptr %55, align 4
  %56 = extractvalue { float, float, float } %51, 2
  %57 = getelementptr inbounds float, ptr %arg1, i32 %linear_index1
  store float %56, ptr %57, align 4
  %58 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  %59 = load float, ptr %58, align 4, !invariant.load !297
  %region_0_16_constant_78 = load float, ptr @128, align 4
  %60 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  %61 = load float, ptr %60, align 4
  %multiply.99 = fmul float %region_0_16_constant_78, %61
  %subtract.1010 = fsub float %59, %multiply.99
  %62 = insertvalue { float, float, float } undef, float %subtract.1010, 0
  %63 = getelementptr inbounds float, ptr %arg2, i32 %linear_index2
  %64 = load float, ptr %63, align 4, !invariant.load !297
  %65 = getelementptr inbounds float, ptr %arg3, i32 %linear_index2
  %66 = load float, ptr %65, align 4
  %multiply.1111 = fmul float %region_0_16_constant_78, %66
  %subtract.1212 = fsub float %64, %multiply.1111
  %67 = insertvalue { float, float, float } %62, float %subtract.1212, 1
  %68 = getelementptr inbounds float, ptr %arg4, i32 %linear_index2
  %69 = load float, ptr %68, align 4, !invariant.load !297
  %70 = getelementptr inbounds float, ptr %arg5, i32 %linear_index2
  %71 = load float, ptr %70, align 4
  %multiply.1313 = fmul float %region_0_16_constant_78, %71
  %subtract.1414 = fsub float %69, %multiply.1313
  %72 = insertvalue { float, float, float } %67, float %subtract.1414, 2
  %73 = extractvalue { float, float, float } %72, 0
  %74 = getelementptr inbounds float, ptr %arg5, i32 %linear_index2
  store float %73, ptr %74, align 4
  %75 = extractvalue { float, float, float } %72, 1
  %76 = getelementptr inbounds float, ptr %arg3, i32 %linear_index2
  store float %75, ptr %76, align 4
  %77 = extractvalue { float, float, float } %72, 2
  %78 = getelementptr inbounds float, ptr %arg1, i32 %linear_index2
  store float %77, ptr %78, align 4
  %79 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  %80 = load float, ptr %79, align 4, !invariant.load !297
  %region_0_16_constant_715 = load float, ptr @128, align 4
  %81 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  %82 = load float, ptr %81, align 4
  %multiply.916 = fmul float %region_0_16_constant_715, %82
  %subtract.1017 = fsub float %80, %multiply.916
  %83 = insertvalue { float, float, float } undef, float %subtract.1017, 0
  %84 = getelementptr inbounds float, ptr %arg2, i32 %linear_index3
  %85 = load float, ptr %84, align 4, !invariant.load !297
  %86 = getelementptr inbounds float, ptr %arg3, i32 %linear_index3
  %87 = load float, ptr %86, align 4
  %multiply.1118 = fmul float %region_0_16_constant_715, %87
  %subtract.1219 = fsub float %85, %multiply.1118
  %88 = insertvalue { float, float, float } %83, float %subtract.1219, 1
  %89 = getelementptr inbounds float, ptr %arg4, i32 %linear_index3
  %90 = load float, ptr %89, align 4, !invariant.load !297
  %91 = getelementptr inbounds float, ptr %arg5, i32 %linear_index3
  %92 = load float, ptr %91, align 4
  %multiply.1320 = fmul float %region_0_16_constant_715, %92
  %subtract.1421 = fsub float %90, %multiply.1320
  %93 = insertvalue { float, float, float } %88, float %subtract.1421, 2
  %94 = extractvalue { float, float, float } %93, 0
  %95 = getelementptr inbounds float, ptr %arg5, i32 %linear_index3
  store float %94, ptr %95, align 4
  %96 = extractvalue { float, float, float } %93, 1
  %97 = getelementptr inbounds float, ptr %arg3, i32 %linear_index3
  store float %96, ptr %97, align 4
  %98 = extractvalue { float, float, float } %93, 2
  %99 = getelementptr inbounds float, ptr %arg1, i32 %linear_index3
  store float %98, ptr %99, align 4
  br label %fusion_710.in_bounds-after
}

define void @copy_fusion_3(ptr noalias align 16 dereferenceable(3616) %arg0, ptr noalias align 128 dereferenceable(3616) %arg1, ptr noalias align 16 dereferenceable(3616) %arg2, ptr noalias align 128 dereferenceable(3616) %arg3, ptr noalias align 16 dereferenceable(3616) %arg4, ptr noalias align 128 dereferenceable(3616) %arg5, ptr noalias align 16 dereferenceable(131072) %arg6, ptr noalias align 128 dereferenceable(131072) %arg7, ptr noalias align 16 dereferenceable(131072) %arg8, ptr noalias align 128 dereferenceable(131072) %arg9, ptr noalias align 16 dereferenceable(131072) %arg10, ptr noalias align 128 dereferenceable(131072) %arg11, ptr noalias align 16 dereferenceable(131072) %arg12, ptr noalias align 128 dereferenceable(131072) %arg13, ptr noalias align 16 dereferenceable(131072) %arg14, ptr noalias align 128 dereferenceable(131072) %arg15, ptr noalias align 16 dereferenceable(131072) %arg16, ptr noalias align 128 dereferenceable(131072) %arg17, ptr noalias align 16 dereferenceable(131072) %arg18, ptr noalias align 128 dereferenceable(131072) %arg19, ptr noalias align 16 dereferenceable(131072) %arg20, ptr noalias align 128 dereferenceable(131072) %arg21, ptr noalias align 16 dereferenceable(131072) %arg22, ptr noalias align 128 dereferenceable(131072) %arg23, ptr noalias align 16 dereferenceable(262144) %arg24, ptr noalias align 128 dereferenceable(262144) %arg25, ptr noalias align 16 dereferenceable(262144) %arg26, ptr noalias align 128 dereferenceable(262144) %arg27, ptr noalias align 16 dereferenceable(262144) %arg28, ptr noalias align 128 dereferenceable(262144) %arg29, ptr noalias align 128 dereferenceable(131072) %arg30, ptr noalias align 128 dereferenceable(131072) %arg31, ptr noalias align 128 dereferenceable(131072) %arg32, ptr noalias align 128 dereferenceable(131072) %arg33, ptr noalias align 128 dereferenceable(131072) %arg34) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !554
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 164864
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = icmp ult i32 %linear_index, 164744
  br i1 %4, label %copy_fusion_3.in_bounds-true, label %copy_fusion_3.in_bounds-after

copy_fusion_3.in_bounds-after:                    ; preds = %slice14-after, %entry
  ret void

copy_fusion_3.in_bounds-true:                     ; preds = %entry
  br label %concatenate.pivot.33672.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %5 = phi i32 [ 0, %concatenate.pivot.0. ]
  %6 = sub nsw i32 %3, %5
  %7 = getelementptr inbounds [904 x float], ptr %arg0, i32 0, i32 %6
  %8 = load float, ptr %7, align 4, !invariant.load !297
  %region_0_102_constant_31 = load float, ptr @133, align 4
  %9 = getelementptr inbounds [904 x float], ptr %arg1, i32 0, i32 %6
  %10 = load float, ptr %9, align 4
  %multiply.33 = fmul float %region_0_102_constant_31, %10
  %subtract.34 = fsub float %8, %multiply.33
  br label %concatenate.55.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.904.1
  %11 = phi i32 [ 904, %concatenate.pivot.904.1 ]
  %12 = sub nsw i32 %3, %11
  %13 = mul nuw nsw i32 %12, 1
  %14 = add nuw nsw i32 0, %13
  %15 = urem i32 %14, 512
  %16 = udiv i32 %14, 512
  %17 = udiv i32 %16, 64
  %18 = getelementptr inbounds [64 x [512 x float]], ptr %arg6, i32 0, i32 %16, i32 %15
  %19 = load float, ptr %18, align 4, !invariant.load !297
  %region_0_102_constant_35 = load float, ptr @132, align 4
  %20 = getelementptr inbounds [64 x [512 x float]], ptr %arg7, i32 0, i32 %16, i32 %15
  %21 = load float, ptr %20, align 4
  %multiply.37 = fmul float %region_0_102_constant_35, %21
  %subtract.38 = fsub float %19, %multiply.37
  br label %concatenate.55.merge

concat_index_from_operand_id2:                    ; preds = %concatenate.pivot.33672.2
  %22 = phi i32 [ 33672, %concatenate.pivot.33672.2 ]
  %23 = sub nsw i32 %3, %22
  %24 = mul nuw nsw i32 %23, 1
  %25 = add nuw nsw i32 0, %24
  %26 = urem i32 %25, 512
  %27 = udiv i32 %25, 512
  %28 = udiv i32 %27, 64
  %29 = getelementptr inbounds [64 x [512 x float]], ptr %arg12, i32 0, i32 %27, i32 %26
  %30 = load float, ptr %29, align 4, !invariant.load !297
  %region_0_102_constant_40 = load float, ptr @131, align 4
  %31 = getelementptr inbounds [64 x [512 x float]], ptr %arg13, i32 0, i32 %27, i32 %26
  %32 = load float, ptr %31, align 4, !invariant.load !297
  %multiply.42 = fmul float %region_0_102_constant_40, %32
  %subtract.43 = fsub float %30, %multiply.42
  br label %concatenate.55.merge

concat_index_from_operand_id3:                    ; preds = %concatenate.pivot.66440.3
  %33 = phi i32 [ 66440, %concatenate.pivot.66440.3 ]
  %34 = sub nsw i32 %3, %33
  %35 = mul nuw nsw i32 %34, 1
  %36 = add nuw nsw i32 0, %35
  %37 = urem i32 %36, 128
  %38 = udiv i32 %36, 128
  %39 = udiv i32 %38, 256
  %40 = getelementptr inbounds [256 x [128 x float]], ptr %arg18, i32 0, i32 %38, i32 %37
  %41 = load float, ptr %40, align 4, !invariant.load !297
  %region_0_102_constant_45 = load float, ptr @130, align 4
  %42 = getelementptr inbounds [256 x [128 x float]], ptr %arg19, i32 0, i32 %38, i32 %37
  %43 = load float, ptr %42, align 4, !invariant.load !297
  %multiply.47 = fmul float %region_0_102_constant_45, %43
  %subtract.48 = fsub float %41, %multiply.47
  br label %concatenate.55.merge

concat_index_from_operand_id4:                    ; preds = %concatenate.pivot.99208.4
  %44 = phi i32 [ 99208, %concatenate.pivot.99208.4 ]
  %45 = sub nsw i32 %3, %44
  %46 = mul nuw nsw i32 %45, 1
  %47 = add nuw nsw i32 0, %46
  %48 = urem i32 %47, 512
  %49 = udiv i32 %47, 512
  %50 = udiv i32 %49, 128
  %51 = getelementptr inbounds [128 x [512 x float]], ptr %arg24, i32 0, i32 %49, i32 %48
  %52 = load float, ptr %51, align 4, !invariant.load !297
  %region_0_102_constant_50 = load float, ptr @129, align 4
  %53 = getelementptr inbounds [128 x [512 x float]], ptr %arg25, i32 0, i32 %49, i32 %48
  %54 = load float, ptr %53, align 4
  %multiply.52 = fmul float %region_0_102_constant_50, %54
  %subtract.53 = fsub float %52, %multiply.52
  br label %concatenate.55.merge

concatenate.pivot.33672.:                         ; preds = %copy_fusion_3.in_bounds-true
  %55 = icmp ult i32 %3, 33672
  br i1 %55, label %concatenate.pivot.904., label %concatenate.pivot.66440.

concatenate.pivot.904.:                           ; preds = %concatenate.pivot.33672.
  %56 = icmp ult i32 %3, 904
  br i1 %56, label %concatenate.pivot.0., label %concatenate.pivot.904.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.904.
  br label %concat_index_from_operand_id0

concatenate.pivot.904.1:                          ; preds = %concatenate.pivot.904.
  br label %concat_index_from_operand_id1

concatenate.pivot.66440.:                         ; preds = %concatenate.pivot.33672.
  %57 = icmp ult i32 %3, 66440
  br i1 %57, label %concatenate.pivot.33672.2, label %concatenate.pivot.99208.

concatenate.pivot.33672.2:                        ; preds = %concatenate.pivot.66440.
  br label %concat_index_from_operand_id2

concatenate.pivot.99208.:                         ; preds = %concatenate.pivot.66440.
  %58 = icmp ult i32 %3, 99208
  br i1 %58, label %concatenate.pivot.66440.3, label %concatenate.pivot.99208.4

concatenate.pivot.66440.3:                        ; preds = %concatenate.pivot.99208.
  br label %concat_index_from_operand_id3

concatenate.pivot.99208.4:                        ; preds = %concatenate.pivot.99208.
  br label %concat_index_from_operand_id4

concatenate.55.merge:                             ; preds = %concat_index_from_operand_id4, %concat_index_from_operand_id3, %concat_index_from_operand_id2, %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %59 = phi float [ %subtract.34, %concat_index_from_operand_id0 ], [ %subtract.38, %concat_index_from_operand_id1 ], [ %subtract.43, %concat_index_from_operand_id2 ], [ %subtract.48, %concat_index_from_operand_id3 ], [ %subtract.53, %concat_index_from_operand_id4 ]
  br label %concatenate.pivot.33672.15

concat_index_from_operand_id05:                   ; preds = %concatenate.pivot.0.17
  %60 = phi i32 [ 0, %concatenate.pivot.0.17 ]
  %61 = sub nsw i32 %3, %60
  %62 = getelementptr inbounds [904 x float], ptr %arg2, i32 0, i32 %61
  %63 = load float, ptr %62, align 4, !invariant.load !297
  %region_0_102_constant_316 = load float, ptr @133, align 4
  %64 = getelementptr inbounds [904 x float], ptr %arg3, i32 0, i32 %61
  %65 = load float, ptr %64, align 4
  %multiply.57 = fmul float %region_0_102_constant_316, %65
  %subtract.58 = fsub float %63, %multiply.57
  br label %concatenate.71.merge

concat_index_from_operand_id17:                   ; preds = %concatenate.pivot.904.18
  %66 = phi i32 [ 904, %concatenate.pivot.904.18 ]
  %67 = sub nsw i32 %3, %66
  %68 = mul nuw nsw i32 %67, 1
  %69 = add nuw nsw i32 0, %68
  %70 = urem i32 %69, 512
  %71 = udiv i32 %69, 512
  %72 = udiv i32 %71, 64
  %73 = getelementptr inbounds [64 x [512 x float]], ptr %arg8, i32 0, i32 %71, i32 %70
  %74 = load float, ptr %73, align 4, !invariant.load !297
  %region_0_102_constant_358 = load float, ptr @132, align 4
  %75 = getelementptr inbounds [64 x [512 x float]], ptr %arg9, i32 0, i32 %71, i32 %70
  %76 = load float, ptr %75, align 4
  %multiply.59 = fmul float %region_0_102_constant_358, %76
  %subtract.60 = fsub float %74, %multiply.59
  br label %concatenate.71.merge

concat_index_from_operand_id29:                   ; preds = %concatenate.pivot.33672.20
  %77 = phi i32 [ 33672, %concatenate.pivot.33672.20 ]
  %78 = sub nsw i32 %3, %77
  %79 = mul nuw nsw i32 %78, 1
  %80 = add nuw nsw i32 0, %79
  %81 = urem i32 %80, 512
  %82 = udiv i32 %80, 512
  %83 = udiv i32 %82, 64
  %84 = getelementptr inbounds [64 x [512 x float]], ptr %arg14, i32 0, i32 %82, i32 %81
  %85 = load float, ptr %84, align 4, !invariant.load !297
  %region_0_102_constant_4010 = load float, ptr @131, align 4
  %86 = getelementptr inbounds [64 x [512 x float]], ptr %arg15, i32 0, i32 %82, i32 %81
  %87 = load float, ptr %86, align 4, !invariant.load !297
  %multiply.62 = fmul float %region_0_102_constant_4010, %87
  %subtract.63 = fsub float %85, %multiply.62
  br label %concatenate.71.merge

concat_index_from_operand_id311:                  ; preds = %concatenate.pivot.66440.22
  %88 = phi i32 [ 66440, %concatenate.pivot.66440.22 ]
  %89 = sub nsw i32 %3, %88
  %90 = mul nuw nsw i32 %89, 1
  %91 = add nuw nsw i32 0, %90
  %92 = urem i32 %91, 128
  %93 = udiv i32 %91, 128
  %94 = udiv i32 %93, 256
  %95 = getelementptr inbounds [256 x [128 x float]], ptr %arg20, i32 0, i32 %93, i32 %92
  %96 = load float, ptr %95, align 4, !invariant.load !297
  %region_0_102_constant_4512 = load float, ptr @130, align 4
  %97 = getelementptr inbounds [256 x [128 x float]], ptr %arg21, i32 0, i32 %93, i32 %92
  %98 = load float, ptr %97, align 4, !invariant.load !297
  %multiply.65 = fmul float %region_0_102_constant_4512, %98
  %subtract.66 = fsub float %96, %multiply.65
  br label %concatenate.71.merge

concat_index_from_operand_id413:                  ; preds = %concatenate.pivot.99208.23
  %99 = phi i32 [ 99208, %concatenate.pivot.99208.23 ]
  %100 = sub nsw i32 %3, %99
  %101 = mul nuw nsw i32 %100, 1
  %102 = add nuw nsw i32 0, %101
  %103 = urem i32 %102, 512
  %104 = udiv i32 %102, 512
  %105 = udiv i32 %104, 128
  %106 = getelementptr inbounds [128 x [512 x float]], ptr %arg26, i32 0, i32 %104, i32 %103
  %107 = load float, ptr %106, align 4, !invariant.load !297
  %region_0_102_constant_5014 = load float, ptr @129, align 4
  %108 = getelementptr inbounds [128 x [512 x float]], ptr %arg27, i32 0, i32 %104, i32 %103
  %109 = load float, ptr %108, align 4
  %multiply.68 = fmul float %region_0_102_constant_5014, %109
  %subtract.69 = fsub float %107, %multiply.68
  br label %concatenate.71.merge

concatenate.pivot.33672.15:                       ; preds = %concatenate.55.merge
  %110 = icmp ult i32 %3, 33672
  br i1 %110, label %concatenate.pivot.904.16, label %concatenate.pivot.66440.19

concatenate.pivot.904.16:                         ; preds = %concatenate.pivot.33672.15
  %111 = icmp ult i32 %3, 904
  br i1 %111, label %concatenate.pivot.0.17, label %concatenate.pivot.904.18

concatenate.pivot.0.17:                           ; preds = %concatenate.pivot.904.16
  br label %concat_index_from_operand_id05

concatenate.pivot.904.18:                         ; preds = %concatenate.pivot.904.16
  br label %concat_index_from_operand_id17

concatenate.pivot.66440.19:                       ; preds = %concatenate.pivot.33672.15
  %112 = icmp ult i32 %3, 66440
  br i1 %112, label %concatenate.pivot.33672.20, label %concatenate.pivot.99208.21

concatenate.pivot.33672.20:                       ; preds = %concatenate.pivot.66440.19
  br label %concat_index_from_operand_id29

concatenate.pivot.99208.21:                       ; preds = %concatenate.pivot.66440.19
  %113 = icmp ult i32 %3, 99208
  br i1 %113, label %concatenate.pivot.66440.22, label %concatenate.pivot.99208.23

concatenate.pivot.66440.22:                       ; preds = %concatenate.pivot.99208.21
  br label %concat_index_from_operand_id311

concatenate.pivot.99208.23:                       ; preds = %concatenate.pivot.99208.21
  br label %concat_index_from_operand_id413

concatenate.71.merge:                             ; preds = %concat_index_from_operand_id413, %concat_index_from_operand_id311, %concat_index_from_operand_id29, %concat_index_from_operand_id17, %concat_index_from_operand_id05
  %114 = phi float [ %subtract.58, %concat_index_from_operand_id05 ], [ %subtract.60, %concat_index_from_operand_id17 ], [ %subtract.63, %concat_index_from_operand_id29 ], [ %subtract.66, %concat_index_from_operand_id311 ], [ %subtract.69, %concat_index_from_operand_id413 ]
  br label %concatenate.pivot.33672.34

concat_index_from_operand_id024:                  ; preds = %concatenate.pivot.0.36
  %115 = phi i32 [ 0, %concatenate.pivot.0.36 ]
  %116 = sub nsw i32 %3, %115
  %117 = getelementptr inbounds [904 x float], ptr %arg4, i32 0, i32 %116
  %118 = load float, ptr %117, align 4, !invariant.load !297
  %region_0_102_constant_3125 = load float, ptr @133, align 4
  %119 = getelementptr inbounds [904 x float], ptr %arg5, i32 0, i32 %116
  %120 = load float, ptr %119, align 4
  %multiply.73 = fmul float %region_0_102_constant_3125, %120
  %subtract.74 = fsub float %118, %multiply.73
  br label %concatenate.87.merge

concat_index_from_operand_id126:                  ; preds = %concatenate.pivot.904.37
  %121 = phi i32 [ 904, %concatenate.pivot.904.37 ]
  %122 = sub nsw i32 %3, %121
  %123 = mul nuw nsw i32 %122, 1
  %124 = add nuw nsw i32 0, %123
  %125 = urem i32 %124, 512
  %126 = udiv i32 %124, 512
  %127 = udiv i32 %126, 64
  %128 = getelementptr inbounds [64 x [512 x float]], ptr %arg10, i32 0, i32 %126, i32 %125
  %129 = load float, ptr %128, align 4, !invariant.load !297
  %region_0_102_constant_3527 = load float, ptr @132, align 4
  %130 = getelementptr inbounds [64 x [512 x float]], ptr %arg11, i32 0, i32 %126, i32 %125
  %131 = load float, ptr %130, align 4
  %multiply.75 = fmul float %region_0_102_constant_3527, %131
  %subtract.76 = fsub float %129, %multiply.75
  br label %concatenate.87.merge

concat_index_from_operand_id228:                  ; preds = %concatenate.pivot.33672.39
  %132 = phi i32 [ 33672, %concatenate.pivot.33672.39 ]
  %133 = sub nsw i32 %3, %132
  %134 = mul nuw nsw i32 %133, 1
  %135 = add nuw nsw i32 0, %134
  %136 = urem i32 %135, 512
  %137 = udiv i32 %135, 512
  %138 = udiv i32 %137, 64
  %139 = getelementptr inbounds [64 x [512 x float]], ptr %arg16, i32 0, i32 %137, i32 %136
  %140 = load float, ptr %139, align 4, !invariant.load !297
  %region_0_102_constant_4029 = load float, ptr @131, align 4
  %141 = getelementptr inbounds [64 x [512 x float]], ptr %arg17, i32 0, i32 %137, i32 %136
  %142 = load float, ptr %141, align 4
  %multiply.78 = fmul float %region_0_102_constant_4029, %142
  %subtract.79 = fsub float %140, %multiply.78
  br label %concatenate.87.merge

concat_index_from_operand_id330:                  ; preds = %concatenate.pivot.66440.41
  %143 = phi i32 [ 66440, %concatenate.pivot.66440.41 ]
  %144 = sub nsw i32 %3, %143
  %145 = mul nuw nsw i32 %144, 1
  %146 = add nuw nsw i32 0, %145
  %147 = urem i32 %146, 128
  %148 = udiv i32 %146, 128
  %149 = udiv i32 %148, 256
  %150 = getelementptr inbounds [256 x [128 x float]], ptr %arg22, i32 0, i32 %148, i32 %147
  %151 = load float, ptr %150, align 4, !invariant.load !297
  %region_0_102_constant_4531 = load float, ptr @130, align 4
  %152 = getelementptr inbounds [256 x [128 x float]], ptr %arg23, i32 0, i32 %148, i32 %147
  %153 = load float, ptr %152, align 4, !invariant.load !297
  %multiply.81 = fmul float %region_0_102_constant_4531, %153
  %subtract.82 = fsub float %151, %multiply.81
  br label %concatenate.87.merge

concat_index_from_operand_id432:                  ; preds = %concatenate.pivot.99208.42
  %154 = phi i32 [ 99208, %concatenate.pivot.99208.42 ]
  %155 = sub nsw i32 %3, %154
  %156 = mul nuw nsw i32 %155, 1
  %157 = add nuw nsw i32 0, %156
  %158 = urem i32 %157, 512
  %159 = udiv i32 %157, 512
  %160 = udiv i32 %159, 128
  %161 = getelementptr inbounds [128 x [512 x float]], ptr %arg28, i32 0, i32 %159, i32 %158
  %162 = load float, ptr %161, align 4, !invariant.load !297
  %region_0_102_constant_5033 = load float, ptr @129, align 4
  %163 = getelementptr inbounds [128 x [512 x float]], ptr %arg29, i32 0, i32 %159, i32 %158
  %164 = load float, ptr %163, align 4
  %multiply.84 = fmul float %region_0_102_constant_5033, %164
  %subtract.85 = fsub float %162, %multiply.84
  br label %concatenate.87.merge

concatenate.pivot.33672.34:                       ; preds = %concatenate.71.merge
  %165 = icmp ult i32 %3, 33672
  br i1 %165, label %concatenate.pivot.904.35, label %concatenate.pivot.66440.38

concatenate.pivot.904.35:                         ; preds = %concatenate.pivot.33672.34
  %166 = icmp ult i32 %3, 904
  br i1 %166, label %concatenate.pivot.0.36, label %concatenate.pivot.904.37

concatenate.pivot.0.36:                           ; preds = %concatenate.pivot.904.35
  br label %concat_index_from_operand_id024

concatenate.pivot.904.37:                         ; preds = %concatenate.pivot.904.35
  br label %concat_index_from_operand_id126

concatenate.pivot.66440.38:                       ; preds = %concatenate.pivot.33672.34
  %167 = icmp ult i32 %3, 66440
  br i1 %167, label %concatenate.pivot.33672.39, label %concatenate.pivot.99208.40

concatenate.pivot.33672.39:                       ; preds = %concatenate.pivot.66440.38
  br label %concat_index_from_operand_id228

concatenate.pivot.99208.40:                       ; preds = %concatenate.pivot.66440.38
  %168 = icmp ult i32 %3, 99208
  br i1 %168, label %concatenate.pivot.66440.41, label %concatenate.pivot.99208.42

concatenate.pivot.66440.41:                       ; preds = %concatenate.pivot.99208.40
  br label %concat_index_from_operand_id330

concatenate.pivot.99208.42:                       ; preds = %concatenate.pivot.99208.40
  br label %concat_index_from_operand_id432

concatenate.87.merge:                             ; preds = %concat_index_from_operand_id432, %concat_index_from_operand_id330, %concat_index_from_operand_id228, %concat_index_from_operand_id126, %concat_index_from_operand_id024
  %169 = phi float [ %subtract.74, %concat_index_from_operand_id024 ], [ %subtract.76, %concat_index_from_operand_id126 ], [ %subtract.79, %concat_index_from_operand_id228 ], [ %subtract.82, %concat_index_from_operand_id330 ], [ %subtract.85, %concat_index_from_operand_id432 ]
  br label %concatenate.pivot.33672.64

concat_index_from_operand_id044:                  ; preds = %concatenate.pivot.0.66
  %170 = phi i32 [ 0, %concatenate.pivot.0.66 ]
  %171 = sub nsw i32 %3, %170
  %172 = getelementptr inbounds [904 x float], ptr %arg0, i32 0, i32 %171
  %173 = load float, ptr %172, align 4, !invariant.load !297
  %region_0_102_constant_3145 = load float, ptr @133, align 4
  %174 = getelementptr inbounds [904 x float], ptr %arg1, i32 0, i32 %171
  %175 = load float, ptr %174, align 4
  %multiply.3346 = fmul float %region_0_102_constant_3145, %175
  %subtract.3447 = fsub float %173, %multiply.3346
  br label %concatenate.55.merge43

concat_index_from_operand_id148:                  ; preds = %concatenate.pivot.904.67
  %176 = phi i32 [ 904, %concatenate.pivot.904.67 ]
  %177 = sub nsw i32 %3, %176
  %178 = mul nuw nsw i32 %177, 1
  %179 = add nuw nsw i32 0, %178
  %180 = urem i32 %179, 512
  %181 = udiv i32 %179, 512
  %182 = udiv i32 %181, 64
  %183 = getelementptr inbounds [64 x [512 x float]], ptr %arg6, i32 0, i32 %181, i32 %180
  %184 = load float, ptr %183, align 4, !invariant.load !297
  %region_0_102_constant_3549 = load float, ptr @132, align 4
  %185 = getelementptr inbounds [64 x [512 x float]], ptr %arg7, i32 0, i32 %181, i32 %180
  %186 = load float, ptr %185, align 4
  %multiply.3750 = fmul float %region_0_102_constant_3549, %186
  %subtract.3851 = fsub float %184, %multiply.3750
  br label %concatenate.55.merge43

concat_index_from_operand_id252:                  ; preds = %concatenate.pivot.33672.69
  %187 = phi i32 [ 33672, %concatenate.pivot.33672.69 ]
  %188 = sub nsw i32 %3, %187
  %189 = mul nuw nsw i32 %188, 1
  %190 = add nuw nsw i32 0, %189
  %191 = urem i32 %190, 512
  %192 = udiv i32 %190, 512
  %193 = udiv i32 %192, 64
  %194 = getelementptr inbounds [64 x [512 x float]], ptr %arg12, i32 0, i32 %192, i32 %191
  %195 = load float, ptr %194, align 4, !invariant.load !297
  %region_0_102_constant_4053 = load float, ptr @131, align 4
  %196 = getelementptr inbounds [64 x [512 x float]], ptr %arg13, i32 0, i32 %192, i32 %191
  %197 = load float, ptr %196, align 4, !invariant.load !297
  %multiply.4254 = fmul float %region_0_102_constant_4053, %197
  %subtract.4355 = fsub float %195, %multiply.4254
  br label %concatenate.55.merge43

concat_index_from_operand_id356:                  ; preds = %concatenate.pivot.66440.71
  %198 = phi i32 [ 66440, %concatenate.pivot.66440.71 ]
  %199 = sub nsw i32 %3, %198
  %200 = mul nuw nsw i32 %199, 1
  %201 = add nuw nsw i32 0, %200
  %202 = urem i32 %201, 128
  %203 = udiv i32 %201, 128
  %204 = udiv i32 %203, 256
  %205 = getelementptr inbounds [256 x [128 x float]], ptr %arg18, i32 0, i32 %203, i32 %202
  %206 = load float, ptr %205, align 4, !invariant.load !297
  %region_0_102_constant_4557 = load float, ptr @130, align 4
  %207 = getelementptr inbounds [256 x [128 x float]], ptr %arg19, i32 0, i32 %203, i32 %202
  %208 = load float, ptr %207, align 4, !invariant.load !297
  %multiply.4758 = fmul float %region_0_102_constant_4557, %208
  %subtract.4859 = fsub float %206, %multiply.4758
  br label %concatenate.55.merge43

concat_index_from_operand_id460:                  ; preds = %concatenate.pivot.99208.72
  %209 = phi i32 [ 99208, %concatenate.pivot.99208.72 ]
  %210 = sub nsw i32 %3, %209
  %211 = mul nuw nsw i32 %210, 1
  %212 = add nuw nsw i32 0, %211
  %213 = urem i32 %212, 512
  %214 = udiv i32 %212, 512
  %215 = udiv i32 %214, 128
  %216 = getelementptr inbounds [128 x [512 x float]], ptr %arg24, i32 0, i32 %214, i32 %213
  %217 = load float, ptr %216, align 4, !invariant.load !297
  %region_0_102_constant_5061 = load float, ptr @129, align 4
  %218 = getelementptr inbounds [128 x [512 x float]], ptr %arg25, i32 0, i32 %214, i32 %213
  %219 = load float, ptr %218, align 4
  %multiply.5262 = fmul float %region_0_102_constant_5061, %219
  %subtract.5363 = fsub float %217, %multiply.5262
  br label %concatenate.55.merge43

concatenate.pivot.33672.64:                       ; preds = %concatenate.87.merge
  %220 = icmp ult i32 %3, 33672
  br i1 %220, label %concatenate.pivot.904.65, label %concatenate.pivot.66440.68

concatenate.pivot.904.65:                         ; preds = %concatenate.pivot.33672.64
  %221 = icmp ult i32 %3, 904
  br i1 %221, label %concatenate.pivot.0.66, label %concatenate.pivot.904.67

concatenate.pivot.0.66:                           ; preds = %concatenate.pivot.904.65
  br label %concat_index_from_operand_id044

concatenate.pivot.904.67:                         ; preds = %concatenate.pivot.904.65
  br label %concat_index_from_operand_id148

concatenate.pivot.66440.68:                       ; preds = %concatenate.pivot.33672.64
  %222 = icmp ult i32 %3, 66440
  br i1 %222, label %concatenate.pivot.33672.69, label %concatenate.pivot.99208.70

concatenate.pivot.33672.69:                       ; preds = %concatenate.pivot.66440.68
  br label %concat_index_from_operand_id252

concatenate.pivot.99208.70:                       ; preds = %concatenate.pivot.66440.68
  %223 = icmp ult i32 %3, 99208
  br i1 %223, label %concatenate.pivot.66440.71, label %concatenate.pivot.99208.72

concatenate.pivot.66440.71:                       ; preds = %concatenate.pivot.99208.70
  br label %concat_index_from_operand_id356

concatenate.pivot.99208.72:                       ; preds = %concatenate.pivot.99208.70
  br label %concat_index_from_operand_id460

concatenate.55.merge43:                           ; preds = %concat_index_from_operand_id460, %concat_index_from_operand_id356, %concat_index_from_operand_id252, %concat_index_from_operand_id148, %concat_index_from_operand_id044
  %224 = phi float [ %subtract.3447, %concat_index_from_operand_id044 ], [ %subtract.3851, %concat_index_from_operand_id148 ], [ %subtract.4355, %concat_index_from_operand_id252 ], [ %subtract.4859, %concat_index_from_operand_id356 ], [ %subtract.5363, %concat_index_from_operand_id460 ]
  br label %concatenate.pivot.33672.94

concat_index_from_operand_id074:                  ; preds = %concatenate.pivot.0.96
  %225 = phi i32 [ 0, %concatenate.pivot.0.96 ]
  %226 = sub nsw i32 %3, %225
  %227 = getelementptr inbounds [904 x float], ptr %arg2, i32 0, i32 %226
  %228 = load float, ptr %227, align 4, !invariant.load !297
  %region_0_102_constant_3175 = load float, ptr @133, align 4
  %229 = getelementptr inbounds [904 x float], ptr %arg3, i32 0, i32 %226
  %230 = load float, ptr %229, align 4
  %multiply.5776 = fmul float %region_0_102_constant_3175, %230
  %subtract.5877 = fsub float %228, %multiply.5776
  br label %concatenate.71.merge73

concat_index_from_operand_id178:                  ; preds = %concatenate.pivot.904.97
  %231 = phi i32 [ 904, %concatenate.pivot.904.97 ]
  %232 = sub nsw i32 %3, %231
  %233 = mul nuw nsw i32 %232, 1
  %234 = add nuw nsw i32 0, %233
  %235 = urem i32 %234, 512
  %236 = udiv i32 %234, 512
  %237 = udiv i32 %236, 64
  %238 = getelementptr inbounds [64 x [512 x float]], ptr %arg8, i32 0, i32 %236, i32 %235
  %239 = load float, ptr %238, align 4, !invariant.load !297
  %region_0_102_constant_3579 = load float, ptr @132, align 4
  %240 = getelementptr inbounds [64 x [512 x float]], ptr %arg9, i32 0, i32 %236, i32 %235
  %241 = load float, ptr %240, align 4
  %multiply.5980 = fmul float %region_0_102_constant_3579, %241
  %subtract.6081 = fsub float %239, %multiply.5980
  br label %concatenate.71.merge73

concat_index_from_operand_id282:                  ; preds = %concatenate.pivot.33672.99
  %242 = phi i32 [ 33672, %concatenate.pivot.33672.99 ]
  %243 = sub nsw i32 %3, %242
  %244 = mul nuw nsw i32 %243, 1
  %245 = add nuw nsw i32 0, %244
  %246 = urem i32 %245, 512
  %247 = udiv i32 %245, 512
  %248 = udiv i32 %247, 64
  %249 = getelementptr inbounds [64 x [512 x float]], ptr %arg14, i32 0, i32 %247, i32 %246
  %250 = load float, ptr %249, align 4, !invariant.load !297
  %region_0_102_constant_4083 = load float, ptr @131, align 4
  %251 = getelementptr inbounds [64 x [512 x float]], ptr %arg15, i32 0, i32 %247, i32 %246
  %252 = load float, ptr %251, align 4, !invariant.load !297
  %multiply.6284 = fmul float %region_0_102_constant_4083, %252
  %subtract.6385 = fsub float %250, %multiply.6284
  br label %concatenate.71.merge73

concat_index_from_operand_id386:                  ; preds = %concatenate.pivot.66440.101
  %253 = phi i32 [ 66440, %concatenate.pivot.66440.101 ]
  %254 = sub nsw i32 %3, %253
  %255 = mul nuw nsw i32 %254, 1
  %256 = add nuw nsw i32 0, %255
  %257 = urem i32 %256, 128
  %258 = udiv i32 %256, 128
  %259 = udiv i32 %258, 256
  %260 = getelementptr inbounds [256 x [128 x float]], ptr %arg20, i32 0, i32 %258, i32 %257
  %261 = load float, ptr %260, align 4, !invariant.load !297
  %region_0_102_constant_4587 = load float, ptr @130, align 4
  %262 = getelementptr inbounds [256 x [128 x float]], ptr %arg21, i32 0, i32 %258, i32 %257
  %263 = load float, ptr %262, align 4, !invariant.load !297
  %multiply.6588 = fmul float %region_0_102_constant_4587, %263
  %subtract.6689 = fsub float %261, %multiply.6588
  br label %concatenate.71.merge73

concat_index_from_operand_id490:                  ; preds = %concatenate.pivot.99208.102
  %264 = phi i32 [ 99208, %concatenate.pivot.99208.102 ]
  %265 = sub nsw i32 %3, %264
  %266 = mul nuw nsw i32 %265, 1
  %267 = add nuw nsw i32 0, %266
  %268 = urem i32 %267, 512
  %269 = udiv i32 %267, 512
  %270 = udiv i32 %269, 128
  %271 = getelementptr inbounds [128 x [512 x float]], ptr %arg26, i32 0, i32 %269, i32 %268
  %272 = load float, ptr %271, align 4, !invariant.load !297
  %region_0_102_constant_5091 = load float, ptr @129, align 4
  %273 = getelementptr inbounds [128 x [512 x float]], ptr %arg27, i32 0, i32 %269, i32 %268
  %274 = load float, ptr %273, align 4
  %multiply.6892 = fmul float %region_0_102_constant_5091, %274
  %subtract.6993 = fsub float %272, %multiply.6892
  br label %concatenate.71.merge73

concatenate.pivot.33672.94:                       ; preds = %concatenate.55.merge43
  %275 = icmp ult i32 %3, 33672
  br i1 %275, label %concatenate.pivot.904.95, label %concatenate.pivot.66440.98

concatenate.pivot.904.95:                         ; preds = %concatenate.pivot.33672.94
  %276 = icmp ult i32 %3, 904
  br i1 %276, label %concatenate.pivot.0.96, label %concatenate.pivot.904.97

concatenate.pivot.0.96:                           ; preds = %concatenate.pivot.904.95
  br label %concat_index_from_operand_id074

concatenate.pivot.904.97:                         ; preds = %concatenate.pivot.904.95
  br label %concat_index_from_operand_id178

concatenate.pivot.66440.98:                       ; preds = %concatenate.pivot.33672.94
  %277 = icmp ult i32 %3, 66440
  br i1 %277, label %concatenate.pivot.33672.99, label %concatenate.pivot.99208.100

concatenate.pivot.33672.99:                       ; preds = %concatenate.pivot.66440.98
  br label %concat_index_from_operand_id282

concatenate.pivot.99208.100:                      ; preds = %concatenate.pivot.66440.98
  %278 = icmp ult i32 %3, 99208
  br i1 %278, label %concatenate.pivot.66440.101, label %concatenate.pivot.99208.102

concatenate.pivot.66440.101:                      ; preds = %concatenate.pivot.99208.100
  br label %concat_index_from_operand_id386

concatenate.pivot.99208.102:                      ; preds = %concatenate.pivot.99208.100
  br label %concat_index_from_operand_id490

concatenate.71.merge73:                           ; preds = %concat_index_from_operand_id490, %concat_index_from_operand_id386, %concat_index_from_operand_id282, %concat_index_from_operand_id178, %concat_index_from_operand_id074
  %279 = phi float [ %subtract.5877, %concat_index_from_operand_id074 ], [ %subtract.6081, %concat_index_from_operand_id178 ], [ %subtract.6385, %concat_index_from_operand_id282 ], [ %subtract.6689, %concat_index_from_operand_id386 ], [ %subtract.6993, %concat_index_from_operand_id490 ]
  br label %concatenate.pivot.33672.124

concat_index_from_operand_id0104:                 ; preds = %concatenate.pivot.0.126
  %280 = phi i32 [ 0, %concatenate.pivot.0.126 ]
  %281 = sub nsw i32 %3, %280
  %282 = getelementptr inbounds [904 x float], ptr %arg4, i32 0, i32 %281
  %283 = load float, ptr %282, align 4, !invariant.load !297
  %region_0_102_constant_31105 = load float, ptr @133, align 4
  %284 = getelementptr inbounds [904 x float], ptr %arg5, i32 0, i32 %281
  %285 = load float, ptr %284, align 4
  %multiply.73106 = fmul float %region_0_102_constant_31105, %285
  %subtract.74107 = fsub float %283, %multiply.73106
  br label %concatenate.87.merge103

concat_index_from_operand_id1108:                 ; preds = %concatenate.pivot.904.127
  %286 = phi i32 [ 904, %concatenate.pivot.904.127 ]
  %287 = sub nsw i32 %3, %286
  %288 = mul nuw nsw i32 %287, 1
  %289 = add nuw nsw i32 0, %288
  %290 = urem i32 %289, 512
  %291 = udiv i32 %289, 512
  %292 = udiv i32 %291, 64
  %293 = getelementptr inbounds [64 x [512 x float]], ptr %arg10, i32 0, i32 %291, i32 %290
  %294 = load float, ptr %293, align 4, !invariant.load !297
  %region_0_102_constant_35109 = load float, ptr @132, align 4
  %295 = getelementptr inbounds [64 x [512 x float]], ptr %arg11, i32 0, i32 %291, i32 %290
  %296 = load float, ptr %295, align 4
  %multiply.75110 = fmul float %region_0_102_constant_35109, %296
  %subtract.76111 = fsub float %294, %multiply.75110
  br label %concatenate.87.merge103

concat_index_from_operand_id2112:                 ; preds = %concatenate.pivot.33672.129
  %297 = phi i32 [ 33672, %concatenate.pivot.33672.129 ]
  %298 = sub nsw i32 %3, %297
  %299 = mul nuw nsw i32 %298, 1
  %300 = add nuw nsw i32 0, %299
  %301 = urem i32 %300, 512
  %302 = udiv i32 %300, 512
  %303 = udiv i32 %302, 64
  %304 = getelementptr inbounds [64 x [512 x float]], ptr %arg16, i32 0, i32 %302, i32 %301
  %305 = load float, ptr %304, align 4, !invariant.load !297
  %region_0_102_constant_40113 = load float, ptr @131, align 4
  %306 = getelementptr inbounds [64 x [512 x float]], ptr %arg17, i32 0, i32 %302, i32 %301
  %307 = load float, ptr %306, align 4
  %multiply.78114 = fmul float %region_0_102_constant_40113, %307
  %subtract.79115 = fsub float %305, %multiply.78114
  br label %concatenate.87.merge103

concat_index_from_operand_id3116:                 ; preds = %concatenate.pivot.66440.131
  %308 = phi i32 [ 66440, %concatenate.pivot.66440.131 ]
  %309 = sub nsw i32 %3, %308
  %310 = mul nuw nsw i32 %309, 1
  %311 = add nuw nsw i32 0, %310
  %312 = urem i32 %311, 128
  %313 = udiv i32 %311, 128
  %314 = udiv i32 %313, 256
  %315 = getelementptr inbounds [256 x [128 x float]], ptr %arg22, i32 0, i32 %313, i32 %312
  %316 = load float, ptr %315, align 4, !invariant.load !297
  %region_0_102_constant_45117 = load float, ptr @130, align 4
  %317 = getelementptr inbounds [256 x [128 x float]], ptr %arg23, i32 0, i32 %313, i32 %312
  %318 = load float, ptr %317, align 4, !invariant.load !297
  %multiply.81118 = fmul float %region_0_102_constant_45117, %318
  %subtract.82119 = fsub float %316, %multiply.81118
  br label %concatenate.87.merge103

concat_index_from_operand_id4120:                 ; preds = %concatenate.pivot.99208.132
  %319 = phi i32 [ 99208, %concatenate.pivot.99208.132 ]
  %320 = sub nsw i32 %3, %319
  %321 = mul nuw nsw i32 %320, 1
  %322 = add nuw nsw i32 0, %321
  %323 = urem i32 %322, 512
  %324 = udiv i32 %322, 512
  %325 = udiv i32 %324, 128
  %326 = getelementptr inbounds [128 x [512 x float]], ptr %arg28, i32 0, i32 %324, i32 %323
  %327 = load float, ptr %326, align 4, !invariant.load !297
  %region_0_102_constant_50121 = load float, ptr @129, align 4
  %328 = getelementptr inbounds [128 x [512 x float]], ptr %arg29, i32 0, i32 %324, i32 %323
  %329 = load float, ptr %328, align 4
  %multiply.84122 = fmul float %region_0_102_constant_50121, %329
  %subtract.85123 = fsub float %327, %multiply.84122
  br label %concatenate.87.merge103

concatenate.pivot.33672.124:                      ; preds = %concatenate.71.merge73
  %330 = icmp ult i32 %3, 33672
  br i1 %330, label %concatenate.pivot.904.125, label %concatenate.pivot.66440.128

concatenate.pivot.904.125:                        ; preds = %concatenate.pivot.33672.124
  %331 = icmp ult i32 %3, 904
  br i1 %331, label %concatenate.pivot.0.126, label %concatenate.pivot.904.127

concatenate.pivot.0.126:                          ; preds = %concatenate.pivot.904.125
  br label %concat_index_from_operand_id0104

concatenate.pivot.904.127:                        ; preds = %concatenate.pivot.904.125
  br label %concat_index_from_operand_id1108

concatenate.pivot.66440.128:                      ; preds = %concatenate.pivot.33672.124
  %332 = icmp ult i32 %3, 66440
  br i1 %332, label %concatenate.pivot.33672.129, label %concatenate.pivot.99208.130

concatenate.pivot.33672.129:                      ; preds = %concatenate.pivot.66440.128
  br label %concat_index_from_operand_id2112

concatenate.pivot.99208.130:                      ; preds = %concatenate.pivot.66440.128
  %333 = icmp ult i32 %3, 99208
  br i1 %333, label %concatenate.pivot.66440.131, label %concatenate.pivot.99208.132

concatenate.pivot.66440.131:                      ; preds = %concatenate.pivot.99208.130
  br label %concat_index_from_operand_id3116

concatenate.pivot.99208.132:                      ; preds = %concatenate.pivot.99208.130
  br label %concat_index_from_operand_id4120

concatenate.87.merge103:                          ; preds = %concat_index_from_operand_id4120, %concat_index_from_operand_id3116, %concat_index_from_operand_id2112, %concat_index_from_operand_id1108, %concat_index_from_operand_id0104
  %334 = phi float [ %subtract.74107, %concat_index_from_operand_id0104 ], [ %subtract.76111, %concat_index_from_operand_id1108 ], [ %subtract.79115, %concat_index_from_operand_id2112 ], [ %subtract.82119, %concat_index_from_operand_id3116 ], [ %subtract.85123, %concat_index_from_operand_id4120 ]
  br label %concatenate.pivot.33672.154

concat_index_from_operand_id0134:                 ; preds = %concatenate.pivot.0.156
  %335 = phi i32 [ 0, %concatenate.pivot.0.156 ]
  %336 = sub nsw i32 %3, %335
  %337 = getelementptr inbounds [904 x float], ptr %arg0, i32 0, i32 %336
  %338 = load float, ptr %337, align 4, !invariant.load !297
  %region_0_102_constant_31135 = load float, ptr @133, align 4
  %339 = getelementptr inbounds [904 x float], ptr %arg1, i32 0, i32 %336
  %340 = load float, ptr %339, align 4
  %multiply.33136 = fmul float %region_0_102_constant_31135, %340
  %subtract.34137 = fsub float %338, %multiply.33136
  br label %concatenate.55.merge133

concat_index_from_operand_id1138:                 ; preds = %concatenate.pivot.904.157
  %341 = phi i32 [ 904, %concatenate.pivot.904.157 ]
  %342 = sub nsw i32 %3, %341
  %343 = mul nuw nsw i32 %342, 1
  %344 = add nuw nsw i32 0, %343
  %345 = urem i32 %344, 512
  %346 = udiv i32 %344, 512
  %347 = udiv i32 %346, 64
  %348 = getelementptr inbounds [64 x [512 x float]], ptr %arg6, i32 0, i32 %346, i32 %345
  %349 = load float, ptr %348, align 4, !invariant.load !297
  %region_0_102_constant_35139 = load float, ptr @132, align 4
  %350 = getelementptr inbounds [64 x [512 x float]], ptr %arg7, i32 0, i32 %346, i32 %345
  %351 = load float, ptr %350, align 4
  %multiply.37140 = fmul float %region_0_102_constant_35139, %351
  %subtract.38141 = fsub float %349, %multiply.37140
  br label %concatenate.55.merge133

concat_index_from_operand_id2142:                 ; preds = %concatenate.pivot.33672.159
  %352 = phi i32 [ 33672, %concatenate.pivot.33672.159 ]
  %353 = sub nsw i32 %3, %352
  %354 = mul nuw nsw i32 %353, 1
  %355 = add nuw nsw i32 0, %354
  %356 = urem i32 %355, 512
  %357 = udiv i32 %355, 512
  %358 = udiv i32 %357, 64
  %359 = getelementptr inbounds [64 x [512 x float]], ptr %arg12, i32 0, i32 %357, i32 %356
  %360 = load float, ptr %359, align 4, !invariant.load !297
  %region_0_102_constant_40143 = load float, ptr @131, align 4
  %361 = getelementptr inbounds [64 x [512 x float]], ptr %arg13, i32 0, i32 %357, i32 %356
  %362 = load float, ptr %361, align 4, !invariant.load !297
  %multiply.42144 = fmul float %region_0_102_constant_40143, %362
  %subtract.43145 = fsub float %360, %multiply.42144
  br label %concatenate.55.merge133

concat_index_from_operand_id3146:                 ; preds = %concatenate.pivot.66440.161
  %363 = phi i32 [ 66440, %concatenate.pivot.66440.161 ]
  %364 = sub nsw i32 %3, %363
  %365 = mul nuw nsw i32 %364, 1
  %366 = add nuw nsw i32 0, %365
  %367 = urem i32 %366, 128
  %368 = udiv i32 %366, 128
  %369 = udiv i32 %368, 256
  %370 = getelementptr inbounds [256 x [128 x float]], ptr %arg18, i32 0, i32 %368, i32 %367
  %371 = load float, ptr %370, align 4, !invariant.load !297
  %region_0_102_constant_45147 = load float, ptr @130, align 4
  %372 = getelementptr inbounds [256 x [128 x float]], ptr %arg19, i32 0, i32 %368, i32 %367
  %373 = load float, ptr %372, align 4, !invariant.load !297
  %multiply.47148 = fmul float %region_0_102_constant_45147, %373
  %subtract.48149 = fsub float %371, %multiply.47148
  br label %concatenate.55.merge133

concat_index_from_operand_id4150:                 ; preds = %concatenate.pivot.99208.162
  %374 = phi i32 [ 99208, %concatenate.pivot.99208.162 ]
  %375 = sub nsw i32 %3, %374
  %376 = mul nuw nsw i32 %375, 1
  %377 = add nuw nsw i32 0, %376
  %378 = urem i32 %377, 512
  %379 = udiv i32 %377, 512
  %380 = udiv i32 %379, 128
  %381 = getelementptr inbounds [128 x [512 x float]], ptr %arg24, i32 0, i32 %379, i32 %378
  %382 = load float, ptr %381, align 4, !invariant.load !297
  %region_0_102_constant_50151 = load float, ptr @129, align 4
  %383 = getelementptr inbounds [128 x [512 x float]], ptr %arg25, i32 0, i32 %379, i32 %378
  %384 = load float, ptr %383, align 4
  %multiply.52152 = fmul float %region_0_102_constant_50151, %384
  %subtract.53153 = fsub float %382, %multiply.52152
  br label %concatenate.55.merge133

concatenate.pivot.33672.154:                      ; preds = %concatenate.87.merge103
  %385 = icmp ult i32 %3, 33672
  br i1 %385, label %concatenate.pivot.904.155, label %concatenate.pivot.66440.158

concatenate.pivot.904.155:                        ; preds = %concatenate.pivot.33672.154
  %386 = icmp ult i32 %3, 904
  br i1 %386, label %concatenate.pivot.0.156, label %concatenate.pivot.904.157

concatenate.pivot.0.156:                          ; preds = %concatenate.pivot.904.155
  br label %concat_index_from_operand_id0134

concatenate.pivot.904.157:                        ; preds = %concatenate.pivot.904.155
  br label %concat_index_from_operand_id1138

concatenate.pivot.66440.158:                      ; preds = %concatenate.pivot.33672.154
  %387 = icmp ult i32 %3, 66440
  br i1 %387, label %concatenate.pivot.33672.159, label %concatenate.pivot.99208.160

concatenate.pivot.33672.159:                      ; preds = %concatenate.pivot.66440.158
  br label %concat_index_from_operand_id2142

concatenate.pivot.99208.160:                      ; preds = %concatenate.pivot.66440.158
  %388 = icmp ult i32 %3, 99208
  br i1 %388, label %concatenate.pivot.66440.161, label %concatenate.pivot.99208.162

concatenate.pivot.66440.161:                      ; preds = %concatenate.pivot.99208.160
  br label %concat_index_from_operand_id3146

concatenate.pivot.99208.162:                      ; preds = %concatenate.pivot.99208.160
  br label %concat_index_from_operand_id4150

concatenate.55.merge133:                          ; preds = %concat_index_from_operand_id4150, %concat_index_from_operand_id3146, %concat_index_from_operand_id2142, %concat_index_from_operand_id1138, %concat_index_from_operand_id0134
  %389 = phi float [ %subtract.34137, %concat_index_from_operand_id0134 ], [ %subtract.38141, %concat_index_from_operand_id1138 ], [ %subtract.43145, %concat_index_from_operand_id2142 ], [ %subtract.48149, %concat_index_from_operand_id3146 ], [ %subtract.53153, %concat_index_from_operand_id4150 ]
  br label %concatenate.pivot.33672.184

concat_index_from_operand_id0164:                 ; preds = %concatenate.pivot.0.186
  %390 = phi i32 [ 0, %concatenate.pivot.0.186 ]
  %391 = sub nsw i32 %3, %390
  %392 = getelementptr inbounds [904 x float], ptr %arg2, i32 0, i32 %391
  %393 = load float, ptr %392, align 4, !invariant.load !297
  %region_0_102_constant_31165 = load float, ptr @133, align 4
  %394 = getelementptr inbounds [904 x float], ptr %arg3, i32 0, i32 %391
  %395 = load float, ptr %394, align 4
  %multiply.57166 = fmul float %region_0_102_constant_31165, %395
  %subtract.58167 = fsub float %393, %multiply.57166
  br label %concatenate.71.merge163

concat_index_from_operand_id1168:                 ; preds = %concatenate.pivot.904.187
  %396 = phi i32 [ 904, %concatenate.pivot.904.187 ]
  %397 = sub nsw i32 %3, %396
  %398 = mul nuw nsw i32 %397, 1
  %399 = add nuw nsw i32 0, %398
  %400 = urem i32 %399, 512
  %401 = udiv i32 %399, 512
  %402 = udiv i32 %401, 64
  %403 = getelementptr inbounds [64 x [512 x float]], ptr %arg8, i32 0, i32 %401, i32 %400
  %404 = load float, ptr %403, align 4, !invariant.load !297
  %region_0_102_constant_35169 = load float, ptr @132, align 4
  %405 = getelementptr inbounds [64 x [512 x float]], ptr %arg9, i32 0, i32 %401, i32 %400
  %406 = load float, ptr %405, align 4
  %multiply.59170 = fmul float %region_0_102_constant_35169, %406
  %subtract.60171 = fsub float %404, %multiply.59170
  br label %concatenate.71.merge163

concat_index_from_operand_id2172:                 ; preds = %concatenate.pivot.33672.189
  %407 = phi i32 [ 33672, %concatenate.pivot.33672.189 ]
  %408 = sub nsw i32 %3, %407
  %409 = mul nuw nsw i32 %408, 1
  %410 = add nuw nsw i32 0, %409
  %411 = urem i32 %410, 512
  %412 = udiv i32 %410, 512
  %413 = udiv i32 %412, 64
  %414 = getelementptr inbounds [64 x [512 x float]], ptr %arg14, i32 0, i32 %412, i32 %411
  %415 = load float, ptr %414, align 4, !invariant.load !297
  %region_0_102_constant_40173 = load float, ptr @131, align 4
  %416 = getelementptr inbounds [64 x [512 x float]], ptr %arg15, i32 0, i32 %412, i32 %411
  %417 = load float, ptr %416, align 4, !invariant.load !297
  %multiply.62174 = fmul float %region_0_102_constant_40173, %417
  %subtract.63175 = fsub float %415, %multiply.62174
  br label %concatenate.71.merge163

concat_index_from_operand_id3176:                 ; preds = %concatenate.pivot.66440.191
  %418 = phi i32 [ 66440, %concatenate.pivot.66440.191 ]
  %419 = sub nsw i32 %3, %418
  %420 = mul nuw nsw i32 %419, 1
  %421 = add nuw nsw i32 0, %420
  %422 = urem i32 %421, 128
  %423 = udiv i32 %421, 128
  %424 = udiv i32 %423, 256
  %425 = getelementptr inbounds [256 x [128 x float]], ptr %arg20, i32 0, i32 %423, i32 %422
  %426 = load float, ptr %425, align 4, !invariant.load !297
  %region_0_102_constant_45177 = load float, ptr @130, align 4
  %427 = getelementptr inbounds [256 x [128 x float]], ptr %arg21, i32 0, i32 %423, i32 %422
  %428 = load float, ptr %427, align 4, !invariant.load !297
  %multiply.65178 = fmul float %region_0_102_constant_45177, %428
  %subtract.66179 = fsub float %426, %multiply.65178
  br label %concatenate.71.merge163

concat_index_from_operand_id4180:                 ; preds = %concatenate.pivot.99208.192
  %429 = phi i32 [ 99208, %concatenate.pivot.99208.192 ]
  %430 = sub nsw i32 %3, %429
  %431 = mul nuw nsw i32 %430, 1
  %432 = add nuw nsw i32 0, %431
  %433 = urem i32 %432, 512
  %434 = udiv i32 %432, 512
  %435 = udiv i32 %434, 128
  %436 = getelementptr inbounds [128 x [512 x float]], ptr %arg26, i32 0, i32 %434, i32 %433
  %437 = load float, ptr %436, align 4, !invariant.load !297
  %region_0_102_constant_50181 = load float, ptr @129, align 4
  %438 = getelementptr inbounds [128 x [512 x float]], ptr %arg27, i32 0, i32 %434, i32 %433
  %439 = load float, ptr %438, align 4
  %multiply.68182 = fmul float %region_0_102_constant_50181, %439
  %subtract.69183 = fsub float %437, %multiply.68182
  br label %concatenate.71.merge163

concatenate.pivot.33672.184:                      ; preds = %concatenate.55.merge133
  %440 = icmp ult i32 %3, 33672
  br i1 %440, label %concatenate.pivot.904.185, label %concatenate.pivot.66440.188

concatenate.pivot.904.185:                        ; preds = %concatenate.pivot.33672.184
  %441 = icmp ult i32 %3, 904
  br i1 %441, label %concatenate.pivot.0.186, label %concatenate.pivot.904.187

concatenate.pivot.0.186:                          ; preds = %concatenate.pivot.904.185
  br label %concat_index_from_operand_id0164

concatenate.pivot.904.187:                        ; preds = %concatenate.pivot.904.185
  br label %concat_index_from_operand_id1168

concatenate.pivot.66440.188:                      ; preds = %concatenate.pivot.33672.184
  %442 = icmp ult i32 %3, 66440
  br i1 %442, label %concatenate.pivot.33672.189, label %concatenate.pivot.99208.190

concatenate.pivot.33672.189:                      ; preds = %concatenate.pivot.66440.188
  br label %concat_index_from_operand_id2172

concatenate.pivot.99208.190:                      ; preds = %concatenate.pivot.66440.188
  %443 = icmp ult i32 %3, 99208
  br i1 %443, label %concatenate.pivot.66440.191, label %concatenate.pivot.99208.192

concatenate.pivot.66440.191:                      ; preds = %concatenate.pivot.99208.190
  br label %concat_index_from_operand_id3176

concatenate.pivot.99208.192:                      ; preds = %concatenate.pivot.99208.190
  br label %concat_index_from_operand_id4180

concatenate.71.merge163:                          ; preds = %concat_index_from_operand_id4180, %concat_index_from_operand_id3176, %concat_index_from_operand_id2172, %concat_index_from_operand_id1168, %concat_index_from_operand_id0164
  %444 = phi float [ %subtract.58167, %concat_index_from_operand_id0164 ], [ %subtract.60171, %concat_index_from_operand_id1168 ], [ %subtract.63175, %concat_index_from_operand_id2172 ], [ %subtract.66179, %concat_index_from_operand_id3176 ], [ %subtract.69183, %concat_index_from_operand_id4180 ]
  br label %concatenate.pivot.33672.214

concat_index_from_operand_id0194:                 ; preds = %concatenate.pivot.0.216
  %445 = phi i32 [ 0, %concatenate.pivot.0.216 ]
  %446 = sub nsw i32 %3, %445
  %447 = getelementptr inbounds [904 x float], ptr %arg4, i32 0, i32 %446
  %448 = load float, ptr %447, align 4, !invariant.load !297
  %region_0_102_constant_31195 = load float, ptr @133, align 4
  %449 = getelementptr inbounds [904 x float], ptr %arg5, i32 0, i32 %446
  %450 = load float, ptr %449, align 4
  %multiply.73196 = fmul float %region_0_102_constant_31195, %450
  %subtract.74197 = fsub float %448, %multiply.73196
  br label %concatenate.87.merge193

concat_index_from_operand_id1198:                 ; preds = %concatenate.pivot.904.217
  %451 = phi i32 [ 904, %concatenate.pivot.904.217 ]
  %452 = sub nsw i32 %3, %451
  %453 = mul nuw nsw i32 %452, 1
  %454 = add nuw nsw i32 0, %453
  %455 = urem i32 %454, 512
  %456 = udiv i32 %454, 512
  %457 = udiv i32 %456, 64
  %458 = getelementptr inbounds [64 x [512 x float]], ptr %arg10, i32 0, i32 %456, i32 %455
  %459 = load float, ptr %458, align 4, !invariant.load !297
  %region_0_102_constant_35199 = load float, ptr @132, align 4
  %460 = getelementptr inbounds [64 x [512 x float]], ptr %arg11, i32 0, i32 %456, i32 %455
  %461 = load float, ptr %460, align 4
  %multiply.75200 = fmul float %region_0_102_constant_35199, %461
  %subtract.76201 = fsub float %459, %multiply.75200
  br label %concatenate.87.merge193

concat_index_from_operand_id2202:                 ; preds = %concatenate.pivot.33672.219
  %462 = phi i32 [ 33672, %concatenate.pivot.33672.219 ]
  %463 = sub nsw i32 %3, %462
  %464 = mul nuw nsw i32 %463, 1
  %465 = add nuw nsw i32 0, %464
  %466 = urem i32 %465, 512
  %467 = udiv i32 %465, 512
  %468 = udiv i32 %467, 64
  %469 = getelementptr inbounds [64 x [512 x float]], ptr %arg16, i32 0, i32 %467, i32 %466
  %470 = load float, ptr %469, align 4, !invariant.load !297
  %region_0_102_constant_40203 = load float, ptr @131, align 4
  %471 = getelementptr inbounds [64 x [512 x float]], ptr %arg17, i32 0, i32 %467, i32 %466
  %472 = load float, ptr %471, align 4
  %multiply.78204 = fmul float %region_0_102_constant_40203, %472
  %subtract.79205 = fsub float %470, %multiply.78204
  br label %concatenate.87.merge193

concat_index_from_operand_id3206:                 ; preds = %concatenate.pivot.66440.221
  %473 = phi i32 [ 66440, %concatenate.pivot.66440.221 ]
  %474 = sub nsw i32 %3, %473
  %475 = mul nuw nsw i32 %474, 1
  %476 = add nuw nsw i32 0, %475
  %477 = urem i32 %476, 128
  %478 = udiv i32 %476, 128
  %479 = udiv i32 %478, 256
  %480 = getelementptr inbounds [256 x [128 x float]], ptr %arg22, i32 0, i32 %478, i32 %477
  %481 = load float, ptr %480, align 4, !invariant.load !297
  %region_0_102_constant_45207 = load float, ptr @130, align 4
  %482 = getelementptr inbounds [256 x [128 x float]], ptr %arg23, i32 0, i32 %478, i32 %477
  %483 = load float, ptr %482, align 4, !invariant.load !297
  %multiply.81208 = fmul float %region_0_102_constant_45207, %483
  %subtract.82209 = fsub float %481, %multiply.81208
  br label %concatenate.87.merge193

concat_index_from_operand_id4210:                 ; preds = %concatenate.pivot.99208.222
  %484 = phi i32 [ 99208, %concatenate.pivot.99208.222 ]
  %485 = sub nsw i32 %3, %484
  %486 = mul nuw nsw i32 %485, 1
  %487 = add nuw nsw i32 0, %486
  %488 = urem i32 %487, 512
  %489 = udiv i32 %487, 512
  %490 = udiv i32 %489, 128
  %491 = getelementptr inbounds [128 x [512 x float]], ptr %arg28, i32 0, i32 %489, i32 %488
  %492 = load float, ptr %491, align 4, !invariant.load !297
  %region_0_102_constant_50211 = load float, ptr @129, align 4
  %493 = getelementptr inbounds [128 x [512 x float]], ptr %arg29, i32 0, i32 %489, i32 %488
  %494 = load float, ptr %493, align 4
  %multiply.84212 = fmul float %region_0_102_constant_50211, %494
  %subtract.85213 = fsub float %492, %multiply.84212
  br label %concatenate.87.merge193

concatenate.pivot.33672.214:                      ; preds = %concatenate.71.merge163
  %495 = icmp ult i32 %3, 33672
  br i1 %495, label %concatenate.pivot.904.215, label %concatenate.pivot.66440.218

concatenate.pivot.904.215:                        ; preds = %concatenate.pivot.33672.214
  %496 = icmp ult i32 %3, 904
  br i1 %496, label %concatenate.pivot.0.216, label %concatenate.pivot.904.217

concatenate.pivot.0.216:                          ; preds = %concatenate.pivot.904.215
  br label %concat_index_from_operand_id0194

concatenate.pivot.904.217:                        ; preds = %concatenate.pivot.904.215
  br label %concat_index_from_operand_id1198

concatenate.pivot.66440.218:                      ; preds = %concatenate.pivot.33672.214
  %497 = icmp ult i32 %3, 66440
  br i1 %497, label %concatenate.pivot.33672.219, label %concatenate.pivot.99208.220

concatenate.pivot.33672.219:                      ; preds = %concatenate.pivot.66440.218
  br label %concat_index_from_operand_id2202

concatenate.pivot.99208.220:                      ; preds = %concatenate.pivot.66440.218
  %498 = icmp ult i32 %3, 99208
  br i1 %498, label %concatenate.pivot.66440.221, label %concatenate.pivot.99208.222

concatenate.pivot.66440.221:                      ; preds = %concatenate.pivot.99208.220
  br label %concat_index_from_operand_id3206

concatenate.pivot.99208.222:                      ; preds = %concatenate.pivot.99208.220
  br label %concat_index_from_operand_id4210

concatenate.87.merge193:                          ; preds = %concat_index_from_operand_id4210, %concat_index_from_operand_id3206, %concat_index_from_operand_id2202, %concat_index_from_operand_id1198, %concat_index_from_operand_id0194
  %499 = phi float [ %subtract.74197, %concat_index_from_operand_id0194 ], [ %subtract.76201, %concat_index_from_operand_id1198 ], [ %subtract.79205, %concat_index_from_operand_id2202 ], [ %subtract.82209, %concat_index_from_operand_id3206 ], [ %subtract.85213, %concat_index_from_operand_id4210 ]
  br label %concatenate.pivot.33672.244

concat_index_from_operand_id0224:                 ; preds = %concatenate.pivot.0.246
  %500 = phi i32 [ 0, %concatenate.pivot.0.246 ]
  %501 = sub nsw i32 %3, %500
  %502 = getelementptr inbounds [904 x float], ptr %arg0, i32 0, i32 %501
  %503 = load float, ptr %502, align 4, !invariant.load !297
  %region_0_102_constant_31225 = load float, ptr @133, align 4
  %504 = getelementptr inbounds [904 x float], ptr %arg1, i32 0, i32 %501
  %505 = load float, ptr %504, align 4
  %multiply.33226 = fmul float %region_0_102_constant_31225, %505
  %subtract.34227 = fsub float %503, %multiply.33226
  br label %concatenate.55.merge223

concat_index_from_operand_id1228:                 ; preds = %concatenate.pivot.904.247
  %506 = phi i32 [ 904, %concatenate.pivot.904.247 ]
  %507 = sub nsw i32 %3, %506
  %508 = mul nuw nsw i32 %507, 1
  %509 = add nuw nsw i32 0, %508
  %510 = urem i32 %509, 512
  %511 = udiv i32 %509, 512
  %512 = udiv i32 %511, 64
  %513 = getelementptr inbounds [64 x [512 x float]], ptr %arg6, i32 0, i32 %511, i32 %510
  %514 = load float, ptr %513, align 4, !invariant.load !297
  %region_0_102_constant_35229 = load float, ptr @132, align 4
  %515 = getelementptr inbounds [64 x [512 x float]], ptr %arg7, i32 0, i32 %511, i32 %510
  %516 = load float, ptr %515, align 4
  %multiply.37230 = fmul float %region_0_102_constant_35229, %516
  %subtract.38231 = fsub float %514, %multiply.37230
  br label %concatenate.55.merge223

concat_index_from_operand_id2232:                 ; preds = %concatenate.pivot.33672.249
  %517 = phi i32 [ 33672, %concatenate.pivot.33672.249 ]
  %518 = sub nsw i32 %3, %517
  %519 = mul nuw nsw i32 %518, 1
  %520 = add nuw nsw i32 0, %519
  %521 = urem i32 %520, 512
  %522 = udiv i32 %520, 512
  %523 = udiv i32 %522, 64
  %524 = getelementptr inbounds [64 x [512 x float]], ptr %arg12, i32 0, i32 %522, i32 %521
  %525 = load float, ptr %524, align 4, !invariant.load !297
  %region_0_102_constant_40233 = load float, ptr @131, align 4
  %526 = getelementptr inbounds [64 x [512 x float]], ptr %arg13, i32 0, i32 %522, i32 %521
  %527 = load float, ptr %526, align 4, !invariant.load !297
  %multiply.42234 = fmul float %region_0_102_constant_40233, %527
  %subtract.43235 = fsub float %525, %multiply.42234
  br label %concatenate.55.merge223

concat_index_from_operand_id3236:                 ; preds = %concatenate.pivot.66440.251
  %528 = phi i32 [ 66440, %concatenate.pivot.66440.251 ]
  %529 = sub nsw i32 %3, %528
  %530 = mul nuw nsw i32 %529, 1
  %531 = add nuw nsw i32 0, %530
  %532 = urem i32 %531, 128
  %533 = udiv i32 %531, 128
  %534 = udiv i32 %533, 256
  %535 = getelementptr inbounds [256 x [128 x float]], ptr %arg18, i32 0, i32 %533, i32 %532
  %536 = load float, ptr %535, align 4, !invariant.load !297
  %region_0_102_constant_45237 = load float, ptr @130, align 4
  %537 = getelementptr inbounds [256 x [128 x float]], ptr %arg19, i32 0, i32 %533, i32 %532
  %538 = load float, ptr %537, align 4, !invariant.load !297
  %multiply.47238 = fmul float %region_0_102_constant_45237, %538
  %subtract.48239 = fsub float %536, %multiply.47238
  br label %concatenate.55.merge223

concat_index_from_operand_id4240:                 ; preds = %concatenate.pivot.99208.252
  %539 = phi i32 [ 99208, %concatenate.pivot.99208.252 ]
  %540 = sub nsw i32 %3, %539
  %541 = mul nuw nsw i32 %540, 1
  %542 = add nuw nsw i32 0, %541
  %543 = urem i32 %542, 512
  %544 = udiv i32 %542, 512
  %545 = udiv i32 %544, 128
  %546 = getelementptr inbounds [128 x [512 x float]], ptr %arg24, i32 0, i32 %544, i32 %543
  %547 = load float, ptr %546, align 4, !invariant.load !297
  %region_0_102_constant_50241 = load float, ptr @129, align 4
  %548 = getelementptr inbounds [128 x [512 x float]], ptr %arg25, i32 0, i32 %544, i32 %543
  %549 = load float, ptr %548, align 4
  %multiply.52242 = fmul float %region_0_102_constant_50241, %549
  %subtract.53243 = fsub float %547, %multiply.52242
  br label %concatenate.55.merge223

concatenate.pivot.33672.244:                      ; preds = %concatenate.87.merge193
  %550 = icmp ult i32 %3, 33672
  br i1 %550, label %concatenate.pivot.904.245, label %concatenate.pivot.66440.248

concatenate.pivot.904.245:                        ; preds = %concatenate.pivot.33672.244
  %551 = icmp ult i32 %3, 904
  br i1 %551, label %concatenate.pivot.0.246, label %concatenate.pivot.904.247

concatenate.pivot.0.246:                          ; preds = %concatenate.pivot.904.245
  br label %concat_index_from_operand_id0224

concatenate.pivot.904.247:                        ; preds = %concatenate.pivot.904.245
  br label %concat_index_from_operand_id1228

concatenate.pivot.66440.248:                      ; preds = %concatenate.pivot.33672.244
  %552 = icmp ult i32 %3, 66440
  br i1 %552, label %concatenate.pivot.33672.249, label %concatenate.pivot.99208.250

concatenate.pivot.33672.249:                      ; preds = %concatenate.pivot.66440.248
  br label %concat_index_from_operand_id2232

concatenate.pivot.99208.250:                      ; preds = %concatenate.pivot.66440.248
  %553 = icmp ult i32 %3, 99208
  br i1 %553, label %concatenate.pivot.66440.251, label %concatenate.pivot.99208.252

concatenate.pivot.66440.251:                      ; preds = %concatenate.pivot.99208.250
  br label %concat_index_from_operand_id3236

concatenate.pivot.99208.252:                      ; preds = %concatenate.pivot.99208.250
  br label %concat_index_from_operand_id4240

concatenate.55.merge223:                          ; preds = %concat_index_from_operand_id4240, %concat_index_from_operand_id3236, %concat_index_from_operand_id2232, %concat_index_from_operand_id1228, %concat_index_from_operand_id0224
  %554 = phi float [ %subtract.34227, %concat_index_from_operand_id0224 ], [ %subtract.38231, %concat_index_from_operand_id1228 ], [ %subtract.43235, %concat_index_from_operand_id2232 ], [ %subtract.48239, %concat_index_from_operand_id3236 ], [ %subtract.53243, %concat_index_from_operand_id4240 ]
  br label %concatenate.pivot.33672.274

concat_index_from_operand_id0254:                 ; preds = %concatenate.pivot.0.276
  %555 = phi i32 [ 0, %concatenate.pivot.0.276 ]
  %556 = sub nsw i32 %3, %555
  %557 = getelementptr inbounds [904 x float], ptr %arg2, i32 0, i32 %556
  %558 = load float, ptr %557, align 4, !invariant.load !297
  %region_0_102_constant_31255 = load float, ptr @133, align 4
  %559 = getelementptr inbounds [904 x float], ptr %arg3, i32 0, i32 %556
  %560 = load float, ptr %559, align 4
  %multiply.57256 = fmul float %region_0_102_constant_31255, %560
  %subtract.58257 = fsub float %558, %multiply.57256
  br label %concatenate.71.merge253

concat_index_from_operand_id1258:                 ; preds = %concatenate.pivot.904.277
  %561 = phi i32 [ 904, %concatenate.pivot.904.277 ]
  %562 = sub nsw i32 %3, %561
  %563 = mul nuw nsw i32 %562, 1
  %564 = add nuw nsw i32 0, %563
  %565 = urem i32 %564, 512
  %566 = udiv i32 %564, 512
  %567 = udiv i32 %566, 64
  %568 = getelementptr inbounds [64 x [512 x float]], ptr %arg8, i32 0, i32 %566, i32 %565
  %569 = load float, ptr %568, align 4, !invariant.load !297
  %region_0_102_constant_35259 = load float, ptr @132, align 4
  %570 = getelementptr inbounds [64 x [512 x float]], ptr %arg9, i32 0, i32 %566, i32 %565
  %571 = load float, ptr %570, align 4
  %multiply.59260 = fmul float %region_0_102_constant_35259, %571
  %subtract.60261 = fsub float %569, %multiply.59260
  br label %concatenate.71.merge253

concat_index_from_operand_id2262:                 ; preds = %concatenate.pivot.33672.279
  %572 = phi i32 [ 33672, %concatenate.pivot.33672.279 ]
  %573 = sub nsw i32 %3, %572
  %574 = mul nuw nsw i32 %573, 1
  %575 = add nuw nsw i32 0, %574
  %576 = urem i32 %575, 512
  %577 = udiv i32 %575, 512
  %578 = udiv i32 %577, 64
  %579 = getelementptr inbounds [64 x [512 x float]], ptr %arg14, i32 0, i32 %577, i32 %576
  %580 = load float, ptr %579, align 4, !invariant.load !297
  %region_0_102_constant_40263 = load float, ptr @131, align 4
  %581 = getelementptr inbounds [64 x [512 x float]], ptr %arg15, i32 0, i32 %577, i32 %576
  %582 = load float, ptr %581, align 4, !invariant.load !297
  %multiply.62264 = fmul float %region_0_102_constant_40263, %582
  %subtract.63265 = fsub float %580, %multiply.62264
  br label %concatenate.71.merge253

concat_index_from_operand_id3266:                 ; preds = %concatenate.pivot.66440.281
  %583 = phi i32 [ 66440, %concatenate.pivot.66440.281 ]
  %584 = sub nsw i32 %3, %583
  %585 = mul nuw nsw i32 %584, 1
  %586 = add nuw nsw i32 0, %585
  %587 = urem i32 %586, 128
  %588 = udiv i32 %586, 128
  %589 = udiv i32 %588, 256
  %590 = getelementptr inbounds [256 x [128 x float]], ptr %arg20, i32 0, i32 %588, i32 %587
  %591 = load float, ptr %590, align 4, !invariant.load !297
  %region_0_102_constant_45267 = load float, ptr @130, align 4
  %592 = getelementptr inbounds [256 x [128 x float]], ptr %arg21, i32 0, i32 %588, i32 %587
  %593 = load float, ptr %592, align 4, !invariant.load !297
  %multiply.65268 = fmul float %region_0_102_constant_45267, %593
  %subtract.66269 = fsub float %591, %multiply.65268
  br label %concatenate.71.merge253

concat_index_from_operand_id4270:                 ; preds = %concatenate.pivot.99208.282
  %594 = phi i32 [ 99208, %concatenate.pivot.99208.282 ]
  %595 = sub nsw i32 %3, %594
  %596 = mul nuw nsw i32 %595, 1
  %597 = add nuw nsw i32 0, %596
  %598 = urem i32 %597, 512
  %599 = udiv i32 %597, 512
  %600 = udiv i32 %599, 128
  %601 = getelementptr inbounds [128 x [512 x float]], ptr %arg26, i32 0, i32 %599, i32 %598
  %602 = load float, ptr %601, align 4, !invariant.load !297
  %region_0_102_constant_50271 = load float, ptr @129, align 4
  %603 = getelementptr inbounds [128 x [512 x float]], ptr %arg27, i32 0, i32 %599, i32 %598
  %604 = load float, ptr %603, align 4
  %multiply.68272 = fmul float %region_0_102_constant_50271, %604
  %subtract.69273 = fsub float %602, %multiply.68272
  br label %concatenate.71.merge253

concatenate.pivot.33672.274:                      ; preds = %concatenate.55.merge223
  %605 = icmp ult i32 %3, 33672
  br i1 %605, label %concatenate.pivot.904.275, label %concatenate.pivot.66440.278

concatenate.pivot.904.275:                        ; preds = %concatenate.pivot.33672.274
  %606 = icmp ult i32 %3, 904
  br i1 %606, label %concatenate.pivot.0.276, label %concatenate.pivot.904.277

concatenate.pivot.0.276:                          ; preds = %concatenate.pivot.904.275
  br label %concat_index_from_operand_id0254

concatenate.pivot.904.277:                        ; preds = %concatenate.pivot.904.275
  br label %concat_index_from_operand_id1258

concatenate.pivot.66440.278:                      ; preds = %concatenate.pivot.33672.274
  %607 = icmp ult i32 %3, 66440
  br i1 %607, label %concatenate.pivot.33672.279, label %concatenate.pivot.99208.280

concatenate.pivot.33672.279:                      ; preds = %concatenate.pivot.66440.278
  br label %concat_index_from_operand_id2262

concatenate.pivot.99208.280:                      ; preds = %concatenate.pivot.66440.278
  %608 = icmp ult i32 %3, 99208
  br i1 %608, label %concatenate.pivot.66440.281, label %concatenate.pivot.99208.282

concatenate.pivot.66440.281:                      ; preds = %concatenate.pivot.99208.280
  br label %concat_index_from_operand_id3266

concatenate.pivot.99208.282:                      ; preds = %concatenate.pivot.99208.280
  br label %concat_index_from_operand_id4270

concatenate.71.merge253:                          ; preds = %concat_index_from_operand_id4270, %concat_index_from_operand_id3266, %concat_index_from_operand_id2262, %concat_index_from_operand_id1258, %concat_index_from_operand_id0254
  %609 = phi float [ %subtract.58257, %concat_index_from_operand_id0254 ], [ %subtract.60261, %concat_index_from_operand_id1258 ], [ %subtract.63265, %concat_index_from_operand_id2262 ], [ %subtract.66269, %concat_index_from_operand_id3266 ], [ %subtract.69273, %concat_index_from_operand_id4270 ]
  br label %concatenate.pivot.33672.304

concat_index_from_operand_id0284:                 ; preds = %concatenate.pivot.0.306
  %610 = phi i32 [ 0, %concatenate.pivot.0.306 ]
  %611 = sub nsw i32 %3, %610
  %612 = getelementptr inbounds [904 x float], ptr %arg4, i32 0, i32 %611
  %613 = load float, ptr %612, align 4, !invariant.load !297
  %region_0_102_constant_31285 = load float, ptr @133, align 4
  %614 = getelementptr inbounds [904 x float], ptr %arg5, i32 0, i32 %611
  %615 = load float, ptr %614, align 4
  %multiply.73286 = fmul float %region_0_102_constant_31285, %615
  %subtract.74287 = fsub float %613, %multiply.73286
  br label %concatenate.87.merge283

concat_index_from_operand_id1288:                 ; preds = %concatenate.pivot.904.307
  %616 = phi i32 [ 904, %concatenate.pivot.904.307 ]
  %617 = sub nsw i32 %3, %616
  %618 = mul nuw nsw i32 %617, 1
  %619 = add nuw nsw i32 0, %618
  %620 = urem i32 %619, 512
  %621 = udiv i32 %619, 512
  %622 = udiv i32 %621, 64
  %623 = getelementptr inbounds [64 x [512 x float]], ptr %arg10, i32 0, i32 %621, i32 %620
  %624 = load float, ptr %623, align 4, !invariant.load !297
  %region_0_102_constant_35289 = load float, ptr @132, align 4
  %625 = getelementptr inbounds [64 x [512 x float]], ptr %arg11, i32 0, i32 %621, i32 %620
  %626 = load float, ptr %625, align 4
  %multiply.75290 = fmul float %region_0_102_constant_35289, %626
  %subtract.76291 = fsub float %624, %multiply.75290
  br label %concatenate.87.merge283

concat_index_from_operand_id2292:                 ; preds = %concatenate.pivot.33672.309
  %627 = phi i32 [ 33672, %concatenate.pivot.33672.309 ]
  %628 = sub nsw i32 %3, %627
  %629 = mul nuw nsw i32 %628, 1
  %630 = add nuw nsw i32 0, %629
  %631 = urem i32 %630, 512
  %632 = udiv i32 %630, 512
  %633 = udiv i32 %632, 64
  %634 = getelementptr inbounds [64 x [512 x float]], ptr %arg16, i32 0, i32 %632, i32 %631
  %635 = load float, ptr %634, align 4, !invariant.load !297
  %region_0_102_constant_40293 = load float, ptr @131, align 4
  %636 = getelementptr inbounds [64 x [512 x float]], ptr %arg17, i32 0, i32 %632, i32 %631
  %637 = load float, ptr %636, align 4
  %multiply.78294 = fmul float %region_0_102_constant_40293, %637
  %subtract.79295 = fsub float %635, %multiply.78294
  br label %concatenate.87.merge283

concat_index_from_operand_id3296:                 ; preds = %concatenate.pivot.66440.311
  %638 = phi i32 [ 66440, %concatenate.pivot.66440.311 ]
  %639 = sub nsw i32 %3, %638
  %640 = mul nuw nsw i32 %639, 1
  %641 = add nuw nsw i32 0, %640
  %642 = urem i32 %641, 128
  %643 = udiv i32 %641, 128
  %644 = udiv i32 %643, 256
  %645 = getelementptr inbounds [256 x [128 x float]], ptr %arg22, i32 0, i32 %643, i32 %642
  %646 = load float, ptr %645, align 4, !invariant.load !297
  %region_0_102_constant_45297 = load float, ptr @130, align 4
  %647 = getelementptr inbounds [256 x [128 x float]], ptr %arg23, i32 0, i32 %643, i32 %642
  %648 = load float, ptr %647, align 4, !invariant.load !297
  %multiply.81298 = fmul float %region_0_102_constant_45297, %648
  %subtract.82299 = fsub float %646, %multiply.81298
  br label %concatenate.87.merge283

concat_index_from_operand_id4300:                 ; preds = %concatenate.pivot.99208.312
  %649 = phi i32 [ 99208, %concatenate.pivot.99208.312 ]
  %650 = sub nsw i32 %3, %649
  %651 = mul nuw nsw i32 %650, 1
  %652 = add nuw nsw i32 0, %651
  %653 = urem i32 %652, 512
  %654 = udiv i32 %652, 512
  %655 = udiv i32 %654, 128
  %656 = getelementptr inbounds [128 x [512 x float]], ptr %arg28, i32 0, i32 %654, i32 %653
  %657 = load float, ptr %656, align 4, !invariant.load !297
  %region_0_102_constant_50301 = load float, ptr @129, align 4
  %658 = getelementptr inbounds [128 x [512 x float]], ptr %arg29, i32 0, i32 %654, i32 %653
  %659 = load float, ptr %658, align 4
  %multiply.84302 = fmul float %region_0_102_constant_50301, %659
  %subtract.85303 = fsub float %657, %multiply.84302
  br label %concatenate.87.merge283

concatenate.pivot.33672.304:                      ; preds = %concatenate.71.merge253
  %660 = icmp ult i32 %3, 33672
  br i1 %660, label %concatenate.pivot.904.305, label %concatenate.pivot.66440.308

concatenate.pivot.904.305:                        ; preds = %concatenate.pivot.33672.304
  %661 = icmp ult i32 %3, 904
  br i1 %661, label %concatenate.pivot.0.306, label %concatenate.pivot.904.307

concatenate.pivot.0.306:                          ; preds = %concatenate.pivot.904.305
  br label %concat_index_from_operand_id0284

concatenate.pivot.904.307:                        ; preds = %concatenate.pivot.904.305
  br label %concat_index_from_operand_id1288

concatenate.pivot.66440.308:                      ; preds = %concatenate.pivot.33672.304
  %662 = icmp ult i32 %3, 66440
  br i1 %662, label %concatenate.pivot.33672.309, label %concatenate.pivot.99208.310

concatenate.pivot.33672.309:                      ; preds = %concatenate.pivot.66440.308
  br label %concat_index_from_operand_id2292

concatenate.pivot.99208.310:                      ; preds = %concatenate.pivot.66440.308
  %663 = icmp ult i32 %3, 99208
  br i1 %663, label %concatenate.pivot.66440.311, label %concatenate.pivot.99208.312

concatenate.pivot.66440.311:                      ; preds = %concatenate.pivot.99208.310
  br label %concat_index_from_operand_id3296

concatenate.pivot.99208.312:                      ; preds = %concatenate.pivot.99208.310
  br label %concat_index_from_operand_id4300

concatenate.87.merge283:                          ; preds = %concat_index_from_operand_id4300, %concat_index_from_operand_id3296, %concat_index_from_operand_id2292, %concat_index_from_operand_id1288, %concat_index_from_operand_id0284
  %664 = phi float [ %subtract.74287, %concat_index_from_operand_id0284 ], [ %subtract.76291, %concat_index_from_operand_id1288 ], [ %subtract.79295, %concat_index_from_operand_id2292 ], [ %subtract.82299, %concat_index_from_operand_id3296 ], [ %subtract.85303, %concat_index_from_operand_id4300 ]
  br label %concatenate.pivot.33672.334

concat_index_from_operand_id0314:                 ; preds = %concatenate.pivot.0.336
  %665 = phi i32 [ 0, %concatenate.pivot.0.336 ]
  %666 = sub nsw i32 %3, %665
  %667 = getelementptr inbounds [904 x float], ptr %arg0, i32 0, i32 %666
  %668 = load float, ptr %667, align 4, !invariant.load !297
  %region_0_102_constant_31315 = load float, ptr @133, align 4
  %669 = getelementptr inbounds [904 x float], ptr %arg1, i32 0, i32 %666
  %670 = load float, ptr %669, align 4
  %multiply.33316 = fmul float %region_0_102_constant_31315, %670
  %subtract.34317 = fsub float %668, %multiply.33316
  br label %concatenate.55.merge313

concat_index_from_operand_id1318:                 ; preds = %concatenate.pivot.904.337
  %671 = phi i32 [ 904, %concatenate.pivot.904.337 ]
  %672 = sub nsw i32 %3, %671
  %673 = mul nuw nsw i32 %672, 1
  %674 = add nuw nsw i32 0, %673
  %675 = urem i32 %674, 512
  %676 = udiv i32 %674, 512
  %677 = udiv i32 %676, 64
  %678 = getelementptr inbounds [64 x [512 x float]], ptr %arg6, i32 0, i32 %676, i32 %675
  %679 = load float, ptr %678, align 4, !invariant.load !297
  %region_0_102_constant_35319 = load float, ptr @132, align 4
  %680 = getelementptr inbounds [64 x [512 x float]], ptr %arg7, i32 0, i32 %676, i32 %675
  %681 = load float, ptr %680, align 4
  %multiply.37320 = fmul float %region_0_102_constant_35319, %681
  %subtract.38321 = fsub float %679, %multiply.37320
  br label %concatenate.55.merge313

concat_index_from_operand_id2322:                 ; preds = %concatenate.pivot.33672.339
  %682 = phi i32 [ 33672, %concatenate.pivot.33672.339 ]
  %683 = sub nsw i32 %3, %682
  %684 = mul nuw nsw i32 %683, 1
  %685 = add nuw nsw i32 0, %684
  %686 = urem i32 %685, 512
  %687 = udiv i32 %685, 512
  %688 = udiv i32 %687, 64
  %689 = getelementptr inbounds [64 x [512 x float]], ptr %arg12, i32 0, i32 %687, i32 %686
  %690 = load float, ptr %689, align 4, !invariant.load !297
  %region_0_102_constant_40323 = load float, ptr @131, align 4
  %691 = getelementptr inbounds [64 x [512 x float]], ptr %arg13, i32 0, i32 %687, i32 %686
  %692 = load float, ptr %691, align 4, !invariant.load !297
  %multiply.42324 = fmul float %region_0_102_constant_40323, %692
  %subtract.43325 = fsub float %690, %multiply.42324
  br label %concatenate.55.merge313

concat_index_from_operand_id3326:                 ; preds = %concatenate.pivot.66440.341
  %693 = phi i32 [ 66440, %concatenate.pivot.66440.341 ]
  %694 = sub nsw i32 %3, %693
  %695 = mul nuw nsw i32 %694, 1
  %696 = add nuw nsw i32 0, %695
  %697 = urem i32 %696, 128
  %698 = udiv i32 %696, 128
  %699 = udiv i32 %698, 256
  %700 = getelementptr inbounds [256 x [128 x float]], ptr %arg18, i32 0, i32 %698, i32 %697
  %701 = load float, ptr %700, align 4, !invariant.load !297
  %region_0_102_constant_45327 = load float, ptr @130, align 4
  %702 = getelementptr inbounds [256 x [128 x float]], ptr %arg19, i32 0, i32 %698, i32 %697
  %703 = load float, ptr %702, align 4, !invariant.load !297
  %multiply.47328 = fmul float %region_0_102_constant_45327, %703
  %subtract.48329 = fsub float %701, %multiply.47328
  br label %concatenate.55.merge313

concat_index_from_operand_id4330:                 ; preds = %concatenate.pivot.99208.342
  %704 = phi i32 [ 99208, %concatenate.pivot.99208.342 ]
  %705 = sub nsw i32 %3, %704
  %706 = mul nuw nsw i32 %705, 1
  %707 = add nuw nsw i32 0, %706
  %708 = urem i32 %707, 512
  %709 = udiv i32 %707, 512
  %710 = udiv i32 %709, 128
  %711 = getelementptr inbounds [128 x [512 x float]], ptr %arg24, i32 0, i32 %709, i32 %708
  %712 = load float, ptr %711, align 4, !invariant.load !297
  %region_0_102_constant_50331 = load float, ptr @129, align 4
  %713 = getelementptr inbounds [128 x [512 x float]], ptr %arg25, i32 0, i32 %709, i32 %708
  %714 = load float, ptr %713, align 4
  %multiply.52332 = fmul float %region_0_102_constant_50331, %714
  %subtract.53333 = fsub float %712, %multiply.52332
  br label %concatenate.55.merge313

concatenate.pivot.33672.334:                      ; preds = %concatenate.87.merge283
  %715 = icmp ult i32 %3, 33672
  br i1 %715, label %concatenate.pivot.904.335, label %concatenate.pivot.66440.338

concatenate.pivot.904.335:                        ; preds = %concatenate.pivot.33672.334
  %716 = icmp ult i32 %3, 904
  br i1 %716, label %concatenate.pivot.0.336, label %concatenate.pivot.904.337

concatenate.pivot.0.336:                          ; preds = %concatenate.pivot.904.335
  br label %concat_index_from_operand_id0314

concatenate.pivot.904.337:                        ; preds = %concatenate.pivot.904.335
  br label %concat_index_from_operand_id1318

concatenate.pivot.66440.338:                      ; preds = %concatenate.pivot.33672.334
  %717 = icmp ult i32 %3, 66440
  br i1 %717, label %concatenate.pivot.33672.339, label %concatenate.pivot.99208.340

concatenate.pivot.33672.339:                      ; preds = %concatenate.pivot.66440.338
  br label %concat_index_from_operand_id2322

concatenate.pivot.99208.340:                      ; preds = %concatenate.pivot.66440.338
  %718 = icmp ult i32 %3, 99208
  br i1 %718, label %concatenate.pivot.66440.341, label %concatenate.pivot.99208.342

concatenate.pivot.66440.341:                      ; preds = %concatenate.pivot.99208.340
  br label %concat_index_from_operand_id3326

concatenate.pivot.99208.342:                      ; preds = %concatenate.pivot.99208.340
  br label %concat_index_from_operand_id4330

concatenate.55.merge313:                          ; preds = %concat_index_from_operand_id4330, %concat_index_from_operand_id3326, %concat_index_from_operand_id2322, %concat_index_from_operand_id1318, %concat_index_from_operand_id0314
  %719 = phi float [ %subtract.34317, %concat_index_from_operand_id0314 ], [ %subtract.38321, %concat_index_from_operand_id1318 ], [ %subtract.43325, %concat_index_from_operand_id2322 ], [ %subtract.48329, %concat_index_from_operand_id3326 ], [ %subtract.53333, %concat_index_from_operand_id4330 ]
  br label %concatenate.pivot.33672.364

concat_index_from_operand_id0344:                 ; preds = %concatenate.pivot.0.366
  %720 = phi i32 [ 0, %concatenate.pivot.0.366 ]
  %721 = sub nsw i32 %3, %720
  %722 = getelementptr inbounds [904 x float], ptr %arg2, i32 0, i32 %721
  %723 = load float, ptr %722, align 4, !invariant.load !297
  %region_0_102_constant_31345 = load float, ptr @133, align 4
  %724 = getelementptr inbounds [904 x float], ptr %arg3, i32 0, i32 %721
  %725 = load float, ptr %724, align 4
  %multiply.57346 = fmul float %region_0_102_constant_31345, %725
  %subtract.58347 = fsub float %723, %multiply.57346
  br label %concatenate.71.merge343

concat_index_from_operand_id1348:                 ; preds = %concatenate.pivot.904.367
  %726 = phi i32 [ 904, %concatenate.pivot.904.367 ]
  %727 = sub nsw i32 %3, %726
  %728 = mul nuw nsw i32 %727, 1
  %729 = add nuw nsw i32 0, %728
  %730 = urem i32 %729, 512
  %731 = udiv i32 %729, 512
  %732 = udiv i32 %731, 64
  %733 = getelementptr inbounds [64 x [512 x float]], ptr %arg8, i32 0, i32 %731, i32 %730
  %734 = load float, ptr %733, align 4, !invariant.load !297
  %region_0_102_constant_35349 = load float, ptr @132, align 4
  %735 = getelementptr inbounds [64 x [512 x float]], ptr %arg9, i32 0, i32 %731, i32 %730
  %736 = load float, ptr %735, align 4
  %multiply.59350 = fmul float %region_0_102_constant_35349, %736
  %subtract.60351 = fsub float %734, %multiply.59350
  br label %concatenate.71.merge343

concat_index_from_operand_id2352:                 ; preds = %concatenate.pivot.33672.369
  %737 = phi i32 [ 33672, %concatenate.pivot.33672.369 ]
  %738 = sub nsw i32 %3, %737
  %739 = mul nuw nsw i32 %738, 1
  %740 = add nuw nsw i32 0, %739
  %741 = urem i32 %740, 512
  %742 = udiv i32 %740, 512
  %743 = udiv i32 %742, 64
  %744 = getelementptr inbounds [64 x [512 x float]], ptr %arg14, i32 0, i32 %742, i32 %741
  %745 = load float, ptr %744, align 4, !invariant.load !297
  %region_0_102_constant_40353 = load float, ptr @131, align 4
  %746 = getelementptr inbounds [64 x [512 x float]], ptr %arg15, i32 0, i32 %742, i32 %741
  %747 = load float, ptr %746, align 4, !invariant.load !297
  %multiply.62354 = fmul float %region_0_102_constant_40353, %747
  %subtract.63355 = fsub float %745, %multiply.62354
  br label %concatenate.71.merge343

concat_index_from_operand_id3356:                 ; preds = %concatenate.pivot.66440.371
  %748 = phi i32 [ 66440, %concatenate.pivot.66440.371 ]
  %749 = sub nsw i32 %3, %748
  %750 = mul nuw nsw i32 %749, 1
  %751 = add nuw nsw i32 0, %750
  %752 = urem i32 %751, 128
  %753 = udiv i32 %751, 128
  %754 = udiv i32 %753, 256
  %755 = getelementptr inbounds [256 x [128 x float]], ptr %arg20, i32 0, i32 %753, i32 %752
  %756 = load float, ptr %755, align 4, !invariant.load !297
  %region_0_102_constant_45357 = load float, ptr @130, align 4
  %757 = getelementptr inbounds [256 x [128 x float]], ptr %arg21, i32 0, i32 %753, i32 %752
  %758 = load float, ptr %757, align 4, !invariant.load !297
  %multiply.65358 = fmul float %region_0_102_constant_45357, %758
  %subtract.66359 = fsub float %756, %multiply.65358
  br label %concatenate.71.merge343

concat_index_from_operand_id4360:                 ; preds = %concatenate.pivot.99208.372
  %759 = phi i32 [ 99208, %concatenate.pivot.99208.372 ]
  %760 = sub nsw i32 %3, %759
  %761 = mul nuw nsw i32 %760, 1
  %762 = add nuw nsw i32 0, %761
  %763 = urem i32 %762, 512
  %764 = udiv i32 %762, 512
  %765 = udiv i32 %764, 128
  %766 = getelementptr inbounds [128 x [512 x float]], ptr %arg26, i32 0, i32 %764, i32 %763
  %767 = load float, ptr %766, align 4, !invariant.load !297
  %region_0_102_constant_50361 = load float, ptr @129, align 4
  %768 = getelementptr inbounds [128 x [512 x float]], ptr %arg27, i32 0, i32 %764, i32 %763
  %769 = load float, ptr %768, align 4
  %multiply.68362 = fmul float %region_0_102_constant_50361, %769
  %subtract.69363 = fsub float %767, %multiply.68362
  br label %concatenate.71.merge343

concatenate.pivot.33672.364:                      ; preds = %concatenate.55.merge313
  %770 = icmp ult i32 %3, 33672
  br i1 %770, label %concatenate.pivot.904.365, label %concatenate.pivot.66440.368

concatenate.pivot.904.365:                        ; preds = %concatenate.pivot.33672.364
  %771 = icmp ult i32 %3, 904
  br i1 %771, label %concatenate.pivot.0.366, label %concatenate.pivot.904.367

concatenate.pivot.0.366:                          ; preds = %concatenate.pivot.904.365
  br label %concat_index_from_operand_id0344

concatenate.pivot.904.367:                        ; preds = %concatenate.pivot.904.365
  br label %concat_index_from_operand_id1348

concatenate.pivot.66440.368:                      ; preds = %concatenate.pivot.33672.364
  %772 = icmp ult i32 %3, 66440
  br i1 %772, label %concatenate.pivot.33672.369, label %concatenate.pivot.99208.370

concatenate.pivot.33672.369:                      ; preds = %concatenate.pivot.66440.368
  br label %concat_index_from_operand_id2352

concatenate.pivot.99208.370:                      ; preds = %concatenate.pivot.66440.368
  %773 = icmp ult i32 %3, 99208
  br i1 %773, label %concatenate.pivot.66440.371, label %concatenate.pivot.99208.372

concatenate.pivot.66440.371:                      ; preds = %concatenate.pivot.99208.370
  br label %concat_index_from_operand_id3356

concatenate.pivot.99208.372:                      ; preds = %concatenate.pivot.99208.370
  br label %concat_index_from_operand_id4360

concatenate.71.merge343:                          ; preds = %concat_index_from_operand_id4360, %concat_index_from_operand_id3356, %concat_index_from_operand_id2352, %concat_index_from_operand_id1348, %concat_index_from_operand_id0344
  %774 = phi float [ %subtract.58347, %concat_index_from_operand_id0344 ], [ %subtract.60351, %concat_index_from_operand_id1348 ], [ %subtract.63355, %concat_index_from_operand_id2352 ], [ %subtract.66359, %concat_index_from_operand_id3356 ], [ %subtract.69363, %concat_index_from_operand_id4360 ]
  br label %concatenate.pivot.33672.394

concat_index_from_operand_id0374:                 ; preds = %concatenate.pivot.0.396
  %775 = phi i32 [ 0, %concatenate.pivot.0.396 ]
  %776 = sub nsw i32 %3, %775
  %777 = getelementptr inbounds [904 x float], ptr %arg4, i32 0, i32 %776
  %778 = load float, ptr %777, align 4, !invariant.load !297
  %region_0_102_constant_31375 = load float, ptr @133, align 4
  %779 = getelementptr inbounds [904 x float], ptr %arg5, i32 0, i32 %776
  %780 = load float, ptr %779, align 4
  %multiply.73376 = fmul float %region_0_102_constant_31375, %780
  %subtract.74377 = fsub float %778, %multiply.73376
  br label %concatenate.87.merge373

concat_index_from_operand_id1378:                 ; preds = %concatenate.pivot.904.397
  %781 = phi i32 [ 904, %concatenate.pivot.904.397 ]
  %782 = sub nsw i32 %3, %781
  %783 = mul nuw nsw i32 %782, 1
  %784 = add nuw nsw i32 0, %783
  %785 = urem i32 %784, 512
  %786 = udiv i32 %784, 512
  %787 = udiv i32 %786, 64
  %788 = getelementptr inbounds [64 x [512 x float]], ptr %arg10, i32 0, i32 %786, i32 %785
  %789 = load float, ptr %788, align 4, !invariant.load !297
  %region_0_102_constant_35379 = load float, ptr @132, align 4
  %790 = getelementptr inbounds [64 x [512 x float]], ptr %arg11, i32 0, i32 %786, i32 %785
  %791 = load float, ptr %790, align 4
  %multiply.75380 = fmul float %region_0_102_constant_35379, %791
  %subtract.76381 = fsub float %789, %multiply.75380
  br label %concatenate.87.merge373

concat_index_from_operand_id2382:                 ; preds = %concatenate.pivot.33672.399
  %792 = phi i32 [ 33672, %concatenate.pivot.33672.399 ]
  %793 = sub nsw i32 %3, %792
  %794 = mul nuw nsw i32 %793, 1
  %795 = add nuw nsw i32 0, %794
  %796 = urem i32 %795, 512
  %797 = udiv i32 %795, 512
  %798 = udiv i32 %797, 64
  %799 = getelementptr inbounds [64 x [512 x float]], ptr %arg16, i32 0, i32 %797, i32 %796
  %800 = load float, ptr %799, align 4, !invariant.load !297
  %region_0_102_constant_40383 = load float, ptr @131, align 4
  %801 = getelementptr inbounds [64 x [512 x float]], ptr %arg17, i32 0, i32 %797, i32 %796
  %802 = load float, ptr %801, align 4
  %multiply.78384 = fmul float %region_0_102_constant_40383, %802
  %subtract.79385 = fsub float %800, %multiply.78384
  br label %concatenate.87.merge373

concat_index_from_operand_id3386:                 ; preds = %concatenate.pivot.66440.401
  %803 = phi i32 [ 66440, %concatenate.pivot.66440.401 ]
  %804 = sub nsw i32 %3, %803
  %805 = mul nuw nsw i32 %804, 1
  %806 = add nuw nsw i32 0, %805
  %807 = urem i32 %806, 128
  %808 = udiv i32 %806, 128
  %809 = udiv i32 %808, 256
  %810 = getelementptr inbounds [256 x [128 x float]], ptr %arg22, i32 0, i32 %808, i32 %807
  %811 = load float, ptr %810, align 4, !invariant.load !297
  %region_0_102_constant_45387 = load float, ptr @130, align 4
  %812 = getelementptr inbounds [256 x [128 x float]], ptr %arg23, i32 0, i32 %808, i32 %807
  %813 = load float, ptr %812, align 4, !invariant.load !297
  %multiply.81388 = fmul float %region_0_102_constant_45387, %813
  %subtract.82389 = fsub float %811, %multiply.81388
  br label %concatenate.87.merge373

concat_index_from_operand_id4390:                 ; preds = %concatenate.pivot.99208.402
  %814 = phi i32 [ 99208, %concatenate.pivot.99208.402 ]
  %815 = sub nsw i32 %3, %814
  %816 = mul nuw nsw i32 %815, 1
  %817 = add nuw nsw i32 0, %816
  %818 = urem i32 %817, 512
  %819 = udiv i32 %817, 512
  %820 = udiv i32 %819, 128
  %821 = getelementptr inbounds [128 x [512 x float]], ptr %arg28, i32 0, i32 %819, i32 %818
  %822 = load float, ptr %821, align 4, !invariant.load !297
  %region_0_102_constant_50391 = load float, ptr @129, align 4
  %823 = getelementptr inbounds [128 x [512 x float]], ptr %arg29, i32 0, i32 %819, i32 %818
  %824 = load float, ptr %823, align 4
  %multiply.84392 = fmul float %region_0_102_constant_50391, %824
  %subtract.85393 = fsub float %822, %multiply.84392
  br label %concatenate.87.merge373

concatenate.pivot.33672.394:                      ; preds = %concatenate.71.merge343
  %825 = icmp ult i32 %3, 33672
  br i1 %825, label %concatenate.pivot.904.395, label %concatenate.pivot.66440.398

concatenate.pivot.904.395:                        ; preds = %concatenate.pivot.33672.394
  %826 = icmp ult i32 %3, 904
  br i1 %826, label %concatenate.pivot.0.396, label %concatenate.pivot.904.397

concatenate.pivot.0.396:                          ; preds = %concatenate.pivot.904.395
  br label %concat_index_from_operand_id0374

concatenate.pivot.904.397:                        ; preds = %concatenate.pivot.904.395
  br label %concat_index_from_operand_id1378

concatenate.pivot.66440.398:                      ; preds = %concatenate.pivot.33672.394
  %827 = icmp ult i32 %3, 66440
  br i1 %827, label %concatenate.pivot.33672.399, label %concatenate.pivot.99208.400

concatenate.pivot.33672.399:                      ; preds = %concatenate.pivot.66440.398
  br label %concat_index_from_operand_id2382

concatenate.pivot.99208.400:                      ; preds = %concatenate.pivot.66440.398
  %828 = icmp ult i32 %3, 99208
  br i1 %828, label %concatenate.pivot.66440.401, label %concatenate.pivot.99208.402

concatenate.pivot.66440.401:                      ; preds = %concatenate.pivot.99208.400
  br label %concat_index_from_operand_id3386

concatenate.pivot.99208.402:                      ; preds = %concatenate.pivot.99208.400
  br label %concat_index_from_operand_id4390

concatenate.87.merge373:                          ; preds = %concat_index_from_operand_id4390, %concat_index_from_operand_id3386, %concat_index_from_operand_id2382, %concat_index_from_operand_id1378, %concat_index_from_operand_id0374
  %829 = phi float [ %subtract.74377, %concat_index_from_operand_id0374 ], [ %subtract.76381, %concat_index_from_operand_id1378 ], [ %subtract.79385, %concat_index_from_operand_id2382 ], [ %subtract.82389, %concat_index_from_operand_id3386 ], [ %subtract.85393, %concat_index_from_operand_id4390 ]
  %830 = icmp sge i32 %3, 0
  %831 = icmp slt i32 %3, 904
  %832 = and i1 %830, %831
  br i1 %832, label %slice0-true, label %slice0-after

slice0-after:                                     ; preds = %slice0-true, %concatenate.87.merge373
  %833 = icmp sge i32 %3, 0
  %834 = icmp slt i32 %3, 904
  %835 = and i1 %833, %834
  br i1 %835, label %slice1-true, label %slice1-after

slice1-after:                                     ; preds = %slice1-true, %slice0-after
  %836 = icmp sge i32 %3, 0
  %837 = icmp slt i32 %3, 904
  %838 = and i1 %836, %837
  br i1 %838, label %slice2-true, label %slice2-after

slice2-after:                                     ; preds = %slice2-true, %slice1-after
  %839 = icmp sge i32 %3, 904
  %840 = icmp slt i32 %3, 33672
  %841 = and i1 %839, %840
  br i1 %841, label %slice3-true, label %slice3-after

slice3-after:                                     ; preds = %slice3-true, %slice2-after
  %842 = icmp sge i32 %3, 904
  %843 = icmp slt i32 %3, 33672
  %844 = and i1 %842, %843
  br i1 %844, label %slice4-true, label %slice4-after

slice4-after:                                     ; preds = %slice4-true, %slice3-after
  %845 = icmp sge i32 %3, 904
  %846 = icmp slt i32 %3, 33672
  %847 = and i1 %845, %846
  br i1 %847, label %slice5-true, label %slice5-after

slice5-after:                                     ; preds = %slice5-true, %slice4-after
  %848 = icmp sge i32 %3, 33672
  %849 = icmp slt i32 %3, 66440
  %850 = and i1 %848, %849
  br i1 %850, label %slice6-true, label %slice6-after

slice6-after:                                     ; preds = %slice6-true, %slice5-after
  %851 = icmp sge i32 %3, 33672
  %852 = icmp slt i32 %3, 66440
  %853 = and i1 %851, %852
  br i1 %853, label %slice7-true, label %slice7-after

slice7-after:                                     ; preds = %slice7-true, %slice6-after
  %854 = icmp sge i32 %3, 33672
  %855 = icmp slt i32 %3, 66440
  %856 = and i1 %854, %855
  br i1 %856, label %slice8-true, label %slice8-after

slice8-after:                                     ; preds = %slice8-true, %slice7-after
  %857 = icmp sge i32 %3, 66440
  %858 = icmp slt i32 %3, 99208
  %859 = and i1 %857, %858
  br i1 %859, label %slice9-true, label %slice9-after

slice9-after:                                     ; preds = %slice9-true, %slice8-after
  %860 = icmp sge i32 %3, 66440
  %861 = icmp slt i32 %3, 99208
  %862 = and i1 %860, %861
  br i1 %862, label %slice10-true, label %slice10-after

slice10-after:                                    ; preds = %slice10-true, %slice9-after
  %863 = icmp sge i32 %3, 66440
  %864 = icmp slt i32 %3, 99208
  %865 = and i1 %863, %864
  br i1 %865, label %slice11-true, label %slice11-after

slice11-after:                                    ; preds = %slice11-true, %slice10-after
  %866 = icmp sge i32 %3, 99208
  %867 = icmp slt i32 %3, 164744
  %868 = and i1 %866, %867
  br i1 %868, label %slice12-true, label %slice12-after

slice12-after:                                    ; preds = %slice12-true, %slice11-after
  %869 = icmp sge i32 %3, 99208
  %870 = icmp slt i32 %3, 164744
  %871 = and i1 %869, %870
  br i1 %871, label %slice13-true, label %slice13-after

slice13-after:                                    ; preds = %slice13-true, %slice12-after
  %872 = icmp sge i32 %3, 99208
  %873 = icmp slt i32 %3, 164744
  %874 = and i1 %872, %873
  br i1 %874, label %slice14-true, label %slice14-after

slice14-after:                                    ; preds = %slice14-true, %slice13-after
  br label %copy_fusion_3.in_bounds-after

slice0-true:                                      ; preds = %concatenate.87.merge373
  %875 = sub i32 %3, 0
  %876 = getelementptr inbounds [904 x float], ptr %arg1, i32 0, i32 %875
  store float %59, ptr %876, align 4
  br label %slice0-after

slice1-true:                                      ; preds = %slice0-after
  %877 = sub i32 %3, 0
  %878 = getelementptr inbounds [904 x float], ptr %arg3, i32 0, i32 %877
  store float %114, ptr %878, align 4
  br label %slice1-after

slice2-true:                                      ; preds = %slice1-after
  %879 = sub i32 %3, 0
  %880 = getelementptr inbounds [904 x float], ptr %arg5, i32 0, i32 %879
  store float %169, ptr %880, align 4
  br label %slice2-after

slice3-true:                                      ; preds = %slice2-after
  %881 = sub i32 %3, 904
  %882 = getelementptr inbounds [32768 x float], ptr %arg7, i32 0, i32 %881
  store float %224, ptr %882, align 4
  br label %slice3-after

slice4-true:                                      ; preds = %slice3-after
  %883 = sub i32 %3, 904
  %884 = getelementptr inbounds [32768 x float], ptr %arg9, i32 0, i32 %883
  store float %279, ptr %884, align 4
  br label %slice4-after

slice5-true:                                      ; preds = %slice4-after
  %885 = sub i32 %3, 904
  %886 = getelementptr inbounds [32768 x float], ptr %arg11, i32 0, i32 %885
  store float %334, ptr %886, align 4
  br label %slice5-after

slice6-true:                                      ; preds = %slice5-after
  %887 = sub i32 %3, 33672
  %888 = getelementptr inbounds [32768 x float], ptr %arg30, i32 0, i32 %887
  store float %389, ptr %888, align 4
  br label %slice6-after

slice7-true:                                      ; preds = %slice6-after
  %889 = sub i32 %3, 33672
  %890 = getelementptr inbounds [32768 x float], ptr %arg31, i32 0, i32 %889
  store float %444, ptr %890, align 4
  br label %slice7-after

slice8-true:                                      ; preds = %slice7-after
  %891 = sub i32 %3, 33672
  %892 = getelementptr inbounds [32768 x float], ptr %arg17, i32 0, i32 %891
  store float %499, ptr %892, align 4
  br label %slice8-after

slice9-true:                                      ; preds = %slice8-after
  %893 = sub i32 %3, 66440
  %894 = getelementptr inbounds [32768 x float], ptr %arg32, i32 0, i32 %893
  store float %554, ptr %894, align 4
  br label %slice9-after

slice10-true:                                     ; preds = %slice9-after
  %895 = sub i32 %3, 66440
  %896 = getelementptr inbounds [32768 x float], ptr %arg33, i32 0, i32 %895
  store float %609, ptr %896, align 4
  br label %slice10-after

slice11-true:                                     ; preds = %slice10-after
  %897 = sub i32 %3, 66440
  %898 = getelementptr inbounds [32768 x float], ptr %arg34, i32 0, i32 %897
  store float %664, ptr %898, align 4
  br label %slice11-after

slice12-true:                                     ; preds = %slice11-after
  %899 = sub i32 %3, 99208
  %900 = getelementptr inbounds [65536 x float], ptr %arg25, i32 0, i32 %899
  store float %719, ptr %900, align 4
  br label %slice12-after

slice13-true:                                     ; preds = %slice12-after
  %901 = sub i32 %3, 99208
  %902 = getelementptr inbounds [65536 x float], ptr %arg27, i32 0, i32 %901
  store float %774, ptr %902, align 4
  br label %slice13-after

slice14-true:                                     ; preds = %slice13-after
  %903 = sub i32 %3, 99208
  %904 = getelementptr inbounds [65536 x float], ptr %arg29, i32 0, i32 %903
  store float %829, ptr %904, align 4
  br label %slice14-after
}

define void @fusion_9(ptr noalias align 16 dereferenceable(1572864) %arg0, ptr noalias align 128 dereferenceable(29622272) %arg1, ptr noalias align 128 dereferenceable(29622272) %arg2, ptr noalias align 128 dereferenceable(29622272) %arg3, ptr noalias align 128 dereferenceable(29622272) %arg4, ptr noalias align 128 dereferenceable(29622272) %arg5, ptr noalias align 128 dereferenceable(29622272) %arg6, ptr noalias align 128 dereferenceable(29622272) %arg7, ptr noalias align 128 dereferenceable(29622272) %arg8, ptr noalias align 128 dereferenceable(29622272) %arg9, ptr noalias align 128 dereferenceable(29622272) %arg10, ptr noalias align 128 dereferenceable(1572864) %arg11) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !555
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 98304
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 48
  %5 = udiv i32 %linear_index_base, 48
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 48
  %8 = udiv i32 %linear_index1, 48
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 48
  %11 = udiv i32 %linear_index2, 48
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 48
  %14 = udiv i32 %linear_index3, 48
  %15 = icmp ult i32 %linear_index_base, 393216
  br i1 %15, label %fusion_9.in_bounds-true, label %fusion_9.in_bounds-after

fusion_9.in_bounds-after:                         ; preds = %fusion_9.in_bounds-true, %entry
  ret void

fusion_9.in_bounds-true:                          ; preds = %entry
  %16 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_base
  %17 = load float, ptr %16, align 4, !invariant.load !297
  %region_0_34_constant_12 = load float, ptr @135, align 4
  %18 = add i32 %5, 0
  %19 = add i32 %4, 256
  %20 = getelementptr inbounds [8192 x [904 x float]], ptr %arg7, i32 0, i32 %18, i32 %19
  %21 = load float, ptr %20, align 4, !invariant.load !297
  %22 = getelementptr inbounds [8192 x [904 x float]], ptr %arg8, i32 0, i32 %18, i32 %19
  %23 = load float, ptr %22, align 4, !invariant.load !297
  %24 = getelementptr inbounds [8192 x [904 x float]], ptr %arg9, i32 0, i32 %18, i32 %19
  %25 = load float, ptr %24, align 4, !invariant.load !297
  %region_0_34_constant_14 = load float, ptr @134, align 4
  %26 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %18, i32 %19
  %27 = load float, ptr %26, align 4, !invariant.load !297
  %28 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %18, i32 %19
  %29 = load float, ptr %28, align 4, !invariant.load !297
  %multiply.16 = fmul float %27, %29
  %subtract.17 = fsub float %region_0_34_constant_14, %multiply.16
  %multiply.18 = fmul float %25, %subtract.17
  %multiply.19 = fmul float %23, %multiply.18
  %add.20 = fadd float %21, %multiply.19
  %30 = getelementptr inbounds [8192 x [904 x float]], ptr %arg4, i32 0, i32 %18, i32 %19
  %31 = load float, ptr %30, align 4, !invariant.load !297
  %32 = getelementptr inbounds [8192 x [904 x float]], ptr %arg5, i32 0, i32 %18, i32 %19
  %33 = load float, ptr %32, align 4, !invariant.load !297
  %34 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %18, i32 %19
  %35 = load float, ptr %34, align 4, !invariant.load !297
  %36 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %18, i32 %19
  %37 = load float, ptr %36, align 4, !invariant.load !297
  %multiply.21 = fmul float %35, %37
  %subtract.22 = fsub float %region_0_34_constant_14, %multiply.21
  %multiply.23 = fmul float %33, %subtract.22
  %multiply.24 = fmul float %31, %multiply.23
  %add.25 = fadd float %add.20, %multiply.24
  %38 = getelementptr inbounds [8192 x [904 x float]], ptr %arg1, i32 0, i32 %18, i32 %19
  %39 = load float, ptr %38, align 4, !invariant.load !297
  %40 = getelementptr inbounds [8192 x [904 x float]], ptr %arg2, i32 0, i32 %18, i32 %19
  %41 = load float, ptr %40, align 4, !invariant.load !297
  %42 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %18, i32 %19
  %43 = load float, ptr %42, align 4, !invariant.load !297
  %44 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %18, i32 %19
  %45 = load float, ptr %44, align 4, !invariant.load !297
  %multiply.26 = fmul float %43, %45
  %subtract.27 = fsub float %region_0_34_constant_14, %multiply.26
  %multiply.28 = fmul float %41, %subtract.27
  %multiply.29 = fmul float %39, %multiply.28
  %add.30 = fadd float %add.25, %multiply.29
  %multiply.32 = fmul float %region_0_34_constant_12, %add.30
  %subtract.33 = fsub float %17, %multiply.32
  %46 = getelementptr inbounds float, ptr %arg11, i32 %linear_index_base
  store float %subtract.33, ptr %46, align 4
  %47 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  %48 = load float, ptr %47, align 4, !invariant.load !297
  %region_0_34_constant_121 = load float, ptr @135, align 4
  %49 = add i32 %8, 0
  %50 = add i32 %7, 256
  %51 = getelementptr inbounds [8192 x [904 x float]], ptr %arg7, i32 0, i32 %49, i32 %50
  %52 = load float, ptr %51, align 4, !invariant.load !297
  %53 = getelementptr inbounds [8192 x [904 x float]], ptr %arg8, i32 0, i32 %49, i32 %50
  %54 = load float, ptr %53, align 4, !invariant.load !297
  %55 = getelementptr inbounds [8192 x [904 x float]], ptr %arg9, i32 0, i32 %49, i32 %50
  %56 = load float, ptr %55, align 4, !invariant.load !297
  %region_0_34_constant_142 = load float, ptr @134, align 4
  %57 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %49, i32 %50
  %58 = load float, ptr %57, align 4, !invariant.load !297
  %59 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %49, i32 %50
  %60 = load float, ptr %59, align 4, !invariant.load !297
  %multiply.163 = fmul float %58, %60
  %subtract.174 = fsub float %region_0_34_constant_142, %multiply.163
  %multiply.185 = fmul float %56, %subtract.174
  %multiply.196 = fmul float %54, %multiply.185
  %add.207 = fadd float %52, %multiply.196
  %61 = getelementptr inbounds [8192 x [904 x float]], ptr %arg4, i32 0, i32 %49, i32 %50
  %62 = load float, ptr %61, align 4, !invariant.load !297
  %63 = getelementptr inbounds [8192 x [904 x float]], ptr %arg5, i32 0, i32 %49, i32 %50
  %64 = load float, ptr %63, align 4, !invariant.load !297
  %65 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %49, i32 %50
  %66 = load float, ptr %65, align 4, !invariant.load !297
  %67 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %49, i32 %50
  %68 = load float, ptr %67, align 4, !invariant.load !297
  %multiply.218 = fmul float %66, %68
  %subtract.229 = fsub float %region_0_34_constant_142, %multiply.218
  %multiply.2310 = fmul float %64, %subtract.229
  %multiply.2411 = fmul float %62, %multiply.2310
  %add.2512 = fadd float %add.207, %multiply.2411
  %69 = getelementptr inbounds [8192 x [904 x float]], ptr %arg1, i32 0, i32 %49, i32 %50
  %70 = load float, ptr %69, align 4, !invariant.load !297
  %71 = getelementptr inbounds [8192 x [904 x float]], ptr %arg2, i32 0, i32 %49, i32 %50
  %72 = load float, ptr %71, align 4, !invariant.load !297
  %73 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %49, i32 %50
  %74 = load float, ptr %73, align 4, !invariant.load !297
  %75 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %49, i32 %50
  %76 = load float, ptr %75, align 4, !invariant.load !297
  %multiply.2613 = fmul float %74, %76
  %subtract.2714 = fsub float %region_0_34_constant_142, %multiply.2613
  %multiply.2815 = fmul float %72, %subtract.2714
  %multiply.2916 = fmul float %70, %multiply.2815
  %add.3017 = fadd float %add.2512, %multiply.2916
  %multiply.3218 = fmul float %region_0_34_constant_121, %add.3017
  %subtract.3319 = fsub float %48, %multiply.3218
  %77 = getelementptr inbounds float, ptr %arg11, i32 %linear_index1
  store float %subtract.3319, ptr %77, align 4
  %78 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  %79 = load float, ptr %78, align 4, !invariant.load !297
  %region_0_34_constant_1220 = load float, ptr @135, align 4
  %80 = add i32 %11, 0
  %81 = add i32 %10, 256
  %82 = getelementptr inbounds [8192 x [904 x float]], ptr %arg7, i32 0, i32 %80, i32 %81
  %83 = load float, ptr %82, align 4, !invariant.load !297
  %84 = getelementptr inbounds [8192 x [904 x float]], ptr %arg8, i32 0, i32 %80, i32 %81
  %85 = load float, ptr %84, align 4, !invariant.load !297
  %86 = getelementptr inbounds [8192 x [904 x float]], ptr %arg9, i32 0, i32 %80, i32 %81
  %87 = load float, ptr %86, align 4, !invariant.load !297
  %region_0_34_constant_1421 = load float, ptr @134, align 4
  %88 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %80, i32 %81
  %89 = load float, ptr %88, align 4, !invariant.load !297
  %90 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %80, i32 %81
  %91 = load float, ptr %90, align 4, !invariant.load !297
  %multiply.1622 = fmul float %89, %91
  %subtract.1723 = fsub float %region_0_34_constant_1421, %multiply.1622
  %multiply.1824 = fmul float %87, %subtract.1723
  %multiply.1925 = fmul float %85, %multiply.1824
  %add.2026 = fadd float %83, %multiply.1925
  %92 = getelementptr inbounds [8192 x [904 x float]], ptr %arg4, i32 0, i32 %80, i32 %81
  %93 = load float, ptr %92, align 4, !invariant.load !297
  %94 = getelementptr inbounds [8192 x [904 x float]], ptr %arg5, i32 0, i32 %80, i32 %81
  %95 = load float, ptr %94, align 4, !invariant.load !297
  %96 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %80, i32 %81
  %97 = load float, ptr %96, align 4, !invariant.load !297
  %98 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %80, i32 %81
  %99 = load float, ptr %98, align 4, !invariant.load !297
  %multiply.2127 = fmul float %97, %99
  %subtract.2228 = fsub float %region_0_34_constant_1421, %multiply.2127
  %multiply.2329 = fmul float %95, %subtract.2228
  %multiply.2430 = fmul float %93, %multiply.2329
  %add.2531 = fadd float %add.2026, %multiply.2430
  %100 = getelementptr inbounds [8192 x [904 x float]], ptr %arg1, i32 0, i32 %80, i32 %81
  %101 = load float, ptr %100, align 4, !invariant.load !297
  %102 = getelementptr inbounds [8192 x [904 x float]], ptr %arg2, i32 0, i32 %80, i32 %81
  %103 = load float, ptr %102, align 4, !invariant.load !297
  %104 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %80, i32 %81
  %105 = load float, ptr %104, align 4, !invariant.load !297
  %106 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %80, i32 %81
  %107 = load float, ptr %106, align 4, !invariant.load !297
  %multiply.2632 = fmul float %105, %107
  %subtract.2733 = fsub float %region_0_34_constant_1421, %multiply.2632
  %multiply.2834 = fmul float %103, %subtract.2733
  %multiply.2935 = fmul float %101, %multiply.2834
  %add.3036 = fadd float %add.2531, %multiply.2935
  %multiply.3237 = fmul float %region_0_34_constant_1220, %add.3036
  %subtract.3338 = fsub float %79, %multiply.3237
  %108 = getelementptr inbounds float, ptr %arg11, i32 %linear_index2
  store float %subtract.3338, ptr %108, align 4
  %109 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  %110 = load float, ptr %109, align 4, !invariant.load !297
  %region_0_34_constant_1239 = load float, ptr @135, align 4
  %111 = add i32 %14, 0
  %112 = add i32 %13, 256
  %113 = getelementptr inbounds [8192 x [904 x float]], ptr %arg7, i32 0, i32 %111, i32 %112
  %114 = load float, ptr %113, align 4, !invariant.load !297
  %115 = getelementptr inbounds [8192 x [904 x float]], ptr %arg8, i32 0, i32 %111, i32 %112
  %116 = load float, ptr %115, align 4, !invariant.load !297
  %117 = getelementptr inbounds [8192 x [904 x float]], ptr %arg9, i32 0, i32 %111, i32 %112
  %118 = load float, ptr %117, align 4, !invariant.load !297
  %region_0_34_constant_1440 = load float, ptr @134, align 4
  %119 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %111, i32 %112
  %120 = load float, ptr %119, align 4, !invariant.load !297
  %121 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %111, i32 %112
  %122 = load float, ptr %121, align 4, !invariant.load !297
  %multiply.1641 = fmul float %120, %122
  %subtract.1742 = fsub float %region_0_34_constant_1440, %multiply.1641
  %multiply.1843 = fmul float %118, %subtract.1742
  %multiply.1944 = fmul float %116, %multiply.1843
  %add.2045 = fadd float %114, %multiply.1944
  %123 = getelementptr inbounds [8192 x [904 x float]], ptr %arg4, i32 0, i32 %111, i32 %112
  %124 = load float, ptr %123, align 4, !invariant.load !297
  %125 = getelementptr inbounds [8192 x [904 x float]], ptr %arg5, i32 0, i32 %111, i32 %112
  %126 = load float, ptr %125, align 4, !invariant.load !297
  %127 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %111, i32 %112
  %128 = load float, ptr %127, align 4, !invariant.load !297
  %129 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %111, i32 %112
  %130 = load float, ptr %129, align 4, !invariant.load !297
  %multiply.2146 = fmul float %128, %130
  %subtract.2247 = fsub float %region_0_34_constant_1440, %multiply.2146
  %multiply.2348 = fmul float %126, %subtract.2247
  %multiply.2449 = fmul float %124, %multiply.2348
  %add.2550 = fadd float %add.2045, %multiply.2449
  %131 = getelementptr inbounds [8192 x [904 x float]], ptr %arg1, i32 0, i32 %111, i32 %112
  %132 = load float, ptr %131, align 4, !invariant.load !297
  %133 = getelementptr inbounds [8192 x [904 x float]], ptr %arg2, i32 0, i32 %111, i32 %112
  %134 = load float, ptr %133, align 4, !invariant.load !297
  %135 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %111, i32 %112
  %136 = load float, ptr %135, align 4, !invariant.load !297
  %137 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %111, i32 %112
  %138 = load float, ptr %137, align 4, !invariant.load !297
  %multiply.2651 = fmul float %136, %138
  %subtract.2752 = fsub float %region_0_34_constant_1440, %multiply.2651
  %multiply.2853 = fmul float %134, %subtract.2752
  %multiply.2954 = fmul float %132, %multiply.2853
  %add.3055 = fadd float %add.2550, %multiply.2954
  %multiply.3256 = fmul float %region_0_34_constant_1239, %add.3055
  %subtract.3357 = fsub float %110, %multiply.3256
  %139 = getelementptr inbounds float, ptr %arg11, i32 %linear_index3
  store float %subtract.3357, ptr %139, align 4
  br label %fusion_9.in_bounds-after
}

define void @fusion_8(ptr noalias align 16 dereferenceable(2883584) %arg0, ptr noalias align 128 dereferenceable(29622272) %arg1, ptr noalias align 128 dereferenceable(29622272) %arg2, ptr noalias align 128 dereferenceable(29622272) %arg3, ptr noalias align 128 dereferenceable(29622272) %arg4, ptr noalias align 128 dereferenceable(29622272) %arg5, ptr noalias align 128 dereferenceable(29622272) %arg6, ptr noalias align 128 dereferenceable(29622272) %arg7, ptr noalias align 128 dereferenceable(29622272) %arg8, ptr noalias align 128 dereferenceable(29622272) %arg9, ptr noalias align 128 dereferenceable(29622272) %arg10, ptr noalias align 128 dereferenceable(2883584) %arg11) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !556
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 180224
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 88
  %5 = udiv i32 %linear_index_base, 88
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 88
  %8 = udiv i32 %linear_index1, 88
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 88
  %11 = udiv i32 %linear_index2, 88
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 88
  %14 = udiv i32 %linear_index3, 88
  %15 = icmp ult i32 %linear_index_base, 720896
  br i1 %15, label %fusion_8.in_bounds-true, label %fusion_8.in_bounds-after

fusion_8.in_bounds-after:                         ; preds = %fusion_8.in_bounds-true, %entry
  ret void

fusion_8.in_bounds-true:                          ; preds = %entry
  %16 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_base
  %17 = load float, ptr %16, align 4, !invariant.load !297
  %region_0_34_constant_12 = load float, ptr @137, align 4
  %18 = add i32 %5, 0
  %19 = add i32 %4, 304
  %20 = getelementptr inbounds [8192 x [904 x float]], ptr %arg7, i32 0, i32 %18, i32 %19
  %21 = load float, ptr %20, align 4, !invariant.load !297
  %22 = getelementptr inbounds [8192 x [904 x float]], ptr %arg8, i32 0, i32 %18, i32 %19
  %23 = load float, ptr %22, align 4, !invariant.load !297
  %24 = getelementptr inbounds [8192 x [904 x float]], ptr %arg9, i32 0, i32 %18, i32 %19
  %25 = load float, ptr %24, align 4, !invariant.load !297
  %region_0_34_constant_14 = load float, ptr @136, align 4
  %26 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %18, i32 %19
  %27 = load float, ptr %26, align 4, !invariant.load !297
  %28 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %18, i32 %19
  %29 = load float, ptr %28, align 4, !invariant.load !297
  %multiply.16 = fmul float %27, %29
  %subtract.17 = fsub float %region_0_34_constant_14, %multiply.16
  %multiply.18 = fmul float %25, %subtract.17
  %multiply.19 = fmul float %23, %multiply.18
  %add.20 = fadd float %21, %multiply.19
  %30 = getelementptr inbounds [8192 x [904 x float]], ptr %arg4, i32 0, i32 %18, i32 %19
  %31 = load float, ptr %30, align 4, !invariant.load !297
  %32 = getelementptr inbounds [8192 x [904 x float]], ptr %arg5, i32 0, i32 %18, i32 %19
  %33 = load float, ptr %32, align 4, !invariant.load !297
  %34 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %18, i32 %19
  %35 = load float, ptr %34, align 4, !invariant.load !297
  %36 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %18, i32 %19
  %37 = load float, ptr %36, align 4, !invariant.load !297
  %multiply.21 = fmul float %35, %37
  %subtract.22 = fsub float %region_0_34_constant_14, %multiply.21
  %multiply.23 = fmul float %33, %subtract.22
  %multiply.24 = fmul float %31, %multiply.23
  %add.25 = fadd float %add.20, %multiply.24
  %38 = getelementptr inbounds [8192 x [904 x float]], ptr %arg1, i32 0, i32 %18, i32 %19
  %39 = load float, ptr %38, align 4, !invariant.load !297
  %40 = getelementptr inbounds [8192 x [904 x float]], ptr %arg2, i32 0, i32 %18, i32 %19
  %41 = load float, ptr %40, align 4, !invariant.load !297
  %42 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %18, i32 %19
  %43 = load float, ptr %42, align 4, !invariant.load !297
  %44 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %18, i32 %19
  %45 = load float, ptr %44, align 4, !invariant.load !297
  %multiply.26 = fmul float %43, %45
  %subtract.27 = fsub float %region_0_34_constant_14, %multiply.26
  %multiply.28 = fmul float %41, %subtract.27
  %multiply.29 = fmul float %39, %multiply.28
  %add.30 = fadd float %add.25, %multiply.29
  %multiply.32 = fmul float %region_0_34_constant_12, %add.30
  %subtract.33 = fsub float %17, %multiply.32
  %46 = getelementptr inbounds float, ptr %arg11, i32 %linear_index_base
  store float %subtract.33, ptr %46, align 4
  %47 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  %48 = load float, ptr %47, align 4, !invariant.load !297
  %region_0_34_constant_121 = load float, ptr @137, align 4
  %49 = add i32 %8, 0
  %50 = add i32 %7, 304
  %51 = getelementptr inbounds [8192 x [904 x float]], ptr %arg7, i32 0, i32 %49, i32 %50
  %52 = load float, ptr %51, align 4, !invariant.load !297
  %53 = getelementptr inbounds [8192 x [904 x float]], ptr %arg8, i32 0, i32 %49, i32 %50
  %54 = load float, ptr %53, align 4, !invariant.load !297
  %55 = getelementptr inbounds [8192 x [904 x float]], ptr %arg9, i32 0, i32 %49, i32 %50
  %56 = load float, ptr %55, align 4, !invariant.load !297
  %region_0_34_constant_142 = load float, ptr @136, align 4
  %57 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %49, i32 %50
  %58 = load float, ptr %57, align 4, !invariant.load !297
  %59 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %49, i32 %50
  %60 = load float, ptr %59, align 4, !invariant.load !297
  %multiply.163 = fmul float %58, %60
  %subtract.174 = fsub float %region_0_34_constant_142, %multiply.163
  %multiply.185 = fmul float %56, %subtract.174
  %multiply.196 = fmul float %54, %multiply.185
  %add.207 = fadd float %52, %multiply.196
  %61 = getelementptr inbounds [8192 x [904 x float]], ptr %arg4, i32 0, i32 %49, i32 %50
  %62 = load float, ptr %61, align 4, !invariant.load !297
  %63 = getelementptr inbounds [8192 x [904 x float]], ptr %arg5, i32 0, i32 %49, i32 %50
  %64 = load float, ptr %63, align 4, !invariant.load !297
  %65 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %49, i32 %50
  %66 = load float, ptr %65, align 4, !invariant.load !297
  %67 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %49, i32 %50
  %68 = load float, ptr %67, align 4, !invariant.load !297
  %multiply.218 = fmul float %66, %68
  %subtract.229 = fsub float %region_0_34_constant_142, %multiply.218
  %multiply.2310 = fmul float %64, %subtract.229
  %multiply.2411 = fmul float %62, %multiply.2310
  %add.2512 = fadd float %add.207, %multiply.2411
  %69 = getelementptr inbounds [8192 x [904 x float]], ptr %arg1, i32 0, i32 %49, i32 %50
  %70 = load float, ptr %69, align 4, !invariant.load !297
  %71 = getelementptr inbounds [8192 x [904 x float]], ptr %arg2, i32 0, i32 %49, i32 %50
  %72 = load float, ptr %71, align 4, !invariant.load !297
  %73 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %49, i32 %50
  %74 = load float, ptr %73, align 4, !invariant.load !297
  %75 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %49, i32 %50
  %76 = load float, ptr %75, align 4, !invariant.load !297
  %multiply.2613 = fmul float %74, %76
  %subtract.2714 = fsub float %region_0_34_constant_142, %multiply.2613
  %multiply.2815 = fmul float %72, %subtract.2714
  %multiply.2916 = fmul float %70, %multiply.2815
  %add.3017 = fadd float %add.2512, %multiply.2916
  %multiply.3218 = fmul float %region_0_34_constant_121, %add.3017
  %subtract.3319 = fsub float %48, %multiply.3218
  %77 = getelementptr inbounds float, ptr %arg11, i32 %linear_index1
  store float %subtract.3319, ptr %77, align 4
  %78 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  %79 = load float, ptr %78, align 4, !invariant.load !297
  %region_0_34_constant_1220 = load float, ptr @137, align 4
  %80 = add i32 %11, 0
  %81 = add i32 %10, 304
  %82 = getelementptr inbounds [8192 x [904 x float]], ptr %arg7, i32 0, i32 %80, i32 %81
  %83 = load float, ptr %82, align 4, !invariant.load !297
  %84 = getelementptr inbounds [8192 x [904 x float]], ptr %arg8, i32 0, i32 %80, i32 %81
  %85 = load float, ptr %84, align 4, !invariant.load !297
  %86 = getelementptr inbounds [8192 x [904 x float]], ptr %arg9, i32 0, i32 %80, i32 %81
  %87 = load float, ptr %86, align 4, !invariant.load !297
  %region_0_34_constant_1421 = load float, ptr @136, align 4
  %88 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %80, i32 %81
  %89 = load float, ptr %88, align 4, !invariant.load !297
  %90 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %80, i32 %81
  %91 = load float, ptr %90, align 4, !invariant.load !297
  %multiply.1622 = fmul float %89, %91
  %subtract.1723 = fsub float %region_0_34_constant_1421, %multiply.1622
  %multiply.1824 = fmul float %87, %subtract.1723
  %multiply.1925 = fmul float %85, %multiply.1824
  %add.2026 = fadd float %83, %multiply.1925
  %92 = getelementptr inbounds [8192 x [904 x float]], ptr %arg4, i32 0, i32 %80, i32 %81
  %93 = load float, ptr %92, align 4, !invariant.load !297
  %94 = getelementptr inbounds [8192 x [904 x float]], ptr %arg5, i32 0, i32 %80, i32 %81
  %95 = load float, ptr %94, align 4, !invariant.load !297
  %96 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %80, i32 %81
  %97 = load float, ptr %96, align 4, !invariant.load !297
  %98 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %80, i32 %81
  %99 = load float, ptr %98, align 4, !invariant.load !297
  %multiply.2127 = fmul float %97, %99
  %subtract.2228 = fsub float %region_0_34_constant_1421, %multiply.2127
  %multiply.2329 = fmul float %95, %subtract.2228
  %multiply.2430 = fmul float %93, %multiply.2329
  %add.2531 = fadd float %add.2026, %multiply.2430
  %100 = getelementptr inbounds [8192 x [904 x float]], ptr %arg1, i32 0, i32 %80, i32 %81
  %101 = load float, ptr %100, align 4, !invariant.load !297
  %102 = getelementptr inbounds [8192 x [904 x float]], ptr %arg2, i32 0, i32 %80, i32 %81
  %103 = load float, ptr %102, align 4, !invariant.load !297
  %104 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %80, i32 %81
  %105 = load float, ptr %104, align 4, !invariant.load !297
  %106 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %80, i32 %81
  %107 = load float, ptr %106, align 4, !invariant.load !297
  %multiply.2632 = fmul float %105, %107
  %subtract.2733 = fsub float %region_0_34_constant_1421, %multiply.2632
  %multiply.2834 = fmul float %103, %subtract.2733
  %multiply.2935 = fmul float %101, %multiply.2834
  %add.3036 = fadd float %add.2531, %multiply.2935
  %multiply.3237 = fmul float %region_0_34_constant_1220, %add.3036
  %subtract.3338 = fsub float %79, %multiply.3237
  %108 = getelementptr inbounds float, ptr %arg11, i32 %linear_index2
  store float %subtract.3338, ptr %108, align 4
  %109 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  %110 = load float, ptr %109, align 4, !invariant.load !297
  %region_0_34_constant_1239 = load float, ptr @137, align 4
  %111 = add i32 %14, 0
  %112 = add i32 %13, 304
  %113 = getelementptr inbounds [8192 x [904 x float]], ptr %arg7, i32 0, i32 %111, i32 %112
  %114 = load float, ptr %113, align 4, !invariant.load !297
  %115 = getelementptr inbounds [8192 x [904 x float]], ptr %arg8, i32 0, i32 %111, i32 %112
  %116 = load float, ptr %115, align 4, !invariant.load !297
  %117 = getelementptr inbounds [8192 x [904 x float]], ptr %arg9, i32 0, i32 %111, i32 %112
  %118 = load float, ptr %117, align 4, !invariant.load !297
  %region_0_34_constant_1440 = load float, ptr @136, align 4
  %119 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %111, i32 %112
  %120 = load float, ptr %119, align 4, !invariant.load !297
  %121 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %111, i32 %112
  %122 = load float, ptr %121, align 4, !invariant.load !297
  %multiply.1641 = fmul float %120, %122
  %subtract.1742 = fsub float %region_0_34_constant_1440, %multiply.1641
  %multiply.1843 = fmul float %118, %subtract.1742
  %multiply.1944 = fmul float %116, %multiply.1843
  %add.2045 = fadd float %114, %multiply.1944
  %123 = getelementptr inbounds [8192 x [904 x float]], ptr %arg4, i32 0, i32 %111, i32 %112
  %124 = load float, ptr %123, align 4, !invariant.load !297
  %125 = getelementptr inbounds [8192 x [904 x float]], ptr %arg5, i32 0, i32 %111, i32 %112
  %126 = load float, ptr %125, align 4, !invariant.load !297
  %127 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %111, i32 %112
  %128 = load float, ptr %127, align 4, !invariant.load !297
  %129 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %111, i32 %112
  %130 = load float, ptr %129, align 4, !invariant.load !297
  %multiply.2146 = fmul float %128, %130
  %subtract.2247 = fsub float %region_0_34_constant_1440, %multiply.2146
  %multiply.2348 = fmul float %126, %subtract.2247
  %multiply.2449 = fmul float %124, %multiply.2348
  %add.2550 = fadd float %add.2045, %multiply.2449
  %131 = getelementptr inbounds [8192 x [904 x float]], ptr %arg1, i32 0, i32 %111, i32 %112
  %132 = load float, ptr %131, align 4, !invariant.load !297
  %133 = getelementptr inbounds [8192 x [904 x float]], ptr %arg2, i32 0, i32 %111, i32 %112
  %134 = load float, ptr %133, align 4, !invariant.load !297
  %135 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %111, i32 %112
  %136 = load float, ptr %135, align 4, !invariant.load !297
  %137 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %111, i32 %112
  %138 = load float, ptr %137, align 4, !invariant.load !297
  %multiply.2651 = fmul float %136, %138
  %subtract.2752 = fsub float %region_0_34_constant_1440, %multiply.2651
  %multiply.2853 = fmul float %134, %subtract.2752
  %multiply.2954 = fmul float %132, %multiply.2853
  %add.3055 = fadd float %add.2550, %multiply.2954
  %multiply.3256 = fmul float %region_0_34_constant_1239, %add.3055
  %subtract.3357 = fsub float %110, %multiply.3256
  %139 = getelementptr inbounds float, ptr %arg11, i32 %linear_index3
  store float %subtract.3357, ptr %139, align 4
  br label %fusion_8.in_bounds-after
}

define void @fusion_11(ptr noalias align 16 dereferenceable(4194304) %arg0, ptr noalias align 128 dereferenceable(29622272) %arg1, ptr noalias align 128 dereferenceable(29622272) %arg2, ptr noalias align 128 dereferenceable(29622272) %arg3, ptr noalias align 128 dereferenceable(29622272) %arg4, ptr noalias align 128 dereferenceable(29622272) %arg5, ptr noalias align 128 dereferenceable(29622272) %arg6, ptr noalias align 128 dereferenceable(29622272) %arg7, ptr noalias align 128 dereferenceable(29622272) %arg8, ptr noalias align 128 dereferenceable(29622272) %arg9, ptr noalias align 128 dereferenceable(29622272) %arg10, ptr noalias align 16 dereferenceable(4194304) %arg11, ptr noalias align 128 dereferenceable(4194304) %arg12, ptr noalias align 128 dereferenceable(4194304) %arg13) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !345
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !362
  %2 = mul nuw nsw i32 %0, 256
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 262144
  call void @llvm.assume(i1 %linear_index_in_range)
  %linear_index_base = mul nuw nsw i32 %linear_index, 4
  %3 = udiv i32 %linear_index_base, 1
  %4 = urem i32 %3, 128
  %5 = udiv i32 %linear_index_base, 128
  %linear_index1 = add nuw nsw i32 %linear_index_base, 1
  %6 = udiv i32 %linear_index1, 1
  %7 = urem i32 %6, 128
  %8 = udiv i32 %linear_index1, 128
  %linear_index2 = add nuw nsw i32 %linear_index_base, 2
  %9 = udiv i32 %linear_index2, 1
  %10 = urem i32 %9, 128
  %11 = udiv i32 %linear_index2, 128
  %linear_index3 = add nuw nsw i32 %linear_index_base, 3
  %12 = udiv i32 %linear_index3, 1
  %13 = urem i32 %12, 128
  %14 = udiv i32 %linear_index3, 128
  %15 = icmp ult i32 %linear_index_base, 1048576
  br i1 %15, label %fusion_11.in_bounds-true, label %fusion_11.in_bounds-after

fusion_11.in_bounds-after:                        ; preds = %fusion_11.in_bounds-true, %entry
  ret void

fusion_11.in_bounds-true:                         ; preds = %entry
  %16 = getelementptr inbounds float, ptr %arg0, i32 %linear_index_base
  %17 = load float, ptr %16, align 4, !invariant.load !297
  %region_0_39_constant_13 = load float, ptr @139, align 4
  %18 = add i32 %5, 0
  %19 = add i32 %4, 0
  %20 = getelementptr inbounds [8192 x [904 x float]], ptr %arg7, i32 0, i32 %18, i32 %19
  %21 = load float, ptr %20, align 4, !invariant.load !297
  %22 = getelementptr inbounds [8192 x [904 x float]], ptr %arg8, i32 0, i32 %18, i32 %19
  %23 = load float, ptr %22, align 4, !invariant.load !297
  %24 = getelementptr inbounds [8192 x [904 x float]], ptr %arg9, i32 0, i32 %18, i32 %19
  %25 = load float, ptr %24, align 4, !invariant.load !297
  %region_0_39_constant_15 = load float, ptr @138, align 4
  %26 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %18, i32 %19
  %27 = load float, ptr %26, align 4, !invariant.load !297
  %28 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %18, i32 %19
  %29 = load float, ptr %28, align 4, !invariant.load !297
  %multiply.17 = fmul float %27, %29
  %subtract.18 = fsub float %region_0_39_constant_15, %multiply.17
  %multiply.19 = fmul float %25, %subtract.18
  %multiply.20 = fmul float %23, %multiply.19
  %add.21 = fadd float %21, %multiply.20
  %30 = getelementptr inbounds [8192 x [904 x float]], ptr %arg4, i32 0, i32 %18, i32 %19
  %31 = load float, ptr %30, align 4, !invariant.load !297
  %32 = getelementptr inbounds [8192 x [904 x float]], ptr %arg5, i32 0, i32 %18, i32 %19
  %33 = load float, ptr %32, align 4, !invariant.load !297
  %34 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %18, i32 %19
  %35 = load float, ptr %34, align 4, !invariant.load !297
  %36 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %18, i32 %19
  %37 = load float, ptr %36, align 4, !invariant.load !297
  %multiply.22 = fmul float %35, %37
  %subtract.23 = fsub float %region_0_39_constant_15, %multiply.22
  %multiply.24 = fmul float %33, %subtract.23
  %multiply.25 = fmul float %31, %multiply.24
  %add.26 = fadd float %add.21, %multiply.25
  %38 = getelementptr inbounds [8192 x [904 x float]], ptr %arg1, i32 0, i32 %18, i32 %19
  %39 = load float, ptr %38, align 4, !invariant.load !297
  %40 = getelementptr inbounds [8192 x [904 x float]], ptr %arg2, i32 0, i32 %18, i32 %19
  %41 = load float, ptr %40, align 4, !invariant.load !297
  %42 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %18, i32 %19
  %43 = load float, ptr %42, align 4, !invariant.load !297
  %44 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %18, i32 %19
  %45 = load float, ptr %44, align 4, !invariant.load !297
  %multiply.27 = fmul float %43, %45
  %subtract.28 = fsub float %region_0_39_constant_15, %multiply.27
  %multiply.29 = fmul float %41, %subtract.28
  %multiply.30 = fmul float %39, %multiply.29
  %add.31 = fadd float %add.26, %multiply.30
  %multiply.33 = fmul float %region_0_39_constant_13, %add.31
  %subtract.34 = fsub float %17, %multiply.33
  %46 = insertvalue { float, float } undef, float %subtract.34, 0
  %47 = getelementptr inbounds float, ptr %arg11, i32 %linear_index_base
  %48 = load float, ptr %47, align 4, !invariant.load !297
  %49 = add i32 %5, 0
  %50 = add i32 %4, 128
  %51 = getelementptr inbounds [8192 x [904 x float]], ptr %arg7, i32 0, i32 %49, i32 %50
  %52 = load float, ptr %51, align 4, !invariant.load !297
  %53 = getelementptr inbounds [8192 x [904 x float]], ptr %arg8, i32 0, i32 %49, i32 %50
  %54 = load float, ptr %53, align 4, !invariant.load !297
  %55 = getelementptr inbounds [8192 x [904 x float]], ptr %arg9, i32 0, i32 %49, i32 %50
  %56 = load float, ptr %55, align 4, !invariant.load !297
  %region_0_39_constant_151 = load float, ptr @138, align 4
  %57 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %49, i32 %50
  %58 = load float, ptr %57, align 4, !invariant.load !297
  %59 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %49, i32 %50
  %60 = load float, ptr %59, align 4, !invariant.load !297
  %multiply.172 = fmul float %58, %60
  %subtract.183 = fsub float %region_0_39_constant_151, %multiply.172
  %multiply.194 = fmul float %56, %subtract.183
  %multiply.205 = fmul float %54, %multiply.194
  %add.216 = fadd float %52, %multiply.205
  %61 = getelementptr inbounds [8192 x [904 x float]], ptr %arg4, i32 0, i32 %49, i32 %50
  %62 = load float, ptr %61, align 4, !invariant.load !297
  %63 = getelementptr inbounds [8192 x [904 x float]], ptr %arg5, i32 0, i32 %49, i32 %50
  %64 = load float, ptr %63, align 4, !invariant.load !297
  %65 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %49, i32 %50
  %66 = load float, ptr %65, align 4, !invariant.load !297
  %67 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %49, i32 %50
  %68 = load float, ptr %67, align 4, !invariant.load !297
  %multiply.227 = fmul float %66, %68
  %subtract.238 = fsub float %region_0_39_constant_151, %multiply.227
  %multiply.249 = fmul float %64, %subtract.238
  %multiply.2510 = fmul float %62, %multiply.249
  %add.2611 = fadd float %add.216, %multiply.2510
  %69 = getelementptr inbounds [8192 x [904 x float]], ptr %arg1, i32 0, i32 %49, i32 %50
  %70 = load float, ptr %69, align 4, !invariant.load !297
  %71 = getelementptr inbounds [8192 x [904 x float]], ptr %arg2, i32 0, i32 %49, i32 %50
  %72 = load float, ptr %71, align 4, !invariant.load !297
  %73 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %49, i32 %50
  %74 = load float, ptr %73, align 4, !invariant.load !297
  %75 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %49, i32 %50
  %76 = load float, ptr %75, align 4, !invariant.load !297
  %multiply.2712 = fmul float %74, %76
  %subtract.2813 = fsub float %region_0_39_constant_151, %multiply.2712
  %multiply.2914 = fmul float %72, %subtract.2813
  %multiply.3015 = fmul float %70, %multiply.2914
  %add.3116 = fadd float %add.2611, %multiply.3015
  %multiply.36 = fmul float %region_0_39_constant_13, %add.3116
  %subtract.37 = fsub float %48, %multiply.36
  %77 = insertvalue { float, float } %46, float %subtract.37, 1
  %78 = extractvalue { float, float } %77, 0
  %79 = getelementptr inbounds float, ptr %arg12, i32 %linear_index_base
  store float %78, ptr %79, align 4
  %80 = extractvalue { float, float } %77, 1
  %81 = getelementptr inbounds float, ptr %arg13, i32 %linear_index_base
  store float %80, ptr %81, align 4
  %82 = getelementptr inbounds float, ptr %arg0, i32 %linear_index1
  %83 = load float, ptr %82, align 4, !invariant.load !297
  %region_0_39_constant_1317 = load float, ptr @139, align 4
  %84 = add i32 %8, 0
  %85 = add i32 %7, 0
  %86 = getelementptr inbounds [8192 x [904 x float]], ptr %arg7, i32 0, i32 %84, i32 %85
  %87 = load float, ptr %86, align 4, !invariant.load !297
  %88 = getelementptr inbounds [8192 x [904 x float]], ptr %arg8, i32 0, i32 %84, i32 %85
  %89 = load float, ptr %88, align 4, !invariant.load !297
  %90 = getelementptr inbounds [8192 x [904 x float]], ptr %arg9, i32 0, i32 %84, i32 %85
  %91 = load float, ptr %90, align 4, !invariant.load !297
  %region_0_39_constant_1518 = load float, ptr @138, align 4
  %92 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %84, i32 %85
  %93 = load float, ptr %92, align 4, !invariant.load !297
  %94 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %84, i32 %85
  %95 = load float, ptr %94, align 4, !invariant.load !297
  %multiply.1719 = fmul float %93, %95
  %subtract.1820 = fsub float %region_0_39_constant_1518, %multiply.1719
  %multiply.1921 = fmul float %91, %subtract.1820
  %multiply.2022 = fmul float %89, %multiply.1921
  %add.2123 = fadd float %87, %multiply.2022
  %96 = getelementptr inbounds [8192 x [904 x float]], ptr %arg4, i32 0, i32 %84, i32 %85
  %97 = load float, ptr %96, align 4, !invariant.load !297
  %98 = getelementptr inbounds [8192 x [904 x float]], ptr %arg5, i32 0, i32 %84, i32 %85
  %99 = load float, ptr %98, align 4, !invariant.load !297
  %100 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %84, i32 %85
  %101 = load float, ptr %100, align 4, !invariant.load !297
  %102 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %84, i32 %85
  %103 = load float, ptr %102, align 4, !invariant.load !297
  %multiply.2224 = fmul float %101, %103
  %subtract.2325 = fsub float %region_0_39_constant_1518, %multiply.2224
  %multiply.2426 = fmul float %99, %subtract.2325
  %multiply.2527 = fmul float %97, %multiply.2426
  %add.2628 = fadd float %add.2123, %multiply.2527
  %104 = getelementptr inbounds [8192 x [904 x float]], ptr %arg1, i32 0, i32 %84, i32 %85
  %105 = load float, ptr %104, align 4, !invariant.load !297
  %106 = getelementptr inbounds [8192 x [904 x float]], ptr %arg2, i32 0, i32 %84, i32 %85
  %107 = load float, ptr %106, align 4, !invariant.load !297
  %108 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %84, i32 %85
  %109 = load float, ptr %108, align 4, !invariant.load !297
  %110 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %84, i32 %85
  %111 = load float, ptr %110, align 4, !invariant.load !297
  %multiply.2729 = fmul float %109, %111
  %subtract.2830 = fsub float %region_0_39_constant_1518, %multiply.2729
  %multiply.2931 = fmul float %107, %subtract.2830
  %multiply.3032 = fmul float %105, %multiply.2931
  %add.3133 = fadd float %add.2628, %multiply.3032
  %multiply.3334 = fmul float %region_0_39_constant_1317, %add.3133
  %subtract.3435 = fsub float %83, %multiply.3334
  %112 = insertvalue { float, float } undef, float %subtract.3435, 0
  %113 = getelementptr inbounds float, ptr %arg11, i32 %linear_index1
  %114 = load float, ptr %113, align 4, !invariant.load !297
  %115 = add i32 %8, 0
  %116 = add i32 %7, 128
  %117 = getelementptr inbounds [8192 x [904 x float]], ptr %arg7, i32 0, i32 %115, i32 %116
  %118 = load float, ptr %117, align 4, !invariant.load !297
  %119 = getelementptr inbounds [8192 x [904 x float]], ptr %arg8, i32 0, i32 %115, i32 %116
  %120 = load float, ptr %119, align 4, !invariant.load !297
  %121 = getelementptr inbounds [8192 x [904 x float]], ptr %arg9, i32 0, i32 %115, i32 %116
  %122 = load float, ptr %121, align 4, !invariant.load !297
  %region_0_39_constant_1536 = load float, ptr @138, align 4
  %123 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %115, i32 %116
  %124 = load float, ptr %123, align 4, !invariant.load !297
  %125 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %115, i32 %116
  %126 = load float, ptr %125, align 4, !invariant.load !297
  %multiply.1737 = fmul float %124, %126
  %subtract.1838 = fsub float %region_0_39_constant_1536, %multiply.1737
  %multiply.1939 = fmul float %122, %subtract.1838
  %multiply.2040 = fmul float %120, %multiply.1939
  %add.2141 = fadd float %118, %multiply.2040
  %127 = getelementptr inbounds [8192 x [904 x float]], ptr %arg4, i32 0, i32 %115, i32 %116
  %128 = load float, ptr %127, align 4, !invariant.load !297
  %129 = getelementptr inbounds [8192 x [904 x float]], ptr %arg5, i32 0, i32 %115, i32 %116
  %130 = load float, ptr %129, align 4, !invariant.load !297
  %131 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %115, i32 %116
  %132 = load float, ptr %131, align 4, !invariant.load !297
  %133 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %115, i32 %116
  %134 = load float, ptr %133, align 4, !invariant.load !297
  %multiply.2242 = fmul float %132, %134
  %subtract.2343 = fsub float %region_0_39_constant_1536, %multiply.2242
  %multiply.2444 = fmul float %130, %subtract.2343
  %multiply.2545 = fmul float %128, %multiply.2444
  %add.2646 = fadd float %add.2141, %multiply.2545
  %135 = getelementptr inbounds [8192 x [904 x float]], ptr %arg1, i32 0, i32 %115, i32 %116
  %136 = load float, ptr %135, align 4, !invariant.load !297
  %137 = getelementptr inbounds [8192 x [904 x float]], ptr %arg2, i32 0, i32 %115, i32 %116
  %138 = load float, ptr %137, align 4, !invariant.load !297
  %139 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %115, i32 %116
  %140 = load float, ptr %139, align 4, !invariant.load !297
  %141 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %115, i32 %116
  %142 = load float, ptr %141, align 4, !invariant.load !297
  %multiply.2747 = fmul float %140, %142
  %subtract.2848 = fsub float %region_0_39_constant_1536, %multiply.2747
  %multiply.2949 = fmul float %138, %subtract.2848
  %multiply.3050 = fmul float %136, %multiply.2949
  %add.3151 = fadd float %add.2646, %multiply.3050
  %multiply.3652 = fmul float %region_0_39_constant_1317, %add.3151
  %subtract.3753 = fsub float %114, %multiply.3652
  %143 = insertvalue { float, float } %112, float %subtract.3753, 1
  %144 = extractvalue { float, float } %143, 0
  %145 = getelementptr inbounds float, ptr %arg12, i32 %linear_index1
  store float %144, ptr %145, align 4
  %146 = extractvalue { float, float } %143, 1
  %147 = getelementptr inbounds float, ptr %arg13, i32 %linear_index1
  store float %146, ptr %147, align 4
  %148 = getelementptr inbounds float, ptr %arg0, i32 %linear_index2
  %149 = load float, ptr %148, align 4, !invariant.load !297
  %region_0_39_constant_1354 = load float, ptr @139, align 4
  %150 = add i32 %11, 0
  %151 = add i32 %10, 0
  %152 = getelementptr inbounds [8192 x [904 x float]], ptr %arg7, i32 0, i32 %150, i32 %151
  %153 = load float, ptr %152, align 4, !invariant.load !297
  %154 = getelementptr inbounds [8192 x [904 x float]], ptr %arg8, i32 0, i32 %150, i32 %151
  %155 = load float, ptr %154, align 4, !invariant.load !297
  %156 = getelementptr inbounds [8192 x [904 x float]], ptr %arg9, i32 0, i32 %150, i32 %151
  %157 = load float, ptr %156, align 4, !invariant.load !297
  %region_0_39_constant_1555 = load float, ptr @138, align 4
  %158 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %150, i32 %151
  %159 = load float, ptr %158, align 4, !invariant.load !297
  %160 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %150, i32 %151
  %161 = load float, ptr %160, align 4, !invariant.load !297
  %multiply.1756 = fmul float %159, %161
  %subtract.1857 = fsub float %region_0_39_constant_1555, %multiply.1756
  %multiply.1958 = fmul float %157, %subtract.1857
  %multiply.2059 = fmul float %155, %multiply.1958
  %add.2160 = fadd float %153, %multiply.2059
  %162 = getelementptr inbounds [8192 x [904 x float]], ptr %arg4, i32 0, i32 %150, i32 %151
  %163 = load float, ptr %162, align 4, !invariant.load !297
  %164 = getelementptr inbounds [8192 x [904 x float]], ptr %arg5, i32 0, i32 %150, i32 %151
  %165 = load float, ptr %164, align 4, !invariant.load !297
  %166 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %150, i32 %151
  %167 = load float, ptr %166, align 4, !invariant.load !297
  %168 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %150, i32 %151
  %169 = load float, ptr %168, align 4, !invariant.load !297
  %multiply.2261 = fmul float %167, %169
  %subtract.2362 = fsub float %region_0_39_constant_1555, %multiply.2261
  %multiply.2463 = fmul float %165, %subtract.2362
  %multiply.2564 = fmul float %163, %multiply.2463
  %add.2665 = fadd float %add.2160, %multiply.2564
  %170 = getelementptr inbounds [8192 x [904 x float]], ptr %arg1, i32 0, i32 %150, i32 %151
  %171 = load float, ptr %170, align 4, !invariant.load !297
  %172 = getelementptr inbounds [8192 x [904 x float]], ptr %arg2, i32 0, i32 %150, i32 %151
  %173 = load float, ptr %172, align 4, !invariant.load !297
  %174 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %150, i32 %151
  %175 = load float, ptr %174, align 4, !invariant.load !297
  %176 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %150, i32 %151
  %177 = load float, ptr %176, align 4, !invariant.load !297
  %multiply.2766 = fmul float %175, %177
  %subtract.2867 = fsub float %region_0_39_constant_1555, %multiply.2766
  %multiply.2968 = fmul float %173, %subtract.2867
  %multiply.3069 = fmul float %171, %multiply.2968
  %add.3170 = fadd float %add.2665, %multiply.3069
  %multiply.3371 = fmul float %region_0_39_constant_1354, %add.3170
  %subtract.3472 = fsub float %149, %multiply.3371
  %178 = insertvalue { float, float } undef, float %subtract.3472, 0
  %179 = getelementptr inbounds float, ptr %arg11, i32 %linear_index2
  %180 = load float, ptr %179, align 4, !invariant.load !297
  %181 = add i32 %11, 0
  %182 = add i32 %10, 128
  %183 = getelementptr inbounds [8192 x [904 x float]], ptr %arg7, i32 0, i32 %181, i32 %182
  %184 = load float, ptr %183, align 4, !invariant.load !297
  %185 = getelementptr inbounds [8192 x [904 x float]], ptr %arg8, i32 0, i32 %181, i32 %182
  %186 = load float, ptr %185, align 4, !invariant.load !297
  %187 = getelementptr inbounds [8192 x [904 x float]], ptr %arg9, i32 0, i32 %181, i32 %182
  %188 = load float, ptr %187, align 4, !invariant.load !297
  %region_0_39_constant_1573 = load float, ptr @138, align 4
  %189 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %181, i32 %182
  %190 = load float, ptr %189, align 4, !invariant.load !297
  %191 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %181, i32 %182
  %192 = load float, ptr %191, align 4, !invariant.load !297
  %multiply.1774 = fmul float %190, %192
  %subtract.1875 = fsub float %region_0_39_constant_1573, %multiply.1774
  %multiply.1976 = fmul float %188, %subtract.1875
  %multiply.2077 = fmul float %186, %multiply.1976
  %add.2178 = fadd float %184, %multiply.2077
  %193 = getelementptr inbounds [8192 x [904 x float]], ptr %arg4, i32 0, i32 %181, i32 %182
  %194 = load float, ptr %193, align 4, !invariant.load !297
  %195 = getelementptr inbounds [8192 x [904 x float]], ptr %arg5, i32 0, i32 %181, i32 %182
  %196 = load float, ptr %195, align 4, !invariant.load !297
  %197 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %181, i32 %182
  %198 = load float, ptr %197, align 4, !invariant.load !297
  %199 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %181, i32 %182
  %200 = load float, ptr %199, align 4, !invariant.load !297
  %multiply.2279 = fmul float %198, %200
  %subtract.2380 = fsub float %region_0_39_constant_1573, %multiply.2279
  %multiply.2481 = fmul float %196, %subtract.2380
  %multiply.2582 = fmul float %194, %multiply.2481
  %add.2683 = fadd float %add.2178, %multiply.2582
  %201 = getelementptr inbounds [8192 x [904 x float]], ptr %arg1, i32 0, i32 %181, i32 %182
  %202 = load float, ptr %201, align 4, !invariant.load !297
  %203 = getelementptr inbounds [8192 x [904 x float]], ptr %arg2, i32 0, i32 %181, i32 %182
  %204 = load float, ptr %203, align 4, !invariant.load !297
  %205 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %181, i32 %182
  %206 = load float, ptr %205, align 4, !invariant.load !297
  %207 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %181, i32 %182
  %208 = load float, ptr %207, align 4, !invariant.load !297
  %multiply.2784 = fmul float %206, %208
  %subtract.2885 = fsub float %region_0_39_constant_1573, %multiply.2784
  %multiply.2986 = fmul float %204, %subtract.2885
  %multiply.3087 = fmul float %202, %multiply.2986
  %add.3188 = fadd float %add.2683, %multiply.3087
  %multiply.3689 = fmul float %region_0_39_constant_1354, %add.3188
  %subtract.3790 = fsub float %180, %multiply.3689
  %209 = insertvalue { float, float } %178, float %subtract.3790, 1
  %210 = extractvalue { float, float } %209, 0
  %211 = getelementptr inbounds float, ptr %arg12, i32 %linear_index2
  store float %210, ptr %211, align 4
  %212 = extractvalue { float, float } %209, 1
  %213 = getelementptr inbounds float, ptr %arg13, i32 %linear_index2
  store float %212, ptr %213, align 4
  %214 = getelementptr inbounds float, ptr %arg0, i32 %linear_index3
  %215 = load float, ptr %214, align 4, !invariant.load !297
  %region_0_39_constant_1391 = load float, ptr @139, align 4
  %216 = add i32 %14, 0
  %217 = add i32 %13, 0
  %218 = getelementptr inbounds [8192 x [904 x float]], ptr %arg7, i32 0, i32 %216, i32 %217
  %219 = load float, ptr %218, align 4, !invariant.load !297
  %220 = getelementptr inbounds [8192 x [904 x float]], ptr %arg8, i32 0, i32 %216, i32 %217
  %221 = load float, ptr %220, align 4, !invariant.load !297
  %222 = getelementptr inbounds [8192 x [904 x float]], ptr %arg9, i32 0, i32 %216, i32 %217
  %223 = load float, ptr %222, align 4, !invariant.load !297
  %region_0_39_constant_1592 = load float, ptr @138, align 4
  %224 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %216, i32 %217
  %225 = load float, ptr %224, align 4, !invariant.load !297
  %226 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %216, i32 %217
  %227 = load float, ptr %226, align 4, !invariant.load !297
  %multiply.1793 = fmul float %225, %227
  %subtract.1894 = fsub float %region_0_39_constant_1592, %multiply.1793
  %multiply.1995 = fmul float %223, %subtract.1894
  %multiply.2096 = fmul float %221, %multiply.1995
  %add.2197 = fadd float %219, %multiply.2096
  %228 = getelementptr inbounds [8192 x [904 x float]], ptr %arg4, i32 0, i32 %216, i32 %217
  %229 = load float, ptr %228, align 4, !invariant.load !297
  %230 = getelementptr inbounds [8192 x [904 x float]], ptr %arg5, i32 0, i32 %216, i32 %217
  %231 = load float, ptr %230, align 4, !invariant.load !297
  %232 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %216, i32 %217
  %233 = load float, ptr %232, align 4, !invariant.load !297
  %234 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %216, i32 %217
  %235 = load float, ptr %234, align 4, !invariant.load !297
  %multiply.2298 = fmul float %233, %235
  %subtract.2399 = fsub float %region_0_39_constant_1592, %multiply.2298
  %multiply.24100 = fmul float %231, %subtract.2399
  %multiply.25101 = fmul float %229, %multiply.24100
  %add.26102 = fadd float %add.2197, %multiply.25101
  %236 = getelementptr inbounds [8192 x [904 x float]], ptr %arg1, i32 0, i32 %216, i32 %217
  %237 = load float, ptr %236, align 4, !invariant.load !297
  %238 = getelementptr inbounds [8192 x [904 x float]], ptr %arg2, i32 0, i32 %216, i32 %217
  %239 = load float, ptr %238, align 4, !invariant.load !297
  %240 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %216, i32 %217
  %241 = load float, ptr %240, align 4, !invariant.load !297
  %242 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %216, i32 %217
  %243 = load float, ptr %242, align 4, !invariant.load !297
  %multiply.27103 = fmul float %241, %243
  %subtract.28104 = fsub float %region_0_39_constant_1592, %multiply.27103
  %multiply.29105 = fmul float %239, %subtract.28104
  %multiply.30106 = fmul float %237, %multiply.29105
  %add.31107 = fadd float %add.26102, %multiply.30106
  %multiply.33108 = fmul float %region_0_39_constant_1391, %add.31107
  %subtract.34109 = fsub float %215, %multiply.33108
  %244 = insertvalue { float, float } undef, float %subtract.34109, 0
  %245 = getelementptr inbounds float, ptr %arg11, i32 %linear_index3
  %246 = load float, ptr %245, align 4, !invariant.load !297
  %247 = add i32 %14, 0
  %248 = add i32 %13, 128
  %249 = getelementptr inbounds [8192 x [904 x float]], ptr %arg7, i32 0, i32 %247, i32 %248
  %250 = load float, ptr %249, align 4, !invariant.load !297
  %251 = getelementptr inbounds [8192 x [904 x float]], ptr %arg8, i32 0, i32 %247, i32 %248
  %252 = load float, ptr %251, align 4, !invariant.load !297
  %253 = getelementptr inbounds [8192 x [904 x float]], ptr %arg9, i32 0, i32 %247, i32 %248
  %254 = load float, ptr %253, align 4, !invariant.load !297
  %region_0_39_constant_15110 = load float, ptr @138, align 4
  %255 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %247, i32 %248
  %256 = load float, ptr %255, align 4, !invariant.load !297
  %257 = getelementptr inbounds [8192 x [904 x float]], ptr %arg10, i32 0, i32 %247, i32 %248
  %258 = load float, ptr %257, align 4, !invariant.load !297
  %multiply.17111 = fmul float %256, %258
  %subtract.18112 = fsub float %region_0_39_constant_15110, %multiply.17111
  %multiply.19113 = fmul float %254, %subtract.18112
  %multiply.20114 = fmul float %252, %multiply.19113
  %add.21115 = fadd float %250, %multiply.20114
  %259 = getelementptr inbounds [8192 x [904 x float]], ptr %arg4, i32 0, i32 %247, i32 %248
  %260 = load float, ptr %259, align 4, !invariant.load !297
  %261 = getelementptr inbounds [8192 x [904 x float]], ptr %arg5, i32 0, i32 %247, i32 %248
  %262 = load float, ptr %261, align 4, !invariant.load !297
  %263 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %247, i32 %248
  %264 = load float, ptr %263, align 4, !invariant.load !297
  %265 = getelementptr inbounds [8192 x [904 x float]], ptr %arg6, i32 0, i32 %247, i32 %248
  %266 = load float, ptr %265, align 4, !invariant.load !297
  %multiply.22116 = fmul float %264, %266
  %subtract.23117 = fsub float %region_0_39_constant_15110, %multiply.22116
  %multiply.24118 = fmul float %262, %subtract.23117
  %multiply.25119 = fmul float %260, %multiply.24118
  %add.26120 = fadd float %add.21115, %multiply.25119
  %267 = getelementptr inbounds [8192 x [904 x float]], ptr %arg1, i32 0, i32 %247, i32 %248
  %268 = load float, ptr %267, align 4, !invariant.load !297
  %269 = getelementptr inbounds [8192 x [904 x float]], ptr %arg2, i32 0, i32 %247, i32 %248
  %270 = load float, ptr %269, align 4, !invariant.load !297
  %271 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %247, i32 %248
  %272 = load float, ptr %271, align 4, !invariant.load !297
  %273 = getelementptr inbounds [8192 x [904 x float]], ptr %arg3, i32 0, i32 %247, i32 %248
  %274 = load float, ptr %273, align 4, !invariant.load !297
  %multiply.27121 = fmul float %272, %274
  %subtract.28122 = fsub float %region_0_39_constant_15110, %multiply.27121
  %multiply.29123 = fmul float %270, %subtract.28122
  %multiply.30124 = fmul float %268, %multiply.29123
  %add.31125 = fadd float %add.26120, %multiply.30124
  %multiply.36126 = fmul float %region_0_39_constant_1391, %add.31125
  %subtract.37127 = fsub float %246, %multiply.36126
  %275 = insertvalue { float, float } %244, float %subtract.37127, 1
  %276 = extractvalue { float, float } %275, 0
  %277 = getelementptr inbounds float, ptr %arg12, i32 %linear_index3
  store float %276, ptr %277, align 4
  %278 = extractvalue { float, float } %275, 1
  %279 = getelementptr inbounds float, ptr %arg13, i32 %linear_index3
  store float %278, ptr %279, align 4
  br label %fusion_11.in_bounds-after
}

define void @copy_fusion_4(ptr noalias align 16 dereferenceable(524288) %arg0, ptr noalias align 128 dereferenceable(64225280) %arg1, ptr noalias align 16 dereferenceable(524288) %arg2, ptr noalias align 128 dereferenceable(64225280) %arg3, ptr noalias align 16 dereferenceable(524288) %arg4, ptr noalias align 128 dereferenceable(786432) %arg5, ptr noalias align 16 dereferenceable(524288) %arg6, ptr noalias align 128 dereferenceable(64225280) %arg7, ptr noalias align 16 dereferenceable(1048576) %arg8, ptr noalias align 16 dereferenceable(1048576) %arg9, ptr noalias align 128 dereferenceable(4063232) %arg10, ptr noalias align 16 dereferenceable(1048576) %arg11, ptr noalias align 16 dereferenceable(1048576) %arg12, ptr noalias align 128 dereferenceable(524288) %arg13, ptr noalias align 128 dereferenceable(524288) %arg14, ptr noalias align 128 dereferenceable(524288) %arg15, ptr noalias align 128 dereferenceable(524288) %arg16, ptr noalias align 128 dereferenceable(1048576) %arg17, ptr noalias align 128 dereferenceable(1048576) %arg18, ptr noalias align 128 dereferenceable(1048576) %arg19, ptr noalias align 128 dereferenceable(1048576) %arg20) {
entry:
  %0 = call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !range !555
  %1 = call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !range !345
  %2 = mul nuw nsw i32 %0, 1024
  %linear_index = add nuw nsw i32 %2, %1
  %linear_index_in_range = icmp ult i32 %linear_index, 393216
  call void @llvm.assume(i1 %linear_index_in_range)
  %3 = udiv i32 %linear_index, 1
  %4 = icmp ult i32 %linear_index, 393216
  br i1 %4, label %copy_fusion_4.in_bounds-true, label %copy_fusion_4.in_bounds-after

copy_fusion_4.in_bounds-after:                    ; preds = %slice7-after, %entry
  ret void

copy_fusion_4.in_bounds-true:                     ; preds = %entry
  br label %concatenate.pivot.131072.

concat_index_from_operand_id0:                    ; preds = %concatenate.pivot.0.
  %5 = phi i32 [ 0, %concatenate.pivot.0. ]
  %6 = sub nsw i32 %3, %5
  %7 = mul nuw nsw i32 %6, 1
  %8 = add nuw nsw i32 0, %7
  %9 = urem i32 %8, 16
  %10 = udiv i32 %8, 16
  %11 = udiv i32 %10, 8192
  %12 = getelementptr inbounds [8192 x [16 x float]], ptr %arg0, i32 0, i32 %10, i32 %9
  %13 = load float, ptr %12, align 4, !invariant.load !297
  %region_0_63_constant_14 = load float, ptr @141, align 4
  %14 = add i32 %10, 0
  %15 = add i32 %9, 1912
  %16 = getelementptr inbounds [8192 x [1960 x float]], ptr %arg1, i32 0, i32 %14, i32 %15
  %17 = load float, ptr %16, align 4, !invariant.load !297
  %multiply.17 = fmul float %region_0_63_constant_14, %17
  %subtract.18 = fsub float %13, %multiply.17
  br label %concatenate.26.merge

concat_index_from_operand_id1:                    ; preds = %concatenate.pivot.131072.1
  %18 = phi i32 [ 131072, %concatenate.pivot.131072.1 ]
  %19 = sub nsw i32 %3, %18
  %20 = mul nuw nsw i32 %19, 1
  %21 = add nuw nsw i32 0, %20
  %22 = urem i32 %21, 32
  %23 = udiv i32 %21, 32
  %24 = udiv i32 %23, 8192
  %25 = getelementptr inbounds [8192 x [32 x float]], ptr %arg8, i32 0, i32 %23, i32 %22
  %26 = load float, ptr %25, align 4, !invariant.load !297
  %region_0_63_constant_20 = load float, ptr @140, align 4
  %27 = add i32 %23, 0
  %28 = add i32 %22, 1928
  %29 = getelementptr inbounds [8192 x [1960 x float]], ptr %arg1, i32 0, i32 %27, i32 %28
  %30 = load float, ptr %29, align 4, !invariant.load !297
  %multiply.23 = fmul float %region_0_63_constant_20, %30
  %subtract.24 = fsub float %26, %multiply.23
  br label %concatenate.26.merge

concatenate.pivot.131072.:                        ; preds = %copy_fusion_4.in_bounds-true
  %31 = icmp ult i32 %3, 131072
  br i1 %31, label %concatenate.pivot.0., label %concatenate.pivot.131072.1

concatenate.pivot.0.:                             ; preds = %concatenate.pivot.131072.
  br label %concat_index_from_operand_id0

concatenate.pivot.131072.1:                       ; preds = %concatenate.pivot.131072.
  br label %concat_index_from_operand_id1

concatenate.26.merge:                             ; preds = %concat_index_from_operand_id1, %concat_index_from_operand_id0
  %32 = phi float [ %subtract.18, %concat_index_from_operand_id0 ], [ %subtract.24, %concat_index_from_operand_id1 ]
  br label %concatenate.pivot.131072.6

concat_index_from_operand_id02:                   ; preds = %concatenate.pivot.0.7
  %33 = phi i32 [ 0, %concatenate.pivot.0.7 ]
  %34 = sub nsw i32 %3, %33
  %35 = mul nuw nsw i32 %34, 1
  %36 = add nuw nsw i32 0, %35
  %37 = urem i32 %36, 16
  %38 = udiv i32 %36, 16
  %39 = udiv i32 %38, 8192
  %40 = getelementptr inbounds [8192 x [16 x float]], ptr %arg2, i32 0, i32 %38, i32 %37
  %41 = load float, ptr %40, align 4, !invariant.load !297
  %region_0_63_constant_143 = load float, ptr @141, align 4
  %42 = add i32 %38, 0
  %43 = add i32 %37, 1912
  %44 = getelementptr inbounds [8192 x [1960 x float]], ptr %arg3, i32 0, i32 %42, i32 %43
  %45 = load float, ptr %44, align 4, !invariant.load !297
  %multiply.29 = fmul float %region_0_63_constant_143, %45
  %subtract.30 = fsub float %41, %multiply.29
  br label %concatenate.36.merge

concat_index_from_operand_id14:                   ; preds = %concatenate.pivot.131072.8
  %46 = phi i32 [ 131072, %concatenate.pivot.131072.8 ]
  %47 = sub nsw i32 %3, %46
  %48 = mul nuw nsw i32 %47, 1
  %49 = add nuw nsw i32 0, %48
  %50 = urem i32 %49, 32
  %51 = udiv i32 %49, 32
  %52 = udiv i32 %51, 8192
  %53 = getelementptr inbounds [8192 x [32 x float]], ptr %arg9, i32 0, i32 %51, i32 %50
  %54 = load float, ptr %53, align 4, !invariant.load !297
  %region_0_63_constant_205 = load float, ptr @140, align 4
  %55 = add i32 %51, 0
  %56 = add i32 %50, 20
  %57 = getelementptr inbounds [8192 x [124 x float]], ptr %arg10, i32 0, i32 %55, i32 %56
  %58 = load float, ptr %57, align 4, !invariant.load !297
  %multiply.33 = fmul float %region_0_63_constant_205, %58
  %subtract.34 = fsub float %54, %multiply.33
  br label %concatenate.36.merge

concatenate.pivot.131072.6:                       ; preds = %concatenate.26.merge
  %59 = icmp ult i32 %3, 131072
  br i1 %59, label %concatenate.pivot.0.7, label %concatenate.pivot.131072.8

concatenate.pivot.0.7:                            ; preds = %concatenate.pivot.131072.6
  br label %concat_index_from_operand_id02

concatenate.pivot.131072.8:                       ; preds = %concatenate.pivot.131072.6
  br label %concat_index_from_operand_id14

concatenate.36.merge:                             ; preds = %concat_index_from_operand_id14, %concat_index_from_operand_id02
  %60 = phi float [ %subtract.30, %concat_index_from_operand_id02 ], [ %subtract.34, %concat_index_from_operand_id14 ]
  br label %concatenate.pivot.131072.13

concat_index_from_operand_id09:                   ; preds = %concatenate.pivot.0.14
  %61 = phi i32 [ 0, %concatenate.pivot.0.14 ]
  %62 = sub nsw i32 %3, %61
  %63 = mul nuw nsw i32 %62, 1
  %64 = add nuw nsw i32 0, %63
  %65 = urem i32 %64, 16
  %66 = udiv i32 %64, 16
  %67 = udiv i32 %66, 8192
  %68 = getelementptr inbounds [8192 x [16 x float]], ptr %arg4, i32 0, i32 %66, i32 %65
  %69 = load float, ptr %68, align 4, !invariant.load !297
  %region_0_63_constant_1410 = load float, ptr @141, align 4
  %70 = add i32 %66, 0
  %71 = add i32 %65, 0
  %72 = getelementptr inbounds [8192 x [24 x float]], ptr %arg5, i32 0, i32 %70, i32 %71
  %73 = load float, ptr %72, align 4, !invariant.load !297
  %multiply.39 = fmul float %region_0_63_constant_1410, %73
  %subtract.40 = fsub float %69, %multiply.39
  br label %concatenate.46.merge

concat_index_from_operand_id111:                  ; preds = %concatenate.pivot.131072.15
  %74 = phi i32 [ 131072, %concatenate.pivot.131072.15 ]
  %75 = sub nsw i32 %3, %74
  %76 = mul nuw nsw i32 %75, 1
  %77 = add nuw nsw i32 0, %76
  %78 = urem i32 %77, 32
  %79 = udiv i32 %77, 32
  %80 = udiv i32 %79, 8192
  %81 = getelementptr inbounds [8192 x [32 x float]], ptr %arg11, i32 0, i32 %79, i32 %78
  %82 = load float, ptr %81, align 4, !invariant.load !297
  %region_0_63_constant_2012 = load float, ptr @140, align 4
  %83 = add i32 %79, 0
  %84 = add i32 %78, 1928
  %85 = getelementptr inbounds [8192 x [1960 x float]], ptr %arg7, i32 0, i32 %83, i32 %84
  %86 = load float, ptr %85, align 4, !invariant.load !297
  %multiply.43 = fmul float %region_0_63_constant_2012, %86
  %subtract.44 = fsub float %82, %multiply.43
  br label %concatenate.46.merge

concatenate.pivot.131072.13:                      ; preds = %concatenate.36.merge
  %87 = icmp ult i32 %3, 131072
  br i1 %87, label %concatenate.pivot.0.14, label %concatenate.pivot.131072.15

concatenate.pivot.0.14:                           ; preds = %concatenate.pivot.131072.13
  br label %concat_index_from_operand_id09

concatenate.pivot.131072.15:                      ; preds = %concatenate.pivot.131072.13
  br label %concat_index_from_operand_id111

concatenate.46.merge:                             ; preds = %concat_index_from_operand_id111, %concat_index_from_operand_id09
  %88 = phi float [ %subtract.40, %concat_index_from_operand_id09 ], [ %subtract.44, %concat_index_from_operand_id111 ]
  br label %concatenate.pivot.131072.20

concat_index_from_operand_id016:                  ; preds = %concatenate.pivot.0.21
  %89 = phi i32 [ 0, %concatenate.pivot.0.21 ]
  %90 = sub nsw i32 %3, %89
  %91 = mul nuw nsw i32 %90, 1
  %92 = add nuw nsw i32 0, %91
  %93 = urem i32 %92, 16
  %94 = udiv i32 %92, 16
  %95 = udiv i32 %94, 8192
  %96 = getelementptr inbounds [8192 x [16 x float]], ptr %arg6, i32 0, i32 %94, i32 %93
  %97 = load float, ptr %96, align 4, !invariant.load !297
  %region_0_63_constant_1417 = load float, ptr @141, align 4
  %98 = add i32 %94, 0
  %99 = add i32 %93, 1912
  %100 = getelementptr inbounds [8192 x [1960 x float]], ptr %arg7, i32 0, i32 %98, i32 %99
  %101 = load float, ptr %100, align 4, !invariant.load !297
  %multiply.49 = fmul float %region_0_63_constant_1417, %101
  %subtract.50 = fsub float %97, %multiply.49
  br label %concatenate.56.merge

concat_index_from_operand_id118:                  ; preds = %concatenate.pivot.131072.22
  %102 = phi i32 [ 131072, %concatenate.pivot.131072.22 ]
  %103 = sub nsw i32 %3, %102
  %104 = mul nuw nsw i32 %103, 1
  %105 = add nuw nsw i32 0, %104
  %106 = urem i32 %105, 32
  %107 = udiv i32 %105, 32
  %108 = udiv i32 %107, 8192
  %109 = getelementptr inbounds [8192 x [32 x float]], ptr %arg12, i32 0, i32 %107, i32 %106
  %110 = load float, ptr %109, align 4, !invariant.load !297
  %region_0_63_constant_2019 = load float, ptr @140, align 4
  %111 = add i32 %107, 0
  %112 = add i32 %106, 1928
  %113 = getelementptr inbounds [8192 x [1960 x float]], ptr %arg3, i32 0, i32 %111, i32 %112
  %114 = load float, ptr %113, align 4, !invariant.load !297
  %multiply.53 = fmul float %region_0_63_constant_2019, %114
  %subtract.54 = fsub float %110, %multiply.53
  br label %concatenate.56.merge

concatenate.pivot.131072.20:                      ; preds = %concatenate.46.merge
  %115 = icmp ult i32 %3, 131072
  br i1 %115, label %concatenate.pivot.0.21, label %concatenate.pivot.131072.22

concatenate.pivot.0.21:                           ; preds = %concatenate.pivot.131072.20
  br label %concat_index_from_operand_id016

concatenate.pivot.131072.22:                      ; preds = %concatenate.pivot.131072.20
  br label %concat_index_from_operand_id118

concatenate.56.merge:                             ; preds = %concat_index_from_operand_id118, %concat_index_from_operand_id016
  %116 = phi float [ %subtract.50, %concat_index_from_operand_id016 ], [ %subtract.54, %concat_index_from_operand_id118 ]
  br label %concatenate.pivot.131072.32

concat_index_from_operand_id024:                  ; preds = %concatenate.pivot.0.33
  %117 = phi i32 [ 0, %concatenate.pivot.0.33 ]
  %118 = sub nsw i32 %3, %117
  %119 = mul nuw nsw i32 %118, 1
  %120 = add nuw nsw i32 0, %119
  %121 = urem i32 %120, 16
  %122 = udiv i32 %120, 16
  %123 = udiv i32 %122, 8192
  %124 = getelementptr inbounds [8192 x [16 x float]], ptr %arg0, i32 0, i32 %122, i32 %121
  %125 = load float, ptr %124, align 4, !invariant.load !297
  %region_0_63_constant_1425 = load float, ptr @141, align 4
  %126 = add i32 %122, 0
  %127 = add i32 %121, 1912
  %128 = getelementptr inbounds [8192 x [1960 x float]], ptr %arg1, i32 0, i32 %126, i32 %127
  %129 = load float, ptr %128, align 4, !invariant.load !297
  %multiply.1726 = fmul float %region_0_63_constant_1425, %129
  %subtract.1827 = fsub float %125, %multiply.1726
  br label %concatenate.26.merge23

concat_index_from_operand_id128:                  ; preds = %concatenate.pivot.131072.34
  %130 = phi i32 [ 131072, %concatenate.pivot.131072.34 ]
  %131 = sub nsw i32 %3, %130
  %132 = mul nuw nsw i32 %131, 1
  %133 = add nuw nsw i32 0, %132
  %134 = urem i32 %133, 32
  %135 = udiv i32 %133, 32
  %136 = udiv i32 %135, 8192
  %137 = getelementptr inbounds [8192 x [32 x float]], ptr %arg8, i32 0, i32 %135, i32 %134
  %138 = load float, ptr %137, align 4, !invariant.load !297
  %region_0_63_constant_2029 = load float, ptr @140, align 4
  %139 = add i32 %135, 0
  %140 = add i32 %134, 1928
  %141 = getelementptr inbounds [8192 x [1960 x float]], ptr %arg1, i32 0, i32 %139, i32 %140
  %142 = load float, ptr %141, align 4, !invariant.load !297
  %multiply.2330 = fmul float %region_0_63_constant_2029, %142
  %subtract.2431 = fsub float %138, %multiply.2330
  br label %concatenate.26.merge23

concatenate.pivot.131072.32:                      ; preds = %concatenate.56.merge
  %143 = icmp ult i32 %3, 131072
  br i1 %143, label %concatenate.pivot.0.33, label %concatenate.pivot.131072.34

concatenate.pivot.0.33:                           ; preds = %concatenate.pivot.131072.32
  br label %concat_index_from_operand_id024

concatenate.pivot.131072.34:                      ; preds = %concatenate.pivot.131072.32
  br label %concat_index_from_operand_id128

concatenate.26.merge23:                           ; preds = %concat_index_from_operand_id128, %concat_index_from_operand_id024
  %144 = phi float [ %subtract.1827, %concat_index_from_operand_id024 ], [ %subtract.2431, %concat_index_from_operand_id128 ]
  br label %concatenate.pivot.131072.44

concat_index_from_operand_id036:                  ; preds = %concatenate.pivot.0.45
  %145 = phi i32 [ 0, %concatenate.pivot.0.45 ]
  %146 = sub nsw i32 %3, %145
  %147 = mul nuw nsw i32 %146, 1
  %148 = add nuw nsw i32 0, %147
  %149 = urem i32 %148, 16
  %150 = udiv i32 %148, 16
  %151 = udiv i32 %150, 8192
  %152 = getelementptr inbounds [8192 x [16 x float]], ptr %arg2, i32 0, i32 %150, i32 %149
  %153 = load float, ptr %152, align 4, !invariant.load !297
  %region_0_63_constant_1437 = load float, ptr @141, align 4
  %154 = add i32 %150, 0
  %155 = add i32 %149, 1912
  %156 = getelementptr inbounds [8192 x [1960 x float]], ptr %arg3, i32 0, i32 %154, i32 %155
  %157 = load float, ptr %156, align 4, !invariant.load !297
  %multiply.2938 = fmul float %region_0_63_constant_1437, %157
  %subtract.3039 = fsub float %153, %multiply.2938
  br label %concatenate.36.merge35

concat_index_from_operand_id140:                  ; preds = %concatenate.pivot.131072.46
  %158 = phi i32 [ 131072, %concatenate.pivot.131072.46 ]
  %159 = sub nsw i32 %3, %158
  %160 = mul nuw nsw i32 %159, 1
  %161 = add nuw nsw i32 0, %160
  %162 = urem i32 %161, 32
  %163 = udiv i32 %161, 32
  %164 = udiv i32 %163, 8192
  %165 = getelementptr inbounds [8192 x [32 x float]], ptr %arg9, i32 0, i32 %163, i32 %162
  %166 = load float, ptr %165, align 4, !invariant.load !297
  %region_0_63_constant_2041 = load float, ptr @140, align 4
  %167 = add i32 %163, 0
  %168 = add i32 %162, 20
  %169 = getelementptr inbounds [8192 x [124 x float]], ptr %arg10, i32 0, i32 %167, i32 %168
  %170 = load float, ptr %169, align 4, !invariant.load !297
  %multiply.3342 = fmul float %region_0_63_constant_2041, %170
  %subtract.3443 = fsub float %166, %multiply.3342
  br label %concatenate.36.merge35

concatenate.pivot.131072.44:                      ; preds = %concatenate.26.merge23
  %171 = icmp ult i32 %3, 131072
  br i1 %171, label %concatenate.pivot.0.45, label %concatenate.pivot.131072.46

concatenate.pivot.0.45:                           ; preds = %concatenate.pivot.131072.44
  br label %concat_index_from_operand_id036

concatenate.pivot.131072.46:                      ; preds = %concatenate.pivot.131072.44
  br label %concat_index_from_operand_id140

concatenate.36.merge35:                           ; preds = %concat_index_from_operand_id140, %concat_index_from_operand_id036
  %172 = phi float [ %subtract.3039, %concat_index_from_operand_id036 ], [ %subtract.3443, %concat_index_from_operand_id140 ]
  br label %concatenate.pivot.131072.56

concat_index_from_operand_id048:                  ; preds = %concatenate.pivot.0.57
  %173 = phi i32 [ 0, %concatenate.pivot.0.57 ]
  %174 = sub nsw i32 %3, %173
  %175 = mul nuw nsw i32 %174, 1
  %176 = add nuw nsw i32 0, %175
  %177 = urem i32 %176, 16
  %178 = udiv i32 %176, 16
  %179 = udiv i32 %178, 8192
  %180 = getelementptr inbounds [8192 x [16 x float]], ptr %arg4, i32 0, i32 %178, i32 %177
  %181 = load float, ptr %180, align 4, !invariant.load !297
  %region_0_63_constant_1449 = load float, ptr @141, align 4
  %182 = add i32 %178, 0
  %183 = add i32 %177, 0
  %184 = getelementptr inbounds [8192 x [24 x float]], ptr %arg5, i32 0, i32 %182, i32 %183
  %185 = load float, ptr %184, align 4, !invariant.load !297
  %multiply.3950 = fmul float %region_0_63_constant_1449, %185
  %subtract.4051 = fsub float %181, %multiply.3950
  br label %concatenate.46.merge47

concat_index_from_operand_id152:                  ; preds = %concatenate.pivot.131072.58
  %186 = phi i32 [ 131072, %concatenate.pivot.131072.58 ]
  %187 = sub nsw i32 %3, %186
  %188 = mul nuw nsw i32 %187, 1
  %189 = add nuw nsw i32 0, %188
  %190 = urem i32 %189, 32
  %191 = udiv i32 %189, 32
  %192 = udiv i32 %191, 8192
  %193 = getelementptr inbounds [8192 x [32 x float]], ptr %arg11, i32 0, i32 %191, i32 %190
  %194 = load float, ptr %193, align 4, !invariant.load !297
  %region_0_63_constant_2053 = load float, ptr @140, align 4
  %195 = add i32 %191, 0
  %196 = add i32 %190, 1928
  %197 = getelementptr inbounds [8192 x [1960 x float]], ptr %arg7, i32 0, i32 %195, i32 %196
  %198 = load float, ptr %197, align 4, !invariant.load !297
  %multiply.4354 = fmul float %region_0_63_constant_2053, %198
  %subtract.4455 = fsub float %194, %multiply.4354
  br label %concatenate.46.merge47

concatenate.pivot.131072.56:                      ; preds = %concatenate.36.merge35
  %199 = icmp ult i32 %3, 131072
  br i1 %199, label %concatenate.pivot.0.57, label %concatenate.pivot.131072.58

concatenate.pivot.0.57:                           ; preds = %concatenate.pivot.131072.56
  br label %concat_index_from_operand_id048

concatenate.pivot.131072.58:                      ; preds = %concatenate.pivot.131072.56
  br label %concat_index_from_operand_id152

concatenate.46.merge47:                           ; preds = %concat_index_from_operand_id152, %concat_index_from_operand_id048
  %200 = phi float [ %subtract.4051, %concat_index_from_operand_id048 ], [ %subtract.4455, %concat_index_from_operand_id152 ]
  br label %concatenate.pivot.131072.68

concat_index_from_operand_id060:                  ; preds = %concatenate.pivot.0.69
  %201 = phi i32 [ 0, %concatenate.pivot.0.69 ]
  %202 = sub nsw i32 %3, %201
  %203 = mul nuw nsw i32 %202, 1
  %204 = add nuw nsw i32 0, %203
  %205 = urem i32 %204, 16
  %206 = udiv i32 %204, 16
  %207 = udiv i32 %206, 8192
  %208 = getelementptr inbounds [8192 x [16 x float]], ptr %arg6, i32 0, i32 %206, i32 %205
  %209 = load float, ptr %208, align 4, !invariant.load !297
  %region_0_63_constant_1461 = load float, ptr @141, align 4
  %210 = add i32 %206, 0
  %211 = add i32 %205, 1912
  %212 = getelementptr inbounds [8192 x [1960 x float]], ptr %arg7, i32 0, i32 %210, i32 %211
  %213 = load float, ptr %212, align 4, !invariant.load !297
  %multiply.4962 = fmul float %region_0_63_constant_1461, %213
  %subtract.5063 = fsub float %209, %multiply.4962
  br label %concatenate.56.merge59

concat_index_from_operand_id164:                  ; preds = %concatenate.pivot.131072.70
  %214 = phi i32 [ 131072, %concatenate.pivot.131072.70 ]
  %215 = sub nsw i32 %3, %214
  %216 = mul nuw nsw i32 %215, 1
  %217 = add nuw nsw i32 0, %216
  %218 = urem i32 %217, 32
  %219 = udiv i32 %217, 32
  %220 = udiv i32 %219, 8192
  %221 = getelementptr inbounds [8192 x [32 x float]], ptr %arg12, i32 0, i32 %219, i32 %218
  %222 = load float, ptr %221, align 4, !invariant.load !297
  %region_0_63_constant_2065 = load float, ptr @140, align 4
  %223 = add i32 %219, 0
  %224 = add i32 %218, 1928
  %225 = getelementptr inbounds [8192 x [1960 x float]], ptr %arg3, i32 0, i32 %223, i32 %224
  %226 = load float, ptr %225, align 4, !invariant.load !297
  %multiply.5366 = fmul float %region_0_63_constant_2065, %226
  %subtract.5467 = fsub float %222, %multiply.5366
  br label %concatenate.56.merge59

concatenate.pivot.131072.68:                      ; preds = %concatenate.46.merge47
  %227 = icmp ult i32 %3, 131072
  br i1 %227, label %concatenate.pivot.0.69, label %concatenate.pivot.131072.70

concatenate.pivot.0.69:                           ; preds = %concatenate.pivot.131072.68
  br label %concat_index_from_operand_id060

concatenate.pivot.131072.70:                      ; preds = %concatenate.pivot.131072.68
  br label %concat_index_from_operand_id164

concatenate.56.merge59:                           ; preds = %concat_index_from_operand_id164, %concat_index_from_operand_id060
  %228 = phi float [ %subtract.5063, %concat_index_from_operand_id060 ], [ %subtract.5467, %concat_index_from_operand_id164 ]
  %229 = icmp sge i32 %3, 0
  %230 = icmp slt i32 %3, 131072
  %231 = and i1 %229, %230
  br i1 %231, label %slice0-true, label %slice0-after

slice0-after:                                     ; preds = %slice0-true, %concatenate.56.merge59
  %232 = icmp sge i32 %3, 0
  %233 = icmp slt i32 %3, 131072
  %234 = and i1 %232, %233
  br i1 %234, label %slice1-true, label %slice1-after

slice1-after:                                     ; preds = %slice1-true, %slice0-after
  %235 = icmp sge i32 %3, 0
  %236 = icmp slt i32 %3, 131072
  %237 = and i1 %235, %236
  br i1 %237, label %slice2-true, label %slice2-after

slice2-after:                                     ; preds = %slice2-true, %slice1-after
  %238 = icmp sge i32 %3, 0
  %239 = icmp slt i32 %3, 131072
  %240 = and i1 %238, %239
  br i1 %240, label %slice3-true, label %slice3-after

slice3-after:                                     ; preds = %slice3-true, %slice2-after
  %241 = icmp sge i32 %3, 131072
  %242 = icmp slt i32 %3, 393216
  %243 = and i1 %241, %242
  br i1 %243, label %slice4-true, label %slice4-after

slice4-after:                                     ; preds = %slice4-true, %slice3-after
  %244 = icmp sge i32 %3, 131072
  %245 = icmp slt i32 %3, 393216
  %246 = and i1 %244, %245
  br i1 %246, label %slice5-true, label %slice5-after

slice5-after:                                     ; preds = %slice5-true, %slice4-after
  %247 = icmp sge i32 %3, 131072
  %248 = icmp slt i32 %3, 393216
  %249 = and i1 %247, %248
  br i1 %249, label %slice6-true, label %slice6-after

slice6-after:                                     ; preds = %slice6-true, %slice5-after
  %250 = icmp sge i32 %3, 131072
  %251 = icmp slt i32 %3, 393216
  %252 = and i1 %250, %251
  br i1 %252, label %slice7-true, label %slice7-after

slice7-after:                                     ; preds = %slice7-true, %slice6-after
  br label %copy_fusion_4.in_bounds-after

slice0-true:                                      ; preds = %concatenate.56.merge59
  %253 = sub i32 %3, 0
  %254 = getelementptr inbounds [131072 x float], ptr %arg13, i32 0, i32 %253
  store float %32, ptr %254, align 4
  br label %slice0-after

slice1-true:                                      ; preds = %slice0-after
  %255 = sub i32 %3, 0
  %256 = getelementptr inbounds [131072 x float], ptr %arg14, i32 0, i32 %255
  store float %60, ptr %256, align 4
  br label %slice1-after

slice2-true:                                      ; preds = %slice1-after
  %257 = sub i32 %3, 0
  %258 = getelementptr inbounds [131072 x float], ptr %arg15, i32 0, i32 %257
  store float %88, ptr %258, align 4
  br label %slice2-after

slice3-true:                                      ; preds = %slice2-after
  %259 = sub i32 %3, 0
  %260 = getelementptr inbounds [131072 x float], ptr %arg16, i32 0, i32 %259
  store float %116, ptr %260, align 4
  br label %slice3-after

slice4-true:                                      ; preds = %slice3-after
  %261 = sub i32 %3, 131072
  %262 = getelementptr inbounds [262144 x float], ptr %arg17, i32 0, i32 %261
  store float %144, ptr %262, align 4
  br label %slice4-after

slice5-true:                                      ; preds = %slice4-after
  %263 = sub i32 %3, 131072
  %264 = getelementptr inbounds [262144 x float], ptr %arg18, i32 0, i32 %263
  store float %172, ptr %264, align 4
  br label %slice5-after

slice6-true:                                      ; preds = %slice5-after
  %265 = sub i32 %3, 131072
  %266 = getelementptr inbounds [262144 x float], ptr %arg19, i32 0, i32 %265
  store float %200, ptr %266, align 4
  br label %slice6-after

slice7-true:                                      ; preds = %slice6-after
  %267 = sub i32 %3, 131072
  %268 = getelementptr inbounds [262144 x float], ptr %arg20, i32 0, i32 %267
  store float %228, ptr %268, align 4
  br label %slice7-after
}

attributes #0 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #4 = { nounwind memory(none) }

!nvvm.annotations = !{!0, !1, !2, !3, !4, !5, !6, !7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291}

!0 = !{ptr @fusion_389, !"kernel", i32 1}
!1 = !{ptr @fusion_389, !"reqntidx", i32 512}
!2 = !{ptr @fusion_396, !"kernel", i32 1}
!3 = !{ptr @fusion_396, !"reqntidx", i32 512}
!4 = !{ptr @concatenate_103, !"kernel", i32 1}
!5 = !{ptr @concatenate_103, !"reqntidx", i32 1024}
!6 = !{ptr @concatenate_105, !"kernel", i32 1}
!7 = !{ptr @concatenate_105, !"reqntidx", i32 1024}
!8 = !{ptr @fusion_395, !"kernel", i32 1}
!9 = !{ptr @fusion_395, !"reqntidx", i32 512}
!10 = !{ptr @concatenate_68, !"kernel", i32 1}
!11 = !{ptr @concatenate_68, !"reqntidx", i32 1024}
!12 = !{ptr @concatenate_70, !"kernel", i32 1}
!13 = !{ptr @concatenate_70, !"reqntidx", i32 1024}
!14 = !{ptr @fusion_465, !"kernel", i32 1}
!15 = !{ptr @fusion_465, !"reqntidx", i32 96}
!16 = !{ptr @concatenate_85, !"kernel", i32 1}
!17 = !{ptr @concatenate_85, !"reqntidx", i32 1024}
!18 = !{ptr @concatenate_69, !"kernel", i32 1}
!19 = !{ptr @concatenate_69, !"reqntidx", i32 1024}
!20 = !{ptr @concatenate_71, !"kernel", i32 1}
!21 = !{ptr @concatenate_71, !"reqntidx", i32 1024}
!22 = !{ptr @concatenate_60, !"kernel", i32 1}
!23 = !{ptr @concatenate_60, !"reqntidx", i32 1024}
!24 = !{ptr @concatenate_76, !"kernel", i32 1}
!25 = !{ptr @concatenate_76, !"reqntidx", i32 1024}
!26 = !{ptr @concatenate_73, !"kernel", i32 1}
!27 = !{ptr @concatenate_73, !"reqntidx", i32 1024}
!28 = !{ptr @concatenate_61, !"kernel", i32 1}
!29 = !{ptr @concatenate_61, !"reqntidx", i32 1024}
!30 = !{ptr @concatenate_77, !"kernel", i32 1}
!31 = !{ptr @concatenate_77, !"reqntidx", i32 1024}
!32 = !{ptr @concatenate_104, !"kernel", i32 1}
!33 = !{ptr @concatenate_104, !"reqntidx", i32 256}
!34 = !{ptr @concatenate_106, !"kernel", i32 1}
!35 = !{ptr @concatenate_106, !"reqntidx", i32 256}
!36 = !{ptr @fusion_380, !"kernel", i32 1}
!37 = !{ptr @fusion_380, !"reqntidx", i32 1024}
!38 = !{ptr @concatenate_101, !"kernel", i32 1}
!39 = !{ptr @concatenate_101, !"reqntidx", i32 256}
!40 = !{ptr @fusion_441, !"kernel", i32 1}
!41 = !{ptr @fusion_441, !"reqntidx", i32 32}
!42 = !{ptr @fusion_441, !"reqntidy", i32 4}
!43 = !{ptr @slice_175, !"kernel", i32 1}
!44 = !{ptr @slice_175, !"reqntidx", i32 256}
!45 = !{ptr @slice_174, !"kernel", i32 1}
!46 = !{ptr @slice_174, !"reqntidx", i32 256}
!47 = !{ptr @fusion_508, !"kernel", i32 1}
!48 = !{ptr @fusion_508, !"reqntidx", i32 256}
!49 = !{ptr @fusion_505, !"kernel", i32 1}
!50 = !{ptr @fusion_505, !"reqntidx", i32 96}
!51 = !{ptr @fusion_504, !"kernel", i32 1}
!52 = !{ptr @fusion_504, !"reqntidx", i32 1024}
!53 = !{ptr @fusion_497, !"kernel", i32 1}
!54 = !{ptr @fusion_497, !"reqntidx", i32 96}
!55 = !{ptr @fusion_616, !"kernel", i32 1}
!56 = !{ptr @fusion_616, !"reqntidx", i32 256}
!57 = !{ptr @concatenate_100, !"kernel", i32 1}
!58 = !{ptr @concatenate_100, !"reqntidx", i32 256}
!59 = !{ptr @fusion_523, !"kernel", i32 1}
!60 = !{ptr @fusion_523, !"reqntidx", i32 256}
!61 = !{ptr @fusion_520, !"kernel", i32 1}
!62 = !{ptr @fusion_520, !"reqntidx", i32 96}
!63 = !{ptr @slice_166, !"kernel", i32 1}
!64 = !{ptr @slice_166, !"reqntidx", i32 256}
!65 = !{ptr @slice_164, !"kernel", i32 1}
!66 = !{ptr @slice_164, !"reqntidx", i32 256}
!67 = !{ptr @slice_162, !"kernel", i32 1}
!68 = !{ptr @slice_162, !"reqntidx", i32 256}
!69 = !{ptr @fusion_565, !"kernel", i32 1}
!70 = !{ptr @fusion_565, !"reqntidx", i32 256}
!71 = !{ptr @add_344, !"kernel", i32 1}
!72 = !{ptr @add_344, !"reqntidx", i32 128}
!73 = !{ptr @fusion_564, !"kernel", i32 1}
!74 = !{ptr @fusion_564, !"reqntidx", i32 256}
!75 = !{ptr @fusion_563, !"kernel", i32 1}
!76 = !{ptr @fusion_563, !"reqntidx", i32 256}
!77 = !{ptr @fusion_561, !"kernel", i32 1}
!78 = !{ptr @fusion_561, !"reqntidx", i32 96}
!79 = !{ptr @fusion_599, !"kernel", i32 1}
!80 = !{ptr @fusion_599, !"reqntidx", i32 256}
!81 = !{ptr @fusion_633, !"kernel", i32 1}
!82 = !{ptr @fusion_633, !"reqntidx", i32 96}
!83 = !{ptr @fusion_463, !"kernel", i32 1}
!84 = !{ptr @fusion_463, !"reqntidx", i32 96}
!85 = !{ptr @fusion_461, !"kernel", i32 1}
!86 = !{ptr @fusion_461, !"reqntidx", i32 1024}
!87 = !{ptr @slice_124, !"kernel", i32 1}
!88 = !{ptr @slice_124, !"reqntidx", i32 256}
!89 = !{ptr @slice_122, !"kernel", i32 1}
!90 = !{ptr @slice_122, !"reqntidx", i32 256}
!91 = !{ptr @slice_189, !"kernel", i32 1}
!92 = !{ptr @slice_189, !"reqntidx", i32 256}
!93 = !{ptr @slice_120, !"kernel", i32 1}
!94 = !{ptr @slice_120, !"reqntidx", i32 256}
!95 = !{ptr @fusion_650, !"kernel", i32 1}
!96 = !{ptr @fusion_650, !"reqntidx", i32 256}
!97 = !{ptr @fusion_648, !"kernel", i32 1}
!98 = !{ptr @fusion_648, !"reqntidx", i32 256}
!99 = !{ptr @fusion_646, !"kernel", i32 1}
!100 = !{ptr @fusion_646, !"reqntidx", i32 96}
!101 = !{ptr @slice_160, !"kernel", i32 1}
!102 = !{ptr @slice_160, !"reqntidx", i32 256}
!103 = !{ptr @fusion_580, !"kernel", i32 1}
!104 = !{ptr @fusion_580, !"reqntidx", i32 256}
!105 = !{ptr @fusion_621, !"kernel", i32 1}
!106 = !{ptr @fusion_621, !"reqntidx", i32 256}
!107 = !{ptr @concatenate_112, !"kernel", i32 1}
!108 = !{ptr @concatenate_112, !"reqntidx", i32 256}
!109 = !{ptr @fusion_642, !"kernel", i32 1}
!110 = !{ptr @fusion_642, !"reqntidx", i32 226}
!111 = !{ptr @fusion_533, !"kernel", i32 1}
!112 = !{ptr @fusion_533, !"reqntidx", i32 96}
!113 = !{ptr @fusion_639, !"kernel", i32 1}
!114 = !{ptr @fusion_639, !"reqntidx", i32 96}
!115 = !{ptr @concatenate_87, !"kernel", i32 1}
!116 = !{ptr @concatenate_87, !"reqntidx", i32 256}
!117 = !{ptr @add_520, !"kernel", i32 1}
!118 = !{ptr @add_520, !"reqntidx", i32 128}
!119 = !{ptr @fusion_428, !"kernel", i32 1}
!120 = !{ptr @fusion_428, !"reqntidx", i32 256}
!121 = !{ptr @fusion_438, !"kernel", i32 1}
!122 = !{ptr @fusion_438, !"reqntidx", i32 256}
!123 = !{ptr @fusion_437, !"kernel", i32 1}
!124 = !{ptr @fusion_437, !"reqntidx", i32 256}
!125 = !{ptr @fusion_433, !"kernel", i32 1}
!126 = !{ptr @fusion_433, !"reqntidx", i32 96}
!127 = !{ptr @concatenate_107, !"kernel", i32 1}
!128 = !{ptr @concatenate_107, !"reqntidx", i32 1024}
!129 = !{ptr @fusion_422, !"kernel", i32 1}
!130 = !{ptr @fusion_422, !"reqntidx", i32 256}
!131 = !{ptr @fusion_418, !"kernel", i32 1}
!132 = !{ptr @fusion_418, !"reqntidx", i32 96}
!133 = !{ptr @fusion_549, !"kernel", i32 1}
!134 = !{ptr @fusion_549, !"reqntidx", i32 32}
!135 = !{ptr @fusion_549, !"reqntidy", i32 4}
!136 = !{ptr @fusion_547, !"kernel", i32 1}
!137 = !{ptr @fusion_547, !"reqntidx", i32 96}
!138 = !{ptr @fusion_663, !"kernel", i32 1}
!139 = !{ptr @fusion_663, !"reqntidx", i32 1024}
!140 = !{ptr @fusion_531, !"kernel", i32 1}
!141 = !{ptr @fusion_531, !"reqntidx", i32 8}
!142 = !{ptr @fusion_531, !"reqntidy", i32 16}
!143 = !{ptr @fusion_530, !"kernel", i32 1}
!144 = !{ptr @fusion_530, !"reqntidx", i32 16}
!145 = !{ptr @fusion_530, !"reqntidy", i32 8}
!146 = !{ptr @fusion_527, !"kernel", i32 1}
!147 = !{ptr @fusion_527, !"reqntidx", i32 1024}
!148 = !{ptr @fusion_378, !"kernel", i32 1}
!149 = !{ptr @fusion_378, !"reqntidx", i32 1024}
!150 = !{ptr @fusion_331, !"kernel", i32 1}
!151 = !{ptr @fusion_331, !"reqntidx", i32 64}
!152 = !{ptr @reduce_4727, !"kernel", i32 1}
!153 = !{ptr @reduce_4727, !"reqntidx", i32 32}
!154 = !{ptr @fusion_679, !"kernel", i32 1}
!155 = !{ptr @fusion_679, !"reqntidx", i32 512}
!156 = !{ptr @fusion_360, !"kernel", i32 1}
!157 = !{ptr @fusion_360, !"reqntidx", i32 512}
!158 = !{ptr @fusion_285, !"kernel", i32 1}
!159 = !{ptr @fusion_285, !"reqntidx", i32 1024}
!160 = !{ptr @fusion_310, !"kernel", i32 1}
!161 = !{ptr @fusion_310, !"reqntidx", i32 1024}
!162 = !{ptr @fusion_761, !"kernel", i32 1}
!163 = !{ptr @fusion_761, !"reqntidx", i32 1024}
!164 = !{ptr @fusion_302, !"kernel", i32 1}
!165 = !{ptr @fusion_302, !"reqntidx", i32 1024}
!166 = !{ptr @fusion_793, !"kernel", i32 1}
!167 = !{ptr @fusion_793, !"reqntidx", i32 1024}
!168 = !{ptr @fusion_59, !"kernel", i32 1}
!169 = !{ptr @fusion_59, !"reqntidx", i32 1024}
!170 = !{ptr @fusion_735, !"kernel", i32 1}
!171 = !{ptr @fusion_735, !"reqntidx", i32 1024}
!172 = !{ptr @fusion_61, !"kernel", i32 1}
!173 = !{ptr @fusion_61, !"reqntidx", i32 1024}
!174 = !{ptr @fusion_63, !"kernel", i32 1}
!175 = !{ptr @fusion_63, !"reqntidx", i32 1024}
!176 = !{ptr @fusion_736, !"kernel", i32 1}
!177 = !{ptr @fusion_736, !"reqntidx", i32 1024}
!178 = !{ptr @fusion_800, !"kernel", i32 1}
!179 = !{ptr @fusion_800, !"reqntidx", i32 1024}
!180 = !{ptr @fusion_125, !"kernel", i32 1}
!181 = !{ptr @fusion_125, !"reqntidx", i32 1024}
!182 = !{ptr @fusion_689, !"kernel", i32 1}
!183 = !{ptr @fusion_689, !"reqntidx", i32 512}
!184 = !{ptr @fusion_656, !"kernel", i32 1}
!185 = !{ptr @fusion_656, !"reqntidx", i32 512}
!186 = !{ptr @fusion_75, !"kernel", i32 1}
!187 = !{ptr @fusion_75, !"reqntidx", i32 1024}
!188 = !{ptr @fusion_26, !"kernel", i32 1}
!189 = !{ptr @fusion_26, !"reqntidx", i32 1024}
!190 = !{ptr @fusion_690, !"kernel", i32 1}
!191 = !{ptr @fusion_690, !"reqntidx", i32 1}
!192 = !{ptr @slice_268, !"kernel", i32 1}
!193 = !{ptr @slice_268, !"reqntidx", i32 1024}
!194 = !{ptr @slice_267, !"kernel", i32 1}
!195 = !{ptr @slice_267, !"reqntidx", i32 1024}
!196 = !{ptr @slice_266, !"kernel", i32 1}
!197 = !{ptr @slice_266, !"reqntidx", i32 1024}
!198 = !{ptr @slice_265, !"kernel", i32 1}
!199 = !{ptr @slice_265, !"reqntidx", i32 1024}
!200 = !{ptr @slice_264, !"kernel", i32 1}
!201 = !{ptr @slice_264, !"reqntidx", i32 1024}
!202 = !{ptr @slice_263, !"kernel", i32 1}
!203 = !{ptr @slice_263, !"reqntidx", i32 1024}
!204 = !{ptr @slice_262, !"kernel", i32 1}
!205 = !{ptr @slice_262, !"reqntidx", i32 1024}
!206 = !{ptr @slice_261, !"kernel", i32 1}
!207 = !{ptr @slice_261, !"reqntidx", i32 1024}
!208 = !{ptr @slice_260, !"kernel", i32 1}
!209 = !{ptr @slice_260, !"reqntidx", i32 1024}
!210 = !{ptr @slice_259, !"kernel", i32 1}
!211 = !{ptr @slice_259, !"reqntidx", i32 1024}
!212 = !{ptr @fusion_137, !"kernel", i32 1}
!213 = !{ptr @fusion_137, !"reqntidx", i32 1024}
!214 = !{ptr @fusion_781, !"kernel", i32 1}
!215 = !{ptr @fusion_781, !"reqntidx", i32 1024}
!216 = !{ptr @fusion_715, !"kernel", i32 1}
!217 = !{ptr @fusion_715, !"reqntidx", i32 128}
!218 = !{ptr @fusion_314, !"kernel", i32 1}
!219 = !{ptr @fusion_314, !"reqntidx", i32 1024}
!220 = !{ptr @fusion_199, !"kernel", i32 1}
!221 = !{ptr @fusion_199, !"reqntidx", i32 1024}
!222 = !{ptr @fusion_22, !"kernel", i32 1}
!223 = !{ptr @fusion_22, !"reqntidx", i32 1024}
!224 = !{ptr @fusion_788, !"kernel", i32 1}
!225 = !{ptr @fusion_788, !"reqntidx", i32 1024}
!226 = !{ptr @fusion_714, !"kernel", i32 1}
!227 = !{ptr @fusion_714, !"reqntidx", i32 32}
!228 = !{ptr @fusion_202, !"kernel", i32 1}
!229 = !{ptr @fusion_202, !"reqntidx", i32 1024}
!230 = !{ptr @fusion_727, !"kernel", i32 1}
!231 = !{ptr @fusion_727, !"reqntidx", i32 1024}
!232 = !{ptr @fusion_757, !"kernel", i32 1}
!233 = !{ptr @fusion_757, !"reqntidx", i32 1024}
!234 = !{ptr @fusion_698, !"kernel", i32 1}
!235 = !{ptr @fusion_698, !"reqntidx", i32 1024}
!236 = !{ptr @copy_fusion_2, !"kernel", i32 1}
!237 = !{ptr @copy_fusion_2, !"reqntidx", i32 1024}
!238 = !{ptr @fusion_67, !"kernel", i32 1}
!239 = !{ptr @fusion_67, !"reqntidx", i32 256}
!240 = !{ptr @fusion_177, !"kernel", i32 1}
!241 = !{ptr @fusion_177, !"reqntidx", i32 1024}
!242 = !{ptr @fusion_734, !"kernel", i32 1}
!243 = !{ptr @fusion_734, !"reqntidx", i32 1024}
!244 = !{ptr @fusion_692, !"kernel", i32 1}
!245 = !{ptr @fusion_692, !"reqntidx", i32 128}
!246 = !{ptr @concatenate_102, !"kernel", i32 1}
!247 = !{ptr @concatenate_102, !"reqntidx", i32 256}
!248 = !{ptr @fusion_728, !"kernel", i32 1}
!249 = !{ptr @fusion_728, !"reqntidx", i32 1024}
!250 = !{ptr @fusion_729, !"kernel", i32 1}
!251 = !{ptr @fusion_729, !"reqntidx", i32 1024}
!252 = !{ptr @fusion_725, !"kernel", i32 1}
!253 = !{ptr @fusion_725, !"reqntidx", i32 1024}
!254 = !{ptr @copy_fusion_6, !"kernel", i32 1}
!255 = !{ptr @copy_fusion_6, !"reqntidx", i32 1024}
!256 = !{ptr @fusion_84, !"kernel", i32 1}
!257 = !{ptr @fusion_84, !"reqntidx", i32 1024}
!258 = !{ptr @fusion_711, !"kernel", i32 1}
!259 = !{ptr @fusion_711, !"reqntidx", i32 128}
!260 = !{ptr @fusion_795, !"kernel", i32 1}
!261 = !{ptr @fusion_795, !"reqntidx", i32 1024}
!262 = !{ptr @fusion_709, !"kernel", i32 1}
!263 = !{ptr @fusion_709, !"reqntidx", i32 256}
!264 = !{ptr @copy_fusion_5, !"kernel", i32 1}
!265 = !{ptr @copy_fusion_5, !"reqntidx", i32 1024}
!266 = !{ptr @copy_fusion_1, !"kernel", i32 1}
!267 = !{ptr @copy_fusion_1, !"reqntidx", i32 1024}
!268 = !{ptr @copy_fusion, !"kernel", i32 1}
!269 = !{ptr @copy_fusion, !"reqntidx", i32 1024}
!270 = !{ptr @fusion_726, !"kernel", i32 1}
!271 = !{ptr @fusion_726, !"reqntidx", i32 1024}
!272 = !{ptr @fusion_712, !"kernel", i32 1}
!273 = !{ptr @fusion_712, !"reqntidx", i32 128}
!274 = !{ptr @fusion_708, !"kernel", i32 1}
!275 = !{ptr @fusion_708, !"reqntidx", i32 256}
!276 = !{ptr @fusion_20, !"kernel", i32 1}
!277 = !{ptr @fusion_20, !"reqntidx", i32 1024}
!278 = !{ptr @fusion_802, !"kernel", i32 1}
!279 = !{ptr @fusion_802, !"reqntidx", i32 1024}
!280 = !{ptr @fusion_710, !"kernel", i32 1}
!281 = !{ptr @fusion_710, !"reqntidx", i32 256}
!282 = !{ptr @copy_fusion_3, !"kernel", i32 1}
!283 = !{ptr @copy_fusion_3, !"reqntidx", i32 1024}
!284 = !{ptr @fusion_9, !"kernel", i32 1}
!285 = !{ptr @fusion_9, !"reqntidx", i32 256}
!286 = !{ptr @fusion_8, !"kernel", i32 1}
!287 = !{ptr @fusion_8, !"reqntidx", i32 256}
!288 = !{ptr @fusion_11, !"kernel", i32 1}
!289 = !{ptr @fusion_11, !"reqntidx", i32 256}
!290 = !{ptr @copy_fusion_4, !"kernel", i32 1}
!291 = !{ptr @copy_fusion_4, !"reqntidx", i32 1024}
!292 = !{i32 0, i32 7}
!293 = !{i32 0, i32 512}
!294 = !{i32 0, i32 1}
!295 = distinct !{!295, !296}
!296 = !{!"llvm.loop.vectorize.enable", i1 false}
!297 = !{}
!298 = distinct !{!298, !296, !299}
!299 = !{!"llvm.loop.unroll.full"}
!300 = distinct !{!300, !296, !299}
!301 = distinct !{!301, !296}
!302 = distinct !{!302, !296, !299}
!303 = distinct !{!303, !296, !299}
!304 = distinct !{!304, !296}
!305 = distinct !{!305, !296, !299}
!306 = distinct !{!306, !296, !299}
!307 = distinct !{!307, !296}
!308 = distinct !{!308, !296, !299}
!309 = distinct !{!309, !296, !299}
!310 = distinct !{!310, !296}
!311 = distinct !{!311, !296, !299}
!312 = distinct !{!312, !296, !299}
!313 = distinct !{!313, !296}
!314 = distinct !{!314, !296, !299}
!315 = distinct !{!315, !296, !299}
!316 = distinct !{!316, !296}
!317 = distinct !{!317, !296, !299}
!318 = distinct !{!318, !296, !299}
!319 = !{i32 0, i32 8}
!320 = distinct !{!320, !296}
!321 = distinct !{!321, !296, !299}
!322 = distinct !{!322, !296, !299}
!323 = distinct !{!323, !296}
!324 = distinct !{!324, !296, !299}
!325 = distinct !{!325, !296, !299}
!326 = distinct !{!326, !296}
!327 = distinct !{!327, !296, !299}
!328 = distinct !{!328, !296, !299}
!329 = distinct !{!329, !296}
!330 = distinct !{!330, !296, !299}
!331 = distinct !{!331, !296, !299}
!332 = distinct !{!332, !296}
!333 = distinct !{!333, !296, !299}
!334 = distinct !{!334, !296, !299}
!335 = distinct !{!335, !296}
!336 = distinct !{!336, !296, !299}
!337 = distinct !{!337, !296, !299}
!338 = distinct !{!338, !296}
!339 = distinct !{!339, !296, !299}
!340 = distinct !{!340, !296, !299}
!341 = distinct !{!341, !296}
!342 = distinct !{!342, !296, !299}
!343 = distinct !{!343, !296, !299}
!344 = !{i32 0, i32 2}
!345 = !{i32 0, i32 1024}
!346 = !{i32 0, i32 3}
!347 = distinct !{!347, !296}
!348 = distinct !{!348, !296, !299}
!349 = distinct !{!349, !296, !299}
!350 = !{i32 0, i32 12}
!351 = !{i32 0, i32 16}
!352 = !{i32 0, i32 96}
!353 = !{i32 0, i32 1366}
!354 = distinct !{!354, !296}
!355 = distinct !{!355, !296, !299}
!356 = distinct !{!356, !296, !299}
!357 = !{i32 0, i32 24}
!358 = !{i32 0, i32 32}
!359 = !{i32 0, i32 48}
!360 = !{i32 0, i32 64}
!361 = !{i32 0, i32 128}
!362 = !{i32 0, i32 256}
!363 = !{i32 0, i32 192}
!364 = !{i32 0, i32 480}
!365 = !{i32 0, i32 768}
!366 = !{i32 0, i32 2048}
!367 = !{i32 0, i32 4}
!368 = !{i32 0, i32 2731}
!369 = distinct !{!369, !296}
!370 = distinct !{!370, !296, !299}
!371 = distinct !{!371, !296, !299}
!372 = distinct !{!372, !296}
!373 = distinct !{!373, !296, !299}
!374 = distinct !{!374, !296, !299}
!375 = !{i32 0, i32 2880}
!376 = distinct !{!376, !296}
!377 = distinct !{!377, !296, !299}
!378 = distinct !{!378, !296, !299}
!379 = !{i32 0, i32 864}
!380 = distinct !{!380, !296}
!381 = distinct !{!381, !296}
!382 = distinct !{!382, !296, !299}
!383 = distinct !{!383, !296, !299}
!384 = distinct !{!384, !296}
!385 = distinct !{!385, !296, !299}
!386 = distinct !{!386, !296, !299}
!387 = distinct !{!387, !296}
!388 = distinct !{!388, !296, !299}
!389 = distinct !{!389, !296, !299}
!390 = distinct !{!390, !296}
!391 = distinct !{!391, !296, !299}
!392 = distinct !{!392, !296, !299}
!393 = !{i32 0, i32 7232}
!394 = !{i32 0, i32 8192}
!395 = !{i32 0, i32 226}
!396 = distinct !{!396, !296}
!397 = distinct !{!397, !296, !299}
!398 = distinct !{!398, !296, !299}
!399 = distinct !{!399, !296}
!400 = distinct !{!400, !296, !299}
!401 = distinct !{!401, !296, !299}
!402 = !{i32 0, i32 11840}
!403 = distinct !{!403, !296}
!404 = !{i32 0, i32 4096}
!405 = distinct !{!405, !296}
!406 = distinct !{!406, !296, !299}
!407 = distinct !{!407, !296, !299}
!408 = !{i32 0, i32 15680}
!409 = distinct !{!409, !296}
!410 = distinct !{!410, !296, !299}
!411 = distinct !{!411, !296, !299}
!412 = distinct !{!412, !296}
!413 = distinct !{!413, !296, !299}
!414 = distinct !{!414, !296, !299}
!415 = !{i32 0, i32 992}
!416 = distinct !{!416, !296}
!417 = distinct !{!417, !296, !299}
!418 = distinct !{!418, !296, !299}
!419 = distinct !{!419, !296}
!420 = distinct !{!420, !296, !299}
!421 = distinct !{!421, !296, !299}
!422 = distinct !{!422, !296}
!423 = distinct !{!423, !296, !299}
!424 = distinct !{!424, !296, !299}
!425 = distinct !{!425, !296}
!426 = distinct !{!426, !296, !299}
!427 = distinct !{!427, !296, !299}
!428 = distinct !{!428, !296, !299}
!429 = distinct !{!429, !296}
!430 = distinct !{!430, !296, !299}
!431 = distinct !{!431, !296}
!432 = !{i32 0, i32 5}
!433 = distinct !{!433, !296, !299}
!434 = distinct !{!434, !296}
!435 = distinct !{!435, !296, !299}
!436 = distinct !{!436, !296}
!437 = distinct !{!437, !296, !299}
!438 = distinct !{!438, !296}
!439 = distinct !{!439, !296, !299}
!440 = distinct !{!440, !296}
!441 = distinct !{!441, !296, !299}
!442 = distinct !{!442, !296}
!443 = distinct !{!443, !296, !299}
!444 = distinct !{!444, !296}
!445 = distinct !{!445, !296, !299}
!446 = distinct !{!446, !296}
!447 = distinct !{!447, !296, !299}
!448 = distinct !{!448, !296}
!449 = distinct !{!449, !296, !299}
!450 = distinct !{!450, !296}
!451 = distinct !{!451, !296, !299}
!452 = distinct !{!452, !296}
!453 = distinct !{!453, !296, !299}
!454 = distinct !{!454, !296}
!455 = distinct !{!455, !296, !299}
!456 = distinct !{!456, !296}
!457 = distinct !{!457, !296, !299}
!458 = distinct !{!458, !296}
!459 = distinct !{!459, !296, !299}
!460 = distinct !{!460, !296}
!461 = distinct !{!461, !296, !299}
!462 = distinct !{!462, !296}
!463 = distinct !{!463, !296, !299}
!464 = distinct !{!464, !296}
!465 = distinct !{!465, !296}
!466 = distinct !{!466, !296, !299}
!467 = distinct !{!467, !296, !299}
!468 = distinct !{!468, !296}
!469 = distinct !{!469, !296, !299}
!470 = distinct !{!470, !296, !299}
!471 = distinct !{!471, !296, !299}
!472 = distinct !{!472, !296}
!473 = distinct !{!473, !296, !299}
!474 = distinct !{!474, !296}
!475 = distinct !{!475, !296, !299}
!476 = distinct !{!476, !296}
!477 = distinct !{!477, !296, !299}
!478 = distinct !{!478, !296}
!479 = distinct !{!479, !296, !299}
!480 = distinct !{!480, !296}
!481 = distinct !{!481, !296, !299}
!482 = distinct !{!482, !296}
!483 = distinct !{!483, !296, !299}
!484 = distinct !{!484, !296}
!485 = distinct !{!485, !296, !299}
!486 = distinct !{!486, !296}
!487 = distinct !{!487, !296, !299}
!488 = distinct !{!488, !296}
!489 = distinct !{!489, !296, !299}
!490 = distinct !{!490, !296}
!491 = distinct !{!491, !296, !299}
!492 = distinct !{!492, !296}
!493 = distinct !{!493, !296, !299}
!494 = distinct !{!494, !296}
!495 = distinct !{!495, !296, !299}
!496 = distinct !{!496, !296}
!497 = distinct !{!497, !296, !299}
!498 = distinct !{!498, !296}
!499 = distinct !{!499, !296, !299}
!500 = distinct !{!500, !296}
!501 = distinct !{!501, !296, !299}
!502 = distinct !{!502, !296}
!503 = distinct !{!503, !296, !299}
!504 = distinct !{!504, !296}
!505 = distinct !{!505, !296, !299}
!506 = distinct !{!506, !296}
!507 = !{i32 0, i32 65}
!508 = distinct !{!508, !296, !299}
!509 = distinct !{!509, !296}
!510 = distinct !{!510, !296, !299}
!511 = distinct !{!511, !296}
!512 = !{i32 0, i32 77}
!513 = distinct !{!513, !296, !299}
!514 = distinct !{!514, !296}
!515 = distinct !{!515, !296, !299}
!516 = distinct !{!516, !296}
!517 = distinct !{!517, !296, !299}
!518 = distinct !{!518, !296}
!519 = distinct !{!519, !296, !299}
!520 = distinct !{!520, !296}
!521 = distinct !{!521, !296, !299}
!522 = distinct !{!522, !296}
!523 = !{i32 0, i32 127}
!524 = !{i32 0, i32 17}
!525 = distinct !{!525, !296, !299}
!526 = distinct !{!526, !296}
!527 = distinct !{!527, !296}
!528 = distinct !{!528, !296, !299}
!529 = distinct !{!529, !296}
!530 = distinct !{!530, !296, !299}
!531 = distinct !{!531, !296}
!532 = distinct !{!532, !296, !299}
!533 = distinct !{!533, !296}
!534 = distinct !{!534, !296, !299}
!535 = distinct !{!535, !296}
!536 = distinct !{!536, !296, !299}
!537 = distinct !{!537, !296}
!538 = !{i32 0, i32 740}
!539 = !{i32 0, i32 129}
!540 = !{i32 0, i32 74}
!541 = !{i32 0, i32 225}
!542 = distinct !{!542, !296}
!543 = !{i32 0, i32 1856}
!544 = distinct !{!544, !296, !299}
!545 = distinct !{!545, !296}
!546 = !{i32 0, i32 29}
!547 = distinct !{!547, !296, !299}
!548 = distinct !{!548, !296}
!549 = distinct !{!549, !296, !299}
!550 = distinct !{!550, !296}
!551 = distinct !{!551, !296, !299}
!552 = distinct !{!552, !296}
!553 = !{i32 0, i32 799}
!554 = !{i32 0, i32 161}
!555 = !{i32 0, i32 384}
!556 = !{i32 0, i32 704}
